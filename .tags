!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
1	lib/lua/doc/manual.html	/^<h1>1 - <a name="1">Introduction<\/a><\/h1>$/;"	a
2	lib/lua/doc/manual.html	/^<h1>2 - <a name="2">The Language<\/a><\/h1>$/;"	a
2.1	lib/lua/doc/manual.html	/^<h2>2.1 - <a name="2.1">Lexical Conventions<\/a><\/h2>$/;"	a
2.10	lib/lua/doc/manual.html	/^<h2>2.10 - <a name="2.10">Garbage Collection<\/a><\/h2>$/;"	a
2.10.1	lib/lua/doc/manual.html	/^<h3>2.10.1 - <a name="2.10.1">Garbage-Collection Metamethods<\/a><\/h3>$/;"	a
2.10.2	lib/lua/doc/manual.html	/^<h3>2.10.2 - <a name="2.10.2">Weak Tables<\/a><\/h3>$/;"	a
2.11	lib/lua/doc/manual.html	/^<h2>2.11 - <a name="2.11">Coroutines<\/a><\/h2>$/;"	a
2.2	lib/lua/doc/manual.html	/^<h2>2.2 - <a name="2.2">Values and Types<\/a><\/h2>$/;"	a
2.2.1	lib/lua/doc/manual.html	/^<h3>2.2.1 - <a name="2.2.1">Coercion<\/a><\/h3>$/;"	a
2.3	lib/lua/doc/manual.html	/^<h2>2.3 - <a name="2.3">Variables<\/a><\/h2>$/;"	a
2.4	lib/lua/doc/manual.html	/^<h2>2.4 - <a name="2.4">Statements<\/a><\/h2>$/;"	a
2.4.1	lib/lua/doc/manual.html	/^<h3>2.4.1 - <a name="2.4.1">Chunks<\/a><\/h3>$/;"	a
2.4.2	lib/lua/doc/manual.html	/^<h3>2.4.2 - <a name="2.4.2">Blocks<\/a><\/h3><p>$/;"	a
2.4.3	lib/lua/doc/manual.html	/^<h3>2.4.3 - <a name="2.4.3">Assignment<\/a><\/h3>$/;"	a
2.4.4	lib/lua/doc/manual.html	/^<h3>2.4.4 - <a name="2.4.4">Control Structures<\/a><\/h3><p>$/;"	a
2.4.5	lib/lua/doc/manual.html	/^<h3>2.4.5 - <a name="2.4.5">For Statement<\/a><\/h3>$/;"	a
2.4.6	lib/lua/doc/manual.html	/^<h3>2.4.6 - <a name="2.4.6">Function Calls as Statements<\/a><\/h3><p>$/;"	a
2.4.7	lib/lua/doc/manual.html	/^<h3>2.4.7 - <a name="2.4.7">Local Declarations<\/a><\/h3><p>$/;"	a
2.5	lib/lua/doc/manual.html	/^<h2>2.5 - <a name="2.5">Expressions<\/a><\/h2>$/;"	a
2.5.1	lib/lua/doc/manual.html	/^<h3>2.5.1 - <a name="2.5.1">Arithmetic Operators<\/a><\/h3><p>$/;"	a
2.5.2	lib/lua/doc/manual.html	/^<h3>2.5.2 - <a name="2.5.2">Relational Operators<\/a><\/h3><p>$/;"	a
2.5.3	lib/lua/doc/manual.html	/^<h3>2.5.3 - <a name="2.5.3">Logical Operators<\/a><\/h3><p>$/;"	a
2.5.4	lib/lua/doc/manual.html	/^<h3>2.5.4 - <a name="2.5.4">Concatenation<\/a><\/h3><p>$/;"	a
2.5.5	lib/lua/doc/manual.html	/^<h3>2.5.5 - <a name="2.5.5">The Length Operator<\/a><\/h3>$/;"	a
2.5.6	lib/lua/doc/manual.html	/^<h3>2.5.6 - <a name="2.5.6">Precedence<\/a><\/h3><p>$/;"	a
2.5.7	lib/lua/doc/manual.html	/^<h3>2.5.7 - <a name="2.5.7">Table Constructors<\/a><\/h3><p>$/;"	a
2.5.8	lib/lua/doc/manual.html	/^<h3>2.5.8 - <a name="2.5.8">Function Calls<\/a><\/h3><p>$/;"	a
2.5.9	lib/lua/doc/manual.html	/^<h3>2.5.9 - <a name="2.5.9">Function Definitions<\/a><\/h3>$/;"	a
2.6	lib/lua/doc/manual.html	/^<h2>2.6 - <a name="2.6">Visibility Rules<\/a><\/h2>$/;"	a
2.7	lib/lua/doc/manual.html	/^<h2>2.7 - <a name="2.7">Error Handling<\/a><\/h2>$/;"	a
2.8	lib/lua/doc/manual.html	/^<h2>2.8 - <a name="2.8">Metatables<\/a><\/h2>$/;"	a
2.9	lib/lua/doc/manual.html	/^<h2>2.9 - <a name="2.9">Environments<\/a><\/h2>$/;"	a
3	lib/lua/doc/manual.html	/^<h1>3 - <a name="3">The Application Program Interface<\/a><\/h1>$/;"	a
3.1	lib/lua/doc/manual.html	/^<h2>3.1 - <a name="3.1">The Stack<\/a><\/h2>$/;"	a
3.2	lib/lua/doc/manual.html	/^<h2>3.2 - <a name="3.2">Stack Size<\/a><\/h2>$/;"	a
3.3	lib/lua/doc/manual.html	/^<h2>3.3 - <a name="3.3">Pseudo-Indices<\/a><\/h2>$/;"	a
3.4	lib/lua/doc/manual.html	/^<h2>3.4 - <a name="3.4">C Closures<\/a><\/h2>$/;"	a
3.5	lib/lua/doc/manual.html	/^<h2>3.5 - <a name="3.5">Registry<\/a><\/h2>$/;"	a
3.6	lib/lua/doc/manual.html	/^<h2>3.6 - <a name="3.6">Error Handling in C<\/a><\/h2>$/;"	a
3.7	lib/lua/doc/manual.html	/^<h2>3.7 - <a name="3.7">Functions and Types<\/a><\/h2>$/;"	a
3.8	lib/lua/doc/manual.html	/^<h2>3.8 - <a name="3.8">The Debug Interface<\/a><\/h2>$/;"	a
4	lib/lua/doc/manual.html	/^<h1>4 - <a name="4">The Auxiliary Library<\/a><\/h1>$/;"	a
4.1	lib/lua/doc/manual.html	/^<h2>4.1 - <a name="4.1">Functions and Types<\/a><\/h2>$/;"	a
5	lib/lua/doc/manual.html	/^<h1>5 - <a name="5">Standard Libraries<\/a><\/h1>$/;"	a
5.1	lib/lua/doc/manual.html	/^<h2>5.1 - <a name="5.1">Basic Functions<\/a><\/h2>$/;"	a
5.2	lib/lua/doc/manual.html	/^<h2>5.2 - <a name="5.2">Coroutine Manipulation<\/a><\/h2>$/;"	a
5.3	lib/lua/doc/manual.html	/^<h2>5.3 - <a name="5.3">Modules<\/a><\/h2>$/;"	a
5.4	lib/lua/doc/manual.html	/^<h2>5.4 - <a name="5.4">String Manipulation<\/a><\/h2>$/;"	a
5.4.1	lib/lua/doc/manual.html	/^<h3>5.4.1 - <a name="5.4.1">Patterns<\/a><\/h3>$/;"	a
5.5	lib/lua/doc/manual.html	/^<h2>5.5 - <a name="5.5">Table Manipulation<\/a><\/h2><p>$/;"	a
5.6	lib/lua/doc/manual.html	/^<h2>5.6 - <a name="5.6">Mathematical Functions<\/a><\/h2>$/;"	a
5.7	lib/lua/doc/manual.html	/^<h2>5.7 - <a name="5.7">Input and Output Facilities<\/a><\/h2>$/;"	a
5.8	lib/lua/doc/manual.html	/^<h2>5.8 - <a name="5.8">Operating System Facilities<\/a><\/h2>$/;"	a
5.9	lib/lua/doc/manual.html	/^<h2>5.9 - <a name="5.9">The Debug Library<\/a><\/h2>$/;"	a
6	lib/lua/doc/manual.html	/^<h1>6 - <a name="6">Lua Stand-alone<\/a><\/h1>$/;"	a
7	lib/lua/doc/manual.html	/^<h1>7 - <a name="7">Incompatibilities with the Previous Version<\/a><\/h1>$/;"	a
7.1	lib/lua/doc/manual.html	/^<h2>7.1 - <a name="7.1">Changes in the Language<\/a><\/h2>$/;"	a
7.2	lib/lua/doc/manual.html	/^<h2>7.2 - <a name="7.2">Changes in the Libraries<\/a><\/h2>$/;"	a
7.3	lib/lua/doc/manual.html	/^<h2>7.3 - <a name="7.3">Changes in the API<\/a><\/h2>$/;"	a
8	lib/lua/doc/manual.html	/^<h1>8 - <a name="8">The Complete Syntax of Lua<\/a><\/h1>$/;"	a
A	core/localization/LocalizationModule.h	/^    Eigen::Matrix<double, 4, 4> A;$/;"	m	class:LocalizationModule
A	core/python/behaviors/win.py	/^  A=0$/;"	v	class:Fields
A	core/sensor/InertialFilter.h	/^  NMatrix A;$/;"	m	class:InertialFilter
A	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  StateTransitionMatrix A;$/;"	m	class:LinearKalmanFilter
A	kalman_filters/src/ekf_test.cpp	/^Eigen::Matrix<double, 2, 2> A;$/;"	v
A	kalman_filters/src/ukf_test.cpp	/^Eigen::Matrix<double, 2, 2> A;$/;"	v
A	particle_filters/MCL_particle_filter.hpp	/^    StateTransitionMatrix A;$/;"	m	class:MCLParticleFilter
A	particle_filters/RMCL_particle_filter.hpp	/^    StateTransitionMatrix A;$/;"	m	class:RMCLParticleFilter
ABORT	core/memory/KickEngineBlock.h	/^    ABORT,$/;"	e	enum:KickEngineBlock::Kick_State
ABORT	core/memory/KickRequestBlock.h	/^    ABORT$/;"	e	enum:Kick::Type
ABOVEROBOT	build/include/tool/WorldGLWidget.h	/^      ABOVEROBOT,$/;"	e	enum:WorldGLWidget::__anon6
ABOVEROBOT	tools/UTNaoTool/WorldGLWidget.h	/^      ABOVEROBOT,$/;"	e	enum:WorldGLWidget::__anon144
ABS	core/motion/rswalk2014/utils/basic_maths.hpp	/^inline static T ABS(const T &x) {$/;"	f
ABSTRACTMEMORY_JK0RIQTZ	core/memory/AbstractMemory.h	/^#define ABSTRACTMEMORY_JK0RIQTZ$/;"	d
ACCEL_FRAMES	build/include/tool/simulation/RobotMovementSimulator.cpp	/^#define ACCEL_FRAMES /;"	d	file:
ACCEL_FRAMES	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^#define ACCEL_FRAMES /;"	d	file:
ACTION	lib/yaml-cpp/src/scanscalar.h	/^	enum ACTION { NONE, BREAK, THROW };$/;"	g	namespace:YAML
ACT_NEW_LOCATION	lib/alglib/ap.h	/^enum { ACT_UNCHANGED=1, ACT_SAME_LOCATION=2, ACT_NEW_LOCATION=3 };$/;"	e	enum:alglib_impl::__anon29
ACT_SAME_LOCATION	lib/alglib/ap.h	/^enum { ACT_UNCHANGED=1, ACT_SAME_LOCATION=2, ACT_NEW_LOCATION=3 };$/;"	e	enum:alglib_impl::__anon29
ACT_UNCHANGED	lib/alglib/ap.h	/^enum { ACT_UNCHANGED=1, ACT_SAME_LOCATION=2, ACT_NEW_LOCATION=3 };$/;"	e	enum:alglib_impl::__anon29
ADD	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    ADD,$/;"	e	enum:color_classifier::ClickMode
AE_BIG_ENDIAN	lib/alglib/ap.cpp	/^#define AE_BIG_ENDIAN /;"	d	file:
AE_COMPILER	lib/alglib/ap.h	/^#define AE_COMPILER /;"	d
AE_COMPILER	lib/alglib/ap.h	/^#undef AE_COMPILER$/;"	d
AE_DATA_ALIGN	lib/alglib/ap.cpp	/^#define AE_DATA_ALIGN /;"	d	file:
AE_GNUC	lib/alglib/ap.h	/^#define AE_GNUC /;"	d
AE_HAS_SSE2_INTRINSICS	lib/alglib/ap.h	/^#define AE_HAS_SSE2_INTRINSICS$/;"	d
AE_INTEL	lib/alglib/ap.h	/^#define AE_INTEL /;"	d
AE_LITTLE_ENDIAN	lib/alglib/ap.cpp	/^#define AE_LITTLE_ENDIAN /;"	d	file:
AE_MIXED_ENDIAN	lib/alglib/ap.cpp	/^#define AE_MIXED_ENDIAN /;"	d	file:
AE_MSVC	lib/alglib/ap.h	/^#define AE_MSVC /;"	d
AE_PTR_ALIGN	lib/alglib/ap.cpp	/^#define AE_PTR_ALIGN /;"	d	file:
AE_SPARC	lib/alglib/ap.h	/^#define AE_SPARC /;"	d
AE_SUNC	lib/alglib/ap.h	/^#define AE_SUNC /;"	d
AE_UNKNOWN	lib/alglib/ap.h	/^#define AE_UNKNOWN /;"	d
AE_USE_CPP	lib/alglib/ap.h	/^#define AE_USE_CPP$/;"	d
AE_USE_CPP_BOOL	lib/alglib/ap.h	/^#define AE_USE_CPP_BOOL$/;"	d
AE_USE_CPP_ERROR_HANDLING	lib/alglib/ap.h	/^#define AE_USE_CPP_ERROR_HANDLING$/;"	d
AII	tools/behaviorSim/cma.py	/^class AII(object):  $/;"	c
AL	interfaces/nao/src/almotionwrapper.h	/^namespace AL$/;"	n
AL	interfaces/nao/src/dcmwrapper.h	/^namespace AL$/;"	n
AL	interfaces/nao/src/naointerface.h	/^namespace AL$/;"	n
ALCALL	interfaces/nao/src/naointerfacemain.cpp	/^    #define ALCALL /;"	d	file:
ALCALL	interfaces/nao/src/naointerfacemain.cpp	/^    #define ALCALL$/;"	d	file:
ALGLIB_INTERCEPTS_ABLAS	lib/alglib/ap.h	/^#define ALGLIB_INTERCEPTS_ABLAS$/;"	d
ALIAS	lib/yaml-cpp/src/token.h	/^			ALIAS,$/;"	e	enum:YAML::Token::TYPE
ALIASMANAGER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/aliasmanager.h	/^#define ALIASMANAGER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
ALIAS_CONTENT	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const ALIAS_CONTENT          = "aliases can't have any content, *including* tags";$/;"	m	namespace:YAML::ErrorMsg
ALIAS_NOT_FOUND	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const ALIAS_NOT_FOUND        = "alias not found after *";$/;"	m	namespace:YAML::ErrorMsg
ALIGN	core/motion/KickParameters.h	/^    ALIGN,$/;"	e	enum:KickState::State
ALLOW_BAND_MERGE_POINTS	core/vision/structures/VisionParams.h	/^    bool ALLOW_BAND_MERGE_POINTS;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_DEBUG_LOG	core/memory/TextLogger.h	/^#define ALLOW_DEBUG_LOG$/;"	d
ALLOW_FALLING	build/include/tool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::ALLOW_FALLING = false;$/;"	m	class:SimulatedPlayer	file:
ALLOW_FALLING	build/include/tool/simulation/SimulatedPlayer.h	/^  static bool DEBUGGING_POSITIONING, ALLOW_FALLING;$/;"	m	class:SimulatedPlayer
ALLOW_FALLING	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::ALLOW_FALLING = false;$/;"	m	class:SimulatedPlayer	file:
ALLOW_FALLING	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  static bool DEBUGGING_POSITIONING, ALLOW_FALLING;$/;"	m	class:SimulatedPlayer
ALLOW_GOAL_MERGE_POINTS	core/vision/structures/VisionParams.h	/^    bool ALLOW_GOAL_MERGE_POINTS;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_GOAL_VERT_MERGE_ANGLE	core/vision/structures/VisionParams.h	/^    bool ALLOW_GOAL_VERT_MERGE_ANGLE;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_GOAL_VERT_MERGE_POS	core/vision/structures/VisionParams.h	/^    bool ALLOW_GOAL_VERT_MERGE_POS;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_GOAL_VERT_MERGE_WIDTH	core/vision/structures/VisionParams.h	/^    bool ALLOW_GOAL_VERT_MERGE_WIDTH;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_WHITE_HORZ_MERGE_ANGLE	core/vision/structures/VisionParams.h	/^    bool ALLOW_WHITE_HORZ_MERGE_ANGLE;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_WHITE_HORZ_MERGE_POS	core/vision/structures/VisionParams.h	/^    bool ALLOW_WHITE_HORZ_MERGE_POS;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_WHITE_HORZ_MERGE_WIDTH	core/vision/structures/VisionParams.h	/^    bool ALLOW_WHITE_HORZ_MERGE_WIDTH;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_WHITE_VERT_MERGE_ANGLE	core/vision/structures/VisionParams.h	/^    bool ALLOW_WHITE_VERT_MERGE_ANGLE;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_WHITE_VERT_MERGE_POS	core/vision/structures/VisionParams.h	/^    bool ALLOW_WHITE_VERT_MERGE_POS;\/\/ = true;$/;"	m	struct:VisionParams
ALLOW_WHITE_VERT_MERGE_WIDTH	core/vision/structures/VisionParams.h	/^    bool ALLOW_WHITE_VERT_MERGE_WIDTH;\/\/ = true;$/;"	m	struct:VisionParams
ALL_A	lib/lua/src/Makefile	/^ALL_A= $(LUA_A)$/;"	m
ALL_O	lib/lua/src/Makefile	/^ALL_O= $(CORE_O) $(LIB_O) $(LUA_O) $(LUAC_O)$/;"	m
ALL_T	lib/lua/src/Makefile	/^ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)$/;"	m
ALMOTIONWRAPPER_NC3FGGCA	interfaces/nao/src/almotionwrapper.h	/^#define ALMOTIONWRAPPER_NC3FGGCA$/;"	d
ALMotionWrapper	interfaces/nao/src/almotionwrapper.cpp	/^ALMotionWrapper::ALMotionWrapper() {$/;"	f	class:ALMotionWrapper
ALMotionWrapper	interfaces/nao/src/almotionwrapper.h	/^class ALMotionWrapper {$/;"	c
ALProxy	interfaces/nao/tests/naointerfaceTest.py	/^from naoqi import ALProxy$/;"	i
ALWALKPARAMBLOCK_H	core/memory/ALWalkParamBlock.h	/^#define ALWALKPARAMBLOCK_H$/;"	d
ALWalk	core/python/cfgstiff.py	/^ALWalk = [0] * core.NUM_JOINTS$/;"	v
ALWalkParamBlock	core/memory/ALWalkParamBlock.h	/^  ALWalkParamBlock():$/;"	f	struct:ALWalkParamBlock
ALWalkParamBlock	core/memory/ALWalkParamBlock.h	/^struct ALWalkParamBlock : public MemoryBlock {$/;"	s
AMBIGUOUS_ANCHOR	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const AMBIGUOUS_ANCHOR       = "cannot assign the same alias to multiple nodes";$/;"	m	namespace:YAML::ErrorMsg
ANALYSIS_WIDGET_H	build/include/tool/AnalysisWidget.h	/^#define ANALYSIS_WIDGET_H$/;"	d
ANALYSIS_WIDGET_H	tools/UTNaoTool/AnalysisWidget.h	/^#define ANALYSIS_WIDGET_H$/;"	d
ANCHOR	lib/yaml-cpp/src/token.h	/^			ANCHOR,$/;"	e	enum:YAML::Token::TYPE
ANCHORDICT_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/contrib/anchordict.h	/^#define ANCHORDICT_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
ANCHOR_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/anchor.h	/^#define ANCHOR_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
ANCHOR_NOT_FOUND	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const ANCHOR_NOT_FOUND       = "anchor not found after &";$/;"	m	namespace:YAML::ErrorMsg
ANGLE	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^#define ANGLE(/;"	d	file:
ANGLE	core/memory/KickRequestBlock.h	/^    ANGLE,$/;"	e	enum:Kick::Type
ANGLE	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^#define ANGLE(/;"	d	file:
ANGLE_BOTTOM_CAMERA	core/motion/rswalk2014/perception/vision/CameraDefs.hpp	/^#define ANGLE_BOTTOM_CAMERA /;"	d
ANGLE_OFFSET_BOTTOM_CAMERA	core/motion/rswalk2014/perception/vision/CameraDefs.hpp	/^#define ANGLE_OFFSET_BOTTOM_CAMERA /;"	d
ANGLE_OFFSET_TOP_CAMERA	core/motion/rswalk2014/perception/vision/CameraDefs.hpp	/^#define ANGLE_OFFSET_TOP_CAMERA /;"	d
ANNOTATION_ANALYZER_H	build/include/tool/annotations/AnnotationAnalyzer.h	/^#define ANNOTATION_ANALYZER_H$/;"	d
ANNOTATION_ANALYZER_H	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^#define ANNOTATION_ANALYZER_H$/;"	d
ANNOTATION_GROUP_H	build/include/tool/annotations/AnnotationGroup.h	/^#define ANNOTATION_GROUP_H$/;"	d
ANNOTATION_GROUP_H	tools/UTNaoTool/annotations/AnnotationGroup.h	/^#define ANNOTATION_GROUP_H$/;"	d
ANNOTATION_H	build/include/tool/annotations/Annotation.h	/^#define ANNOTATION_H$/;"	d
ANNOTATION_H	tools/UTNaoTool/annotations/Annotation.h	/^#define ANNOTATION_H$/;"	d
ANNOTATION_WIDGET_H	build/include/tool/AnnotationWidget.h	/^#define ANNOTATION_WIDGET_H$/;"	d
ANNOTATION_WIDGET_H	tools/UTNaoTool/AnnotationWidget.h	/^#define ANNOTATION_WIDGET_H$/;"	d
AR	lib/lua/src/Makefile	/^AR= ar rcu$/;"	m
AR	lib/zlib/Makefile	/^AR=ar rc$/;"	m
ARM_DH_CHAIN_LEN	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^#define ARM_DH_CHAIN_LEN /;"	d
ARM_JOINT_FIRST	core/common/RobotInfo.h	/^  ARM_JOINT_FIRST = LShoulderPitch,$/;"	e	enum:__anon9
ARM_JOINT_LAST	core/common/RobotInfo.h	/^  ARM_JOINT_LAST = RElbowRoll,$/;"	e	enum:__anon9
ARRAY2D	lib/lua/test/life.lua	/^function ARRAY2D(w,h)$/;"	f
ASSERT	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define ASSERT(/;"	d
ASYMMETRIC_CIRCLES_GRID	build/include/tool/calibration/CalibratorSettings.h	/^      ASYMMETRIC_CIRCLES_GRID = 2$/;"	e	enum:CalibratorSettings::Pattern
ASYMMETRIC_CIRCLES_GRID	tools/UTNaoTool/calibration/CalibratorSettings.h	/^      ASYMMETRIC_CIRCLES_GRID = 2$/;"	e	enum:CalibratorSettings::Pattern
ATOM_CROSS	install/install_naoqi	/^ATOM_CROSS = 'linux64-nao-atom-cross-toolchain-%s.tar.gz' % FULL_VERSION$/;"	v
ATOM_CROSS_PATH	install/install_naoqi	/^ATOM_CROSS_PATH  = os.path.join(CROSS_PATH,'atom')$/;"	v
AUXMARK	lib/lua/src/loadlib.c	/^#define AUXMARK	/;"	d	file:
A_	interfaces/sim_spark/Random.h	/^   static const long   A_    = 0x10ff5;    \/\/ 69621$/;"	m	class:Random
AbsCoord	core/motion/rswalk2014/types/AbsCoord.hpp	/^   AbsCoord() : vec(0, 0, 0) {$/;"	f	struct:AbsCoord
AbsCoord	core/motion/rswalk2014/types/AbsCoord.hpp	/^   AbsCoord(float x, float y, float theta) : vec(x, y, theta) {$/;"	f	struct:AbsCoord
AbsCoord	core/motion/rswalk2014/types/AbsCoord.hpp	/^struct AbsCoord {$/;"	s
AbstractMemory	core/memory/AbstractMemory.h	/^  AbstractMemory() {};$/;"	f	class:AbstractMemory
AbstractMemory	core/memory/AbstractMemory.h	/^class AbstractMemory {$/;"	c
ActionCommand	core/motion/rswalk2014/types/ActionCommand.hpp	/^namespace ActionCommand {$/;"	n
ActionGenerator	core/motion/rswalk2014/ActionGenerator.cpp	/^ActionGenerator::ActionGenerator(std::string filename, std::string path) : file_name(filename) {$/;"	f	class:ActionGenerator
ActionGenerator	core/motion/rswalk2014/ActionGenerator.hpp	/^class ActionGenerator : Generator {$/;"	c
ActionType	core/motion/rswalk2014/types/ActionCommand.hpp	/^      enum ActionType {$/;"	g	struct:ActionCommand::Body
Activity	core/memory/BehaviorParamBlock.h	/^  enum Activity {$/;"	g	class:Cluster
Add	build/include/tool/annotations/SelectionMode.h	/^    Add,$/;"	e	enum:SelectionMode
Add	tools/UTNaoTool/annotations/SelectionMode.h	/^    Add,$/;"	e	enum:SelectionMode
AddEntry	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			void AddEntry(EncodingFn encoding, int startCh, int endCh)$/;"	f	class:Test::__anon130::EncodingTester	file:
AdvanceCurrent	lib/yaml-cpp/src/stream.cpp	/^	void Stream::AdvanceCurrent()$/;"	f	class:YAML::Stream
AgentError	build/include/tool/simulation/LocalizationSimulation.h	/^  AgentError() : dist(0), rot(0), steps(0) {}$/;"	f	struct:AgentError
AgentError	build/include/tool/simulation/LocalizationSimulation.h	/^struct AgentError {$/;"	s
AgentError	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  AgentError() : dist(0), rot(0), steps(0) {}$/;"	f	struct:AgentError
AgentError	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^struct AgentError {$/;"	s
Alias	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	inline _Alias Alias(const std::string content) {$/;"	f	namespace:YAML
Alias	lib/yaml-cpp/src/exp.h	/^		const char Alias = '*';$/;"	m	namespace:YAML::Keys
AliasAndAnchor	lib/yaml-cpp/test/emittertests.cpp	/^		void AliasAndAnchor(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
AliasAndAnchorInFlow	lib/yaml-cpp/test/emittertests.cpp	/^		void AliasAndAnchorInFlow(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
AliasAndAnchorWithNull	lib/yaml-cpp/test/emittertests.cpp	/^		void AliasAndAnchorWithNull(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
AliasAsSimpleKey	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool AliasAsSimpleKey()$/;"	f	namespace:Test::Parser
AliasManager	lib/yaml-cpp/include/yaml-cpp/aliasmanager.h	/^	class AliasManager$/;"	c	namespace:YAML
AliasManager	lib/yaml-cpp/src/aliasmanager.cpp	/^	AliasManager::AliasManager(): m_curAnchor(0)$/;"	f	class:YAML::AliasManager
AliasNodes	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST AliasNodes()$/;"	f	namespace:Test::Spec
AliasWithNull	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool AliasWithNull()$/;"	f	namespace:Test::Parser
Alive	build/include/tool/ProcessExecutor.h	/^      Alive,$/;"	e	enum:ProcessExecutor::RobotStatus
Alive	tools/UTNaoTool/ProcessExecutor.h	/^      Alive,$/;"	e	enum:ProcessExecutor::RobotStatus
All	core/motion/rswalk2014/types/ActionCommand.hpp	/^      All() : head(), body(Body::NONE), leds(), $/;"	f	struct:ActionCommand::All
All	core/motion/rswalk2014/types/ActionCommand.hpp	/^      All(Head h, Body b, LED l, float s) {$/;"	f	struct:ActionCommand::All
All	core/motion/rswalk2014/types/ActionCommand.hpp	/^   struct All {$/;"	s	namespace:ActionCommand
Alpha	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Alpha() {$/;"	f	namespace:YAML::Exp
AlphaNumeric	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& AlphaNumeric() {$/;"	f	namespace:YAML::Exp
Alphafast	particle_filters/RMCL_particle_filter.hpp	/^    double Alphafast;$/;"	m	class:RMCLParticleFilter
Alphaslow	particle_filters/RMCL_particle_filter.hpp	/^    double Alphaslow;$/;"	m	class:RMCLParticleFilter
AnalysisWidget	build/include/tool/AnalysisWidget.cpp	/^AnalysisWidget::AnalysisWidget(QWidget* parent) : QWidget(parent), log_(NULL), core_(NULL) {$/;"	f	class:AnalysisWidget
AnalysisWidget	build/include/tool/AnalysisWidget.h	/^class AnalysisWidget : public QWidget, public Ui_UTAnalysisWidget {$/;"	c
AnalysisWidget	tools/UTNaoTool/AnalysisWidget.cpp	/^AnalysisWidget::AnalysisWidget(QWidget* parent) : QWidget(parent), log_(NULL), core_(NULL) {$/;"	f	class:AnalysisWidget
AnalysisWidget	tools/UTNaoTool/AnalysisWidget.h	/^class AnalysisWidget : public QWidget, public Ui_UTAnalysisWidget {$/;"	c
Anchor	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	inline _Anchor Anchor(const std::string content) {$/;"	f	namespace:YAML
Anchor	lib/yaml-cpp/src/exp.h	/^		const char Anchor = '&';$/;"	m	namespace:YAML::Keys
Anchor	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Anchor() {$/;"	f	namespace:YAML::Exp
AnchorByIdentity	lib/yaml-cpp/include/yaml-cpp/aliasmanager.h	/^		typedef std::map<const Node*, anchor_t> AnchorByIdentity;$/;"	t	class:YAML::AliasManager
AnchorDict	lib/yaml-cpp/include/yaml-cpp/contrib/anchordict.h	/^  class AnchorDict$/;"	c	namespace:YAML
AnchorEnd	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& AnchorEnd() {$/;"	f	namespace:YAML::Exp
AnchorInSimpleKey	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool AnchorInSimpleKey()$/;"	f	namespace:Test::Parser
AnchorMap	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    typedef AnchorDict<void*> AnchorMap;$/;"	t	class:YAML::GraphBuilderAdapter
AnchorReference	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void *AnchorReference(const Mark& mark, void *pNode) {$/;"	f	class:YAML::GraphBuilder
AnchorReference	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void *AnchorReference(const Mark& mark, void *pNode) {(void)mark; return pNode;}$/;"	f	class:YAML::GraphBuilderInterface
Anchors	lib/yaml-cpp/src/nodebuilder.h	/^		typedef std::vector<Node *> Anchors;$/;"	t	class:YAML::NodeBuilder
Anchors	lib/yaml-cpp/src/singledocparser.h	/^		typedef std::map<std::string, anchor_t> Anchors;$/;"	t	class:YAML::SingleDocParser
AngDeg	core/math/Geometry.h	/^typedef float AngDeg;    \/*!< Type definition for angles in degrees. *\/$/;"	t
AngRad	core/math/Geometry.h	/^typedef float AngRad;    \/*!< Type definition for angles in radians. *\/$/;"	t
Angle	core/vision/structures/FieldLine.h	/^  float Slope, Angle;$/;"	m	struct:FieldLine
AnklePitchSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float AnklePitchSpeed      = MOTOR1_REDUCTIONB_RAD;$/;"	m	namespace:RSJoints::Radians
AnkleRollSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float AnkleRollSpeed       = MOTOR1_REDUCTIONA_RAD;$/;"	m	namespace:RSJoints::Radians
Annotation	build/include/tool/annotations/Annotation.cpp	/^Annotation::Annotation(){$/;"	f	class:Annotation
Annotation	build/include/tool/annotations/Annotation.cpp	/^Annotation::Annotation(std::string name){$/;"	f	class:Annotation
Annotation	build/include/tool/annotations/Annotation.h	/^class Annotation : public BaseAnnotation {$/;"	c
Annotation	tools/UTNaoTool/annotations/Annotation.cpp	/^Annotation::Annotation(){$/;"	f	class:Annotation
Annotation	tools/UTNaoTool/annotations/Annotation.cpp	/^Annotation::Annotation(std::string name){$/;"	f	class:Annotation
Annotation	tools/UTNaoTool/annotations/Annotation.h	/^class Annotation : public BaseAnnotation {$/;"	c
AnnotationAnalyzer	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^AnnotationAnalyzer::AnnotationAnalyzer() : table_(0) {$/;"	f	class:AnnotationAnalyzer
AnnotationAnalyzer	build/include/tool/annotations/AnnotationAnalyzer.h	/^class AnnotationAnalyzer {$/;"	c
AnnotationAnalyzer	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^AnnotationAnalyzer::AnnotationAnalyzer() : table_(0) {$/;"	f	class:AnnotationAnalyzer
AnnotationAnalyzer	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^class AnnotationAnalyzer {$/;"	c
AnnotationGroup	build/include/tool/annotations/AnnotationGroup.cpp	/^AnnotationGroup::AnnotationGroup(){$/;"	f	class:AnnotationGroup
AnnotationGroup	build/include/tool/annotations/AnnotationGroup.cpp	/^AnnotationGroup::AnnotationGroup(const AnnotationGroup& other) {$/;"	f	class:AnnotationGroup
AnnotationGroup	build/include/tool/annotations/AnnotationGroup.cpp	/^AnnotationGroup::AnnotationGroup(std::vector<Annotation*> annotations) {$/;"	f	class:AnnotationGroup
AnnotationGroup	build/include/tool/annotations/AnnotationGroup.h	/^class AnnotationGroup : public YamlConfig {$/;"	c
AnnotationGroup	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^AnnotationGroup::AnnotationGroup(){$/;"	f	class:AnnotationGroup
AnnotationGroup	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^AnnotationGroup::AnnotationGroup(const AnnotationGroup& other) {$/;"	f	class:AnnotationGroup
AnnotationGroup	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^AnnotationGroup::AnnotationGroup(std::vector<Annotation*> annotations) {$/;"	f	class:AnnotationGroup
AnnotationGroup	tools/UTNaoTool/annotations/AnnotationGroup.h	/^class AnnotationGroup : public YamlConfig {$/;"	c
AnnotationListWidgetItem	build/include/tool/AnnotationWidget.h	/^        AnnotationListWidgetItem(Annotation* annotation) {$/;"	f	class:AnnotationListWidgetItem
AnnotationListWidgetItem	build/include/tool/AnnotationWidget.h	/^        AnnotationListWidgetItem(const AnnotationListWidgetItem& other) : QListWidgetItem(other) {$/;"	f	class:AnnotationListWidgetItem
AnnotationListWidgetItem	build/include/tool/AnnotationWidget.h	/^class AnnotationListWidgetItem : public QListWidgetItem {$/;"	c
AnnotationListWidgetItem	tools/UTNaoTool/AnnotationWidget.h	/^        AnnotationListWidgetItem(Annotation* annotation) {$/;"	f	class:AnnotationListWidgetItem
AnnotationListWidgetItem	tools/UTNaoTool/AnnotationWidget.h	/^        AnnotationListWidgetItem(const AnnotationListWidgetItem& other) : QListWidgetItem(other) {$/;"	f	class:AnnotationListWidgetItem
AnnotationListWidgetItem	tools/UTNaoTool/AnnotationWidget.h	/^class AnnotationListWidgetItem : public QListWidgetItem {$/;"	c
AnnotationWidget	build/include/tool/AnnotationWidget.cpp	/^AnnotationWidget::AnnotationWidget(QWidget* parent) : QWidget(parent), selectedAnnotation_(0) {$/;"	f	class:AnnotationWidget
AnnotationWidget	build/include/tool/AnnotationWidget.h	/^class AnnotationWidget : public QWidget, public Ui_UTAnnotationWidget {$/;"	c
AnnotationWidget	tools/UTNaoTool/AnnotationWidget.cpp	/^AnnotationWidget::AnnotationWidget(QWidget* parent) : QWidget(parent), selectedAnnotation_(0) {$/;"	f	class:AnnotationWidget
AnnotationWidget	tools/UTNaoTool/AnnotationWidget.h	/^class AnnotationWidget : public QWidget, public Ui_UTAnnotationWidget {$/;"	c
Append	lib/yaml-cpp/src/node.cpp	/^	void Node::Append(Node& node)$/;"	f	class:YAML::Node
AppendToSequence	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void AppendToSequence(void *pSequence, void *pNode) {$/;"	f	class:YAML::GraphBuilder
ApproachState	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    enum ApproachState {$/;"	g	class:IsolatedBehaviorSimulation
ApproachState	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    enum ApproachState {$/;"	g	class:IsolatedBehaviorSimulation
Approaching_state	core/python/behaviors/pid_distance_angle.py	/^Approaching_state = 0 # dis>450 : 0 ;  350<dis<450 find goal: 1 ; ready to kick: 2;$/;"	v
Arith	lib/lua/src/lvm.c	/^static void Arith (lua_State *L, StkId ra, const TValue *rb,$/;"	f	file:
AsBuilderInterface	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    GraphBuilderInterface& AsBuilderInterface() {return *this;}$/;"	f	class:YAML::GraphBuilder
AsMap	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    static Map *AsMap(void *pMap) {return static_cast<Map*>(pMap);}$/;"	f	class:YAML::GraphBuilder
AsNode	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    static Node *AsNode(void *pNode) {return static_cast<Node*>(pNode);}$/;"	f	class:YAML::GraphBuilder
AsSequence	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    static Sequence *AsSequence(void *pSeq) {return static_cast<Sequence*>(pSeq);}$/;"	f	class:YAML::GraphBuilder
Assert	lib/zlib/zutil.h	/^#  define Assert(/;"	d
AssignInMap	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void AssignInMap(void *pMap, void *pKeyNode, void *pValueNode) {$/;"	f	class:YAML::GraphBuilder
AttackingStates	core/python/behaviors/win.py	/^class AttackingStates:$/;"	c
AudioModule	core/audio/AudioModule.cpp	/^AudioModule::AudioModule() {$/;"	f	class:AudioModule
AudioModule	core/audio/AudioModule.h	/^class AudioModule: public Module {$/;"	c
AudioProcessingBlock	core/memory/AudioProcessingBlock.h	/^    AudioProcessingBlock() {$/;"	f	struct:AudioProcessingBlock
AudioProcessingBlock	core/memory/AudioProcessingBlock.h	/^struct AudioProcessingBlock : public MemoryBlock {$/;"	s
AudioWrapper	interfaces/nao/src/AudioWrapper.cpp	/^AudioWrapper::AudioWrapper(boost::shared_ptr<AL::ALBroker> broker, const std::string & name) :$/;"	f	class:AudioWrapper
AudioWrapper	interfaces/nao/src/AudioWrapper.h	/^class AudioWrapper : public AL::ALSoundExtractor {$/;"	c
Auto	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Auto,$/;"	e	enum:YAML::EMITTER_MANIP
AutoLongKey	lib/yaml-cpp/test/emittertests.cpp	/^		void AutoLongKey(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
AutoLongKeyScalar	lib/yaml-cpp/test/emittertests.cpp	/^		void AutoLongKeyScalar(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
B	core/localization/LocalizationModule.h	/^    Eigen::Matrix<double, 4, 1> B;$/;"	m	class:LocalizationModule
B	core/python/behaviors/win.py	/^  B=1$/;"	v	class:Fields
B	core/sensor/InertialFilter.h	/^  NMatrix B;$/;"	m	class:InertialFilter
B	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  InputMatrix B;$/;"	m	class:LinearKalmanFilter
B	kalman_filters/src/ekf_test.cpp	/^Eigen::Matrix<double, 2, 1> B;$/;"	v
B	kalman_filters/src/ukf_test.cpp	/^Eigen::Matrix<double, 2, 1> B;$/;"	v
B	particle_filters/MCL_particle_filter.hpp	/^    ControlMatrix B;$/;"	m	class:MCLParticleFilter
B	particle_filters/RMCL_particle_filter.hpp	/^    ControlMatrix B;$/;"	m	class:RMCLParticleFilter
BACK	core/memory/OdometryBlock.h	/^    BACK,$/;"	e	enum:Getup::GetupType
BACKWARD	core/memory/OdometryBlock.h	/^    BACKWARD,$/;"	e	enum:Fall::FallDir
BACK_PHASE	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define BACK_PHASE /;"	d	file:
BAD	lib/zlib/inflate.h	/^    BAD,        \/* got a data error -- remain here until reset *\/$/;"	e	enum:__anon136
BAD_DEREFERENCE	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const BAD_DEREFERENCE        = "bad dereference";$/;"	m	namespace:YAML::ErrorMsg
BALL_CANDIDATE_H	core/vision/structures/BallCandidate.h	/^#define BALL_CANDIDATE_H$/;"	d
BALL_RADIUS	core/common/Bowdoin14Field.h	/^const float BALL_RADIUS = 31;$/;"	v
BALL_RADIUS	core/common/Field.h	/^const float BALL_RADIUS = 31;$/;"	v
BALL_RADIUS	core/common/RC2013Field.h	/^const float BALL_RADIUS = 31;$/;"	v
BALL_RADIUS	core/common/UTField.h	/^const float BALL_RADIUS = 31;$/;"	v
BALL_X	build/include/tool/simulation/GoalieSimulation.cpp	/^#define BALL_X /;"	d	file:
BALL_X	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^#define BALL_X /;"	d	file:
BAND_MERGE_POINT_DIST	core/vision/structures/VisionParams.h	/^    int BAND_MERGE_POINT_DIST;\/\/ = 30;$/;"	m	struct:VisionParams
BASE	lib/zlib/adler32.c	/^#define BASE /;"	d	file:
BASE64_CDECODE_H	interfaces/sim_spark/cdecode.h	/^#define BASE64_CDECODE_H$/;"	d
BASE64_CENCODE_H	interfaces/sim_spark/cencode.h	/^#define BASE64_CENCODE_H$/;"	d
BASE64_DECODE_H	interfaces/sim_spark/decode.h	/^#define BASE64_DECODE_H$/;"	d
BASE64_ENCODE_H	interfaces/sim_spark/encode.h	/^#define BASE64_ENCODE_H$/;"	d
BASE64_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/binary.h	/^#define BASE64_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
BASE_LEG_LIFT	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float BASE_LEG_LIFT = 0.010;\/\/0.010                         \/\/ meters$/;"	v
BASE_URL	install/install_naoqi	/^BASE_URL = 'http:\/\/www.cs.utexas.edu\/~jmenashe\/libs\/'$/;"	v
BASE_WALK_PERIOD	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float BASE_WALK_PERIOD = .23; \/\/.23;                 \/\/ seconds to walk one step, ie 1\/2 walk cycle$/;"	v
BASIC_CI_SIZE	lib/lua/src/lstate.h	/^#define BASIC_CI_SIZE /;"	d
BASIC_GL_H	build/include/tool/UTOpenGL/BasicGL.h	/^#define BASIC_GL_H$/;"	d
BASIC_GL_H	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^#define BASIC_GL_H$/;"	d
BASIC_STACK_SIZE	lib/lua/src/lstate.h	/^#define BASIC_STACK_SIZE /;"	d
BBox	core/motion/rswalk2014/types/BBox.hpp	/^   BBox () {}$/;"	f	struct:BBox
BBox	core/motion/rswalk2014/types/BBox.hpp	/^   BBox (Point a, Point b) : a(a), b(b) {};$/;"	f	struct:BBox
BBox	core/motion/rswalk2014/types/BBox.hpp	/^struct BBox$/;"	s
BEHAVIORBLOCK_MG1MXV8Q	core/memory/BehaviorBlock.h	/^#define BEHAVIORBLOCK_MG1MXV8Q$/;"	d
BEHAVIORPARAMBLOCK_	core/memory/BehaviorParamBlock.h	/^#define BEHAVIORPARAMBLOCK_$/;"	d
BEHAVIOR_H	interfaces/sim_spark/Behavior.h	/^#define BEHAVIOR_H$/;"	d
BEHAVIOR_MODULE_H	core/behavior/BehaviorModule.h	/^#define BEHAVIOR_MODULE_H$/;"	d
BEHAVIOR_SIM_H	build/include/tool/simulation/BehaviorSimulation.h	/^#define BEHAVIOR_SIM_H$/;"	d
BEHAVIOR_SIM_H	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^#define BEHAVIOR_SIM_H$/;"	d
BHWALKPARAMETERS_BENPHJGZ	core/motion/BHWalkParameters.h	/^#define BHWALKPARAMETERS_BENPHJGZ$/;"	d
BHWalkParameters	core/motion/BHWalkParameters.h	/^  BHWalkParameters():$/;"	f	struct:BHWalkParameters
BHWalkParameters	core/motion/BHWalkParameters.h	/^struct BHWalkParameters {$/;"	s
BIN	lib/lua/etc/Makefile	/^BIN= $(TOP)\/src$/;"	m
BIT	interfaces/sim_spark/Random.h	/^static const unsigned BIT[ 1 + DEGREE_MAX ] = {$/;"	v
BITRK	lib/lua/src/lopcodes.h	/^#define BITRK	/;"	d
BITS	lib/zlib/infback.c	/^#define BITS(/;"	d	file:
BITS	lib/zlib/inflate.c	/^#define BITS(/;"	d	file:
BLACK	vision_testing/src/vision_testing.cpp	/^  BLACK,$/;"	e	enum:FullColor	file:
BLACKBIT	lib/lua/src/lgc.h	/^#define BLACKBIT	/;"	d
BLOB_H	core/vision/structures/Blob.h	/^#define BLOB_H$/;"	d
BLOCK_ENTRY	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const BLOCK_ENTRY            = "illegal block entry";$/;"	m	namespace:YAML::ErrorMsg
BLOCK_ENTRY	lib/yaml-cpp/src/token.h	/^			BLOCK_ENTRY,$/;"	e	enum:YAML::Token::TYPE
BLOCK_MAP_END	lib/yaml-cpp/src/token.h	/^			BLOCK_MAP_END,$/;"	e	enum:YAML::Token::TYPE
BLOCK_MAP_START	lib/yaml-cpp/src/token.h	/^			BLOCK_MAP_START,$/;"	e	enum:YAML::Token::TYPE
BLOCK_SEQ_END	lib/yaml-cpp/src/token.h	/^			BLOCK_SEQ_END,$/;"	e	enum:YAML::Token::TYPE
BLOCK_SEQ_START	lib/yaml-cpp/src/token.h	/^			BLOCK_SEQ_START,$/;"	e	enum:YAML::Token::TYPE
BLUE	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    BLUE,$/;"	e	enum:color_classifier::Color
BLUE	vision_testing/src/vision_testing.cpp	/^  BLUE,$/;"	e	enum:FullColor	file:
BLUE_CYAN	vision_testing/src/vision_testing.cpp	/^  BLUE_CYAN,$/;"	e	enum:FullColor	file:
BLUE_PINK	core/vision/BeaconDetector.h	/^    BLUE_PINK,$/;"	e	enum:BeaconDetector::ColorTransition
BLUE_PINK	vision_testing/src/vision_testing.cpp	/^  BLUE_PINK,$/;"	e	enum:ColorTransition	file:
BLUE_PINK_BEACON	core/vision/BeaconDetector.h	/^    BLUE_PINK_BEACON,$/;"	e	enum:BeaconDetector::BeaconType
BLUE_PINK_BEACON	vision_testing/src/vision_testing.cpp	/^  BLUE_PINK_BEACON,$/;"	e	enum:BeaconType	file:
BLUE_WHITE	core/vision/BeaconDetector.h	/^    BLUE_WHITE,$/;"	e	enum:BeaconDetector::ColorTransition
BLUE_WHITE	vision_testing/src/vision_testing.cpp	/^  BLUE_WHITE,$/;"	e	enum:ColorTransition	file:
BLUE_YELLOW	core/vision/BeaconDetector.h	/^    BLUE_YELLOW,$/;"	e	enum:BeaconDetector::ColorTransition
BLUE_YELLOW	vision_testing/src/vision_testing.cpp	/^  BLUE_YELLOW,$/;"	e	enum:ColorTransition	file:
BLUE_YELLOW_BEACON	core/vision/BeaconDetector.h	/^    BLUE_YELLOW_BEACON,$/;"	e	enum:BeaconDetector::BeaconType
BLUE_YELLOW_BEACON	vision_testing/src/vision_testing.cpp	/^  BLUE_YELLOW_BEACON,$/;"	e	enum:BeaconType	file:
BL_CODES	lib/zlib/deflate.h	/^#define BL_CODES /;"	d
BODY	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^         BODY = 8,$/;"	e	enum:Kinematics::Link
BODYMODELMODE	build/include/tool/MotionGLWidget.h	/^    BODYMODELMODE,$/;"	e	enum:MotionGLWidget::__anon1
BODYMODELMODE	tools/UTNaoTool/MotionGLWidget.h	/^    BODYMODELMODE,$/;"	e	enum:MotionGLWidget::__anon139
BODY_JOINT_OFFSET	core/common/RobotInfo.h	/^  BODY_JOINT_OFFSET = NUM_HEAD_JOINTS,$/;"	e	enum:__anon9
BODY_MODEL_BLOCK_	core/memory/BodyModelBlock.h	/^#define BODY_MODEL_BLOCK_$/;"	d
BOTTOM	core/common/RobotInfo.h	/^    BOTTOM = 1$/;"	e	enum:Camera::Type
BOTTOM_CAM	core/common/States.h	/^  BOTTOM_CAM = 9,$/;"	e	enum:STATES
BOTTOM_CAMERA	core/motion/rswalk2014/perception/vision/WhichCamera.hpp	/^   BOTTOM_CAMERA      =  1,$/;"	e	enum:__anon14
BOTTOM_CAMERA_H	core/imageCapture/BottomCamera.h	/^#define BOTTOM_CAMERA_H$/;"	d
BOT_IMAGE_COLS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define BOT_IMAGE_COLS /;"	d
BOT_IMAGE_ROWS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define BOT_IMAGE_ROWS /;"	d
BOT_PIXEL_SIZE	core/motion/rswalk2014/perception/vision/CameraDefs.hpp	/^#define BOT_PIXEL_SIZE /;"	d
BOT_SALIENCY_COLS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define BOT_SALIENCY_COLS /;"	d
BOT_SALIENCY_DENSITY	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define BOT_SALIENCY_DENSITY /;"	d
BOT_SALIENCY_ROWS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define BOT_SALIENCY_ROWS /;"	d
BREAK	lib/yaml-cpp/src/scanscalar.h	/^	enum ACTION { NONE, BREAK, THROW };$/;"	e	enum:YAML::ACTION
BTypeName	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define BTypeName /;"	d
BUFLEN	lib/zlib/minigzip.c	/^#define BUFLEN /;"	d	file:
BUILDFIXED	lib/zlib/inflate.c	/^#    define BUILDFIXED$/;"	d	file:
BUSY_STATE	lib/zlib/deflate.h	/^#define BUSY_STATE /;"	d
BUTTON_MODULE_H	core/sensor/ButtonModule.h	/^#define BUTTON_MODULE_H$/;"	d
BYFOUR	lib/zlib/crc32.c	/^#          undef BYFOUR /;"	d	file:
BYFOUR	lib/zlib/crc32.c	/^#    define BYFOUR$/;"	d	file:
BYTEBITS	lib/zlib/infback.c	/^#define BYTEBITS(/;"	d	file:
BYTEBITS	lib/zlib/inflate.c	/^#define BYTEBITS(/;"	d	file:
BadDereference	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		BadDereference()$/;"	f	class:YAML::BadDereference
BadDereference	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	class BadDereference: public RepresentationException {$/;"	c	namespace:YAML
BadLocalTag	lib/yaml-cpp/test/emittertests.cpp	/^		void BadLocalTag(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
BadSingleQuoted	lib/yaml-cpp/test/emittertests.cpp	/^		void BadSingleQuoted(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
BallCandidate	core/vision/structures/BallCandidate.h	/^  BallCandidate() : blob(NULL), valid(false) { }$/;"	f	struct:BallCandidate
BallCandidate	core/vision/structures/BallCandidate.h	/^struct BallCandidate {$/;"	s
Base	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		typedef T Base;$/;"	t	struct:fadbad::Op
Base	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	typedef typename Op<U>::Base Base;$/;"	t	struct:fadbad::Op
BaseAnnotation	build/include/tool/annotations/BaseAnnotation.h	/^class BaseAnnotation : public YamlConfig {$/;"	c
BaseAnnotation	tools/UTNaoTool/annotations/BaseAnnotation.h	/^class BaseAnnotation : public YamlConfig {$/;"	c
BaseDataLogger	tools/behaviorSim/cma.py	/^class BaseDataLogger(object):$/;"	c
BaseDataLogger2	tools/behaviorSim/cma.py	/^class BaseDataLogger2(DerivedDictBase):$/;"	c
BaseTask	core/python/state_machine.py	/^from task import Task, BaseTask$/;"	i
BaseTask	core/python/task.py	/^class BaseTask(object):$/;"	c
Bases	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool Bases()$/;"	f	namespace:Test::Parser
BasicGL	build/include/tool/UTOpenGL/BasicGL.cpp	/^BasicGL::BasicGL() {$/;"	f	class:BasicGL
BasicGL	build/include/tool/UTOpenGL/BasicGL.h	/^class BasicGL {$/;"	c
BasicGL	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^BasicGL::BasicGL() {$/;"	f	class:BasicGL
BasicGL	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^class BasicGL {$/;"	c
BasicLocalTag	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool BasicLocalTag()$/;"	f	namespace:Test::Parser
Battery_Charge	core/motion/rswalk2014/utils/body.hpp	/^      Battery_Charge, \/\/25$/;"	e	enum:RSSensors::SensorCodesEnum
Battery_Current	core/motion/rswalk2014/utils/body.hpp	/^      Battery_Current, \/\/26$/;"	e	enum:RSSensors::SensorCodesEnum
BeaconDetector	core/vision/BeaconDetector.cpp	/^BeaconDetector::BeaconDetector(DETECTOR_DECLARE_ARGS) : DETECTOR_INITIALIZE $/;"	f	class:BeaconDetector
BeaconDetector	core/vision/BeaconDetector.h	/^class BeaconDetector : public ObjectDetector {$/;"	c
BeaconPossibilityState	core/vision/BeaconDetector.h	/^  enum BeaconPossibilityState$/;"	g	class:BeaconDetector
BeaconPossibilityState	vision_testing/src/vision_testing.cpp	/^enum BeaconPossibilityState$/;"	g	file:
BeaconType	core/vision/BeaconDetector.h	/^  enum BeaconType$/;"	g	class:BeaconDetector
BeaconType	vision_testing/src/vision_testing.cpp	/^enum BeaconType$/;"	g	file:
BeginDoc	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		BeginDoc,$/;"	e	enum:YAML::EMITTER_MANIP
BeginGroup	lib/yaml-cpp/src/emitterstate.cpp	/^	void EmitterState::BeginGroup(GROUP_TYPE type)$/;"	f	class:YAML::EmitterState
BeginMap	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		BeginMap,$/;"	e	enum:YAML::EMITTER_MANIP
BeginNode	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::BeginNode()$/;"	f	class:YAML::EmitFromEvents
BeginSeq	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		BeginSeq,$/;"	e	enum:YAML::EMITTER_MANIP
Behavior	interfaces/sim_spark/Behavior.cpp	/^Behavior::Behavior(){$/;"	f	class:Behavior
Behavior	interfaces/sim_spark/Behavior.h	/^class Behavior{$/;"	c
BehaviorBlock	core/memory/BehaviorBlock.h	/^  BehaviorBlock():$/;"	f	struct:BehaviorBlock
BehaviorBlock	core/memory/BehaviorBlock.h	/^struct BehaviorBlock : public MemoryBlock {$/;"	s
BehaviorModule	core/behavior/BehaviorModule.h	/^class BehaviorModule : public Module {$/;"	c
BehaviorModuleLog	core/memory/TextLogger.h	/^  BehaviorModuleLog,$/;"	e	enum:modulesTypes
BehaviorParamBlock	core/memory/BehaviorParamBlock.h	/^  BehaviorParamBlock()$/;"	f	struct:BehaviorParamBlock
BehaviorParamBlock	core/memory/BehaviorParamBlock.h	/^struct BehaviorParamBlock : public MemoryBlock {$/;"	s
BehaviorSimulation	build/include/tool/simulation/BehaviorSimulation.cpp	/^BehaviorSimulation::BehaviorSimulation(int n, bool penaltyKick, bool lMode) : lmode_(lMode) {$/;"	f	class:BehaviorSimulation
BehaviorSimulation	build/include/tool/simulation/BehaviorSimulation.h	/^class BehaviorSimulation : public Simulation {$/;"	c
BehaviorSimulation	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^BehaviorSimulation::BehaviorSimulation(int n, bool penaltyKick, bool lMode) : lmode_(lMode) {$/;"	f	class:BehaviorSimulation
BehaviorSimulation	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^class BehaviorSimulation : public Simulation {$/;"	c
BeliefConfiguration	core/common/FieldConfiguration.h	/^class BeliefConfiguration : public YamlConfig {$/;"	c
BestSolution	tools/behaviorSim/cma.py	/^class BestSolution(object):$/;"	c
Bidirectional	core/communications/UDPWrapper.h	/^  enum Direction { Inbound, Outbound, Bidirectional };$/;"	e	enum:UDPWrapper::Direction
BinOpr	lib/lua/src/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	lib/lua/src/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
Binary	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        Binary(): m_unownedData(0), m_unownedSize(0) {}$/;"	f	class:YAML::Binary
Binary	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        Binary(const unsigned char *data, std::size_t size): m_unownedData(data), m_unownedSize(size) {}$/;"	f	class:YAML::Binary
Binary	lib/yaml-cpp/include/yaml-cpp/binary.h	/^    class Binary {$/;"	c	namespace:YAML
Binary	lib/yaml-cpp/test/emittertests.cpp	/^		void Binary(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Binary	lib/yaml-cpp/test/old-api/parsertests.cpp	/^        bool Binary()$/;"	f	namespace:Test::Parser
Black	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Black = TORGB(0,0,0);$/;"	m	class:Colors	file:
Black	build/include/tool/UTOpenGL/Colors.h	/^    static RGB White, Gray, Black, Pink;$/;"	m	class:Colors
Black	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Black = TORGB(0,0,0);$/;"	m	class:Colors	file:
Black	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB White, Gray, Black, Pink;$/;"	m	class:Colors
BlancClass	tools/behaviorSim/cma.py	/^class BlancClass(object):$/;"	c
Blank	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Blank() {$/;"	f	namespace:YAML::Exp
BlankOrBreak	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& BlankOrBreak() {$/;"	f	namespace:YAML::Exp
Blob	core/vision/Union_find.h	/^			Blob()$/;"	f	struct:MergeBlob::Blob
Blob	core/vision/Union_find.h	/^		struct Blob$/;"	s	class:MergeBlob
Blob	core/vision/structures/Blob.h	/^  Blob() : lpIndex(MAX_BLOB_VISIONPOINTS, 0) { }$/;"	f	struct:Blob
Blob	core/vision/structures/Blob.h	/^struct Blob {$/;"	s
Block	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Block,$/;"	e	enum:YAML::EMITTER_MANIP
BlockCenter	core/python/behaviors/keeper.py	/^class BlockCenter(Node):$/;"	c
BlockCenter	core/python/behaviors/keeper_3.py	/^class BlockCenter(Node):$/;"	c
BlockCnt	lib/lua/src/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	lib/lua/src/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BlockCollectionNodes	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockCollectionNodes()$/;"	f	namespace:Test::Spec
BlockEntry	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& BlockEntry() {$/;"	f	namespace:YAML::Exp
BlockFolding	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockFolding()$/;"	f	namespace:Test::Spec
BlockIndentationHeader	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockIndentationHeader()$/;"	f	namespace:Test::Spec
BlockKeyWithNullValue	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool BlockKeyWithNullValue()$/;"	f	namespace:Test::Parser
BlockLeft	core/python/behaviors/keeper.py	/^class BlockLeft(Node):$/;"	c
BlockLeft	core/python/behaviors/keeper_3.py	/^class BlockLeft(Node):$/;"	c
BlockLeft	core/python/pose.py	/^class BlockLeft(Task):$/;"	c
BlockMap	lib/yaml-cpp/src/collectionstack.h	/^		enum value { None, BlockMap, BlockSeq, FlowMap, FlowSeq, CompactMap };$/;"	e	enum:YAML::CollectionType::value
BlockMapAsKey	lib/yaml-cpp/test/emittertests.cpp	/^		void BlockMapAsKey(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
BlockMappings	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockMappings()$/;"	f	namespace:Test::Spec
BlockNodeTypes	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockNodeTypes()$/;"	f	namespace:Test::Spec
BlockRight	core/python/behaviors/keeper.py	/^class BlockRight(Node):$/;"	c
BlockRight	core/python/behaviors/keeper_3.py	/^class BlockRight(Node):$/;"	c
BlockRight	core/python/pose.py	/^class BlockRight(Task):$/;"	c
BlockScalarHeader	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockScalarHeader()$/;"	f	namespace:Test::Spec
BlockScalarIndicators	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockScalarIndicators()$/;"	f	namespace:Test::Spec
BlockScalarNodes	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockScalarNodes()$/;"	f	namespace:Test::Spec
BlockSeq	lib/yaml-cpp/src/collectionstack.h	/^		enum value { None, BlockMap, BlockSeq, FlowMap, FlowSeq, CompactMap };$/;"	e	enum:YAML::CollectionType::value
BlockSequence	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockSequence()$/;"	f	namespace:Test::Spec
BlockSequenceEntryTypes	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockSequenceEntryTypes()$/;"	f	namespace:Test::Spec
BlockStructureIndicators	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST BlockStructureIndicators()$/;"	f	namespace:Test::Spec
BlockWrapper	core/python/memory.py	/^class BlockWrapper(object):$/;"	c
Blocker	core/python/behaviors/keeper.py	/^class Blocker(Node):$/;"	c
Blocker	core/python/behaviors/keeper_2.py	/^class Blocker(Node):$/;"	c
Blocker	core/python/behaviors/keeper_3.py	/^class Blocker(Node):$/;"	c
Blue	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Blue = TORGB(0,0,255);$/;"	m	class:Colors	file:
Blue	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Blue	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Blue = TORGB(0,0,255);$/;"	m	class:Colors	file:
Blue	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Body	core/motion/rswalk2014/types/ActionCommand.hpp	/^      Body()$/;"	f	struct:ActionCommand::Body
Body	core/motion/rswalk2014/types/ActionCommand.hpp	/^      Body(ActionType at, int f = 0, int l = 0, float t = 0.0, float p = 1.0, $/;"	f	struct:ActionCommand::Body
Body	core/motion/rswalk2014/types/ActionCommand.hpp	/^   struct Body {$/;"	s	namespace:ActionCommand
BodyFrame	core/common/RobotInfo.h	/^class BodyFrame {$/;"	c
BodyID	build/include/tool/StateWindow.h	/^     BodyID,$/;"	e	enum:StateWindow::__anon3
BodyID	tools/UTNaoTool/StateWindow.h	/^     BodyID,$/;"	e	enum:StateWindow::__anon141
BodyModel	core/motion/rswalk2014/BodyModel.cpp	/^BodyModel::BodyModel() : filAccX(0.0),$/;"	f	class:BodyModel
BodyModel	core/motion/rswalk2014/BodyModel.hpp	/^class BodyModel {$/;"	c
BodyModelBlock	core/memory/BodyModelBlock.h	/^  BodyModelBlock()  {$/;"	f	struct:BodyModelBlock
BodyModelBlock	core/memory/BodyModelBlock.h	/^struct BodyModelBlock : public MemoryBlock {$/;"	s
BodyPart	core/common/RobotInfo.h	/^class BodyPart {$/;"	c
BodyVersion	build/include/tool/StateWindow.h	/^     BodyVersion,$/;"	e	enum:StateWindow::__anon3
BodyVersion	tools/UTNaoTool/StateWindow.h	/^     BodyVersion,$/;"	e	enum:StateWindow::__anon141
BoolFormatting	lib/yaml-cpp/test/emittertests.cpp	/^		void BoolFormatting(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
BottomCamera	core/imageCapture/BottomCamera.cpp	/^BottomCamera::BottomCamera(const ImageParams& iparams, CameraParams& p, CameraParams& rp) : NaoCamera(iparams, p,rp) {$/;"	f	class:BottomCamera
BottomCamera	core/imageCapture/BottomCamera.h	/^class BottomCamera : public NaoCamera {$/;"	c
BoundPenalty	tools/behaviorSim/cma.py	/^class BoundPenalty(object):$/;"	c
Break	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Break() {$/;"	f	namespace:YAML::Exp
Brown	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Brown = TORGB(205,92,92);$/;"	m	class:Colors	file:
Brown	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Brown	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Brown = TORGB(205,92,92);$/;"	m	class:Colors	file:
Brown	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Buf_size	lib/zlib/trees.c	/^#define Buf_size /;"	d	file:
Buffer	core/common/Serializable.h	/^    typedef StreamBuffer Buffer;$/;"	t	class:Serializable
BuildGraphOfNextDocument	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^  typename Impl::Node *BuildGraphOfNextDocument(Parser& parser, Impl& impl)$/;"	f	namespace:YAML
BuildGraphOfNextDocument	lib/yaml-cpp/src/contrib/graphbuilder.cpp	/^  void *BuildGraphOfNextDocument(Parser& parser, GraphBuilderInterface& graphBuilder)$/;"	f	namespace:YAML
ButtonInfo	core/sensor/ButtonModule.h	/^    ButtonInfo(bool allow_multiple):$/;"	f	struct:ButtonModule::ButtonInfo
ButtonInfo	core/sensor/ButtonModule.h	/^  struct ButtonInfo {$/;"	s	class:ButtonModule
ButtonModule	core/sensor/ButtonModule.cpp	/^ButtonModule::ButtonModule():$/;"	f	class:ButtonModule
ButtonModule	core/sensor/ButtonModule.h	/^class ButtonModule: public Module {$/;"	c
ByKindTagWithScalar	lib/yaml-cpp/test/emittertests.cpp	/^		void ByKindTagWithScalar(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Byte	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		inline char Byte(int ch)$/;"	f	namespace:Test::__anon130
Byte	lib/zlib/zconf.h	/^#  define Byte /;"	d
Byte	lib/zlib/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Bytef	lib/zlib/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	lib/zlib/zconf.h	/^#  define Bytef /;"	d
C	core/localization/LocalizationModule.h	/^    Eigen::Matrix<double, 4, 4> C;$/;"	m	class:LocalizationModule
C	core/python/state_machine.py	/^C = CompletionEvent$/;"	v
C	core/sensor/InertialFilter.h	/^  NMatrix C;$/;"	m	class:InertialFilter
C	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  OutputMatrix C;$/;"	m	class:LinearKalmanFilter
C	kalman_filters/src/ekf_test.cpp	/^Eigen::Matrix<double, 2, 2> C;$/;"	v
C	kalman_filters/src/ukf_test.cpp	/^Eigen::Matrix<double, 2, 2> C;$/;"	v
C	vision_testing/include/vision_testing/vision_testing.hpp	/^#define C(/;"	d
CALIBRATE_ONCE	core/sensor/SensorModule.cpp	/^#define CALIBRATE_ONCE$/;"	d	file:
CALIBRATION_NFY4RBXJ	core/common/Calibration.h	/^#define CALIBRATION_NFY4RBXJ$/;"	d
CALIBRATION_WIDGET_H	build/include/tool/IntrinsicCalibrationWidget.h	/^#define CALIBRATION_WIDGET_H$/;"	d
CALIBRATION_WIDGET_H	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^#define CALIBRATION_WIDGET_H$/;"	d
CALLBACK	build/include/tool/ProcessExecutor.h	/^#define CALLBACK(/;"	d
CALLBACK	tools/UTNaoTool/ProcessExecutor.h	/^#define CALLBACK(/;"	d
CAMERA	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^         CAMERA = 12,$/;"	e	enum:Kinematics::Link
CAMERABLOCK_D16C3JJ3	core/memory/CameraBlock.h	/^#define CAMERABLOCK_D16C3JJ3$/;"	d
CAMERA_CALIBRATION_H	core/common/RobotCalibration.h	/^#define CAMERA_CALIBRATION_H$/;"	d
CAMERA_CALIBRATOR_H	build/include/tool/calibration/ExtrinsicCalibrator.h	/^#define CAMERA_CALIBRATOR_H$/;"	d
CAMERA_CALIBRATOR_H	tools/UTNaoTool/calibration/ExtrinsicCalibrator.h	/^#define CAMERA_CALIBRATOR_H$/;"	d
CAMERA_DH_CHAIN_LEN	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^#define CAMERA_DH_CHAIN_LEN /;"	d
CAMERA_FOV_W	core/motion/rswalk2014/perception/vision/CameraDefs.hpp	/^#define CAMERA_FOV_W /;"	d
CAMERA_MATRIX_H	core/vision/CameraMatrix.h	/^#define CAMERA_MATRIX_H$/;"	d
CAMERA_WINDOW_H	build/include/tool/CameraWindow.h	/^#define CAMERA_WINDOW_H$/;"	d
CAMERA_WINDOW_H	tools/UTNaoTool/CameraWindow.h	/^#define CAMERA_WINDOW_H$/;"	d
CAP_POSITION	lib/lua/src/lstrlib.c	/^#define CAP_POSITION	/;"	d	file:
CAP_UNFINISHED	lib/lua/src/lstrlib.c	/^#define CAP_UNFINISHED	/;"	d	file:
CARTESIAN	core/math/Geometry.h	/^  CARTESIAN,$/;"	e	enum:CoordSystemT
CAUTIOUS_DEFENDER	core/common/Roles.h	/^  CAUTIOUS_DEFENDER = 7,$/;"	e	enum:Role
CC	lib/lua/etc/Makefile	/^CC= gcc$/;"	m
CC	lib/lua/src/Makefile	/^CC= gcc$/;"	m
CC	lib/zlib/Makefile	/^CC=gcc$/;"	m
CCallS	lib/lua/src/lapi.c	/^struct CCallS {  \/* data to `f_Ccall' *\/$/;"	s	file:
CClosure	lib/lua/src/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	lib/lua/src/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CELLS	lib/lua/test/life.lua	/^function CELLS(w,h)$/;"	f
CENTER	core/memory/BehaviorBlock.h	/^    CENTER$/;"	e	enum:Dive::diveTypes
CENTER_CIRCLE_DIAMETER	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define CENTER_CIRCLE_DIAMETER /;"	d
CENTI	core/math/Geometry.h	/^#define CENTI /;"	d
CFLAGS	lib/lua/etc/Makefile	/^CFLAGS= -O2 -Wall -I$(INC) $(MYCFLAGS)$/;"	m
CFLAGS	lib/lua/src/Makefile	/^CFLAGS= -O2 -Wall $(MYCFLAGS)$/;"	m
CFLAGS	lib/zlib/Makefile	/^CFLAGS=-O3 -D_LARGEFILE64_SOURCE=1$/;"	m
CHAR_IN_ALIAS	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const CHAR_IN_ALIAS          = "illegal character found while scanning alias";$/;"	m	namespace:YAML::ErrorMsg
CHAR_IN_ANCHOR	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const CHAR_IN_ANCHOR         = "illegal character found while scanning anchor";$/;"	m	namespace:YAML::ErrorMsg
CHAR_IN_BLOCK	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const CHAR_IN_BLOCK          = "unexpected character in block scalar";$/;"	m	namespace:YAML::ErrorMsg
CHAR_IN_SCALAR	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const CHAR_IN_SCALAR         = "illegal character in scalar";$/;"	m	namespace:YAML::ErrorMsg
CHAR_IN_TAG_HANDLE	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const CHAR_IN_TAG_HANDLE     = "illegal character found while scanning tag handle";$/;"	m	namespace:YAML::ErrorMsg
CHASER	core/common/Roles.h	/^  CHASER = 5,$/;"	e	enum:Role
CHECK	lib/zlib/inflate.h	/^    CHECK,      \/* i: waiting for 32-bit check value *\/$/;"	e	enum:__anon136
CHECKERBOARD_CALIBRATOR_H	build/include/tool/calibration/IntrinsicCalibrator.h	/^#define CHECKERBOARD_CALIBRATOR_H$/;"	d
CHECKERBOARD_CALIBRATOR_H	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^#define CHECKERBOARD_CALIBRATOR_H$/;"	d
CHECK_BUFFER	core/common/Serializable.h	/^#define CHECK_BUFFER /;"	d
CHECK_ERR	lib/zlib/example.c	/^#define CHECK_ERR(/;"	d	file:
CHECK_LOGGER_LEVELS	core/memory/TextLogger.cpp	/^#define CHECK_LOGGER_LEVELS /;"	d	file:
CHESSBOARD	build/include/tool/calibration/CalibratorSettings.h	/^      CHESSBOARD = 0,$/;"	e	enum:CalibratorSettings::Pattern
CHESSBOARD	tools/UTNaoTool/calibration/CalibratorSettings.h	/^      CHESSBOARD = 0,$/;"	e	enum:CalibratorSettings::Pattern
CHOMP	lib/yaml-cpp/src/scanscalar.h	/^	enum CHOMP { STRIP = -1, CLIP, KEEP };$/;"	g	namespace:YAML
CIRCLES_GRID	build/include/tool/calibration/CalibratorSettings.h	/^      CIRCLES_GRID = 1,$/;"	e	enum:CalibratorSettings::Pattern
CIRCLES_GRID	tools/UTNaoTool/calibration/CalibratorSettings.h	/^      CIRCLES_GRID = 1,$/;"	e	enum:CalibratorSettings::Pattern
CIRCLE_DIAMETER	core/common/Bowdoin14Field.h	/^const float CIRCLE_DIAMETER = 1500;$/;"	v
CIRCLE_DIAMETER	core/common/Field.h	/^const float CIRCLE_DIAMETER = 1500;$/;"	v
CIRCLE_DIAMETER	core/common/RC2013Field.h	/^const float CIRCLE_DIAMETER = 1508;$/;"	v
CIRCLE_DIAMETER	core/common/UTField.h	/^const float CIRCLE_DIAMETER = 1500;$/;"	v
CIRCLE_HEX_LENGTH	core/common/Bowdoin14Field.h	/^const float CIRCLE_HEX_LENGTH = 2.0*(CIRCLE_RADIUS*sinf(DEG_T_RAD*30.0));$/;"	v
CIRCLE_HEX_LENGTH	core/common/Field.h	/^const float CIRCLE_HEX_LENGTH = 2.0*(CIRCLE_RADIUS*sinf(DEG_T_RAD*30.0));$/;"	v
CIRCLE_HEX_LENGTH	core/common/RC2013Field.h	/^const float CIRCLE_HEX_LENGTH = 2.0*(CIRCLE_RADIUS*sinf(DEG_T_RAD*30.0));$/;"	v
CIRCLE_HEX_LENGTH	core/common/UTField.h	/^const float CIRCLE_HEX_LENGTH = 2.0*(CIRCLE_RADIUS*sinf(DEG_T_RAD*30.0));$/;"	v
CIRCLE_RADIUS	core/common/Bowdoin14Field.h	/^const float CIRCLE_RADIUS = CIRCLE_DIAMETER \/ 2.0;$/;"	v
CIRCLE_RADIUS	core/common/Field.h	/^const float CIRCLE_RADIUS = CIRCLE_DIAMETER \/ 2.0;$/;"	v
CIRCLE_RADIUS	core/common/RC2013Field.h	/^const float CIRCLE_RADIUS = CIRCLE_DIAMETER \/ 2.0;$/;"	v
CIRCLE_RADIUS	core/common/UTField.h	/^const float CIRCLE_RADIUS = CIRCLE_DIAMETER \/ 2.0;$/;"	v
CKF	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^CKF::CKF(){$/;"	f	class:CKF
CKF	core/motion/rswalk2014/perception/kinematics/CKF.hpp	/^class CKF {$/;"	c
CLASSIFICATION_WIDGET_H	build/include/tool/ClassificationWidget.h	/^#define CLASSIFICATION_WIDGET_H$/;"	d
CLASSIFICATION_WIDGET_H	tools/UTNaoTool/ClassificationWidget.h	/^#define CLASSIFICATION_WIDGET_H$/;"	d
CLASSIFICATION_WINDOW_GZ6WWOJ1	tools/color_classifier/include/color_classifier/classification_window.hpp	/^#define CLASSIFICATION_WINDOW_GZ6WWOJ1$/;"	d
CLASSIFIER_H	core/vision/Classifier.h	/^#define CLASSIFIER_H$/;"	d
CLEAR_HASH	lib/zlib/deflate.c	/^#define CLEAR_HASH(/;"	d	file:
CLIP	core/motion/rswalk2014/utils/clip.hpp	/^inline static T CLIP(const T &x, const T &bound) {$/;"	f
CLIP	core/motion/rswalk2014/utils/clip.hpp	/^inline static T CLIP(const T& x, const T& lowerBound, const T& upperBound) {$/;"	f
CLIP	lib/yaml-cpp/src/scanscalar.h	/^	enum CHOMP { STRIP = -1, CLIP, KEEP };$/;"	e	enum:YAML::CHOMP
CLIP	vision_testing/include/vision_testing/vision_testing.hpp	/^#define CLIP(/;"	d
CMADataLogger	tools/behaviorSim/cma.py	/^class CMADataLogger(BaseDataLogger):  # might become a dict at some point$/;"	c
CMAEvolutionStrategy	tools/behaviorSim/cma.py	/^class CMAEvolutionStrategy(OOOptimizer):$/;"	c
CMAEvolutionStrategy	tools/behaviorSim/runCMAES.py	/^from cma import CMAEvolutionStrategy, Options$/;"	i
CMAParameters	tools/behaviorSim/cma.py	/^class CMAParameters(object):$/;"	c
CMAStopDict	tools/behaviorSim/cma.py	/^class CMAStopDict(dict):$/;"	c
CODELENS	lib/zlib/inflate.h	/^        CODELENS,   \/* i: waiting for length\/lit and distance code lengths *\/$/;"	e	enum:__anon136
CODES	lib/zlib/inftrees.h	/^    CODES,$/;"	e	enum:__anon138
COLLECTIONSTACK_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/collectionstack.h	/^#define COLLECTIONSTACK_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
COLORS_H	core/vision/enums/Colors.h	/^#define COLORS_H$/;"	d
COLOR_CONVERSION_H	core/common/ColorConversion.h	/^#define COLOR_CONVERSION_H$/;"	d
COLOR_NAME	core/vision/enums/Colors.h	/^#define COLOR_NAME(/;"	d
COLOR_TABLE_METHODS_H	core/vision/ColorTableMethods.h	/^#define COLOR_TABLE_METHODS_H$/;"	d
COLOR_WIDTH_ABS_BLOB	core/vision/structures/VisionParams.h	/^    int COLOR_WIDTH_ABS_BLOB;\/\/ = 0;$/;"	m	struct:VisionParams
COLOR_WIDTH_RATIO_BLOB	core/vision/structures/VisionParams.h	/^    int COLOR_WIDTH_RATIO_BLOB;\/\/ = 6;$/;"	m	struct:VisionParams
COMMENT	lib/zlib/inflate.h	/^    COMMENT,    \/* i: waiting for end of comment (gzip) *\/$/;"	e	enum:__anon136
COMMENT_STATE	lib/zlib/deflate.h	/^#define COMMENT_STATE /;"	d
COMMON_15V925VT	core/math/Common.h	/^#define COMMON_15V925VT$/;"	d
COMMUNICATION_GENERATOR_H	build/include/tool/simulation/CommunicationGenerator.h	/^#define COMMUNICATION_GENERATOR_H$/;"	d
COMMUNICATION_GENERATOR_H	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^#define COMMUNICATION_GENERATOR_H$/;"	d
COMMUNICATION_MODULE_H	core/communications/CommunicationModule.h	/^#define COMMUNICATION_MODULE_H$/;"	d
COMM_INFO_H	core/communications/CommInfo.h	/^#define COMM_INFO_H$/;"	d
COM_HEIGHT	core/motion/rswalk2014/BodyModel.cpp	/^const float BodyModel::COM_HEIGHT = 200;$/;"	m	class:BodyModel	file:
COM_HEIGHT	core/motion/rswalk2014/BodyModel.hpp	/^      static const float COM_HEIGHT;$/;"	m	class:BodyModel
COM_OFFSET	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float COM_OFFSET = 0.01;                             \/\/ center of mass offset in x direction in meters$/;"	v
CONDOR_SLEEP_TIME	tools/behaviorSim/runCMAES.py	/^CONDOR_SLEEP_TIME = 10$/;"	v
CONFIDENCE	core/sonar/SonarModule.h	/^  const float CONFIDENCE = 0.6;$/;"	m	namespace:Sonar
CONFIG_MAP	core/python/cfgmap.py	/^CONFIG_MAP = {$/;"	v
CONFIG_PATH	build/include/tool/WorldWindow.cpp	/^#define CONFIG_PATH(/;"	d	file:
CONFIG_PATH	tools/UTNaoTool/WorldWindow.cpp	/^#define CONFIG_PATH(/;"	d	file:
CONF_HISTORY_WEIGHT	core/sonar/SonarModule.h	/^  const float CONF_HISTORY_WEIGHT = 0.5;$/;"	m	namespace:Sonar
CONTINUOUS	core/motion/rswalk2014/utils/body.hpp	/^      const float CONTINUOUS  = 64.0f; \/\/ register for periodic capture, then can just read every 100ms$/;"	m	namespace:Sonar::Mode
CONVERSION_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^#define CONVERSION_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
COORDINATES_H	core/vision/structures/Coordinates.h	/^#define COORDINATES_H$/;"	d
COPY	lib/zlib/gzguts.h	/^#define COPY /;"	d
COPY	lib/zlib/inflate.h	/^        COPY,       \/* i\/o: waiting for input or output to copy stored block *\/$/;"	e	enum:__anon136
COPY_	lib/zlib/inflate.h	/^        COPY_,      \/* i\/o: same as COPY below, but only first time in *\/$/;"	e	enum:__anon136
CORE_INSTANCE	build/pythonswig/PythonInterface.h	/^    static VisionCore* CORE_INSTANCE;$/;"	m	class:PythonInterface
CORE_INSTANCE	core/python/PythonInterface.h	/^    static VisionCore* CORE_INSTANCE;$/;"	m	class:PythonInterface
CORE_MUTEX	build/pythonswig/PythonInterface.cpp	/^std::mutex PythonInterface::CORE_MUTEX;$/;"	m	class:PythonInterface	file:
CORE_MUTEX	build/pythonswig/PythonInterface.h	/^    static std::mutex CORE_MUTEX, PY_MUTEX;$/;"	m	class:PythonInterface
CORE_MUTEX	core/python/PythonInterface.cpp	/^std::mutex PythonInterface::CORE_MUTEX;$/;"	m	class:PythonInterface	file:
CORE_MUTEX	core/python/PythonInterface.h	/^    static std::mutex CORE_MUTEX, PY_MUTEX;$/;"	m	class:PythonInterface
CORE_O	lib/lua/src/Makefile	/^CORE_O=	lapi.o lcode.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o \\$/;"	m
CORNERPOINT_H	core/vision/structures/CornerPoint.h	/^#define CORNERPOINT_H$/;"	d
CO_DEAD	lib/lua/src/lbaselib.c	/^#define CO_DEAD	/;"	d	file:
CO_NOR	lib/lua/src/lbaselib.c	/^#define CO_NOR	/;"	d	file:
CO_RUN	lib/lua/src/lbaselib.c	/^#define CO_RUN	/;"	d	file:
CO_SUS	lib/lua/src/lbaselib.c	/^#define CO_SUS	/;"	d	file:
CPP	lib/zlib/Makefile	/^CPP=gcc -E$/;"	m
CPU_SSE2	lib/alglib/ap.h	/^enum { CPU_SSE2=1 };$/;"	e	enum:alglib_impl::__anon31
CP_REPLACEMENT_CHARACTER	lib/yaml-cpp/src/stream.cpp	/^#define CP_REPLACEMENT_CHARACTER /;"	d	file:
CRC2	lib/zlib/inflate.c	/^#  define CRC2(/;"	d	file:
CRC4	lib/zlib/inflate.c	/^#  define CRC4(/;"	d	file:
CREATE_ABC	lib/lua/src/lopcodes.h	/^#define CREATE_ABC(/;"	d
CREATE_ABx	lib/lua/src/lopcodes.h	/^#define CREATE_ABx(/;"	d
CRGB2Cb	vision_testing/include/vision_testing/vision_testing.hpp	/^#define CRGB2Cb(/;"	d
CRGB2Cr	vision_testing/include/vision_testing/vision_testing.hpp	/^#define CRGB2Cr(/;"	d
CRGB2Y	vision_testing/include/vision_testing/vision_testing.hpp	/^#define CRGB2Y(/;"	d
CROP	build/include/tool/RobotControllerWidget.cpp	/^#define CROP(/;"	d	file:
CROP	build/include/tool/simulation/RobotMovementSimulator.cpp	/^#define CROP(/;"	d	file:
CROP	tools/UTNaoTool/RobotControllerWidget.cpp	/^#define CROP(/;"	d	file:
CROP	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^#define CROP(/;"	d	file:
CROSS_OFFSET	core/common/WorldObject.h	/^const int CROSS_OFFSET = WO_OWN_PENALTY_CROSS;$/;"	v
CROSS_PATH	install/install_naoqi	/^CROSS_PATH = os.path.join(os.environ['NAO_HOME'],'naoqi','crosstoolchain')$/;"	v
CROSS_SUFFIX	install/install_naoqi	/^CROSS_SUFFIX = ''$/;"	v
CROSS_TIME	core/motion/GetupModule.cpp	/^const float CROSS_TIME = 0.5;$/;"	v
CROUCH	core/motion/rswalk2014/Walk2014Generator.hpp	/^      CROUCH       = 2, \/\/ process of transitioning from STAND to WALK$/;"	e	enum:Walk2014Generator::Walk2014Option
CROUCH_STAND_PERIOD	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float CROUCH_STAND_PERIOD = 0.5;\/\/0.5;                     \/\/ time in seconds to crouch$/;"	v
CYAN	vision_testing/src/vision_testing.cpp	/^  CYAN,$/;"	e	enum:FullColor	file:
CYAN_GREEN	vision_testing/src/vision_testing.cpp	/^  CYAN_GREEN,$/;"	e	enum:FullColor	file:
CYCbCr2B	vision_testing/include/vision_testing/vision_testing.hpp	/^#define CYCbCr2B(/;"	d
CYCbCr2G	vision_testing/include/vision_testing/vision_testing.hpp	/^#define CYCbCr2G(/;"	d
CYCbCr2R	vision_testing/include/vision_testing/vision_testing.hpp	/^#define CYCbCr2R(/;"	d
Calculate_blob	core/vision/Union_find.cpp	/^void MergeBlob :: Calculate_blob()$/;"	f	class:MergeBlob
Calibration	core/common/Calibration.h	/^class Calibration {$/;"	c
CalibrationItem	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^    CalibrationItem(std::string nameStr, double val, int idx) {$/;"	f	class:CalibrationItem
CalibrationItem	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^class CalibrationItem : public QListWidgetItem {$/;"	c	file:
CalibrationItem	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^    CalibrationItem(std::string nameStr, double val, int idx) {$/;"	f	class:CalibrationItem
CalibrationItem	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^class CalibrationItem : public QListWidgetItem {$/;"	c	file:
CalibratorSettings	build/include/tool/calibration/CalibratorSettings.cpp	/^CalibratorSettings::CalibratorSettings() {$/;"	f	class:CalibratorSettings
CalibratorSettings	build/include/tool/calibration/CalibratorSettings.h	/^class CalibratorSettings {$/;"	c
CalibratorSettings	tools/UTNaoTool/calibration/CalibratorSettings.cpp	/^CalibratorSettings::CalibratorSettings() {$/;"	f	class:CalibratorSettings
CalibratorSettings	tools/UTNaoTool/calibration/CalibratorSettings.h	/^class CalibratorSettings {$/;"	c
CallInfo	lib/lua/src/lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	lib/lua/src/lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallS	lib/lua/src/lapi.c	/^struct CallS {  \/* data to `f_call' *\/$/;"	s	file:
Callback	build/include/tool/ProcessExecutor.h	/^    typedef std::function<void(bool)> Callback;$/;"	t	class:ProcessExecutor
Callback	tools/UTNaoTool/ProcessExecutor.h	/^    typedef std::function<void(bool)> Callback;$/;"	t	class:ProcessExecutor
CamelCase	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		CamelCase,  \/\/ No, Off$/;"	e	enum:YAML::EMITTER_MANIP
Camera	core/common/RobotInfo.h	/^class Camera {$/;"	c
CameraBlock	core/memory/CameraBlock.h	/^ CameraBlock():$/;"	f	struct:CameraBlock
CameraBlock	core/memory/CameraBlock.h	/^struct CameraBlock : public MemoryBlock {$/;"	s
CameraMatrix	core/vision/CameraMatrix.cpp	/^CameraMatrix::CameraMatrix(const ImageParams& iparams, const Camera::Type& camera)$/;"	f	class:CameraMatrix
CameraMatrix	core/vision/CameraMatrix.h	/^class CameraMatrix {$/;"	c
CameraParams	core/common/RobotInfo.h	/^struct CameraParams {$/;"	s
CameraWindow	build/include/tool/CameraWindow.cpp	/^CameraWindow::CameraWindow(QMainWindow* parent)  {$/;"	f	class:CameraWindow
CameraWindow	build/include/tool/CameraWindow.h	/^class CameraWindow : public QMainWindow, public Ui_UTCameraWindow {$/;"	c
CameraWindow	tools/UTNaoTool/CameraWindow.cpp	/^CameraWindow::CameraWindow(QMainWindow* parent)  {$/;"	f	class:CameraWindow
CameraWindow	tools/UTNaoTool/CameraWindow.h	/^class CameraWindow : public QMainWindow, public Ui_UTCameraWindow {$/;"	c
CanEmitNewline	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::CanEmitNewline() const$/;"	f	class:YAML::Emitter
CanInsertPotentialSimpleKey	lib/yaml-cpp/src/simplekey.cpp	/^	bool Scanner::CanInsertPotentialSimpleKey() const$/;"	f	class:YAML::Scanner
CarlosBackStandup	interfaces/nao/src/almotionwrapper.cpp	/^void ALMotionWrapper::CarlosBackStandup(){$/;"	f	class:ALMotionWrapper
Chain	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      enum Chain {$/;"	g	class:Kinematics
CharAllocator	core/memory/SharedMemory.h	/^typedef boost::interprocess::allocator<char,boost::interprocess::managed_shared_memory::segment_manager> CharAllocator;$/;"	t
CharAt	lib/yaml-cpp/src/stream.h	/^	inline char Stream::CharAt(size_t i) const {$/;"	f	class:YAML::Stream
CharacterSet	lib/yaml-cpp/src/stream.h	/^		enum CharacterSet {utf8, utf16le, utf16be, utf32le, utf32be};$/;"	g	class:YAML::Stream
CheckType	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    static T* CheckType(U* p) {return p;}$/;"	f	class:YAML::GraphBuilder
ChestBlue	core/common/RobotInfo.h	/^  ChestBlue,$/;"	e	enum:LED
ChestBlue	core/motion/rswalk2014/utils/body.hpp	/^      ChestBlue,$/;"	e	enum:LEDs::LEDCode
ChestBoard_Button	core/motion/rswalk2014/utils/body.hpp	/^      ChestBoard_Button, \/\/24$/;"	e	enum:RSSensors::SensorCodesEnum
ChestGreen	core/common/RobotInfo.h	/^  ChestGreen,$/;"	e	enum:LED
ChestGreen	core/motion/rswalk2014/utils/body.hpp	/^      ChestGreen,$/;"	e	enum:LEDs::LEDCode
ChestRed	core/common/RobotInfo.h	/^  ChestRed,$/;"	e	enum:LED
ChestRed	core/motion/rswalk2014/utils/body.hpp	/^      ChestRed,$/;"	e	enum:LEDs::LEDCode
CholeskyDecomposition	core/math/MatrixOperations.h	/^    static Eigen::Matrix<T, R, R> CholeskyDecomposition(const Eigen::Matrix<T, R, R>& A) {$/;"	f	class:MatrixOperations
CholeskyDecomposition	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^static Eigen::Matrix<T, R, R> CholeskyDecomposition(const Eigen::Matrix<T, R, R>& A)$/;"	f
Chomp	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Chomp() {$/;"	f	namespace:YAML::Exp
ChompIndicator	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& ChompIndicator() {$/;"	f	namespace:YAML::Exp
ChompedFoldedScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void ChompedFoldedScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
ChompedLiteralScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void ChompedLiteralScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
ChompingFinalLineBreak	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST ChompingFinalLineBreak()$/;"	f	namespace:Test::Spec
ChompingTrailingLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST ChompingTrailingLines()$/;"	f	namespace:Test::Spec
Circle	core/math/Geometry.cpp	/^Circle::Circle( const Point2D& pCenter, float radius )$/;"	f	class:Circle
Circle	core/math/Geometry.cpp	/^Circle::Circle()$/;"	f	class:Circle
Circle	core/math/Geometry.h	/^class Circle$/;"	c
ClassificationWidget	build/include/tool/ClassificationWidget.cpp	/^ClassificationWidget::ClassificationWidget(QWidget* parent) : QWidget(parent), log_(NULL) {$/;"	f	class:ClassificationWidget
ClassificationWidget	build/include/tool/ClassificationWidget.h	/^class ClassificationWidget : public QWidget, public Ui_UTClassificationWidget {$/;"	c
ClassificationWidget	tools/UTNaoTool/ClassificationWidget.cpp	/^ClassificationWidget::ClassificationWidget(QWidget* parent) : QWidget(parent), log_(NULL) {$/;"	f	class:ClassificationWidget
ClassificationWidget	tools/UTNaoTool/ClassificationWidget.h	/^class ClassificationWidget : public QWidget, public Ui_UTClassificationWidget {$/;"	c
ClassificationWindow	tools/color_classifier/include/color_classifier/classification_window.hpp	/^  class ClassificationWindow : public QMainWindow {$/;"	c	namespace:color_classifier
ClassificationWindow	tools/color_classifier/src/classification_window.cpp	/^  ClassificationWindow::ClassificationWindow(QWidget *parent) : QMainWindow(parent) {$/;"	f	class:color_classifier::ClassificationWindow
Classifier	core/vision/Classifier.cpp	/^Classifier::Classifier(const VisionBlocks& vblocks, const VisionParams& vparams, const ImageParams& iparams, const Camera::Type& camera) :$/;"	f	class:Classifier
Classifier	core/vision/Classifier.h	/^class Classifier {$/;"	c
Clear	lib/yaml-cpp/src/node.cpp	/^	void Node::Clear()$/;"	f	class:YAML::Node
ClearModifiedSettings	lib/yaml-cpp/src/emitterstate.cpp	/^	void EmitterState::ClearModifiedSettings()$/;"	f	class:YAML::EmitterState
ClickMode	tools/color_classifier/include/color_classifier/classification_window.hpp	/^  enum ClickMode {$/;"	g	namespace:color_classifier
ClippedGenerator	core/motion/rswalk2014/ClippedGenerator.cpp	/^ClippedGenerator::ClippedGenerator(Generator* g)$/;"	f	class:ClippedGenerator
ClippedGenerator	core/motion/rswalk2014/ClippedGenerator.hpp	/^class ClippedGenerator : Generator {$/;"	c
Clone	lib/yaml-cpp/src/node.cpp	/^	std::auto_ptr<Node> Node::Clone() const$/;"	f	class:YAML::Node
Closure	lib/lua/src/lobject.h	/^typedef union Closure {$/;"	u
Closure	lib/lua/src/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	lib/lua/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure
ClosureHeader	lib/lua/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure
ClosureHeader	lib/lua/src/lobject.h	/^#define ClosureHeader /;"	d
Cluster	core/memory/BehaviorParamBlock.h	/^class Cluster { \/\/ class for lua access, otherwise namespace$/;"	c
ClusterKickStrategy	core/memory/BehaviorParamBlock.h	/^  ClusterKickStrategy() {}$/;"	f	struct:ClusterKickStrategy
ClusterKickStrategy	core/memory/BehaviorParamBlock.h	/^struct ClusterKickStrategy {$/;"	s
CoachPacket	core/common/CoachPacket.h	/^struct CoachPacket {$/;"	s
CoachSimulation	build/include/tool/simulation/CoachSimulation.cpp	/^CoachSimulation::CoachSimulation() : IBSim(false, WO_TEAM_COACH) {$/;"	f	class:CoachSimulation
CoachSimulation	build/include/tool/simulation/CoachSimulation.h	/^class CoachSimulation : public IsolatedBehaviorSimulation {$/;"	c
CoachSimulation	tools/UTNaoTool/simulation/CoachSimulation.cpp	/^CoachSimulation::CoachSimulation() : IBSim(false, WO_TEAM_COACH) {$/;"	f	class:CoachSimulation
CoachSimulation	tools/UTNaoTool/simulation/CoachSimulation.h	/^class CoachSimulation : public IsolatedBehaviorSimulation {$/;"	c
Code	lib/zlib/deflate.h	/^#define Code /;"	d
CollectionStack	lib/yaml-cpp/src/collectionstack.h	/^	class CollectionStack$/;"	c	namespace:YAML
CollectionType	lib/yaml-cpp/src/collectionstack.h	/^	struct CollectionType {$/;"	s	namespace:YAML
ColonAsScalar	lib/yaml-cpp/test/emittertests.cpp	/^		void ColonAsScalar(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
ColonAtEndOfScalar	lib/yaml-cpp/test/emittertests.cpp	/^		void ColonAtEndOfScalar(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
ColonAtEndOfScalarInFlow	lib/yaml-cpp/test/emittertests.cpp	/^		void ColonAtEndOfScalarInFlow(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
ColonScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void ColonScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
Color	core/vision/enums/Colors.h	/^enum Color {$/;"	g
Color	tools/color_classifier/include/color_classifier/classification_window.hpp	/^  enum Color {$/;"	g	namespace:color_classifier
Color	vision_testing/src/vision_testing.cpp	/^enum Color$/;"	g	file:
ColorTable	build/include/tool/annotations/AnnotationAnalyzer.h	/^typedef unsigned char* ColorTable;$/;"	t
ColorTable	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^typedef unsigned char* ColorTable;$/;"	t
ColorTable	tools/color_classifier/include/color_classifier/classification_window.hpp	/^  typedef uint8_t ColorTable[128][128][128];$/;"	t	namespace:color_classifier
ColorTableMethods	core/vision/ColorTableMethods.h	/^class ColorTableMethods {$/;"	c
ColorTransition	core/vision/BeaconDetector.h	/^  enum ColorTransition$/;"	g	class:BeaconDetector
ColorTransition	vision_testing/src/vision_testing.cpp	/^enum ColorTransition$/;"	g	file:
Colors	build/include/tool/UTOpenGL/Colors.h	/^class Colors {$/;"	c
Colors	tools/UTNaoTool/UTOpenGL/Colors.h	/^class Colors {$/;"	c
Colour	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^Colour;$/;"	t	typeref:enum:__anon12
ColourNames	core/motion/rswalk2014/perception/vision/VisionDefs.cpp	/^const char* ColourNames[] = {$/;"	v
CommInfo	core/communications/CommInfo.h	/^class CommInfo {$/;"	c
CommaScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void CommaScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
Command	core/sonar/SonarModule.h	/^  enum Command {$/;"	g	namespace:Sonar
Comment	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	inline _Comment Comment(const std::string content) {$/;"	f	namespace:YAML
Comment	lib/yaml-cpp/src/exp.h	/^		inline const RegEx Comment() {$/;"	f	namespace:YAML::Exp
CommentInFlowMap	lib/yaml-cpp/test/emittertests.cpp	/^		void CommentInFlowMap(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
CommentInFlowSeq	lib/yaml-cpp/test/emittertests.cpp	/^		void CommentInFlowSeq(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
CommentIndicator	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST CommentIndicator()$/;"	f	namespace:Test::Spec
CommentLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST CommentLines()$/;"	f	namespace:Test::Spec
CommonHeader	lib/lua/src/lobject.h	/^    CommonHeader;$/;"	m	struct:TString::__anon88
CommonHeader	lib/lua/src/lobject.h	/^    CommonHeader;$/;"	m	struct:Udata::__anon89
CommonHeader	lib/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:GCheader
CommonHeader	lib/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto
CommonHeader	lib/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Table
CommonHeader	lib/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:UpVal
CommonHeader	lib/lua/src/lobject.h	/^#define CommonHeader	/;"	d
CommonHeader	lib/lua/src/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State
CommunicationGenerator	build/include/tool/simulation/CommunicationGenerator.cpp	/^CommunicationGenerator::CommunicationGenerator(int team, int player) {$/;"	f	class:CommunicationGenerator
CommunicationGenerator	build/include/tool/simulation/CommunicationGenerator.h	/^class CommunicationGenerator {$/;"	c
CommunicationGenerator	tools/UTNaoTool/simulation/CommunicationGenerator.cpp	/^CommunicationGenerator::CommunicationGenerator(int team, int player) {$/;"	f	class:CommunicationGenerator
CommunicationGenerator	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^class CommunicationGenerator {$/;"	c
CommunicationModule	core/communications/CommunicationModule.cpp	/^CommunicationModule::CommunicationModule(VisionCore *core):$/;"	f	class:CommunicationModule
CommunicationModule	core/communications/CommunicationModule.h	/^class CommunicationModule: public Module {$/;"	c
CompactBlockMappings	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST CompactBlockMappings()$/;"	f	namespace:Test::Spec
CompactMap	lib/yaml-cpp/src/collectionstack.h	/^		enum value { None, BlockMap, BlockSeq, FlowMap, FlowSeq, CompactMap };$/;"	e	enum:YAML::CollectionType::value
CompactNestedMapping	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST CompactNestedMapping()$/;"	f	namespace:Test::Spec
Compare	lib/yaml-cpp/src/node.cpp	/^	int Node::Compare(const Node& rhs) const$/;"	f	class:YAML::Node
CompletedNode	core/python/state_machine.py	/^class CompletedNode(EventNode):$/;"	c
CompletelyEmptyNodes	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST CompletelyEmptyNodes()$/;"	f	namespace:Test::Spec
CompletionEvent	core/python/state_machine.py	/^class CompletionEvent(Event):$/;"	c
ComplexComments	lib/yaml-cpp/test/emittertests.cpp	/^		void ComplexComments(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
ComplexDoc	lib/yaml-cpp/test/emittertests.cpp	/^		void ComplexDoc(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
ComplexGlobalSettings	lib/yaml-cpp/test/emittertests.cpp	/^		void ComplexGlobalSettings(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
ComplexLongKey	lib/yaml-cpp/test/emittertests.cpp	/^		void ComplexLongKey(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Component	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^Component;$/;"	t	typeref:enum:__anon13
CompressedMapAndSeq	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool CompressedMapAndSeq()$/;"	f	namespace:Test::Parser
ComputeFullBoolName	lib/yaml-cpp/src/emitter.cpp	/^	const char *Emitter::ComputeFullBoolName(bool b) const$/;"	f	class:YAML::Emitter
ConfigWidget	build/include/tool/ConfigWidget.cpp	/^ConfigWidget::ConfigWidget(QWidget* parent) : QWidget(parent), loading_(false)  {$/;"	f	class:ConfigWidget
ConfigWidget	build/include/tool/ConfigWidget.h	/^class ConfigWidget : public QWidget {$/;"	c
ConfigWidget	tools/UTNaoTool/ConfigWidget.cpp	/^ConfigWidget::ConfigWidget(QWidget* parent) : QWidget(parent), loading_(false)  {$/;"	f	class:ConfigWidget
ConfigWidget	tools/UTNaoTool/ConfigWidget.h	/^class ConfigWidget : public QWidget {$/;"	c
ConfigWindow	build/include/tool/ConfigWindow.cpp	/^ConfigWindow::ConfigWindow(QMainWindow* parent) : QMainWindow(parent) {$/;"	f	class:ConfigWindow
ConfigWindow	build/include/tool/ConfigWindow.h	/^class ConfigWindow : public QMainWindow {$/;"	c
ConfigWindow	tools/UTNaoTool/ConfigWindow.cpp	/^ConfigWindow::ConfigWindow(QMainWindow* parent) : QMainWindow(parent) {$/;"	f	class:ConfigWindow
ConfigWindow	tools/UTNaoTool/ConfigWindow.h	/^class ConfigWindow : public QMainWindow {$/;"	c
Connected	build/include/tool/ProcessExecutor.h	/^      Connected$/;"	e	enum:ProcessExecutor::RobotStatus
Connected	tools/UTNaoTool/ProcessExecutor.h	/^      Connected$/;"	e	enum:ProcessExecutor::RobotStatus
Connecting	build/include/tool/ProcessExecutor.h	/^      Connecting,$/;"	e	enum:ProcessExecutor::RobotStatus
Connecting	tools/UTNaoTool/ProcessExecutor.h	/^      Connecting,$/;"	e	enum:ProcessExecutor::RobotStatus
ConsControl	lib/lua/src/lparser.c	/^struct ConsControl {$/;"	s	file:
ContainerFrame	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^      ContainerFrame(void *pMap, void* pPrevKeyNode)$/;"	f	struct:YAML::GraphBuilderAdapter::ContainerFrame
ContainerFrame	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^      ContainerFrame(void *pSequence)$/;"	f	struct:YAML::GraphBuilderAdapter::ContainerFrame
ContainerFrame	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    struct ContainerFrame$/;"	s	class:YAML::GraphBuilderAdapter
ContainerStack	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    typedef std::stack<ContainerFrame> ContainerStack;$/;"	t	class:YAML::GraphBuilderAdapter
ControlMatrix	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , SizeControl> ControlMatrix;$/;"	t	class:MCLParticleFilter
ControlMatrix	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , SizeControl> ControlMatrix;$/;"	t	class:RMCLParticleFilter
ControlVector	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumControls, 1> ControlVector;$/;"	t	class:ExtendedKalmanFilter
ControlVector	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumControls, 1> ControlVector;$/;"	t	class:LinearKalmanFilter
ControlVector	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumControls, 1> ControlVector;$/;"	t	class:SRUnscentedKalmanFilter
ControlVector	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumControls, 1> ControlVector;$/;"	t	class:UnscentedKalmanFilter
ControlVector	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef Eigen::Matrix<double, NumControls, 1> ControlVector;$/;"	t	class:UnscentedKalmanFilter
ControlVector	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeControl , 1> ControlVector;$/;"	t	class:MCLParticleFilter
ControlVector	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeControl , 1> ControlVector;$/;"	t	class:RMCLParticleFilter
ControllerInfo	build/include/tool/joystickxbox.h	/^struct ControllerInfo {$/;"	s
ControllerInfo	tools/UTNaoTool/joystickxbox.h	/^struct ControllerInfo {$/;"	s
Convert	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	inline bool Convert(const std::string& input, T& output, typename enable_if<is_numeric<T> >::type * = 0) {$/;"	f	namespace:YAML
Convert	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	inline bool Convert(const std::string& input, std::string& output) {$/;"	f	namespace:YAML
Convert	lib/yaml-cpp/src/conversion.cpp	/^	bool Convert(const std::string& input, _Null& \/*output*\/)$/;"	f	namespace:YAML
Convert	lib/yaml-cpp/src/conversion.cpp	/^	bool Convert(const std::string& input, bool& b)$/;"	f	namespace:YAML
ConvertScalar	lib/yaml-cpp/include/yaml-cpp/nodereadimpl.h	/^	inline bool ConvertScalar(const Node& node, T& value) {$/;"	f	namespace:YAML
CoordSystemT	core/math/Geometry.h	/^enum CoordSystemT$/;"	g
Coordinates	core/vision/structures/Coordinates.h	/^  Coordinates() : x(0), y(0) { }$/;"	f	struct:Coordinates
Coordinates	core/vision/structures/Coordinates.h	/^  Coordinates(int x, int y) : x(x), y(y) { }$/;"	f	struct:Coordinates
Coordinates	core/vision/structures/Coordinates.h	/^struct Coordinates {$/;"	s
CornerKickStrategy	core/memory/BehaviorParamBlock.h	/^  CornerKickStrategy(){}$/;"	f	struct:CornerKickStrategy
CornerKickStrategy	core/memory/BehaviorParamBlock.h	/^struct CornerKickStrategy {$/;"	s
CornerPoint	core/vision/structures/CornerPoint.h	/^struct CornerPoint {$/;"	s
CornerType	core/vision/structures/CornerPoint.h	/^  unsigned short CornerType, FieldObjectID;$/;"	m	struct:CornerPoint
Create	lib/yaml-cpp/src/nodeownership.h	/^		Node& Create() { return m_pOwner->_Create(); }$/;"	f	class:YAML::NodeOwnership
CreateNode	lib/yaml-cpp/src/node.cpp	/^	Node& Node::CreateNode()$/;"	f	class:YAML::Node
CurrentlyInLongKey	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::CurrentlyInLongKey()$/;"	f	class:YAML::EmitterState
Curve	core/python/behaviors/Movement.py	/^  class Curve(Node):$/;"	c	class:Playing
Cyan	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Cyan = TORGB(0,255,255);$/;"	m	class:Colors	file:
Cyan	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Cyan	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Cyan = TORGB(0,255,255);$/;"	m	class:Colors	file:
Cyan	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Cz	core/sensor/InertialFilter.h	/^  NMatrix Cz;$/;"	m	class:InertialFilter
Cz1	core/sensor/InertialFilter.h	/^  NMatrix Cz1;$/;"	m	class:InertialFilter
D	vision_testing/include/vision_testing/vision_testing.hpp	/^#define D(/;"	d
DARK_GREY	vision_testing/src/vision_testing.cpp	/^  DARK_GREY,$/;"	e	enum:FullColor	file:
DATA_LENGTH	core/common/ToolPacket.cpp	/^const int ToolPacket::DATA_LENGTH = __TOOL_PACKET_DATA_LENGTH;$/;"	m	class:ToolPacket	file:
DATA_LENGTH	core/common/ToolPacket.h	/^  static const int DATA_LENGTH;$/;"	m	struct:ToolPacket
DCMWrapper	interfaces/nao/src/dcmwrapper.cpp	/^DCMWrapper::DCMWrapper() : initialized_(false) {$/;"	f	class:DCMWrapper
DCMWrapper	interfaces/nao/src/dcmwrapper.h	/^class DCMWrapper {$/;"	c
DCM_WRAPPER_H	interfaces/nao/src/dcmwrapper.h	/^#define DCM_WRAPPER_H$/;"	d
DEAPCMADataLogger	tools/behaviorSim/cma.py	/^class DEAPCMADataLogger(BaseDataLogger):  # might become a dict at some point$/;"	c
DEBUG	core/motion/KickModule.cpp	/^#define DEBUG /;"	d	file:
DEBUG	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define DEBUG(/;"	d
DEBUG1	core/motion/rswalk2014/utils/Logger.hpp	/^   DEBUG1  = 60,$/;"	e	enum:LogLevel
DEBUG2	core/motion/rswalk2014/utils/Logger.hpp	/^   DEBUG2  = 80,$/;"	e	enum:LogLevel
DEBUG3	core/motion/rswalk2014/utils/Logger.hpp	/^   DEBUG3  = 100$/;"	e	enum:LogLevel
DEBUGGING_POSITIONING	build/include/tool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::DEBUGGING_POSITIONING = false;$/;"	m	class:SimulatedPlayer	file:
DEBUGGING_POSITIONING	build/include/tool/simulation/SimulatedPlayer.h	/^  static bool DEBUGGING_POSITIONING, ALLOW_FALLING;$/;"	m	class:SimulatedPlayer
DEBUGGING_POSITIONING	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::DEBUGGING_POSITIONING = false;$/;"	m	class:SimulatedPlayer	file:
DEBUGGING_POSITIONING	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  static bool DEBUGGING_POSITIONING, ALLOW_FALLING;$/;"	m	class:SimulatedPlayer
DEBUG_CALIBRATION	build/include/tool/calibration/ExtrinsicCalibrator.cpp	/^#define DEBUG_CALIBRATION /;"	d	file:
DEBUG_CALIBRATION	tools/UTNaoTool/calibration/ExtrinsicCalibrator.cpp	/^#define DEBUG_CALIBRATION /;"	d	file:
DEBUG_OUTPUT	core/motion/rswalk2014/ActionGenerator.cpp	/^#define DEBUG_OUTPUT /;"	d	file:
DEBUG_OUTPUT	core/motion/rswalk2014/RSWalkModule2014.cpp	/^#define DEBUG_OUTPUT /;"	d	file:
DEBUG_SENSOR_CALIBRATION	core/sensor/SensorModule.cpp	/^#define DEBUG_SENSOR_CALIBRATION$/;"	d	file:
DEBUG_WINDOW	build/include/tool/VisionWindow.h	/^#define DEBUG_WINDOW /;"	d
DEBUG_WINDOW	tools/UTNaoTool/VisionWindow.h	/^#define DEBUG_WINDOW /;"	d
DECAY_RATE	build/include/tool/simulation/PhysicsSimulator.cpp	/^#define DECAY_RATE /;"	d	file:
DECAY_RATE	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^#define DECAY_RATE /;"	d	file:
DEFAULT	core/VisionCore.cpp	/^LocalizationMethod::Type LocalizationMethod::DEFAULT = LocalizationMethod::Default;$/;"	m	class:LocalizationMethod	file:
DEFAULT	core/VisionCore.h	/^    static Type DEFAULT;$/;"	m	class:LocalizationMethod
DEFENDER	core/common/Roles.h	/^  DEFENDER = 2,$/;"	e	enum:Role
DEFENDER_CENTRE	core/motion/rswalk2014/types/ActionCommand.hpp	/^         DEFENDER_CENTRE,                 \/\/20$/;"	e	enum:ActionCommand::Body::ActionType
DEFENSIVEHALF	build/include/tool/WorldGLWidget.h	/^      DEFENSIVEHALF,$/;"	e	enum:WorldGLWidget::__anon6
DEFENSIVEHALF	tools/UTNaoTool/WorldGLWidget.h	/^      DEFENSIVEHALF,$/;"	e	enum:WorldGLWidget::__anon144
DEFENSIVEISO	build/include/tool/WorldGLWidget.h	/^      DEFENSIVEISO,$/;"	e	enum:WorldGLWidget::__anon6
DEFENSIVEISO	tools/UTNaoTool/WorldGLWidget.h	/^      DEFENSIVEISO,$/;"	e	enum:WorldGLWidget::__anon144
DEFINE_PRIMITIVE_OVERLOADS	core/common/Serializable.h	/^#define DEFINE_PRIMITIVE_OVERLOADS(/;"	d
DEFLATE_H	lib/zlib/deflate.h	/^#define DEFLATE_H$/;"	d
DEF_MEM_LEVEL	lib/zlib/zutil.h	/^#  define DEF_MEM_LEVEL /;"	d
DEF_WBITS	lib/zlib/zutil.h	/^#  define DEF_WBITS /;"	d
DEG2RAD	core/motion/rswalk2014/utils/angles.hpp	/^inline static float DEG2RAD(const float x) {$/;"	f
DEG30	core/memory/KickRequestBlock.h	/^    DEG30,$/;"	e	enum:Kick::Type
DEG360TORAD	core/motion/rswalk2014/utils/angles.hpp	/^inline static float DEG360TORAD(const float degree) {$/;"	f
DEGREE_MAX	interfaces/sim_spark/Random.h	/^static const unsigned DEGREE_MAX = 32;   \/\/ max degree (bits per word)$/;"	v
DEG_OVER_RAD	core/motion/rswalk2014/utils/angles.hpp	/^static const float DEG_OVER_RAD = 180 \/ M_PI;$/;"	v
DEG_TO_RAD	core/sensor/InertialFilter.cpp	/^#define DEG_TO_RAD /;"	d	file:
DEG_T_RAD	core/common/RobotInfo.h	/^#define DEG_T_RAD /;"	d
DEG_T_RAD	core/math/Geometry.h	/^#define DEG_T_RAD /;"	d
DEG_T_RAD	core/python/cfgwalk.py	/^from core import DEG_T_RAD,RAD_T_DEG$/;"	i
DEG_T_RAD	core/python/core.py	/^DEG_T_RAD = math.pi \/ 180.0$/;"	v
DEG_T_RAD	core/python/primary_bvr.py	/^from core import DEG_T_RAD, RAD_T_DEG$/;"	i
DEG_T_RAD	core/python/util.py	/^from core import DEG_T_RAD, RAD_T_DEG$/;"	i
DEG_T_RAD	core/sensor/offline/genInertialFilterMatrices.py	/^DEG_T_RAD = math.pi \/ 180$/;"	v
DEG_T_RAD	interfaces/sim_spark/Parser.cpp	/^#define DEG_T_RAD /;"	d	file:
DELAYEDLOCALIZATIONBLOCK_H_47YLPZHE	core/memory/DelayedLocalizationBlock.h	/^#define DELAYEDLOCALIZATIONBLOCK_H_47YLPZHE$/;"	d
DELETE	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    DELETE$/;"	e	enum:color_classifier::ClickMode
DESERIALIZE_CONTAINER	core/common/Serializable.h	/^#define DESERIALIZE_CONTAINER(/;"	d
DESERIALIZE_CONTAINER	core/common/Serializable.h	/^#undef DESERIALIZE_CONTAINER$/;"	d
DESERIALIZE_PRIMITIVE	core/common/Serializable.h	/^#define DESERIALIZE_PRIMITIVE(/;"	d
DETECTOR_DECLARE_ARGS	core/vision/ObjectDetector.h	/^#define DETECTOR_DECLARE_ARGS /;"	d
DETECTOR_INITIALIZE	core/vision/ObjectDetector.h	/^#define DETECTOR_INITIALIZE /;"	d
DETECTOR_PASS_ARGS	core/vision/ObjectDetector.h	/^#define DETECTOR_PASS_ARGS /;"	d
DICT	lib/zlib/inflate.h	/^    DICT,       \/* waiting for inflateSetDictionary() call *\/$/;"	e	enum:__anon136
DICTID	lib/zlib/inflate.h	/^    DICTID,     \/* i: waiting for dictionary check value *\/$/;"	e	enum:__anon136
DIRECTIVE	lib/yaml-cpp/src/token.h	/^			DIRECTIVE,$/;"	e	enum:YAML::Token::TYPE
DIRECTIVES_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/directives.h	/^#define DIRECTIVES_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
DISCARD	core/motion/rswalk2014/utils/body.hpp	/^   const float DISCARD = 10.f;$/;"	m	namespace:Sonar
DIST	core/motion/rswalk2014/types/RRCoord.hpp	/^   DIST,$/;"	e	enum:__anon15
DIST	lib/zlib/inflate.h	/^            DIST,       \/* i: waiting for distance code *\/$/;"	e	enum:__anon136
DISTANCE	core/motion/rswalk2014/utils/basic_maths.hpp	/^inline static float DISTANCE(const float xA,$/;"	f
DISTANCE_PER_FRAME	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^#define DISTANCE_PER_FRAME /;"	d	file:
DISTANCE_PER_FRAME	build/include/tool/simulation/LocalizationSimulation.cpp	/^#define DISTANCE_PER_FRAME /;"	d	file:
DISTANCE_PER_FRAME	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^#define DISTANCE_PER_FRAME /;"	d	file:
DISTANCE_PER_FRAME	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^#define DISTANCE_PER_FRAME /;"	d	file:
DISTANCE_SQR	core/motion/rswalk2014/utils/basic_maths.hpp	/^inline static T DISTANCE_SQR(const T &xA,$/;"	f
DISTEXT	lib/zlib/inflate.h	/^            DISTEXT,    \/* i: waiting for distance extra bits *\/$/;"	e	enum:__anon136
DISTS	lib/zlib/inftrees.h	/^    DISTS$/;"	e	enum:__anon138
DIST_CODE_LEN	lib/zlib/trees.c	/^#define DIST_CODE_LEN /;"	d	file:
DIST_GOAL_LINE_TO_MARKER	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define DIST_GOAL_LINE_TO_MARKER /;"	d
DIST_HISTORY_WEIGHT	core/sonar/SonarModule.h	/^  const float DIST_HISTORY_WEIGHT = 0.5;$/;"	m	namespace:Sonar
DLL_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/dll.h	/^#define DLL_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
DLMSG	lib/lua/src/loadlib.c	/^#define DLMSG	/;"	d	file:
DO1	lib/zlib/adler32.c	/^#define DO1(/;"	d	file:
DO1	lib/zlib/crc32.c	/^#define DO1 /;"	d	file:
DO16	lib/zlib/adler32.c	/^#define DO16(/;"	d	file:
DO2	lib/zlib/adler32.c	/^#define DO2(/;"	d	file:
DO4	lib/zlib/adler32.c	/^#define DO4(/;"	d	file:
DO8	lib/zlib/adler32.c	/^#define DO8(/;"	d	file:
DO8	lib/zlib/crc32.c	/^#define DO8 /;"	d	file:
DOBIG32	lib/zlib/crc32.c	/^#define DOBIG32 /;"	d	file:
DOBIG4	lib/zlib/crc32.c	/^#define DOBIG4 /;"	d	file:
DOC_END	lib/yaml-cpp/src/token.h	/^			DOC_END,$/;"	e	enum:YAML::Token::TYPE
DOC_IN_SCALAR	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const DOC_IN_SCALAR          = "illegal document indicator in scalar";$/;"	m	namespace:YAML::ErrorMsg
DOC_START	lib/yaml-cpp/src/token.h	/^			DOC_START,$/;"	e	enum:YAML::Token::TYPE
DOLIT32	lib/zlib/crc32.c	/^#define DOLIT32 /;"	d	file:
DOLIT4	lib/zlib/crc32.c	/^#define DOLIT4 /;"	d	file:
DONE	lib/zlib/inflate.h	/^    DONE,       \/* finished check, done -- remain here until reset *\/$/;"	e	enum:__anon136
DONT_FOLD	lib/yaml-cpp/src/scanscalar.h	/^	enum FOLD { DONT_FOLD, FOLD_BLOCK, FOLD_FLOW };$/;"	e	enum:YAML::FOLD
DOT	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^#define DOT(/;"	d	file:
DOT	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^#define DOT(/;"	d	file:
DOUBLE_IS_LITTLE_ENDIAN_IEEE754	build/pythonswig/pyconfig.h	/^#define DOUBLE_IS_LITTLE_ENDIAN_IEEE754 /;"	d
DRIBBLE	core/memory/BehaviorParamBlock.h	/^    DRIBBLE,$/;"	e	enum:Cluster::Activity
DRIBBLE	core/motion/rswalk2014/types/ActionCommand.hpp	/^         DRIBBLE, \/\/3$/;"	e	enum:ActionCommand::Body::ActionType
DROPBALL	core/communications/RoboCupGameControlData.h	/^#define DROPBALL /;"	d
DROPBITS	lib/zlib/infback.c	/^#define DROPBITS(/;"	d	file:
DROPBITS	lib/zlib/inflate.c	/^#define DROPBITS(/;"	d	file:
DT_BOOL	lib/alglib/ap.h	/^enum { DT_BOOL=1, DT_INT=2, DT_REAL=3, DT_COMPLEX=4 };$/;"	e	enum:alglib_impl::__anon30
DT_COMPLEX	lib/alglib/ap.h	/^enum { DT_BOOL=1, DT_INT=2, DT_REAL=3, DT_COMPLEX=4 };$/;"	e	enum:alglib_impl::__anon30
DT_INT	lib/alglib/ap.h	/^enum { DT_BOOL=1, DT_INT=2, DT_REAL=3, DT_COMPLEX=4 };$/;"	e	enum:alglib_impl::__anon30
DT_REAL	lib/alglib/ap.h	/^enum { DT_BOOL=1, DT_INT=2, DT_REAL=3, DT_COMPLEX=4 };$/;"	e	enum:alglib_impl::__anon30
DUMMYCAMERA_OPYEW0C7	core/imageCapture/DummyCamera.h	/^#define DUMMYCAMERA_OPYEW0C7$/;"	d
DYNAMIC_CRC_TABLE	lib/zlib/crc32.c	/^#    define DYNAMIC_CRC_TABLE$/;"	d	file:
DYN_BOTTOM	lib/alglib/ap.cpp	/^#define DYN_BOTTOM /;"	d	file:
DYN_FRAME	lib/alglib/ap.cpp	/^#define DYN_FRAME /;"	d	file:
DYN_TREES	lib/zlib/zutil.h	/^#define DYN_TREES /;"	d
D_CODES	lib/zlib/deflate.h	/^#define D_CODES /;"	d
Dad	lib/zlib/deflate.h	/^#define Dad /;"	d
DashInBlockContext	lib/yaml-cpp/test/emittertests.cpp	/^        void DashInBlockContext(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
DashScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void DashScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
Dataset	build/include/tool/calibration/JointCalibrator.h	/^    typedef JointDataset Dataset;$/;"	t	class:JointCalibrator
Dataset	tools/UTNaoTool/calibration/JointCalibrator.h	/^    typedef JointDataset Dataset;$/;"	t	class:JointCalibrator
DeSkewX	core/vision/structures/CornerPoint.h	/^  float DeSkewX, DeSkewY;$/;"	m	struct:CornerPoint
DeSkewY	core/vision/structures/CornerPoint.h	/^  float DeSkewX, DeSkewY;$/;"	m	struct:CornerPoint
Dead	build/include/tool/ProcessExecutor.h	/^      Dead,$/;"	e	enum:ProcessExecutor::RobotStatus
Dead	tools/UTNaoTool/ProcessExecutor.h	/^      Dead,$/;"	e	enum:ProcessExecutor::RobotStatus
DeadGenerator	core/motion/rswalk2014/DeadGenerator.cpp	/^DeadGenerator::DeadGenerator() : ticks(0) {$/;"	f	class:DeadGenerator
DeadGenerator	core/motion/rswalk2014/DeadGenerator.hpp	/^class DeadGenerator : Generator {$/;"	c
Dec	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Dec,$/;"	e	enum:YAML::EMITTER_MANIP
DecodeBase64	lib/yaml-cpp/src/binary.cpp	/^    std::vector<unsigned char> DecodeBase64(const std::string& input)$/;"	f	namespace:YAML
Decoder	interfaces/sim_spark/decode.h	/^class Decoder$/;"	c	namespace:base64
Default	build/include/tool/simulation/LocalizationSimulation.h	/^    Default = 0$/;"	e	enum:LocSimAgent::Type
Default	core/VisionCore.h	/^      Default$/;"	e	enum:LocalizationMethod::Type
Default	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    Default = 0$/;"	e	enum:LocSimAgent::Type
DefaultPlainScalarTag	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool DefaultPlainScalarTag()$/;"	f	namespace:Test::Parser
DefaultPrecision	lib/yaml-cpp/test/emittertests.cpp	/^        void DefaultPrecision(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
DefaultSequenceTag	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool DefaultSequenceTag()$/;"	f	namespace:Test::Parser
DefaultSingleQuotedScalarTag	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool DefaultSingleQuotedScalarTag()$/;"	f	namespace:Test::Parser
DefendingStates	core/python/behaviors/win.py	/^class DefendingStates:$/;"	c
Deg2Rad	core/math/Geometry.cpp	/^AngRad Deg2Rad( AngDeg ang )$/;"	f
DelayedLocalizationBlock	core/memory/DelayedLocalizationBlock.h	/^  DelayedLocalizationBlock():$/;"	f	struct:DelayedLocalizationBlock
DelayedLocalizationBlock	core/memory/DelayedLocalizationBlock.h	/^struct DelayedLocalizationBlock: public MemoryBlock {$/;"	s
DerivedDictBase	tools/behaviorSim/cma.py	/^class DerivedDictBase(collections.MutableMapping):$/;"	c
Deserialize	build/include/tool/annotations/EllipseSelection.h	/^        virtual void Deserialize(const YAML::Node& node) {$/;"	f	class:EllipseSelection
Deserialize	build/include/tool/annotations/PolygonSelection.h	/^        virtual void Deserialize(const YAML::Node& node) {$/;"	f	class:PolygonSelection
Deserialize	build/include/tool/annotations/RectangleSelection.h	/^        virtual void Deserialize(const YAML::Node& node) {$/;"	f	class:RectangleSelection
Deserialize	tools/UTNaoTool/annotations/EllipseSelection.h	/^        virtual void Deserialize(const YAML::Node& node) {$/;"	f	class:EllipseSelection
Deserialize	tools/UTNaoTool/annotations/PolygonSelection.h	/^        virtual void Deserialize(const YAML::Node& node) {$/;"	f	class:PolygonSelection
Deserialize	tools/UTNaoTool/annotations/RectangleSelection.h	/^        virtual void Deserialize(const YAML::Node& node) {$/;"	f	class:RectangleSelection
DetCloseToZero	core/math/MVTools.h	/^    DetCloseToZero$/;"	e	enum:MVException::ExceptionType
DetNegative	core/math/MVTools.h	/^    DetNegative,$/;"	e	enum:MVException::ExceptionType
Digit	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Digit() {$/;"	f	namespace:YAML::Exp
DimensionNames	core/common/RobotDimensions.h	/^static std::string DimensionNames[] = {$/;"	v
DirName	core/motion/rswalk2014/types/PostInfo.cpp	/^const char *const PostInfo::DirName[] =$/;"	m	class:PostInfo	file:
DirName	core/motion/rswalk2014/types/PostInfo.hpp	/^   static const char *const DirName[];$/;"	m	struct:PostInfo
Direction	core/communications/UDPWrapper.h	/^  enum Direction { Inbound, Outbound, Bidirectional };$/;"	g	class:UDPWrapper
Direction	core/motion/rswalk2014/types/PostInfo.hpp	/^   enum Direction$/;"	g	struct:PostInfo
Direction	core/vision/structures/CornerPoint.h	/^  short Orientation, Direction;$/;"	m	struct:CornerPoint
Directive	lib/yaml-cpp/src/exp.h	/^		const char Directive = '%';$/;"	m	namespace:YAML::Keys
Directives	lib/yaml-cpp/src/directives.cpp	/^	Directives::Directives()$/;"	f	class:YAML::Directives
Directives	lib/yaml-cpp/src/directives.h	/^	struct Directives {$/;"	s	namespace:YAML
DisplayBlob	core/vision/Union_find.cpp	/^void MergeBlob :: DisplayBlob(int tmp)$/;"	f	class:MergeBlob
Display_array_image	core/vision/Union_find.cpp	/^void MergeBlob :: Display_array_image()$/;"	f	class:MergeBlob
Display_array_tree	core/vision/Union_find.cpp	/^void MergeBlob :: Display_array_tree()$/;"	f	class:MergeBlob
Display_array_weight	core/vision/Union_find.cpp	/^void MergeBlob :: Display_array_weight()$/;"	f	class:MergeBlob
DispositionNode	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void GraphBuilderAdapter::DispositionNode(void *pNode)$/;"	f	class:YAML::GraphBuilderAdapter
Distance	core/math/Geometry.h	/^typedef float Distance;  \/*!< Type definition for distance (probably in millimeters) *\/$/;"	t
DistributedGenerator	core/motion/rswalk2014/DistributedGenerator.cpp	/^DistributedGenerator::DistributedGenerator(std::string path)$/;"	f	class:DistributedGenerator
DistributedGenerator	core/motion/rswalk2014/DistributedGenerator.hpp	/^class DistributedGenerator : Generator {$/;"	c
DivByNegZero	core/math/MVTools.h	/^    DivByNegZero,$/;"	e	enum:MVException::ExceptionType
DivByPosZero	core/math/MVTools.h	/^    DivByPosZero,$/;"	e	enum:MVException::ExceptionType
Dive	core/memory/BehaviorBlock.h	/^class Dive { \/\/ class for lua access, otherwise namespace$/;"	c
DocEnd	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& DocEnd() {$/;"	f	namespace:YAML::Exp
DocIndicator	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& DocIndicator() {$/;"	f	namespace:YAML::Exp
DocStart	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& DocStart() {$/;"	f	namespace:YAML::Exp
DocStartAndEnd	lib/yaml-cpp/test/emittertests.cpp	/^		void DocStartAndEnd(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Done	interfaces/sim_spark/main.cpp	/^void Done() {$/;"	f
DoubleAsInt	lib/yaml-cpp/test/old-api/parsertests.cpp	/^        bool DoubleAsInt()$/;"	f	namespace:Test::Parser
DoublePrecision	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^    inline _Precision DoublePrecision(int n) {$/;"	f	namespace:YAML
DoubleQuoted	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		DoubleQuoted,$/;"	e	enum:YAML::EMITTER_MANIP
DoubleQuotedImplicitKeys	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST DoubleQuotedImplicitKeys()$/;"	f	namespace:Test::Spec
DoubleQuotedLineBreaks	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST DoubleQuotedLineBreaks()$/;"	f	namespace:Test::Spec
DoubleQuotedLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST DoubleQuotedLines()$/;"	f	namespace:Test::Spec
DoubleQuotedUnicode	lib/yaml-cpp/test/emittertests.cpp	/^		void DoubleQuotedUnicode(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Dribble	core/common/Kicks.h	/^  Dribble,$/;"	e	enum:kicks
DribbleEngine	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^WalkEnginePreProcessor::DribbleEngine::DribbleEngine(Walk2014Generator* walkEngine) {$/;"	f	class:WalkEnginePreProcessor::DribbleEngine
DribbleEngine	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^      class DribbleEngine {$/;"	c	class:WalkEnginePreProcessor
DribbleState	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^         enum DribbleState {$/;"	g	class:WalkEnginePreProcessor::DribbleEngine
DummyCamera	core/imageCapture/DummyCamera.h	/^  DummyCamera(const ImageParams& iparams, CameraParams& a, CameraParams& b): NaoCamera(iparams, a,b){timeStamp=0;}$/;"	f	class:DummyCamera
DummyCamera	core/imageCapture/DummyCamera.h	/^class DummyCamera : public NaoCamera {$/;"	c
DumpBlock	lib/lua/src/ldump.c	/^static void DumpBlock(const void* b, size_t size, DumpState* D)$/;"	f	file:
DumpChar	lib/lua/src/ldump.c	/^static void DumpChar(int y, DumpState* D)$/;"	f	file:
DumpCode	lib/lua/src/ldump.c	/^#define DumpCode(/;"	d	file:
DumpConstants	lib/lua/src/ldump.c	/^static void DumpConstants(const Proto* f, DumpState* D)$/;"	f	file:
DumpDebug	lib/lua/src/ldump.c	/^static void DumpDebug(const Proto* f, DumpState* D)$/;"	f	file:
DumpFunction	lib/lua/src/ldump.c	/^static void DumpFunction(const Proto* f, const TString* p, DumpState* D)$/;"	f	file:
DumpHeader	lib/lua/src/ldump.c	/^static void DumpHeader(DumpState* D)$/;"	f	file:
DumpInt	lib/lua/src/ldump.c	/^static void DumpInt(int x, DumpState* D)$/;"	f	file:
DumpMem	lib/lua/src/ldump.c	/^#define DumpMem(/;"	d	file:
DumpNumber	lib/lua/src/ldump.c	/^static void DumpNumber(lua_Number x, DumpState* D)$/;"	f	file:
DumpState	lib/lua/src/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon85	file:
DumpString	lib/lua/src/ldump.c	/^static void DumpString(const TString* s, DumpState* D)$/;"	f	file:
DumpVar	lib/lua/src/ldump.c	/^#define DumpVar(/;"	d	file:
DumpVector	lib/lua/src/ldump.c	/^static void DumpVector(const void* b, int n, size_t size, DumpState* D)$/;"	f	file:
DuplicateKey	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool DuplicateKey()$/;"	f	namespace:Test::Parser
Dynamic	core/python/cfgwalk.py	/^from util import Dynamic$/;"	i
Dynamic	core/python/util.py	/^class Dynamic(object): pass$/;"	c
E	vision_testing/include/vision_testing/vision_testing.hpp	/^#define E(/;"	d
ELLIPSE_SELECTION_H	build/include/tool/annotations/EllipseSelection.h	/^#define ELLIPSE_SELECTION_H$/;"	d
ELLIPSE_SELECTION_H	tools/UTNaoTool/annotations/EllipseSelection.h	/^#define ELLIPSE_SELECTION_H$/;"	d
EMITFROMEVENTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^#define EMITFROMEVENTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
EMITTERMANIP_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^#define EMITTERMANIP_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
EMITTERSTATE_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/emitterstate.h	/^#define EMITTERSTATE_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
EMITTERTESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/test/emittertests.h	/^#define EMITTERTESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
EMITTERUTILS_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/emitterutils.h	/^#define EMITTERUTILS_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
EMITTER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^#define EMITTER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
EMITTER_MANIP	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	enum EMITTER_MANIP {$/;"	g	namespace:YAML
EMITTER_STATE	lib/yaml-cpp/src/emitterstate.h	/^	enum EMITTER_STATE {$/;"	g	namespace:YAML
ENABLE_IPV6	build/pythonswig/pyconfig.h	/^#define ENABLE_IPV6 /;"	d
END	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^            INIT, TURN, FORWARD, END$/;"	e	enum:WalkEnginePreProcessor::DribbleEngine::DribbleState
END_BLOCK	lib/zlib/trees.c	/^#define END_BLOCK /;"	d	file:
END_OF_MAP	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const END_OF_MAP             = "end of map not found";$/;"	m	namespace:YAML::ErrorMsg
END_OF_MAP_FLOW	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const END_OF_MAP_FLOW        = "end of map flow not found";$/;"	m	namespace:YAML::ErrorMsg
END_OF_SEQ	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const END_OF_SEQ             = "end of sequence not found";$/;"	m	namespace:YAML::ErrorMsg
END_OF_SEQ_FLOW	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const END_OF_SEQ_FLOW        = "end of sequence flow not found";$/;"	m	namespace:YAML::ErrorMsg
END_OF_VERBATIM_TAG	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const END_OF_VERBATIM_TAG    = "end of verbatim tag not found";$/;"	m	namespace:YAML::ErrorMsg
END_PHASE	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define END_PHASE /;"	d	file:
ENOUGH	lib/zlib/inftrees.h	/^#define ENOUGH /;"	d
ENOUGH_DISTS	lib/zlib/inftrees.h	/^#define ENOUGH_DISTS /;"	d
ENOUGH_LENS	lib/zlib/inftrees.h	/^#define ENOUGH_LENS /;"	d
ENUM	core/common/Enum.h	/^#define ENUM(/;"	d
ENUM_CLASS	core/common/Enum.h	/^#define ENUM_CLASS(/;"	d
EOF_IN_SCALAR	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const EOF_IN_SCALAR          = "illegal EOF in scalar";$/;"	m	namespace:YAML::ErrorMsg
EOZ	lib/lua/src/lzio.h	/^#define EOZ	/;"	d
EPSILON	core/math/Geometry.h	/^#define EPSILON /;"	d
EPSILON	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define EPSILON /;"	d	file:
EPSILON	core/python/geometry.py	/^EPSILON = 0.00001$/;"	v
EQUAL	lib/zlib/deflate.c	/^#define EQUAL /;"	d	file:
ERRFUNC	lib/lua/src/loadlib.c	/^#define ERRFUNC	/;"	d	file:
ERRLIB	lib/lua/src/loadlib.c	/^#define ERRLIB	/;"	d	file:
ERROR	core/motion/rswalk2014/utils/Logger.hpp	/^   ERROR   = 0,$/;"	e	enum:LogLevel
ERROR	core/python/UTdebug.py	/^import logging; logging.disable(logging.ERROR) # kill hashlib errors from random$/;"	i
ERROR	core/python/init.py	/^import logging; logging.disable(logging.ERROR)$/;"	i
ERR_ASSERTION_FAILED	lib/alglib/ap.h	/^    ERR_ASSERTION_FAILED = 3$/;"	e	enum:alglib_impl::__anon27
ERR_MSG	lib/zlib/zutil.h	/^#define ERR_MSG(/;"	d
ERR_OK	lib/alglib/ap.h	/^    ERR_OK = 0,$/;"	e	enum:alglib_impl::__anon27
ERR_OUT_OF_MEMORY	lib/alglib/ap.h	/^    ERR_OUT_OF_MEMORY = 1,$/;"	e	enum:alglib_impl::__anon27
ERR_RETURN	lib/zlib/zutil.h	/^#define ERR_RETURN(/;"	d
ERR_XARRAY_TOO_LARGE	lib/alglib/ap.h	/^    ERR_XARRAY_TOO_LARGE = 2,$/;"	e	enum:alglib_impl::__anon27
ES_DONE_WITH_BLOCK_MAP_KEY	lib/yaml-cpp/src/emitterstate.h	/^		ES_DONE_WITH_BLOCK_MAP_KEY,$/;"	e	enum:YAML::EMITTER_STATE
ES_DONE_WITH_BLOCK_MAP_VALUE	lib/yaml-cpp/src/emitterstate.h	/^		ES_DONE_WITH_BLOCK_MAP_VALUE,$/;"	e	enum:YAML::EMITTER_STATE
ES_DONE_WITH_BLOCK_SEQ_ENTRY	lib/yaml-cpp/src/emitterstate.h	/^		ES_DONE_WITH_BLOCK_SEQ_ENTRY,$/;"	e	enum:YAML::EMITTER_STATE
ES_DONE_WITH_DOC	lib/yaml-cpp/src/emitterstate.h	/^		ES_DONE_WITH_DOC,$/;"	e	enum:YAML::EMITTER_STATE
ES_DONE_WITH_FLOW_MAP_KEY	lib/yaml-cpp/src/emitterstate.h	/^		ES_DONE_WITH_FLOW_MAP_KEY,$/;"	e	enum:YAML::EMITTER_STATE
ES_DONE_WITH_FLOW_MAP_VALUE	lib/yaml-cpp/src/emitterstate.h	/^		ES_DONE_WITH_FLOW_MAP_VALUE$/;"	e	enum:YAML::EMITTER_STATE
ES_DONE_WITH_FLOW_SEQ_ENTRY	lib/yaml-cpp/src/emitterstate.h	/^		ES_DONE_WITH_FLOW_SEQ_ENTRY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WAITING_FOR_BLOCK_MAP_ENTRY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WAITING_FOR_BLOCK_MAP_ENTRY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WAITING_FOR_BLOCK_MAP_KEY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WAITING_FOR_BLOCK_MAP_KEY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WAITING_FOR_BLOCK_MAP_VALUE	lib/yaml-cpp/src/emitterstate.h	/^		ES_WAITING_FOR_BLOCK_MAP_VALUE,$/;"	e	enum:YAML::EMITTER_STATE
ES_WAITING_FOR_BLOCK_SEQ_ENTRY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WAITING_FOR_BLOCK_SEQ_ENTRY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WAITING_FOR_DOC	lib/yaml-cpp/src/emitterstate.h	/^		ES_WAITING_FOR_DOC,$/;"	e	enum:YAML::EMITTER_STATE
ES_WAITING_FOR_FLOW_MAP_ENTRY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WAITING_FOR_FLOW_MAP_ENTRY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WAITING_FOR_FLOW_MAP_KEY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WAITING_FOR_FLOW_MAP_KEY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WAITING_FOR_FLOW_MAP_VALUE	lib/yaml-cpp/src/emitterstate.h	/^		ES_WAITING_FOR_FLOW_MAP_VALUE,$/;"	e	enum:YAML::EMITTER_STATE
ES_WAITING_FOR_FLOW_SEQ_ENTRY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WAITING_FOR_FLOW_SEQ_ENTRY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WRITING_BLOCK_MAP_KEY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WRITING_BLOCK_MAP_KEY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WRITING_BLOCK_MAP_VALUE	lib/yaml-cpp/src/emitterstate.h	/^		ES_WRITING_BLOCK_MAP_VALUE,$/;"	e	enum:YAML::EMITTER_STATE
ES_WRITING_BLOCK_SEQ_ENTRY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WRITING_BLOCK_SEQ_ENTRY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WRITING_DOC	lib/yaml-cpp/src/emitterstate.h	/^		ES_WRITING_DOC,$/;"	e	enum:YAML::EMITTER_STATE
ES_WRITING_FLOW_MAP_KEY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WRITING_FLOW_MAP_KEY,$/;"	e	enum:YAML::EMITTER_STATE
ES_WRITING_FLOW_MAP_VALUE	lib/yaml-cpp/src/emitterstate.h	/^		ES_WRITING_FLOW_MAP_VALUE,$/;"	e	enum:YAML::EMITTER_STATE
ES_WRITING_FLOW_SEQ_ENTRY	lib/yaml-cpp/src/emitterstate.h	/^		ES_WRITING_FLOW_SEQ_ENTRY,$/;"	e	enum:YAML::EMITTER_STATE
EVALS_PER_IND	tools/behaviorSim/runCMAES.py	/^EVALS_PER_IND = 20$/;"	v
EVENTHANDLER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/eventhandler.h	/^#define EVENTHANDLER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
EXCEPTIONS_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^#define EXCEPTIONS_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
EXCLUSION_RESOLUTION	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      static const uint16_t EXCLUSION_RESOLUTION = 100;$/;"	m	class:Pose
EXE	lib/zlib/Makefile	/^EXE=$/;"	m
EXLEN	lib/zlib/inflate.h	/^    EXLEN,      \/* i: waiting for extra length (gzip) *\/$/;"	e	enum:__anon136
EXPECTED_KEY_TOKEN	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const EXPECTED_KEY_TOKEN     = "expected key token";$/;"	m	namespace:YAML::ErrorMsg
EXPECTED_VALUE_TOKEN	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const EXPECTED_VALUE_TOKEN   = "expected value token";$/;"	m	namespace:YAML::ErrorMsg
EXPONENTIALFILTER_4Y6AXBK7	core/common/ExponentialFilter.h	/^#define EXPONENTIALFILTER_4Y6AXBK7$/;"	d
EXP_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/exp.h	/^#define EXP_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
EXTRA	lib/zlib/inflate.h	/^    EXTRA,      \/* i: waiting for extra bytes (gzip) *\/$/;"	e	enum:__anon136
EXTRA_STACK	lib/lua/src/lstate.h	/^#define EXTRA_STACK /;"	d
EXTRA_STATE	lib/zlib/deflate.h	/^#define EXTRA_STATE /;"	d
EXTRINSIC_CALIBRATION_WIDGET_H	build/include/tool/ExtrinsicCalibrationWidget.h	/^#define EXTRINSIC_CALIBRATION_WIDGET_H$/;"	d
EXTRINSIC_CALIBRATION_WIDGET_H	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^#define EXTRINSIC_CALIBRATION_WIDGET_H$/;"	d
EarLeft0	core/common/RobotInfo.h	/^  EarLeft0,$/;"	e	enum:LED
EarLeft108	core/common/RobotInfo.h	/^  EarLeft108,$/;"	e	enum:LED
EarLeft144	core/common/RobotInfo.h	/^  EarLeft144,$/;"	e	enum:LED
EarLeft180	core/common/RobotInfo.h	/^  EarLeft180,$/;"	e	enum:LED
EarLeft216	core/common/RobotInfo.h	/^  EarLeft216,$/;"	e	enum:LED
EarLeft252	core/common/RobotInfo.h	/^  EarLeft252,$/;"	e	enum:LED
EarLeft288	core/common/RobotInfo.h	/^  EarLeft288,$/;"	e	enum:LED
EarLeft324	core/common/RobotInfo.h	/^  EarLeft324,$/;"	e	enum:LED
EarLeft36	core/common/RobotInfo.h	/^  EarLeft36,$/;"	e	enum:LED
EarLeft72	core/common/RobotInfo.h	/^  EarLeft72,$/;"	e	enum:LED
EarRight0	core/common/RobotInfo.h	/^  EarRight0,$/;"	e	enum:LED
EarRight108	core/common/RobotInfo.h	/^  EarRight108,$/;"	e	enum:LED
EarRight144	core/common/RobotInfo.h	/^  EarRight144,$/;"	e	enum:LED
EarRight180	core/common/RobotInfo.h	/^  EarRight180,$/;"	e	enum:LED
EarRight216	core/common/RobotInfo.h	/^  EarRight216,$/;"	e	enum:LED
EarRight252	core/common/RobotInfo.h	/^  EarRight252,$/;"	e	enum:LED
EarRight288	core/common/RobotInfo.h	/^  EarRight288,$/;"	e	enum:LED
EarRight324	core/common/RobotInfo.h	/^  EarRight324,$/;"	e	enum:LED
EarRight36	core/common/RobotInfo.h	/^  EarRight36,$/;"	e	enum:LED
EarRight72	core/common/RobotInfo.h	/^  EarRight72,$/;"	e	enum:LED
EditLogger	core/memory/Logger.h	/^    EditLogger(const char* directory) : Logger(false, directory, false, true) { }$/;"	f	class:EditLogger
EditLogger	core/memory/Logger.h	/^class EditLogger : public Logger {$/;"	c
ElapsedTime	tools/behaviorSim/cma.py	/^class ElapsedTime(object):$/;"	c
ElbowOffsetY	core/motion/rswalk2014/utils/body.hpp	/^   const float ElbowOffsetY = 15.00;$/;"	m	namespace:Limbs
ElbowRollSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float ElbowRollSpeed       = MOTOR3_REDUCTIONB_RAD;$/;"	m	namespace:RSJoints::Radians
ElbowYawSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float ElbowYawSpeed        = MOTOR3_REDUCTIONA_RAD;$/;"	m	namespace:RSJoints::Radians
EllipseSelection	build/include/tool/annotations/EllipseSelection.h	/^        EllipseSelection(){}$/;"	f	class:EllipseSelection
EllipseSelection	build/include/tool/annotations/EllipseSelection.h	/^        EllipseSelection(std::vector<Point> v) {$/;"	f	class:EllipseSelection
EllipseSelection	build/include/tool/annotations/EllipseSelection.h	/^        EllipseSelection(std::vector<QPoint> v)  {$/;"	f	class:EllipseSelection
EllipseSelection	build/include/tool/annotations/EllipseSelection.h	/^class EllipseSelection : public Selection {$/;"	c
EllipseSelection	tools/UTNaoTool/annotations/EllipseSelection.h	/^        EllipseSelection(){}$/;"	f	class:EllipseSelection
EllipseSelection	tools/UTNaoTool/annotations/EllipseSelection.h	/^        EllipseSelection(std::vector<Point> v) {$/;"	f	class:EllipseSelection
EllipseSelection	tools/UTNaoTool/annotations/EllipseSelection.h	/^        EllipseSelection(std::vector<QPoint> v)  {$/;"	f	class:EllipseSelection
EllipseSelection	tools/UTNaoTool/annotations/EllipseSelection.h	/^class EllipseSelection : public Selection {$/;"	c
EllipseSelectionType	build/include/tool/annotations/SelectionType.h	/^    EllipseSelectionType,$/;"	e	enum:SelectionType
EllipseSelectionType	tools/UTNaoTool/annotations/SelectionType.h	/^    EllipseSelectionType,$/;"	e	enum:SelectionType
EmitBeginDoc	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitBeginDoc()$/;"	f	class:YAML::Emitter
EmitBeginMap	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitBeginMap()$/;"	f	class:YAML::Emitter
EmitBeginSeq	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitBeginSeq()$/;"	f	class:YAML::Emitter
EmitEndDoc	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitEndDoc()$/;"	f	class:YAML::Emitter
EmitEndMap	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitEndMap()$/;"	f	class:YAML::Emitter
EmitEndSeq	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitEndSeq()$/;"	f	class:YAML::Emitter
EmitEvents	lib/yaml-cpp/src/node.cpp	/^	void Node::EmitEvents(AliasManager& am, EventHandler& eventHandler) const$/;"	f	class:YAML::Node
EmitEvents	lib/yaml-cpp/src/node.cpp	/^	void Node::EmitEvents(EventHandler& eventHandler) const$/;"	f	class:YAML::Node
EmitFromEvents	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^	class EmitFromEvents: public EventHandler$/;"	c	namespace:YAML
EmitFromEvents	lib/yaml-cpp/src/emitfromevents.cpp	/^	EmitFromEvents::EmitFromEvents(Emitter& emitter): m_emitter(emitter)$/;"	f	class:YAML::EmitFromEvents
EmitKey	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitKey()$/;"	f	class:YAML::Emitter
EmitKindTag	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitKindTag()$/;"	f	class:YAML::Emitter
EmitNewline	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitNewline()$/;"	f	class:YAML::Emitter
EmitNonAscii	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		EmitNonAscii,$/;"	e	enum:YAML::EMITTER_MANIP
EmitProps	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::EmitProps(const std::string& tag, anchor_t anchor)$/;"	f	class:YAML::EmitFromEvents
EmitSeparationIfNecessary	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitSeparationIfNecessary()$/;"	f	class:YAML::Emitter
EmitSeq	lib/yaml-cpp/include/yaml-cpp/stlemitter.h	/^	inline Emitter& EmitSeq(Emitter& emitter, const Seq& seq) {$/;"	f	namespace:YAML
EmitValue	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::EmitValue()$/;"	f	class:YAML::Emitter
Emitter	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	class YAML_CPP_API Emitter: private noncopyable$/;"	c	namespace:YAML
Emitter	lib/yaml-cpp/src/emitter.cpp	/^	Emitter::Emitter(): m_pState(new EmitterState)$/;"	f	class:YAML::Emitter
Emitter	lib/yaml-cpp/test/emittertests.cpp	/^	namespace Emitter {$/;"	n	namespace:Test	file:
EmitterException	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		EmitterException(const std::string& msg_)$/;"	f	class:YAML::EmitterException
EmitterException	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	class EmitterException: public Exception {$/;"	c	namespace:YAML
EmitterState	lib/yaml-cpp/src/emitterstate.cpp	/^	EmitterState::EmitterState(): m_isGood(true), m_curIndent(0), m_requiresSoftSeparation(false), m_requiresHardSeparation(false)$/;"	f	class:YAML::EmitterState
EmitterState	lib/yaml-cpp/src/emitterstate.h	/^	class EmitterState$/;"	c	namespace:YAML
EmptyBinary	lib/yaml-cpp/test/emittertests.cpp	/^		void EmptyBinary(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
EmptyFlowSeq	lib/yaml-cpp/test/emittertests.cpp	/^		void EmptyFlowSeq(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
EmptyLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST EmptyLines()$/;"	f	namespace:Test::Spec
EmptyNodes	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST EmptyNodes()$/;"	f	namespace:Test::Spec
EmptyScalarChomping	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST EmptyScalarChomping()$/;"	f	namespace:Test::Spec
EmptySeparationLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST EmptySeparationLines()$/;"	f	namespace:Test::Spec
EmptyString	lib/yaml-cpp/test/emittertests.cpp	/^		void EmptyString(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
EncodeBase64	lib/yaml-cpp/src/binary.cpp	/^    std::string EncodeBase64(const unsigned char *data, std::size_t size)$/;"	f	namespace:YAML
EncodeToUtf16BE	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void EncodeToUtf16BE(std::ostream& stream, int ch)$/;"	f	namespace:Test::__anon130
EncodeToUtf16LE	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void EncodeToUtf16LE(std::ostream& stream, int ch)$/;"	f	namespace:Test::__anon130
EncodeToUtf32BE	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void EncodeToUtf32BE(std::ostream& stream, int ch)$/;"	f	namespace:Test::__anon130
EncodeToUtf32LE	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void EncodeToUtf32LE(std::ostream& stream, int ch)$/;"	f	namespace:Test::__anon130
EncodeToUtf8	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void EncodeToUtf8(std::ostream& stream, int ch)$/;"	f	namespace:Test::__anon130
Encoder	interfaces/sim_spark/encode.h	/^  Encoder(int buffersize_in = 128)$/;"	f	class:base64::Encoder
Encoder	interfaces/sim_spark/encode.h	/^class Encoder$/;"	c	namespace:base64
EncodingFn	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		typedef void (*EncodingFn)(std::ostream&, int);$/;"	t	namespace:Test::__anon130	file:
EncodingTester	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			EncodingTester(EncodingFn encoding, bool declareEncoding)$/;"	f	class:Test::__anon130::EncodingTester
EncodingTester	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		class EncodingTester$/;"	c	namespace:Test::__anon130	file:
EndDoc	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		EndDoc,$/;"	e	enum:YAML::EMITTER_MANIP
EndGroup	lib/yaml-cpp/src/emitterstate.cpp	/^	void EmitterState::EndGroup(GROUP_TYPE type)$/;"	f	class:YAML::EmitterState
EndMap	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		EndMap,$/;"	e	enum:YAML::EMITTER_MANIP
EndScalar	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& EndScalar() {$/;"	f	namespace:YAML::Exp
EndScalarInFlow	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& EndScalarInFlow() {$/;"	f	namespace:YAML::Exp
EndSeq	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		EndSeq,$/;"	e	enum:YAML::EMITTER_MANIP
EndStream	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::EndStream()$/;"	f	class:YAML::Scanner
EnemyGoalStates	core/python/behaviors/win.py	/^class EnemyGoalStates:$/;"	c
EnsureTokensInQueue	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::EnsureTokensInQueue()$/;"	f	class:YAML::Scanner
EnumName	core/common/Enum.cpp	/^EnumName::EnumName(const std::string& enums, size_t numOfEnums) : names(numOfEnums) $/;"	f	class:EnumName
EnumName	core/common/Enum.h	/^class EnumName$/;"	c
ErrorMsg	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	namespace ErrorMsg$/;"	n	namespace:YAML
EscBreak	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& EscBreak() {$/;"	f	namespace:YAML::Exp
EscSingleQuote	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& EscSingleQuote() {$/;"	f	namespace:YAML::Exp
Escape	lib/yaml-cpp/src/exp.cpp	/^		std::string Escape(Stream& in)$/;"	f	namespace:YAML::Exp
Escape	lib/yaml-cpp/src/exp.cpp	/^		std::string Escape(Stream& in, int codeLength)$/;"	f	namespace:YAML::Exp
EscapeNonAscii	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		EscapeNonAscii,$/;"	e	enum:YAML::EMITTER_MANIP
EscapedCharacters	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST EscapedCharacters()$/;"	f	namespace:Test::Spec
EscapedUnicode	lib/yaml-cpp/test/emittertests.cpp	/^		void EscapedUnicode(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Event	core/python/state_machine.py	/^class Event(object):$/;"	c
EventHandler	lib/yaml-cpp/include/yaml-cpp/eventhandler.h	/^	class EventHandler$/;"	c	namespace:YAML
EventNode	core/python/state_machine.py	/^class EventNode(Node):$/;"	c
Exception	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		Exception(const Mark& mark_, const std::string& msg_)$/;"	f	class:YAML::Exception
Exception	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	class Exception: public std::runtime_error {$/;"	c	namespace:YAML
ExceptionType	core/math/MVTools.h	/^  enum ExceptionType$/;"	g	class:MVException
Execute	build/pythonswig/PythonInterface.cpp	/^void PythonInterface::Execute(string command) {$/;"	f	class:PythonInterface
Execute	core/python/PythonInterface.cpp	/^void PythonInterface::Execute(string command) {$/;"	f	class:PythonInterface
ExistsActiveSimpleKey	lib/yaml-cpp/src/simplekey.cpp	/^	bool Scanner::ExistsActiveSimpleKey() const$/;"	f	class:YAML::Scanner
Exp	lib/yaml-cpp/src/exp.cpp	/^	namespace Exp$/;"	n	namespace:YAML	file:
Exp	lib/yaml-cpp/src/exp.h	/^	namespace Exp$/;"	n	namespace:YAML
ExpectedTagValue	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool ExpectedTagValue(YAML::Node& node, const char* tag)$/;"	f	namespace:Test::Parser
ExplicitBlockMappingEntries	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST ExplicitBlockMappingEntries()$/;"	f	namespace:Test::Spec
ExplicitDoc	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool ExplicitDoc()$/;"	f	namespace:Test::Parser
ExplicitEndDoc	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool ExplicitEndDoc()$/;"	f	namespace:Test::Parser
ExplicitNonSpecificPlainScalarTag	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool ExplicitNonSpecificPlainScalarTag()$/;"	f	namespace:Test::Parser
ExplicitNonSpecificSequenceTag	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool ExplicitNonSpecificSequenceTag()$/;"	f	namespace:Test::Parser
ExponentialFilter	core/common/ExponentialFilter.h	/^  ExponentialFilter(float decayRate, float factor = 1.0, float initialValue = 0):$/;"	f	class:ExponentialFilter
ExponentialFilter	core/common/ExponentialFilter.h	/^class ExponentialFilter {$/;"	c
ExtendedKalmanFilter	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  ExtendedKalmanFilter(StateTransitionFunction g_function, MeasurementFunction h_function, StateJacobianFunction G_function, MeasurementJacobianFunction H_function, StateCovarianceMatrix R_matrix, MeasurementCovarianceMatrix Q_matrix)$/;"	f	class:ExtendedKalmanFilter
ExtendedKalmanFilter	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^class ExtendedKalmanFilter$/;"	c
ExtraEndMap	lib/yaml-cpp/test/emittertests.cpp	/^		void ExtraEndMap(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
ExtraEndSeq	lib/yaml-cpp/test/emittertests.cpp	/^		void ExtraEndSeq(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
ExtrinsicCalibrationWidget	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^ExtrinsicCalibrationWidget::ExtrinsicCalibrationWidget(QWidget* parent) : QWidget(parent) {$/;"	f	class:ExtrinsicCalibrationWidget
ExtrinsicCalibrationWidget	build/include/tool/ExtrinsicCalibrationWidget.h	/^class ExtrinsicCalibrationWidget : public QWidget, public Ui_UTExtrinsicCalibrationWidget {$/;"	c
ExtrinsicCalibrationWidget	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^ExtrinsicCalibrationWidget::ExtrinsicCalibrationWidget(QWidget* parent) : QWidget(parent) {$/;"	f	class:ExtrinsicCalibrationWidget
ExtrinsicCalibrationWidget	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^class ExtrinsicCalibrationWidget : public QWidget, public Ui_UTExtrinsicCalibrationWidget {$/;"	c
ExtrinsicCalibrator	build/include/tool/calibration/ExtrinsicCalibrator.h	/^    ExtrinsicCalibrator(WorldObjectBlock* world_object_block, ImageProcessor* processor) {$/;"	f	class:ExtrinsicCalibrator
ExtrinsicCalibrator	build/include/tool/calibration/ExtrinsicCalibrator.h	/^class ExtrinsicCalibrator {$/;"	c
ExtrinsicCalibrator	tools/UTNaoTool/calibration/ExtrinsicCalibrator.h	/^    ExtrinsicCalibrator(WorldObjectBlock* world_object_block, ImageProcessor* processor) {$/;"	f	class:ExtrinsicCalibrator
ExtrinsicCalibrator	tools/UTNaoTool/calibration/ExtrinsicCalibrator.h	/^class ExtrinsicCalibrator {$/;"	c
F	core/python/state_machine.py	/^F = FailureEvent$/;"	v
F 	lib/lua/test/factorial.lua	/^F = function (f)$/;"	f
FACT	build/include/tool/UTOpenGL/BasicGL.h	/^#define FACT /;"	d
FACT	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^#define FACT /;"	d
FALLING	core/common/States.h	/^  FALLING = 8,$/;"	e	enum:STATES
FAR	lib/zlib/zconf.h	/^#      define FAR /;"	d
FAR	lib/zlib/zconf.h	/^#      undef FAR$/;"	d
FAR	lib/zlib/zconf.h	/^#  define FAR$/;"	d
FATAL	core/motion/rswalk2014/utils/Logger.hpp	/^   FATAL   = -33,$/;"	e	enum:LogLevel
FIELD	core/common/Bowdoin14Field.h	/^const Rectangle FIELD =$/;"	v
FIELD	core/common/Field.h	/^const Rectangle FIELD =$/;"	v
FIELD	core/common/RC2013Field.h	/^const Rectangle FIELD =$/;"	v
FIELD	core/common/UTField.h	/^const Rectangle FIELD =$/;"	v
FIELDLINE_H	core/vision/structures/FieldLine.h	/^#define FIELDLINE_H$/;"	d
FIELD_CENTER_X	core/common/Bowdoin14Field.h	/^const float FIELD_CENTER_X = 0;$/;"	v
FIELD_CENTER_X	core/common/Field.h	/^const float FIELD_CENTER_X = 0;$/;"	v
FIELD_CENTER_X	core/common/RC2013Field.h	/^const float FIELD_CENTER_X = 0;$/;"	v
FIELD_CENTER_X	core/common/UTField.h	/^const float FIELD_CENTER_X = 0;$/;"	v
FIELD_CENTER_Y	core/common/Bowdoin14Field.h	/^const float FIELD_CENTER_Y = 0;$/;"	v
FIELD_CENTER_Y	core/common/Field.h	/^const float FIELD_CENTER_Y = 0;$/;"	v
FIELD_CENTER_Y	core/common/RC2013Field.h	/^const float FIELD_CENTER_Y = 0;$/;"	v
FIELD_CENTER_Y	core/common/UTField.h	/^const float FIELD_CENTER_Y = 0;$/;"	v
FIELD_LENGTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define FIELD_LENGTH /;"	d
FIELD_LENGTH_OFFSET	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define FIELD_LENGTH_OFFSET /;"	d
FIELD_LINE_WIDTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^#define FIELD_LINE_WIDTH /;"	d
FIELD_WIDTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define FIELD_WIDTH /;"	d
FIELD_WIDTH_OFFSET	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define FIELD_WIDTH_OFFSET /;"	d
FIELD_X	core/common/Bowdoin14Field.h	/^const float FIELD_X = 9000;$/;"	v
FIELD_X	core/common/Field.h	/^const float FIELD_X = 3000;$/;"	v
FIELD_X	core/common/RC2013Field.h	/^const float FIELD_X = 9003;$/;"	v
FIELD_X	core/common/UTField.h	/^const float FIELD_X = 3000;$/;"	v
FIELD_Y	core/common/Bowdoin14Field.h	/^const float FIELD_Y = 6030;$/;"	v
FIELD_Y	core/common/Field.h	/^const float FIELD_Y = 2000;$/;"	v
FIELD_Y	core/common/RC2013Field.h	/^const float FIELD_Y = 6023;$/;"	v
FIELD_Y	core/common/UTField.h	/^const float FIELD_Y = 2000;$/;"	v
FILES_WINDOW_H	build/include/tool/FilesWindow.h	/^#define FILES_WINDOW_H$/;"	d
FILES_WINDOW_H	tools/UTNaoTool/FilesWindow.h	/^#define FILES_WINDOW_H$/;"	d
FILE_H	core/common/File.h	/^#define FILE_H$/;"	d
FINALIZEDBIT	lib/lua/src/lgc.h	/^#define FINALIZEDBIT	/;"	d
FINISHED	core/common/States.h	/^  FINISHED = 7,$/;"	e	enum:STATES
FINISHED_WITH_STEP	core/motion/rswalk2014/RSWalkModule2014.h	/^            FINISHED_WITH_STEP,$/;"	e	enum:RSWalkModule2014::StepIntoKickState
FINISHSTAND	core/memory/KickEngineBlock.h	/^    FINISHSTAND,$/;"	e	enum:KickEngineBlock::Kick_State
FINISHSTAND	core/motion/KickParameters.h	/^    FINISHSTAND,$/;"	e	enum:KickState::State
FINISHSTANDTALL	core/memory/KickEngineBlock.h	/^    FINISHSTANDTALL,$/;"	e	enum:KickEngineBlock::Kick_State
FINISH_STATE	lib/zlib/deflate.h	/^#define FINISH_STATE /;"	d
FIRST_ANGLE_SENSOR	core/common/RobotInfo.h	/^static int FIRST_ANGLE_SENSOR = gyroX;$/;"	v
FIRST_COLOR_BLUE	core/vision/BeaconDetector.h	/^    FIRST_COLOR_BLUE,$/;"	e	enum:BeaconDetector::BeaconPossibilityState
FIRST_COLOR_BLUE	vision_testing/src/vision_testing.cpp	/^  FIRST_COLOR_BLUE,$/;"	e	enum:BeaconPossibilityState	file:
FIRST_COLOR_PINK	core/vision/BeaconDetector.h	/^    FIRST_COLOR_PINK,$/;"	e	enum:BeaconDetector::BeaconPossibilityState
FIRST_COLOR_PINK	vision_testing/src/vision_testing.cpp	/^  FIRST_COLOR_PINK,$/;"	e	enum:BeaconPossibilityState	file:
FIRST_COLOR_YELLOW	core/vision/BeaconDetector.h	/^    FIRST_COLOR_YELLOW,$/;"	e	enum:BeaconDetector::BeaconPossibilityState
FIRST_COLOR_YELLOW	vision_testing/src/vision_testing.cpp	/^  FIRST_COLOR_YELLOW,$/;"	e	enum:BeaconPossibilityState	file:
FIRST_FRAME_GRADUAL	core/motion/GetupModule.cpp	/^#define FIRST_FRAME_GRADUAL$/;"	d	file:
FIRST_ID	core/common/Profiling.cpp	/^#define FIRST_ID /;"	d	file:
FIRST_RESERVED	lib/lua/src/llex.h	/^#define FIRST_RESERVED	/;"	d
FIXEDBIT	lib/lua/src/lgc.h	/^#define FIXEDBIT	/;"	d
FLAGS	lib/lua/src/lstrlib.c	/^#define FLAGS	/;"	d	file:
FLAGS	lib/zlib/inflate.h	/^    FLAGS,      \/* i: waiting for method and flags (gzip) *\/$/;"	e	enum:__anon136
FLAG_BLUE	core/vision/enums/Colors.h	/^#define FLAG_BLUE /;"	d
FLAG_GREEN	core/vision/enums/Colors.h	/^#define FLAG_GREEN /;"	d
FLAG_ORANGE	core/vision/enums/Colors.h	/^#define FLAG_ORANGE /;"	d
FLAG_PINK	core/vision/enums/Colors.h	/^#define FLAG_PINK /;"	d
FLAG_WHITE	core/vision/enums/Colors.h	/^#define FLAG_WHITE /;"	d
FLAG_YELLOW	core/vision/enums/Colors.h	/^#define FLAG_YELLOW /;"	d
FLOW_END	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const FLOW_END               = "illegal flow end";$/;"	m	namespace:YAML::ErrorMsg
FLOW_ENTRY	lib/yaml-cpp/src/token.h	/^			FLOW_ENTRY,$/;"	e	enum:YAML::Token::TYPE
FLOW_MAP	lib/yaml-cpp/src/scanner.h	/^		enum FLOW_MARKER { FLOW_MAP, FLOW_SEQ };$/;"	e	enum:YAML::Scanner::FLOW_MARKER
FLOW_MAP_COMPACT	lib/yaml-cpp/src/token.h	/^			FLOW_MAP_COMPACT,$/;"	e	enum:YAML::Token::TYPE
FLOW_MAP_END	lib/yaml-cpp/src/token.h	/^			FLOW_MAP_END,$/;"	e	enum:YAML::Token::TYPE
FLOW_MAP_START	lib/yaml-cpp/src/token.h	/^			FLOW_MAP_START,$/;"	e	enum:YAML::Token::TYPE
FLOW_MARKER	lib/yaml-cpp/src/scanner.h	/^		enum FLOW_MARKER { FLOW_MAP, FLOW_SEQ };$/;"	g	class:YAML::Scanner
FLOW_SEQ	lib/yaml-cpp/src/scanner.h	/^		enum FLOW_MARKER { FLOW_MAP, FLOW_SEQ };$/;"	e	enum:YAML::Scanner::FLOW_MARKER
FLOW_SEQ_END	lib/yaml-cpp/src/token.h	/^			FLOW_SEQ_END,$/;"	e	enum:YAML::Token::TYPE
FLOW_SEQ_START	lib/yaml-cpp/src/token.h	/^			FLOW_SEQ_START,$/;"	e	enum:YAML::Token::TYPE
FLOW_TYPE	lib/yaml-cpp/src/emitterstate.h	/^	enum FLOW_TYPE {$/;"	g	namespace:YAML
FLUSH_BLOCK	lib/zlib/deflate.c	/^#define FLUSH_BLOCK(/;"	d	file:
FLUSH_BLOCK_ONLY	lib/zlib/deflate.c	/^#define FLUSH_BLOCK_ONLY(/;"	d	file:
FMT_SCOPE	lib/yaml-cpp/src/emitterstate.h	/^	enum FMT_SCOPE {$/;"	g	namespace:YAML
FOCAL_LENGTH	core/motion/rswalk2014/perception/vision/CameraDefs.hpp	/^#define FOCAL_LENGTH /;"	d
FOCUS_AREA_H	core/vision/structures/FocusArea.h	/^#define FOCUS_AREA_H$/;"	d
FOCUS_RANGE_HORIZONTAL	core/vision/Macros.h	/^#define FOCUS_RANGE_HORIZONTAL(/;"	d
FOCUS_RANGE_VERTICAL	core/vision/Macros.h	/^#define FOCUS_RANGE_VERTICAL(/;"	d
FOLD	lib/yaml-cpp/src/scanscalar.h	/^	enum FOLD { DONT_FOLD, FOLD_BLOCK, FOLD_FLOW };$/;"	g	namespace:YAML
FOLD_BLOCK	lib/yaml-cpp/src/scanscalar.h	/^	enum FOLD { DONT_FOLD, FOLD_BLOCK, FOLD_FLOW };$/;"	e	enum:YAML::FOLD
FOLD_FLOW	lib/yaml-cpp/src/scanscalar.h	/^	enum FOLD { DONT_FOLD, FOLD_BLOCK, FOLD_FLOW };$/;"	e	enum:YAML::FOLD
FOOT	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^         FOOT = 0,$/;"	e	enum:Kinematics::Link
FOOTDOWN	core/memory/KickEngineBlock.h	/^    FOOTDOWN,$/;"	e	enum:KickEngineBlock::Kick_State
FOOTDOWN	core/motion/KickParameters.h	/^    FOOTDOWN,$/;"	e	enum:KickState::State
FOOTMIDDLE	core/memory/KickEngineBlock.h	/^    FOOTMIDDLE,$/;"	e	enum:KickEngineBlock::Kick_State
FOOT_LENGTH	core/motion/rswalk2014/BodyModel.cpp	/^const float BodyModel::FOOT_LENGTH = 160;$/;"	m	class:BodyModel	file:
FOOT_LENGTH	core/motion/rswalk2014/BodyModel.hpp	/^      static const float FOOT_LENGTH;$/;"	m	class:BodyModel
FOOT_LENGTH	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^#define FOOT_LENGTH /;"	d	file:
FOOT_X_BACK	build/include/tool/simulation/PhysicsSimulator.cpp	/^#define FOOT_X_BACK /;"	d	file:
FOOT_X_BACK	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^#define FOOT_X_BACK /;"	d	file:
FOOT_X_FRONT	build/include/tool/simulation/PhysicsSimulator.cpp	/^#define FOOT_X_FRONT /;"	d	file:
FOOT_X_FRONT	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^#define FOOT_X_FRONT /;"	d	file:
FOOT_Y_OUT	build/include/tool/simulation/PhysicsSimulator.cpp	/^#define FOOT_Y_OUT /;"	d	file:
FOOT_Y_OUT	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^#define FOOT_Y_OUT /;"	d	file:
FORWARD	core/common/Roles.h	/^  FORWARD = 3,$/;"	e	enum:Role
FORWARD	core/memory/OdometryBlock.h	/^    FORWARD,$/;"	e	enum:Fall::FallDir
FORWARD	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^            INIT, TURN, FORWARD, END$/;"	e	enum:WalkEnginePreProcessor::DribbleEngine::DribbleState
FORWARDKINEMATICS_GJA13VPQ	core/kinematics/ForwardKinematics.h	/^#define FORWARDKINEMATICS_GJA13VPQ$/;"	d
FORWARD_GAP	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^#define FORWARD_GAP /;"	d	file:
FORWARD_THRESHOLD	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^#define FORWARD_THRESHOLD /;"	d	file:
FOVx	core/constants/ImageConstants.h	/^const float FOVx = DEG_T_RAD * 60.97; \/\/ from new specs$/;"	v
FOVy	core/constants/ImageConstants.h	/^const float FOVy = DEG_T_RAD * 47.64; \/\/ from new specs$/;"	v
FPS	core/motion/rswalk2014/WalkCycle.hpp	/^#define FPS /;"	d
FRAMEINFO_KJS7E8UX	core/memory/FrameInfoBlock.h	/^#define FRAMEINFO_KJS7E8UX$/;"	d
FRAMES_PER_PACKET	core/communications/CommunicationModule.cpp	/^#define FRAMES_PER_PACKET /;"	d	file:
FREELIST_REF	lib/lua/src/lauxlib.c	/^#define FREELIST_REF	/;"	d	file:
FRONT	core/memory/OdometryBlock.h	/^    FRONT,$/;"	e	enum:Getup::GetupType
FSR_LFL_Offset1	core/common/RobotDimensions.h	/^    FSR_LFL_Offset1,$/;"	e	enum:RobotDimensions::__anon8
FSR_LFL_Offset2	core/common/RobotDimensions.h	/^    FSR_LFL_Offset2,$/;"	e	enum:RobotDimensions::__anon8
FSR_LFL_Offset3	core/common/RobotDimensions.h	/^    FSR_LFL_Offset3,$/;"	e	enum:RobotDimensions::__anon8
FSR_LFR_Offset1	core/common/RobotDimensions.h	/^    FSR_LFR_Offset1,$/;"	e	enum:RobotDimensions::__anon8
FSR_LFR_Offset2	core/common/RobotDimensions.h	/^    FSR_LFR_Offset2,$/;"	e	enum:RobotDimensions::__anon8
FSR_LFR_Offset3	core/common/RobotDimensions.h	/^    FSR_LFR_Offset3,$/;"	e	enum:RobotDimensions::__anon8
FSR_LRL_Offset1	core/common/RobotDimensions.h	/^    FSR_LRL_Offset1,$/;"	e	enum:RobotDimensions::__anon8
FSR_LRL_Offset2	core/common/RobotDimensions.h	/^    FSR_LRL_Offset2,$/;"	e	enum:RobotDimensions::__anon8
FSR_LRL_Offset3	core/common/RobotDimensions.h	/^    FSR_LRL_Offset3,$/;"	e	enum:RobotDimensions::__anon8
FSR_LRR_Offset1	core/common/RobotDimensions.h	/^    FSR_LRR_Offset1,$/;"	e	enum:RobotDimensions::__anon8
FSR_LRR_Offset2	core/common/RobotDimensions.h	/^    FSR_LRR_Offset2,$/;"	e	enum:RobotDimensions::__anon8
FSR_LRR_Offset3	core/common/RobotDimensions.h	/^    FSR_LRR_Offset3,$/;"	e	enum:RobotDimensions::__anon8
FSR_POS	core/motion/rswalk2014/utils/body.hpp	/^   const float FSR_POS[2][4][2] = {$/;"	m	namespace:RSSensors
FT_BLOCK	lib/yaml-cpp/src/emitterstate.h	/^		FT_BLOCK$/;"	e	enum:YAML::FLOW_TYPE
FT_FLOW	lib/yaml-cpp/src/emitterstate.h	/^		FT_FLOW,$/;"	e	enum:YAML::FLOW_TYPE
FT_NONE	lib/yaml-cpp/src/emitterstate.h	/^		FT_NONE,$/;"	e	enum:YAML::FLOW_TYPE
FTypeName	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define FTypeName /;"	d
FTypeName	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	FTypeName():m_depend(false){}$/;"	f	class:fadbad::FTypeName
FTypeName	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	FTypeName():m_val(),m_size(0),m_diff(0){}$/;"	f	class:fadbad::FTypeName
FTypeName	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	FTypeName(const FTypeName<T,N>& val):m_val(val.m_val),m_depend(val.m_depend)$/;"	f	class:fadbad::FTypeName
FTypeName	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	FTypeName(const FTypeName<T>& val):m_val(val.m_val),m_size(val.m_size),m_diff(m_size==0?0:new T[m_size])$/;"	f	class:fadbad::FTypeName
FTypeName	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	template <class U> \/*explicit*\/ FTypeName(const U& val):m_val(val),m_depend(false)$/;"	f	class:fadbad::FTypeName
FTypeName	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	template <class U> \/*explicit*\/ FTypeName(const U& val):m_val(val),m_size(0),m_diff(0){}$/;"	f	class:fadbad::FTypeName
FTypeName	core/motion/rswalk2014/FADBAD++/fadiff.h	/^class FTypeName \/\/ STACK-BASED$/;"	c	namespace:fadbad
FTypeName	core/motion/rswalk2014/FADBAD++/fadiff.h	/^class FTypeName<T,0> \/\/ HEAP-BASED$/;"	c	namespace:fadbad
FULL_FIELD_LENGTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^#define FULL_FIELD_LENGTH /;"	d
FULL_FIELD_WIDTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^#define FULL_FIELD_WIDTH /;"	d
FULL_VERSION	install/install_naoqi	/^FULL_VERSION = '%s' % VERSION$/;"	v
FUNCTION_IS_NOT_USED	core/common/RobotInfo.h	/^#define FUNCTION_IS_NOT_USED /;"	d
F_OPEN	lib/zlib/zutil.h	/^#  define F_OPEN(/;"	d
FaceBlueLeft0	core/common/RobotInfo.h	/^  FaceBlueLeft0,$/;"	e	enum:LED
FaceBlueLeft135	core/common/RobotInfo.h	/^  FaceBlueLeft135,$/;"	e	enum:LED
FaceBlueLeft180	core/common/RobotInfo.h	/^  FaceBlueLeft180,$/;"	e	enum:LED
FaceBlueLeft225	core/common/RobotInfo.h	/^  FaceBlueLeft225,$/;"	e	enum:LED
FaceBlueLeft270	core/common/RobotInfo.h	/^  FaceBlueLeft270,$/;"	e	enum:LED
FaceBlueLeft315	core/common/RobotInfo.h	/^  FaceBlueLeft315,$/;"	e	enum:LED
FaceBlueLeft45	core/common/RobotInfo.h	/^  FaceBlueLeft45,$/;"	e	enum:LED
FaceBlueLeft90	core/common/RobotInfo.h	/^  FaceBlueLeft90,$/;"	e	enum:LED
FaceBlueRight0	core/common/RobotInfo.h	/^  FaceBlueRight0,$/;"	e	enum:LED
FaceBlueRight135	core/common/RobotInfo.h	/^  FaceBlueRight135,$/;"	e	enum:LED
FaceBlueRight180	core/common/RobotInfo.h	/^  FaceBlueRight180,$/;"	e	enum:LED
FaceBlueRight225	core/common/RobotInfo.h	/^  FaceBlueRight225,$/;"	e	enum:LED
FaceBlueRight270	core/common/RobotInfo.h	/^  FaceBlueRight270,$/;"	e	enum:LED
FaceBlueRight315	core/common/RobotInfo.h	/^  FaceBlueRight315,$/;"	e	enum:LED
FaceBlueRight45	core/common/RobotInfo.h	/^  FaceBlueRight45,$/;"	e	enum:LED
FaceBlueRight90	core/common/RobotInfo.h	/^  FaceBlueRight90,$/;"	e	enum:LED
FaceGreenLeft0	core/common/RobotInfo.h	/^  FaceGreenLeft0,$/;"	e	enum:LED
FaceGreenLeft135	core/common/RobotInfo.h	/^  FaceGreenLeft135,$/;"	e	enum:LED
FaceGreenLeft180	core/common/RobotInfo.h	/^  FaceGreenLeft180,$/;"	e	enum:LED
FaceGreenLeft225	core/common/RobotInfo.h	/^  FaceGreenLeft225,$/;"	e	enum:LED
FaceGreenLeft270	core/common/RobotInfo.h	/^  FaceGreenLeft270,$/;"	e	enum:LED
FaceGreenLeft315	core/common/RobotInfo.h	/^  FaceGreenLeft315,$/;"	e	enum:LED
FaceGreenLeft45	core/common/RobotInfo.h	/^  FaceGreenLeft45,$/;"	e	enum:LED
FaceGreenLeft90	core/common/RobotInfo.h	/^  FaceGreenLeft90,$/;"	e	enum:LED
FaceGreenRight0	core/common/RobotInfo.h	/^  FaceGreenRight0,$/;"	e	enum:LED
FaceGreenRight135	core/common/RobotInfo.h	/^  FaceGreenRight135,$/;"	e	enum:LED
FaceGreenRight180	core/common/RobotInfo.h	/^  FaceGreenRight180,$/;"	e	enum:LED
FaceGreenRight225	core/common/RobotInfo.h	/^  FaceGreenRight225,$/;"	e	enum:LED
FaceGreenRight270	core/common/RobotInfo.h	/^  FaceGreenRight270,$/;"	e	enum:LED
FaceGreenRight315	core/common/RobotInfo.h	/^  FaceGreenRight315,$/;"	e	enum:LED
FaceGreenRight45	core/common/RobotInfo.h	/^  FaceGreenRight45,$/;"	e	enum:LED
FaceGreenRight90	core/common/RobotInfo.h	/^  FaceGreenRight90,$/;"	e	enum:LED
FaceRedLeft0	core/common/RobotInfo.h	/^  FaceRedLeft0,$/;"	e	enum:LED
FaceRedLeft135	core/common/RobotInfo.h	/^  FaceRedLeft135,$/;"	e	enum:LED
FaceRedLeft180	core/common/RobotInfo.h	/^  FaceRedLeft180,$/;"	e	enum:LED
FaceRedLeft225	core/common/RobotInfo.h	/^  FaceRedLeft225,$/;"	e	enum:LED
FaceRedLeft270	core/common/RobotInfo.h	/^  FaceRedLeft270,$/;"	e	enum:LED
FaceRedLeft315	core/common/RobotInfo.h	/^  FaceRedLeft315,$/;"	e	enum:LED
FaceRedLeft45	core/common/RobotInfo.h	/^  FaceRedLeft45,$/;"	e	enum:LED
FaceRedLeft90	core/common/RobotInfo.h	/^  FaceRedLeft90,$/;"	e	enum:LED
FaceRedRight0	core/common/RobotInfo.h	/^  FaceRedRight0,$/;"	e	enum:LED
FaceRedRight135	core/common/RobotInfo.h	/^  FaceRedRight135,$/;"	e	enum:LED
FaceRedRight180	core/common/RobotInfo.h	/^  FaceRedRight180,$/;"	e	enum:LED
FaceRedRight225	core/common/RobotInfo.h	/^  FaceRedRight225,$/;"	e	enum:LED
FaceRedRight270	core/common/RobotInfo.h	/^  FaceRedRight270,$/;"	e	enum:LED
FaceRedRight315	core/common/RobotInfo.h	/^  FaceRedRight315,$/;"	e	enum:LED
FaceRedRight45	core/common/RobotInfo.h	/^  FaceRedRight45,$/;"	e	enum:LED
FaceRedRight90	core/common/RobotInfo.h	/^  FaceRedRight90,$/;"	e	enum:LED
FailureEvent	core/python/state_machine.py	/^class FailureEvent(Event):$/;"	c
FailureNode	core/python/state_machine.py	/^class FailureNode(EventNode):$/;"	c
Fall	core/memory/OdometryBlock.h	/^struct Fall {$/;"	s
FallDir	core/memory/OdometryBlock.h	/^  enum FallDir {$/;"	g	struct:Fall
Falling	core/python/primary_bvr.py	/^class Falling(Task): pass$/;"	c
Fcts	tools/behaviorSim/cma.py	/^Fcts = fcts  # for cross compatibility, as if the functions were static members of class Fcts$/;"	c
Fcts	tools/behaviorSim/cma.py	/^Fcts = fcts  # for cross compatibility, as if the functions were static members of class Fcts$/;"	v
FieldAreaRoleConfig	core/memory/BehaviorParamBlock.h	/^  FieldAreaRoleConfig() {$/;"	f	struct:FieldAreaRoleConfig
FieldAreaRoleConfig	core/memory/BehaviorParamBlock.h	/^struct FieldAreaRoleConfig {$/;"	s
FieldConfiguration	core/common/FieldConfiguration.cpp	/^FieldConfiguration::FieldConfiguration(std::initializer_list<std::pair<int,ObjectConfiguration>> l) {$/;"	f	class:FieldConfiguration
FieldConfiguration	core/common/FieldConfiguration.h	/^    FieldConfiguration() { }$/;"	f	class:FieldConfiguration
FieldConfiguration	core/common/FieldConfiguration.h	/^class FieldConfiguration : public YamlConfig {$/;"	c
FieldLine	core/vision/structures/FieldLine.h	/^struct FieldLine {$/;"	s
FieldObjectID	core/vision/structures/CornerPoint.h	/^  unsigned short CornerType, FieldObjectID;$/;"	m	struct:CornerPoint
Fields	core/python/behaviors/win.py	/^class Fields: $/;"	c
FileLogger	core/memory/Logger.h	/^    FileLogger() : Logger(false, NULL, true) { }$/;"	f	class:FileLogger
FileLogger	core/memory/Logger.h	/^class FileLogger : public Logger {$/;"	c
FilesWindow	build/include/tool/FilesWindow.cpp	/^FilesWindow::FilesWindow(QMainWindow* p) : ConfigWindow(p) {$/;"	f	class:FilesWindow
FilesWindow	build/include/tool/FilesWindow.h	/^class FilesWindow : public ConfigWindow, public Ui_UTFilesWindow {$/;"	c
FilesWindow	tools/UTNaoTool/FilesWindow.cpp	/^FilesWindow::FilesWindow(QMainWindow* p) : ConfigWindow(p) {$/;"	f	class:FilesWindow
FilesWindow	tools/UTNaoTool/FilesWindow.h	/^class FilesWindow : public ConfigWindow, public Ui_UTFilesWindow {$/;"	c
FinalEmptyLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FinalEmptyLines()$/;"	f	namespace:Test::Spec
Finalize	build/pythonswig/PythonInterface.cpp	/^void PythonInterface::Finalize() {$/;"	f	class:PythonInterface
Finalize	core/python/PythonInterface.cpp	/^void PythonInterface::Finalize() {$/;"	f	class:PythonInterface
FindAtIndex	lib/yaml-cpp/src/node.cpp	/^	const Node *Node::FindAtIndex(std::size_t i) const$/;"	f	class:YAML::Node
FindFromNodeAtIndex	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^	inline const Node *FindFromNodeAtIndex(const Node& node, const T& key) {$/;"	f	namespace:YAML
FindValue	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline const Node *Node::FindValue(char *key) const {$/;"	f	class:YAML::Node
FindValue	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline const Node *Node::FindValue(const T& key) const {$/;"	f	class:YAML::Node
FindValue	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline const Node *Node::FindValue(const char *key) const {$/;"	f	class:YAML::Node
FindValueForKey	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline const Node *Node::FindValueForKey(const T& key) const {$/;"	f	class:YAML::Node
Finished	core/python/primary_bvr.py	/^class Finished(pose.Sit): pass$/;"	c
FitnessFunctions	tools/behaviorSim/cma.py	/^class FitnessFunctions(object):$/;"	c
FloatPrecision	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^    inline _Precision FloatPrecision(int n) {$/;"	f	namespace:YAML
Floor	core/math/Geometry.cpp	/^int Floor( float d ) {$/;"	f
Flow	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Flow,$/;"	e	enum:YAML::EMITTER_MANIP
FlowContent	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowContent()$/;"	f	namespace:Test::Spec
FlowEntry	lib/yaml-cpp/src/exp.h	/^		const char FlowEntry = ',';$/;"	m	namespace:YAML::Keys
FlowFolding	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowFolding()$/;"	f	namespace:Test::Spec
FlowMap	lib/yaml-cpp/src/collectionstack.h	/^		enum value { None, BlockMap, BlockSeq, FlowMap, FlowSeq, CompactMap };$/;"	e	enum:YAML::CollectionType::value
FlowMap	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool FlowMap()$/;"	f	namespace:Test::Parser
FlowMapEnd	lib/yaml-cpp/src/exp.h	/^		const char FlowMapEnd = '}';$/;"	m	namespace:YAML::Keys
FlowMapEndingWithSoloEntry	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool FlowMapEndingWithSoloEntry()$/;"	f	namespace:Test::Parser
FlowMapStart	lib/yaml-cpp/src/exp.h	/^		const char FlowMapStart = '{';$/;"	m	namespace:YAML::Keys
FlowMapWithOmittedKey	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool FlowMapWithOmittedKey()$/;"	f	namespace:Test::Parser
FlowMapWithOmittedValue	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool FlowMapWithOmittedValue()$/;"	f	namespace:Test::Parser
FlowMapWithSoloEntry	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool FlowMapWithSoloEntry()$/;"	f	namespace:Test::Parser
FlowMappingAdjacentValues	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowMappingAdjacentValues()$/;"	f	namespace:Test::Spec
FlowMappingEntries	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowMappingEntries()$/;"	f	namespace:Test::Spec
FlowMappingSeparateValues	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowMappingSeparateValues()$/;"	f	namespace:Test::Spec
FlowMappings	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowMappings()$/;"	f	namespace:Test::Spec
FlowNodes	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowNodes()$/;"	f	namespace:Test::Spec
FlowSeq	lib/yaml-cpp/src/collectionstack.h	/^		enum value { None, BlockMap, BlockSeq, FlowMap, FlowSeq, CompactMap };$/;"	e	enum:YAML::CollectionType::value
FlowSeq	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool FlowSeq()$/;"	f	namespace:Test::Parser
FlowSeqEnd	lib/yaml-cpp/src/exp.h	/^		const char FlowSeqEnd = ']';$/;"	m	namespace:YAML::Keys
FlowSeqStart	lib/yaml-cpp/src/exp.h	/^		const char FlowSeqStart = '[';$/;"	m	namespace:YAML::Keys
FlowSequence	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowSequence()$/;"	f	namespace:Test::Spec
FlowSequenceEntries	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowSequenceEntries()$/;"	f	namespace:Test::Spec
FlowStructureIndicators	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FlowStructureIndicators()$/;"	f	namespace:Test::Spec
FocusArea	core/vision/structures/FocusArea.h	/^  FocusArea(int x1, int y1, int x2, int y2) : x1(x1), y1(y1), x2(x2), y2(y2) {$/;"	f	struct:FocusArea
FocusArea	core/vision/structures/FocusArea.h	/^struct FocusArea {$/;"	s
FoldedLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FoldedLines()$/;"	f	namespace:Test::Spec
FoldedNewlinesArePreservedForMoreIndentedAndBlankLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FoldedNewlinesArePreservedForMoreIndentedAndBlankLines()$/;"	f	namespace:Test::Spec
FoldedScalar	lib/yaml-cpp/src/exp.h	/^		const char FoldedScalar = '>';$/;"	m	namespace:YAML::Keys
FoldedScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void FoldedScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
FoldedScalar	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST FoldedScalar()$/;"	f	namespace:Test::Spec
FoldedScalarWithIndent	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void FoldedScalarWithIndent(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
Foo	lib/yaml-cpp/test/emittertests.cpp	/^			Foo(): x(0) {}$/;"	f	struct:Test::Emitter::Foo
Foo	lib/yaml-cpp/test/emittertests.cpp	/^			Foo(int x_, const std::string& bar_): x(x_), bar(bar_) {}$/;"	f	struct:Test::Emitter::Foo
Foo	lib/yaml-cpp/test/emittertests.cpp	/^		struct Foo {$/;"	s	namespace:Test::Emitter	file:
Foot	core/motion/rswalk2014/types/ActionCommand.hpp	/^      enum Foot {$/;"	g	struct:ActionCommand::Body
FootHeight	core/motion/rswalk2014/utils/body.hpp	/^   const float FootHeight = 45.19;$/;"	m	namespace:Limbs
FootSensorRegion	core/motion/rswalk2014/RSWalkModule2014.cpp	/^enum FootSensorRegion$/;"	g	file:
ForceHardSeparation	lib/yaml-cpp/src/emitterstate.h	/^		void ForceHardSeparation() { m_requiresSoftSeparation = false; }$/;"	f	class:YAML::EmitterState
ForwardKinematics	core/kinematics/ForwardKinematics.h	/^namespace ForwardKinematics {$/;"	n
FrameInfoBlock	core/memory/FrameInfoBlock.h	/^  FrameInfoBlock(unsigned int frame_id = 0, double seconds_since_start = 0, MemorySource source = MEMORY_ROBOT):$/;"	f	struct:FrameInfoBlock
FrameInfoBlock	core/memory/FrameInfoBlock.h	/^struct FrameInfoBlock : public MemoryBlock {$/;"	s
FrameListWidgetItem	build/include/tool/LogEditorWindow.h	/^    FrameListWidgetItem(const FrameListWidgetItem& other) : QListWidgetItem(other) {$/;"	f	class:FrameListWidgetItem
FrameListWidgetItem	build/include/tool/LogEditorWindow.h	/^    FrameListWidgetItem(std::string directory, int frame) {$/;"	f	class:FrameListWidgetItem
FrameListWidgetItem	build/include/tool/LogEditorWindow.h	/^class FrameListWidgetItem : public QListWidgetItem {$/;"	c
FrameListWidgetItem	tools/UTNaoTool/LogEditorWindow.h	/^    FrameListWidgetItem(const FrameListWidgetItem& other) : QListWidgetItem(other) {$/;"	f	class:FrameListWidgetItem
FrameListWidgetItem	tools/UTNaoTool/LogEditorWindow.h	/^    FrameListWidgetItem(std::string directory, int frame) {$/;"	f	class:FrameListWidgetItem
FrameListWidgetItem	tools/UTNaoTool/LogEditorWindow.h	/^class FrameListWidgetItem : public QListWidgetItem {$/;"	c
FrameNumber	build/include/tool/StateWindow.h	/^     FrameNumber = 0,$/;"	e	enum:StateWindow::__anon3
FrameNumber	tools/UTNaoTool/StateWindow.h	/^     FrameNumber = 0,$/;"	e	enum:StateWindow::__anon141
Freq	lib/zlib/deflate.h	/^#define Freq /;"	d
FullColor	vision_testing/src/vision_testing.cpp	/^enum FullColor$/;"	g	file:
FuncState	lib/lua/src/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	lib/lua/src/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
FwdLongLargeGapKick	core/common/Kicks.h	/^  FwdLongLargeGapKick,$/;"	e	enum:kicks
FwdLongSmallGapKick	core/common/Kicks.h	/^  FwdLongSmallGapKick,$/;"	e	enum:kicks
FwdLongStraightKick	core/common/Kicks.h	/^  FwdLongStraightKick,$/;"	e	enum:kicks
FwdMediumStraightKick	core/common/Kicks.h	/^  FwdMediumStraightKick,$/;"	e	enum:kicks
FwdPass2Kick	core/common/Kicks.h	/^  FwdPass2Kick,$/;"	e	enum:kicks
FwdPass3Kick	core/common/Kicks.h	/^  FwdPass3Kick,$/;"	e	enum:kicks
FwdPass4Kick	core/common/Kicks.h	/^  FwdPass4Kick,$/;"	e	enum:kicks
FwdPass5Kick	core/common/Kicks.h	/^  FwdPass5Kick,$/;"	e	enum:kicks
FwdShortStraightKick	core/common/Kicks.h	/^  FwdShortStraightKick,$/;"	e	enum:kicks
FwdSuperStraightKick	core/common/Kicks.h	/^  FwdSuperStraightKick,$/;"	e	enum:kicks
G	core/localization/LocalizationModule.cpp	/^KF::StateJacobianMatrix LocalizationModule::G(KF::StateVector x, KF::ControlVector u)$/;"	f	class:LocalizationModule
G	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateJacobianFunction G;$/;"	m	class:ExtendedKalmanFilter
G	kalman_filters/src/ekf_test.cpp	/^KF::StateJacobianMatrix G(KF::StateVector x, KF::ControlVector u)$/;"	f
G	lib/lua/src/lstate.h	/^#define G(/;"	d
GAMECONTROLLER_PORT	core/communications/RoboCupGameControlData.h	/^#define GAMECONTROLLER_PORT /;"	d
GAMECONTROLLER_RETURN_MSG_ALIVE	core/communications/RoboCupGameControlData.h	/^#define GAMECONTROLLER_RETURN_MSG_ALIVE /;"	d
GAMECONTROLLER_RETURN_MSG_MAN_PENALISE	core/communications/RoboCupGameControlData.h	/^#define GAMECONTROLLER_RETURN_MSG_MAN_PENALISE /;"	d
GAMECONTROLLER_RETURN_MSG_MAN_UNPENALISE	core/communications/RoboCupGameControlData.h	/^#define GAMECONTROLLER_RETURN_MSG_MAN_UNPENALISE /;"	d
GAMECONTROLLER_RETURN_STRUCT_HEADER	core/communications/RoboCupGameControlData.h	/^#define GAMECONTROLLER_RETURN_STRUCT_HEADER /;"	d
GAMECONTROLLER_RETURN_STRUCT_VERSION	core/communications/RoboCupGameControlData.h	/^#define GAMECONTROLLER_RETURN_STRUCT_VERSION /;"	d
GAMECONTROLLER_STRUCT_HEADER	core/communications/RoboCupGameControlData.h	/^#define GAMECONTROLLER_STRUCT_HEADER /;"	d
GAMECONTROLLER_STRUCT_VERSION	core/communications/RoboCupGameControlData.h	/^#define GAMECONTROLLER_STRUCT_VERSION /;"	d
GAMESTATE_	core/memory/GameStateBlock.h	/^#define GAMESTATE_$/;"	d
GAME_PLAYOFF	core/communications/RoboCupGameControlData.h	/^#define GAME_PLAYOFF /;"	d
GAME_ROUNDROBIN	core/communications/RoboCupGameControlData.h	/^#define GAME_ROUNDROBIN /;"	d
GCFINALIZECOST	lib/lua/src/lgc.c	/^#define GCFINALIZECOST	/;"	d	file:
GCObject	lib/lua/src/lobject.h	/^typedef union GCObject GCObject;$/;"	t	typeref:union:GCObject
GCObject	lib/lua/src/lstate.h	/^union GCObject {$/;"	u
GCSTEPSIZE	lib/lua/src/lgc.c	/^#define GCSTEPSIZE	/;"	d	file:
GCSWEEPCOST	lib/lua/src/lgc.c	/^#define GCSWEEPCOST	/;"	d	file:
GCSWEEPMAX	lib/lua/src/lgc.c	/^#define GCSWEEPMAX	/;"	d	file:
GCSfinalize	lib/lua/src/lgc.h	/^#define GCSfinalize	/;"	d
GCSpause	lib/lua/src/lgc.h	/^#define GCSpause	/;"	d
GCSpropagate	lib/lua/src/lgc.h	/^#define GCSpropagate	/;"	d
GCSsweep	lib/lua/src/lgc.h	/^#define GCSsweep	/;"	d
GCSsweepstring	lib/lua/src/lgc.h	/^#define GCSsweepstring	/;"	d
GCTM	lib/lua/src/lgc.c	/^static void GCTM (lua_State *L) {$/;"	f	file:
GCTeam	build/include/tool/StateWindow.h	/^     GCTeam,$/;"	e	enum:StateWindow::__anon3
GCTeam	tools/UTNaoTool/StateWindow.h	/^     GCTeam,$/;"	e	enum:StateWindow::__anon141
GCheader	lib/lua/src/lobject.h	/^typedef struct GCheader {$/;"	s
GCheader	lib/lua/src/lobject.h	/^} GCheader;$/;"	t	typeref:struct:GCheader
GCthreshold	lib/lua/src/lstate.h	/^  lu_mem GCthreshold;$/;"	m	struct:global_State
GETARG_A	lib/lua/src/lopcodes.h	/^#define GETARG_A(/;"	d
GETARG_B	lib/lua/src/lopcodes.h	/^#define GETARG_B(/;"	d
GETARG_Bx	lib/lua/src/lopcodes.h	/^#define GETARG_Bx(/;"	d
GETARG_C	lib/lua/src/lopcodes.h	/^#define GETARG_C(/;"	d
GETARG_sBx	lib/lua/src/lopcodes.h	/^#define GETARG_sBx(/;"	d
GETUPSIMMODE	build/include/tool/MotionGLWidget.h	/^    GETUPSIMMODE,$/;"	e	enum:MotionGLWidget::__anon1
GETUPSIMMODE	tools/UTNaoTool/MotionGLWidget.h	/^    GETUPSIMMODE,$/;"	e	enum:MotionGLWidget::__anon139
GETUP_BACK	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GETUP_FRONT, GETUP_BACK,   \/\/4,5$/;"	e	enum:ActionCommand::Body::ActionType
GETUP_FRONT	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GETUP_FRONT, GETUP_BACK,   \/\/4,5$/;"	e	enum:ActionCommand::Body::ActionType
GETUP_MODULE_H	core/motion/GetupModule.h	/^#define GETUP_MODULE_H$/;"	d
GET_OPCODE	lib/lua/src/lopcodes.h	/^#define GET_OPCODE(/;"	d
GET_SAYTEXT	core/motion/rswalk2014/utils/speech.hpp	/^const inline std::string GET_SAYTEXT() {$/;"	f
GF2_DIM	lib/zlib/crc32.c	/^#define GF2_DIM /;"	d	file:
GLDrawer	build/include/tool/UTOpenGL/GLDrawer.cpp	/^GLDrawer::GLDrawer(QGLWidget* parent) : $/;"	f	class:GLDrawer
GLDrawer	build/include/tool/UTOpenGL/GLDrawer.h	/^class GLDrawer {$/;"	c
GLDrawer	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^GLDrawer::GLDrawer(QGLWidget* parent) : $/;"	f	class:GLDrawer
GLDrawer	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^class GLDrawer {$/;"	c
GLOBAL	lib/yaml-cpp/src/emitterstate.h	/^		GLOBAL$/;"	e	enum:YAML::FMT_SCOPE
GLOBAL_INITIALIZED	build/pythonswig/PythonInterface.cpp	/^bool PythonInterface::GLOBAL_INITIALIZED = false;$/;"	m	class:PythonInterface	file:
GLOBAL_INITIALIZED	build/pythonswig/PythonInterface.h	/^    static bool GLOBAL_INITIALIZED;$/;"	m	class:PythonInterface
GLOBAL_INITIALIZED	core/python/PythonInterface.cpp	/^bool PythonInterface::GLOBAL_INITIALIZED = false;$/;"	m	class:PythonInterface	file:
GLOBAL_INITIALIZED	core/python/PythonInterface.h	/^    static bool GLOBAL_INITIALIZED;$/;"	m	class:PythonInterface
GL_DRAWER_H	build/include/tool/UTOpenGL/GLDrawer.h	/^#define GL_DRAWER_H$/;"	d
GL_DRAWER_H	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^#define GL_DRAWER_H$/;"	d
GOALIE_AFTERSIT_INITIAL	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_AFTERSIT_INITIAL,         \/\/19$/;"	e	enum:ActionCommand::Body::ActionType
GOALIE_CENTRE	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_CENTRE,                   \/\/15$/;"	e	enum:ActionCommand::Body::ActionType
GOALIE_DIVE_LEFT	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_DIVE_LEFT,                \/\/14$/;"	e	enum:ActionCommand::Body::ActionType
GOALIE_DIVE_RIGHT	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_DIVE_RIGHT,               \/\/13$/;"	e	enum:ActionCommand::Body::ActionType
GOALIE_FAST_SIT	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_FAST_SIT,                 \/\/21$/;"	e	enum:ActionCommand::Body::ActionType
GOALIE_INITIAL	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_INITIAL,                  \/\/18$/;"	e	enum:ActionCommand::Body::ActionType
GOALIE_PICK_UP	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_PICK_UP,                  \/\/22$/;"	e	enum:ActionCommand::Body::ActionType
GOALIE_SIT	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_SIT,                      \/\/12$/;"	e	enum:ActionCommand::Body::ActionType
GOALIE_STAND	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_STAND,                    \/\/17$/;"	e	enum:ActionCommand::Body::ActionType
GOALIE_UNCENTRE	core/motion/rswalk2014/types/ActionCommand.hpp	/^         GOALIE_UNCENTRE,                 \/\/16$/;"	e	enum:ActionCommand::Body::ActionType
GOALPOINT_H	core/vision/structures/GoalPoint.h	/^#define GOALPOINT_H$/;"	d
GOAL_BAR_DIAMETER	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define GOAL_BAR_DIAMETER /;"	d
GOAL_BOX_LENGTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define GOAL_BOX_LENGTH /;"	d
GOAL_BOX_WIDTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define GOAL_BOX_WIDTH /;"	d
GOAL_CANDIDATE_H	core/vision/structures/GoalCandidate.h	/^#define GOAL_CANDIDATE_H$/;"	d
GOAL_DEPTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define GOAL_DEPTH /;"	d
GOAL_HEIGHT	core/common/Bowdoin14Field.h	/^const float GOAL_HEIGHT =    900;$/;"	v
GOAL_HEIGHT	core/common/Field.h	/^const float GOAL_HEIGHT = 325;$/;"	v
GOAL_HEIGHT	core/common/RC2013Field.h	/^const float GOAL_HEIGHT = 896;$/;"	v
GOAL_HEIGHT	core/common/UTField.h	/^const float GOAL_HEIGHT = 325;$/;"	v
GOAL_MERGE_POINT_DIST	core/vision/structures/VisionParams.h	/^    int GOAL_MERGE_POINT_DIST;\/\/ = 5;$/;"	m	struct:VisionParams
GOAL_POST_ABS_X	core/motion/rswalk2014/utils/SPLDefs.hpp	/^#define GOAL_POST_ABS_X /;"	d
GOAL_POST_ABS_Y	core/motion/rswalk2014/utils/SPLDefs.hpp	/^#define GOAL_POST_ABS_Y /;"	d
GOAL_POST_CANDIDATE_H	core/vision/structures/GoalPostCandidate.h	/^#define GOAL_POST_CANDIDATE_H$/;"	d
GOAL_POST_DIAMETER	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define GOAL_POST_DIAMETER /;"	d
GOAL_POST_HEIGHT	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define GOAL_POST_HEIGHT /;"	d
GOAL_POST_WIDTH	core/common/Bowdoin14Field.h	/^const float GOAL_POST_WIDTH = 100;$/;"	v
GOAL_POST_WIDTH	core/common/Field.h	/^const float GOAL_POST_WIDTH = 70;$/;"	v
GOAL_POST_WIDTH	core/common/RC2013Field.h	/^const float GOAL_POST_WIDTH = 98;$/;"	v
GOAL_POST_WIDTH	core/common/UTField.h	/^const float GOAL_POST_WIDTH = 70;$/;"	v
GOAL_SUPPORT_DIAMETER	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define GOAL_SUPPORT_DIAMETER /;"	d
GOAL_SUPPORT_DIMENSIONS	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define GOAL_SUPPORT_DIMENSIONS /;"	d
GOAL_VERT_MERGE_ANGLE_LIMIT	core/vision/structures/VisionParams.h	/^    float GOAL_VERT_MERGE_ANGLE_LIMIT;\/\/ = 0.3;$/;"	m	struct:VisionParams
GOAL_VERT_MERGE_POS_LIMIT	core/vision/structures/VisionParams.h	/^    int GOAL_VERT_MERGE_POS_LIMIT;\/\/ = 0.7;$/;"	m	struct:VisionParams
GOAL_VERT_MERGE_WIDTH_LIMIT	core/vision/structures/VisionParams.h	/^    float GOAL_VERT_MERGE_WIDTH_LIMIT;\/\/ = 0.3;$/;"	m	struct:VisionParams
GOAL_VERT_SEPARATION	core/vision/structures/VisionParams.h	/^    int GOAL_VERT_SEPARATION; \/\/ = 2;$/;"	m	struct:VisionParams
GOAL_VERT_VAL_FUNCTION_PARAM_A	core/vision/structures/VisionParams.h	/^    int GOAL_VERT_VAL_FUNCTION_PARAM_A;\/\/ = 1;$/;"	m	struct:VisionParams
GOAL_VERT_VAL_FUNCTION_PARAM_B	core/vision/structures/VisionParams.h	/^    int GOAL_VERT_VAL_FUNCTION_PARAM_B;\/\/ = 0;$/;"	m	struct:VisionParams
GOAL_VERT_VAL_FUNCTION_THRESHOLD	core/vision/structures/VisionParams.h	/^    int GOAL_VERT_VAL_FUNCTION_THRESHOLD;\/\/ = 12;$/;"	m	struct:VisionParams
GOAL_WIDTH	core/common/Bowdoin14Field.h	/^const float GOAL_WIDTH = GOAL_Y + GOAL_POST_WIDTH;$/;"	v
GOAL_WIDTH	core/common/Field.h	/^const float GOAL_WIDTH = GOAL_Y + GOAL_POST_WIDTH;$/;"	v
GOAL_WIDTH	core/common/RC2013Field.h	/^const float GOAL_WIDTH = GOAL_Y + GOAL_POST_WIDTH;$/;"	v
GOAL_WIDTH	core/common/UTField.h	/^const float GOAL_WIDTH = GOAL_Y + GOAL_POST_WIDTH;$/;"	v
GOAL_X	core/common/Bowdoin14Field.h	/^const float GOAL_X = 500;$/;"	v
GOAL_X	core/common/Field.h	/^const float GOAL_X = 500;$/;"	v
GOAL_X	core/common/RC2013Field.h	/^const float GOAL_X = 562;$/;"	v
GOAL_X	core/common/UTField.h	/^const float GOAL_X = 500;$/;"	v
GOAL_Y	core/common/Bowdoin14Field.h	/^const float GOAL_Y = 1500;$/;"	v
GOAL_Y	core/common/Field.h	/^const float GOAL_Y = 500;$/;"	v
GOAL_Y	core/common/RC2013Field.h	/^const float GOAL_Y = 1604;$/;"	v
GOAL_Y	core/common/UTField.h	/^const float GOAL_Y = 500;$/;"	v
GRAPHABLEBLOCK_8VXFI3H7	core/memory/GraphableBlock.h	/^#define GRAPHABLEBLOCK_8VXFI3H7$/;"	d
GRAPHBUILDERADAPTER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^#define GRAPHBUILDERADAPTER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
GRAPHBUILDER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^#define GRAPHBUILDER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
GRASS	core/common/Bowdoin14Field.h	/^const Rectangle GRASS =$/;"	v
GRASS	core/common/Field.h	/^const Rectangle GRASS =$/;"	v
GRASS	core/common/RC2013Field.h	/^const Rectangle GRASS =$/;"	v
GRASS	core/common/UTField.h	/^const Rectangle GRASS =$/;"	v
GRASS_X	core/common/Bowdoin14Field.h	/^const float GRASS_X = FIELD_X + 2 * 700;$/;"	v
GRASS_X	core/common/Field.h	/^const float GRASS_X = 5000;$/;"	v
GRASS_X	core/common/RC2013Field.h	/^const float GRASS_X = FIELD_X + 2 * 702;$/;"	v
GRASS_X	core/common/UTField.h	/^const float GRASS_X = 5000;$/;"	v
GRASS_Y	core/common/Bowdoin14Field.h	/^const float GRASS_Y = 7330;$/;"	v
GRASS_Y	core/common/Field.h	/^const float GRASS_Y = 2500;$/;"	v
GRASS_Y	core/common/RC2013Field.h	/^const float GRASS_Y = FIELD_Y + 2 * 702;$/;"	v
GRASS_Y	core/common/UTField.h	/^const float GRASS_Y = 2500;$/;"	v
GREEN	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    GREEN,$/;"	e	enum:color_classifier::Color
GREEN	vision_testing/src/vision_testing.cpp	/^  GREEN,$/;"	e	enum:FullColor	file:
GREEN_BLUE	core/vision/BeaconDetector.h	/^    GREEN_BLUE,$/;"	e	enum:BeaconDetector::ColorTransition
GREEN_PINK	core/vision/BeaconDetector.h	/^    GREEN_PINK,$/;"	e	enum:BeaconDetector::ColorTransition
GREEN_YELLOW	core/vision/BeaconDetector.h	/^    GREEN_YELLOW$/;"	e	enum:BeaconDetector::ColorTransition
GREEN_YELLOW	vision_testing/src/vision_testing.cpp	/^  GREEN_YELLOW,$/;"	e	enum:FullColor	file:
GROUP_TYPE	lib/yaml-cpp/src/emitterstate.h	/^	enum GROUP_TYPE {$/;"	g	namespace:YAML
GT_MAP	lib/yaml-cpp/src/emitterstate.h	/^		GT_MAP$/;"	e	enum:YAML::GROUP_TYPE
GT_NONE	lib/yaml-cpp/src/emitterstate.h	/^		GT_NONE,$/;"	e	enum:YAML::GROUP_TYPE
GT_OFF	lib/zlib/gzguts.h	/^#  define GT_OFF(/;"	d
GT_SEQ	lib/yaml-cpp/src/emitterstate.h	/^		GT_SEQ,$/;"	e	enum:YAML::GROUP_TYPE
GUNZIP	lib/zlib/inflate.h	/^#  define GUNZIP$/;"	d
GYROCONFIG_H	core/motion/rswalk2014/GyroConfig.h	/^#define GYROCONFIG_H$/;"	d
GZBUFSIZE	lib/zlib/gzguts.h	/^#define GZBUFSIZE /;"	d
GZIP	lib/zlib/deflate.h	/^#  define GZIP$/;"	d
GZIP	lib/zlib/gzguts.h	/^#define GZIP /;"	d
GZ_APPEND	lib/zlib/gzguts.h	/^#define GZ_APPEND /;"	d
GZ_NONE	lib/zlib/gzguts.h	/^#define GZ_NONE /;"	d
GZ_READ	lib/zlib/gzguts.h	/^#define GZ_READ /;"	d
GZ_SUFFIX	lib/zlib/minigzip.c	/^#  define GZ_SUFFIX /;"	d	file:
GZ_WRITE	lib/zlib/gzguts.h	/^#define GZ_WRITE /;"	d
GameStateBlock	core/memory/GameStateBlock.h	/^  GameStateBlock():$/;"	f	struct:GameStateBlock
GameStateBlock	core/memory/GameStateBlock.h	/^struct GameStateBlock : public MemoryBlock {$/;"	s
GaussNewtonOptimizer	core/math/GaussNewtonOptimizer.h	/^  GaussNewtonOptimizer(const std::vector<float>& parameters, const std::vector<M>& measurements, const C& object,$/;"	f	class:GaussNewtonOptimizer
GaussNewtonOptimizer	core/math/GaussNewtonOptimizer.h	/^class GaussNewtonOptimizer$/;"	c
Generator	core/motion/rswalk2014/Generator.hpp	/^class Generator {$/;"	c
GenoPheno	tools/behaviorSim/cma.py	/^class GenoPheno(object):$/;"	c
GenoPhenoBase	tools/behaviorSim/cma.py	/^class GenoPhenoBase(object):$/;"	c
Get	lib/yaml-cpp/include/yaml-cpp/contrib/anchordict.h	/^    T Get(anchor_t anchor) const$/;"	f	class:YAML::AnchorDict
GetBoolCaseFormat	lib/yaml-cpp/src/emitterstate.h	/^		EMITTER_MANIP GetBoolCaseFormat() const { return m_boolCaseFmt.get(); }$/;"	f	class:YAML::EmitterState
GetBoolFormat	lib/yaml-cpp/src/emitterstate.h	/^		EMITTER_MANIP GetBoolFormat() const { return m_boolFmt.get(); }$/;"	f	class:YAML::EmitterState
GetBoolLengthFormat	lib/yaml-cpp/src/emitterstate.h	/^		EMITTER_MANIP GetBoolLengthFormat() const { return m_boolLengthFmt.get(); }$/;"	f	class:YAML::EmitterState
GetCurCollectionType	lib/yaml-cpp/src/collectionstack.h	/^		CollectionType::value GetCurCollectionType() const {$/;"	f	class:YAML::CollectionStack
GetCurGroupFlowType	lib/yaml-cpp/src/emitterstate.cpp	/^	FLOW_TYPE EmitterState::GetCurGroupFlowType() const$/;"	f	class:YAML::EmitterState
GetCurGroupType	lib/yaml-cpp/src/emitterstate.cpp	/^	GROUP_TYPE EmitterState::GetCurGroupType() const$/;"	f	class:YAML::EmitterState
GetCurIndent	lib/yaml-cpp/src/emitterstate.h	/^		int GetCurIndent() const { return m_curIndent; }$/;"	f	class:YAML::EmitterState
GetCurState	lib/yaml-cpp/src/emitterstate.h	/^		EMITTER_STATE GetCurState() const { return m_stateStack.top(); }$/;"	f	class:YAML::EmitterState
GetCurrentParent	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void *GraphBuilderAdapter::GetCurrentParent() const$/;"	f	class:YAML::GraphBuilderAdapter
GetDoublePrecision	lib/yaml-cpp/src/emitter.cpp	/^    unsigned Emitter::GetDoublePrecision() const$/;"	f	class:YAML::Emitter
GetDoublePrecision	lib/yaml-cpp/src/emitterstate.h	/^        unsigned GetDoublePrecision() const { return m_doublePrecision.get(); }$/;"	f	class:YAML::EmitterState
GetFloatPrecision	lib/yaml-cpp/src/emitter.cpp	/^    unsigned Emitter::GetFloatPrecision() const$/;"	f	class:YAML::Emitter
GetFloatPrecision	lib/yaml-cpp/src/emitterstate.h	/^        unsigned GetFloatPrecision() const { return m_floatPrecision.get(); }$/;"	f	class:YAML::EmitterState
GetFlowLevel	lib/yaml-cpp/src/scanner.h	/^		int GetFlowLevel() const { return m_flows.size(); }$/;"	f	class:YAML::Scanner
GetFlowType	lib/yaml-cpp/src/emitterstate.cpp	/^	EMITTER_MANIP EmitterState::GetFlowType(GROUP_TYPE groupType) const$/;"	f	class:YAML::EmitterState
GetIndent	lib/yaml-cpp/src/emitterstate.h	/^		int GetIndent() const { return m_indent.get(); }$/;"	f	class:YAML::EmitterState
GetIntFormat	lib/yaml-cpp/src/emitterstate.h	/^		EMITTER_MANIP GetIntFormat() const { return m_intFmt.get(); }$/;"	f	class:YAML::EmitterState
GetLastError	lib/yaml-cpp/src/emitter.cpp	/^	const std::string Emitter::GetLastError() const$/;"	f	class:YAML::Emitter
GetLastError	lib/yaml-cpp/src/emitterstate.h	/^		const std::string GetLastError() const { return m_lastError; }$/;"	f	class:YAML::EmitterState
GetLocSR	core/opponents/UKF4.cpp	/^NMatrix UKF4::GetLocSR(){$/;"	f	class:UKF4
GetMapKeyFormat	lib/yaml-cpp/src/emitterstate.h	/^		EMITTER_MANIP GetMapKeyFormat() const { return m_mapKeyFmt.get(); }$/;"	f	class:YAML::EmitterState
GetMark	lib/yaml-cpp/include/yaml-cpp/node.h	/^		const Mark GetMark() const { return m_mark; }$/;"	f	class:YAML::Node
GetMessage	interfaces/sim_spark/main.cpp	/^bool GetMessage(string& msg) {$/;"	f
GetNextByte	lib/yaml-cpp/src/stream.cpp	/^	unsigned char Stream::GetNextByte() const$/;"	f	class:YAML::Stream
GetNextCodePointAndAdvance	lib/yaml-cpp/src/emitterutils.cpp	/^			bool GetNextCodePointAndAdvance(int& codePoint, std::string::const_iterator& first, std::string::const_iterator last) {$/;"	f	namespace:YAML::Utils::__anon127
GetNextDocument	lib/yaml-cpp/src/parser.cpp	/^	bool Parser::GetNextDocument(Node& document)$/;"	f	class:YAML::Parser
GetOutputCharset	lib/yaml-cpp/src/emitterstate.h	/^		EMITTER_MANIP GetOutputCharset() const { return m_charset.get(); }$/;"	f	class:YAML::EmitterState
GetPostCommentIndent	lib/yaml-cpp/src/emitterstate.h	/^		int GetPostCommentIndent() const { return m_postCommentIndent.get(); }$/;"	f	class:YAML::EmitterState
GetPreCommentIndent	lib/yaml-cpp/src/emitterstate.h	/^		int GetPreCommentIndent() const { return m_preCommentIndent.get(); }$/;"	f	class:YAML::EmitterState
GetScalar	lib/yaml-cpp/src/node.cpp	/^	bool Node::GetScalar(std::string& s) const$/;"	f	class:YAML::Node
GetStartTokenFor	lib/yaml-cpp/src/scanner.cpp	/^	Token::TYPE Scanner::GetStartTokenFor(IndentMarker::INDENT_TYPE type) const$/;"	f	class:YAML::Scanner
GetStringFormat	lib/yaml-cpp/src/emitterstate.h	/^		EMITTER_MANIP GetStringFormat() const { return m_strFmt.get(); }$/;"	f	class:YAML::EmitterState
GetTopIndent	lib/yaml-cpp/src/scanner.cpp	/^	int Scanner::GetTopIndent() const$/;"	f	class:YAML::Scanner
GetValue	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline const Node& Node::GetValue(const T& key) const {$/;"	f	class:YAML::Node
GetValueRegex	lib/yaml-cpp/src/scanner.cpp	/^	const RegEx& Scanner::GetValueRegex() const$/;"	f	class:YAML::Scanner
Getup	core/memory/OdometryBlock.h	/^struct Getup {$/;"	s
GetupModule	core/motion/GetupModule.cpp	/^GetupModule::GetupModule():$/;"	f	class:GetupModule
GetupModule	core/motion/GetupModule.h	/^class GetupModule: public SpecialMotionModule {$/;"	c
GetupType	core/memory/OdometryBlock.h	/^  enum GetupType {$/;"	g	struct:Getup
GlobalFinalize	build/pythonswig/PythonInterface.cpp	/^void PythonInterface::GlobalFinalize() {$/;"	f	class:PythonInterface
GlobalFinalize	core/python/PythonInterface.cpp	/^void PythonInterface::GlobalFinalize() {$/;"	f	class:PythonInterface
GlobalInit	build/pythonswig/PythonInterface.cpp	/^void PythonInterface::GlobalInit() {$/;"	f	class:PythonInterface
GlobalInit	core/python/PythonInterface.cpp	/^void PythonInterface::GlobalInit() {$/;"	f	class:PythonInterface
GlobalTagPrefix	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST GlobalTagPrefix()$/;"	f	namespace:Test::Spec
GlobalTags	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST GlobalTags()$/;"	f	namespace:Test::Spec
GoAround	core/python/behaviors/Movement.py	/^  class GoAround(Node):$/;"	c	class:Playing
GoalCandidate	core/vision/structures/GoalCandidate.h	/^struct GoalCandidate {$/;"	s
GoalPoint	core/vision/structures/GoalPoint.h	/^struct GoalPoint {$/;"	s
GoalPostCandidate	core/vision/structures/GoalPostCandidate.h	/^struct GoalPostCandidate {$/;"	s
GoalieBlock	core/python/behaviors/keeper_2.py	/^class GoalieBlock(Node):$/;"	c
GoalieLeftSplayFinalV2	core/python/cfgpose.py	/^GoalieLeftSplayFinalV2 = dict()$/;"	v
GoalieLeftSplayFinalV3	core/python/cfgpose.py	/^GoalieLeftSplayFinalV3 = dict()$/;"	v
GoalieLeftSplayFinalV4	core/python/cfgpose.py	/^GoalieLeftSplayFinalV4 = dict()$/;"	v
GoalieLeftSplayFinalV5	core/python/cfgpose.py	/^GoalieLeftSplayFinalV5 = dict()$/;"	v
GoalieLeftSplayGetup1	core/python/cfgpose.py	/^GoalieLeftSplayGetup1 = dict()$/;"	v
GoalieLeftSplayGetup2	core/python/cfgpose.py	/^GoalieLeftSplayGetup2 = dict()$/;"	v
GoalieLeftSplayGetup3	core/python/cfgpose.py	/^GoalieLeftSplayGetup3 = dict()$/;"	v
GoalieLeftSplayGetup3V2	core/python/cfgpose.py	/^GoalieLeftSplayGetup3V2 = dict()$/;"	v
GoalieLeftSplayGetup3V3	core/python/cfgpose.py	/^GoalieLeftSplayGetup3V3 = dict()$/;"	v
GoalieLeftSplayGetup3V4	core/python/cfgpose.py	/^GoalieLeftSplayGetup3V4 = dict()$/;"	v
GoalieLeftSplayGetup3V5	core/python/cfgpose.py	/^GoalieLeftSplayGetup3V5 = dict()$/;"	v
GoalieLeftSplayGetup3V6	core/python/cfgpose.py	/^GoalieLeftSplayGetup3V6 = dict()$/;"	v
GoalieLeftSplayGetup4	core/python/cfgpose.py	/^GoalieLeftSplayGetup4 = dict()$/;"	v
GoalieLeftSplayGetup4V2	core/python/cfgpose.py	/^GoalieLeftSplayGetup4V2 = dict()$/;"	v
GoalieLeftSplayGetup4V3	core/python/cfgpose.py	/^GoalieLeftSplayGetup4V3 = dict()$/;"	v
GoalieLeftSplayGetup5	core/python/cfgpose.py	/^GoalieLeftSplayGetup5 = dict()$/;"	v
GoalieLeftSplayInter1	core/python/cfgpose.py	/^GoalieLeftSplayInter1 = dict()$/;"	v
GoalieLeftSplayInter2	core/python/cfgpose.py	/^GoalieLeftSplayInter2 = dict()$/;"	v
GoalieSimulation	build/include/tool/simulation/GoalieSimulation.cpp	/^GoalieSimulation::GoalieSimulation() : IBSim(true, KEEPER) {$/;"	f	class:GoalieSimulation
GoalieSimulation	build/include/tool/simulation/GoalieSimulation.h	/^class GoalieSimulation : public IsolatedBehaviorSimulation {$/;"	c
GoalieSimulation	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^GoalieSimulation::GoalieSimulation() : IBSim(true, KEEPER) {$/;"	f	class:GoalieSimulation
GoalieSimulation	tools/UTNaoTool/simulation/GoalieSimulation.h	/^class GoalieSimulation : public IsolatedBehaviorSimulation {$/;"	c
GotoNextPreAtomicState	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::GotoNextPreAtomicState()$/;"	f	class:YAML::Emitter
GraphBuilder	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    GraphBuilder(Impl& impl) : m_impl(impl)$/;"	f	class:YAML::GraphBuilder
GraphBuilder	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^  class GraphBuilder : public GraphBuilderInterface$/;"	c	namespace:YAML
GraphBuilderAdapter	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    GraphBuilderAdapter(GraphBuilderInterface& builder)$/;"	f	class:YAML::GraphBuilderAdapter
GraphBuilderAdapter	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^  class GraphBuilderAdapter : public EventHandler$/;"	c	namespace:YAML
GraphBuilderInterface	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^  class GraphBuilderInterface$/;"	c	namespace:YAML
GraphableBlock	core/memory/GraphableBlock.h	/^  GraphableBlock():$/;"	f	struct:GraphableBlock
GraphableBlock	core/memory/GraphableBlock.h	/^struct GraphableBlock : public MemoryBlock {$/;"	s
Gray	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Gray = TORGB(125,125,125);$/;"	m	class:Colors	file:
Gray	build/include/tool/UTOpenGL/Colors.h	/^    static RGB White, Gray, Black, Pink;$/;"	m	class:Colors
Gray	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Gray = TORGB(125,125,125);$/;"	m	class:Colors	file:
Gray	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB White, Gray, Black, Pink;$/;"	m	class:Colors
Green	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Green = TORGB(0,255,0);$/;"	m	class:Colors	file:
Green	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Green	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Green = TORGB(0,255,0);$/;"	m	class:Colors	file:
Green	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Group	lib/yaml-cpp/src/emitterstate.h	/^			Group(GROUP_TYPE type_): type(type_), usingLongKey(false), indent(0) {}$/;"	f	struct:YAML::EmitterState::Group
Group	lib/yaml-cpp/src/emitterstate.h	/^		struct Group {$/;"	s	class:YAML::EmitterState
GyroConfig	core/motion/rswalk2014/GyroConfig.cpp	/^GyroConfig::GyroConfig() {$/;"	f	class:GyroConfig
GyroConfig	core/motion/rswalk2014/GyroConfig.h	/^class GyroConfig : public YamlConfig {$/;"	c
H	core/localization/LocalizationModule.cpp	/^KF::MeasurementJacobianMatrix LocalizationModule::H(KF::StateVector x)$/;"	f	class:LocalizationModule
H	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  MeasurementJacobianFunction H;$/;"	m	class:ExtendedKalmanFilter
H	kalman_filters/src/ekf_test.cpp	/^KF::MeasurementJacobianMatrix H(KF::StateVector x)$/;"	f
HALF_FIELD_X	core/common/Bowdoin14Field.h	/^const float HALF_FIELD_X = FIELD_X\/2.0;$/;"	v
HALF_FIELD_X	core/common/Field.h	/^const float HALF_FIELD_X = FIELD_X\/2.0;$/;"	v
HALF_FIELD_X	core/common/RC2013Field.h	/^const float HALF_FIELD_X = FIELD_X\/2.0;$/;"	v
HALF_FIELD_X	core/common/UTField.h	/^const float HALF_FIELD_X = FIELD_X\/2.0;$/;"	v
HALF_FIELD_Y	core/common/Bowdoin14Field.h	/^const float HALF_FIELD_Y = FIELD_Y\/2.0;$/;"	v
HALF_FIELD_Y	core/common/Field.h	/^const float HALF_FIELD_Y = FIELD_Y\/2.0;$/;"	v
HALF_FIELD_Y	core/common/RC2013Field.h	/^const float HALF_FIELD_Y = FIELD_Y\/2.0;$/;"	v
HALF_FIELD_Y	core/common/UTField.h	/^const float HALF_FIELD_Y = FIELD_Y\/2.0;$/;"	v
HALF_GOAL_Y	core/common/Bowdoin14Field.h	/^const float HALF_GOAL_Y = GOAL_Y \/ 2.0;$/;"	v
HALF_GOAL_Y	core/common/Field.h	/^const float HALF_GOAL_Y = GOAL_Y \/ 2.0;$/;"	v
HALF_GOAL_Y	core/common/RC2013Field.h	/^const float HALF_GOAL_Y = GOAL_Y \/ 2.0;$/;"	v
HALF_GOAL_Y	core/common/UTField.h	/^const float HALF_GOAL_Y = GOAL_Y \/ 2.0;$/;"	v
HALF_GRASS_X	core/common/Bowdoin14Field.h	/^const float HALF_GRASS_X = GRASS_X\/2.0;$/;"	v
HALF_GRASS_X	core/common/Field.h	/^const float HALF_GRASS_X = GRASS_X\/2.0;$/;"	v
HALF_GRASS_X	core/common/RC2013Field.h	/^const float HALF_GRASS_X = GRASS_X\/2.0;$/;"	v
HALF_GRASS_X	core/common/UTField.h	/^const float HALF_GRASS_X = GRASS_X\/2.0;$/;"	v
HALF_GRASS_Y	core/common/Bowdoin14Field.h	/^const float HALF_GRASS_Y = GRASS_Y\/2.0;$/;"	v
HALF_GRASS_Y	core/common/Field.h	/^const float HALF_GRASS_Y = GRASS_Y\/2.0;$/;"	v
HALF_GRASS_Y	core/common/RC2013Field.h	/^const float HALF_GRASS_Y = GRASS_Y\/2.0;$/;"	v
HALF_GRASS_Y	core/common/UTField.h	/^const float HALF_GRASS_Y = GRASS_Y\/2.0;$/;"	v
HAS_BOTTOM	core/vision/BeaconDetector.h	/^    HAS_BOTTOM,$/;"	e	enum:BeaconDetector::BeaconPossibilityState
HAS_BOTTOM	vision_testing/src/vision_testing.cpp	/^  HAS_BOTTOM,$/;"	e	enum:BeaconPossibilityState	file:
HAS_NOTHING	core/vision/BeaconDetector.h	/^    HAS_NOTHING,$/;"	e	enum:BeaconDetector::BeaconPossibilityState
HAS_NOTHING	vision_testing/src/vision_testing.cpp	/^  HAS_NOTHING,$/;"	e	enum:BeaconPossibilityState	file:
HAVE_ACOSH	build/pythonswig/pyconfig.h	/^#define HAVE_ACOSH /;"	d
HAVE_ADDRINFO	build/pythonswig/pyconfig.h	/^#define HAVE_ADDRINFO /;"	d
HAVE_ALARM	build/pythonswig/pyconfig.h	/^#define HAVE_ALARM /;"	d
HAVE_ASINH	build/pythonswig/pyconfig.h	/^#define HAVE_ASINH /;"	d
HAVE_ASM_TYPES_H	build/pythonswig/pyconfig.h	/^#define HAVE_ASM_TYPES_H /;"	d
HAVE_ATANH	build/pythonswig/pyconfig.h	/^#define HAVE_ATANH /;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	build/pythonswig/pyconfig.h	/^#define HAVE_BIND_TEXTDOMAIN_CODESET /;"	d
HAVE_C99_BOOL	build/pythonswig/pyconfig.h	/^#define HAVE_C99_BOOL /;"	d
HAVE_CHOWN	build/pythonswig/pyconfig.h	/^#define HAVE_CHOWN /;"	d
HAVE_CHROOT	build/pythonswig/pyconfig.h	/^#define HAVE_CHROOT /;"	d
HAVE_CLOCK	build/pythonswig/pyconfig.h	/^#define HAVE_CLOCK /;"	d
HAVE_CONFSTR	build/pythonswig/pyconfig.h	/^#define HAVE_CONFSTR /;"	d
HAVE_COPYSIGN	build/pythonswig/pyconfig.h	/^#define HAVE_COPYSIGN /;"	d
HAVE_CTERMID	build/pythonswig/pyconfig.h	/^#define HAVE_CTERMID /;"	d
HAVE_CURSES_H	build/pythonswig/pyconfig.h	/^#define HAVE_CURSES_H /;"	d
HAVE_CURSES_IS_TERM_RESIZED	build/pythonswig/pyconfig.h	/^#define HAVE_CURSES_IS_TERM_RESIZED /;"	d
HAVE_CURSES_RESIZETERM	build/pythonswig/pyconfig.h	/^#define HAVE_CURSES_RESIZETERM /;"	d
HAVE_CURSES_RESIZE_TERM	build/pythonswig/pyconfig.h	/^#define HAVE_CURSES_RESIZE_TERM /;"	d
HAVE_DECL_ISFINITE	build/pythonswig/pyconfig.h	/^#define HAVE_DECL_ISFINITE /;"	d
HAVE_DECL_ISINF	build/pythonswig/pyconfig.h	/^#define HAVE_DECL_ISINF /;"	d
HAVE_DECL_ISNAN	build/pythonswig/pyconfig.h	/^#define HAVE_DECL_ISNAN /;"	d
HAVE_DEVICE_MACROS	build/pythonswig/pyconfig.h	/^#define HAVE_DEVICE_MACROS /;"	d
HAVE_DEV_PTMX	build/pythonswig/pyconfig.h	/^#define HAVE_DEV_PTMX /;"	d
HAVE_DIRENT_H	build/pythonswig/pyconfig.h	/^#define HAVE_DIRENT_H /;"	d
HAVE_DLFCN_H	build/pythonswig/pyconfig.h	/^#define HAVE_DLFCN_H /;"	d
HAVE_DLOPEN	build/pythonswig/pyconfig.h	/^#define HAVE_DLOPEN /;"	d
HAVE_DUP2	build/pythonswig/pyconfig.h	/^#define HAVE_DUP2 /;"	d
HAVE_DYNAMIC_LOADING	build/pythonswig/pyconfig.h	/^#define HAVE_DYNAMIC_LOADING /;"	d
HAVE_EPOLL	build/pythonswig/pyconfig.h	/^#define HAVE_EPOLL /;"	d
HAVE_ERF	build/pythonswig/pyconfig.h	/^#define HAVE_ERF /;"	d
HAVE_ERFC	build/pythonswig/pyconfig.h	/^#define HAVE_ERFC /;"	d
HAVE_ERRNO_H	build/pythonswig/pyconfig.h	/^#define HAVE_ERRNO_H /;"	d
HAVE_EXECV	build/pythonswig/pyconfig.h	/^#define HAVE_EXECV /;"	d
HAVE_EXPM1	build/pythonswig/pyconfig.h	/^#define HAVE_EXPM1 /;"	d
HAVE_FCHDIR	build/pythonswig/pyconfig.h	/^#define HAVE_FCHDIR /;"	d
HAVE_FCHMOD	build/pythonswig/pyconfig.h	/^#define HAVE_FCHMOD /;"	d
HAVE_FCHOWN	build/pythonswig/pyconfig.h	/^#define HAVE_FCHOWN /;"	d
HAVE_FCNTL_H	build/pythonswig/pyconfig.h	/^#define HAVE_FCNTL_H /;"	d
HAVE_FDATASYNC	build/pythonswig/pyconfig.h	/^#define HAVE_FDATASYNC /;"	d
HAVE_FINITE	build/pythonswig/pyconfig.h	/^#define HAVE_FINITE /;"	d
HAVE_FLOCK	build/pythonswig/pyconfig.h	/^#define HAVE_FLOCK /;"	d
HAVE_FORK	build/pythonswig/pyconfig.h	/^#define HAVE_FORK /;"	d
HAVE_FORKPTY	build/pythonswig/pyconfig.h	/^#define HAVE_FORKPTY /;"	d
HAVE_FPATHCONF	build/pythonswig/pyconfig.h	/^#define HAVE_FPATHCONF /;"	d
HAVE_FSEEKO	build/pythonswig/pyconfig.h	/^#define HAVE_FSEEKO /;"	d
HAVE_FSTATVFS	build/pythonswig/pyconfig.h	/^#define HAVE_FSTATVFS /;"	d
HAVE_FSYNC	build/pythonswig/pyconfig.h	/^#define HAVE_FSYNC /;"	d
HAVE_FTELLO	build/pythonswig/pyconfig.h	/^#define HAVE_FTELLO /;"	d
HAVE_FTIME	build/pythonswig/pyconfig.h	/^#define HAVE_FTIME /;"	d
HAVE_FTRUNCATE	build/pythonswig/pyconfig.h	/^#define HAVE_FTRUNCATE /;"	d
HAVE_GAI_STRERROR	build/pythonswig/pyconfig.h	/^#define HAVE_GAI_STRERROR /;"	d
HAVE_GAMMA	build/pythonswig/pyconfig.h	/^#define HAVE_GAMMA /;"	d
HAVE_GCC_ASM_FOR_X87	build/pythonswig/pyconfig.h	/^#define HAVE_GCC_ASM_FOR_X87 /;"	d
HAVE_GETADDRINFO	build/pythonswig/pyconfig.h	/^#define HAVE_GETADDRINFO /;"	d
HAVE_GETCWD	build/pythonswig/pyconfig.h	/^#define HAVE_GETCWD /;"	d
HAVE_GETC_UNLOCKED	build/pythonswig/pyconfig.h	/^#define HAVE_GETC_UNLOCKED /;"	d
HAVE_GETGROUPS	build/pythonswig/pyconfig.h	/^#define HAVE_GETGROUPS /;"	d
HAVE_GETHOSTBYNAME_R	build/pythonswig/pyconfig.h	/^#define HAVE_GETHOSTBYNAME_R /;"	d
HAVE_GETHOSTBYNAME_R_6_ARG	build/pythonswig/pyconfig.h	/^#define HAVE_GETHOSTBYNAME_R_6_ARG /;"	d
HAVE_GETITIMER	build/pythonswig/pyconfig.h	/^#define HAVE_GETITIMER /;"	d
HAVE_GETLOADAVG	build/pythonswig/pyconfig.h	/^#define HAVE_GETLOADAVG /;"	d
HAVE_GETLOGIN	build/pythonswig/pyconfig.h	/^#define HAVE_GETLOGIN /;"	d
HAVE_GETNAMEINFO	build/pythonswig/pyconfig.h	/^#define HAVE_GETNAMEINFO /;"	d
HAVE_GETPAGESIZE	build/pythonswig/pyconfig.h	/^#define HAVE_GETPAGESIZE /;"	d
HAVE_GETPEERNAME	build/pythonswig/pyconfig.h	/^#define HAVE_GETPEERNAME /;"	d
HAVE_GETPGID	build/pythonswig/pyconfig.h	/^#define HAVE_GETPGID /;"	d
HAVE_GETPGRP	build/pythonswig/pyconfig.h	/^#define HAVE_GETPGRP /;"	d
HAVE_GETPID	build/pythonswig/pyconfig.h	/^#define HAVE_GETPID /;"	d
HAVE_GETPRIORITY	build/pythonswig/pyconfig.h	/^#define HAVE_GETPRIORITY /;"	d
HAVE_GETPWENT	build/pythonswig/pyconfig.h	/^#define HAVE_GETPWENT /;"	d
HAVE_GETRESGID	build/pythonswig/pyconfig.h	/^#define HAVE_GETRESGID /;"	d
HAVE_GETRESUID	build/pythonswig/pyconfig.h	/^#define HAVE_GETRESUID /;"	d
HAVE_GETSID	build/pythonswig/pyconfig.h	/^#define HAVE_GETSID /;"	d
HAVE_GETSPENT	build/pythonswig/pyconfig.h	/^#define HAVE_GETSPENT /;"	d
HAVE_GETSPNAM	build/pythonswig/pyconfig.h	/^#define HAVE_GETSPNAM /;"	d
HAVE_GETTIMEOFDAY	build/pythonswig/pyconfig.h	/^#define HAVE_GETTIMEOFDAY /;"	d
HAVE_GETWD	build/pythonswig/pyconfig.h	/^#define HAVE_GETWD /;"	d
HAVE_GRP_H	build/pythonswig/pyconfig.h	/^#define HAVE_GRP_H /;"	d
HAVE_HSTRERROR	build/pythonswig/pyconfig.h	/^#define HAVE_HSTRERROR /;"	d
HAVE_HYPOT	build/pythonswig/pyconfig.h	/^#define HAVE_HYPOT /;"	d
HAVE_INET_ATON	build/pythonswig/pyconfig.h	/^#define HAVE_INET_ATON /;"	d
HAVE_INET_PTON	build/pythonswig/pyconfig.h	/^#define HAVE_INET_PTON /;"	d
HAVE_INITGROUPS	build/pythonswig/pyconfig.h	/^#define HAVE_INITGROUPS /;"	d
HAVE_INTTYPES_H	build/pythonswig/pyconfig.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_KILL	build/pythonswig/pyconfig.h	/^#define HAVE_KILL /;"	d
HAVE_KILLPG	build/pythonswig/pyconfig.h	/^#define HAVE_KILLPG /;"	d
HAVE_LANGINFO_H	build/pythonswig/pyconfig.h	/^#define HAVE_LANGINFO_H /;"	d
HAVE_LARGEFILE_SUPPORT	build/pythonswig/pyconfig.h	/^#define HAVE_LARGEFILE_SUPPORT /;"	d
HAVE_LCHOWN	build/pythonswig/pyconfig.h	/^#define HAVE_LCHOWN /;"	d
HAVE_LGAMMA	build/pythonswig/pyconfig.h	/^#define HAVE_LGAMMA /;"	d
HAVE_LIBDL	build/pythonswig/pyconfig.h	/^#define HAVE_LIBDL /;"	d
HAVE_LIBINTL_H	build/pythonswig/pyconfig.h	/^#define HAVE_LIBINTL_H /;"	d
HAVE_LIBREADLINE	build/pythonswig/pyconfig.h	/^#define HAVE_LIBREADLINE /;"	d
HAVE_LINK	build/pythonswig/pyconfig.h	/^#define HAVE_LINK /;"	d
HAVE_LINUX_NETLINK_H	build/pythonswig/pyconfig.h	/^#define HAVE_LINUX_NETLINK_H /;"	d
HAVE_LINUX_TIPC_H	build/pythonswig/pyconfig.h	/^#define HAVE_LINUX_TIPC_H /;"	d
HAVE_LOG1P	build/pythonswig/pyconfig.h	/^#define HAVE_LOG1P /;"	d
HAVE_LONG_DOUBLE	build/pythonswig/pyconfig.h	/^#define HAVE_LONG_DOUBLE /;"	d
HAVE_LONG_LONG	build/pythonswig/pyconfig.h	/^#define HAVE_LONG_LONG /;"	d
HAVE_LSTAT	build/pythonswig/pyconfig.h	/^#define HAVE_LSTAT /;"	d
HAVE_MAKEDEV	build/pythonswig/pyconfig.h	/^#define HAVE_MAKEDEV /;"	d
HAVE_MEMCPY	lib/zlib/zutil.h	/^#  define HAVE_MEMCPY$/;"	d
HAVE_MEMMOVE	build/pythonswig/pyconfig.h	/^#define HAVE_MEMMOVE /;"	d
HAVE_MEMORY_H	build/pythonswig/pyconfig.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_MKFIFO	build/pythonswig/pyconfig.h	/^#define HAVE_MKFIFO /;"	d
HAVE_MKNOD	build/pythonswig/pyconfig.h	/^#define HAVE_MKNOD /;"	d
HAVE_MKTIME	build/pythonswig/pyconfig.h	/^#define HAVE_MKTIME /;"	d
HAVE_MREMAP	build/pythonswig/pyconfig.h	/^#define HAVE_MREMAP /;"	d
HAVE_NCURSES_H	build/pythonswig/pyconfig.h	/^#define HAVE_NCURSES_H /;"	d
HAVE_NETPACKET_PACKET_H	build/pythonswig/pyconfig.h	/^#define HAVE_NETPACKET_PACKET_H /;"	d
HAVE_NICE	build/pythonswig/pyconfig.h	/^#define HAVE_NICE /;"	d
HAVE_OPENPTY	build/pythonswig/pyconfig.h	/^#define HAVE_OPENPTY /;"	d
HAVE_PATHCONF	build/pythonswig/pyconfig.h	/^#define HAVE_PATHCONF /;"	d
HAVE_PAUSE	build/pythonswig/pyconfig.h	/^#define HAVE_PAUSE /;"	d
HAVE_POLL	build/pythonswig/pyconfig.h	/^#define HAVE_POLL /;"	d
HAVE_POLL_H	build/pythonswig/pyconfig.h	/^#define HAVE_POLL_H /;"	d
HAVE_PROTOTYPES	build/pythonswig/pyconfig.h	/^#define HAVE_PROTOTYPES /;"	d
HAVE_PTHREAD_H	build/pythonswig/pyconfig.h	/^#define HAVE_PTHREAD_H /;"	d
HAVE_PTHREAD_SIGMASK	build/pythonswig/pyconfig.h	/^#define HAVE_PTHREAD_SIGMASK /;"	d
HAVE_PTY_H	build/pythonswig/pyconfig.h	/^#define HAVE_PTY_H /;"	d
HAVE_PUTENV	build/pythonswig/pyconfig.h	/^#define HAVE_PUTENV /;"	d
HAVE_READLINK	build/pythonswig/pyconfig.h	/^#define HAVE_READLINK /;"	d
HAVE_REALPATH	build/pythonswig/pyconfig.h	/^#define HAVE_REALPATH /;"	d
HAVE_RL_CALLBACK	build/pythonswig/pyconfig.h	/^#define HAVE_RL_CALLBACK /;"	d
HAVE_RL_CATCH_SIGNAL	build/pythonswig/pyconfig.h	/^#define HAVE_RL_CATCH_SIGNAL /;"	d
HAVE_RL_COMPLETION_APPEND_CHARACTER	build/pythonswig/pyconfig.h	/^#define HAVE_RL_COMPLETION_APPEND_CHARACTER /;"	d
HAVE_RL_COMPLETION_DISPLAY_MATCHES_HOOK	build/pythonswig/pyconfig.h	/^#define HAVE_RL_COMPLETION_DISPLAY_MATCHES_HOOK /;"	d
HAVE_RL_COMPLETION_MATCHES	build/pythonswig/pyconfig.h	/^#define HAVE_RL_COMPLETION_MATCHES /;"	d
HAVE_RL_COMPLETION_SUPPRESS_APPEND	build/pythonswig/pyconfig.h	/^#define HAVE_RL_COMPLETION_SUPPRESS_APPEND /;"	d
HAVE_RL_PRE_INPUT_HOOK	build/pythonswig/pyconfig.h	/^#define HAVE_RL_PRE_INPUT_HOOK /;"	d
HAVE_ROUND	build/pythonswig/pyconfig.h	/^#define HAVE_ROUND /;"	d
HAVE_SELECT	build/pythonswig/pyconfig.h	/^#define HAVE_SELECT /;"	d
HAVE_SEM_GETVALUE	build/pythonswig/pyconfig.h	/^#define HAVE_SEM_GETVALUE /;"	d
HAVE_SEM_OPEN	build/pythonswig/pyconfig.h	/^#define HAVE_SEM_OPEN /;"	d
HAVE_SEM_TIMEDWAIT	build/pythonswig/pyconfig.h	/^#define HAVE_SEM_TIMEDWAIT /;"	d
HAVE_SEM_UNLINK	build/pythonswig/pyconfig.h	/^#define HAVE_SEM_UNLINK /;"	d
HAVE_SETEGID	build/pythonswig/pyconfig.h	/^#define HAVE_SETEGID /;"	d
HAVE_SETEUID	build/pythonswig/pyconfig.h	/^#define HAVE_SETEUID /;"	d
HAVE_SETGID	build/pythonswig/pyconfig.h	/^#define HAVE_SETGID /;"	d
HAVE_SETGROUPS	build/pythonswig/pyconfig.h	/^#define HAVE_SETGROUPS /;"	d
HAVE_SETITIMER	build/pythonswig/pyconfig.h	/^#define HAVE_SETITIMER /;"	d
HAVE_SETLOCALE	build/pythonswig/pyconfig.h	/^#define HAVE_SETLOCALE /;"	d
HAVE_SETPGID	build/pythonswig/pyconfig.h	/^#define HAVE_SETPGID /;"	d
HAVE_SETPGRP	build/pythonswig/pyconfig.h	/^#define HAVE_SETPGRP /;"	d
HAVE_SETREGID	build/pythonswig/pyconfig.h	/^#define HAVE_SETREGID /;"	d
HAVE_SETRESGID	build/pythonswig/pyconfig.h	/^#define HAVE_SETRESGID /;"	d
HAVE_SETRESUID	build/pythonswig/pyconfig.h	/^#define HAVE_SETRESUID /;"	d
HAVE_SETREUID	build/pythonswig/pyconfig.h	/^#define HAVE_SETREUID /;"	d
HAVE_SETSID	build/pythonswig/pyconfig.h	/^#define HAVE_SETSID /;"	d
HAVE_SETUID	build/pythonswig/pyconfig.h	/^#define HAVE_SETUID /;"	d
HAVE_SETVBUF	build/pythonswig/pyconfig.h	/^#define HAVE_SETVBUF /;"	d
HAVE_SHADOW_H	build/pythonswig/pyconfig.h	/^#define HAVE_SHADOW_H /;"	d
HAVE_SIGACTION	build/pythonswig/pyconfig.h	/^#define HAVE_SIGACTION /;"	d
HAVE_SIGINTERRUPT	build/pythonswig/pyconfig.h	/^#define HAVE_SIGINTERRUPT /;"	d
HAVE_SIGNAL_H	build/pythonswig/pyconfig.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGRELSE	build/pythonswig/pyconfig.h	/^#define HAVE_SIGRELSE /;"	d
HAVE_SNPRINTF	build/pythonswig/pyconfig.h	/^#define HAVE_SNPRINTF /;"	d
HAVE_SOCKADDR_STORAGE	build/pythonswig/pyconfig.h	/^#define HAVE_SOCKADDR_STORAGE /;"	d
HAVE_SOCKETPAIR	build/pythonswig/pyconfig.h	/^#define HAVE_SOCKETPAIR /;"	d
HAVE_SPAWN_H	build/pythonswig/pyconfig.h	/^#define HAVE_SPAWN_H /;"	d
HAVE_SSIZE_T	build/pythonswig/pyconfig.h	/^#define HAVE_SSIZE_T /;"	d
HAVE_STATVFS	build/pythonswig/pyconfig.h	/^#define HAVE_STATVFS /;"	d
HAVE_STAT_TV_NSEC	build/pythonswig/pyconfig.h	/^#define HAVE_STAT_TV_NSEC /;"	d
HAVE_STDARG_PROTOTYPES	build/pythonswig/pyconfig.h	/^#define HAVE_STDARG_PROTOTYPES /;"	d
HAVE_STDINT_H	build/pythonswig/pyconfig.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDLIB_H	build/pythonswig/pyconfig.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STRDUP	build/pythonswig/pyconfig.h	/^#define HAVE_STRDUP /;"	d
HAVE_STRFTIME	build/pythonswig/pyconfig.h	/^#define HAVE_STRFTIME /;"	d
HAVE_STRINGS_H	build/pythonswig/pyconfig.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRING_H	build/pythonswig/pyconfig.h	/^#define HAVE_STRING_H /;"	d
HAVE_STROPTS_H	build/pythonswig/pyconfig.h	/^#define HAVE_STROPTS_H /;"	d
HAVE_STRUCT_STAT_ST_BLKSIZE	build/pythonswig/pyconfig.h	/^#define HAVE_STRUCT_STAT_ST_BLKSIZE /;"	d
HAVE_STRUCT_STAT_ST_BLOCKS	build/pythonswig/pyconfig.h	/^#define HAVE_STRUCT_STAT_ST_BLOCKS /;"	d
HAVE_STRUCT_STAT_ST_RDEV	build/pythonswig/pyconfig.h	/^#define HAVE_STRUCT_STAT_ST_RDEV /;"	d
HAVE_STRUCT_TM_TM_ZONE	build/pythonswig/pyconfig.h	/^#define HAVE_STRUCT_TM_TM_ZONE /;"	d
HAVE_ST_BLOCKS	build/pythonswig/pyconfig.h	/^#define HAVE_ST_BLOCKS /;"	d
HAVE_SYMLINK	build/pythonswig/pyconfig.h	/^#define HAVE_SYMLINK /;"	d
HAVE_SYSCONF	build/pythonswig/pyconfig.h	/^#define HAVE_SYSCONF /;"	d
HAVE_SYSEXITS_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYSEXITS_H /;"	d
HAVE_SYS_EPOLL_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_EPOLL_H /;"	d
HAVE_SYS_FILE_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_FILE_H /;"	d
HAVE_SYS_PARAM_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_PARAM_H /;"	d
HAVE_SYS_POLL_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_POLL_H /;"	d
HAVE_SYS_RESOURCE_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_RESOURCE_H /;"	d
HAVE_SYS_SELECT_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_SELECT_H /;"	d
HAVE_SYS_SOCKET_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_SOCKET_H /;"	d
HAVE_SYS_STATVFS_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_STATVFS_H /;"	d
HAVE_SYS_STAT_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_STAT_H /;"	d
HAVE_SYS_TIMES_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_TIMES_H /;"	d
HAVE_SYS_TIME_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_TIME_H /;"	d
HAVE_SYS_TYPES_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_UN_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_UN_H /;"	d
HAVE_SYS_UTSNAME_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_UTSNAME_H /;"	d
HAVE_SYS_WAIT_H	build/pythonswig/pyconfig.h	/^#define HAVE_SYS_WAIT_H /;"	d
HAVE_TCGETPGRP	build/pythonswig/pyconfig.h	/^#define HAVE_TCGETPGRP /;"	d
HAVE_TCSETPGRP	build/pythonswig/pyconfig.h	/^#define HAVE_TCSETPGRP /;"	d
HAVE_TEMPNAM	build/pythonswig/pyconfig.h	/^#define HAVE_TEMPNAM /;"	d
HAVE_TERMIOS_H	build/pythonswig/pyconfig.h	/^#define HAVE_TERMIOS_H /;"	d
HAVE_TERM_H	build/pythonswig/pyconfig.h	/^#define HAVE_TERM_H /;"	d
HAVE_TGAMMA	build/pythonswig/pyconfig.h	/^#define HAVE_TGAMMA /;"	d
HAVE_TIMEGM	build/pythonswig/pyconfig.h	/^#define HAVE_TIMEGM /;"	d
HAVE_TIMES	build/pythonswig/pyconfig.h	/^#define HAVE_TIMES /;"	d
HAVE_TMPFILE	build/pythonswig/pyconfig.h	/^#define HAVE_TMPFILE /;"	d
HAVE_TMPNAM	build/pythonswig/pyconfig.h	/^#define HAVE_TMPNAM /;"	d
HAVE_TMPNAM_R	build/pythonswig/pyconfig.h	/^#define HAVE_TMPNAM_R /;"	d
HAVE_TM_ZONE	build/pythonswig/pyconfig.h	/^#define HAVE_TM_ZONE /;"	d
HAVE_TRUNCATE	build/pythonswig/pyconfig.h	/^#define HAVE_TRUNCATE /;"	d
HAVE_UINTPTR_T	build/pythonswig/pyconfig.h	/^#define HAVE_UINTPTR_T /;"	d
HAVE_UNAME	build/pythonswig/pyconfig.h	/^#define HAVE_UNAME /;"	d
HAVE_UNISTD_H	build/pythonswig/pyconfig.h	/^#define HAVE_UNISTD_H /;"	d
HAVE_UNSETENV	build/pythonswig/pyconfig.h	/^#define HAVE_UNSETENV /;"	d
HAVE_UTIMES	build/pythonswig/pyconfig.h	/^#define HAVE_UTIMES /;"	d
HAVE_UTIME_H	build/pythonswig/pyconfig.h	/^#define HAVE_UTIME_H /;"	d
HAVE_VSNPRINTF	lib/zlib/zutil.h	/^#    define HAVE_VSNPRINTF$/;"	d
HAVE_WAIT3	build/pythonswig/pyconfig.h	/^#define HAVE_WAIT3 /;"	d
HAVE_WAIT4	build/pythonswig/pyconfig.h	/^#define HAVE_WAIT4 /;"	d
HAVE_WAITPID	build/pythonswig/pyconfig.h	/^#define HAVE_WAITPID /;"	d
HAVE_WCHAR_H	build/pythonswig/pyconfig.h	/^#define HAVE_WCHAR_H /;"	d
HAVE_WCSCOLL	build/pythonswig/pyconfig.h	/^#define HAVE_WCSCOLL /;"	d
HAVE_WORKING_TZSET	build/pythonswig/pyconfig.h	/^#define HAVE_WORKING_TZSET /;"	d
HAVE_ZLIB_COPY	build/pythonswig/pyconfig.h	/^#define HAVE_ZLIB_COPY /;"	d
HCRC	lib/zlib/inflate.h	/^    HCRC,       \/* i: waiting for header crc (gzip) *\/$/;"	e	enum:__anon136
HCRC_STATE	lib/zlib/deflate.h	/^#define HCRC_STATE /;"	d
HEAD	lib/zlib/inflate.h	/^    HEAD,       \/* i: waiting for magic header *\/$/;"	e	enum:__anon136
HEADING	core/motion/rswalk2014/types/RRCoord.hpp	/^   HEADING,$/;"	e	enum:__anon15
HEAD_DH_CHAIN_LEN	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^#define HEAD_DH_CHAIN_LEN /;"	d
HEAD_STOP_THRESHOLD	core/constants/VisionConstants.h	/^#define HEAD_STOP_THRESHOLD /;"	d
HEAP_SIZE	lib/zlib/deflate.h	/^#define HEAP_SIZE /;"	d
HIPOFFSETZ	core/common/RobotInfo.h	/^#define HIPOFFSETZ /;"	d
HORIZONTAL_BLOB_IMAGE	build/include/tool/VisionWindow.h	/^#define HORIZONTAL_BLOB_IMAGE /;"	d
HORIZONTAL_BLOB_IMAGE	tools/UTNaoTool/VisionWindow.h	/^#define HORIZONTAL_BLOB_IMAGE /;"	d
HORIZON_LINE_H	core/vision/structures/HorizonLine.h	/^#define HORIZON_LINE_H$/;"	d
HSV	vision_testing/src/vision_testing.cpp	/^  HSV()$/;"	f	class:HSV
HSV	vision_testing/src/vision_testing.cpp	/^  HSV(unsigned char H, unsigned char S, unsigned char V)$/;"	f	class:HSV
HSV	vision_testing/src/vision_testing.cpp	/^class HSV$/;"	c	file:
HT	core/common/NMatrix.cpp	/^NMatrix HT(NMatrix A)$/;"	f
HandOffsetX	core/motion/rswalk2014/utils/body.hpp	/^   const float HandOffsetX = 57.75;$/;"	m	namespace:Limbs
HandOffsetZ	core/motion/rswalk2014/utils/body.hpp	/^   const float HandOffsetZ = 12.31;$/;"	m	namespace:Limbs
HandSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float HandSpeed            = MOTOR2_REDUCTIONB_RAD;$/;"	m	namespace:RSJoints::Radians
HandleBlockMap	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleBlockMap(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleBlockSequence	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleBlockSequence(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleCompactMap	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleCompactMap(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleCompactMapWithNoKey	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleCompactMapWithNoKey(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleDirective	lib/yaml-cpp/src/parser.cpp	/^	void Parser::HandleDirective(const Token& token)$/;"	f	class:YAML::Parser
HandleDocument	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleDocument(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleFlowMap	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleFlowMap(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleFlowSequence	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleFlowSequence(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleMap	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleMap(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleNextDocument	lib/yaml-cpp/src/parser.cpp	/^	bool Parser::HandleNextDocument(EventHandler& eventHandler)$/;"	f	class:YAML::Parser
HandleNode	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleNode(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleSequence	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::HandleSequence(EventHandler& eventHandler)$/;"	f	class:YAML::SingleDocParser
HandleTagDirective	lib/yaml-cpp/src/parser.cpp	/^	void Parser::HandleTagDirective(const Token& token)$/;"	f	class:YAML::Parser
HandleYamlDirective	lib/yaml-cpp/src/parser.cpp	/^	void Parser::HandleYamlDirective(const Token& token)$/;"	f	class:YAML::Parser
Hardness	core/motion/SpecialMotionParser.h	/^  Hardness,$/;"	e	enum:Motions::motionType
Head	core/motion/rswalk2014/types/ActionCommand.hpp	/^      Head()$/;"	f	struct:ActionCommand::Head
Head	core/motion/rswalk2014/types/ActionCommand.hpp	/^      Head(float y, float p = 0.0, bool r = true,$/;"	f	struct:ActionCommand::Head
Head	core/motion/rswalk2014/types/ActionCommand.hpp	/^   struct Head {$/;"	s	namespace:ActionCommand
Head	core/python/cfgstiff.py	/^Head = [0] * core.NUM_JOINTS$/;"	v
HeadCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float HeadCoM[] = {-1.12, 0.03, 52.58, 1};$/;"	m	namespace:Limbs
HeadGenerator	core/motion/rswalk2014/HeadGenerator.cpp	/^HeadGenerator::HeadGenerator()$/;"	f	class:HeadGenerator
HeadGenerator	core/motion/rswalk2014/HeadGenerator.hpp	/^class HeadGenerator : Generator {$/;"	c
HeadMass	core/motion/rswalk2014/utils/body.hpp	/^   const float HeadMass = 0.60533; \/\/ Head Pitch$/;"	m	namespace:Limbs
HeadPan	core/common/RobotInfo.h	/^  HeadPan = HeadYaw,$/;"	e	enum:__anon9
HeadPitch	core/common/RobotInfo.h	/^  HeadPitch,$/;"	e	enum:Joint
HeadPitch	core/motion/rswalk2014/utils/body.hpp	/^      HeadPitch, \/\/ 1$/;"	e	enum:RSJoints::JointCodesEnum
HeadPitchSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float HeadPitchSpeed       = MOTOR3_REDUCTIONB_RAD;$/;"	m	namespace:RSJoints::Radians
HeadPitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float HeadPitch_Max        = DEG2RAD(29.5);$/;"	m	namespace:RSJoints::Radians
HeadPitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float HeadPitch_Min        = DEG2RAD(-38.5);$/;"	m	namespace:RSJoints::Radians
HeadTilt	core/common/RobotInfo.h	/^  HeadTilt = HeadPitch,$/;"	e	enum:__anon9
HeadVersion	build/include/tool/StateWindow.h	/^     HeadVersion,$/;"	e	enum:StateWindow::__anon3
HeadVersion	tools/UTNaoTool/StateWindow.h	/^     HeadVersion,$/;"	e	enum:StateWindow::__anon141
HeadYaw	core/common/RobotInfo.h	/^  HeadYaw,$/;"	e	enum:Joint
HeadYaw	core/motion/rswalk2014/utils/body.hpp	/^      HeadYaw = 0,$/;"	e	enum:RSJoints::JointCodesEnum
HeadYawSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float HeadYawSpeed         = MOTOR3_REDUCTIONA_RAD;$/;"	m	namespace:RSJoints::Radians
HeadYaw_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float HeadYaw_Max          = DEG2RAD(119.5);$/;"	m	namespace:RSJoints::Radians
HeadYaw_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float HeadYaw_Min          = DEG2RAD(-119.5);$/;"	m	namespace:RSJoints::Radians
Hex	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Hex,$/;"	e	enum:YAML::EMITTER_MANIP
Hex	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Hex() {$/;"	f	namespace:YAML::Exp
HexAndOct	lib/yaml-cpp/test/emittertests.cpp	/^        void HexAndOct(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
High	build/include/tool/ProcessExecutor.h	/^      High,$/;"	e	enum:ProcessExecutor::ProcessPriority
High	tools/UTNaoTool/ProcessExecutor.h	/^      High,$/;"	e	enum:ProcessExecutor::ProcessPriority
HipOffsetY	core/motion/rswalk2014/utils/body.hpp	/^   const float HipOffsetY = 50.00;$/;"	m	namespace:Limbs
HipOffsetZ	core/motion/rswalk2014/utils/body.hpp	/^   const float HipOffsetZ = 85.00;$/;"	m	namespace:Limbs
HipPitchSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float HipPitchSpeed        = MOTOR1_REDUCTIONB_RAD;$/;"	m	namespace:RSJoints::Radians
HipRollSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float HipRollSpeed         = MOTOR1_REDUCTIONA_RAD;$/;"	m	namespace:RSJoints::Radians
HipYawPitchSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float HipYawPitchSpeed     = MOTOR1_REDUCTIONA_RAD;$/;"	m	namespace:RSJoints::Radians
HorizonLine	core/vision/structures/HorizonLine.h	/^  HorizonLine() { exists = false; }$/;"	f	struct:HorizonLine
HorizonLine	core/vision/structures/HorizonLine.h	/^struct HorizonLine {$/;"	s
HouseholderTransform	core/math/MatrixOperations.h	/^    static Eigen::Matrix<T, R, R> HouseholderTransform(Eigen::Matrix<T, R, 2*C+R> input) {$/;"	f	class:MatrixOperations
Hp	core/motion/rswalk2014/Walk2014Generator.hpp	/^      float Hp;$/;"	m	struct:Walk2014Generator::Hpr
Hpr	core/motion/rswalk2014/Walk2014Generator.hpp	/^   struct Hpr {$/;"	s	class:Walk2014Generator
Hr	core/motion/rswalk2014/Walk2014Generator.hpp	/^      float Hr;$/;"	m	struct:Walk2014Generator::Hpr
I	core/python/state_machine.py	/^I = IterationEvent$/;"	v
I	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  IdentityMatrix I;$/;"	m	class:ExtendedKalmanFilter
I	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  IdentityMatrix I;$/;"	m	class:LinearKalmanFilter
I2C_FUNCS	core/imageCapture/i2c-dev.h	/^#define I2C_FUNCS	/;"	d
I2C_FUNC_10BIT_ADDR	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_10BIT_ADDR	/;"	d
I2C_FUNC_I2C	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_I2C	/;"	d
I2C_FUNC_PROTOCOL_MANGLING	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_PROTOCOL_MANGLING	/;"	d
I2C_FUNC_SMBUS_BLOCK_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_BLOCK_DATA /;"	d
I2C_FUNC_SMBUS_BLOCK_PROC_CALL	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_BLOCK_PROC_CALL	/;"	d
I2C_FUNC_SMBUS_BYTE	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_BYTE /;"	d
I2C_FUNC_SMBUS_BYTE_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_BYTE_DATA /;"	d
I2C_FUNC_SMBUS_HWPEC_CALC	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_HWPEC_CALC	/;"	d
I2C_FUNC_SMBUS_I2C_BLOCK	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_I2C_BLOCK /;"	d
I2C_FUNC_SMBUS_PEC	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_PEC	/;"	d
I2C_FUNC_SMBUS_PROC_CALL	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_PROC_CALL	/;"	d
I2C_FUNC_SMBUS_QUICK	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_QUICK	/;"	d
I2C_FUNC_SMBUS_READ_BLOCK_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_READ_BLOCK_DATA	/;"	d
I2C_FUNC_SMBUS_READ_BYTE	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_READ_BYTE	/;"	d
I2C_FUNC_SMBUS_READ_BYTE_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_READ_BYTE_DATA	/;"	d
I2C_FUNC_SMBUS_READ_I2C_BLOCK	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_READ_I2C_BLOCK	/;"	d
I2C_FUNC_SMBUS_READ_WORD_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_READ_WORD_DATA	/;"	d
I2C_FUNC_SMBUS_WORD_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_WORD_DATA /;"	d
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_WRITE_BLOCK_DATA /;"	d
I2C_FUNC_SMBUS_WRITE_BYTE	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_WRITE_BYTE	/;"	d
I2C_FUNC_SMBUS_WRITE_BYTE_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_WRITE_BYTE_DATA	/;"	d
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_WRITE_I2C_BLOCK	/;"	d
I2C_FUNC_SMBUS_WRITE_WORD_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_FUNC_SMBUS_WRITE_WORD_DATA	/;"	d
I2C_M_IGNORE_NAK	core/imageCapture/i2c-dev.h	/^#define I2C_M_IGNORE_NAK	/;"	d
I2C_M_NOSTART	core/imageCapture/i2c-dev.h	/^#define I2C_M_NOSTART	/;"	d
I2C_M_NO_RD_ACK	core/imageCapture/i2c-dev.h	/^#define I2C_M_NO_RD_ACK	/;"	d
I2C_M_RD	core/imageCapture/i2c-dev.h	/^#define I2C_M_RD	/;"	d
I2C_M_REV_DIR_ADDR	core/imageCapture/i2c-dev.h	/^#define I2C_M_REV_DIR_ADDR	/;"	d
I2C_M_TEN	core/imageCapture/i2c-dev.h	/^#define I2C_M_TEN	/;"	d
I2C_PEC	core/imageCapture/i2c-dev.h	/^#define I2C_PEC	/;"	d
I2C_RDWR	core/imageCapture/i2c-dev.h	/^#define I2C_RDWR	/;"	d
I2C_RETRIES	core/imageCapture/i2c-dev.h	/^#define I2C_RETRIES	/;"	d
I2C_SLAVE	core/imageCapture/i2c-dev.h	/^#define I2C_SLAVE	/;"	d
I2C_SLAVE_FORCE	core/imageCapture/i2c-dev.h	/^#define I2C_SLAVE_FORCE	/;"	d
I2C_SMBUS	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS	/;"	d
I2C_SMBUS_BLOCK_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_BLOCK_DATA	/;"	d
I2C_SMBUS_BLOCK_MAX	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_BLOCK_MAX	/;"	d
I2C_SMBUS_BLOCK_PROC_CALL	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_BLOCK_PROC_CALL /;"	d
I2C_SMBUS_BYTE	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_BYTE	/;"	d
I2C_SMBUS_BYTE_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_BYTE_DATA	/;"	d
I2C_SMBUS_I2C_BLOCK_BROKEN	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_I2C_BLOCK_BROKEN /;"	d
I2C_SMBUS_I2C_BLOCK_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_I2C_BLOCK_DATA /;"	d
I2C_SMBUS_I2C_BLOCK_MAX	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_I2C_BLOCK_MAX	/;"	d
I2C_SMBUS_PROC_CALL	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_PROC_CALL	/;"	d
I2C_SMBUS_QUICK	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_QUICK	/;"	d
I2C_SMBUS_READ	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_READ	/;"	d
I2C_SMBUS_WORD_DATA	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_WORD_DATA	/;"	d
I2C_SMBUS_WRITE	core/imageCapture/i2c-dev.h	/^#define I2C_SMBUS_WRITE	/;"	d
I2C_TENBIT	core/imageCapture/i2c-dev.h	/^#define I2C_TENBIT	/;"	d
I2C_TIMEOUT	core/imageCapture/i2c-dev.h	/^#define I2C_TIMEOUT	/;"	d
IBSim	build/include/tool/simulation/CoachSimulation.cpp	/^typedef IsolatedBehaviorSimulation IBSim;$/;"	t	file:
IBSim	build/include/tool/simulation/GoalieSimulation.cpp	/^typedef IsolatedBehaviorSimulation IBSim;$/;"	t	file:
IBSim	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^typedef IsolatedBehaviorSimulation IBSim;$/;"	t	file:
IBSim	tools/UTNaoTool/simulation/CoachSimulation.cpp	/^typedef IsolatedBehaviorSimulation IBSim;$/;"	t	file:
IBSim	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^typedef IsolatedBehaviorSimulation IBSim;$/;"	t	file:
IBSim	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^typedef IsolatedBehaviorSimulation IBSim;$/;"	t	file:
ICMeasures	build/include/tool/calibration/IntrinsicCalibrator.h	/^struct ICMeasures {$/;"	s
ICMeasures	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^struct ICMeasures {$/;"	s
ICProgress	build/include/tool/calibration/IntrinsicCalibrator.h	/^typedef ICMeasures ICProgress;$/;"	t
ICProgress	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^typedef ICMeasures ICProgress;$/;"	t
ICSettings	build/include/tool/calibration/IntrinsicCalibrator.h	/^typedef CalibratorSettings ICSettings;$/;"	t
ICSettings	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^typedef CalibratorSettings ICSettings;$/;"	t
IF	lib/lua/src/lundump.c	/^#define IF(/;"	d	file:
IGNORE_COACH_DELAYS	core/common/RobotInfo.h	/^#define IGNORE_COACH_DELAYS /;"	d
IKSTRAIGHT	core/memory/KickRequestBlock.h	/^    IKSTRAIGHT,$/;"	e	enum:Kick::Type
IMAGEBLOCK_95BEQPL8	core/memory/ImageBlock.h	/^#define IMAGEBLOCK_95BEQPL8$/;"	d
IMAGECAPTURE_NQY7O454	core/imageCapture/ImageCapture.h	/^#define IMAGECAPTURE_NQY7O454$/;"	d
IMAGEPROCESSOR_H	core/vision/ImageProcessor.h	/^#define IMAGEPROCESSOR_H$/;"	d
IMAGEWIDGET_DTQR5H3Z	tools/color_classifier/include/color_classifier/ImageWidget.hpp	/^#define IMAGEWIDGET_DTQR5H3Z$/;"	d
IMAGE_BOTTOM	build/include/tool/VisionWindow.h	/^    IMAGE_BOTTOM = 1$/;"	e	enum:__anon5
IMAGE_BOTTOM	tools/UTNaoTool/VisionWindow.h	/^    IMAGE_BOTTOM = 1$/;"	e	enum:__anon143
IMAGE_CAPTURE	core/memory/MemoryBlock.h	/^    IMAGE_CAPTURE,$/;"	e	enum:MemoryOwner::Owner
IMAGE_COLS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define IMAGE_COLS /;"	d
IMAGE_CONSTANTS_H	core/constants/ImageConstants.h	/^#define IMAGE_CONSTANTS_H$/;"	d
IMAGE_DEPTH	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define IMAGE_DEPTH /;"	d
IMAGE_HEIGHT	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^#define IMAGE_HEIGHT /;"	d
IMAGE_HEIGHT	tools/color_classifier/include/color_classifier/classification_window.hpp	/^#define IMAGE_HEIGHT /;"	d
IMAGE_HFOV	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define IMAGE_HFOV /;"	d
IMAGE_ROWS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define IMAGE_ROWS /;"	d
IMAGE_ROW_STEP	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define IMAGE_ROW_STEP /;"	d
IMAGE_TOP	build/include/tool/VisionWindow.h	/^    IMAGE_TOP = 0,$/;"	e	enum:__anon5
IMAGE_TOP	tools/UTNaoTool/VisionWindow.h	/^    IMAGE_TOP = 0,$/;"	e	enum:__anon143
IMAGE_VFOV	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define IMAGE_VFOV /;"	d
IMAGE_WIDGET_H	build/include/tool/ImageWidget.h	/^#define IMAGE_WIDGET_H$/;"	d
IMAGE_WIDGET_H	tools/UTNaoTool/ImageWidget.h	/^#define IMAGE_WIDGET_H$/;"	d
IMAGE_WIDTH	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^#define IMAGE_WIDTH /;"	d
IMAGE_WIDTH	tools/color_classifier/include/color_classifier/classification_window.hpp	/^#define IMAGE_WIDTH /;"	d
IMAGE_X	tools/color_classifier/src/ImageWidget.cpp	/^#define IMAGE_X /;"	d	file:
IMAGE_Y	tools/color_classifier/src/ImageWidget.cpp	/^#define IMAGE_Y /;"	d	file:
INC	lib/lua/etc/Makefile	/^INC= $(TOP)\/src$/;"	m
INCLUDES	install/install_naoqi	/^INCLUDES = 'includes.tar.gz'$/;"	v
INDENTATION_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/indentation.h	/^#define INDENTATION_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
INDENT_TYPE	lib/yaml-cpp/src/scanner.h	/^			enum INDENT_TYPE { MAP, SEQ, NONE };$/;"	g	struct:YAML::Scanner::IndentMarker
INDEXK	lib/lua/src/lopcodes.h	/^#define INDEXK(/;"	d
INFO	core/motion/rswalk2014/utils/Logger.hpp	/^   INFO    = 20,$/;"	e	enum:LogLevel
INIT	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^            INIT, TURN, FORWARD, END$/;"	e	enum:WalkEnginePreProcessor::DribbleEngine::DribbleState
INITBITS	lib/zlib/infback.c	/^#define INITBITS(/;"	d	file:
INITBITS	lib/zlib/inflate.c	/^#define INITBITS(/;"	d	file:
INITIAL	core/common/States.h	/^  INITIAL = 1,$/;"	e	enum:STATES
INITIAL	core/motion/rswalk2014/types/ActionCommand.hpp	/^         INITIAL,                         \/\/7$/;"	e	enum:ActionCommand::Body::ActionType
INIT_STATE	lib/zlib/deflate.h	/^#define INIT_STATE /;"	d
INLINE0	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define INLINE0 /;"	d
INLINE0	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define INLINE0$/;"	d
INLINE0	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#undef INLINE0$/;"	d
INLINE1	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define INLINE1 /;"	d
INLINE1	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define INLINE1$/;"	d
INLINE1	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#undef INLINE1$/;"	d
INLINE2	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define INLINE2 /;"	d
INLINE2	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define INLINE2$/;"	d
INLINE2	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#undef INLINE2$/;"	d
INPUT	lib/yaml-cpp/src/scanner.h	/^		Stream INPUT;$/;"	m	class:YAML::Scanner
INSERT_STRING	lib/zlib/deflate.c	/^#define INSERT_STRING(/;"	d	file:
INSIDE	core/memory/KickEngineBlock.h	/^    INSIDE,$/;"	e	enum:KickEngineBlock::Kick_Spec
INSTALL	lib/lua/Makefile	/^INSTALL= install -p$/;"	m
INSTALL_BIN	lib/lua/Makefile	/^INSTALL_BIN= $(INSTALL_TOP)\/bin$/;"	m
INSTALL_CMOD	lib/lua/Makefile	/^INSTALL_CMOD= $(INSTALL_TOP)\/lib\/lua\/$V$/;"	m
INSTALL_DATA	lib/lua/Makefile	/^INSTALL_DATA= $(INSTALL) -m 0644$/;"	m
INSTALL_EXEC	lib/lua/Makefile	/^INSTALL_EXEC= $(INSTALL) -m 0755$/;"	m
INSTALL_INC	lib/lua/Makefile	/^INSTALL_INC= $(INSTALL_TOP)\/include$/;"	m
INSTALL_LIB	lib/lua/Makefile	/^INSTALL_LIB= $(INSTALL_TOP)\/lib$/;"	m
INSTALL_LMOD	lib/lua/Makefile	/^INSTALL_LMOD= $(INSTALL_TOP)\/share\/lua\/$V$/;"	m
INSTALL_MAN	lib/lua/Makefile	/^INSTALL_MAN= $(INSTALL_TOP)\/man\/man1$/;"	m
INSTALL_TOP	lib/lua/Makefile	/^INSTALL_TOP= \/usr\/local$/;"	m
INTERFACE	core/memory/MemoryBlock.h	/^    INTERFACE,$/;"	e	enum:MemoryOwner::Owner
INTERFACEINFO_R3BSIHAC	core/common/InterfaceInfo.h	/^#define INTERFACEINFO_R3BSIHAC$/;"	d
INTERNAL_ASSERT	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define INTERNAL_ASSERT(/;"	d
INTERPRETER_MODULE_H	core/InterpreterModule.h	/^#define INTERPRETER_MODULE_H$/;"	d
INTERSECTION_OFFSET	core/common/WorldObject.h	/^const int INTERSECTION_OFFSET =  WO_OPP_FIELD_LEFT_L;$/;"	v
INTERVAL	build/include/tool/RobotControllerWidget.cpp	/^#define INTERVAL /;"	d	file:
INTERVAL	tools/UTNaoTool/RobotControllerWidget.cpp	/^#define INTERVAL /;"	d	file:
INVALID	core/motion/rswalk2014/utils/body.hpp	/^   const float INVALID = 2.55f;$/;"	m	namespace:Sonar
INVALID	lib/yaml-cpp/src/scanner.h	/^			enum STATUS { VALID, INVALID, UNKNOWN };$/;"	e	enum:YAML::Scanner::IndentMarker::STATUS
INVALID	lib/yaml-cpp/src/token.h	/^		enum STATUS { VALID, INVALID, UNVERIFIED };$/;"	e	enum:YAML::Token::STATUS
INVALID_ALIAS	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const INVALID_ALIAS          = "invalid alias";$/;"	m	namespace:YAML::ErrorMsg
INVALID_ANCHOR	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const INVALID_ANCHOR         = "invalid anchor";$/;"	m	namespace:YAML::ErrorMsg
INVALID_ESCAPE	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const INVALID_ESCAPE         = "unknown escape character: ";$/;"	m	namespace:YAML::ErrorMsg
INVALID_HEX	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const INVALID_HEX            = "bad character found while scanning hex number";$/;"	m	namespace:YAML::ErrorMsg
INVALID_SCALAR	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const INVALID_SCALAR         = "invalid scalar";$/;"	m	namespace:YAML::ErrorMsg
INVALID_TAG	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const INVALID_TAG            = "invalid tag";$/;"	m	namespace:YAML::ErrorMsg
INVALID_UNICODE	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const INVALID_UNICODE        = "invalid unicode: ";$/;"	m	namespace:YAML::ErrorMsg
INVERSEKINEMATICS2_Q048XIUC	core/kinematics/InverseKinematics.h	/^#define INVERSEKINEMATICS2_Q048XIUC$/;"	d
IO_INPUT	lib/lua/src/liolib.c	/^#define IO_INPUT	/;"	d	file:
IO_OUTPUT	lib/lua/src/liolib.c	/^#define IO_OUTPUT	/;"	d	file:
IP	build/include/tool/UTNaoTool.cpp	/^  QString IP;$/;"	m	namespace:__anon4	file:
IP	interfaces/nao/tests/naointerfaceTest.py	/^IP = "127.0.0.1"$/;"	v
IP	tools/UTNaoTool/UTNaoTool.cpp	/^  QString IP;$/;"	m	namespace:__anon142	file:
IPos	lib/zlib/deflate.h	/^typedef unsigned IPos;$/;"	t
IS	lib/lua/src/luac.c	/^#define	IS(/;"	d	file:
ISK	lib/lua/src/lopcodes.h	/^#define ISK(/;"	d
ISOLATED_BEHAVIOR_SIMULATION_H	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^#define ISOLATED_BEHAVIOR_SIMULATION_H$/;"	d
ISOLATED_BEHAVIOR_SIMULATION_H	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^#define ISOLATED_BEHAVIOR_SIMULATION_H$/;"	d
IS_BEACON	core/vision/BeaconDetector.h	/^    IS_BEACON$/;"	e	enum:BeaconDetector::BeaconPossibilityState
IS_BEACON	vision_testing/src/vision_testing.cpp	/^  IS_BEACON$/;"	e	enum:BeaconPossibilityState	file:
IS_RUNNING_CORE	build/include/tool/VisionWindow_Draw.cpp	/^#define IS_RUNNING_CORE /;"	d	file:
IS_RUNNING_CORE	tools/UTNaoTool/VisionWindow_Draw.cpp	/^#define IS_RUNNING_CORE /;"	d	file:
ITERATOR_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/iterator.h	/^#define ITERATOR_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
ITERPRIV_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/iterpriv.h	/^#define ITERPRIV_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
ITER_TYPE	lib/yaml-cpp/src/iterpriv.h	/^		enum ITER_TYPE { IT_NONE, IT_SEQ, IT_MAP };$/;"	g	struct:YAML::IterPriv
IT_MAP	lib/yaml-cpp/src/iterpriv.h	/^		enum ITER_TYPE { IT_NONE, IT_SEQ, IT_MAP };$/;"	e	enum:YAML::IterPriv::ITER_TYPE
IT_NONE	lib/yaml-cpp/src/iterpriv.h	/^		enum ITER_TYPE { IT_NONE, IT_SEQ, IT_MAP };$/;"	e	enum:YAML::IterPriv::ITER_TYPE
IT_SEQ	lib/yaml-cpp/src/iterpriv.h	/^		enum ITER_TYPE { IT_NONE, IT_SEQ, IT_MAP };$/;"	e	enum:YAML::IterPriv::ITER_TYPE
IdentityMatrix	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> IdentityMatrix;$/;"	t	class:ExtendedKalmanFilter
IdentityMatrix	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> IdentityMatrix;$/;"	t	class:LinearKalmanFilter
If_Connected	core/vision/Union_find.cpp	/^bool MergeBlob :: If_Connected( int i , int j){ return Root(i) == Root(j) ;}$/;"	f	class:MergeBlob
Image	tools/color_classifier/include/color_classifier/classification_window.hpp	/^  enum Image {$/;"	g	namespace:color_classifier
ImageBlock	core/memory/ImageBlock.cpp	/^ImageBlock::ImageBlock() : top_params_(Camera::TOP), bottom_params_(Camera::BOTTOM) {$/;"	f	class:ImageBlock
ImageBlock	core/memory/ImageBlock.cpp	/^ImageBlock::ImageBlock(const ImageBlock& other) : ImageBlock() {$/;"	f	class:ImageBlock
ImageBlock	core/memory/ImageBlock.h	/^struct ImageBlock : public MemoryBlock {$/;"	s
ImageCapture	core/imageCapture/ImageCapture.cpp	/^ImageCapture::ImageCapture(Memory *memory):$/;"	f	class:ImageCapture
ImageCapture	core/imageCapture/ImageCapture.h	/^class ImageCapture {$/;"	c
ImageList	build/include/tool/annotations/AnnotationAnalyzer.h	/^typedef std::vector<unsigned char*> ImageList;$/;"	t
ImageList	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^typedef std::vector<unsigned char*> ImageList;$/;"	t
ImageParams	core/common/ImageParams.cpp	/^ImageParams::ImageParams(Camera::Type camera) {$/;"	f	class:ImageParams
ImageParams	core/common/RobotInfo.h	/^struct ImageParams {$/;"	s
ImageProcessor	core/vision/ImageProcessor.cpp	/^ImageProcessor::ImageProcessor(VisionBlocks& vblocks, const ImageParams& iparams, Camera::Type camera) :$/;"	f	class:ImageProcessor
ImageProcessor	core/vision/ImageProcessor.h	/^class ImageProcessor {$/;"	c
ImageWidget	build/include/tool/ImageWidget.cpp	/^ImageWidget::ImageWidget(QWidget *parent) : QWidget(parent), img_(NULL) {$/;"	f	class:ImageWidget
ImageWidget	build/include/tool/ImageWidget.h	/^class ImageWidget : public QWidget {$/;"	c
ImageWidget	tools/UTNaoTool/ImageWidget.cpp	/^ImageWidget::ImageWidget(QWidget *parent) : QWidget(parent), img_(NULL) {$/;"	f	class:ImageWidget
ImageWidget	tools/UTNaoTool/ImageWidget.h	/^class ImageWidget : public QWidget {$/;"	c
ImageWidget	tools/color_classifier/include/color_classifier/ImageWidget.hpp	/^  class ImageWidget : public QWidget {$/;"	c	namespace:color_classifier
ImageWidget	tools/color_classifier/src/ImageWidget.cpp	/^  ImageWidget::ImageWidget(QWidget *parent) : QWidget(parent) {$/;"	f	class:color_classifier::ImageWidget
ImplicitBlockMappingEntries	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST ImplicitBlockMappingEntries()$/;"	f	namespace:Test::Spec
ImplicitDocStart	lib/yaml-cpp/test/emittertests.cpp	/^		void ImplicitDocStart(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
InBlockContext	lib/yaml-cpp/src/scanner.h	/^		bool InBlockContext() const { return m_flows.empty(); }$/;"	f	class:YAML::Scanner
InFlowContext	lib/yaml-cpp/src/scanner.h	/^		bool InFlowContext() const { return !m_flows.empty(); }$/;"	f	class:YAML::Scanner
InFoldedScalarsNewlinesBecomeSpaces	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST InFoldedScalarsNewlinesBecomeSpaces()$/;"	f	namespace:Test::Spec
InLiteralsNewlinesArePreserved	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST InLiteralsNewlinesArePreserved()$/;"	f	namespace:Test::Spec
Inbound	core/communications/UDPWrapper.h	/^  enum Direction { Inbound, Outbound, Bidirectional };$/;"	e	enum:UDPWrapper::Direction
Indent	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	inline _Indent Indent(int value) {$/;"	f	namespace:YAML
IndentMarker	lib/yaml-cpp/src/scanner.h	/^			IndentMarker(int column_, INDENT_TYPE type_): column(column_), type(type_), status(VALID), pStartToken(0) {}$/;"	f	struct:YAML::Scanner::IndentMarker
IndentMarker	lib/yaml-cpp/src/scanner.h	/^		struct IndentMarker {$/;"	s	class:YAML::Scanner
IndentTo	lib/yaml-cpp/src/indentation.h	/^		IndentTo(unsigned n_): n(n_) {}$/;"	f	struct:YAML::IndentTo
IndentTo	lib/yaml-cpp/src/indentation.h	/^	struct IndentTo {$/;"	s	namespace:YAML
Indentation	lib/yaml-cpp/src/indentation.h	/^		Indentation(unsigned n_): n(n_) {}$/;"	f	struct:YAML::Indentation
Indentation	lib/yaml-cpp/src/indentation.h	/^	struct Indentation {$/;"	s	namespace:YAML
Indentation	lib/yaml-cpp/test/emittertests.cpp	/^		void Indentation(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
IndentationDeterminesScope	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST IndentationDeterminesScope()$/;"	f	namespace:Test::Spec
IndentationIndicators	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST IndentationIndicators()$/;"	f	namespace:Test::Spec
IndentationSpaces	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST IndentationSpaces()$/;"	f	namespace:Test::Spec
Indigo	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Indigo = TORGB(0,0,153);$/;"	m	class:Colors	file:
Indigo	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Indigo	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Indigo = TORGB(0,0,153);$/;"	m	class:Colors	file:
Indigo	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
InertialFilter	core/sensor/InertialFilter.cpp	/^InertialFilter::InertialFilter() {$/;"	f	class:InertialFilter
InertialFilter	core/sensor/InertialFilter.h	/^class InertialFilter {$/;"	c
InertialSensor_AccX	core/motion/rswalk2014/utils/body.hpp	/^      InertialSensor_AccX = 0,$/;"	e	enum:RSSensors::SensorCodesEnum
InertialSensor_AccY	core/motion/rswalk2014/utils/body.hpp	/^      InertialSensor_AccY, \/\/ 1$/;"	e	enum:RSSensors::SensorCodesEnum
InertialSensor_AccZ	core/motion/rswalk2014/utils/body.hpp	/^      InertialSensor_AccZ, \/\/ 2$/;"	e	enum:RSSensors::SensorCodesEnum
InertialSensor_AngleX	core/motion/rswalk2014/utils/body.hpp	/^      InertialSensor_AngleX, \/\/6$/;"	e	enum:RSSensors::SensorCodesEnum
InertialSensor_AngleY	core/motion/rswalk2014/utils/body.hpp	/^      InertialSensor_AngleY, \/\/7$/;"	e	enum:RSSensors::SensorCodesEnum
InertialSensor_AngleZ	core/motion/rswalk2014/utils/body.hpp	/^      InertialSensor_AngleZ, \/\/7$/;"	e	enum:RSSensors::SensorCodesEnum
InertialSensor_GyrRef	core/motion/rswalk2014/utils/body.hpp	/^      InertialSensor_GyrRef, \/\/5$/;"	e	enum:RSSensors::SensorCodesEnum
InertialSensor_GyrX	core/motion/rswalk2014/utils/body.hpp	/^      InertialSensor_GyrX, \/\/ 3$/;"	e	enum:RSSensors::SensorCodesEnum
InertialSensor_GyrY	core/motion/rswalk2014/utils/body.hpp	/^      InertialSensor_GyrY, \/\/ 4$/;"	e	enum:RSSensors::SensorCodesEnum
Infinity	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool Infinity()$/;"	f	namespace:Test::Parser
Init	build/pythonswig/PythonInterface.cpp	/^void PythonInterface::Init(VisionCore* core) {$/;"	f	class:PythonInterface
Init	core/python/PythonInterface.cpp	/^void PythonInterface::Init(VisionCore* core) {$/;"	f	class:PythonInterface
Init	interfaces/sim_spark/RobotBehavior.cpp	/^string RobotBehavior::Init(){$/;"	f	class:RobotBehavior
Init	interfaces/sim_spark/main.cpp	/^bool Init() {$/;"	f
Init	lib/yaml-cpp/src/node.cpp	/^	void Node::Init(NodeType::value type, const Mark& mark, const std::string& tag)$/;"	f	class:YAML::Node
Initial	core/python/primary_bvr.py	/^class Initial(pose.Sit): pass$/;"	c
InitialComment	lib/yaml-cpp/test/emittertests.cpp	/^		void InitialComment(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
InitialCommentWithDocIndicator	lib/yaml-cpp/test/emittertests.cpp	/^		void InitialCommentWithDocIndicator(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
InputMatrix	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumControls> InputMatrix;$/;"	t	class:ExtendedKalmanFilter
InputMatrix	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumControls> InputMatrix;$/;"	t	class:LinearKalmanFilter
Insert	lib/yaml-cpp/src/node.cpp	/^	void Node::Insert(Node& key, Node& value)$/;"	f	class:YAML::Node
Insert	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::Insert(Node& node)$/;"	f	class:YAML::NodeBuilder
InsertPotentialSimpleKey	lib/yaml-cpp/src/simplekey.cpp	/^	void Scanner::InsertPotentialSimpleKey()$/;"	f	class:YAML::Scanner
Instruction	lib/lua/src/llimits.h	/^typedef lu_int32 Instruction;$/;"	t
IntPoint	lib/lua/src/llimits.h	/^#define IntPoint(/;"	d
InterpreterModule	core/InterpreterModule.cpp	/^InterpreterModule::InterpreterModule(VisionCore* core) :$/;"	f	class:InterpreterModule
InterpreterModule	core/InterpreterModule.h	/^class InterpreterModule: public Module {$/;"	c
IntrinsicCalibrationWidget	build/include/tool/IntrinsicCalibrationWidget.cpp	/^IntrinsicCalibrationWidget::IntrinsicCalibrationWidget(QWidget* parent) : QWidget(parent), log_(0) {$/;"	f	class:IntrinsicCalibrationWidget
IntrinsicCalibrationWidget	build/include/tool/IntrinsicCalibrationWidget.h	/^class IntrinsicCalibrationWidget : public QWidget, public Ui_UTIntrinsicCalibrationWidget {$/;"	c
IntrinsicCalibrationWidget	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^IntrinsicCalibrationWidget::IntrinsicCalibrationWidget(QWidget* parent) : QWidget(parent), log_(0) {$/;"	f	class:IntrinsicCalibrationWidget
IntrinsicCalibrationWidget	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^class IntrinsicCalibrationWidget : public QWidget, public Ui_UTIntrinsicCalibrationWidget {$/;"	c
IntrinsicCalibrator	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^IntrinsicCalibrator::IntrinsicCalibrator(ICSettings settings) : settings_(settings) {$/;"	f	class:IntrinsicCalibrator
IntrinsicCalibrator	build/include/tool/calibration/IntrinsicCalibrator.h	/^class IntrinsicCalibrator {$/;"	c
IntrinsicCalibrator	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^IntrinsicCalibrator::IntrinsicCalibrator(ICSettings settings) : settings_(settings) {$/;"	f	class:IntrinsicCalibrator
IntrinsicCalibrator	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^class IntrinsicCalibrator {$/;"	c
IntroCharTypeOf	lib/yaml-cpp/src/stream.cpp	/^	inline UtfIntroCharType IntroCharTypeOf(std::istream::int_type ch)$/;"	f	namespace:YAML
InvalidAlias	lib/yaml-cpp/test/emittertests.cpp	/^		void InvalidAlias(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
InvalidAnchor	lib/yaml-cpp/test/emittertests.cpp	/^		void InvalidAnchor(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
InvalidBlockScalarIndentationIndicators	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST InvalidBlockScalarIndentationIndicators()$/;"	f	namespace:Test::Spec
InvalidEscapedCharacters	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST InvalidEscapedCharacters()$/;"	f	namespace:Test::Spec
InvalidImplicitKeys	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST InvalidImplicitKeys()$/;"	f	namespace:Test::Spec
InvalidRepeatedTagDirective	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST InvalidRepeatedTagDirective()$/;"	f	namespace:Test::Spec
InvalidRepeatedYAMLDirective	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST InvalidRepeatedYAMLDirective()$/;"	f	namespace:Test::Spec
InvalidScalar	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		InvalidScalar(const Mark& mark_)$/;"	f	class:YAML::InvalidScalar
InvalidScalar	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	class InvalidScalar: public RepresentationException {$/;"	c	namespace:YAML
InvalidTagShorthands	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST InvalidTagShorthands()$/;"	f	namespace:Test::Spec
InvalidVerbatimTags	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST InvalidVerbatimTags()$/;"	f	namespace:Test::Spec
Invalidate	lib/yaml-cpp/src/simplekey.cpp	/^	void Scanner::SimpleKey::Invalidate()$/;"	f	class:YAML::Scanner::SimpleKey
InvalidateSimpleKey	lib/yaml-cpp/src/simplekey.cpp	/^	void Scanner::InvalidateSimpleKey()$/;"	f	class:YAML::Scanner
InverseKinematics	core/kinematics/InverseKinematics.h	/^class InverseKinematics {$/;"	c
Invert22	core/common/NMatrix.cpp	/^NMatrix Invert22(const NMatrix& a)$/;"	f
Invoice	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST Invoice()$/;"	f	namespace:Test::Spec
IsAliased	lib/yaml-cpp/src/node.cpp	/^	bool Node::IsAliased() const$/;"	f	class:YAML::Node
IsAliased	lib/yaml-cpp/src/nodeownership.h	/^		bool IsAliased(const Node& node) const { return m_pOwner->_IsAliased(node); }$/;"	f	class:YAML::NodeOwnership
IsAnchorChar	lib/yaml-cpp/src/emitterutils.cpp	/^			bool IsAnchorChar(int ch) { \/\/ test for ns-anchor-char$/;"	f	namespace:YAML::Utils::__anon127
IsEntirely	lib/yaml-cpp/src/conversion.cpp	/^	bool IsEntirely(const std::string& str, T func)$/;"	f	namespace:__anon125
IsFlexibleCase	lib/yaml-cpp/src/conversion.cpp	/^	bool IsFlexibleCase(const std::string& str)$/;"	f	namespace:__anon125
IsInfinity	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	inline bool IsInfinity(const std::string& input) {$/;"	f	namespace:YAML
IsLower	lib/yaml-cpp/src/conversion.cpp	/^	bool IsLower(char ch) { return 'a' <= ch && ch <= 'z'; }$/;"	f	namespace:__anon125
IsNaN	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	inline bool IsNaN(const std::string& input) {$/;"	f	namespace:YAML
IsNegativeInfinity	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	inline bool IsNegativeInfinity(const std::string& input) {$/;"	f	namespace:YAML
IsNull	lib/yaml-cpp/src/null.cpp	/^	bool IsNull(const Node& node)$/;"	f	namespace:YAML
IsTrailingByte	lib/yaml-cpp/src/emitterutils.cpp	/^			bool IsTrailingByte(char ch) {$/;"	f	namespace:YAML::Utils::__anon127
IsUpper	lib/yaml-cpp/src/conversion.cpp	/^	bool IsUpper(char ch) { return 'A' <= ch && ch <= 'Z'; }$/;"	f	namespace:__anon125
IsValidPlainScalar	lib/yaml-cpp/src/emitterutils.cpp	/^			bool IsValidPlainScalar(const std::string& str, bool inFlow, bool allowOnlyAscii) {$/;"	f	namespace:YAML::Utils::__anon127
IsValidSource	lib/yaml-cpp/src/regeximpl.h	/^	inline bool RegEx::IsValidSource(const Source& source) const$/;"	f	class:YAML::RegEx
IsValidSource	lib/yaml-cpp/src/regeximpl.h	/^	inline bool RegEx::IsValidSource<StringCharSource>(const StringCharSource&source) const$/;"	f	class:YAML::RegEx
IsWhitespaceToBeEaten	lib/yaml-cpp/src/scanner.cpp	/^	bool Scanner::IsWhitespaceToBeEaten(char ch)$/;"	f	class:YAML::Scanner
IsolatedBehaviorSimulation	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^IBSim::IsolatedBehaviorSimulation(bool locMode, int player) : $/;"	f	class:IBSim
IsolatedBehaviorSimulation	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^class IsolatedBehaviorSimulation : public Simulation {$/;"	c
IsolatedBehaviorSimulation	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^IBSim::IsolatedBehaviorSimulation(bool locMode, int player) : $/;"	f	class:IBSim
IsolatedBehaviorSimulation	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^class IsolatedBehaviorSimulation : public Simulation {$/;"	c
IterPriv	lib/yaml-cpp/src/iterpriv.h	/^		IterPriv(): type(IT_NONE) {}$/;"	f	struct:YAML::IterPriv
IterPriv	lib/yaml-cpp/src/iterpriv.h	/^		IterPriv(std::map <Node *, Node *, ltnode>::const_iterator it): type(IT_MAP), mapIter(it) {}$/;"	f	struct:YAML::IterPriv
IterPriv	lib/yaml-cpp/src/iterpriv.h	/^		IterPriv(std::vector <Node *>::const_iterator it): type(IT_SEQ), seqIter(it) {}$/;"	f	struct:YAML::IterPriv
IterPriv	lib/yaml-cpp/src/iterpriv.h	/^	struct IterPriv$/;"	s	namespace:YAML
IterationEvent	core/python/state_machine.py	/^class IterationEvent(Event):$/;"	c
Iterator	lib/yaml-cpp/include/yaml-cpp/iterator.h	/^	class YAML_CPP_API Iterator$/;"	c	namespace:YAML
Iterator	lib/yaml-cpp/src/iterator.cpp	/^	Iterator::Iterator(): m_pData(new IterPriv)$/;"	f	class:YAML::Iterator
Iterator	lib/yaml-cpp/src/iterator.cpp	/^	Iterator::Iterator(const Iterator& rhs): m_pData(new IterPriv(*rhs.m_pData))$/;"	f	class:YAML::Iterator
Iterator	lib/yaml-cpp/src/iterator.cpp	/^	Iterator::Iterator(std::auto_ptr<IterPriv> pData): m_pData(pData)$/;"	f	class:YAML::Iterator
JCSettings	build/include/tool/calibration/JointCalibrator.cpp	/^JCSettings::JCSettings() {$/;"	f	class:JCSettings
JCSettings	build/include/tool/calibration/JointCalibrator.h	/^class JCSettings : public CalibratorSettings {$/;"	c
JCSettings	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^JCSettings::JCSettings() {$/;"	f	class:JCSettings
JCSettings	tools/UTNaoTool/calibration/JointCalibrator.h	/^class JCSettings : public CalibratorSettings {$/;"	c
JERSEY_HEIGHT	core/constants/VisionConstants.h	/^#define JERSEY_HEIGHT /;"	d
JERSEY_WIDTH	core/constants/VisionConstants.h	/^#define JERSEY_WIDTH /;"	d
JOINTBLOCK_	core/memory/JointBlock.h	/^#define JOINTBLOCK_$/;"	d
JOINTCOMMANDSMODE	build/include/tool/MotionGLWidget.h	/^    JOINTCOMMANDSMODE,$/;"	e	enum:MotionGLWidget::__anon1
JOINTCOMMANDSMODE	tools/UTNaoTool/MotionGLWidget.h	/^    JOINTCOMMANDSMODE,$/;"	e	enum:MotionGLWidget::__anon139
JOINTS_WINDOW_H	build/include/tool/JointsWindow.h	/^#define JOINTS_WINDOW_H$/;"	d
JOINTS_WINDOW_H	tools/UTNaoTool/JointsWindow.h	/^#define JOINTS_WINDOW_H$/;"	d
JOINTVALUESMODE	build/include/tool/MotionGLWidget.h	/^    JOINTVALUESMODE,$/;"	e	enum:MotionGLWidget::__anon1
JOINTVALUESMODE	tools/UTNaoTool/MotionGLWidget.h	/^    JOINTVALUESMODE,$/;"	e	enum:MotionGLWidget::__anon139
JOINT_CALIBRATOR_H	build/include/tool/calibration/JointCalibrator.h	/^#define JOINT_CALIBRATOR_H$/;"	d
JOINT_CALIBRATOR_H	tools/UTNaoTool/calibration/JointCalibrator.h	/^#define JOINT_CALIBRATOR_H$/;"	d
JOINT_COMMAND_BLOCK_	core/memory/JointCommandBlock.h	/^#define JOINT_COMMAND_BLOCK_$/;"	d
JOINT_EPSILON	core/motion/KickModule.cpp	/^#define JOINT_EPSILON /;"	d	file:
JOY_DEV	build/include/tool/joystickxbox.cpp	/^#define JOY_DEV /;"	d	file:
JOY_DEV	tools/UTNaoTool/joystickxbox.cpp	/^#define JOY_DEV /;"	d	file:
Jg	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateJacobianMatrix Jg;$/;"	m	class:ExtendedKalmanFilter
Jh	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  MeasurementJacobianMatrix Jh;$/;"	m	class:ExtendedKalmanFilter
Joint	core/common/RobotInfo.h	/^enum Joint {$/;"	g
JointAngle	core/motion/SpecialMotionParser.h	/^  JointAngle$/;"	e	enum:Motions::motionType
JointBlock	core/memory/JointBlock.h	/^  JointBlock() {$/;"	f	struct:JointBlock
JointBlock	core/memory/JointBlock.h	/^struct JointBlock : public MemoryBlock {$/;"	s
JointCalibrator	build/include/tool/calibration/JointCalibrator.cpp	/^JointCalibrator::JointCalibrator() : cache_(NULL), vblocks_(NULL), params_(NULL), processor_(NULL), cal_(NULL), thread_(NULL), memory_(NULL) {$/;"	f	class:JointCalibrator
JointCalibrator	build/include/tool/calibration/JointCalibrator.h	/^class JointCalibrator {$/;"	c
JointCalibrator	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^JointCalibrator::JointCalibrator() : cache_(NULL), vblocks_(NULL), params_(NULL), processor_(NULL), cal_(NULL), thread_(NULL), memory_(NULL) {$/;"	f	class:JointCalibrator
JointCalibrator	tools/UTNaoTool/calibration/JointCalibrator.h	/^class JointCalibrator {$/;"	c
JointCode	core/motion/rswalk2014/utils/body.hpp	/^   } JointCode;$/;"	t	namespace:RSJoints	typeref:enum:RSJoints::JointCodesEnum
JointCodesEnum	core/motion/rswalk2014/utils/body.hpp	/^   typedef enum JointCodesEnum {$/;"	g	namespace:RSJoints
JointCommandBlock	core/memory/JointCommandBlock.h	/^  JointCommandBlock()  {$/;"	f	struct:JointCommandBlock
JointCommandBlock	core/memory/JointCommandBlock.h	/^struct JointCommandBlock : public MemoryBlock {$/;"	s
JointDataset	build/include/tool/calibration/JointDataset.h	/^class JointDataset : public YamlConfig, public std::vector<JointMeasurement> {$/;"	c
JointDataset	tools/UTNaoTool/calibration/JointDataset.h	/^class JointDataset : public YamlConfig, public std::vector<JointMeasurement> {$/;"	c
JointMapping	core/motion/SpecialMotionParser.h	/^       static int JointMapping[NUM_JOINTS];$/;"	m	class:SpecialMotionParser
JointMeasurement	build/include/tool/calibration/JointDataset.h	/^class JointMeasurement : public YamlConfig {$/;"	c
JointMeasurement	tools/UTNaoTool/calibration/JointDataset.h	/^class JointMeasurement : public YamlConfig {$/;"	c
JointNames	core/common/RobotInfo.h	/^static std::string JointNames[] = {$/;"	v
JointRequest	core/common/RobotInfo.h	/^struct JointRequest$/;"	s
JointValues	core/motion/rswalk2014/types/JointValues.hpp	/^   JointValues() {$/;"	f	struct:JointValues
JointValues	core/motion/rswalk2014/types/JointValues.hpp	/^   JointValues(bool zero) {$/;"	f	struct:JointValues
JointValues	core/motion/rswalk2014/types/JointValues.hpp	/^struct JointValues {$/;"	s
Joints	core/common/RobotInfo.h	/^typedef float Joints[NUM_JOINTS];$/;"	t
JointsWindow	build/include/tool/JointsWindow.cpp	/^JointsWindow::JointsWindow() : QWidget() {$/;"	f	class:JointsWindow
JointsWindow	build/include/tool/JointsWindow.h	/^class JointsWindow : public QWidget {$/;"	c
JointsWindow	tools/UTNaoTool/JointsWindow.cpp	/^JointsWindow::JointsWindow() : QWidget() {$/;"	f	class:JointsWindow
JointsWindow	tools/UTNaoTool/JointsWindow.h	/^class JointsWindow : public QWidget {$/;"	c
K	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  KalmanMatrix K;$/;"	m	class:ExtendedKalmanFilter
K	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  KalmanMatrix K;$/;"	m	class:LinearKalmanFilter
K	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  KalmanMatrix K;$/;"	m	class:SRUnscentedKalmanFilter
K	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  KalmanMatrix K;$/;"	m	class:UnscentedKalmanFilter
K	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  KalmanMatrix K;$/;"	m	class:UnscentedKalmanFilter
KALMAN_FILTER_H	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^#define KALMAN_FILTER_H$/;"	d
KALMAN_FILTER_H	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^#define KALMAN_FILTER_H$/;"	d
KBx	lib/lua/src/lvm.c	/^#define KBx(/;"	d	file:
KEEP	lib/yaml-cpp/src/scanscalar.h	/^	enum CHOMP { STRIP = -1, CLIP, KEEP };$/;"	e	enum:YAML::CHOMP
KEEPER	core/common/Roles.h	/^  KEEPER = 1,$/;"	e	enum:Role
KEY	lib/yaml-cpp/src/token.h	/^			KEY,$/;"	e	enum:YAML::Token::TYPE
KEYFRAMEMODE	build/include/tool/MotionGLWidget.h	/^    KEYFRAMEMODE,$/;"	e	enum:MotionGLWidget::__anon1
KEYFRAMEMODE	tools/UTNaoTool/MotionGLWidget.h	/^    KEYFRAMEMODE,$/;"	e	enum:MotionGLWidget::__anon139
KEYWEAK	lib/lua/src/lgc.c	/^#define KEYWEAK /;"	d	file:
KEYWEAKBIT	lib/lua/src/lgc.h	/^#define KEYWEAKBIT	/;"	d
KEY_HOOK	lib/lua/src/ldblib.c	/^static const char KEY_HOOK = 'h';$/;"	v	file:
KEY_NOT_FOUND	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const KEY_NOT_FOUND          = "key not found";$/;"	m	namespace:YAML::ErrorMsg
KEY_NOT_FOUND_WITH_KEY	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		inline const std::string KEY_NOT_FOUND_WITH_KEY(const T& key, typename enable_if<is_numeric<T> >::type * = 0) {$/;"	f	namespace:YAML::ErrorMsg
KEY_NOT_FOUND_WITH_KEY	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		inline const std::string KEY_NOT_FOUND_WITH_KEY(const T&, typename disable_if<is_numeric<T> >::type * = 0) {$/;"	f	namespace:YAML::ErrorMsg
KEY_NOT_FOUND_WITH_KEY	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		inline const std::string KEY_NOT_FOUND_WITH_KEY(const std::string& key) {$/;"	f	namespace:YAML::ErrorMsg
KF	core/localization/LocalizationModule.h	/^typedef ExtendedKalmanFilter<4, 4, 1> KF;$/;"	t
KF	kalman_filters/src/ekf_test.cpp	/^typedef ExtendedKalmanFilter<2, 2, 1> KF;$/;"	t	file:
KF	kalman_filters/src/ukf_test.cpp	/^typedef UnscentedKalmanFilter<2, 2, 1> KF;$/;"	t	file:
KICK	core/memory/BehaviorBlock.h	/^    KICK,$/;"	e	enum:WalkMode::Mode
KICK	core/memory/KickEngineBlock.h	/^    KICK,$/;"	e	enum:KickEngineBlock::Kick_State
KICK	core/motion/rswalk2014/Walk2014Generator.hpp	/^      KICK         = 5,$/;"	e	enum:Walk2014Generator::Walk2014Option
KICK	core/motion/rswalk2014/types/ActionCommand.hpp	/^         KICK,                            \/\/6$/;"	e	enum:ActionCommand::Body::ActionType
KICK1	core/motion/KickParameters.h	/^    KICK1,$/;"	e	enum:KickState::State
KICK2	core/motion/KickParameters.h	/^    KICK2,$/;"	e	enum:KickState::State
KICKENGINEBLOCK_	core/memory/KickEngineBlock.h	/^#define KICKENGINEBLOCK_$/;"	d
KICKMODE	build/include/tool/MotionGLWidget.h	/^    KICKMODE,$/;"	e	enum:MotionGLWidget::__anon1
KICKMODE	tools/UTNaoTool/MotionGLWidget.h	/^    KICKMODE,$/;"	e	enum:MotionGLWidget::__anon139
KICKMODULEBLOCK_6UYSDNAO	core/memory/KickModuleBlock.h	/^#define KICKMODULEBLOCK_6UYSDNAO$/;"	d
KICKPARAMBLOCK_FD54EE88	core/memory/KickParamBlock.h	/^#define KICKPARAMBLOCK_FD54EE88$/;"	d
KICKPARAMETERS	core/motion/KickParameters.h	/^#define KICKPARAMETERS$/;"	d
KICKREQUESTBLOCK_WDRQVCMO	core/memory/KickRequestBlock.h	/^#define KICKREQUESTBLOCK_WDRQVCMO$/;"	d
KICKSIMMODE	build/include/tool/MotionGLWidget.h	/^    KICKSIMMODE,$/;"	e	enum:MotionGLWidget::__anon1
KICKSIMMODE	tools/UTNaoTool/MotionGLWidget.h	/^    KICKSIMMODE,$/;"	e	enum:MotionGLWidget::__anon139
KICKS_H	core/common/Kicks.h	/^#define KICKS_H$/;"	d
KICK_LEAN	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define KICK_LEAN /;"	d	file:
KICK_REGION_SIZE_X	core/memory/BehaviorBlock.h	/^const float KICK_REGION_SIZE_X = (FIELD_X \/ NUM_KICK_REGIONS_X);$/;"	v
KICK_REGION_SIZE_Y	core/memory/BehaviorBlock.h	/^const float KICK_REGION_SIZE_Y = (FIELD_Y \/ NUM_KICK_REGIONS_Y);$/;"	v
KICK_STEP_HEIGHT	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define KICK_STEP_HEIGHT /;"	d	file:
KINEMATICS_MODULE_H	core/kinematics/KinematicsModule.h	/^#define KINEMATICS_MODULE_H$/;"	d
KNEE_PITCH_RANGE	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float KNEE_PITCH_RANGE = DEG2RAD(60);                \/\/ the knee pitch range from standing to crouching$/;"	v
KalmanMatrix	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumMeasurements> KalmanMatrix;$/;"	t	class:ExtendedKalmanFilter
KalmanMatrix	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumMeasurements> KalmanMatrix;$/;"	t	class:LinearKalmanFilter
KalmanMatrix	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumMeasurements> KalmanMatrix;$/;"	t	class:SRUnscentedKalmanFilter
KalmanMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumMeasurements> KalmanMatrix;$/;"	t	class:UnscentedKalmanFilter
KalmanMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumMeasurements> KalmanMatrix;$/;"	t	class:UnscentedKalmanFilter
KeeperDiveGoingDown0	core/python/cfgpose.py	/^KeeperDiveGoingDown0 = dict()$/;"	v
KeeperDiveGoingDown0Right	core/python/cfgpose.py	/^KeeperDiveGoingDown0Right = dict()$/;"	v
KeeperDiveGoingDown1	core/python/cfgpose.py	/^KeeperDiveGoingDown1 = dict()$/;"	v
KeeperDiveGoingDown1Right	core/python/cfgpose.py	/^KeeperDiveGoingDown1Right = dict()$/;"	v
KeeperDiveGoingDown2	core/python/cfgpose.py	/^KeeperDiveGoingDown2 = dict()$/;"	v
KeeperDiveGoingDown2Right	core/python/cfgpose.py	/^KeeperDiveGoingDown2Right = dict()$/;"	v
KeeperDiveGoingDown3	core/python/cfgpose.py	/^KeeperDiveGoingDown3 = dict()$/;"	v
KeeperDiveGoingDown3Right	core/python/cfgpose.py	/^KeeperDiveGoingDown3Right = dict()$/;"	v
KeeperDiveOnSide	core/python/cfgpose.py	/^KeeperDiveOnSide = dict()$/;"	v
KeeperDiveOnSideRight	core/python/cfgpose.py	/^KeeperDiveOnSideRight = dict()$/;"	v
KeeperStand	core/python/cfgstiff.py	/^KeeperStand = [0] * core.NUM_JOINTS$/;"	v
Key	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Key,$/;"	e	enum:YAML::EMITTER_MANIP
Key	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Key() {$/;"	f	namespace:YAML::Exp
KeyInFlow	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& KeyInFlow() {$/;"	f	namespace:YAML::Exp
KeyNotFound	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		KeyNotFound(const Mark& mark_, const T& key_)$/;"	f	class:YAML::KeyNotFound
KeyNotFound	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	class KeyNotFound: public RepresentationException {$/;"	c	namespace:YAML
KeyNotFound	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool KeyNotFound()$/;"	f	namespace:Test::Parser
Keyframe	core/common/Keyframe.cpp	/^Keyframe::Keyframe(float joints[NUM_JOINTS], int frames) : frames(frames) { $/;"	f	class:Keyframe
Keyframe	core/common/Keyframe.cpp	/^Keyframe::Keyframe(string name) : name(name) {$/;"	f	class:Keyframe
Keyframe	core/common/Keyframe.h	/^class Keyframe : public YamlConfig {$/;"	c
KeyframeConfig	build/include/tool/KeyframeConfig.cpp	/^KeyframeConfig::KeyframeConfig() : base(SupportBase::TorsoBase) {$/;"	f	class:KeyframeConfig
KeyframeConfig	build/include/tool/KeyframeConfig.h	/^class KeyframeConfig : public YamlConfig {$/;"	c
KeyframeConfig	tools/UTNaoTool/KeyframeConfig.cpp	/^KeyframeConfig::KeyframeConfig() : base(SupportBase::TorsoBase) {$/;"	f	class:KeyframeConfig
KeyframeConfig	tools/UTNaoTool/KeyframeConfig.h	/^class KeyframeConfig : public YamlConfig {$/;"	c
KeyframeItem	build/include/tool/KeyframeWidget.h	/^    KeyframeItem(QListWidget* parent, Keyframe keyframe, int row = -1) : QWidget(parent), keyframe_(keyframe) {$/;"	f	class:KeyframeItem
KeyframeItem	build/include/tool/KeyframeWidget.h	/^class KeyframeItem : public QWidget, public Ui_KeyframeItem {$/;"	c
KeyframeItem	tools/UTNaoTool/KeyframeWidget.h	/^    KeyframeItem(QListWidget* parent, Keyframe keyframe, int row = -1) : QWidget(parent), keyframe_(keyframe) {$/;"	f	class:KeyframeItem
KeyframeItem	tools/UTNaoTool/KeyframeWidget.h	/^class KeyframeItem : public QWidget, public Ui_KeyframeItem {$/;"	c
KeyframeSequence	core/common/Keyframe.h	/^class KeyframeSequence : public YamlConfig {$/;"	c
KeyframeWidget	build/include/tool/KeyframeWidget.cpp	/^KeyframeWidget::KeyframeWidget(QWidget* parent) : ConfigWidget(parent) {$/;"	f	class:KeyframeWidget
KeyframeWidget	build/include/tool/KeyframeWidget.h	/^class KeyframeWidget : public ConfigWidget, public Ui_KeyframeWidget {$/;"	c
KeyframeWidget	tools/UTNaoTool/KeyframeWidget.cpp	/^KeyframeWidget::KeyframeWidget(QWidget* parent) : ConfigWidget(parent) {$/;"	f	class:KeyframeWidget
KeyframeWidget	tools/UTNaoTool/KeyframeWidget.h	/^class KeyframeWidget : public ConfigWidget, public Ui_KeyframeWidget {$/;"	c
Keys	lib/yaml-cpp/src/exp.h	/^	namespace Keys$/;"	n	namespace:YAML
Kick	core/memory/KickRequestBlock.h	/^class Kick { \/\/ class for lua access, otherwise namespace$/;"	c
Kick	core/python/behaviors/Movement.py	/^  class Kick(Node):$/;"	c	class:Playing
Kick	core/python/behaviors/custom_kick.py	/^  class Kick(Node):$/;"	c	class:Playing
Kick	core/python/behaviors/kick.py	/^  class Kick(Node):$/;"	c	class:Playing
Kick	core/python/behaviors/pid_distance_angle.py	/^  class Kick(Node):$/;"	c	class:Playing
KickEngineBlock	core/memory/KickEngineBlock.h	/^  KickEngineBlock():$/;"	f	struct:KickEngineBlock
KickEngineBlock	core/memory/KickEngineBlock.h	/^struct KickEngineBlock : public MemoryBlock {$/;"	s
KickEvaluation	core/memory/BehaviorBlock.h	/^  KickEvaluation(){$/;"	f	struct:KickEvaluation
KickEvaluation	core/memory/BehaviorBlock.h	/^struct KickEvaluation {$/;"	s
KickModule	core/motion/KickModule.cpp	/^KickModule::KickModule() : state_(Finished), sequence_(NULL) { }$/;"	f	class:KickModule
KickModule	core/motion/KickModule.h	/^class KickModule : public Module {$/;"	c
KickModuleBlock	core/memory/KickModuleBlock.h	/^  KickModuleBlock():$/;"	f	struct:KickModuleBlock
KickModuleBlock	core/memory/KickModuleBlock.h	/^struct KickModuleBlock : public MemoryBlock {$/;"	s
KickParamBlock	core/memory/KickParamBlock.h	/^  KickParamBlock():$/;"	f	struct:KickParamBlock
KickParamBlock	core/memory/KickParamBlock.h	/^struct KickParamBlock : public MemoryBlock {$/;"	s
KickParameters	core/motion/KickParameters.h	/^  KickParameters():$/;"	f	struct:KickParameters
KickParameters	core/motion/KickParameters.h	/^struct KickParameters {$/;"	s
KickRequestBlock	core/memory/KickRequestBlock.h	/^  KickRequestBlock():$/;"	f	struct:KickRequestBlock
KickRequestBlock	core/memory/KickRequestBlock.h	/^struct KickRequestBlock : public MemoryBlock {$/;"	s
KickState	core/motion/KickParameters.h	/^class KickState {$/;"	c
KickStateInfo	core/motion/KickParameters.h	/^struct KickStateInfo {$/;"	s
KickStrategy	core/memory/BehaviorParamBlock.h	/^  KickStrategy(){}$/;"	f	struct:KickStrategy
KickStrategy	core/memory/BehaviorParamBlock.h	/^struct KickStrategy {$/;"	s
Kick_Spec	core/memory/KickEngineBlock.h	/^  enum Kick_Spec {$/;"	g	struct:KickEngineBlock
Kick_State	core/memory/KickEngineBlock.h	/^  enum Kick_State {$/;"	g	struct:KickEngineBlock
Kinematics	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::Kinematics() {$/;"	f	class:Kinematics
Kinematics	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^class Kinematics {$/;"	c
KinematicsModule	core/kinematics/KinematicsModule.h	/^class KinematicsModule: public Module {$/;"	c
KinematicsModuleLog	core/memory/TextLogger.h	/^  KinematicsModuleLog,$/;"	e	enum:modulesTypes
KneePitchSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float KneePitchSpeed       = MOTOR1_REDUCTIONB_RAD;$/;"	m	namespace:RSJoints::Radians
L	core/sensor/InertialFilter.h	/^  NMatrix L;$/;"	m	class:InertialFilter
L	lib/lua/src/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer
L	lib/lua/src/ldump.c	/^ lua_State* L;$/;"	m	struct:__anon85	file:
L	lib/lua/src/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State
L	lib/lua/src/lparser.h	/^  struct lua_State *L;  \/* copy of the Lua state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::lua_State
L	lib/lua/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	lib/lua/src/lundump.c	/^ lua_State* L;$/;"	m	struct:__anon100	file:
L	lib/lua/src/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio
L	particle_filters/RMCL_particle_filter.hpp	/^    ParticleLabelSet L;$/;"	m	class:RMCLParticleFilter
LANDMARK_OFFSET	core/common/WorldObject.h	/^const int LANDMARK_OFFSET = WO_CENTER_CIRCLE;$/;"	v
LAST_ANGLE_SENSOR	core/common/RobotInfo.h	/^static int LAST_ANGLE_SENSOR = angleZ;$/;"	v
LAST_TAG	lib/lua/src/lobject.h	/^#define LAST_TAG	/;"	d
LAWidgetItem	build/include/tool/LogWidget.cpp	/^LAWidgetItem::LAWidgetItem(LocalizationAnnotation* la) {$/;"	f	class:LAWidgetItem
LAWidgetItem	build/include/tool/LogWidget.h	/^class LAWidgetItem : public QListWidgetItem {$/;"	c
LAWidgetItem	tools/UTNaoTool/LogWidget.cpp	/^LAWidgetItem::LAWidgetItem(LocalizationAnnotation* la) {$/;"	f	class:LAWidgetItem
LAWidgetItem	tools/UTNaoTool/LogWidget.h	/^class LAWidgetItem : public QListWidgetItem {$/;"	c
LAnklePitch	core/common/RobotInfo.h	/^  LAnklePitch,$/;"	e	enum:Joint
LAnklePitch	core/motion/rswalk2014/utils/body.hpp	/^      LAnklePitch, \/\/12$/;"	e	enum:RSJoints::JointCodesEnum
LAnklePitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LAnklePitch_Max      = DEG2RAD(52.86);$/;"	m	namespace:RSJoints::Radians
LAnklePitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LAnklePitch_Min      = DEG2RAD(-68.15);$/;"	m	namespace:RSJoints::Radians
LAnkleRoll	core/common/RobotInfo.h	/^  LAnkleRoll,$/;"	e	enum:Joint
LAnkleRoll	core/motion/rswalk2014/utils/body.hpp	/^      LAnkleRoll, \/\/13$/;"	e	enum:RSJoints::JointCodesEnum
LAnkleRoll_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LAnkleRoll_Max       = DEG2RAD(44.06);$/;"	m	namespace:RSJoints::Radians
LAnkleRoll_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LAnkleRoll_Min       = DEG2RAD(-22.79);$/;"	m	namespace:RSJoints::Radians
LClosure	lib/lua/src/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	lib/lua/src/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LDCONFIG	lib/zlib/Makefile	/^LDCONFIG=ldconfig$/;"	m
LDFLAGS	lib/zlib/Makefile	/^LDFLAGS= -L. libz.a$/;"	m
LDSHARED	lib/zlib/Makefile	/^LDSHARED=gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map$/;"	m
LDSHAREDLIBC	lib/zlib/Makefile	/^LDSHAREDLIBC=-lc$/;"	m
LED	core/common/RobotInfo.h	/^enum LED {$/;"	g
LED	core/motion/rswalk2014/types/ActionCommand.hpp	/^      LED()$/;"	f	struct:ActionCommand::LED
LED	core/motion/rswalk2014/types/ActionCommand.hpp	/^      LED(rgb leye, rgb reye = rgb(true, true, true), rgb cb = rgb(true, true, true),$/;"	f	struct:ActionCommand::LED
LED	core/motion/rswalk2014/types/ActionCommand.hpp	/^   struct LED {$/;"	s	namespace:ActionCommand
LEDBLOCK_	core/memory/LEDBlock.h	/^#define LEDBLOCK_$/;"	d
LEDBlock	core/memory/LEDBlock.h	/^  LEDBlock()  {$/;"	f	struct:LEDBlock
LEDBlock	core/memory/LEDBlock.h	/^struct LEDBlock : public MemoryBlock {$/;"	s
LEDCode	core/motion/rswalk2014/utils/body.hpp	/^   enum LEDCode {$/;"	g	namespace:LEDs
LEDModule	core/lights/LEDModule.cpp	/^LEDModule::LEDModule() {$/;"	f	class:LEDModule
LEDModule	core/lights/LEDModule.h	/^class LEDModule: public Module {$/;"	c
LEDS_PER_EYE	core/common/RobotInfo.h	/^const int LEDS_PER_EYE = FaceRedLeft315 - FaceRedLeft0 + 1;$/;"	v
LED_MODULE_H	core/lights/LEDModule.h	/^#define LED_MODULE_H$/;"	d
LEDs	core/motion/rswalk2014/utils/body.hpp	/^namespace LEDs {$/;"	n
LEFT	core/memory/BehaviorBlock.h	/^    LEFT,$/;"	e	enum:Dive::diveTypes
LEFT	core/memory/KickRequestBlock.h	/^    LEFT,$/;"	e	enum:Kick::Leg
LEFT	core/memory/OdometryBlock.h	/^    LEFT,$/;"	e	enum:Fall::FallDir
LEFT	core/motion/rswalk2014/types/ActionCommand.hpp	/^         LEFT = 0,$/;"	e	enum:ActionCommand::Body::Foot
LEFT	core/motion/rswalk2014/utils/body.hpp	/^   const int LEFT = 0;$/;"	m	namespace:Sonar
LEFTLEG	core/common/Kicks.h	/^#define LEFTLEG /;"	d
LEFT_CHAIN	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^         LEFT_CHAIN = 0,$/;"	e	enum:Kinematics::Chain
LEFT_END	core/motion/rswalk2014/utils/body.hpp	/^   const float LEFT_END = DEG2RAD(70.f);$/;"	m	namespace:Sonar
LEFT_FOOT_BL	core/memory/RobotVisionBlock.h	/^    LEFT_FOOT_BL,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
LEFT_FOOT_BL	core/vision/enums/VisionBodyPoints.h	/^  LEFT_FOOT_BL,$/;"	e	enum:VisionBodyPoints
LEFT_FOOT_BR	core/memory/RobotVisionBlock.h	/^    LEFT_FOOT_BR,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
LEFT_FOOT_BR	core/vision/enums/VisionBodyPoints.h	/^  LEFT_FOOT_BR,$/;"	e	enum:VisionBodyPoints
LEFT_FOOT_TL	core/memory/RobotVisionBlock.h	/^    LEFT_FOOT_TL,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
LEFT_FOOT_TL	core/vision/enums/VisionBodyPoints.h	/^  LEFT_FOOT_TL,$/;"	e	enum:VisionBodyPoints
LEFT_FOOT_TR	core/memory/RobotVisionBlock.h	/^    LEFT_FOOT_TR,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
LEFT_FOOT_TR	core/vision/enums/VisionBodyPoints.h	/^  LEFT_FOOT_TR,$/;"	e	enum:VisionBodyPoints
LEFT_GAP_DRIBBLE	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^#define LEFT_GAP_DRIBBLE /;"	d	file:
LEFT_GAP_KICK	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^#define LEFT_GAP_KICK /;"	d	file:
LEFT_SHOULDER	core/memory/RobotVisionBlock.h	/^    LEFT_SHOULDER,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
LEFT_SHOULDER	core/vision/enums/VisionBodyPoints.h	/^  LEFT_SHOULDER,$/;"	e	enum:VisionBodyPoints
LEFT_START	core/motion/rswalk2014/utils/body.hpp	/^   const float LEFT_START = DEG2RAD(-10.f);$/;"	m	namespace:Sonar
LEFT_THRESHOLD	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^#define LEFT_THRESHOLD /;"	d	file:
LEFT_TO_LEFT	core/sonar/SonarModule.h	/^    LEFT_TO_LEFT = 0,$/;"	e	enum:Sonar::Command
LEFT_TO_RIGHT	core/sonar/SonarModule.h	/^    LEFT_TO_RIGHT = 1,$/;"	e	enum:Sonar::Command
LEG_DH_CHAIN_LEN	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^#define LEG_DH_CHAIN_LEN /;"	d
LEG_JOINT_FIRST	core/common/RobotInfo.h	/^  LEG_JOINT_FIRST = LHipYawPitch,$/;"	e	enum:__anon9
LEG_JOINT_LAST	core/common/RobotInfo.h	/^  LEG_JOINT_LAST = RAnkleRoll,$/;"	e	enum:__anon9
LEN	lib/zlib/inflate.h	/^            LEN,        \/* i: waiting for length\/lit\/eob code *\/$/;"	e	enum:__anon136
LENEXT	lib/zlib/inflate.h	/^            LENEXT,     \/* i: waiting for length extra bits *\/$/;"	e	enum:__anon136
LENGTH	lib/zlib/inflate.h	/^    LENGTH,     \/* i: waiting for 32-bit length (gzip) *\/$/;"	e	enum:__anon136
LENGTH_CODES	lib/zlib/deflate.h	/^#define LENGTH_CODES /;"	d
LENLENS	lib/zlib/inflate.h	/^        LENLENS,    \/* i: waiting for code length code lengths *\/$/;"	e	enum:__anon136
LENS	lib/zlib/inftrees.h	/^    LENS,$/;"	e	enum:__anon138
LEN_	lib/zlib/inflate.h	/^            LEN_,       \/* i: same as LEN below, but only first time in *\/$/;"	e	enum:__anon136
LEVELS1	lib/lua/src/ldblib.c	/^#define LEVELS1	/;"	d	file:
LEVELS2	lib/lua/src/ldblib.c	/^#define LEVELS2	/;"	d	file:
LElbowRoll	core/common/RobotInfo.h	/^  LElbowRoll,$/;"	e	enum:Joint
LElbowRoll	core/motion/rswalk2014/utils/body.hpp	/^      LElbowRoll, \/\/ 5$/;"	e	enum:RSJoints::JointCodesEnum
LElbowRoll_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LElbowRoll_Max       = DEG2RAD(-2);$/;"	m	namespace:RSJoints::Radians
LElbowRoll_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LElbowRoll_Min       = DEG2RAD(-88.5);$/;"	m	namespace:RSJoints::Radians
LElbowYaw	core/common/RobotInfo.h	/^  LElbowYaw,$/;"	e	enum:Joint
LElbowYaw	core/motion/rswalk2014/utils/body.hpp	/^      LElbowYaw, \/\/ 4$/;"	e	enum:RSJoints::JointCodesEnum
LElbowYaw_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LElbowYaw_Max        = DEG2RAD(119.5);$/;"	m	namespace:RSJoints::Radians
LElbowYaw_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LElbowYaw_Min        = DEG2RAD(-119.5);$/;"	m	namespace:RSJoints::Radians
LFIELDS_PER_FLUSH	lib/lua/src/lopcodes.h	/^#define LFIELDS_PER_FLUSH	/;"	d
LFootBlue	core/common/RobotInfo.h	/^  LFootBlue,$/;"	e	enum:LED
LFootGreen	core/common/RobotInfo.h	/^  LFootGreen,$/;"	e	enum:LED
LFootRed	core/common/RobotInfo.h	/^  LFootRed,$/;"	e	enum:LED
LFoot_Bumper_Left	core/motion/rswalk2014/utils/body.hpp	/^      LFoot_Bumper_Left, \/\/20$/;"	e	enum:RSSensors::SensorCodesEnum
LFoot_Bumper_Right	core/motion/rswalk2014/utils/body.hpp	/^      LFoot_Bumper_Right, \/\/21$/;"	e	enum:RSSensors::SensorCodesEnum
LFoot_FSR_CenterOfPressure_X	core/motion/rswalk2014/utils/body.hpp	/^      LFoot_FSR_CenterOfPressure_X, \/\/12$/;"	e	enum:RSSensors::SensorCodesEnum
LFoot_FSR_CenterOfPressure_Y	core/motion/rswalk2014/utils/body.hpp	/^      LFoot_FSR_CenterOfPressure_Y, \/\/13$/;"	e	enum:RSSensors::SensorCodesEnum
LFoot_FSR_FrontLeft	core/motion/rswalk2014/utils/body.hpp	/^      LFoot_FSR_FrontLeft, \/\/8$/;"	e	enum:RSSensors::SensorCodesEnum
LFoot_FSR_FrontRight	core/motion/rswalk2014/utils/body.hpp	/^      LFoot_FSR_FrontRight, \/\/9$/;"	e	enum:RSSensors::SensorCodesEnum
LFoot_FSR_RearLeft	core/motion/rswalk2014/utils/body.hpp	/^      LFoot_FSR_RearLeft, \/\/10$/;"	e	enum:RSSensors::SensorCodesEnum
LFoot_FSR_RearRight	core/motion/rswalk2014/utils/body.hpp	/^      LFoot_FSR_RearRight, \/\/11$/;"	e	enum:RSSensors::SensorCodesEnum
LG	lib/lua/src/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	lib/lua/src/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LHS_assign	lib/lua/src/lparser.c	/^struct LHS_assign {$/;"	s	file:
LHand	core/motion/rswalk2014/utils/body.hpp	/^      LHand, \/\/ 7$/;"	e	enum:RSJoints::JointCodesEnum
LHand_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LHand_Max            = 1.0;$/;"	m	namespace:RSJoints::Radians
LHand_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LHand_Min            = 0.0;$/;"	m	namespace:RSJoints::Radians
LHead0	core/common/RobotInfo.h	/^  LHead0,$/;"	e	enum:LED
LHead1	core/common/RobotInfo.h	/^  LHead1,$/;"	e	enum:LED
LHead2	core/common/RobotInfo.h	/^  LHead2,$/;"	e	enum:LED
LHead3	core/common/RobotInfo.h	/^  LHead3,$/;"	e	enum:LED
LHead4	core/common/RobotInfo.h	/^  LHead4,$/;"	e	enum:LED
LHead5	core/common/RobotInfo.h	/^  LHead5,$/;"	e	enum:LED
LHipPitch	core/common/RobotInfo.h	/^  LHipPitch,$/;"	e	enum:Joint
LHipPitch	core/motion/rswalk2014/utils/body.hpp	/^      LHipPitch, \/\/ 10$/;"	e	enum:RSJoints::JointCodesEnum
LHipPitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LHipPitch_Max        = DEG2RAD(27.73);$/;"	m	namespace:RSJoints::Radians
LHipPitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LHipPitch_Min        = DEG2RAD(-101.63);$/;"	m	namespace:RSJoints::Radians
LHipRoll	core/common/RobotInfo.h	/^  LHipRoll,$/;"	e	enum:Joint
LHipRoll	core/motion/rswalk2014/utils/body.hpp	/^      LHipRoll, \/\/9$/;"	e	enum:RSJoints::JointCodesEnum
LHipRoll_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LHipRoll_Max         = DEG2RAD(45.29);$/;"	m	namespace:RSJoints::Radians
LHipRoll_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LHipRoll_Min         = DEG2RAD(-21.74);$/;"	m	namespace:RSJoints::Radians
LHipYawPitch	core/common/RobotInfo.h	/^  LHipYawPitch,$/;"	e	enum:Joint
LHipYawPitch	core/motion/rswalk2014/utils/body.hpp	/^      LHipYawPitch, \/\/8$/;"	e	enum:RSJoints::JointCodesEnum
LHipYawPitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LHipYawPitch_Max     = DEG2RAD(42.44);$/;"	m	namespace:RSJoints::Radians
LHipYawPitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LHipYawPitch_Min     = DEG2RAD(-65.62);$/;"	m	namespace:RSJoints::Radians
LIB	lib/lua/etc/Makefile	/^LIB= $(TOP)\/src$/;"	m
LIBPREFIX	lib/lua/src/loadlib.c	/^#define LIBPREFIX	/;"	d	file:
LIBS	lib/lua/src/Makefile	/^LIBS= -lm $(MYLIBS)$/;"	m
LIBS	lib/zlib/Makefile	/^LIBS=$(STATICLIB) $(SHAREDLIBV)$/;"	m
LIB_FAIL	lib/lua/src/loadlib.c	/^#define LIB_FAIL	/;"	d	file:
LIB_FAIL	lib/lua/src/loadlib.c	/^#undef LIB_FAIL$/;"	d	file:
LIB_I2CDEV_H	core/imageCapture/i2c-dev.h	/^#define LIB_I2CDEV_H$/;"	d
LIB_O	lib/lua/src/Makefile	/^LIB_O=	lauxlib.o lbaselib.o ldblib.o liolib.o lmathlib.o loslib.o ltablib.o \\$/;"	m
LIFE	lib/lua/test/life.lua	/^function LIFE(w,h)$/;"	f
LIFT	core/motion/KickParameters.h	/^    LIFT,$/;"	e	enum:KickState::State
LIGHT_GREY	vision_testing/src/vision_testing.cpp	/^  LIGHT_GREY,$/;"	e	enum:FullColor	file:
LIMIT	lib/lua/src/lauxlib.c	/^#define LIMIT	/;"	d	file:
LINEAR	kalman_filters/src/ekf_test.cpp	/^  LINEAR,$/;"	e	enum:TestType	file:
LINEPOINT_H	core/vision/structures/LinePoint.h	/^#define LINEPOINT_H$/;"	d
LINESTACKINFO_H	core/vision/structures/LineStackInfo.h	/^#define LINESTACKINFO_H$/;"	d
LINESTACKRET_H	core/vision/structures/LineStackRet.h	/^#define LINESTACKRET_H$/;"	d
LINE_OFFSET	core/common/WorldObject.h	/^const int LINE_OFFSET =  WO_OPP_GOAL_LINE;$/;"	v
LINE_UP	core/motion/rswalk2014/types/ActionCommand.hpp	/^         LINE_UP,                         \/\/25$/;"	e	enum:ActionCommand::Body::ActionType
LINE_WIDTH	core/common/Bowdoin14Field.h	/^const float LINE_WIDTH = 50;$/;"	v
LINE_WIDTH	core/common/Field.h	/^const float LINE_WIDTH = 50;$/;"	v
LINE_WIDTH	core/common/RC2013Field.h	/^const float LINE_WIDTH = 49;$/;"	v
LINE_WIDTH	core/common/UTField.h	/^const float LINE_WIDTH = 50;$/;"	v
LINK_LIBS	install/install_naoqi	/^LINK_LIBS = 'naoqi-link-libs-14.04.tar.gz'$/;"	v
LIT	lib/zlib/inflate.h	/^            LIT,        \/* o: waiting for output space to write literal *\/$/;"	e	enum:__anon136
LITERALS	lib/zlib/deflate.h	/^#define LITERALS /;"	d
LKneePitch	core/common/RobotInfo.h	/^  LKneePitch,$/;"	e	enum:Joint
LKneePitch	core/motion/rswalk2014/utils/body.hpp	/^      LKneePitch, \/\/11$/;"	e	enum:RSJoints::JointCodesEnum
LKneePitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LKneePitch_Max       = DEG2RAD(121.04);$/;"	m	namespace:RSJoints::Radians
LKneePitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LKneePitch_Min       = DEG2RAD(-5.29);$/;"	m	namespace:RSJoints::Radians
LMAX_PARAMS	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^#define LMAX_PARAMS(/;"	d	file:
LMAX_PARAMS	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^#define LMAX_PARAMS(/;"	d	file:
LMIN_PARAMS	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^#define LMIN_PARAMS(/;"	d	file:
LMIN_PARAMS	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^#define LMIN_PARAMS(/;"	d	file:
LOAD	lib/zlib/infback.c	/^#define LOAD(/;"	d	file:
LOAD	lib/zlib/inflate.c	/^#define LOAD(/;"	d	file:
LOCAL	lib/yaml-cpp/src/emitterstate.h	/^		LOCAL,$/;"	e	enum:YAML::FMT_SCOPE
LOCALIZATION_GL_H	build/include/tool/UTOpenGL/LocalizationGL.h	/^#define LOCALIZATION_GL_H$/;"	d
LOCALIZATION_GL_H	tools/UTNaoTool/UTOpenGL/LocalizationGL.h	/^#define LOCALIZATION_GL_H$/;"	d
LOCK_CH9LJB3R	core/memory/Lock.h	/^#define LOCK_CH9LJB3R$/;"	d
LOCK_MOTION	core/memory/Lock.h	/^#define LOCK_MOTION /;"	d
LOCK_MOTION_VISION	core/memory/Lock.h	/^#define LOCK_MOTION_VISION /;"	d
LOCK_VISION	core/memory/Lock.h	/^#define LOCK_VISION /;"	d
LOC_INVALID_DELAY	core/communications/CommunicationModule.cpp	/^#define LOC_INVALID_DELAY /;"	d	file:
LOGEDITOR_WINDOW_H	build/include/tool/LogEditorWindow.h	/^#define LOGEDITOR_WINDOW_H$/;"	d
LOGEDITOR_WINDOW_H	tools/UTNaoTool/LogEditorWindow.h	/^#define LOGEDITOR_WINDOW_H$/;"	d
LOGGER_3AB7OTVI	core/memory/Logger.h	/^#define LOGGER_3AB7OTVI$/;"	d
LOGREADER_ZN55JIC8	core/memory/LogReader.h	/^#define LOGREADER_ZN55JIC8$/;"	d
LOGSELECT_WINDOW_H	build/include/tool/LogSelectWindow.h	/^#define LOGSELECT_WINDOW_H$/;"	d
LOGSELECT_WINDOW_H	tools/UTNaoTool/LogSelectWindow.h	/^#define LOGSELECT_WINDOW_H$/;"	d
LOG_H	core/memory/Log.h	/^#define LOG_H$/;"	d
LOG_METADATA_H	core/memory/LogMetadata.h	/^#define LOG_METADATA_H$/;"	d
LOG_WINDOW_H	build/include/tool/LogWindow.h	/^#define LOG_WINDOW_H$/;"	d
LOG_WINDOW_H	tools/UTNaoTool/LogWindow.h	/^#define LOG_WINDOW_H$/;"	d
LONG_RANGE_APPROACH	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^      LONG_RANGE_APPROACH,$/;"	e	enum:IsolatedBehaviorSimulation::ApproachState
LONG_RANGE_APPROACH	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^      LONG_RANGE_APPROACH,$/;"	e	enum:IsolatedBehaviorSimulation::ApproachState
LOOK	lib/zlib/gzguts.h	/^#define LOOK /;"	d
LR_DISTANCE_DIFF_V4	core/sonar/SonarModule.h	/^  const float LR_DISTANCE_DIFF_V4 = 0.2;$/;"	m	namespace:Sonar
LR_DISTANCE_DIFF_V5	core/sonar/SonarModule.h	/^  const float LR_DISTANCE_DIFF_V5 = 0.2;$/;"	m	namespace:Sonar
LSEEK	lib/zlib/gzlib.c	/^#  define LSEEK /;"	d	file:
LShoulderPitch	core/common/RobotInfo.h	/^  LShoulderPitch,$/;"	e	enum:Joint
LShoulderPitch	core/motion/rswalk2014/utils/body.hpp	/^      LShoulderPitch, \/\/2$/;"	e	enum:RSJoints::JointCodesEnum
LShoulderPitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LShoulderPitch_Max   = DEG2RAD(119.5);$/;"	m	namespace:RSJoints::Radians
LShoulderPitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LShoulderPitch_Min   = DEG2RAD(-119.5);$/;"	m	namespace:RSJoints::Radians
LShoulderRoll	core/common/RobotInfo.h	/^  LShoulderRoll,$/;"	e	enum:Joint
LShoulderRoll	core/motion/rswalk2014/utils/body.hpp	/^      LShoulderRoll, \/\/ 3$/;"	e	enum:RSJoints::JointCodesEnum
LShoulderRoll_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LShoulderRoll_Max    = DEG2RAD(76);$/;"	m	namespace:RSJoints::Radians
LShoulderRoll_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LShoulderRoll_Min    = DEG2RAD(-18);$/;"	m	namespace:RSJoints::Radians
LTNODE_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/ltnode.h	/^#define LTNODE_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
LUAC_FORMAT	lib/lua/src/lundump.h	/^#define LUAC_FORMAT	/;"	d
LUAC_HEADERSIZE	lib/lua/src/lundump.h	/^#define LUAC_HEADERSIZE	/;"	d
LUAC_O	lib/lua/src/Makefile	/^LUAC_O=	luac.o print.o$/;"	m
LUAC_T	lib/lua/src/Makefile	/^LUAC_T=	luac$/;"	m
LUAC_VERSION	lib/lua/src/lundump.h	/^#define LUAC_VERSION	/;"	d
LUAI_BITSINT	lib/lua/src/luaconf.h	/^#define LUAI_BITSINT	/;"	d
LUAI_DATA	lib/lua/src/luaconf.h	/^#define LUAI_DATA	/;"	d
LUAI_EXTRASPACE	lib/lua/src/luaconf.h	/^#define LUAI_EXTRASPACE	/;"	d
LUAI_FUNC	lib/lua/src/luaconf.h	/^#define LUAI_FUNC	/;"	d
LUAI_GCMUL	lib/lua/src/luaconf.h	/^#define LUAI_GCMUL	/;"	d
LUAI_GCPAUSE	lib/lua/src/luaconf.h	/^#define LUAI_GCPAUSE	/;"	d
LUAI_INT32	lib/lua/src/luaconf.h	/^#define LUAI_INT32	/;"	d
LUAI_MAXCALLS	lib/lua/src/luaconf.h	/^#define LUAI_MAXCALLS	/;"	d
LUAI_MAXCCALLS	lib/lua/src/luaconf.h	/^#define LUAI_MAXCCALLS	/;"	d
LUAI_MAXCSTACK	lib/lua/src/luaconf.h	/^#define LUAI_MAXCSTACK	/;"	d
LUAI_MAXINT32	lib/lua/src/luaconf.h	/^#define LUAI_MAXINT32	/;"	d
LUAI_MAXNUMBER2STR	lib/lua/src/luaconf.h	/^#define LUAI_MAXNUMBER2STR	/;"	d
LUAI_MAXUPVALUES	lib/lua/src/luaconf.h	/^#define LUAI_MAXUPVALUES	/;"	d
LUAI_MAXVARS	lib/lua/src/luaconf.h	/^#define LUAI_MAXVARS	/;"	d
LUAI_MEM	lib/lua/src/luaconf.h	/^#define LUAI_MEM	/;"	d
LUAI_THROW	lib/lua/src/luaconf.h	/^#define LUAI_THROW(/;"	d
LUAI_TRY	lib/lua/src/luaconf.h	/^#define LUAI_TRY(/;"	d
LUAI_UACNUMBER	lib/lua/src/luaconf.h	/^#define LUAI_UACNUMBER	/;"	d
LUAI_UINT32	lib/lua/src/luaconf.h	/^#define LUAI_UINT32	/;"	d
LUAI_UMEM	lib/lua/src/luaconf.h	/^#define LUAI_UMEM	/;"	d
LUAI_USER_ALIGNMENT_T	lib/lua/src/luaconf.h	/^#define LUAI_USER_ALIGNMENT_T	/;"	d
LUALIB_API	lib/lua/src/luaconf.h	/^#define LUALIB_API	/;"	d
LUAL_BUFFERSIZE	lib/lua/src/luaconf.h	/^#define LUAL_BUFFERSIZE	/;"	d
LUA_A	lib/lua/src/Makefile	/^LUA_A=	liblua.a$/;"	m
LUA_ANSI	lib/lua/src/luaconf.h	/^#define LUA_ANSI$/;"	d
LUA_API	lib/lua/src/luaconf.h	/^#define LUA_API	/;"	d
LUA_API	lib/lua/src/luaconf.h	/^#define LUA_API /;"	d
LUA_AUTHORS	lib/lua/src/lua.h	/^#define LUA_AUTHORS /;"	d
LUA_CDIR	lib/lua/src/luaconf.h	/^#define LUA_CDIR	/;"	d
LUA_COLIBNAME	lib/lua/src/lualib.h	/^#define LUA_COLIBNAME	/;"	d
LUA_COMPAT_GETN	lib/lua/src/luaconf.h	/^#undef LUA_COMPAT_GETN$/;"	d
LUA_COMPAT_GFIND	lib/lua/src/luaconf.h	/^#define LUA_COMPAT_GFIND$/;"	d
LUA_COMPAT_LOADLIB	lib/lua/src/luaconf.h	/^#undef LUA_COMPAT_LOADLIB$/;"	d
LUA_COMPAT_LSTR	lib/lua/src/luaconf.h	/^#define LUA_COMPAT_LSTR	/;"	d
LUA_COMPAT_MOD	lib/lua/src/luaconf.h	/^#define LUA_COMPAT_MOD$/;"	d
LUA_COMPAT_OPENLIB	lib/lua/src/luaconf.h	/^#define LUA_COMPAT_OPENLIB$/;"	d
LUA_COMPAT_VARARG	lib/lua/src/luaconf.h	/^#define LUA_COMPAT_VARARG$/;"	d
LUA_COPYRIGHT	lib/lua/src/lua.h	/^#define LUA_COPYRIGHT	/;"	d
LUA_CORE	lib/lua/etc/noparser.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lapi.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lcode.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/ldebug.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/ldo.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/ldump.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lfunc.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lgc.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/llex.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lmem.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lobject.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lopcodes.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lparser.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lstate.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lstring.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/ltable.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/ltm.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/luac.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lundump.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lvm.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/lzio.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	lib/lua/src/print.c	/^#define LUA_CORE$/;"	d	file:
LUA_CPATH	lib/lua/src/luaconf.h	/^#define LUA_CPATH /;"	d
LUA_CPATH_DEFAULT	lib/lua/src/luaconf.h	/^#define LUA_CPATH_DEFAULT /;"	d
LUA_DBLIBNAME	lib/lua/src/lualib.h	/^#define LUA_DBLIBNAME	/;"	d
LUA_DIRSEP	lib/lua/src/luaconf.h	/^#define LUA_DIRSEP	/;"	d
LUA_DL_DLL	lib/lua/src/luaconf.h	/^#define LUA_DL_DLL$/;"	d
LUA_DL_DLOPEN	lib/lua/src/luaconf.h	/^#define LUA_DL_DLOPEN$/;"	d
LUA_DL_DYLD	lib/lua/src/luaconf.h	/^#define LUA_DL_DYLD	/;"	d
LUA_ENVIRONINDEX	lib/lua/src/lua.h	/^#define LUA_ENVIRONINDEX	/;"	d
LUA_ERRERR	lib/lua/src/lua.h	/^#define LUA_ERRERR	/;"	d
LUA_ERRFILE	lib/lua/src/lauxlib.h	/^#define LUA_ERRFILE /;"	d
LUA_ERRMEM	lib/lua/src/lua.h	/^#define LUA_ERRMEM	/;"	d
LUA_ERRRUN	lib/lua/src/lua.h	/^#define LUA_ERRRUN	/;"	d
LUA_ERRSYNTAX	lib/lua/src/lua.h	/^#define LUA_ERRSYNTAX	/;"	d
LUA_EXECDIR	lib/lua/src/luaconf.h	/^#define LUA_EXECDIR	/;"	d
LUA_FILEHANDLE	lib/lua/src/lualib.h	/^#define LUA_FILEHANDLE	/;"	d
LUA_GCCOLLECT	lib/lua/src/lua.h	/^#define LUA_GCCOLLECT	/;"	d
LUA_GCCOUNT	lib/lua/src/lua.h	/^#define LUA_GCCOUNT	/;"	d
LUA_GCCOUNTB	lib/lua/src/lua.h	/^#define LUA_GCCOUNTB	/;"	d
LUA_GCRESTART	lib/lua/src/lua.h	/^#define LUA_GCRESTART	/;"	d
LUA_GCSETPAUSE	lib/lua/src/lua.h	/^#define LUA_GCSETPAUSE	/;"	d
LUA_GCSETSTEPMUL	lib/lua/src/lua.h	/^#define LUA_GCSETSTEPMUL	/;"	d
LUA_GCSTEP	lib/lua/src/lua.h	/^#define LUA_GCSTEP	/;"	d
LUA_GCSTOP	lib/lua/src/lua.h	/^#define LUA_GCSTOP	/;"	d
LUA_GLOBALSINDEX	lib/lua/src/lua.h	/^#define LUA_GLOBALSINDEX	/;"	d
LUA_HOOKCALL	lib/lua/src/lua.h	/^#define LUA_HOOKCALL	/;"	d
LUA_HOOKCOUNT	lib/lua/src/lua.h	/^#define LUA_HOOKCOUNT	/;"	d
LUA_HOOKLINE	lib/lua/src/lua.h	/^#define LUA_HOOKLINE	/;"	d
LUA_HOOKRET	lib/lua/src/lua.h	/^#define LUA_HOOKRET	/;"	d
LUA_HOOKTAILRET	lib/lua/src/lua.h	/^#define LUA_HOOKTAILRET /;"	d
LUA_IDSIZE	lib/lua/src/luaconf.h	/^#define LUA_IDSIZE	/;"	d
LUA_IGMARK	lib/lua/src/luaconf.h	/^#define LUA_IGMARK	/;"	d
LUA_INIT	lib/lua/src/luaconf.h	/^#define LUA_INIT	/;"	d
LUA_INTEGER	lib/lua/src/luaconf.h	/^#define LUA_INTEGER	/;"	d
LUA_INTFRMLEN	lib/lua/src/luaconf.h	/^#define LUA_INTFRMLEN	/;"	d
LUA_INTFRM_T	lib/lua/src/luaconf.h	/^#define LUA_INTFRM_T	/;"	d
LUA_IOLIBNAME	lib/lua/src/lualib.h	/^#define LUA_IOLIBNAME	/;"	d
LUA_LDIR	lib/lua/src/luaconf.h	/^#define LUA_LDIR	/;"	d
LUA_LIB	lib/lua/src/lauxlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	lib/lua/src/lbaselib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	lib/lua/src/ldblib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	lib/lua/src/linit.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	lib/lua/src/liolib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	lib/lua/src/lmathlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	lib/lua/src/loadlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	lib/lua/src/loslib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	lib/lua/src/lstrlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	lib/lua/src/ltablib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LOADLIBNAME	lib/lua/src/lualib.h	/^#define LUA_LOADLIBNAME	/;"	d
LUA_MASKCALL	lib/lua/src/lua.h	/^#define LUA_MASKCALL	/;"	d
LUA_MASKCOUNT	lib/lua/src/lua.h	/^#define LUA_MASKCOUNT	/;"	d
LUA_MASKLINE	lib/lua/src/lua.h	/^#define LUA_MASKLINE	/;"	d
LUA_MASKRET	lib/lua/src/lua.h	/^#define LUA_MASKRET	/;"	d
LUA_MATHLIBNAME	lib/lua/src/lualib.h	/^#define LUA_MATHLIBNAME	/;"	d
LUA_MAXCAPTURES	lib/lua/src/luaconf.h	/^#define LUA_MAXCAPTURES	/;"	d
LUA_MAXINPUT	lib/lua/src/luaconf.h	/^#define LUA_MAXINPUT	/;"	d
LUA_MINBUFFER	lib/lua/src/llimits.h	/^#define LUA_MINBUFFER	/;"	d
LUA_MINSTACK	lib/lua/src/lua.h	/^#define LUA_MINSTACK	/;"	d
LUA_MULTRET	lib/lua/src/lua.h	/^#define LUA_MULTRET	/;"	d
LUA_NOREF	lib/lua/src/lauxlib.h	/^#define LUA_NOREF /;"	d
LUA_NUMBER	lib/lua/src/luaconf.h	/^#define LUA_NUMBER	/;"	d
LUA_NUMBER_DOUBLE	lib/lua/src/luaconf.h	/^#define LUA_NUMBER_DOUBLE$/;"	d
LUA_NUMBER_FMT	lib/lua/src/luaconf.h	/^#define LUA_NUMBER_FMT	/;"	d
LUA_NUMBER_SCAN	lib/lua/src/luaconf.h	/^#define LUA_NUMBER_SCAN	/;"	d
LUA_O	lib/lua/src/Makefile	/^LUA_O=	lua.o$/;"	m
LUA_OFSEP	lib/lua/src/loadlib.c	/^#define LUA_OFSEP	/;"	d	file:
LUA_OSLIBNAME	lib/lua/src/lualib.h	/^#define LUA_OSLIBNAME	/;"	d
LUA_PATH	lib/lua/src/luaconf.h	/^#define LUA_PATH /;"	d
LUA_PATHSEP	lib/lua/src/luaconf.h	/^#define LUA_PATHSEP	/;"	d
LUA_PATH_DEFAULT	lib/lua/src/luaconf.h	/^#define LUA_PATH_DEFAULT /;"	d
LUA_PATH_MARK	lib/lua/src/luaconf.h	/^#define LUA_PATH_MARK	/;"	d
LUA_POF	lib/lua/src/loadlib.c	/^#define LUA_POF	/;"	d	file:
LUA_PROGNAME	lib/lua/src/luaconf.h	/^#define LUA_PROGNAME	/;"	d
LUA_PROMPT	lib/lua/src/luaconf.h	/^#define LUA_PROMPT	/;"	d
LUA_PROMPT2	lib/lua/src/luaconf.h	/^#define LUA_PROMPT2	/;"	d
LUA_QL	lib/lua/src/luaconf.h	/^#define LUA_QL(/;"	d
LUA_QS	lib/lua/src/luaconf.h	/^#define LUA_QS	/;"	d
LUA_REFNIL	lib/lua/src/lauxlib.h	/^#define LUA_REFNIL /;"	d
LUA_REGISTRYINDEX	lib/lua/src/lua.h	/^#define LUA_REGISTRYINDEX	/;"	d
LUA_RELEASE	lib/lua/src/lua.h	/^#define LUA_RELEASE	/;"	d
LUA_ROOT	lib/lua/src/luaconf.h	/^#define LUA_ROOT	/;"	d
LUA_SIGNATURE	lib/lua/src/lua.h	/^#define	LUA_SIGNATURE	/;"	d
LUA_STRLIBNAME	lib/lua/src/lualib.h	/^#define LUA_STRLIBNAME	/;"	d
LUA_T	lib/lua/src/Makefile	/^LUA_T=	lua$/;"	m
LUA_TABLIBNAME	lib/lua/src/lualib.h	/^#define LUA_TABLIBNAME	/;"	d
LUA_TBOOLEAN	lib/lua/src/lua.h	/^#define LUA_TBOOLEAN	/;"	d
LUA_TDEADKEY	lib/lua/src/lobject.h	/^#define LUA_TDEADKEY	/;"	d
LUA_TFUNCTION	lib/lua/src/lua.h	/^#define LUA_TFUNCTION	/;"	d
LUA_TLIGHTUSERDATA	lib/lua/src/lua.h	/^#define LUA_TLIGHTUSERDATA	/;"	d
LUA_TMPNAMBUFSIZE	lib/lua/src/luaconf.h	/^#define LUA_TMPNAMBUFSIZE	/;"	d
LUA_TNIL	lib/lua/src/lua.h	/^#define LUA_TNIL	/;"	d
LUA_TNONE	lib/lua/src/lua.h	/^#define LUA_TNONE	/;"	d
LUA_TNUMBER	lib/lua/src/lua.h	/^#define LUA_TNUMBER	/;"	d
LUA_TPROTO	lib/lua/src/lobject.h	/^#define LUA_TPROTO	/;"	d
LUA_TSTRING	lib/lua/src/lua.h	/^#define LUA_TSTRING	/;"	d
LUA_TTABLE	lib/lua/src/lua.h	/^#define LUA_TTABLE	/;"	d
LUA_TTHREAD	lib/lua/src/lua.h	/^#define LUA_TTHREAD	/;"	d
LUA_TUPVAL	lib/lua/src/lobject.h	/^#define LUA_TUPVAL	/;"	d
LUA_TUSERDATA	lib/lua/src/lua.h	/^#define LUA_TUSERDATA	/;"	d
LUA_USE_DLOPEN	lib/lua/src/luaconf.h	/^#define LUA_USE_DLOPEN	/;"	d
LUA_USE_ISATTY	lib/lua/src/luaconf.h	/^#define LUA_USE_ISATTY$/;"	d
LUA_USE_MKSTEMP	lib/lua/src/luaconf.h	/^#define LUA_USE_MKSTEMP$/;"	d
LUA_USE_POPEN	lib/lua/src/luaconf.h	/^#define LUA_USE_POPEN$/;"	d
LUA_USE_POSIX	lib/lua/src/luaconf.h	/^#define LUA_USE_POSIX$/;"	d
LUA_USE_READLINE	lib/lua/src/luaconf.h	/^#define LUA_USE_READLINE	/;"	d
LUA_USE_ULONGJMP	lib/lua/src/luaconf.h	/^#define LUA_USE_ULONGJMP$/;"	d
LUA_VERSION	lib/lua/src/lua.h	/^#define LUA_VERSION	/;"	d
LUA_VERSION_NUM	lib/lua/src/lua.h	/^#define LUA_VERSION_NUM	/;"	d
LUA_WIN	lib/lua/src/luaconf.h	/^#define LUA_WIN$/;"	d
LUA_YIELD	lib/lua/src/lua.h	/^#define LUA_YIELD	/;"	d
LUT_BIT	core/common/RobotInfo.h	/^#define LUT_BIT /;"	d
LUT_SIZE	core/common/RobotInfo.h	/^#define LUT_SIZE /;"	d
LWristYaw	core/motion/rswalk2014/utils/body.hpp	/^      LWristYaw, \/\/ 6$/;"	e	enum:RSJoints::JointCodesEnum
LWristYaw_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float LWristYaw_Max        = DEG2RAD(104.5);$/;"	m	namespace:RSJoints::Radians
LWristYaw_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float LWristYaw_Min        = DEG2RAD(-104.5);$/;"	m	namespace:RSJoints::Radians
L_CODES	lib/zlib/deflate.h	/^#define L_CODES /;"	d
L_ESC	lib/lua/src/lstrlib.c	/^#define L_ESC	/;"	d	file:
L_INT_OFFSET	core/common/WorldObject.h	/^const int L_INT_OFFSET = WO_OPP_FIELD_LEFT_L;$/;"	v
L_RATE	core/motion/rswalk2014/BodyModel.cpp	/^const float BodyModel::L_RATE = 0.5;$/;"	m	class:BodyModel	file:
L_RATE	core/motion/rswalk2014/BodyModel.hpp	/^      static const float L_RATE;$/;"	m	class:BodyModel
L_Umaxalign	lib/lua/src/llimits.h	/^typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;$/;"	t
Left0	core/motion/rswalk2014/utils/body.hpp	/^      Left0,$/;"	e	enum:Sonar::ReadingCodesEnum
Left1	core/motion/rswalk2014/utils/body.hpp	/^      Left1,$/;"	e	enum:Sonar::ReadingCodesEnum
Left2	core/motion/rswalk2014/utils/body.hpp	/^      Left2,$/;"	e	enum:Sonar::ReadingCodesEnum
Left3	core/motion/rswalk2014/utils/body.hpp	/^      Left3,$/;"	e	enum:Sonar::ReadingCodesEnum
Left4	core/motion/rswalk2014/utils/body.hpp	/^      Left4,$/;"	e	enum:Sonar::ReadingCodesEnum
Left5	core/motion/rswalk2014/utils/body.hpp	/^      Left5,$/;"	e	enum:Sonar::ReadingCodesEnum
Left6	core/motion/rswalk2014/utils/body.hpp	/^      Left6,$/;"	e	enum:Sonar::ReadingCodesEnum
Left7	core/motion/rswalk2014/utils/body.hpp	/^      Left7,$/;"	e	enum:Sonar::ReadingCodesEnum
Left8	core/motion/rswalk2014/utils/body.hpp	/^      Left8,$/;"	e	enum:Sonar::ReadingCodesEnum
Left9	core/motion/rswalk2014/utils/body.hpp	/^      Left9,$/;"	e	enum:Sonar::ReadingCodesEnum
LeftAnkleCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftAnkleCoM[] = {0.45, 0.29, 6.85, 1};$/;"	m	namespace:Limbs
LeftAnkleMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftAnkleMass = 0.13416; \/\/ L Ankle Pitch$/;"	m	namespace:Limbs
LeftBicepCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftBicepCoM[] = {24.55, 5.63, 3.30, 1};$/;"	m	namespace:Limbs
LeftBicepMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftBicepMass = 0.15777; \/\/ L Shoulder Roll$/;"	m	namespace:Limbs
LeftEar1	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar1 = 0,$/;"	e	enum:LEDs::LEDCode
LeftEar10	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar10,$/;"	e	enum:LEDs::LEDCode
LeftEar2	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar2,$/;"	e	enum:LEDs::LEDCode
LeftEar3	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar3,$/;"	e	enum:LEDs::LEDCode
LeftEar4	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar4,$/;"	e	enum:LEDs::LEDCode
LeftEar5	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar5,$/;"	e	enum:LEDs::LEDCode
LeftEar6	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar6,$/;"	e	enum:LEDs::LEDCode
LeftEar7	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar7,$/;"	e	enum:LEDs::LEDCode
LeftEar8	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar8,$/;"	e	enum:LEDs::LEDCode
LeftEar9	core/motion/rswalk2014/utils/body.hpp	/^      LeftEar9,$/;"	e	enum:LEDs::LEDCode
LeftElbowCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftElbowCoM[] = {-27.44, 0.00, -0.14, 1};$/;"	m	namespace:Limbs
LeftElbowMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftElbowMass = 0.06483; \/\/ L Elbow Yaw$/;"	m	namespace:Limbs
LeftEyeBlue1	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeBlue1,$/;"	e	enum:LEDs::LEDCode
LeftEyeBlue2	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeBlue2,$/;"	e	enum:LEDs::LEDCode
LeftEyeBlue3	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeBlue3,$/;"	e	enum:LEDs::LEDCode
LeftEyeBlue4	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeBlue4,$/;"	e	enum:LEDs::LEDCode
LeftEyeBlue5	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeBlue5,$/;"	e	enum:LEDs::LEDCode
LeftEyeBlue6	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeBlue6,$/;"	e	enum:LEDs::LEDCode
LeftEyeBlue7	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeBlue7,$/;"	e	enum:LEDs::LEDCode
LeftEyeBlue8	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeBlue8,$/;"	e	enum:LEDs::LEDCode
LeftEyeGreen1	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeGreen1,$/;"	e	enum:LEDs::LEDCode
LeftEyeGreen2	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeGreen2,$/;"	e	enum:LEDs::LEDCode
LeftEyeGreen3	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeGreen3,$/;"	e	enum:LEDs::LEDCode
LeftEyeGreen4	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeGreen4,$/;"	e	enum:LEDs::LEDCode
LeftEyeGreen5	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeGreen5,$/;"	e	enum:LEDs::LEDCode
LeftEyeGreen6	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeGreen6,$/;"	e	enum:LEDs::LEDCode
LeftEyeGreen7	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeGreen7,$/;"	e	enum:LEDs::LEDCode
LeftEyeGreen8	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeGreen8,$/;"	e	enum:LEDs::LEDCode
LeftEyeRed1	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeRed1,$/;"	e	enum:LEDs::LEDCode
LeftEyeRed2	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeRed2,$/;"	e	enum:LEDs::LEDCode
LeftEyeRed3	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeRed3,$/;"	e	enum:LEDs::LEDCode
LeftEyeRed4	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeRed4,$/;"	e	enum:LEDs::LEDCode
LeftEyeRed5	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeRed5,$/;"	e	enum:LEDs::LEDCode
LeftEyeRed6	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeRed6,$/;"	e	enum:LEDs::LEDCode
LeftEyeRed7	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeRed7,$/;"	e	enum:LEDs::LEDCode
LeftEyeRed8	core/motion/rswalk2014/utils/body.hpp	/^      LeftEyeRed8,$/;"	e	enum:LEDs::LEDCode
LeftFootBlue	core/motion/rswalk2014/utils/body.hpp	/^      LeftFootBlue,$/;"	e	enum:LEDs::LEDCode
LeftFootCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftFootCoM[] = {25.42, 3.30, -32.39, 1};$/;"	m	namespace:Limbs
LeftFootGreen	core/motion/rswalk2014/utils/body.hpp	/^      LeftFootGreen,$/;"	e	enum:LEDs::LEDCode
LeftFootMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftFootMass = 0.16184; \/\/ L Ankle Roll$/;"	m	namespace:Limbs
LeftFootRed	core/motion/rswalk2014/utils/body.hpp	/^      LeftFootRed,$/;"	e	enum:LEDs::LEDCode
LeftForearmCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftForearmCoM[] = {25.56, 2.81, 0.76, 1};$/;"	m	namespace:Limbs
LeftForearmMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftForearmMass = 0.07761; \/\/ L Elbow Roll$/;"	m	namespace:Limbs
LeftHandCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftHandCoM[] = {34.34, -0.88, 3.08, 1};$/;"	m	namespace:Limbs
LeftHandMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftHandMass = 0.18533; \/\/ L Wrist Yaw$/;"	m	namespace:Limbs
LeftHipCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftHipCoM[] = {-15.49, 0.29, -5.15, 1};$/;"	m	namespace:Limbs
LeftHipMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftHipMass = 0.13053; \/\/ L Hip Roll$/;"	m	namespace:Limbs
LeftPelvisCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftPelvisCoM[] = {-7.81, -11.14, 26.61, 1};$/;"	m	namespace:Limbs
LeftPelvisMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftPelvisMass = 0.06981; \/\/ L Hip Yaw Pitch$/;"	m	namespace:Limbs
LeftShoulderCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftShoulderCoM[] = {-1.65, -26.63, 0.14, 1};$/;"	m	namespace:Limbs
LeftShoulderMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftShoulderMass = 0.07504; \/\/ L Shoulder Pitch$/;"	m	namespace:Limbs
LeftThighCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftThighCoM[] = {1.38, 2.21, -53.73, 1};$/;"	m	namespace:Limbs
LeftThighMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftThighMass = 0.38968; \/\/ L Hip Pitch$/;"	m	namespace:Limbs
LeftTibiaCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftTibiaCoM[] = {4.53, 2.25, -49.36, 1};$/;"	m	namespace:Limbs
LeftTibiaMass	core/motion/rswalk2014/utils/body.hpp	/^   const float LeftTibiaMass = 0.29142; \/\/ L Knee Pitch$/;"	m	namespace:Limbs
Leg	core/memory/KickRequestBlock.h	/^  enum Leg {$/;"	g	class:Kick
LegsOffRestWalk	core/python/cfgstiff.py	/^LegsOffRestWalk = [0] * core.NUM_JOINTS$/;"	v
Len	lib/zlib/deflate.h	/^#define Len /;"	d
Length	core/motion/rswalk2014/utils/body.hpp	/^   const float Length[] = {$/;"	m	namespace:Limbs
LexState	lib/lua/src/llex.h	/^typedef struct LexState {$/;"	s
LexState	lib/lua/src/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
LightBlue	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightBlue = TORGB(51,153,255);$/;"	m	class:Colors	file:
LightBlue	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightBlue	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightBlue = TORGB(51,153,255);$/;"	m	class:Colors	file:
LightBlue	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightBrown	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightBrown = TORGB(210,180,140);$/;"	m	class:Colors	file:
LightBrown	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightBrown	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightBrown = TORGB(210,180,140);$/;"	m	class:Colors	file:
LightBrown	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightColors	build/include/tool/UTOpenGL/Colors.cpp	/^vector<RGB> Colors::LightColors = { LightBlue, LightRed, LightYellow, LightGreen, LightIndigo, LightBrown, LightCyan, LightMagenta, LightOrange, LightViolet };$/;"	m	class:Colors	file:
LightColors	build/include/tool/UTOpenGL/Colors.h	/^    static std::vector<RGB> StandardColors, LightColors;$/;"	m	class:Colors
LightColors	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^vector<RGB> Colors::LightColors = { LightBlue, LightRed, LightYellow, LightGreen, LightIndigo, LightBrown, LightCyan, LightMagenta, LightOrange, LightViolet };$/;"	m	class:Colors	file:
LightColors	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static std::vector<RGB> StandardColors, LightColors;$/;"	m	class:Colors
LightCyan	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightCyan = TORGB(150,255,255);$/;"	m	class:Colors	file:
LightCyan	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightCyan	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightCyan = TORGB(150,255,255);$/;"	m	class:Colors	file:
LightCyan	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightGreen	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightGreen = TORGB(102,255,150);$/;"	m	class:Colors	file:
LightGreen	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightGreen	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightGreen = TORGB(102,255,150);$/;"	m	class:Colors	file:
LightGreen	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightIndigo	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightIndigo = TORGB(150,150,255);$/;"	m	class:Colors	file:
LightIndigo	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightIndigo	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightIndigo = TORGB(150,150,255);$/;"	m	class:Colors	file:
LightIndigo	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightMagenta	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightMagenta = TORGB(255,150,255);$/;"	m	class:Colors	file:
LightMagenta	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightMagenta	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightMagenta = TORGB(255,150,255);$/;"	m	class:Colors	file:
LightMagenta	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightOrange	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightOrange = TORGB(255,178,150);$/;"	m	class:Colors	file:
LightOrange	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightOrange	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightOrange = TORGB(255,178,150);$/;"	m	class:Colors	file:
LightOrange	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightRed	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightRed = TORGB(255,150,150);$/;"	m	class:Colors	file:
LightRed	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightRed	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightRed = TORGB(255,150,150);$/;"	m	class:Colors	file:
LightRed	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightViolet	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightViolet = TORGB(153,51,255);$/;"	m	class:Colors	file:
LightViolet	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightViolet	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightViolet = TORGB(153,51,255);$/;"	m	class:Colors	file:
LightViolet	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightYellow	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::LightYellow = TORGB(255,255,150);$/;"	m	class:Colors	file:
LightYellow	build/include/tool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
LightYellow	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::LightYellow = TORGB(255,255,150);$/;"	m	class:Colors	file:
LightYellow	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB LightRed, LightOrange, LightYellow, LightGreen, LightBlue, LightIndigo, LightViolet, LightBrown, LightCyan, LightMagenta;$/;"	m	class:Colors
Limbs	core/motion/rswalk2014/utils/body.hpp	/^namespace Limbs {$/;"	n
Line	core/vision/structures/CornerPoint.h	/^  FieldLine* Line[2];$/;"	m	struct:CornerPoint
Line2D	core/math/Geometry.cpp	/^Line2D::Line2D( const Point2D& p, const AngRad& ang )$/;"	f	class:Line2D
Line2D	core/math/Geometry.cpp	/^Line2D::Line2D( const Point2D& p1, const Point2D& p2 )$/;"	f	class:Line2D
Line2D	core/math/Geometry.cpp	/^Line2D::Line2D( float a, float b, float c )$/;"	f	class:Line2D
Line2D	core/math/Geometry.cpp	/^Line2D::Line2D() {$/;"	f	class:Line2D
Line2D	core/math/Geometry.cpp	/^Line2D::Line2D(float x1, float y1, float x2, float y2) $/;"	f	class:Line2D
Line2D	core/math/Geometry.h	/^class Line2D$/;"	c
Line2D	core/python/geometry.py	/^class Line2D(object):$/;"	c
LineBreakCharacters	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST LineBreakCharacters()$/;"	f	namespace:Test::Spec
LineFolding	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST LineFolding()$/;"	f	namespace:Test::Spec
LinePoint	core/vision/structures/LinePoint.h	/^struct LinePoint {$/;"	s
LinePrefixes	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST LinePrefixes()$/;"	f	namespace:Test::Spec
LineSegment	core/math/Geometry.cpp	/^LineSegment::LineSegment() { $/;"	f	class:LineSegment
LineSegment	core/math/Geometry.cpp	/^LineSegment::LineSegment(Point2D start, Point2D end) : start(start), end(end), Line2D(start,end) {$/;"	f	class:LineSegment
LineSegment	core/math/Geometry.cpp	/^LineSegment::LineSegment(int x1, int y1, int x2, int y2) : Line2D(x1,y1,x2,y2) {$/;"	f	class:LineSegment
LineSegment	core/math/Geometry.h	/^class LineSegment : public Line2D {$/;"	c
LineSegment	core/python/geometry.py	/^class LineSegment(Line2D):$/;"	c
LineStackInfo	core/vision/structures/LineStackInfo.h	/^struct LineStackInfo {$/;"	s
LineStackRet	core/vision/structures/LineStackRet.h	/^struct LineStackRet {$/;"	s
LineUpEngine	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^WalkEnginePreProcessor::LineUpEngine::LineUpEngine(Walk2014Generator* walkEngine) {$/;"	f	class:WalkEnginePreProcessor::LineUpEngine
LineUpEngine	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^      class LineUpEngine {$/;"	c	class:WalkEnginePreProcessor
LinearKalmanFilter	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  LinearKalmanFilter(StateTransitionMatrix A_matrix, InputMatrix B_matrix, OutputMatrix C_matrix, StateCovarianceMatrix R_matrix, MeasurementCovarianceMatrix Q_matrix)$/;"	f	class:LinearKalmanFilter
LinearKalmanFilter	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^class LinearKalmanFilter$/;"	c
Link	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      enum Link {$/;"	g	class:Kinematics
ListAndMap	lib/yaml-cpp/test/emittertests.cpp	/^		void ListAndMap(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
Literal	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Literal,$/;"	e	enum:YAML::EMITTER_MANIP
LiteralContent	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST LiteralContent()$/;"	f	namespace:Test::Spec
LiteralScalar	lib/yaml-cpp/src/exp.h	/^		const char LiteralScalar = '|';$/;"	m	namespace:YAML::Keys
LiteralScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void LiteralScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
LiteralScalar	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST LiteralScalar()$/;"	f	namespace:Test::Spec
Load	lib/yaml-cpp/src/parser.cpp	/^	void Parser::Load(std::istream& in)$/;"	f	class:YAML::Parser
LoadBlock	lib/lua/src/lundump.c	/^static void LoadBlock(LoadState* S, void* b, size_t size)$/;"	f	file:
LoadByte	lib/lua/src/lundump.c	/^#define	LoadByte(/;"	d	file:
LoadChar	lib/lua/src/lundump.c	/^static int LoadChar(LoadState* S)$/;"	f	file:
LoadCode	lib/lua/src/lundump.c	/^static void LoadCode(LoadState* S, Proto* f)$/;"	f	file:
LoadConstants	lib/lua/src/lundump.c	/^static void LoadConstants(LoadState* S, Proto* f)$/;"	f	file:
LoadDebug	lib/lua/src/lundump.c	/^static void LoadDebug(LoadState* S, Proto* f)$/;"	f	file:
LoadF	lib/lua/src/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	lib/lua/src/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	lib/lua/src/lundump.c	/^static Proto* LoadFunction(LoadState* S, TString* p)$/;"	f	file:
LoadHeader	lib/lua/src/lundump.c	/^static void LoadHeader(LoadState* S)$/;"	f	file:
LoadInt	lib/lua/src/lundump.c	/^static int LoadInt(LoadState* S)$/;"	f	file:
LoadMem	lib/lua/src/lundump.c	/^#define LoadMem(/;"	d	file:
LoadNumber	lib/lua/src/lundump.c	/^static lua_Number LoadNumber(LoadState* S)$/;"	f	file:
LoadS	lib/lua/src/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	lib/lua/src/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	lib/lua/src/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon100	file:
LoadString	lib/lua/src/lundump.c	/^static TString* LoadString(LoadState* S)$/;"	f	file:
LoadVar	lib/lua/src/lundump.c	/^#define LoadVar(/;"	d	file:
LoadVector	lib/lua/src/lundump.c	/^#define LoadVector(/;"	d	file:
LocSimAgent	build/include/tool/simulation/LocalizationSimulation.h	/^  LocSimAgent(Type type = Default) : type(type) {$/;"	f	struct:LocSimAgent
LocSimAgent	build/include/tool/simulation/LocalizationSimulation.h	/^struct LocSimAgent {$/;"	s
LocSimAgent	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  LocSimAgent(Type type = Default) : type(type) {$/;"	f	struct:LocSimAgent
LocSimAgent	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^struct LocSimAgent {$/;"	s
LocVar	lib/lua/src/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	lib/lua/src/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
LocalTag	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	inline _Tag LocalTag(const std::string content) {$/;"	f	namespace:YAML
LocalTag	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	inline _Tag LocalTag(const std::string& prefix, const std::string content) {$/;"	f	namespace:YAML
LocalTagPrefix	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST LocalTagPrefix()$/;"	f	namespace:Test::Spec
LocalTagWithScalar	lib/yaml-cpp/test/emittertests.cpp	/^		void LocalTagWithScalar(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
LocalizationAnnotation	build/include/tool/annotations/LocalizationAnnotation.cpp	/^LocalizationAnnotation::LocalizationAnnotation(Pose2D pose, int frame) {$/;"	f	class:LocalizationAnnotation
LocalizationAnnotation	build/include/tool/annotations/LocalizationAnnotation.h	/^class LocalizationAnnotation : public BaseAnnotation {$/;"	c
LocalizationAnnotation	tools/UTNaoTool/annotations/LocalizationAnnotation.cpp	/^LocalizationAnnotation::LocalizationAnnotation(Pose2D pose, int frame) {$/;"	f	class:LocalizationAnnotation
LocalizationAnnotation	tools/UTNaoTool/annotations/LocalizationAnnotation.h	/^class LocalizationAnnotation : public BaseAnnotation {$/;"	c
LocalizationBlock	core/memory/LocalizationBlock.cpp	/^LocalizationBlock::LocalizationBlock() {$/;"	f	class:LocalizationBlock
LocalizationBlock	core/memory/LocalizationBlock.h	/^struct LocalizationBlock : public MemoryBlock {$/;"	s
LocalizationGL	build/include/tool/UTOpenGL/LocalizationGL.h	/^class LocalizationGL {$/;"	c
LocalizationGL	tools/UTNaoTool/UTOpenGL/LocalizationGL.h	/^class LocalizationGL {$/;"	c
LocalizationMethod	core/VisionCore.h	/^class LocalizationMethod {$/;"	c
LocalizationModule	core/localization/LocalizationModule.cpp	/^LocalizationModule::LocalizationModule() : tlogger_(textlogger) {$/;"	f	class:LocalizationModule
LocalizationModule	core/localization/LocalizationModule.h	/^class LocalizationModule : public Module {$/;"	c
LocalizationModuleLog	core/memory/TextLogger.h	/^  LocalizationModuleLog,$/;"	e	enum:modulesTypes
LocalizationParams	core/localization/LocalizationParams.h	/^struct LocalizationParams {$/;"	s
LocalizationSimulation	build/include/tool/simulation/LocalizationSimulation.cpp	/^LocalizationSimulation::LocalizationSimulation(LocSimAgent::Type type) : iparams_(Camera::TOP), cg_(team_, player_) {$/;"	f	class:LocalizationSimulation
LocalizationSimulation	build/include/tool/simulation/LocalizationSimulation.cpp	/^LocalizationSimulation::LocalizationSimulation(int seed) : iparams_(Camera::TOP), cg_(team_, player_), seed_(seed)  {$/;"	f	class:LocalizationSimulation
LocalizationSimulation	build/include/tool/simulation/LocalizationSimulation.cpp	/^LocalizationSimulation::LocalizationSimulation(string pathfile) : iparams_(Camera::TOP), cg_(team_, player_) {$/;"	f	class:LocalizationSimulation
LocalizationSimulation	build/include/tool/simulation/LocalizationSimulation.h	/^class LocalizationSimulation : public Simulation {$/;"	c
LocalizationSimulation	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^LocalizationSimulation::LocalizationSimulation(LocSimAgent::Type type) : iparams_(Camera::TOP), cg_(team_, player_) {$/;"	f	class:LocalizationSimulation
LocalizationSimulation	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^LocalizationSimulation::LocalizationSimulation(int seed) : iparams_(Camera::TOP), cg_(team_, player_), seed_(seed)  {$/;"	f	class:LocalizationSimulation
LocalizationSimulation	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^LocalizationSimulation::LocalizationSimulation(string pathfile) : iparams_(Camera::TOP), cg_(team_, player_) {$/;"	f	class:LocalizationSimulation
LocalizationSimulation	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^class LocalizationSimulation : public Simulation {$/;"	c
LocalizationState	core/localization/LocalizationState.h	/^enum class LocalizationState {$/;"	c
Lock	core/memory/Lock.cpp	/^Lock::Lock(const std::string &name, bool clean_first):$/;"	f	class:Lock
Lock	core/memory/Lock.h	/^class Lock{$/;"	c
Log	core/memory/Log.cpp	/^Log::Log(std::string directory, int start, int finish) : directory_(directory), reader_(directory), memory_(NULL) {$/;"	f	class:Log
Log	core/memory/Log.h	/^class Log {$/;"	c
LogEditorWindow	build/include/tool/LogEditorWindow.cpp	/^LogEditorWindow::LogEditorWindow(QMainWindow* p) : log_(0) {$/;"	f	class:LogEditorWindow
LogEditorWindow	build/include/tool/LogEditorWindow.h	/^class LogEditorWindow : public QMainWindow, public Ui_LogEditorWindow {$/;"	c
LogEditorWindow	tools/UTNaoTool/LogEditorWindow.cpp	/^LogEditorWindow::LogEditorWindow(QMainWindow* p) : log_(0) {$/;"	f	class:LogEditorWindow
LogEditorWindow	tools/UTNaoTool/LogEditorWindow.h	/^class LogEditorWindow : public QMainWindow, public Ui_LogEditorWindow {$/;"	c
LogFile	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST LogFile()$/;"	f	namespace:Test::Spec
LogLevel	core/motion/rswalk2014/utils/Logger.hpp	/^enum LogLevel {$/;"	g
LogMetadata	core/memory/LogMetadata.h	/^class LogMetadata : public YamlConfig {$/;"	c
LogReader	core/memory/LogReader.cpp	/^LogReader::LogReader(const StreamBuffer& buffer) :$/;"	f	class:LogReader
LogReader	core/memory/LogReader.cpp	/^LogReader::LogReader(const char *directory):$/;"	f	class:LogReader
LogReader	core/memory/LogReader.cpp	/^LogReader::LogReader(const std::string& directory) : LogReader(directory.c_str()) { }$/;"	f	class:LogReader
LogReader	core/memory/LogReader.h	/^class LogReader {$/;"	c
LogSelectWindow	build/include/tool/LogSelectWindow.cpp	/^LogSelectWindow::LogSelectWindow(QMainWindow* pa, std::vector<std::string> &block_names) : ConfigWindow(pa), naoUDP(NULL) {$/;"	f	class:LogSelectWindow
LogSelectWindow	build/include/tool/LogSelectWindow.h	/^class LogSelectWindow : public ConfigWindow {$/;"	c
LogSelectWindow	tools/UTNaoTool/LogSelectWindow.cpp	/^LogSelectWindow::LogSelectWindow(QMainWindow* pa, std::vector<std::string> &block_names) : ConfigWindow(pa), naoUDP(NULL) {$/;"	f	class:LogSelectWindow
LogSelectWindow	tools/UTNaoTool/LogSelectWindow.h	/^class LogSelectWindow : public ConfigWindow {$/;"	c
LogWidget	build/include/tool/LogWidget.cpp	/^LogWidget::LogWidget(QWidget* parent) : QWidget(parent) {$/;"	f	class:LogWidget
LogWidget	build/include/tool/LogWidget.h	/^class LogWidget : public QWidget, public Ui_LogWidget {$/;"	c
LogWidget	tools/UTNaoTool/LogWidget.cpp	/^LogWidget::LogWidget(QWidget* parent) : QWidget(parent) {$/;"	f	class:LogWidget
LogWidget	tools/UTNaoTool/LogWidget.h	/^class LogWidget : public QWidget, public Ui_LogWidget {$/;"	c
LogWindow	build/include/tool/LogWindow.cpp	/^LogWindow::LogWindow(QMainWindow* p) : ConfigWindow(p) {$/;"	f	class:LogWindow
LogWindow	build/include/tool/LogWindow.h	/^class LogWindow : public ConfigWindow, public Ui_UTLogWindow {$/;"	c
LogWindow	tools/UTNaoTool/LogWindow.cpp	/^LogWindow::LogWindow(QMainWindow* p) : ConfigWindow(p) {$/;"	f	class:LogWindow
LogWindow	tools/UTNaoTool/LogWindow.h	/^class LogWindow : public ConfigWindow, public Ui_UTLogWindow {$/;"	c
Logger	core/memory/Logger.cpp	/^Logger::Logger(bool useBuffers, const char* directory, bool appendUniqueId, bool useAllBlocks):$/;"	f	class:Logger
Logger	core/memory/Logger.h	/^class Logger {$/;"	c
Logger	core/motion/rswalk2014/utils/Logger.cpp	/^Logger::Logger(const char *name) {$/;"	f	class:Logger
Logger	core/motion/rswalk2014/utils/Logger.hpp	/^class Logger {$/;"	c
LongBinary	lib/yaml-cpp/test/emittertests.cpp	/^		void LongBinary(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
LongBool	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		LongBool,  \/\/ yes, On$/;"	e	enum:YAML::EMITTER_MANIP
LongKey	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		LongKey$/;"	e	enum:YAML::EMITTER_MANIP
LongKeyFlowMap	lib/yaml-cpp/test/emittertests.cpp	/^		void LongKeyFlowMap(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
LookupAnchor	lib/yaml-cpp/src/aliasmanager.cpp	/^	anchor_t AliasManager::LookupAnchor(const Node& node) const$/;"	f	class:YAML::AliasManager
LookupAnchor	lib/yaml-cpp/src/singledocparser.cpp	/^	anchor_t SingleDocParser::LookupAnchor(const Mark& mark, const std::string& name) const$/;"	f	class:YAML::SingleDocParser
LoopingStateMachine	core/python/state_machine.py	/^class LoopingStateMachine(StateMachine):$/;"	c
LotsOfNewlines	lib/yaml-cpp/test/emittertests.cpp	/^		void LotsOfNewlines(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
LowArms	core/python/cfgstiff.py	/^LowArms = [0] * core.NUM_JOINTS$/;"	v
LowerArmLength	core/motion/rswalk2014/utils/body.hpp	/^   const float LowerArmLength = 55.95;$/;"	m	namespace:Limbs
LowerCase	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		LowerCase,  \/\/ f, yes$/;"	e	enum:YAML::EMITTER_MANIP
M	core/common/NMatrix.h	/^	int		M;			\/\/ number of rows$/;"	m	class:NMatrix
M	core/math/YaMatrix.h	/^  int M, N;$/;"	m	class:YaMatrix
MACROS_H	core/vision/Macros.h	/^#define MACROS_H$/;"	d
MAGENTA	vision_testing/src/vision_testing.cpp	/^  MAGENTA,$/;"	e	enum:FullColor	file:
MAGENTA_BLUE	vision_testing/src/vision_testing.cpp	/^  MAGENTA_BLUE,$/;"	e	enum:FullColor	file:
MAIN_WINDOW_D9KV76TW	tools/color_classifier/include/color_classifier/main_window.hpp	/^#define MAIN_WINDOW_D9KV76TW$/;"	d
MAKE_INDEX_TYPE	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^#define MAKE_INDEX_TYPE(/;"	d
MAKE_INDEX_TYPE	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^#undef MAKE_INDEX_TYPE$/;"	d
MANUAL_CONTROL	core/common/States.h	/^  MANUAL_CONTROL = 12$/;"	e	enum:STATES
MAP	lib/yaml-cpp/src/scanner.h	/^			enum INDENT_TYPE { MAP, SEQ, NONE };$/;"	e	enum:YAML::Scanner::IndentMarker::INDENT_TYPE
MAP_KEY	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const MAP_KEY                = "illegal map key";$/;"	m	namespace:YAML::ErrorMsg
MAP_VALUE	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const MAP_VALUE              = "illegal map value";$/;"	m	namespace:YAML::ErrorMsg
MARKER_CENTER_X	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define MARKER_CENTER_X /;"	d
MARKER_DIMENSIONS	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define MARKER_DIMENSIONS /;"	d
MARK_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/mark.h	/^#define MARK_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
MASK	interfaces/sim_spark/Random.h	/^static const unsigned MASK[ 1 + DEGREE_MAX ] = {$/;"	v
MASK0	lib/lua/src/lopcodes.h	/^#define MASK0(/;"	d
MASK1	lib/lua/src/lopcodes.h	/^#define MASK1(/;"	d
MATCH	lib/zlib/inflate.h	/^            MATCH,      \/* o: waiting for output space to copy string *\/$/;"	e	enum:__anon136
MATRIX_OPERATIONS_H	core/math/MatrixOperations.h	/^#define MATRIX_OPERATIONS_H$/;"	d
MATSQRT	core/math/MatrixOperations.h	/^#define MATSQRT(/;"	d
MAX	core/motion/rswalk2014/utils/basic_maths.hpp	/^   inline static T MAX(const T &x, const T &y) {$/;"	f
MAX	core/motion/rswalk2014/utils/basic_maths.hpp	/^   inline static float MAX(const float x, const int y) {$/;"	f
MAX	core/motion/rswalk2014/utils/basic_maths.hpp	/^   inline static float MAX(const int x, const float y) {$/;"	f
MAX	core/motion/rswalk2014/utils/body.hpp	/^   const float MAX = 2.5f; \/\/ max reliable reading$/;"	m	namespace:Sonar
MAXARG_A	lib/lua/src/lopcodes.h	/^#define MAXARG_A /;"	d
MAXARG_B	lib/lua/src/lopcodes.h	/^#define MAXARG_B /;"	d
MAXARG_Bx	lib/lua/src/lopcodes.h	/^#define MAXARG_Bx /;"	d
MAXARG_C	lib/lua/src/lopcodes.h	/^#define MAXARG_C /;"	d
MAXARG_sBx	lib/lua/src/lopcodes.h	/^#define MAXARG_sBx /;"	d
MAXASIZE	lib/lua/src/ltable.c	/^#define MAXASIZE	/;"	d	file:
MAXBITS	lib/lua/src/ltable.c	/^#define MAXBITS	/;"	d	file:
MAXBITS	lib/zlib/inftrees.c	/^#define MAXBITS /;"	d	file:
MAXINDEXRK	lib/lua/src/lopcodes.h	/^#define MAXINDEXRK	/;"	d
MAXSEG_64K	lib/zlib/zconf.h	/^#  define MAXSEG_64K$/;"	d
MAXSRC	lib/lua/src/llex.c	/^#define MAXSRC /;"	d	file:
MAXSTACK	lib/lua/src/llimits.h	/^#define MAXSTACK	/;"	d
MAXTAGLOOP	lib/lua/src/lvm.c	/^#define MAXTAGLOOP	/;"	d	file:
MAXU	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAXU /;"	d
MAXU_POW	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAXU_POW /;"	d
MAXV	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAXV /;"	d
MAXV_POW	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAXV_POW /;"	d
MAXY	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAXY /;"	d
MAXY_POW	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAXY_POW /;"	d
MAX_BALLS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAX_BALLS /;"	d
MAX_BALL_CANDS	core/constants/VisionConstants.h	/^#define MAX_BALL_CANDS /;"	d
MAX_BITS	lib/zlib/deflate.h	/^#define MAX_BITS /;"	d
MAX_BLOBS_PER_LINE	core/vision/structures/LineStackRet.h	/^#define MAX_BLOBS_PER_LINE /;"	d
MAX_BLOB_VISIONPOINTS	core/constants/VisionConstants.h	/^#define MAX_BLOB_VISIONPOINTS /;"	d
MAX_BL_BITS	lib/zlib/trees.c	/^#define MAX_BL_BITS /;"	d	file:
MAX_CLICK_INTERVAL	core/sensor/ButtonModule.cpp	/^const float ButtonModule::MAX_CLICK_INTERVAL = 0.35f;$/;"	m	class:ButtonModule	file:
MAX_CLICK_INTERVAL	core/sensor/ButtonModule.h	/^  static const float MAX_CLICK_INTERVAL;$/;"	m	class:ButtonModule
MAX_CLICK_TIME	core/sensor/ButtonModule.cpp	/^const float ButtonModule::MAX_CLICK_TIME = 0.75f;$/;"	m	class:ButtonModule	file:
MAX_CLICK_TIME	core/sensor/ButtonModule.h	/^  static const float MAX_CLICK_TIME;$/;"	m	class:ButtonModule
MAX_CORNERPOINTS	core/constants/VisionConstants.h	/^#define MAX_CORNERPOINTS /;"	d
MAX_DIST	lib/zlib/deflate.h	/^#define MAX_DIST(/;"	d
MAX_DISTANCE_V4	core/sonar/SonarModule.h	/^  const float MAX_DISTANCE_V4 = 0.5;$/;"	m	namespace:Sonar
MAX_DISTANCE_V5	core/sonar/SonarModule.h	/^  const float MAX_DISTANCE_V5 = 0.9;$/;"	m	namespace:Sonar
MAX_EDGE_DEVIATION_FROM_PERPENDICULAR	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAX_EDGE_DEVIATION_FROM_PERPENDICULAR /;"	d
MAX_EXPECTED_MODULES_PER_MEMORY	core/memory/LogReader.cpp	/^#define MAX_EXPECTED_MODULES_PER_MEMORY /;"	d	file:
MAX_FEET	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAX_FEET /;"	d
MAX_FIELDLINES	core/vision/structures/FieldLine.h	/^#define MAX_FIELDLINES /;"	d
MAX_FIELD_EDGES	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAX_FIELD_EDGES /;"	d
MAX_FIELD_FEATURES	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAX_FIELD_FEATURES /;"	d
MAX_FIELD_LINE_POINTS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAX_FIELD_LINE_POINTS /;"	d
MAX_FOCUS_AREA	core/constants/VisionConstants.h	/^#define MAX_FOCUS_AREA /;"	d
MAX_FOCUS_AREA_COUNT	core/constants/VisionConstants.h	/^#define MAX_FOCUS_AREA_COUNT /;"	d
MAX_FORMAT	lib/lua/src/lstrlib.c	/^#define MAX_FORMAT	/;"	d	file:
MAX_FORWARD	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float MAX_FORWARD = .3;\/\/.3                              \/\/ meters$/;"	v
MAX_FORWARD_STEP	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^#define MAX_FORWARD_STEP /;"	d	file:
MAX_INT	lib/lua/src/llimits.h	/^#define MAX_INT /;"	d
MAX_ITEM	lib/lua/src/lstrlib.c	/^#define MAX_ITEM	/;"	d	file:
MAX_KICK_PHASE	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define MAX_KICK_PHASE /;"	d	file:
MAX_LANDMARKS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAX_LANDMARKS /;"	d
MAX_LEFT	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float MAX_LEFT = .2;\/\/.2                                 \/\/ meters$/;"	v
MAX_LEFT_STEP	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^#define MAX_LEFT_STEP /;"	d	file:
MAX_LINE_BLOBS	core/constants/VisionConstants.h	/^#define MAX_LINE_BLOBS /;"	d
MAX_LUMEM	lib/lua/src/llimits.h	/^#define MAX_LUMEM	/;"	d
MAX_MATCH	lib/zlib/zutil.h	/^#define MAX_MATCH /;"	d
MAX_MEM_LEVEL	lib/zlib/zconf.h	/^#    define MAX_MEM_LEVEL /;"	d
MAX_MEM_WRITE_SIZE	core/communications/CommunicationModule.cpp	/^#define MAX_MEM_WRITE_SIZE /;"	d	file:
MAX_MODULES_PER_COLUMN	build/include/tool/LogSelectWindow.cpp	/^unsigned int MAX_MODULES_PER_COLUMN = 15;$/;"	v
MAX_MODULES_PER_COLUMN	tools/UTNaoTool/LogSelectWindow.cpp	/^unsigned int MAX_MODULES_PER_COLUMN = 15;$/;"	v
MAX_NAME_LEN	lib/zlib/minigzip.c	/^#define MAX_NAME_LEN /;"	d	file:
MAX_NAME_LENGTH	core/memory/GraphableBlock.h	/^#define MAX_NAME_LENGTH /;"	d
MAX_NUM_FIELD_AREAS	core/memory/BehaviorParamBlock.h	/^const unsigned int MAX_NUM_FIELD_AREAS = 6;$/;"	v
MAX_NUM_PLAYERS	core/communications/RoboCupGameControlData.h	/^#define MAX_NUM_PLAYERS /;"	d
MAX_NUM_ROBOTS	core/constants/VisionConstants.h	/^#define MAX_NUM_ROBOTS /;"	d
MAX_OPP_MODELS_IN_MEM	core/memory/OpponentBlock.h	/^#define MAX_OPP_MODELS_IN_MEM /;"	d
MAX_ORANGE_BLOBS	core/constants/VisionConstants.h	/^#define MAX_ORANGE_BLOBS /;"	d
MAX_POINTS_PER_LINE	core/constants/VisionConstants.h	/^#define MAX_POINTS_PER_LINE /;"	d
MAX_POSTS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAX_POSTS /;"	d
MAX_PREVIEW_FRAMES	core/memory/WalkEngineBlock.h	/^#define MAX_PREVIEW_FRAMES /;"	d
MAX_PTR	lib/zlib/zutil.c	/^#define MAX_PTR /;"	d	file:
MAX_ROBOTS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MAX_ROBOTS /;"	d
MAX_SENSOR_DELAY	core/memory/WalkEngineBlock.h	/^#define MAX_SENSOR_DELAY /;"	d
MAX_SIZET	lib/lua/src/llimits.h	/^#define MAX_SIZET	/;"	d
MAX_SPLINE_POINTS	core/motion/KickParameters.h	/^#define MAX_SPLINE_POINTS /;"	d
MAX_STIFF	core/motion/rswalk2014/ActionGenerator.hpp	/^#define MAX_STIFF /;"	d
MAX_STREAMING_MESSAGE_LEN	core/communications/StreamingMessage.h	/^#define MAX_STREAMING_MESSAGE_LEN /;"	d
MAX_TURN	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float MAX_TURN = 0.87;\/\/.87                                \/\/ radians$/;"	v
MAX_TURN_STEP	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^#define MAX_TURN_STEP /;"	d	file:
MAX_VISION_OPPS	core/memory/RobotVisionBlock.h	/^#define MAX_VISION_OPPS /;"	d
MAX_WBITS	lib/zlib/zconf.h	/^#  define MAX_WBITS /;"	d
MCLParticleFilter	particle_filters/MCL_particle_filter.hpp	/^    MCLParticleFilter(StateTransitionMatrix A_matrix, ControlMatrix B_matrix, MeasurementCovarianceMatrix Q_matrix, WhiteCovarianceVector N_matrix )$/;"	f	class:MCLParticleFilter
MCLParticleFilter	particle_filters/MCL_particle_filter.hpp	/^class MCLParticleFilter$/;"	c
MCL_PARTICLE_FILTER_H	particle_filters/MCL_particle_filter.hpp	/^#define MCL_PARTICLE_FILTER_H$/;"	d
MEM	lib/zlib/inflate.h	/^    MEM,        \/* got an inflate() memory error -- remain here until reset *\/$/;"	e	enum:__anon136
MEMERRMSG	lib/lua/src/lmem.h	/^#define MEMERRMSG	/;"	d
MEMORYBLOCK_4MKDDAED	core/memory/MemoryBlock.h	/^#define MEMORYBLOCK_4MKDDAED$/;"	d
MEMORY_3Z94SCHB	core/memory/Memory.h	/^#define MEMORY_3Z94SCHB$/;"	d
MEMORY_CACHE_H	core/memory/MemoryCache.h	/^#define MEMORY_CACHE_H$/;"	d
MEMORY_INSTANCE	interfaces/nao/src/naointerface.cpp	/^Memory* naointerface::MEMORY_INSTANCE = NULL;$/;"	m	class:naointerface	file:
MEMORY_INSTANCE	interfaces/nao/src/naointerface.h	/^    static Memory* MEMORY_INSTANCE;$/;"	m	class:naointerface
MEMORY_ROBOT	core/memory/FrameInfoBlock.h	/^  MEMORY_ROBOT,$/;"	e	enum:MemorySource
MEMORY_SIM	core/memory/FrameInfoBlock.h	/^  MEMORY_SIM$/;"	e	enum:MemorySource
MEMORY_SIZE	core/memory/SharedMemory.cpp	/^const int SharedMemory::MEMORY_SIZE = 10000000;$/;"	m	class:SharedMemory	file:
MEMORY_SIZE	core/memory/SharedMemory.h	/^  const static int MEMORY_SIZE;$/;"	m	class:SharedMemory
MEM_MAP_NAME	core/memory/SharedMemory.cpp	/^const char SharedMemory::MEM_MAP_NAME[] = "VillaMemMap";$/;"	m	class:SharedMemory	file:
MEM_MAP_NAME	core/memory/SharedMemory.h	/^  const static char MEM_MAP_NAME[];$/;"	m	class:SharedMemory
MERGING_BLOB_H_INCLUDED	core/vision/Union_find.h	/^#define MERGING_BLOB_H_INCLUDED$/;"	d
MESSAGE_SIZE	core/memory/TextLogger.cpp	/^#define MESSAGE_SIZE /;"	d	file:
MICRO	core/math/Geometry.h	/^#define MICRO /;"	d
MID	core/memory/BehaviorBlock.h	/^    MID,$/;"	e	enum:WalkMode::Mode
MIDDLE	core/motion/rswalk2014/utils/body.hpp	/^   const int MIDDLE = 1;$/;"	m	namespace:Sonar
MIDDLE_END	core/motion/rswalk2014/utils/body.hpp	/^   const float MIDDLE_END = DEG2RAD(20.f);$/;"	m	namespace:Sonar
MIDDLE_START	core/motion/rswalk2014/utils/body.hpp	/^   const float MIDDLE_START = DEG2RAD(-20.f); $/;"	m	namespace:Sonar
MIDFIELD	core/common/Roles.h	/^  MIDFIELD = 6,$/;"	e	enum:Role
MILLI	core/math/Geometry.h	/^#define MILLI /;"	d
MIN	core/motion/rswalk2014/utils/basic_maths.hpp	/^   inline static T MIN(const T &x, const T &y) {$/;"	f
MIN	core/motion/rswalk2014/utils/basic_maths.hpp	/^   inline static float MIN(const float x, const int y) {$/;"	f
MIN	core/motion/rswalk2014/utils/basic_maths.hpp	/^   inline static float MIN(const int x, const float y) {$/;"	f
MIN	core/motion/rswalk2014/utils/body.hpp	/^   const float MIN = 0.25f; \/\/ min reliable reading  $/;"	m	namespace:Sonar
MINSIZEARRAY	lib/lua/src/lmem.c	/^#define MINSIZEARRAY	/;"	d	file:
MINSTRTABSIZE	lib/lua/src/llimits.h	/^#define MINSTRTABSIZE	/;"	d
MIN_ANGLE_360	core/motion/rswalk2014/utils/angles.hpp	/^inline static float MIN_ANGLE_360(const float angleA, const float angleB) {$/;"	f
MIN_ANGLE_BETWEEN_CORNERS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MIN_ANGLE_BETWEEN_CORNERS /;"	d
MIN_ANGLE_BETWEEN_EDGE_LINES	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define MIN_ANGLE_BETWEEN_EDGE_LINES /;"	d
MIN_CLICK_TIME	core/sensor/ButtonModule.cpp	/^const float ButtonModule::MIN_CLICK_TIME = 0.01f; \/\/ accept anything$/;"	m	class:ButtonModule	file:
MIN_CLICK_TIME	core/sensor/ButtonModule.h	/^  static const float MIN_CLICK_TIME;$/;"	m	class:ButtonModule
MIN_DISTANCE	core/sonar/SonarModule.h	/^  const float MIN_DISTANCE = 0.2;$/;"	m	namespace:Sonar
MIN_EVAL_FRAC_SUCCEEDED	tools/behaviorSim/runCMAES.py	/^MIN_EVAL_FRAC_SUCCEEDED = 0.7$/;"	v
MIN_KICK_PHASE	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define MIN_KICK_PHASE /;"	d	file:
MIN_LOOKAHEAD	lib/zlib/deflate.h	/^#define MIN_LOOKAHEAD /;"	d
MIN_MATCH	lib/zlib/zutil.h	/^#define MIN_MATCH /;"	d
MIN_PEN_WIDTH	build/include/tool/VisionWindow_Draw.cpp	/^#define MIN_PEN_WIDTH /;"	d	file:
MIN_PEN_WIDTH	tools/UTNaoTool/VisionWindow_Draw.cpp	/^#define MIN_PEN_WIDTH /;"	d	file:
MIN_THETA_DIFF	core/motion/rswalk2014/utils/angles.hpp	/^inline static float MIN_THETA_DIFF(float thetaA, float thetaB) {$/;"	f
MIN_TICKS	core/motion/rswalk2014/DeadGenerator.hpp	/^#define MIN_TICKS /;"	d
MISSED_OBS_FACTOR	build/include/tool/simulation/ObservationGenerator.cpp	/^#define MISSED_OBS_FACTOR /;"	d	file:
MISSED_OBS_FACTOR	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^#define MISSED_OBS_FACTOR /;"	d	file:
MKDIR	lib/lua/Makefile	/^MKDIR= mkdir -p$/;"	m
MM_PER_M	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float MM_PER_M  = 1000.0;                            \/\/ number of millimeters in one meter$/;"	v
MOD	lib/zlib/adler32.c	/^#  define MOD(/;"	d	file:
MOD4	lib/zlib/adler32.c	/^#  define MOD4(/;"	d	file:
MODULE_NNIRD0YI	core/Module.h	/^#define MODULE_NNIRD0YI$/;"	d
MOTION	core/memory/MemoryBlock.h	/^    MOTION,$/;"	e	enum:MemoryOwner::Owner
MOTION_CALIBRATE	core/motion/rswalk2014/types/ActionCommand.hpp	/^         MOTION_CALIBRATE,                \/\/23$/;"	e	enum:ActionCommand::Body::ActionType
MOTION_CORE_2H7QHCY7	core/MotionCore.h	/^#define MOTION_CORE_2H7QHCY7$/;"	d
MOTION_DT	core/motion/rswalk2014/BodyModel.cpp	/^const float BodyModel::MOTION_DT = 1 \/ 100.0f;$/;"	m	class:BodyModel	file:
MOTION_DT	core/motion/rswalk2014/BodyModel.hpp	/^      static const float MOTION_DT;$/;"	m	class:BodyModel
MOTION_MODULE_H	core/motion/MotionModule.h	/^#define MOTION_MODULE_H$/;"	d
MOTION_SIM_H	build/include/tool/MotionSimulation.h	/^#define MOTION_SIM_H$/;"	d
MOTION_SIM_H	tools/UTNaoTool/MotionSimulation.h	/^#define MOTION_SIM_H$/;"	d
MOTION_WIDGET_H	build/include/tool/MotionGLWidget.h	/^#define MOTION_WIDGET_H$/;"	d
MOTION_WIDGET_H	tools/UTNaoTool/MotionGLWidget.h	/^#define MOTION_WIDGET_H$/;"	d
MOTOR1_REDUCTIONA_RAD	core/motion/rswalk2014/utils/body.hpp	/^      const float MOTOR1_REDUCTIONA_RAD = DEG2RAD(2.23);$/;"	m	namespace:RSJoints::Radians
MOTOR1_REDUCTIONB_RAD	core/motion/rswalk2014/utils/body.hpp	/^      const float MOTOR1_REDUCTIONB_RAD = DEG2RAD(3.43);$/;"	m	namespace:RSJoints::Radians
MOTOR2_REDUCTIONA_RAD	core/motion/rswalk2014/utils/body.hpp	/^      const float MOTOR2_REDUCTIONA_RAD = DEG2RAD(8.96);$/;"	m	namespace:RSJoints::Radians
MOTOR2_REDUCTIONB_RAD	core/motion/rswalk2014/utils/body.hpp	/^      const float MOTOR2_REDUCTIONB_RAD = DEG2RAD(12.52);$/;"	m	namespace:RSJoints::Radians
MOTOR3_REDUCTIONA_RAD	core/motion/rswalk2014/utils/body.hpp	/^      const float MOTOR3_REDUCTIONA_RAD = DEG2RAD(3.85);$/;"	m	namespace:RSJoints::Radians
MOTOR3_REDUCTIONB_RAD	core/motion/rswalk2014/utils/body.hpp	/^      const float MOTOR3_REDUCTIONB_RAD = DEG2RAD(3.34);$/;"	m	namespace:RSJoints::Radians
MSDOS	lib/zlib/zconf.h	/^#  define MSDOS$/;"	d
MS_BETWEEN_FRAMES	build/include/tool/VisionWindow.h	/^#define MS_BETWEEN_FRAMES /;"	d
MS_BETWEEN_FRAMES	tools/UTNaoTool/VisionWindow.h	/^#define MS_BETWEEN_FRAMES /;"	d
MULTIPLE_ALIASES	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const MULTIPLE_ALIASES       = "cannot assign multiple aliases to the same node";$/;"	m	namespace:YAML::ErrorMsg
MULTIPLE_ANCHORS	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const MULTIPLE_ANCHORS       = "cannot assign multiple anchors to the same node";$/;"	m	namespace:YAML::ErrorMsg
MULTIPLE_TAGS	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const MULTIPLE_TAGS          = "cannot assign multiple tags to the same node";$/;"	m	namespace:YAML::ErrorMsg
MVException	core/math/MVTools.h	/^  MVException() : type(Unknown) {}$/;"	f	class:MVException
MVException	core/math/MVTools.h	/^  MVException(ExceptionType t) : type(t) {}$/;"	f	class:MVException
MVException	core/math/MVTools.h	/^class MVException$/;"	c
MVTOOLS_H_INCLUDED	core/math/MVTools.h	/^#define MVTOOLS_H_INCLUDED$/;"	d
MVTools	core/math/MVTools.cpp	/^namespace MVTools$/;"	n	file:
MVTools	core/math/MVTools.h	/^namespace MVTools$/;"	n
MVWDELCH_IS_EXPRESSION	build/pythonswig/pyconfig.h	/^#define MVWDELCH_IS_EXPRESSION /;"	d
MYCFLAGS	lib/lua/etc/Makefile	/^MYCFLAGS= $/;"	m
MYCFLAGS	lib/lua/src/Makefile	/^MYCFLAGS=$/;"	m
MYCOMPILE	lib/lua/etc/luavs.bat	/^@set MYCOMPILE=cl \/nologo \/MD \/O2 \/W3 \/c \/D_CRT_SECURE_NO_DEPRECATE$/;"	v
MYLDFLAGS	lib/lua/etc/Makefile	/^MYLDFLAGS= -Wl,-E$/;"	m
MYLDFLAGS	lib/lua/src/Makefile	/^MYLDFLAGS=$/;"	m
MYLIBS	lib/lua/etc/Makefile	/^MYLIBS= -lm$/;"	m
MYLIBS	lib/lua/src/Makefile	/^MYLIBS=$/;"	m
MYLINK	lib/lua/etc/luavs.bat	/^@set MYLINK=link \/nologo$/;"	v
MYMT	lib/lua/etc/luavs.bat	/^@set MYMT=mt \/nologo$/;"	v
MY_ZCALLOC	lib/zlib/zutil.c	/^#  define MY_ZCALLOC$/;"	d	file:
M_2PI	core/math/Common.h	/^#define M_2PI /;"	d
MachineNode	core/python/state_machine.py	/^class MachineNode(Node):$/;"	c
Magenta	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Magenta = TORGB(255,0,255);$/;"	m	class:Colors	file:
Magenta	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Magenta	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Magenta = TORGB(255,0,255);$/;"	m	class:Colors	file:
Magenta	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
MainWindow	tools/color_classifier/include/color_classifier/main_window.hpp	/^  class MainWindow : public QMainWindow {$/;"	c	namespace:color_classifier
MainWindow	tools/color_classifier/src/main_window.cpp	/^  MainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) {$/;"	f	class:color_classifier::MainWindow
MakeTypedKeyNotFound	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	inline TypedKeyNotFound <T> MakeTypedKeyNotFound(const Mark& mark, const T& key) {$/;"	f	namespace:YAML
ManualControl	core/python/primary_bvr.py	/^class ManualControl(Task):$/;"	c
ManualSelectionType	build/include/tool/annotations/SelectionType.h	/^    ManualSelectionType,$/;"	e	enum:SelectionType
ManualSelectionType	tools/UTNaoTool/annotations/SelectionType.h	/^    ManualSelectionType,$/;"	e	enum:SelectionType
Map	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    typedef typename Impl::Map Map;$/;"	t	class:YAML::GraphBuilder
Map	lib/yaml-cpp/include/yaml-cpp/node.h	/^	struct NodeType { enum value { Null, Scalar, Sequence, Map }; };$/;"	e	enum:YAML::NodeType::value
Map	lib/yaml-cpp/test/old-api/spectests.cpp	/^			typedef std::map<std::string, std::string> Map;$/;"	t	struct:Test::Spec::StringMap	file:
MapAndList	lib/yaml-cpp/test/emittertests.cpp	/^		void MapAndList(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
MapComplete	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void MapComplete(void *pMap) {$/;"	f	class:YAML::GraphBuilder
MapComplete	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void MapComplete(void *pMap) {(void)pMap;}$/;"	f	class:YAML::GraphBuilderInterface
MapListMix	lib/yaml-cpp/test/emittertests.cpp	/^		void MapListMix(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
MappingBetweenSequences	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST MappingBetweenSequences()$/;"	f	namespace:Test::Spec
MappingOfMappings	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST MappingOfMappings()$/;"	f	namespace:Test::Spec
MappingScalarsToScalars	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST MappingScalarsToScalars() {$/;"	f	namespace:Test::Spec
MappingScalarsToSequences	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST MappingScalarsToSequences() {$/;"	f	namespace:Test::Spec
Mark	lib/yaml-cpp/include/yaml-cpp/mark.h	/^		Mark(): pos(0), line(0), column(0) {}$/;"	f	struct:YAML::Mark
Mark	lib/yaml-cpp/include/yaml-cpp/mark.h	/^		Mark(int pos_, int line_, int column_): pos(pos_), line(line_), column(column_) {}$/;"	f	struct:YAML::Mark
Mark	lib/yaml-cpp/include/yaml-cpp/mark.h	/^	struct YAML_CPP_API Mark {$/;"	s	namespace:YAML
MarkAsAliased	lib/yaml-cpp/src/node.cpp	/^	void Node::MarkAsAliased()$/;"	f	class:YAML::Node
MarkAsAliased	lib/yaml-cpp/src/nodeownership.h	/^		void MarkAsAliased(const Node& node) { m_pOwner->_MarkAsAliased(node); }$/;"	f	class:YAML::NodeOwnership
Mass	core/motion/rswalk2014/utils/body.hpp	/^   const float Mass[] = {$/;"	m	namespace:Limbs
MassCalibration	core/common/MassCalibration.h	/^  MassCalibration()$/;"	f	class:MassCalibration
MassCalibration	core/common/MassCalibration.h	/^class MassCalibration$/;"	c
MassInfo	core/common/MassCalibration.h	/^    MassInfo() : mass(0), offset() {}$/;"	f	class:MassCalibration::MassInfo
MassInfo	core/common/MassCalibration.h	/^  class MassInfo$/;"	c	class:MassCalibration
Match	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::Match(const Source& source) const$/;"	f	class:YAML::RegEx
Match	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::Match(const Stream& in) const$/;"	f	class:YAML::RegEx
Match	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::Match(const std::string& str) const$/;"	f	class:YAML::RegEx
MatchOpAnd	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::MatchOpAnd(const Source& source) const {$/;"	f	class:YAML::RegEx
MatchOpEmpty	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::MatchOpEmpty(const Source& source) const {$/;"	f	class:YAML::RegEx
MatchOpEmpty	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::MatchOpEmpty<StringCharSource>(const StringCharSource& source) const {$/;"	f	class:YAML::RegEx
MatchOpMatch	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::MatchOpMatch(const Source& source) const {$/;"	f	class:YAML::RegEx
MatchOpNot	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::MatchOpNot(const Source& source) const {$/;"	f	class:YAML::RegEx
MatchOpOr	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::MatchOpOr(const Source& source) const {$/;"	f	class:YAML::RegEx
MatchOpRange	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::MatchOpRange(const Source& source) const {$/;"	f	class:YAML::RegEx
MatchOpSeq	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::MatchOpSeq(const Source& source) const {$/;"	f	class:YAML::RegEx
MatchState	lib/lua/src/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	lib/lua/src/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
MatchUnchecked	lib/yaml-cpp/src/regeximpl.h	/^	inline int RegEx::MatchUnchecked(const Source& source) const$/;"	f	class:YAML::RegEx
Matches	lib/yaml-cpp/src/regeximpl.h	/^	inline bool RegEx::Matches(char ch) const {$/;"	f	class:YAML::RegEx
Matches	lib/yaml-cpp/src/regeximpl.h	/^	inline bool RegEx::Matches(const Source& source) const {$/;"	f	class:YAML::RegEx
Matches	lib/yaml-cpp/src/regeximpl.h	/^	inline bool RegEx::Matches(const Stream& in) const {$/;"	f	class:YAML::RegEx
Matches	lib/yaml-cpp/src/regeximpl.h	/^	inline bool RegEx::Matches(const std::string& str) const {$/;"	f	class:YAML::RegEx
MathHelperFunctions	tools/behaviorSim/cma.py	/^    class MathHelperFunctions(object):$/;"	c	class:Misc
Matrix2x2	core/math/Matrix2x2.h	/^  Matrix2x2<V>($/;"	f	class:Matrix2x2
Matrix2x2	core/math/Matrix2x2.h	/^  Matrix2x2<V>()$/;"	f	class:Matrix2x2
Matrix2x2	core/math/Matrix2x2.h	/^  Matrix2x2<V>(const Matrix2x2<V>& other)$/;"	f	class:Matrix2x2
Matrix2x2	core/math/Matrix2x2.h	/^  Matrix2x2<V>(const Vector2<V>& c0,const Vector2<V>& c1)$/;"	f	class:Matrix2x2
Matrix2x2	core/math/Matrix2x2.h	/^template <class V> class Matrix2x2$/;"	c
Matrix2x3	core/math/Matrix3x3.h	/^  Matrix2x3<V>() {}$/;"	f	class:Matrix2x3
Matrix2x3	core/math/Matrix3x3.h	/^  Matrix2x3<V>(const Vector2<V>& c0, const Vector2<V>& c1, const Vector2<V>& c2) : $/;"	f	class:Matrix2x3
Matrix2x3	core/math/Matrix3x3.h	/^template <class V> class Matrix2x3$/;"	c
Matrix3x2	core/math/Matrix3x3.h	/^  Matrix3x2<V>() {}$/;"	f	class:Matrix3x2
Matrix3x2	core/math/Matrix3x3.h	/^  Matrix3x2<V>(const Vector3<V>& c0, const Vector3<V>& c1) : $/;"	f	class:Matrix3x2
Matrix3x2	core/math/Matrix3x3.h	/^template <class V> class Matrix3x2$/;"	c
Matrix3x3	core/math/Matrix3x3.h	/^  Matrix3x3<V>($/;"	f	class:Matrix3x3
Matrix3x3	core/math/Matrix3x3.h	/^  Matrix3x3<V>()$/;"	f	class:Matrix3x3
Matrix3x3	core/math/Matrix3x3.h	/^  Matrix3x3<V>(const Matrix3x3<V>& other) $/;"	f	class:Matrix3x3
Matrix3x3	core/math/Matrix3x3.h	/^template <class V> class Matrix3x3$/;"	c
Matrix3x3_H	core/math/Matrix3x3.h	/^#define Matrix3x3_H$/;"	d
MatrixOperations	core/math/MatrixOperations.h	/^class MatrixOperations {$/;"	c
MaxAngle	core/motion/rswalk2014/utils/body.hpp	/^      const float MaxAngle[] = {$/;"	m	namespace:RSJoints::Radians
MaxSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float MaxSpeed[] = {$/;"	m	namespace:RSJoints::Radians
MaxX	core/vision/structures/FieldLine.h	/^  int MinX, MaxX, MinY, MaxY;$/;"	m	struct:FieldLine
MaxY	core/vision/structures/FieldLine.h	/^  int MinX, MaxX, MinY, MaxY;$/;"	m	struct:FieldLine
Mbuffer	lib/lua/src/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	lib/lua/src/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
Measurement	build/include/tool/calibration/JointCalibrator.h	/^    typedef JointMeasurement Measurement;$/;"	t	class:JointCalibrator
Measurement	tools/UTNaoTool/calibration/JointCalibrator.h	/^    typedef JointMeasurement Measurement;$/;"	t	class:JointCalibrator
MeasurementCovarianceMatrix	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, NumMeasurements> MeasurementCovarianceMatrix;$/;"	t	class:ExtendedKalmanFilter
MeasurementCovarianceMatrix	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, NumMeasurements> MeasurementCovarianceMatrix;$/;"	t	class:LinearKalmanFilter
MeasurementCovarianceMatrix	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, NumMeasurements> MeasurementCovarianceMatrix;$/;"	t	class:SRUnscentedKalmanFilter
MeasurementCovarianceMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, NumMeasurements> MeasurementCovarianceMatrix;$/;"	t	class:UnscentedKalmanFilter
MeasurementCovarianceMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, NumMeasurements> MeasurementCovarianceMatrix;$/;"	t	class:UnscentedKalmanFilter
MeasurementCovarianceMatrix	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeMeasurement , SizeMeasurement> MeasurementCovarianceMatrix;$/;"	t	class:MCLParticleFilter
MeasurementCovarianceMatrix	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeMeasurement , SizeMeasurement> MeasurementCovarianceMatrix;$/;"	t	class:RMCLParticleFilter
MeasurementFunction	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef boost::function<MeasurementVector(StateVector&)> MeasurementFunction;$/;"	t	class:ExtendedKalmanFilter
MeasurementFunction	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef boost::function<MeasurementVector(StateVector&)> MeasurementFunction;$/;"	t	class:SRUnscentedKalmanFilter
MeasurementFunction	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef boost::function<MeasurementVector(StateVector&)> MeasurementFunction;$/;"	t	class:UnscentedKalmanFilter
MeasurementFunction	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef boost::function<MeasurementVector(StateVector, ControlVector)> MeasurementFunction;$/;"	t	class:UnscentedKalmanFilter
MeasurementJacobianFunction	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef boost::function<MeasurementJacobianMatrix(StateVector&)> MeasurementJacobianFunction;$/;"	t	class:ExtendedKalmanFilter
MeasurementJacobianMatrix	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, NumStates> MeasurementJacobianMatrix;$/;"	t	class:ExtendedKalmanFilter
MeasurementPointMatrix	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef boost::array<MeasurementVector, (1 + 2 * NumStates)> MeasurementPointMatrix;$/;"	t	class:SRUnscentedKalmanFilter
MeasurementVector	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, 1> MeasurementVector;$/;"	t	class:ExtendedKalmanFilter
MeasurementVector	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, 1> MeasurementVector;$/;"	t	class:LinearKalmanFilter
MeasurementVector	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, 1> MeasurementVector;$/;"	t	class:SRUnscentedKalmanFilter
MeasurementVector	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, 1> MeasurementVector;$/;"	t	class:UnscentedKalmanFilter
MeasurementVector	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, 1> MeasurementVector;$/;"	t	class:UnscentedKalmanFilter
MeasurementVector	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeMeasurement , 1> MeasurementVector;$/;"	t	class:MCLParticleFilter
MeasurementVector	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeMeasurement , 1> MeasurementVector;$/;"	t	class:RMCLParticleFilter
MemMap	core/memory/PrivateMemory.h	/^typedef std::map<const std::string,MemoryBlock*> MemMap;$/;"	t
Memory	core/memory/Memory.cpp	/^Memory::Memory(bool use_shared_memory, MemoryOwner::Owner owner, int team_num, int player_num, bool server):$/;"	f	class:Memory
Memory	core/memory/Memory.cpp	/^Memory::Memory(const Memory &old):$/;"	f	class:Memory
Memory	core/memory/Memory.h	/^class Memory {$/;"	c
MemoryBlock	core/memory/MemoryBlock.cpp	/^MemoryBlock::MemoryBlock():$/;"	f	class:MemoryBlock
MemoryBlock	core/memory/MemoryBlock.h	/^class MemoryBlock {$/;"	c
MemoryBlockHeader	core/memory/MemoryBlock.h	/^struct MemoryBlockHeader {$/;"	s
MemoryBlockPtr	core/memory/SharedMemory.h	/^typedef boost::interprocess::offset_ptr<MemoryBlock> MemoryBlockPtr;$/;"	t
MemoryCache	core/memory/MemoryCache.cpp	/^MemoryCache::MemoryCache() {$/;"	f	class:MemoryCache
MemoryCache	core/memory/MemoryCache.cpp	/^MemoryCache::MemoryCache(Memory& memory) {$/;"	f	class:MemoryCache
MemoryCache	core/memory/MemoryCache.cpp	/^MemoryCache::MemoryCache(Memory* memory) {$/;"	f	class:MemoryCache
MemoryCache	core/memory/MemoryCache.h	/^class MemoryCache {$/;"	c
MemoryHeader	core/memory/Memory.h	/^struct MemoryHeader {$/;"	s
MemoryOwner	core/memory/MemoryBlock.h	/^namespace MemoryOwner {$/;"	n
MemorySource	build/include/tool/StateWindow.h	/^     MemorySource,$/;"	e	enum:StateWindow::__anon3
MemorySource	core/memory/FrameInfoBlock.h	/^enum MemorySource {$/;"	g
MemorySource	tools/UTNaoTool/StateWindow.h	/^     MemorySource,$/;"	e	enum:StateWindow::__anon141
MergeBlob	core/vision/Union_find.h	/^		MergeBlob(unsigned char *image, int x , int y , int neg_factor_x , int neg_factor_y , int pixel_threshold)$/;"	f	class:MergeBlob
MergeBlob	core/vision/Union_find.h	/^class MergeBlob$/;"	c
MergePredicate	core/vision/structures/FocusArea.h	/^  typedef bool (*MergePredicate)(const FocusArea& left, const FocusArea& right);$/;"	t	struct:FocusArea
Mh	tools/behaviorSim/cma.py	/^Mh = Misc.MathHelperFunctions$/;"	v
MinAngle	core/motion/rswalk2014/utils/body.hpp	/^      const float MinAngle[] = {$/;"	m	namespace:RSJoints::Radians
MinX	core/vision/structures/FieldLine.h	/^  int MinX, MaxX, MinY, MaxY;$/;"	m	struct:FieldLine
MinY	core/vision/structures/FieldLine.h	/^  int MinX, MaxX, MinY, MaxY;$/;"	m	struct:FieldLine
Misc	tools/behaviorSim/cma.py	/^class Misc(object):$/;"	c
MissingKey	lib/yaml-cpp/test/emittertests.cpp	/^		void MissingKey(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
MissingValue	lib/yaml-cpp/test/emittertests.cpp	/^		void MissingValue(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
Mode	core/memory/BehaviorBlock.h	/^  enum Mode {$/;"	g	struct:WalkMode
Mode	core/motion/rswalk2014/utils/body.hpp	/^   namespace Mode {$/;"	n	namespace:Sonar
Modes	core/python/behaviors/win.py	/^class Modes:$/;"	c
Module	core/Module.cpp	/^Module::Module():$/;"	f	class:Module
Module	core/Module.h	/^class Module {$/;"	c
MoreIndentedLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST MoreIndentedLines()$/;"	f	namespace:Test::Spec
MotionCore	core/MotionCore.cpp	/^MotionCore::MotionCore (CoreType type, bool use_shared_memory,int team_num, int player_num):$/;"	f	class:MotionCore
MotionCore	core/MotionCore.h	/^class MotionCore {$/;"	c
MotionGLWidget	build/include/tool/MotionGLWidget.cpp	/^MotionGLWidget::MotionGLWidget(QWidget* pa): QGLViewer(pa)  {$/;"	f	class:MotionGLWidget
MotionGLWidget	build/include/tool/MotionGLWidget.h	/^class MotionGLWidget : public QGLViewer {$/;"	c
MotionGLWidget	tools/UTNaoTool/MotionGLWidget.cpp	/^MotionGLWidget::MotionGLWidget(QWidget* pa): QGLViewer(pa)  {$/;"	f	class:MotionGLWidget
MotionGLWidget	tools/UTNaoTool/MotionGLWidget.h	/^class MotionGLWidget : public QGLViewer {$/;"	c
MotionModule	core/motion/MotionModule.h	/^class MotionModule: public Module {$/;"	c
MotionSimulation	build/include/tool/MotionSimulation.cpp	/^MotionSimulation::MotionSimulation(Memory* mem){$/;"	f	class:MotionSimulation
MotionSimulation	build/include/tool/MotionSimulation.h	/^class MotionSimulation {$/;"	c
MotionSimulation	tools/UTNaoTool/MotionSimulation.cpp	/^MotionSimulation::MotionSimulation(Memory* mem){$/;"	f	class:MotionSimulation
MotionSimulation	tools/UTNaoTool/MotionSimulation.h	/^class MotionSimulation {$/;"	c
MotionWindow	build/include/tool/MotionWindow.cpp	/^MotionWindow::MotionWindow(QMainWindow* pa) : ConfigWindow(pa) {$/;"	f	class:MotionWindow
MotionWindow	build/include/tool/MotionWindow.h	/^class MotionWindow : public ConfigWindow, public Ui_MotionWindow {$/;"	c
MotionWindow	tools/UTNaoTool/MotionWindow.cpp	/^MotionWindow::MotionWindow(QMainWindow* pa) : ConfigWindow(pa) {$/;"	f	class:MotionWindow
MotionWindow	tools/UTNaoTool/MotionWindow.h	/^class MotionWindow : public ConfigWindow, public Ui_MotionWindow {$/;"	c
Motions	core/motion/SpecialMotionParser.h	/^namespace Motions {$/;"	n
MoveHead	core/python/head.py	/^class MoveHead(Task):$/;"	c
MultiLineComment	lib/yaml-cpp/test/emittertests.cpp	/^		void MultiLineComment(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
MultiLineComments	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST MultiLineComments()$/;"	f	namespace:Test::Spec
MultiLineFlowScalars	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST MultiLineFlowScalars()$/;"	f	namespace:Test::Spec
MultiLineScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void MultiLineScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
MultiTask	core/python/pose.py	/^from task import Task, MultiTask$/;"	i
MultiTask	core/python/task.py	/^class MultiTask(BaseTask):$/;"	c
MultipleDocs	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool MultipleDocs()$/;"	f	namespace:Test::Parser
MultipleDocsWithSomeExplicitIndicators	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool MultipleDocsWithSomeExplicitIndicators()$/;"	f	namespace:Test::Parser
MutexRemover	core/memory/SynchronizedBlock.h	/^    MutexRemover(const std::string &name,bool remove) {$/;"	f	class:MutexRemover
MutexRemover	core/memory/SynchronizedBlock.h	/^class MutexRemover {$/;"	c
N	core/common/NMatrix.h	/^	int		N;			\/\/ number of columns$/;"	m	class:NMatrix
N	core/math/YaMatrix.h	/^  int M, N;$/;"	m	class:YaMatrix
N	core/math/YaMatrix.h	/^  int N;$/;"	m	class:YaVector
N	core/python/state_machine.py	/^N = NullEvent$/;"	v
N	particle_filters/MCL_particle_filter.hpp	/^    WhiteCovarianceVector N;$/;"	m	class:MCLParticleFilter
N	particle_filters/RMCL_particle_filter.hpp	/^    WhiteCovarianceVector N;$/;"	m	class:RMCLParticleFilter
NAME	lib/zlib/inflate.h	/^    NAME,       \/* i: waiting for end of file name (gzip) *\/$/;"	e	enum:__anon136
NAMED_HANDLE	lib/yaml-cpp/src/tag.h	/^			VERBATIM, PRIMARY_HANDLE, SECONDARY_HANDLE, NAMED_HANDLE, NON_SPECIFIC$/;"	e	enum:YAML::Tag::TYPE
NAME_STATE	lib/zlib/deflate.h	/^#define NAME_STATE /;"	d
NAOINTERFACE_NAOINTERFACE_H	interfaces/nao/src/naointerface.h	/^#define NAOINTERFACE_NAOINTERFACE_H$/;"	d
NAO_HOME	bin/compile	/^NAO_HOME = os.getenv('NAO_HOME')$/;"	v
NAO_HOME	bin/copy_robot	/^NAO_HOME = os.getenv('NAO_HOME')$/;"	v
NAO_HOME	build/compile	/^NAO_HOME = os.getenv('NAO_HOME')$/;"	v
NAO_HOME	build/copy_robot	/^NAO_HOME = os.getenv('NAO_HOME')$/;"	v
NAO_HOME	install/setup_robot	/^NAO_HOME = os.environ["NAO_HOME"]$/;"	v
NAO_LOCATION	core/localization/LocalizationModule.h	/^    RPF::ParticleVector NAO_LOCATION;$/;"	m	class:LocalizationModule
NAO_LOCATION	particle_filters/RMCL_particle_filter.hpp	/^    ParticleVector NAO_LOCATION;$/;"	m	class:RMCLParticleFilter
NAO_SOUND	bin/compile	/^NAO_SOUND = os.getenv('NAO_SOUND') == "true" $/;"	v
NAO_SOUND	build/compile	/^NAO_SOUND = os.getenv('NAO_SOUND') == "true" $/;"	v
NECK	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^         NECK = 9$/;"	e	enum:Kinematics::Link
NECKOFFSETZ	core/common/RobotInfo.h	/^#define NECKOFFSETZ /;"	d
NECK_TO_BOTTOM_CAMERA	core/motion/rswalk2014/perception/vision/CameraDefs.hpp	/^#define NECK_TO_BOTTOM_CAMERA /;"	d
NECK_TO_TOP_CAMERA	core/motion/rswalk2014/perception/vision/CameraDefs.hpp	/^#define NECK_TO_TOP_CAMERA /;"	d
NEEDBITS	lib/zlib/infback.c	/^#define NEEDBITS(/;"	d	file:
NEEDBITS	lib/zlib/inflate.c	/^#define NEEDBITS(/;"	d	file:
NEXT	lib/zlib/gzread.c	/^#define NEXT(/;"	d	file:
NIL	lib/zlib/deflate.c	/^#define NIL /;"	d	file:
NMAX	lib/zlib/adler32.c	/^#define NMAX /;"	d	file:
NMatrix	core/common/NMatrix.cpp	/^NMatrix::NMatrix()$/;"	f	class:NMatrix
NMatrix	core/common/NMatrix.cpp	/^NMatrix::NMatrix(const NMatrix& a)$/;"	f	class:NMatrix
NMatrix	core/common/NMatrix.cpp	/^NMatrix::NMatrix(int m, int n, bool I\/*= false*\/)  $/;"	f	class:NMatrix
NMatrix	core/common/NMatrix.h	/^class NMatrix$/;"	c
NODEBUILDER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/nodebuilder.h	/^#define NODEBUILDER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
NODEIMPL_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^#define NODEIMPL_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
NODEREADIMPL_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/nodereadimpl.h	/^#define NODEREADIMPL_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
NODETESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/test/nodetests.h	/^#define NODETESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
NODEUTIL_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^#define NODEUTIL_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
NODE_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/node.h	/^#define NODE_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
NODE_OWNERSHIP_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/nodeownership.h	/^#define NODE_OWNERSHIP_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
NODE_STATE	lib/yaml-cpp/src/emitterstate.h	/^	enum NODE_STATE {$/;"	g	namespace:YAML
NONCOPYABLE_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/noncopyable.h	/^#define NONCOPYABLE_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
NONE	core/common/Roles.h	/^  NONE = 9,$/;"	e	enum:Role
NONE	core/memory/BehaviorBlock.h	/^    NONE,$/;"	e	enum:Dive::diveTypes
NONE	core/memory/BehaviorParamBlock.h	/^    NONE,$/;"	e	enum:Cluster::Activity
NONE	core/memory/KickEngineBlock.h	/^    NONE$/;"	e	enum:KickEngineBlock::Kick_State
NONE	core/memory/OdometryBlock.h	/^    NONE,$/;"	e	enum:Fall::FallDir
NONE	core/memory/OdometryBlock.h	/^    NONE,$/;"	e	enum:Getup::GetupType
NONE	core/motion/KickParameters.h	/^    NONE,$/;"	e	enum:KickState::State
NONE	core/motion/rswalk2014/RSWalkModule2014.h	/^            NONE$/;"	e	enum:RSWalkModule2014::StepIntoKickState
NONE	core/motion/rswalk2014/Walk2014Generator.hpp	/^      NONE         = 6,$/;"	e	enum:Walk2014Generator::Walk2014Option
NONE	core/motion/rswalk2014/types/ActionCommand.hpp	/^         NONE = 0,$/;"	e	enum:ActionCommand::Body::ActionType
NONE	core/motion/rswalk2014/utils/Logger.hpp	/^   NONE  = -200,$/;"	e	enum:LogLevel
NONE	lib/yaml-cpp/src/scanner.h	/^			enum INDENT_TYPE { MAP, SEQ, NONE };$/;"	e	enum:YAML::Scanner::IndentMarker::INDENT_TYPE
NONE	lib/yaml-cpp/src/scanscalar.h	/^	enum ACTION { NONE, BREAK, THROW };$/;"	e	enum:YAML::ACTION
NON_PLAIN_SCALAR	lib/yaml-cpp/src/token.h	/^			NON_PLAIN_SCALAR$/;"	e	enum:YAML::Token::TYPE
NON_SPECIFIC	lib/yaml-cpp/src/tag.h	/^			VERBATIM, PRIMARY_HANDLE, SECONDARY_HANDLE, NAMED_HANDLE, NON_SPECIFIC$/;"	e	enum:YAML::Tag::TYPE
NORM	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^#define NORM(/;"	d	file:
NORM	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^#define NORM(/;"	d	file:
NORMAL	core/memory/KickEngineBlock.h	/^    NORMAL$/;"	e	enum:KickEngineBlock::Kick_Spec
NORMALISE	core/motion/rswalk2014/utils/angles.hpp	/^inline float NORMALISE(float t) {$/;"	f
NORMALISE_PI_2	core/motion/rswalk2014/utils/angles.hpp	/^inline float NORMALISE_PI_2(float t) {$/;"	f
NOT_A_BEACON	core/vision/BeaconDetector.h	/^    NOT_A_BEACON,$/;"	e	enum:BeaconDetector::BeaconType
NOT_A_BEACON	vision_testing/src/vision_testing.cpp	/^  NOT_A_BEACON,$/;"	e	enum:BeaconType	file:
NOT_RUNNING	core/motion/rswalk2014/ActionGenerator.hpp	/^#define NOT_RUNNING /;"	d
NOT_WALKING	core/motion/rswalk2014/Walk2014Generator.hpp	/^      NOT_WALKING    = 3,$/;"	e	enum:Walk2014Generator::WalkState
NO_DUMMY_DECL	lib/zlib/zconf.h	/^#  define NO_DUMMY_DECL$/;"	d
NO_GZCOMPRESS	lib/zlib/gzguts.h	/^#  define NO_GZCOMPRESS$/;"	d
NO_JUMP	lib/lua/src/lcode.h	/^#define NO_JUMP /;"	d
NO_KICK	core/memory/KickRequestBlock.h	/^    NO_KICK,$/;"	e	enum:Kick::Type
NO_MEMCPY	lib/zlib/zutil.h	/^#  define NO_MEMCPY$/;"	d
NO_PING	core/motion/rswalk2014/utils/body.hpp	/^      const float NO_PING     = -1.f; \/\/ This is not from Naoqi docs, and is filtered out so that no command is given$/;"	m	namespace:Sonar::Mode
NO_REG	lib/lua/src/lopcodes.h	/^#define NO_REG	/;"	d
NO_TRANSITION	core/vision/BeaconDetector.h	/^    NO_TRANSITION,$/;"	e	enum:BeaconDetector::ColorTransition
NO_TRANSITION	vision_testing/src/vision_testing.cpp	/^  NO_TRANSITION,$/;"	e	enum:ColorTransition	file:
NO_vsnprintf	lib/zlib/zconf.h	/^#  define NO_vsnprintf$/;"	d
NO_vsnprintf	lib/zlib/zutil.h	/^#    define NO_vsnprintf$/;"	d
NO_vsnprintf	lib/zlib/zutil.h	/^#  define NO_vsnprintf$/;"	d
NS_END	lib/yaml-cpp/src/emitterstate.h	/^		NS_END$/;"	e	enum:YAML::NODE_STATE
NS_READY_FOR_ATOM	lib/yaml-cpp/src/emitterstate.h	/^		NS_READY_FOR_ATOM,$/;"	e	enum:YAML::NODE_STATE
NS_START	lib/yaml-cpp/src/emitterstate.h	/^		NS_START,$/;"	e	enum:YAML::NODE_STATE
NULL_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/null.h	/^#define NULL_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
NUMBER_ADD_TO_BLUE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define NUMBER_ADD_TO_BLUE /;"	d
NUMBER_OF_JOINTS	core/motion/rswalk2014/utils/body.hpp	/^      NUMBER_OF_JOINTS$/;"	e	enum:RSJoints::JointCodesEnum
NUMBER_OF_LEDS	core/motion/rswalk2014/utils/body.hpp	/^      NUMBER_OF_LEDS$/;"	e	enum:LEDs::LEDCode
NUMBER_OF_READINGS	core/motion/rswalk2014/utils/body.hpp	/^      NUMBER_OF_READINGS$/;"	e	enum:Sonar::ReadingCodesEnum
NUMBER_OF_SENSORS	core/motion/rswalk2014/utils/body.hpp	/^      NUMBER_OF_SENSORS$/;"	e	enum:RSSensors::SensorCodesEnum
NUMBER_OF_WALK_OPTIONS	core/motion/rswalk2014/Walk2014Generator.hpp	/^      NUMBER_OF_WALK_OPTIONS$/;"	e	enum:Walk2014Generator::Walk2014Option
NUMBER_OF_WALK_STATES	core/motion/rswalk2014/Walk2014Generator.hpp	/^      NUMBER_OF_WALK_STATES$/;"	e	enum:Walk2014Generator::WalkState
NUM_ACTION_TYPES	core/motion/rswalk2014/types/ActionCommand.hpp	/^         NUM_ACTION_TYPES$/;"	e	enum:ActionCommand::Body::ActionType
NUM_AL_WALK_PARAMS	core/memory/ALWalkParamBlock.h	/^const unsigned int NUM_AL_WALK_PARAMS = 7;$/;"	v
NUM_ANGLE_SENSORS	core/common/RobotInfo.h	/^static int NUM_ANGLE_SENSORS = LAST_ANGLE_SENSOR - FIRST_ANGLE_SENSOR + 1;$/;"	v
NUM_ARM_JOINTS	core/common/RobotInfo.h	/^  NUM_ARM_JOINTS = ARM_JOINT_LAST - ARM_JOINT_FIRST + 1,$/;"	e	enum:__anon9
NUM_BEACON_TYPES	core/vision/BeaconDetector.h	/^    NUM_BEACON_TYPES$/;"	e	enum:BeaconDetector::BeaconType
NUM_BEACON_TYPES	vision_testing/src/vision_testing.cpp	/^  NUM_BEACON_TYPES$/;"	e	enum:BeaconType	file:
NUM_BODY_EXCL_POINTS	core/constants/VisionConstants.h	/^#define NUM_BODY_EXCL_POINTS /;"	d
NUM_BODY_JOINTS	core/common/RobotInfo.h	/^  NUM_BODY_JOINTS = NUM_JOINTS - NUM_HEAD_JOINTS,$/;"	e	enum:__anon9
NUM_CALIBRATION_READINGS	core/sensor/SensorModule.h	/^#define NUM_CALIBRATION_READINGS /;"	d
NUM_CAMERAS	core/motion/rswalk2014/perception/vision/WhichCamera.hpp	/^   NUM_CAMERAS        =  2$/;"	e	enum:__anon14
NUM_CAMS	build/include/tool/WorldGLWidget.h	/^      NUM_CAMS$/;"	e	enum:WorldGLWidget::__anon6
NUM_CAMS	tools/UTNaoTool/WorldGLWidget.h	/^      NUM_CAMS$/;"	e	enum:WorldGLWidget::__anon144
NUM_CAM_SETTINGS	build/include/tool/CameraWindow.h	/^#define NUM_CAM_SETTINGS /;"	d
NUM_CAM_SETTINGS	tools/UTNaoTool/CameraWindow.h	/^#define NUM_CAM_SETTINGS /;"	d
NUM_CHANNELS	core/memory/AudioProcessingBlock.h	/^#define NUM_CHANNELS /;"	d
NUM_COLORS	core/vision/enums/Colors.h	/^  NUM_COLORS      = 8$/;"	e	enum:Color
NUM_COLORS	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    NUM_COLORS$/;"	e	enum:color_classifier::Color
NUM_COLORS	vision_testing/src/vision_testing.cpp	/^  NUM_COLORS = 8$/;"	e	enum:Color	file:
NUM_COMPONENTS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   NUM_COMPONENTS$/;"	e	enum:__anon13
NUM_CONTROLS	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^#define NUM_CONTROLS /;"	d
NUM_CROSSES	core/common/WorldObject.h	/^const int NUM_CROSSES = 2;$/;"	v
NUM_DIMENSIONS	core/common/RobotDimensions.h	/^    NUM_DIMENSIONS$/;"	e	enum:RobotDimensions::__anon8
NUM_DISPLAY_OPTIONS	build/include/tool/MotionGLWidget.h	/^    NUM_DISPLAY_OPTIONS$/;"	e	enum:MotionGLWidget::__anon2
NUM_DISPLAY_OPTIONS	tools/UTNaoTool/MotionGLWidget.h	/^    NUM_DISPLAY_OPTIONS$/;"	e	enum:MotionGLWidget::__anon140
NUM_FALL_DIRS	core/memory/OdometryBlock.h	/^    NUM_FALL_DIRS$/;"	e	enum:Fall::FallDir
NUM_FIELD_PLAYERS	core/memory/BehaviorParamBlock.h	/^const unsigned int NUM_FIELD_PLAYERS = WO_TEAM_LAST - WO_TEAM_FIELD_FIRST + 1;$/;"	v
NUM_FULL_COLORS	vision_testing/src/vision_testing.cpp	/^  NUM_FULL_COLORS$/;"	e	enum:FullColor	file:
NUM_GENS	tools/behaviorSim/runCMAES.py	/^NUM_GENS = 150$/;"	v
NUM_GETUPS	core/memory/OdometryBlock.h	/^    NUM_GETUPS$/;"	e	enum:Getup::GetupType
NUM_GOAL_CANDITATES	core/constants/VisionConstants.h	/^#define NUM_GOAL_CANDITATES /;"	d
NUM_GOAL_POINTS	core/constants/VisionConstants.h	/^#define NUM_GOAL_POINTS /;"	d
NUM_GRAPHABLE_DATA	core/memory/GraphableBlock.h	/^#define NUM_GRAPHABLE_DATA /;"	d
NUM_HEAD_JOINTS	core/common/RobotInfo.h	/^  NUM_HEAD_JOINTS = 2,$/;"	e	enum:__anon9
NUM_INTERSECTIONS	core/common/WorldObject.h	/^const int NUM_INTERSECTIONS = WO_OWN_FRONT_LEFT_GOAL_T - INTERSECTION_OFFSET + 1;$/;"	v
NUM_JOINTS	core/common/RobotInfo.h	/^  NUM_JOINTS$/;"	e	enum:Joint
NUM_KICKS	core/common/Kicks.h	/^  NUM_KICKS$/;"	e	enum:kicks
NUM_KICK_REGIONS_X	core/memory/BehaviorBlock.h	/^#define NUM_KICK_REGIONS_X /;"	d
NUM_KICK_REGIONS_Y	core/memory/BehaviorBlock.h	/^#define NUM_KICK_REGIONS_Y /;"	d
NUM_KICK_STATES	core/motion/KickParameters.h	/^    NUM_KICK_STATES = FINISHSTAND+1$/;"	e	enum:KickState::State
NUM_LANDMARKS	core/common/WorldObject.h	/^const int NUM_LANDMARKS = WO_OPP_RIGHT_GOALPOST - LANDMARK_OFFSET + 1;$/;"	v
NUM_LEDS	core/common/RobotInfo.h	/^  NUM_LEDS$/;"	e	enum:LED
NUM_LEG_JOINTS	core/common/RobotInfo.h	/^  NUM_LEG_JOINTS = LEG_JOINT_LAST - LEG_JOINT_FIRST + 1$/;"	e	enum:__anon9
NUM_LINES	core/common/WorldObject.h	/^const int NUM_LINES = WO_OWN_RIGHT_GOALBAR - LINE_OFFSET + 1;$/;"	v
NUM_L_INTS	core/common/WorldObject.h	/^const int NUM_L_INTS = 8;$/;"	v
NUM_MODES	build/include/tool/MotionGLWidget.h	/^    NUM_MODES$/;"	e	enum:MotionGLWidget::__anon1
NUM_MODES	tools/UTNaoTool/MotionGLWidget.h	/^    NUM_MODES$/;"	e	enum:MotionGLWidget::__anon139
NUM_MODULES	build/include/tool/LogSelectWindow.h	/^    int NUM_MODULES;$/;"	m	class:LogSelectWindow
NUM_MODULES	tools/UTNaoTool/LogSelectWindow.h	/^    int NUM_MODULES;$/;"	m	class:LogSelectWindow
NUM_MODULE_TYPES	core/memory/TextLogger.h	/^  NUM_MODULE_TYPES$/;"	e	enum:modulesTypes
NUM_OPCODES	lib/lua/src/lopcodes.h	/^#define NUM_OPCODES	/;"	d
NUM_PARTS	core/common/RobotInfo.h	/^		NUM_PARTS$/;"	e	enum:BodyPart::Part
NUM_PENALTY_POSES	core/common/RobotPositions.h	/^const unsigned int NUM_PENALTY_POSES = 2;$/;"	v
NUM_PLAYERS	core/common/WorldObject.h	/^const int NUM_PLAYERS = WO_TEAM_LAST - WO_TEAM_FIRST + 1;$/;"	v
NUM_POINTS	core/common/RobotInfo.h	/^    NUM_POINTS,$/;"	e	enum:BodyFrame::Part
NUM_RESERVED	lib/lua/src/llex.h	/^#define NUM_RESERVED	/;"	d
NUM_ROBOTS_ON_TEAM	core/common/RobotPositions.h	/^const unsigned int NUM_ROBOTS_ON_TEAM = WO_TEAM_LAST-WO_TEAM_FIRST+1;$/;"	v
NUM_ROLES	core/common/Roles.h	/^  NUM_ROLES = NONE$/;"	e	enum:Role
NUM_SENSORS	core/common/RobotInfo.h	/^  NUM_SENSORS$/;"	e	enum:Sensor
NUM_SET_PLAYS	core/memory/BehaviorParamBlock.h	/^  static const unsigned int NUM_SET_PLAYS = 2;$/;"	m	struct:SetPlayStrategy
NUM_SONAR_VALS	core/common/RobotInfo.h	/^#define NUM_SONAR_VALS /;"	d
NUM_TAGS	lib/lua/src/lobject.h	/^#define NUM_TAGS	/;"	d
NUM_TEAM_POSES	core/common/RobotPositions.h	/^const unsigned int NUM_TEAM_POSES = NUM_ROBOTS_ON_TEAM + 1; \/\/ + 1 for default (placed at ind 0)$/;"	v
NUM_T_INTS	core/common/WorldObject.h	/^const int NUM_T_INTS = 6;$/;"	v
NUM_UNKNOWN_L	core/common/WorldObject.h	/^const int NUM_UNKNOWN_L = 2;$/;"	v
NUM_UNKNOWN_LINES	core/common/WorldObject.h	/^const int NUM_UNKNOWN_LINES = 4;$/;"	v
NUM_UNKNOWN_POSTS	core/common/WorldObject.h	/^const int NUM_UNKNOWN_POSTS = 3;$/;"	v
NUM_UNKNOWN_T	core/common/WorldObject.h	/^const int NUM_UNKNOWN_T = 2;$/;"	v
NUM_VISION_BODY_POINTS	core/memory/RobotVisionBlock.h	/^    NUM_VISION_BODY_POINTS$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
NUM_VISION_BODY_POINTS	core/vision/enums/VisionBodyPoints.h	/^  NUM_VISION_BODY_POINTS$/;"	e	enum:VisionBodyPoints
NUM_WALK_MODES	core/memory/BehaviorBlock.h	/^    NUM_WALK_MODES$/;"	e	enum:WalkMode::Mode
NaN	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool NaN()$/;"	f	namespace:Test::Parser
NamedHandle	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		struct Type { enum value { Verbatim, PrimaryHandle, NamedHandle }; };$/;"	e	enum:YAML::_Tag::Type::value
NaoCamera	core/imageCapture/NaoCamera.cpp	/^NaoCamera::NaoCamera(const ImageParams& iparams, CameraParams& camera_params, CameraParams& read_camera_params) : iparams_(iparams), currentBuf(0), timeStamp(0), storedTimeStamp(0), initialized(false), camera_params_(camera_params), read_camera_params_(read_camera_params) {}$/;"	f	class:NaoCamera
NaoCamera	core/imageCapture/NaoCamera.h	/^class NaoCamera$/;"	c
NeckCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float NeckCoM[] = {-0.01, 0.14, -27.42, 1};$/;"	m	namespace:Limbs
NeckMass	core/motion/rswalk2014/utils/body.hpp	/^   const float NeckMass = 0.06442; \/\/ Head Yaw$/;"	m	namespace:Limbs
NeckOffsetZ	core/motion/rswalk2014/utils/body.hpp	/^   const float NeckOffsetZ = 126.50;$/;"	m	namespace:Limbs
NegInfValue	core/math/MVTools.h	/^    NegInfValue,$/;"	e	enum:MVException::ExceptionType
Negate	core/python/state_machine.py	/^def Negate(eventType):$/;"	f
NegatedEventType	core/python/state_machine.py	/^  class NegatedEventType(NegationEvent):$/;"	c	function:Negate
NegationEvent	core/python/state_machine.py	/^class NegationEvent(Event):$/;"	c
NestedBlockMap	lib/yaml-cpp/test/emittertests.cpp	/^		void NestedBlockMap(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
NestedBlockSeq	lib/yaml-cpp/test/emittertests.cpp	/^		void NestedBlockSeq(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
NestedFlowMap	lib/yaml-cpp/test/emittertests.cpp	/^		void NestedFlowMap(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
NestedFlowSeq	lib/yaml-cpp/test/emittertests.cpp	/^		void NestedFlowSeq(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
NewMap	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void *NewMap(const Mark& mark, const std::string& tag, void *pParentNode) {$/;"	f	class:YAML::GraphBuilder
NewNull	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void *NewNull(const Mark& mark, void* pParentNode) {$/;"	f	class:YAML::GraphBuilder
NewScalar	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void *NewScalar(const Mark& mark, const std::string& tag, void *pParentNode, const std::string& value) {$/;"	f	class:YAML::GraphBuilder
NewSequence	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void *NewSequence(const Mark& mark, const std::string& tag, void *pParentNode) {$/;"	f	class:YAML::GraphBuilder
Newline	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Newline,$/;"	e	enum:YAML::EMITTER_MANIP
NewlineAtEnd	lib/yaml-cpp/test/emittertests.cpp	/^		void NewlineAtEnd(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
NewlineInBlockMap	lib/yaml-cpp/test/emittertests.cpp	/^		void NewlineInBlockMap(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
NewlineInBlockSequence	lib/yaml-cpp/test/emittertests.cpp	/^		void NewlineInBlockSequence(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
NewlineInFlowMap	lib/yaml-cpp/test/emittertests.cpp	/^		void NewlineInFlowMap(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
NewlineInFlowSequence	lib/yaml-cpp/test/emittertests.cpp	/^		void NewlineInFlowSequence(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Node	core/python/state_machine.py	/^class Node(Task):$/;"	c
Node	lib/lua/src/lobject.h	/^typedef struct Node {$/;"	s
Node	lib/lua/src/lobject.h	/^} Node;$/;"	t	typeref:struct:Node
Node	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    typedef typename Impl::Node Node;$/;"	t	class:YAML::GraphBuilder
Node	lib/yaml-cpp/include/yaml-cpp/node.h	/^	class YAML_CPP_API Node: private noncopyable$/;"	c	namespace:YAML
Node	lib/yaml-cpp/src/node.cpp	/^	Node::Node(): m_pOwnership(new NodeOwnership), m_type(NodeType::Null)$/;"	f	class:YAML::Node
Node	lib/yaml-cpp/src/node.cpp	/^	Node::Node(NodeOwnership& owner): m_pOwnership(new NodeOwnership(&owner)), m_type(NodeType::Null)$/;"	f	class:YAML::Node
NodeAnchors	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST NodeAnchors()$/;"	f	namespace:Test::Spec
NodeBuilder	lib/yaml-cpp/src/nodebuilder.cpp	/^	NodeBuilder::NodeBuilder(Node& root): m_root(root), m_initializedRoot(false), m_finished(false)$/;"	f	class:YAML::NodeBuilder
NodeBuilder	lib/yaml-cpp/src/nodebuilder.h	/^	class NodeBuilder: public EventHandler$/;"	c	namespace:YAML
NodeOwnership	lib/yaml-cpp/src/nodeownership.cpp	/^	NodeOwnership::NodeOwnership(NodeOwnership *pOwner): m_pOwner(pOwner)$/;"	f	class:YAML::NodeOwnership
NodeOwnership	lib/yaml-cpp/src/nodeownership.h	/^	class NodeOwnership: private noncopyable$/;"	c	namespace:YAML
NodeProperties	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST NodeProperties()$/;"	f	namespace:Test::Spec
NodePropertyIndicators	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST NodePropertyIndicators()$/;"	f	namespace:Test::Spec
NodeType	lib/yaml-cpp/include/yaml-cpp/node.h	/^	struct NodeType { enum value { Null, Scalar, Sequence, Map }; };$/;"	s	namespace:YAML
NoiseHandler	tools/behaviorSim/cma.py	/^class NoiseHandler(object):$/;"	c
NonConstKey	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool NonConstKey()$/;"	f	namespace:Test::Parser
NonSpecificTags	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST NonSpecificTags()$/;"	f	namespace:Test::Spec
None	build/include/tool/annotations/SelectionMode.h	/^    None,$/;"	e	enum:SelectionMode
None	lib/yaml-cpp/src/collectionstack.h	/^		enum value { None, BlockMap, BlockSeq, FlowMap, FlowSeq, CompactMap };$/;"	e	enum:YAML::CollectionType::value
None	tools/UTNaoTool/annotations/SelectionMode.h	/^    None,$/;"	e	enum:SelectionMode
Normal	build/include/tool/ProcessExecutor.h	/^      Normal,$/;"	e	enum:ProcessExecutor::ProcessPriority
Normal	tools/UTNaoTool/ProcessExecutor.h	/^      Normal,$/;"	e	enum:ProcessExecutor::ProcessPriority
NotPrintable	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& NotPrintable() {$/;"	f	namespace:YAML::Exp
Null	core/motion/SpecialMotionParser.h	/^  Null=0,$/;"	e	enum:Motions::motionType
Null	lib/yaml-cpp/include/yaml-cpp/node.h	/^	struct NodeType { enum value { Null, Scalar, Sequence, Map }; };$/;"	e	enum:YAML::NodeType::value
Null	lib/yaml-cpp/src/null.cpp	/^	_Null Null;$/;"	m	namespace:YAML	file:
Null	lib/yaml-cpp/test/emittertests.cpp	/^		void Null(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
NullAnchor	lib/yaml-cpp/include/yaml-cpp/anchor.h	/^	const anchor_t NullAnchor = 0;$/;"	m	namespace:YAML
NullBlockMapKey	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool NullBlockMapKey()$/;"	f	namespace:Test::Parser
NullBlockMapValue	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool NullBlockMapValue()$/;"	f	namespace:Test::Parser
NullBlockSeqEntry	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool NullBlockSeqEntry()$/;"	f	namespace:Test::Parser
NullEvent	core/python/state_machine.py	/^class NullEvent(Event):$/;"	c
NullEventHandler	lib/yaml-cpp/util/parse.cpp	/^class NullEventHandler: public YAML::EventHandler$/;"	c	file:
NullGenerator	core/motion/rswalk2014/NullGenerator.cpp	/^NullGenerator::NullGenerator() {$/;"	f	class:NullGenerator
NullGenerator	core/motion/rswalk2014/NullGenerator.hpp	/^class NullGenerator : Generator {$/;"	c
NullTask	core/python/task.py	/^class NullTask(Task):$/;"	c
NumItems	build/include/tool/StateWindow.h	/^     NumItems$/;"	e	enum:StateWindow::__anon3
NumItems	tools/UTNaoTool/StateWindow.h	/^     NumItems$/;"	e	enum:StateWindow::__anon141
NumParticle	particle_filters/MCL_main.cpp	/^const int NumParticle = 100*50;$/;"	v
NumParticle	particle_filters/main.cpp	/^const int NumParticle = 50*25;$/;"	v
NumPriorities	build/include/tool/ProcessExecutor.h	/^      NumPriorities$/;"	e	enum:ProcessExecutor::ProcessPriority
NumPriorities	tools/UTNaoTool/ProcessExecutor.h	/^      NumPriorities$/;"	e	enum:ProcessExecutor::ProcessPriority
NumSelectionTypes	build/include/tool/annotations/SelectionType.h	/^    NumSelectionTypes$/;"	e	enum:SelectionType
NumSelectionTypes	tools/UTNaoTool/annotations/SelectionType.h	/^    NumSelectionTypes$/;"	e	enum:SelectionType
OBJA	lib/zlib/Makefile	/^OBJA =$/;"	m
OBJC	lib/zlib/Makefile	/^OBJC = adler32.o compress.o crc32.o deflate.o gzclose.o gzlib.o gzread.o \\$/;"	m
OBJECTS_GL_H	build/include/tool/UTOpenGL/ObjectsGL.h	/^#define OBJECTS_GL_H$/;"	d
OBJECTS_GL_H	tools/UTNaoTool/UTOpenGL/ObjectsGL.h	/^#define OBJECTS_GL_H$/;"	d
OBJS	lib/zlib/Makefile	/^OBJS = $(OBJC) $(OBJA)$/;"	m
OBJ_IMAGE	build/include/tool/VisionWindow.h	/^#define OBJ_IMAGE /;"	d
OBJ_IMAGE	tools/UTNaoTool/VisionWindow.h	/^#define OBJ_IMAGE /;"	d
OBSERVATION_GENERATOR_H	build/include/tool/simulation/ObservationGenerator.h	/^#define OBSERVATION_GENERATOR_H$/;"	d
OBSERVATION_GENERATOR_H	tools/UTNaoTool/simulation/ObservationGenerator.h	/^#define OBSERVATION_GENERATOR_H$/;"	d
ODOMETRY_	core/memory/OdometryBlock.h	/^#define ODOMETRY_$/;"	d
ODOMETRY_LAG	core/motion/rswalk2014/RSWalkModule2014.cpp	/^#define ODOMETRY_LAG /;"	d	file:
OF	lib/zlib/zconf.h	/^#    define OF(/;"	d
OFF	lib/zlib/inffast.c	/^#  define OFF /;"	d	file:
OFFENSIVEHALF	build/include/tool/WorldGLWidget.h	/^      OFFENSIVEHALF,$/;"	e	enum:WorldGLWidget::__anon6
OFFENSIVEHALF	tools/UTNaoTool/WorldGLWidget.h	/^      OFFENSIVEHALF,$/;"	e	enum:WorldGLWidget::__anon144
OFFENSIVEISO	build/include/tool/WorldGLWidget.h	/^      OFFENSIVEISO,$/;"	e	enum:WorldGLWidget::__anon6
OFFENSIVEISO	tools/UTNaoTool/WorldGLWidget.h	/^      OFFENSIVEISO,$/;"	e	enum:WorldGLWidget::__anon144
OFFNAO_FIELD_LENGTH_OFFSET	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define OFFNAO_FIELD_LENGTH_OFFSET /;"	d
OFFNAO_FIELD_WIDTH_OFFSET	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define OFFNAO_FIELD_WIDTH_OFFSET /;"	d
OFFNAO_FULL_FIELD_LENGTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^#define OFFNAO_FULL_FIELD_LENGTH /;"	d
OFFNAO_FULL_FIELD_WIDTH	core/motion/rswalk2014/utils/SPLDefs.hpp	/^#define OFFNAO_FULL_FIELD_WIDTH /;"	d
ONELEG	core/memory/KickEngineBlock.h	/^    ONELEG,$/;"	e	enum:KickEngineBlock::Kick_State
OOOptimizer	tools/behaviorSim/cma.py	/^class OOOptimizer(object): $/;"	c
OP	build/include/tool/simulation/CoachSimulation.cpp	/^typedef ObjectConfiguration OP;$/;"	t	file:
OP	build/include/tool/simulation/GoalieSimulation.cpp	/^typedef ObjectConfiguration OP;$/;"	t	file:
OP	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^typedef ObjectConfiguration OP;$/;"	t	file:
OP	tools/UTNaoTool/simulation/CoachSimulation.cpp	/^typedef ObjectConfiguration OP;$/;"	t	file:
OP	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^typedef ObjectConfiguration OP;$/;"	t	file:
OP	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^typedef ObjectConfiguration OP;$/;"	t	file:
OPEN_FEET	core/motion/rswalk2014/types/ActionCommand.hpp	/^         OPEN_FEET,                       \/\/10$/;"	e	enum:ActionCommand::Body::ActionType
OPPONENTBLOCK_	core/memory/OpponentBlock.h	/^#define OPPONENTBLOCK_$/;"	d
OPR_ADD	lib/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	lib/lua/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_CONCAT	lib/lua/src/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	lib/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_EQ	lib/lua/src/lcode.h	/^  OPR_NE, OPR_EQ,$/;"	e	enum:BinOpr
OPR_GE	lib/lua/src/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	lib/lua/src/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_LE	lib/lua/src/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_LEN	lib/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	lib/lua/src/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_MINUS	lib/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	lib/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	lib/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	lib/lua/src/lcode.h	/^  OPR_NE, OPR_EQ,$/;"	e	enum:BinOpr
OPR_NOBINOPR	lib/lua/src/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	lib/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	lib/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	lib/lua/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	lib/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SUB	lib/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPTIMIZE_POSITION	build/include/tool/calibration/JointCalibrator.cpp	/^#define OPTIMIZE_POSITION /;"	d	file:
OPTIMIZE_POSITION	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^#define OPTIMIZE_POSITION /;"	d	file:
OP_ADD	lib/lua/src/lopcodes.h	/^OP_ADD,\/*	A B C	R(A) := RK(B) + RK(C)				*\/$/;"	e	enum:__anon93
OP_CALL	lib/lua/src/lopcodes.h	/^OP_CALL,\/*	A B C	R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1)) *\/$/;"	e	enum:__anon93
OP_CLOSE	lib/lua/src/lopcodes.h	/^OP_CLOSE,\/*	A 	close all variables in the stack up to (>=) R(A)*\/$/;"	e	enum:__anon93
OP_CLOSURE	lib/lua/src/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R(A) := closure(KPROTO[Bx], R(A), ... ,R(A+n))	*\/$/;"	e	enum:__anon93
OP_CONCAT	lib/lua/src/lopcodes.h	/^OP_CONCAT,\/*	A B C	R(A) := R(B).. ... ..R(C)			*\/$/;"	e	enum:__anon93
OP_DIV	lib/lua/src/lopcodes.h	/^OP_DIV,\/*	A B C	R(A) := RK(B) \/ RK(C)				*\/$/;"	e	enum:__anon93
OP_EQ	lib/lua/src/lopcodes.h	/^OP_EQ,\/*	A B C	if ((RK(B) == RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon93
OP_FORLOOP	lib/lua/src/lopcodes.h	/^OP_FORLOOP,\/*	A sBx	R(A)+=R(A+2);$/;"	e	enum:__anon93
OP_FORPREP	lib/lua/src/lopcodes.h	/^OP_FORPREP,\/*	A sBx	R(A)-=R(A+2); pc+=sBx				*\/$/;"	e	enum:__anon93
OP_GETGLOBAL	lib/lua/src/lopcodes.h	/^OP_GETGLOBAL,\/*	A Bx	R(A) := Gbl[Kst(Bx)]				*\/$/;"	e	enum:__anon93
OP_GETTABLE	lib/lua/src/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R(A) := R(B)[RK(C)]				*\/$/;"	e	enum:__anon93
OP_GETUPVAL	lib/lua/src/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R(A) := UpValue[B]				*\/$/;"	e	enum:__anon93
OP_JMP	lib/lua/src/lopcodes.h	/^OP_JMP,\/*	sBx	pc+=sBx					*\/$/;"	e	enum:__anon93
OP_LE	lib/lua/src/lopcodes.h	/^OP_LE,\/*	A B C	if ((RK(B) <= RK(C)) ~= A) then pc++  		*\/$/;"	e	enum:__anon93
OP_LEN	lib/lua/src/lopcodes.h	/^OP_LEN,\/*	A B	R(A) := length of R(B)				*\/$/;"	e	enum:__anon93
OP_LOADBOOL	lib/lua/src/lopcodes.h	/^OP_LOADBOOL,\/*	A B C	R(A) := (Bool)B; if (C) pc++			*\/$/;"	e	enum:__anon93
OP_LOADK	lib/lua/src/lopcodes.h	/^OP_LOADK,\/*	A Bx	R(A) := Kst(Bx)					*\/$/;"	e	enum:__anon93
OP_LOADNIL	lib/lua/src/lopcodes.h	/^OP_LOADNIL,\/*	A B	R(A) := ... := R(B) := nil			*\/$/;"	e	enum:__anon93
OP_LT	lib/lua/src/lopcodes.h	/^OP_LT,\/*	A B C	if ((RK(B) <  RK(C)) ~= A) then pc++  		*\/$/;"	e	enum:__anon93
OP_MOD	lib/lua/src/lopcodes.h	/^OP_MOD,\/*	A B C	R(A) := RK(B) % RK(C)				*\/$/;"	e	enum:__anon93
OP_MOVE	lib/lua/src/lopcodes.h	/^OP_MOVE,\/*	A B	R(A) := R(B)					*\/$/;"	e	enum:__anon93
OP_MUL	lib/lua/src/lopcodes.h	/^OP_MUL,\/*	A B C	R(A) := RK(B) * RK(C)				*\/$/;"	e	enum:__anon93
OP_NEWTABLE	lib/lua/src/lopcodes.h	/^OP_NEWTABLE,\/*	A B C	R(A) := {} (size = B,C)				*\/$/;"	e	enum:__anon93
OP_NOT	lib/lua/src/lopcodes.h	/^OP_NOT,\/*	A B	R(A) := not R(B)				*\/$/;"	e	enum:__anon93
OP_POW	lib/lua/src/lopcodes.h	/^OP_POW,\/*	A B C	R(A) := RK(B) ^ RK(C)				*\/$/;"	e	enum:__anon93
OP_RETURN	lib/lua/src/lopcodes.h	/^OP_RETURN,\/*	A B	return R(A), ... ,R(A+B-2)	(see note)	*\/$/;"	e	enum:__anon93
OP_SELF	lib/lua/src/lopcodes.h	/^OP_SELF,\/*	A B C	R(A+1) := R(B); R(A) := R(B)[RK(C)]		*\/$/;"	e	enum:__anon93
OP_SETGLOBAL	lib/lua/src/lopcodes.h	/^OP_SETGLOBAL,\/*	A Bx	Gbl[Kst(Bx)] := R(A)				*\/$/;"	e	enum:__anon93
OP_SETLIST	lib/lua/src/lopcodes.h	/^OP_SETLIST,\/*	A B C	R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B	*\/$/;"	e	enum:__anon93
OP_SETTABLE	lib/lua/src/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R(A)[RK(B)] := RK(C)				*\/$/;"	e	enum:__anon93
OP_SETUPVAL	lib/lua/src/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R(A)				*\/$/;"	e	enum:__anon93
OP_SUB	lib/lua/src/lopcodes.h	/^OP_SUB,\/*	A B C	R(A) := RK(B) - RK(C)				*\/$/;"	e	enum:__anon93
OP_TAILCALL	lib/lua/src/lopcodes.h	/^OP_TAILCALL,\/*	A B C	return R(A)(R(A+1), ... ,R(A+B-1))		*\/$/;"	e	enum:__anon93
OP_TEST	lib/lua/src/lopcodes.h	/^OP_TEST,\/*	A C	if not (R(A) <=> C) then pc++			*\/ $/;"	e	enum:__anon93
OP_TESTSET	lib/lua/src/lopcodes.h	/^OP_TESTSET,\/*	A B C	if (R(B) <=> C) then R(A) := R(B) else pc++	*\/ $/;"	e	enum:__anon93
OP_TFORLOOP	lib/lua/src/lopcodes.h	/^OP_TFORLOOP,\/*	A C	R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2)); $/;"	e	enum:__anon93
OP_UNM	lib/lua/src/lopcodes.h	/^OP_UNM,\/*	A B	R(A) := -R(B)					*\/$/;"	e	enum:__anon93
OP_VARARG	lib/lua/src/lopcodes.h	/^OP_VARARG\/*	A B	R(A), R(A+1), ..., R(A+B-1) = vararg		*\/$/;"	e	enum:__anon93
ORANGE	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    ORANGE,$/;"	e	enum:color_classifier::Color
ORIENTATION	core/motion/rswalk2014/types/RRCoord.hpp	/^   ORIENTATION,$/;"	e	enum:__anon15
OS	lib/zlib/inflate.h	/^    OS,         \/* i: waiting for extra flags and operating system (gzip) *\/$/;"	e	enum:__anon136
OS2	lib/zlib/zconf.h	/^#  define OS2$/;"	d
OSTREAM_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^#define OSTREAM_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
OS_CODE	lib/zlib/zutil.h	/^#    define OS_CODE /;"	d
OS_CODE	lib/zlib/zutil.h	/^#  define OS_CODE /;"	d
OUR_TEAM	build/include/tool/simulation/BehaviorSimulation.cpp	/^#define OUR_TEAM /;"	d	file:
OUR_TEAM	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^#define OUR_TEAM /;"	d	file:
OUTPUT	lib/lua/src/luac.c	/^#define	OUTPUT	/;"	d	file:
OUTSIDE	core/memory/KickEngineBlock.h	/^    OUTSIDE,$/;"	e	enum:KickEngineBlock::Kick_Spec
OVERHEAD	build/include/tool/WorldGLWidget.h	/^      OVERHEAD,$/;"	e	enum:WorldGLWidget::__anon6
OVERHEAD	tools/UTNaoTool/WorldGLWidget.h	/^      OVERHEAD,$/;"	e	enum:WorldGLWidget::__anon144
OVERHEADREV	build/include/tool/WorldGLWidget.h	/^      OVERHEADREV,$/;"	e	enum:WorldGLWidget::__anon6
OVERHEADREV	tools/UTNaoTool/WorldGLWidget.h	/^      OVERHEADREV,$/;"	e	enum:WorldGLWidget::__anon144
OWN_AE	lib/alglib/ap.h	/^enum { OWN_CALLER=1, OWN_AE=2 };$/;"	e	enum:alglib_impl::__anon28
OWN_CALLER	lib/alglib/ap.h	/^enum { OWN_CALLER=1, OWN_AE=2 };$/;"	e	enum:alglib_impl::__anon28
ObjectAccessor	core/python/mem_objects.py	/^class ObjectAccessor:$/;"	c
ObjectConfiguration	core/common/FieldConfiguration.h	/^    ObjectConfiguration(float x, float y, float orientation = 0, float height = 0) : loc(x,y), orientation(orientation), height(height) {$/;"	f	class:ObjectConfiguration
ObjectConfiguration	core/common/FieldConfiguration.h	/^class ObjectConfiguration : public YamlConfig {$/;"	c
ObjectDetector	core/vision/ObjectDetector.h	/^   ObjectDetector(DETECTOR_DECLARE_ARGS) :$/;"	f	class:ObjectDetector
ObjectDetector	core/vision/ObjectDetector.h	/^class ObjectDetector {$/;"	c
ObjectSet	core/common/WorldObject.h	/^typedef std::vector<WorldObject> ObjectSet;$/;"	t
ObjectsGL	build/include/tool/UTOpenGL/ObjectsGL.h	/^class ObjectsGL {$/;"	c
ObjectsGL	tools/UTNaoTool/UTOpenGL/ObjectsGL.h	/^class ObjectsGL {$/;"	c
ObservationGenerator	build/include/tool/simulation/ObservationGenerator.cpp	/^ObservationGenerator::ObservationGenerator() : iparams_(Camera::TOP) {$/;"	f	class:ObservationGenerator
ObservationGenerator	build/include/tool/simulation/ObservationGenerator.cpp	/^ObservationGenerator::ObservationGenerator(const ObservationGenerator& og) : iparams_(Camera::TOP) {$/;"	f	class:ObservationGenerator
ObservationGenerator	build/include/tool/simulation/ObservationGenerator.h	/^class ObservationGenerator {$/;"	c
ObservationGenerator	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^ObservationGenerator::ObservationGenerator() : iparams_(Camera::TOP) {$/;"	f	class:ObservationGenerator
ObservationGenerator	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^ObservationGenerator::ObservationGenerator(const ObservationGenerator& og) : iparams_(Camera::TOP) {$/;"	f	class:ObservationGenerator
ObservationGenerator	tools/UTNaoTool/simulation/ObservationGenerator.h	/^class ObservationGenerator {$/;"	c
Oct	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Oct,$/;"	e	enum:YAML::EMITTER_MANIP
Odometry	core/motion/rswalk2014/types/Odometry.hpp	/^   Odometry(float f = 0.0f, float l = 0.0f, float t = 0.0f)$/;"	f	struct:Odometry
Odometry	core/motion/rswalk2014/types/Odometry.hpp	/^struct Odometry {$/;"	s
OdometryBlock	core/memory/OdometryBlock.h	/^  OdometryBlock() {$/;"	f	struct:OdometryBlock
OdometryBlock	core/memory/OdometryBlock.h	/^struct OdometryBlock : public MemoryBlock {$/;"	s
Off	core/python/behaviors/Distance.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/Movement.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/custom_kick.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/head_tracking.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/kick.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/pid_distance_angle.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/stamp_in_circles.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/stand.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/walk_to_center.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/walk_to_center_2.py	/^  class Off(Node):$/;"	c	class:Playing
Off	core/python/behaviors/win.py	/^  class Off(Node):$/;"	c	class:Playing
Offset	core/vision/structures/FieldLine.h	/^  float Offset;$/;"	m	struct:FieldLine
OldKick	core/python/cfgstiff.py	/^OldKick = [0] * core.NUM_JOINTS$/;"	v
OldKickLeftLegOne	core/python/cfgstiff.py	/^OldKickLeftLegOne = [0] * core.NUM_JOINTS$/;"	v
OldKickLegOne	core/python/cfgstiff.py	/^OldKickLegOne = [0] * core.NUM_JOINTS$/;"	v
OldKickRightLegOne	core/python/cfgstiff.py	/^OldKickRightLegOne = [0] * core.NUM_JOINTS$/;"	v
OnAlias	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void GraphBuilderAdapter::OnAlias(const Mark& mark, anchor_t anchor)$/;"	f	class:YAML::GraphBuilderAdapter
OnAlias	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::OnAlias(const Mark&, anchor_t anchor)$/;"	f	class:YAML::EmitFromEvents
OnAlias	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::OnAlias(const Mark& \/*mark*\/, anchor_t anchor)$/;"	f	class:YAML::NodeBuilder
OnAlias	lib/yaml-cpp/util/parse.cpp	/^	virtual void OnAlias(const YAML::Mark&, YAML::anchor_t) {}$/;"	f	class:NullEventHandler
OnDocumentEnd	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    virtual void OnDocumentEnd() {}$/;"	f	class:YAML::GraphBuilderAdapter
OnDocumentEnd	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::OnDocumentEnd()$/;"	f	class:YAML::EmitFromEvents
OnDocumentEnd	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::OnDocumentEnd()$/;"	f	class:YAML::NodeBuilder
OnDocumentEnd	lib/yaml-cpp/util/parse.cpp	/^	virtual void OnDocumentEnd() {}$/;"	f	class:NullEventHandler
OnDocumentStart	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    virtual void OnDocumentStart(const Mark& mark) {(void)mark;}$/;"	f	class:YAML::GraphBuilderAdapter
OnDocumentStart	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::OnDocumentStart(const Mark&)$/;"	f	class:YAML::EmitFromEvents
OnDocumentStart	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::OnDocumentStart(const Mark&)$/;"	f	class:YAML::NodeBuilder
OnDocumentStart	lib/yaml-cpp/util/parse.cpp	/^	virtual void OnDocumentStart(const YAML::Mark&) {}$/;"	f	class:NullEventHandler
OnMapEnd	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void GraphBuilderAdapter::OnMapEnd()$/;"	f	class:YAML::GraphBuilderAdapter
OnMapEnd	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::OnMapEnd()$/;"	f	class:YAML::EmitFromEvents
OnMapEnd	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::OnMapEnd()$/;"	f	class:YAML::NodeBuilder
OnMapEnd	lib/yaml-cpp/util/parse.cpp	/^	virtual void OnMapEnd() {}$/;"	f	class:NullEventHandler
OnMapStart	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void GraphBuilderAdapter::OnMapStart(const Mark& mark, const std::string& tag, anchor_t anchor)$/;"	f	class:YAML::GraphBuilderAdapter
OnMapStart	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::OnMapStart(const Mark&, const std::string& tag, anchor_t anchor)$/;"	f	class:YAML::EmitFromEvents
OnMapStart	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::OnMapStart(const Mark& mark, const std::string& tag, anchor_t anchor)$/;"	f	class:YAML::NodeBuilder
OnMapStart	lib/yaml-cpp/util/parse.cpp	/^	virtual void OnMapStart(const YAML::Mark&, const std::string&, YAML::anchor_t) {}$/;"	f	class:NullEventHandler
OnNull	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void GraphBuilderAdapter::OnNull(const Mark& mark, anchor_t anchor)$/;"	f	class:YAML::GraphBuilderAdapter
OnNull	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::OnNull(const Mark&, anchor_t anchor)$/;"	f	class:YAML::EmitFromEvents
OnNull	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::OnNull(const Mark& mark, anchor_t anchor)$/;"	f	class:YAML::NodeBuilder
OnNull	lib/yaml-cpp/util/parse.cpp	/^	virtual void OnNull(const YAML::Mark&, YAML::anchor_t) {}$/;"	f	class:NullEventHandler
OnOffBool	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		OnOffBool,  \/\/ on, off$/;"	e	enum:YAML::EMITTER_MANIP
OnScalar	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void GraphBuilderAdapter::OnScalar(const Mark& mark, const std::string& tag, anchor_t anchor, const std::string& value)$/;"	f	class:YAML::GraphBuilderAdapter
OnScalar	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::OnScalar(const Mark&, const std::string& tag, anchor_t anchor, const std::string& value)$/;"	f	class:YAML::EmitFromEvents
OnScalar	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::OnScalar(const Mark& mark, const std::string& tag, anchor_t anchor, const std::string& value)$/;"	f	class:YAML::NodeBuilder
OnScalar	lib/yaml-cpp/util/parse.cpp	/^	virtual void OnScalar(const YAML::Mark&, const std::string&, YAML::anchor_t, const std::string&) {}$/;"	f	class:NullEventHandler
OnSequenceEnd	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void GraphBuilderAdapter::OnSequenceEnd()$/;"	f	class:YAML::GraphBuilderAdapter
OnSequenceEnd	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::OnSequenceEnd()$/;"	f	class:YAML::EmitFromEvents
OnSequenceEnd	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::OnSequenceEnd()$/;"	f	class:YAML::NodeBuilder
OnSequenceEnd	lib/yaml-cpp/util/parse.cpp	/^	virtual void OnSequenceEnd() {}$/;"	f	class:NullEventHandler
OnSequenceStart	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void GraphBuilderAdapter::OnSequenceStart(const Mark& mark, const std::string& tag, anchor_t anchor)$/;"	f	class:YAML::GraphBuilderAdapter
OnSequenceStart	lib/yaml-cpp/src/emitfromevents.cpp	/^	void EmitFromEvents::OnSequenceStart(const Mark&, const std::string& tag, anchor_t anchor)$/;"	f	class:YAML::EmitFromEvents
OnSequenceStart	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::OnSequenceStart(const Mark& mark, const std::string& tag, anchor_t anchor)$/;"	f	class:YAML::NodeBuilder
OnSequenceStart	lib/yaml-cpp/util/parse.cpp	/^	virtual void OnSequenceStart(const YAML::Mark&, const std::string&, YAML::anchor_t) {}$/;"	f	class:NullEventHandler
One	core/python/cfgstiff.py	/^One = [0] * core.NUM_JOINTS$/;"	v
Op	core/motion/rswalk2014/FADBAD++/fadbad.h	/^	template <typename T> struct Op \/\/ YOU MIGHT NEED TO SPECIALIZE THIS TEMPLATE:$/;"	s	namespace:fadbad
Op	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename U, unsigned int N> struct Op< FTypeName<U,N> >$/;"	s	namespace:fadbad
OpArgK	lib/lua/src/lopcodes.h	/^  OpArgK   \/* argument is a constant or register\/constant *\/$/;"	e	enum:OpArgMask
OpArgMask	lib/lua/src/lopcodes.h	/^enum OpArgMask {$/;"	g
OpArgN	lib/lua/src/lopcodes.h	/^  OpArgN,  \/* argument is not used *\/$/;"	e	enum:OpArgMask
OpArgR	lib/lua/src/lopcodes.h	/^  OpArgR,  \/* argument is a register or a jump offset *\/$/;"	e	enum:OpArgMask
OpArgU	lib/lua/src/lopcodes.h	/^  OpArgU,  \/* argument is used *\/$/;"	e	enum:OpArgMask
OpCode	lib/lua/src/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon93
OpMode	lib/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	g
OppModule	core/opponents/OppModule.h	/^class OppModule: public Module {$/;"	c
OppModuleLog	core/memory/TextLogger.h	/^  OppModuleLog,$/;"	e	enum:modulesTypes
OpponentBlock	core/memory/OpponentBlock.h	/^  OpponentBlock()  {$/;"	f	struct:OpponentBlock
OpponentBlock	core/memory/OpponentBlock.h	/^struct OpponentBlock : public MemoryBlock {$/;"	s
OpponentModel	core/memory/OpponentBlock.h	/^struct OpponentModel {$/;"	s
OptionParser	bin/common.py	/^  from optparse import OptionParser$/;"	i
OptionParser	bin/compile	/^  from optparse import OptionParser$/;"	i
OptionParser	bin/copy_robot	/^  from optparse import OptionParser$/;"	i
OptionParser	build/compile	/^  from optparse import OptionParser$/;"	i
OptionParser	build/copy_robot	/^  from optparse import OptionParser$/;"	i
Options	install/setup_robot	/^class Options:$/;"	c
Options	tools/behaviorSim/cma.py	/^class Options(dict):$/;"	c
Options	tools/behaviorSim/runCMAES.py	/^from cma import CMAEvolutionStrategy, Options$/;"	i
Orange	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Orange = TORGB(255,125,0);$/;"	m	class:Colors	file:
Orange	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Orange	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Orange = TORGB(255,125,0);$/;"	m	class:Colors	file:
Orange	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
OrderedMappings	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST OrderedMappings()$/;"	f	namespace:Test::Spec
Orientation	core/vision/structures/CornerPoint.h	/^  short Orientation, Direction;$/;"	m	struct:CornerPoint
OurScore	build/include/tool/StateWindow.h	/^     OurScore,$/;"	e	enum:StateWindow::__anon3
OurScore	tools/UTNaoTool/StateWindow.h	/^     OurScore,$/;"	e	enum:StateWindow::__anon141
Outbound	core/communications/UDPWrapper.h	/^  enum Direction { Inbound, Outbound, Bidirectional };$/;"	e	enum:UDPWrapper::Direction
Output	lib/lua/src/luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	file:
OutputMatrix	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, NumStates> OutputMatrix;$/;"	t	class:ExtendedKalmanFilter
OutputMatrix	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumMeasurements, NumStates> OutputMatrix;$/;"	t	class:LinearKalmanFilter
Owner	core/memory/MemoryBlock.h	/^  enum Owner {$/;"	g	namespace:MemoryOwner
P	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateCovarianceMatrix P;$/;"	m	class:UnscentedKalmanFilter
P00	core/memory/OpponentBlock.h	/^    P00,$/;"	m	struct:OpponentModel
P01	core/memory/OpponentBlock.h	/^    P01,$/;"	m	struct:OpponentModel
P1	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateCovarianceMatrix P1;$/;"	m	class:UnscentedKalmanFilter
P10	core/memory/OpponentBlock.h	/^    P10,$/;"	m	struct:OpponentModel
P11	core/memory/OpponentBlock.h	/^    P11,$/;"	m	struct:OpponentModel
P12	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateCovarianceMatrix P12;$/;"	m	class:UnscentedKalmanFilter
P2	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateCovarianceMatrix P2;$/;"	m	class:UnscentedKalmanFilter
P22	core/memory/OpponentBlock.h	/^    P22,$/;"	m	struct:OpponentModel
P33	core/memory/OpponentBlock.h	/^    P33;$/;"	m	struct:OpponentModel
PACKETS_PER_SECOND	core/communications/CommunicationModule.cpp	/^#define PACKETS_PER_SECOND /;"	d	file:
PACKET_CONVERTER_H	core/communications/PacketConverter.h	/^#define PACKET_CONVERTER_H$/;"	d
PACKET_INVALID_DELAY	core/communications/CommunicationModule.cpp	/^#define PACKET_INVALID_DELAY /;"	d	file:
PARAM_DISTANCE	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^#define PARAM_DISTANCE(/;"	d	file:
PARAM_DISTANCE	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^#define PARAM_DISTANCE(/;"	d	file:
PARSE	lib/yaml-cpp/test/old-api/spectests.cpp	/^#define PARSE(/;"	d	file:
PARSERTESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/test/parsertests.h	/^#define PARSERTESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
PARSER_H	interfaces/sim_spark/Parser.h	/^#define PARSER_H$/;"	d
PARSER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/parser.h	/^#define PARSER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
PARSE_NEXT	lib/yaml-cpp/test/old-api/spectests.cpp	/^#define PARSE_NEXT(/;"	d	file:
PASSWORD	install/install	/^    PASSWORD = getpass.getpass('[sudo] password for %s: ' % getpass.getuser())$/;"	v
PATH_DIR	build/include/tool/simulation/LocalizationSimulation.cpp	/^const string PATH_DIR = string(getenv("NAO_HOME")) + "\/data\/paths";$/;"	v
PATH_DIR	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^const string PATH_DIR = string(getenv("NAO_HOME")) + "\/data\/paths";$/;"	v
PAUSE_BEFORE_RESTART_TIME	core/motion/GetupModule.cpp	/^const float PAUSE_BEFORE_RESTART_TIME = 0.75;$/;"	v
PCRC	lib/lua/src/ldo.h	/^#define PCRC	/;"	d
PCRLUA	lib/lua/src/ldo.h	/^#define PCRLUA	/;"	d
PCRYIELD	lib/lua/src/ldo.h	/^#define PCRYIELD	/;"	d
PE	build/include/tool/ProcessExecutor.cpp	/^typedef ProcessExecutor PE;$/;"	t	file:
PE	tools/UTNaoTool/ProcessExecutor.cpp	/^typedef ProcessExecutor PE;$/;"	t	file:
PENALISED	core/common/States.h	/^  PENALISED = 6,$/;"	e	enum:STATES
PENALTY_CROSS_X	core/common/Bowdoin14Field.h	/^const float PENALTY_CROSS_X = HALF_FIELD_X - 1300;$/;"	v
PENALTY_CROSS_X	core/common/Field.h	/^const float PENALTY_CROSS_X = HALF_FIELD_X - 1300;$/;"	v
PENALTY_CROSS_X	core/common/RC2013Field.h	/^const float PENALTY_CROSS_X = HALF_FIELD_X - 1807;$/;"	v
PENALTY_CROSS_X	core/common/UTField.h	/^const float PENALTY_CROSS_X = HALF_FIELD_X - 1300;$/;"	v
PENALTY_HL_KID_BALL_MANIPULATION	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_KID_BALL_MANIPULATION /;"	d
PENALTY_HL_KID_ILLEGAL_ATTACK	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_KID_ILLEGAL_ATTACK /;"	d
PENALTY_HL_KID_ILLEGAL_DEFENSE	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_KID_ILLEGAL_DEFENSE /;"	d
PENALTY_HL_KID_PHYSICAL_CONTACT	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_KID_PHYSICAL_CONTACT /;"	d
PENALTY_HL_KID_REQUEST_FOR_PICKUP	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_KID_REQUEST_FOR_PICKUP /;"	d
PENALTY_HL_KID_REQUEST_FOR_PICKUP_2_SERVICE	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_KID_REQUEST_FOR_PICKUP_2_SERVICE /;"	d
PENALTY_HL_KID_REQUEST_FOR_SERVICE	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_KID_REQUEST_FOR_SERVICE /;"	d
PENALTY_HL_TEEN_BALL_MANIPULATION	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_TEEN_BALL_MANIPULATION /;"	d
PENALTY_HL_TEEN_ILLEGAL_ATTACK	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_TEEN_ILLEGAL_ATTACK /;"	d
PENALTY_HL_TEEN_ILLEGAL_DEFENSE	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_TEEN_ILLEGAL_DEFENSE /;"	d
PENALTY_HL_TEEN_PHYSICAL_CONTACT	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_TEEN_PHYSICAL_CONTACT /;"	d
PENALTY_HL_TEEN_REQUEST_FOR_PICKUP	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_TEEN_REQUEST_FOR_PICKUP /;"	d
PENALTY_HL_TEEN_REQUEST_FOR_PICKUP_2_SERVICE	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_TEEN_REQUEST_FOR_PICKUP_2_SERVICE /;"	d
PENALTY_HL_TEEN_REQUEST_FOR_SERVICE	core/communications/RoboCupGameControlData.h	/^#define PENALTY_HL_TEEN_REQUEST_FOR_SERVICE /;"	d
PENALTY_MANUAL	core/communications/RoboCupGameControlData.h	/^#define PENALTY_MANUAL /;"	d
PENALTY_MARK_SIZE	core/common/Bowdoin14Field.h	/^const float PENALTY_MARK_SIZE = 110;$/;"	v
PENALTY_MARK_SIZE	core/common/Field.h	/^const float PENALTY_MARK_SIZE = 106;$/;"	v
PENALTY_MARK_SIZE	core/common/RC2013Field.h	/^const float PENALTY_MARK_SIZE = 97;$/;"	v
PENALTY_MARK_SIZE	core/common/UTField.h	/^const float PENALTY_MARK_SIZE = 106;$/;"	v
PENALTY_NONE	core/communications/RoboCupGameControlData.h	/^#define PENALTY_NONE /;"	d
PENALTY_SPL_COACH_MOTION	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SPL_COACH_MOTION /;"	d
PENALTY_SPL_ILLEGAL_BALL_CONTACT	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SPL_ILLEGAL_BALL_CONTACT /;"	d
PENALTY_SPL_ILLEGAL_DEFENDER	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SPL_ILLEGAL_DEFENDER /;"	d
PENALTY_SPL_ILLEGAL_MOTION_IN_SET	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SPL_ILLEGAL_MOTION_IN_SET /;"	d
PENALTY_SPL_INACTIVE_PLAYER	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SPL_INACTIVE_PLAYER /;"	d
PENALTY_SPL_KICK_OFF_GOAL	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SPL_KICK_OFF_GOAL /;"	d
PENALTY_SPL_LEAVING_THE_FIELD	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SPL_LEAVING_THE_FIELD /;"	d
PENALTY_SPL_PLAYER_PUSHING	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SPL_PLAYER_PUSHING /;"	d
PENALTY_SPL_REQUEST_FOR_PICKUP	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SPL_REQUEST_FOR_PICKUP /;"	d
PENALTY_SUBSTITUTE	core/communications/RoboCupGameControlData.h	/^#define PENALTY_SUBSTITUTE /;"	d
PENALTY_X	core/common/Bowdoin14Field.h	/^const float PENALTY_X =  600;$/;"	v
PENALTY_X	core/common/Field.h	/^const float PENALTY_X =  600;$/;"	v
PENALTY_X	core/common/RC2013Field.h	/^const float PENALTY_X = 595;$/;"	v
PENALTY_X	core/common/UTField.h	/^const float PENALTY_X =  600;$/;"	v
PENALTY_Y	core/common/Bowdoin14Field.h	/^const float PENALTY_Y = 2200;$/;"	v
PENALTY_Y	core/common/Field.h	/^const float PENALTY_Y = 2200;$/;"	v
PENALTY_Y	core/common/RC2013Field.h	/^const float PENALTY_Y = 2204;$/;"	v
PENALTY_Y	core/common/UTField.h	/^const float PENALTY_Y = 2200;$/;"	v
PENDULUM	kalman_filters/src/ekf_test.cpp	/^  PENDULUM$/;"	e	enum:TestType	file:
PERFORMING	core/motion/rswalk2014/RSWalkModule2014.h	/^            PERFORMING,$/;"	e	enum:RSWalkModule2014::StepIntoKickState
PERIODICALLY	core/sonar/SonarModule.h	/^    PERIODICALLY = 64$/;"	e	enum:Sonar::Command
PF	particle_filters/MCL_main.cpp	/^typedef MCLParticleFilter<NumParticle, SizeParticle, SizeMeasurement, SizeControl> PF;$/;"	t	file:
PI	core/motion/rswalk2014/Walk2014Generator.hpp	/^   const float PI;$/;"	m	class:Walk2014Generator
PI	lib/lua/src/lmathlib.c	/^#define PI /;"	d	file:
PI	lib/lua/src/lmathlib.c	/^#undef PI$/;"	d	file:
PI	particle_filters/MCL_particle_filter.hpp	/^#define PI /;"	d
PI	particle_filters/RMCL_particle_filter.hpp	/^#define PI /;"	d
PIC_OBJA	lib/zlib/Makefile	/^PIC_OBJA =$/;"	m
PIC_OBJC	lib/zlib/Makefile	/^PIC_OBJC = adler32.lo compress.lo crc32.lo deflate.lo gzclose.lo gzlib.lo gzread.lo \\$/;"	m
PIC_OBJS	lib/zlib/Makefile	/^PIC_OBJS = $(PIC_OBJC) $(PIC_OBJA)$/;"	m
PIDCONTROLLER_AE3MN2H0	core/common/PIDController.h	/^#define PIDCONTROLLER_AE3MN2H0$/;"	d
PIDController	core/common/PIDController.cpp	/^PIDController::PIDController():$/;"	f	class:PIDController
PIDController	core/common/PIDController.cpp	/^PIDController::PIDController(float cp, float ci, float cd, float eps):$/;"	f	class:PIDController
PIDController	core/common/PIDController.h	/^class PIDController {$/;"	c
PID_angular_velocity	core/python/behaviors/pid_distance_angle.py	/^PID_angular_velocity = 0$/;"	v
PID_angular_velocity_list	core/python/behaviors/pid_distance_angle.py	/^PID_angular_velocity_list = [0]*100$/;"	v
PID_walk	core/python/behaviors/pid_distance_angle.py	/^  class PID_walk(Node):$/;"	c	class:Playing
PID_walk_velocity	core/python/behaviors/pid_distance_angle.py	/^PID_walk_velocity = 0$/;"	v
PID_walk_velocity_counter	core/python/behaviors/pid_distance_angle.py	/^PID_walk_velocity_counter = 0$/;"	v
PID_walk_velocity_list	core/python/behaviors/pid_distance_angle.py	/^PID_walk_velocity_list = [0]*100$/;"	v
PINK	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    PINK,$/;"	e	enum:color_classifier::Color
PINK_BLUE	core/vision/BeaconDetector.h	/^    PINK_BLUE,$/;"	e	enum:BeaconDetector::ColorTransition
PINK_BLUE	vision_testing/src/vision_testing.cpp	/^  PINK_BLUE,$/;"	e	enum:ColorTransition	file:
PINK_BLUE_BEACON	core/vision/BeaconDetector.h	/^    PINK_BLUE_BEACON,$/;"	e	enum:BeaconDetector::BeaconType
PINK_BLUE_BEACON	vision_testing/src/vision_testing.cpp	/^  PINK_BLUE_BEACON,$/;"	e	enum:BeaconType	file:
PINK_WHITE	core/vision/BeaconDetector.h	/^    PINK_WHITE,$/;"	e	enum:BeaconDetector::ColorTransition
PINK_WHITE	vision_testing/src/vision_testing.cpp	/^  PINK_WHITE,$/;"	e	enum:ColorTransition	file:
PINK_YELLOW	core/vision/BeaconDetector.h	/^    PINK_YELLOW,$/;"	e	enum:BeaconDetector::ColorTransition
PINK_YELLOW	vision_testing/src/vision_testing.cpp	/^  PINK_YELLOW,$/;"	e	enum:ColorTransition	file:
PINK_YELLOW_BEACON	core/vision/BeaconDetector.h	/^    PINK_YELLOW_BEACON,$/;"	e	enum:BeaconDetector::BeaconType
PINK_YELLOW_BEACON	vision_testing/src/vision_testing.cpp	/^  PINK_YELLOW_BEACON,$/;"	e	enum:BeaconType	file:
PIONTWO	core/math/Geometry.h	/^#define PIONTWO /;"	d
PIPE	install/common.py	/^from subprocess import PIPE, Popen, check_call$/;"	i
PKState	build/include/tool/StateWindow.h	/^     PKState,$/;"	e	enum:StateWindow::__anon3
PKState	tools/UTNaoTool/StateWindow.h	/^     PKState,$/;"	e	enum:StateWindow::__anon141
PLAIN_SCALAR	lib/yaml-cpp/src/token.h	/^			PLAIN_SCALAR,$/;"	e	enum:YAML::Token::TYPE
PLAN_KICK_H	motion_planning/include/motion_planning/plan_kick.h	/^#define PLAN_KICK_H$/;"	d
PLAT	lib/lua/Makefile	/^PLAT= none$/;"	m
PLAT	lib/lua/src/Makefile	/^PLAT= none$/;"	m
PLATS	lib/lua/Makefile	/^PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris$/;"	m
PLATS	lib/lua/src/Makefile	/^PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris$/;"	m
PLAYING	core/common/States.h	/^  PLAYING = 4,$/;"	e	enum:STATES
PLOTWINDOW_QPYBZ7XI	build/include/tool/PlotWindow.h	/^#define PLOTWINDOW_QPYBZ7XI$/;"	d
PLOTWINDOW_QPYBZ7XI	tools/UTNaoTool/PlotWindow.h	/^#define PLOTWINDOW_QPYBZ7XI$/;"	d
POF	lib/lua/src/loadlib.c	/^#define POF	/;"	d	file:
POF	lib/lua/src/loadlib.c	/^#undef POF$/;"	d	file:
POINT_H	core/math/Point.h	/^#define POINT_H$/;"	d
POLAR	core/math/Geometry.h	/^  POLAR$/;"	e	enum:CoordSystemT
POLYGON_H	core/math/Polygon.h	/^#define POLYGON_H$/;"	d
POLYGON_SELECTION_H	build/include/tool/annotations/PolygonSelection.h	/^#define POLYGON_SELECTION_H$/;"	d
POLYGON_SELECTION_H	tools/UTNaoTool/annotations/PolygonSelection.h	/^#define POLYGON_SELECTION_H$/;"	d
POP_SIZE	tools/behaviorSim/runCMAES.py	/^POP_SIZE = 50$/;"	v
PORT	interfaces/nao/tests/naointerfaceTest.py	/^PORT = 9559$/;"	v
POSES_H	core/common/Poses.h	/^#define POSES_H$/;"	d
POSITION_H	core/vision/structures/Position.h	/^#define POSITION_H$/;"	d
POS_A	lib/lua/src/lopcodes.h	/^#define POS_A	/;"	d
POS_B	lib/lua/src/lopcodes.h	/^#define POS_B	/;"	d
POS_Bx	lib/lua/src/lopcodes.h	/^#define POS_Bx	/;"	d
POS_C	lib/lua/src/lopcodes.h	/^#define POS_C	/;"	d
POS_OP	lib/lua/src/lopcodes.h	/^#define POS_OP	/;"	d
PREPARE_ARMS_TIME	core/motion/GetupModule.cpp	/^const float PREPARE_ARMS_TIME = 0.30;$/;"	v
PRESET_DICT	lib/zlib/zutil.h	/^#define PRESET_DICT /;"	d
PRIMARY_HANDLE	lib/yaml-cpp/src/tag.h	/^			VERBATIM, PRIMARY_HANDLE, SECONDARY_HANDLE, NAMED_HANDLE, NON_SPECIFIC$/;"	e	enum:YAML::Tag::TYPE
PRINT	build/include/tool/simulation/BehaviorSimulation.h	/^    bool PRINT;$/;"	m	class:BehaviorSimulation
PRINT	build/include/tool/simulation/SimulatedPlayer.h	/^  bool PRINT;$/;"	m	class:SimulatedPlayer
PRINT	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    bool PRINT;$/;"	m	class:BehaviorSimulation
PRINT	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  bool PRINT;$/;"	m	class:SimulatedPlayer
PRINTMAT	core/math/MatrixOperations.h	/^#define PRINTMAT(/;"	d
PRINT_PARAMS	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^#define PRINT_PARAMS(/;"	d	file:
PRINT_PARAMS	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^#define PRINT_PARAMS(/;"	d	file:
PRINT_PART	core/kinematics/ForwardKinematics.cpp	/^#define PRINT_PART(/;"	d	file:
PRIVATEMEMORY_DMIY3W1X	core/memory/PrivateMemory.h	/^#define PRIVATEMEMORY_DMIY3W1X$/;"	d
PROCESSEDSONARBLOCK_VCLB37XJ	core/memory/ProcessedSonarBlock.h	/^#define PROCESSEDSONARBLOCK_VCLB37XJ$/;"	d
PROCESS_EXECUTOR_H	build/include/tool/ProcessExecutor.h	/^#define PROCESS_EXECUTOR_H$/;"	d
PROCESS_EXECUTOR_H	tools/UTNaoTool/ProcessExecutor.h	/^#define PROCESS_EXECUTOR_H$/;"	d
PROFILING_H	core/common/Profiling.h	/^#define PROFILING_H$/;"	d
PROGNAME	lib/lua/src/luac.c	/^#define PROGNAME	/;"	d	file:
PTHREAD_SYSTEM_SCHED_SUPPORTED	build/pythonswig/pyconfig.h	/^#define PTHREAD_SYSTEM_SCHED_SUPPORTED /;"	d
PTR_STACK_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/ptr_stack.h	/^#define PTR_STACK_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
PTR_VECTOR_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/ptr_vector.h	/^#define PTR_VECTOR_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
PULL	lib/zlib/infback.c	/^#define PULL(/;"	d	file:
PULLBYTE	lib/zlib/infback.c	/^#define PULLBYTE(/;"	d	file:
PULLBYTE	lib/zlib/inflate.c	/^#define PULLBYTE(/;"	d	file:
PUP	lib/zlib/inffast.c	/^#  define PUP(/;"	d	file:
PYTHON_99KDYFIX5	core/python/PythonModule.h	/^#define PYTHON_99KDYFIX5$/;"	d
PYTHON_INTERFACE	build/pythonswig/PythonInterface.h	/^#define PYTHON_INTERFACE$/;"	d
PYTHON_INTERFACE	core/python/PythonInterface.h	/^#define PYTHON_INTERFACE$/;"	d
PY_FORMAT_LONG_LONG	build/pythonswig/pyconfig.h	/^#define PY_FORMAT_LONG_LONG /;"	d
PY_FORMAT_SIZE_T	build/pythonswig/pyconfig.h	/^#define PY_FORMAT_SIZE_T /;"	d
PY_MUTEX	build/pythonswig/PythonInterface.cpp	/^std::mutex PythonInterface::PY_MUTEX;$/;"	m	class:PythonInterface	file:
PY_MUTEX	build/pythonswig/PythonInterface.h	/^    static std::mutex CORE_MUTEX, PY_MUTEX;$/;"	m	class:PythonInterface
PY_MUTEX	core/python/PythonInterface.cpp	/^std::mutex PythonInterface::PY_MUTEX;$/;"	m	class:PythonInterface	file:
PY_MUTEX	core/python/PythonInterface.h	/^    static std::mutex CORE_MUTEX, PY_MUTEX;$/;"	m	class:PythonInterface
PY_UNICODE_TYPE	build/pythonswig/pyconfig.h	/^#define PY_UNICODE_TYPE /;"	d
PacketConverter	core/communications/PacketConverter.h	/^class PacketConverter {$/;"	c
Pair	lib/yaml-cpp/test/old-api/spectests.cpp	/^			Pair() {}$/;"	f	struct:Test::Spec::Pair
Pair	lib/yaml-cpp/test/old-api/spectests.cpp	/^			Pair(const std::string& f, const std::string& s): first(f), second(s) {}$/;"	f	struct:Test::Spec::Pair
Pair	lib/yaml-cpp/test/old-api/spectests.cpp	/^		struct Pair {$/;"	s	namespace:Test::Spec	file:
Parameters	core/motion/rswalk2014/perception/kinematics/Parameters.hpp	/^class Parameters {$/;"	c
Params	lib/yaml-cpp/util/parse.cpp	/^struct Params {$/;"	s	file:
ParseAnchor	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::ParseAnchor(anchor_t& anchor)$/;"	f	class:YAML::SingleDocParser
ParseArgs	lib/yaml-cpp/util/parse.cpp	/^Params ParseArgs(int argc, char **argv) {$/;"	f
ParseDirectives	lib/yaml-cpp/src/parser.cpp	/^	void Parser::ParseDirectives()$/;"	f	class:YAML::Parser
ParseHex	lib/yaml-cpp/src/exp.cpp	/^		unsigned ParseHex(const std::string& str, const Mark& mark)$/;"	f	namespace:YAML::Exp
ParseMotionFile	core/motion/SpecialMotionParser.cpp	/^bool SpecialMotionParser::ParseMotionFile(const string& mofFilePath,vector<SpecialMotion>& MotionSequence)$/;"	f	class:SpecialMotionParser
ParseProperties	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::ParseProperties(std::string& tag, anchor_t& anchor)$/;"	f	class:YAML::SingleDocParser
ParseTag	lib/yaml-cpp/src/singledocparser.cpp	/^	void SingleDocParser::ParseTag(std::string& tag)$/;"	f	class:YAML::SingleDocParser
Parser	interfaces/sim_spark/Parser.cpp	/^Parser::Parser(RobotBehavior* robot, Lock* vision_lock) {$/;"	f	class:Parser
Parser	interfaces/sim_spark/Parser.h	/^class Parser {$/;"	c
Parser	lib/yaml-cpp/include/yaml-cpp/parser.h	/^	class YAML_CPP_API Parser: private noncopyable$/;"	c	namespace:YAML
Parser	lib/yaml-cpp/src/parser.cpp	/^	Parser::Parser()$/;"	f	class:YAML::Parser
Parser	lib/yaml-cpp/src/parser.cpp	/^	Parser::Parser(std::istream& in)$/;"	f	class:YAML::Parser
Parser	lib/yaml-cpp/test/old-api/parsertests.cpp	/^	namespace Parser {$/;"	n	namespace:Test	file:
Parser	lib/yaml-cpp/test/tests.h	/^	namespace Parser {$/;"	n	namespace:Test
ParserException	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		ParserException(const Mark& mark_, const std::string& msg_)$/;"	f	class:YAML::ParserException
ParserException	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	class ParserException: public Exception {$/;"	c	namespace:YAML
Part	core/common/RobotInfo.h	/^	enum Part {$/;"	g	class:BodyPart
Part	core/common/RobotInfo.h	/^  enum Part {$/;"	g	class:BodyFrame
Particle	core/localization/Particle.h	/^struct Particle {$/;"	s
ParticleFilter	core/localization/ParticleFilter.cpp	/^ParticleFilter::ParticleFilter(MemoryCache& cache, TextLogger*& tlogger) $/;"	f	class:ParticleFilter
ParticleFilter	core/localization/ParticleFilter.h	/^class ParticleFilter {$/;"	c
ParticleLabelSet	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< int   , 1 , NumParticle> ParticleLabelSet;$/;"	t	class:RMCLParticleFilter
ParticleStateSet	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , NumParticle> ParticleStateSet;$/;"	t	class:MCLParticleFilter
ParticleStateSet	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , NumParticle> ParticleStateSet;$/;"	t	class:RMCLParticleFilter
ParticleVector	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , 1> ParticleVector;$/;"	t	class:MCLParticleFilter
ParticleVector	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , 1> ParticleVector;$/;"	t	class:RMCLParticleFilter
ParticleWeightSet	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, 1 , NumParticle> ParticleWeightSet;$/;"	t	class:MCLParticleFilter
ParticleWeightSet	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, 1 , NumParticle> ParticleWeightSet;$/;"	t	class:RMCLParticleFilter
PassInfo	core/memory/BehaviorBlock.h	/^  PassInfo():$/;"	f	struct:PassInfo
PassInfo	core/memory/BehaviorBlock.h	/^struct PassInfo {$/;"	s
PassStrategy	core/memory/BehaviorParamBlock.h	/^struct PassStrategy {$/;"	s
Pattern	build/include/tool/calibration/CalibratorSettings.h	/^    enum Pattern {$/;"	g	class:CalibratorSettings
Pattern	tools/UTNaoTool/calibration/CalibratorSettings.h	/^    enum Pattern {$/;"	g	class:CalibratorSettings
Penalised	core/python/primary_bvr.py	/^class Penalised(pose.StandStraight): pass$/;"	c
PenaltySeconds	build/include/tool/StateWindow.h	/^     PenaltySeconds,$/;"	e	enum:StateWindow::__anon3
PenaltySeconds	tools/UTNaoTool/StateWindow.h	/^     PenaltySeconds,$/;"	e	enum:StateWindow::__anon141
PendulumModel	core/motion/rswalk2014/PendulumModel.hpp	/^   PendulumModel() : x(0), dx(0), accX(0), theta(0), walkCycle(0.0f, 0.0f, 0.0f, 0.0f, 0.5, 0.0f) {}$/;"	f	struct:PendulumModel
PendulumModel	core/motion/rswalk2014/PendulumModel.hpp	/^struct PendulumModel {$/;"	s
Pfunc	lib/lua/src/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
PhysicsSimulator	build/include/tool/simulation/PhysicsSimulator.h	/^class PhysicsSimulator {$/;"	c
PhysicsSimulator	tools/UTNaoTool/simulation/PhysicsSimulator.h	/^class PhysicsSimulator {$/;"	c
Pink	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Pink = Colors::Magenta;$/;"	m	class:Colors	file:
Pink	build/include/tool/UTOpenGL/Colors.h	/^    static RGB White, Gray, Black, Pink;$/;"	m	class:Colors
Pink	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Pink = Colors::Magenta;$/;"	m	class:Colors	file:
Pink	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB White, Gray, Black, Pink;$/;"	m	class:Colors
PixelValues	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^typedef struct pixelValues PixelValues;$/;"	t	typeref:struct:pixelValues
PlainCharacters	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST PlainCharacters()$/;"	f	namespace:Test::Spec
PlainImplicitKeys	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST PlainImplicitKeys()$/;"	f	namespace:Test::Spec
PlainLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST PlainLines()$/;"	f	namespace:Test::Spec
PlainScalar	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& PlainScalar() {$/;"	f	namespace:YAML::Exp
PlainScalarInFlow	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& PlainScalarInFlow() {$/;"	f	namespace:YAML::Exp
PlanKick	motion_planning/include/motion_planning/plan_kick.h	/^  class PlanKick$/;"	c	namespace:motion_planning
PlanKick	motion_planning/src/plan_kick.cpp	/^  PlanKick::PlanKick(const ros::NodeHandle& nh) :$/;"	f	class:motion_planning::PlanKick
PlayByPlayFeed	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST PlayByPlayFeed()$/;"	f	namespace:Test::Spec
Playing	core/python/behaviors/Distance.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/Movement.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/custom_kick.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/head_tracking.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/keeper.py	/^class Playing(LoopingStateMachine):$/;"	c
Playing	core/python/behaviors/keeper_2.py	/^class Playing(LoopingStateMachine):$/;"	c
Playing	core/python/behaviors/keeper_3.py	/^class Playing(LoopingStateMachine):$/;"	c
Playing	core/python/behaviors/kick.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/main.py	/^class Playing(Task): pass$/;"	c
Playing	core/python/behaviors/pid_distance_angle.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/sample.py	/^class Playing(Task): pass$/;"	c
Playing	core/python/behaviors/stamp_in_circles.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/stand.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/walk_to_center.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/walk_to_center_2.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/behaviors/win.py	/^class Playing(StateMachine):$/;"	c
Playing	core/python/primary_bvr.py	/^class Playing(pose.Sit): pass$/;"	c
PlotWindow	build/include/tool/PlotWindow.cpp	/^PlotWindow::PlotWindow() :$/;"	f	class:PlotWindow
PlotWindow	build/include/tool/PlotWindow.h	/^class PlotWindow : public QWidget {$/;"	c
PlotWindow	tools/UTNaoTool/PlotWindow.cpp	/^PlotWindow::PlotWindow() :$/;"	f	class:PlotWindow
PlotWindow	tools/UTNaoTool/PlotWindow.h	/^class PlotWindow : public QWidget {$/;"	c
Point	core/math/Point.h	/^typedef Vector2<int> Point;$/;"	t
Point	core/motion/rswalk2014/types/Point.hpp	/^typedef Eigen::Vector2i Point;$/;"	t
Point2D	core/math/Geometry.cpp	/^Point2D::Point2D( float xx, float yy, CoordSystemT cs ) {$/;"	f	class:Point2D
Point2D	core/math/Geometry.h	/^class Point2D$/;"	c
Point2D	core/python/geometry.py	/^class Point2D(object):$/;"	c
Point2d	core/vision/ImageProcessor.h	/^class Point2d$/;"	c
Point3D	core/math/Geometry.cpp	/^Point3D::Point3D( float xx, float yy, float zz, CoordSystemT cs ) {$/;"	f	class:Point3D
Point3D	core/math/Geometry.h	/^class Point3D$/;"	c
PointF	core/motion/rswalk2014/types/Point.hpp	/^typedef Eigen::Vector2f PointF;$/;"	t
PointerToInt	lib/yaml-cpp/test/emittertests.cpp	/^		void PointerToInt(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
PointerToUserType	lib/yaml-cpp/test/emittertests.cpp	/^		void PointerToUserType(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Points	core/vision/structures/FieldLine.h	/^  unsigned int Points;$/;"	m	struct:FieldLine
PointsArray	core/vision/structures/FieldLine.h	/^  LinePoint** PointsArray;$/;"	m	struct:FieldLine
Polygon	core/math/Polygon.cpp	/^Polygon::Polygon() {$/;"	f	class:Polygon
Polygon	core/math/Polygon.cpp	/^Polygon::Polygon(std::vector<Point> vertices) : vertices_(vertices){$/;"	f	class:Polygon
Polygon	core/math/Polygon.h	/^class Polygon {$/;"	c
PolygonSelection	build/include/tool/annotations/PolygonSelection.h	/^        PolygonSelection() : polygon_(0) {};$/;"	f	class:PolygonSelection
PolygonSelection	build/include/tool/annotations/PolygonSelection.h	/^        PolygonSelection(std::vector<Point> v) : polygon_(0) {$/;"	f	class:PolygonSelection
PolygonSelection	build/include/tool/annotations/PolygonSelection.h	/^        PolygonSelection(std::vector<QPoint> v) : polygon_(0) {$/;"	f	class:PolygonSelection
PolygonSelection	build/include/tool/annotations/PolygonSelection.h	/^class PolygonSelection : public Selection {$/;"	c
PolygonSelection	tools/UTNaoTool/annotations/PolygonSelection.h	/^        PolygonSelection() : polygon_(0) {};$/;"	f	class:PolygonSelection
PolygonSelection	tools/UTNaoTool/annotations/PolygonSelection.h	/^        PolygonSelection(std::vector<Point> v) : polygon_(0) {$/;"	f	class:PolygonSelection
PolygonSelection	tools/UTNaoTool/annotations/PolygonSelection.h	/^        PolygonSelection(std::vector<QPoint> v) : polygon_(0) {$/;"	f	class:PolygonSelection
PolygonSelection	tools/UTNaoTool/annotations/PolygonSelection.h	/^class PolygonSelection : public Selection {$/;"	c
PolygonSelectionType	build/include/tool/annotations/SelectionType.h	/^    PolygonSelectionType,$/;"	e	enum:SelectionType
PolygonSelectionType	tools/UTNaoTool/annotations/SelectionType.h	/^    PolygonSelectionType,$/;"	e	enum:SelectionType
Pop	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::Pop()$/;"	f	class:YAML::NodeBuilder
PopAllIndents	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::PopAllIndents()$/;"	f	class:YAML::Scanner
PopAllSimpleKeys	lib/yaml-cpp/src/simplekey.cpp	/^	void Scanner::PopAllSimpleKeys()$/;"	f	class:YAML::Scanner
PopCollectionType	lib/yaml-cpp/src/collectionstack.h	/^		void PopCollectionType(CollectionType::value type) { assert(type == GetCurCollectionType()); collectionStack.pop(); }$/;"	f	class:YAML::CollectionStack
PopIndent	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::PopIndent()$/;"	f	class:YAML::Scanner
PopIndentToHere	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::PopIndentToHere()$/;"	f	class:YAML::Scanner
PopState	lib/yaml-cpp/src/emitterstate.h	/^		void PopState() { m_stateStack.pop(); }$/;"	f	class:YAML::EmitterState
Popen	install/common.py	/^from subprocess import PIPE, Popen, check_call$/;"	i
Pos	lib/zlib/deflate.h	/^typedef ush Pos;$/;"	t
PosInfValue	core/math/MVTools.h	/^    PosInfValue,$/;"	e	enum:MVException::ExceptionType
PosX	core/vision/structures/CornerPoint.h	/^  float PosX, PosY;$/;"	m	struct:CornerPoint
PosX	core/vision/structures/LinePoint.h	/^  float PosX, PosY;$/;"	m	struct:LinePoint
PosY	core/vision/structures/CornerPoint.h	/^  float PosX, PosY;$/;"	m	struct:CornerPoint
PosY	core/vision/structures/LinePoint.h	/^  float PosX, PosY;$/;"	m	struct:LinePoint
Pose	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^Pose::Pose() {$/;"	f	class:Pose
Pose	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^Pose::Pose(boost::numeric::ublas::matrix<float> topCameraToWorldTransform,$/;"	f	class:Pose
Pose	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^class Pose {$/;"	c
Pose2D	core/math/Pose2D.h	/^  Pose2D() : Pose2D(0,0,0) { }$/;"	f	class:Pose2D
Pose2D	core/math/Pose2D.h	/^  Pose2D(const Pose2D& other) : Pose2D(other.rotation, other.translation) { }$/;"	f	class:Pose2D
Pose2D	core/math/Pose2D.h	/^  Pose2D(const Vector2<float>& translation) : Pose2D(0, translation) { }$/;"	f	class:Pose2D
Pose2D	core/math/Pose2D.h	/^  Pose2D(const Vector2<int>& translation) : Pose2D(0, translation.x, translation.y) { }$/;"	f	class:Pose2D
Pose2D	core/math/Pose2D.h	/^  Pose2D(const float rot, const float x, const float y) : rotation(rot), translation(x,y), t(rotation), x(translation.x), y(translation.y) { }$/;"	f	class:Pose2D
Pose2D	core/math/Pose2D.h	/^  Pose2D(const float rotation) : Pose2D(rotation, 0, 0) { }$/;"	f	class:Pose2D
Pose2D	core/math/Pose2D.h	/^  Pose2D(const float rotation, const Vector2<float>& translation) : Pose2D(rotation, translation.x, translation.y) { }$/;"	f	class:Pose2D
Pose2D	core/math/Pose2D.h	/^  Pose2D(const float x, const float y) : Pose2D(0, x, y) { }$/;"	f	class:Pose2D
Pose2D	core/math/Pose2D.h	/^class Pose2D$/;"	c
Pose3D	core/math/Pose3D.h	/^  Pose3D() {}$/;"	f	class:Pose3D
Pose3D	core/math/Pose3D.h	/^  Pose3D(const Pose2D p) {$/;"	f	class:Pose3D
Pose3D	core/math/Pose3D.h	/^  Pose3D(const Pose3D& other) {*this = other;}$/;"	f	class:Pose3D
Pose3D	core/math/Pose3D.h	/^  Pose3D(const RotationMatrix& rot): rotation(rot) {}$/;"	f	class:Pose3D
Pose3D	core/math/Pose3D.h	/^  Pose3D(const RotationMatrix& rot, const Vector3<float>& trans): rotation(rot), translation(trans){}$/;"	f	class:Pose3D
Pose3D	core/math/Pose3D.h	/^  Pose3D(const Vector3<float>& trans): translation(trans) {}$/;"	f	class:Pose3D
Pose3D	core/math/Pose3D.h	/^  Pose3D(const float x, const float y, const float z) : translation(x,y,z) {}$/;"	f	class:Pose3D
Pose3D	core/math/Pose3D.h	/^class Pose3D$/;"	c
Pose3D_H	core/math/Pose3D.h	/^#define Pose3D_H$/;"	d
PoseSequence	core/python/pose.py	/^class PoseSequence(Task):$/;"	c
Poses	core/common/Poses.h	/^class Poses {$/;"	c
Posf	lib/zlib/deflate.h	/^typedef Pos FAR Posf;$/;"	t
Position	core/vision/structures/Position.h	/^typedef Vector3<float> Position;$/;"	t
PostAtomicWrite	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::PostAtomicWrite()$/;"	f	class:YAML::Emitter
PostInfo	core/motion/rswalk2014/types/PostInfo.hpp	/^   PostInfo () {}$/;"	f	struct:PostInfo
PostInfo	core/motion/rswalk2014/types/PostInfo.hpp	/^   PostInfo (RRCoord rr, Type type, BBox imageCoords,$/;"	f	struct:PostInfo
PostInfo	core/motion/rswalk2014/types/PostInfo.hpp	/^struct PostInfo$/;"	s
PostType_to_WhichPosts	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^inline WhichPosts PostType_to_WhichPosts (std::pair<PostInfo::Type, PostInfo::Type> posts)$/;"	f
PostWriteIntegralType	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::PostWriteIntegralType(const std::stringstream& str)$/;"	f	class:YAML::Emitter
PostWriteStreamable	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::PostWriteStreamable(const std::stringstream& str)$/;"	f	class:YAML::Emitter
PreAtomicWrite	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::PreAtomicWrite()$/;"	f	class:YAML::Emitter
PreWriteIntegralType	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::PreWriteIntegralType(std::stringstream& str)$/;"	f	class:YAML::Emitter
PreWriteStreamable	lib/yaml-cpp/src/emitter.cpp	/^	void Emitter::PreWriteStreamable(std::stringstream&)$/;"	f	class:YAML::Emitter
Precision	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^    inline _Precision Precision(int n) {$/;"	f	namespace:YAML
Prepare	core/python/behaviors/pid_distance_angle.py	/^  class Prepare(Node):$/;"	c	class:Playing
PrepareNodeForTagExam	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void PrepareNodeForTagExam(YAML::Node& doc, const std::string& input)$/;"	f	namespace:Test::Parser
PrimaryHandle	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		struct Type { enum value { Verbatim, PrimaryHandle, NamedHandle }; };$/;"	e	enum:YAML::_Tag::Type::value
PrimaryTagHandle	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST PrimaryTagHandle()$/;"	f	namespace:Test::Spec
PrintCode	lib/lua/src/print.c	/^static void PrintCode(const Proto* f)$/;"	f	file:
PrintConstant	lib/lua/src/print.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:
PrintConstants	lib/lua/src/print.c	/^static void PrintConstants(const Proto* f)$/;"	f	file:
PrintFunction	lib/lua/src/print.c	/^#define PrintFunction	/;"	d	file:
PrintFunction	lib/lua/src/print.c	/^void PrintFunction(const Proto* f, int full)$/;"	f
PrintHeader	lib/lua/src/print.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:
PrintHelp	interfaces/sim_spark/main.cpp	/^void PrintHelp()$/;"	f
PrintLocals	lib/lua/src/print.c	/^static void PrintLocals(const Proto* f)$/;"	f	file:
PrintString	lib/lua/src/print.c	/^static void PrintString(const TString* ts)$/;"	f	file:
PrintTokens	lib/yaml-cpp/src/parser.cpp	/^	void Parser::PrintTokens(std::ostream& out)$/;"	f	class:YAML::Parser
PrintUpvalues	lib/lua/src/print.c	/^static void PrintUpvalues(const Proto* f)$/;"	f	file:
PrivateMemory	core/memory/PrivateMemory.cpp	/^PrivateMemory::PrivateMemory() : is_copy_(false) {$/;"	f	class:PrivateMemory
PrivateMemory	core/memory/PrivateMemory.cpp	/^PrivateMemory::PrivateMemory(const PrivateMemory &mem) : is_copy_(true) {$/;"	f	class:PrivateMemory
PrivateMemory	core/memory/PrivateMemory.h	/^class PrivateMemory : public AbstractMemory {$/;"	c
ProcessExecutor	build/include/tool/ProcessExecutor.cpp	/^PE::ProcessExecutor() {$/;"	f	class:PE
ProcessExecutor	build/include/tool/ProcessExecutor.h	/^class ProcessExecutor {$/;"	c
ProcessExecutor	tools/UTNaoTool/ProcessExecutor.cpp	/^PE::ProcessExecutor() {$/;"	f	class:PE
ProcessExecutor	tools/UTNaoTool/ProcessExecutor.h	/^class ProcessExecutor {$/;"	c
ProcessPriority	build/include/tool/ProcessExecutor.h	/^    enum ProcessPriority {$/;"	g	class:ProcessExecutor
ProcessPriority	tools/UTNaoTool/ProcessExecutor.h	/^    enum ProcessPriority {$/;"	g	class:ProcessExecutor
ProcessedSonarBlock	core/memory/ProcessedSonarBlock.h	/^  ProcessedSonarBlock() {$/;"	f	struct:ProcessedSonarBlock
ProcessedSonarBlock	core/memory/ProcessedSonarBlock.h	/^struct ProcessedSonarBlock : public MemoryBlock {$/;"	s
ProcessingAudio	build/include/tool/StateWindow.h	/^     ProcessingAudio,$/;"	e	enum:StateWindow::__anon3
ProcessingAudio	tools/UTNaoTool/StateWindow.h	/^     ProcessingAudio,$/;"	e	enum:StateWindow::__anon141
Protect	lib/lua/src/lvm.c	/^#define Protect(/;"	d	file:
Proto	lib/lua/src/lobject.h	/^typedef struct Proto {$/;"	s
Proto	lib/lua/src/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
Push	lib/yaml-cpp/src/nodebuilder.cpp	/^	Node& NodeBuilder::Push()$/;"	f	class:YAML::NodeBuilder
Push	lib/yaml-cpp/src/nodebuilder.cpp	/^	Node& NodeBuilder::Push(anchor_t anchor)$/;"	f	class:YAML::NodeBuilder
PushCollectionType	lib/yaml-cpp/src/collectionstack.h	/^		void PushCollectionType(CollectionType::value type) { collectionStack.push(type); }$/;"	f	class:YAML::CollectionStack
PushIndentTo	lib/yaml-cpp/src/scanner.cpp	/^	Scanner::IndentMarker *Scanner::PushIndentTo(int column, IndentMarker::INDENT_TYPE type)$/;"	f	class:YAML::Scanner
PushState	lib/yaml-cpp/src/emitterstate.h	/^		void PushState(EMITTER_STATE state) { m_stateStack.push(state); }$/;"	f	class:YAML::EmitterState
PushToken	lib/yaml-cpp/src/scanner.cpp	/^	Token *Scanner::PushToken(Token::TYPE type)$/;"	f	class:YAML::Scanner
PutMessage	interfaces/sim_spark/main.cpp	/^void PutMessage(const string& msg) {$/;"	f
Py_ENABLE_SHARED	build/pythonswig/pyconfig.h	/^#define Py_ENABLE_SHARED /;"	d
Py_PYCONFIG_H	build/pythonswig/pyconfig.h	/^#define Py_PYCONFIG_H$/;"	d
Py_UNICODE_SIZE	build/pythonswig/pyconfig.h	/^#define Py_UNICODE_SIZE /;"	d
Py_USING_UNICODE	build/pythonswig/pyconfig.h	/^#define Py_USING_UNICODE /;"	d
PythonInterface	build/pythonswig/PythonInterface.h	/^class PythonInterface {$/;"	c
PythonInterface	core/python/PythonInterface.h	/^class PythonInterface {$/;"	c
PythonModule	core/python/PythonModule.cpp	/^PythonModule::PythonModule(VisionCore* core) : InterpreterModule(core), pyface_(NULL) {$/;"	f	class:PythonModule
PythonModule	core/python/PythonModule.h	/^class PythonModule: public InterpreterModule {$/;"	c
Q	core/motion/rswalk2014/perception/kinematics/CKF.hpp	/^      Eigen::Matrix<float, 4, 4> Q; \/\/ Process noise$/;"	m	class:CKF
Q	core/sensor/InertialFilter.h	/^  NMatrix Q;  \/\/ Weighting Matricies$/;"	m	class:InertialFilter
Q	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  MeasurementCovarianceMatrix Q; \/\/measurement error$/;"	m	class:ExtendedKalmanFilter
Q	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  MeasurementCovarianceMatrix Q; \/\/measurement error$/;"	m	class:LinearKalmanFilter
Q	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  MeasurementCovarianceMatrix Q; \/\/measurement error$/;"	m	class:SRUnscentedKalmanFilter
Q	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  MeasurementCovarianceMatrix Q; \/\/measurement error$/;"	m	class:UnscentedKalmanFilter
Q	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  MeasurementCovarianceMatrix Q; \/\/measurement error$/;"	m	class:UnscentedKalmanFilter
Q	particle_filters/MCL_particle_filter.hpp	/^    MeasurementCovarianceMatrix Q; \/\/measurement error$/;"	m	class:MCLParticleFilter
Q	particle_filters/RMCL_particle_filter.hpp	/^    MeasurementCovarianceMatrix Q; \/\/measurement error$/;"	m	class:RMCLParticleFilter
QUICK	core/memory/BehaviorParamBlock.h	/^    QUICK,$/;"	e	enum:Cluster::Activity
QUIET	core/motion/rswalk2014/utils/Logger.hpp	/^   QUIET   = -67,$/;"	e	enum:LogLevel
Q_	interfaces/sim_spark/Random.h	/^   static const long   Q_    = 0x787d;     \/\/ 30845$/;"	m	class:Random
QueueUnicodeCodepoint	lib/yaml-cpp/src/stream.cpp	/^	inline void QueueUnicodeCodepoint(std::deque<char>& q, unsigned long ch)$/;"	f	namespace:YAML
QuotedNewline	lib/yaml-cpp/test/old-api/parsertests.cpp	/^        bool QuotedNewline()$/;"	f	namespace:Test::Parser
QuotedScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void QuotedScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
QuotedScalarIndicators	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST QuotedScalarIndicators()$/;"	f	namespace:Test::Spec
QuotedScalars	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST QuotedScalars()$/;"	f	namespace:Test::Spec
QuotedSimpleKeys	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool QuotedSimpleKeys()$/;"	f	namespace:Test::Parser
R	core/motion/rswalk2014/perception/kinematics/CKF.hpp	/^      Eigen::Matrix<float, 4, 4> R; \/\/ Observation noise$/;"	m	class:CKF
R	core/sensor/InertialFilter.h	/^  NMatrix R;$/;"	m	class:InertialFilter
R	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateCovarianceMatrix R; \/\/process error$/;"	m	class:ExtendedKalmanFilter
R	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  StateCovarianceMatrix R; \/\/process error$/;"	m	class:LinearKalmanFilter
R	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  StateCovarianceMatrix R;$/;"	m	class:SRUnscentedKalmanFilter
R	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  StateCovarianceMatrix R;$/;"	m	class:UnscentedKalmanFilter
R	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateCovarianceMatrix R;$/;"	m	class:UnscentedKalmanFilter
R	lib/lua/Makefile	/^R= 5.1.4$/;"	m
RA	lib/lua/src/lvm.c	/^#define RA(/;"	d	file:
RAD2DEG	core/motion/rswalk2014/utils/angles.hpp	/^inline static float RAD2DEG(const float x) {$/;"	f
RAD2DEG360	core/motion/rswalk2014/utils/angles.hpp	/^inline static float RAD2DEG360(const float theta) {$/;"	f
RADIANS_PER_DEGREE	lib/lua/src/lmathlib.c	/^#define RADIANS_PER_DEGREE /;"	d	file:
RADS_PER_FRAME	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^#define RADS_PER_FRAME /;"	d	file:
RADS_PER_FRAME	build/include/tool/simulation/LocalizationSimulation.cpp	/^#define RADS_PER_FRAME /;"	d	file:
RADS_PER_FRAME	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^#define RADS_PER_FRAME /;"	d	file:
RADS_PER_FRAME	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^#define RADS_PER_FRAME /;"	d	file:
RAD_OVER_DEG	core/motion/rswalk2014/utils/angles.hpp	/^static const float RAD_OVER_DEG = M_PI \/ 180;$/;"	v
RAD_TO_DEG	core/sensor/InertialFilter.cpp	/^#define RAD_TO_DEG /;"	d	file:
RAD_T_DEG	core/common/RobotInfo.h	/^#define RAD_T_DEG /;"	d
RAD_T_DEG	core/math/Geometry.h	/^#define RAD_T_DEG /;"	d
RAD_T_DEG	core/python/cfgwalk.py	/^from core import DEG_T_RAD,RAD_T_DEG$/;"	i
RAD_T_DEG	core/python/core.py	/^RAD_T_DEG = 180.0 \/ math.pi$/;"	v
RAD_T_DEG	core/python/primary_bvr.py	/^from core import DEG_T_RAD, RAD_T_DEG$/;"	i
RAD_T_DEG	core/python/util.py	/^from core import DEG_T_RAD, RAD_T_DEG$/;"	i
RAD_T_DEG	interfaces/sim_spark/Parser.cpp	/^#define RAD_T_DEG /;"	d	file:
RANDOM_H	core/common/Random.h	/^#define RANDOM_H$/;"	d
RANDOM_H	interfaces/sim_spark/Random.h	/^#define RANDOM_H$/;"	d
RAND_MAX_FLOAT	core/math/Common.h	/^const float RAND_MAX_FLOAT = static_cast<float>(RAND_MAX);$/;"	v
RANLIB	lib/lua/Makefile	/^RANLIB= ranlib$/;"	m
RANLIB	lib/lua/src/Makefile	/^RANLIB= ranlib$/;"	m
RANLIB	lib/zlib/Makefile	/^RANLIB=ranlib$/;"	m
RAW_IMAGE	build/include/tool/VisionWindow.h	/^#define RAW_IMAGE /;"	d
RAW_IMAGE	tools/UTNaoTool/VisionWindow.h	/^#define RAW_IMAGE /;"	d
RAnklePitch	core/common/RobotInfo.h	/^  RAnklePitch,$/;"	e	enum:Joint
RAnklePitch	core/motion/rswalk2014/utils/body.hpp	/^      RAnklePitch, \/\/17$/;"	e	enum:RSJoints::JointCodesEnum
RAnklePitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RAnklePitch_Max      = DEG2RAD(53.40);$/;"	m	namespace:RSJoints::Radians
RAnklePitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RAnklePitch_Min      = DEG2RAD(-67.97);$/;"	m	namespace:RSJoints::Radians
RAnkleRoll	core/common/RobotInfo.h	/^  RAnkleRoll,$/;"	e	enum:Joint
RAnkleRoll	core/motion/rswalk2014/utils/body.hpp	/^      RAnkleRoll, \/\/18$/;"	e	enum:RSJoints::JointCodesEnum
RAnkleRoll_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RAnkleRoll_Max       = DEG2RAD(22.27);$/;"	m	namespace:RSJoints::Radians
RAnkleRoll_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RAnkleRoll_Min       = DEG2RAD(-45.03);$/;"	m	namespace:RSJoints::Radians
RB	lib/lua/src/lvm.c	/^#define RB(/;"	d	file:
RBOTH	core/motion/rswalk2014/utils/body.hpp	/^      const float RBOTH       = 4.0f; \/\/ use both receivers$/;"	m	namespace:Sonar::Mode
RBTeam	build/include/tool/StateWindow.h	/^     RBTeam,$/;"	e	enum:StateWindow::__anon3
RBTeam	tools/UTNaoTool/StateWindow.h	/^     RBTeam,$/;"	e	enum:StateWindow::__anon141
RC	lib/lua/src/lvm.c	/^#define RC(/;"	d	file:
READY	core/common/States.h	/^  READY = 2,$/;"	e	enum:STATES
READY	core/motion/rswalk2014/Walk2014Generator.hpp	/^      READY        = 4, \/\/ stand still ready to walk$/;"	e	enum:Walk2014Generator::Walk2014Option
RECEIVE_BOTH	core/sonar/SonarModule.h	/^    RECEIVE_BOTH = 4,$/;"	e	enum:Sonar::Command
RECTANGLE_SELECTION_H	build/include/tool/annotations/RectangleSelection.h	/^#define RECTANGLE_SELECTION_H$/;"	d
RECTANGLE_SELECTION_H	tools/UTNaoTool/annotations/RectangleSelection.h	/^#define RECTANGLE_SELECTION_H$/;"	d
RED	vision_testing/src/vision_testing.cpp	/^  RED,$/;"	e	enum:FullColor	file:
RED_MAGENTA	vision_testing/src/vision_testing.cpp	/^  RED_MAGENTA,$/;"	e	enum:FullColor	file:
REF_PICKUP	core/motion/rswalk2014/types/ActionCommand.hpp	/^         RSDEAD, REF_PICKUP,                \/\/8, 9$/;"	e	enum:ActionCommand::Body::ActionType
REGEXIMPL_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/regeximpl.h	/^#define REGEXIMPL_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
REGEX_AND	lib/yaml-cpp/src/regex.h	/^	enum REGEX_OP { REGEX_EMPTY, REGEX_MATCH, REGEX_RANGE, REGEX_OR, REGEX_AND, REGEX_NOT, REGEX_SEQ };$/;"	e	enum:YAML::REGEX_OP
REGEX_EMPTY	lib/yaml-cpp/src/regex.h	/^	enum REGEX_OP { REGEX_EMPTY, REGEX_MATCH, REGEX_RANGE, REGEX_OR, REGEX_AND, REGEX_NOT, REGEX_SEQ };$/;"	e	enum:YAML::REGEX_OP
REGEX_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/regex.h	/^#define REGEX_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
REGEX_MATCH	lib/yaml-cpp/src/regex.h	/^	enum REGEX_OP { REGEX_EMPTY, REGEX_MATCH, REGEX_RANGE, REGEX_OR, REGEX_AND, REGEX_NOT, REGEX_SEQ };$/;"	e	enum:YAML::REGEX_OP
REGEX_NOT	lib/yaml-cpp/src/regex.h	/^	enum REGEX_OP { REGEX_EMPTY, REGEX_MATCH, REGEX_RANGE, REGEX_OR, REGEX_AND, REGEX_NOT, REGEX_SEQ };$/;"	e	enum:YAML::REGEX_OP
REGEX_OP	lib/yaml-cpp/src/regex.h	/^	enum REGEX_OP { REGEX_EMPTY, REGEX_MATCH, REGEX_RANGE, REGEX_OR, REGEX_AND, REGEX_NOT, REGEX_SEQ };$/;"	g	namespace:YAML
REGEX_OR	lib/yaml-cpp/src/regex.h	/^	enum REGEX_OP { REGEX_EMPTY, REGEX_MATCH, REGEX_RANGE, REGEX_OR, REGEX_AND, REGEX_NOT, REGEX_SEQ };$/;"	e	enum:YAML::REGEX_OP
REGEX_RANGE	lib/yaml-cpp/src/regex.h	/^	enum REGEX_OP { REGEX_EMPTY, REGEX_MATCH, REGEX_RANGE, REGEX_OR, REGEX_AND, REGEX_NOT, REGEX_SEQ };$/;"	e	enum:YAML::REGEX_OP
REGEX_SEQ	lib/yaml-cpp/src/regex.h	/^	enum REGEX_OP { REGEX_EMPTY, REGEX_MATCH, REGEX_RANGE, REGEX_OR, REGEX_AND, REGEX_NOT, REGEX_SEQ };$/;"	e	enum:YAML::REGEX_OP
REPEATED_TAG_DIRECTIVE	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const REPEATED_TAG_DIRECTIVE = "repeated TAG directive";$/;"	m	namespace:YAML::ErrorMsg
REPEATED_YAML_DIRECTIVE	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const REPEATED_YAML_DIRECTIVE= "repeated YAML directive";$/;"	m	namespace:YAML::ErrorMsg
REPLACEMENT_CHARACTER	lib/yaml-cpp/src/emitterutils.cpp	/^			enum {REPLACEMENT_CHARACTER = 0xFFFD};$/;"	e	enum:YAML::Utils::__anon127::__anon128	file:
REPZ_11_138	lib/zlib/trees.c	/^#define REPZ_11_138 /;"	d	file:
REPZ_3_10	lib/zlib/trees.c	/^#define REPZ_3_10 /;"	d	file:
REP_3_6	lib/zlib/trees.c	/^#define REP_3_6 /;"	d	file:
RESERVED	lib/lua/src/llex.h	/^enum RESERVED {$/;"	g
RESET	core/sonar/SonarModule.h	/^    RESET = 32,$/;"	e	enum:Sonar::Command
RESETFOOT	core/motion/KickParameters.h	/^    RESETFOOT,$/;"	e	enum:KickState::State
RESTORE	lib/zlib/infback.c	/^#define RESTORE(/;"	d	file:
RESTORE	lib/zlib/inflate.c	/^#define RESTORE(/;"	d	file:
RETSIGTYPE	build/pythonswig/pyconfig.h	/^#define RETSIGTYPE /;"	d
REV	lib/zlib/crc32.c	/^#  define REV(/;"	d	file:
REVERSE	lib/zlib/inflate.c	/^#define REVERSE(/;"	d	file:
RElbowRoll	core/common/RobotInfo.h	/^  RElbowRoll,$/;"	e	enum:Joint
RElbowRoll	core/motion/rswalk2014/utils/body.hpp	/^      RElbowRoll, \/\/22$/;"	e	enum:RSJoints::JointCodesEnum
RElbowRoll_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RElbowRoll_Max       = DEG2RAD(88.5);$/;"	m	namespace:RSJoints::Radians
RElbowRoll_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RElbowRoll_Min       = DEG2RAD(2);$/;"	m	namespace:RSJoints::Radians
RElbowYaw	core/common/RobotInfo.h	/^  RElbowYaw,$/;"	e	enum:Joint
RElbowYaw	core/motion/rswalk2014/utils/body.hpp	/^      RElbowYaw, \/\/21$/;"	e	enum:RSJoints::JointCodesEnum
RElbowYaw_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RElbowYaw_Max        = DEG2RAD(119.5);$/;"	m	namespace:RSJoints::Radians
RElbowYaw_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RElbowYaw_Min        = DEG2RAD(-119.5);$/;"	m	namespace:RSJoints::Radians
RFootBlue	core/common/RobotInfo.h	/^  RFootBlue,$/;"	e	enum:LED
RFootGreen	core/common/RobotInfo.h	/^  RFootGreen,$/;"	e	enum:LED
RFootRed	core/common/RobotInfo.h	/^  RFootRed,$/;"	e	enum:LED
RFoot_Bumper_Left	core/motion/rswalk2014/utils/body.hpp	/^      RFoot_Bumper_Left, \/\/22$/;"	e	enum:RSSensors::SensorCodesEnum
RFoot_Bumper_Right	core/motion/rswalk2014/utils/body.hpp	/^      RFoot_Bumper_Right, \/\/23$/;"	e	enum:RSSensors::SensorCodesEnum
RFoot_FSR_CenterOfPressure_X	core/motion/rswalk2014/utils/body.hpp	/^      RFoot_FSR_CenterOfPressure_X, \/\/18$/;"	e	enum:RSSensors::SensorCodesEnum
RFoot_FSR_CenterOfPressure_Y	core/motion/rswalk2014/utils/body.hpp	/^      RFoot_FSR_CenterOfPressure_Y, \/\/19$/;"	e	enum:RSSensors::SensorCodesEnum
RFoot_FSR_FrontLeft	core/motion/rswalk2014/utils/body.hpp	/^      RFoot_FSR_FrontLeft, \/\/ 14$/;"	e	enum:RSSensors::SensorCodesEnum
RFoot_FSR_FrontRight	core/motion/rswalk2014/utils/body.hpp	/^      RFoot_FSR_FrontRight, \/\/ 15$/;"	e	enum:RSSensors::SensorCodesEnum
RFoot_FSR_RearLeft	core/motion/rswalk2014/utils/body.hpp	/^      RFoot_FSR_RearLeft, \/\/ 16$/;"	e	enum:RSSensors::SensorCodesEnum
RFoot_FSR_RearRight	core/motion/rswalk2014/utils/body.hpp	/^      RFoot_FSR_RearRight, \/\/ 17$/;"	e	enum:RSSensors::SensorCodesEnum
RGB	core/common/ColorSpaces.h	/^struct RGB {$/;"	s
RGB	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    RGB,$/;"	e	enum:color_classifier::Image
RGB	vision_testing/src/vision_testing.cpp	/^  RGB()$/;"	f	class:RGB
RGB	vision_testing/src/vision_testing.cpp	/^  RGB(unsigned char R, unsigned char G, unsigned char B)$/;"	f	class:RGB
RGB	vision_testing/src/vision_testing.cpp	/^class RGB$/;"	c	file:
RGB2U	vision_testing/include/vision_testing/vision_testing.hpp	/^#define RGB2U(/;"	d
RGB2V	vision_testing/include/vision_testing/vision_testing.hpp	/^#define RGB2V(/;"	d
RGB2Y	vision_testing/include/vision_testing/vision_testing.hpp	/^#define RGB2Y(/;"	d
RGB_TO_YUV422	core/common/ColorSpaces.h	/^inline YUV422 RGB_TO_YUV422 (RGB rgb1, RGB rgb2) {$/;"	f
RGB_TO_YUV444	core/common/ColorSpaces.h	/^inline YUV444 RGB_TO_YUV444 (RGB rgb) {$/;"	f
RGB_TO_YUV444	core/common/ColorSpaces.h	/^inline YUV444 RGB_TO_YUV444 (int r, int g, int b) {$/;"	f
RHand	core/motion/rswalk2014/utils/body.hpp	/^      RHand, \/\/24$/;"	e	enum:RSJoints::JointCodesEnum
RHand_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RHand_Max            = 1.0;$/;"	m	namespace:RSJoints::Radians
RHand_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RHand_Min            = 0.0;$/;"	m	namespace:RSJoints::Radians
RHead0	core/common/RobotInfo.h	/^  RHead0,$/;"	e	enum:LED
RHead1	core/common/RobotInfo.h	/^  RHead1,$/;"	e	enum:LED
RHead2	core/common/RobotInfo.h	/^  RHead2,$/;"	e	enum:LED
RHead3	core/common/RobotInfo.h	/^  RHead3,$/;"	e	enum:LED
RHead4	core/common/RobotInfo.h	/^  RHead4,$/;"	e	enum:LED
RHead5	core/common/RobotInfo.h	/^  RHead5,$/;"	e	enum:LED
RHipPitch	core/common/RobotInfo.h	/^  RHipPitch,$/;"	e	enum:Joint
RHipPitch	core/motion/rswalk2014/utils/body.hpp	/^      RHipPitch, \/\/15$/;"	e	enum:RSJoints::JointCodesEnum
RHipPitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RHipPitch_Max        = DEG2RAD(27.82);$/;"	m	namespace:RSJoints::Radians
RHipPitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RHipPitch_Min        = DEG2RAD(-101.54);$/;"	m	namespace:RSJoints::Radians
RHipRoll	core/common/RobotInfo.h	/^  RHipRoll,$/;"	e	enum:Joint
RHipRoll	core/motion/rswalk2014/utils/body.hpp	/^      RHipRoll, \/\/14$/;"	e	enum:RSJoints::JointCodesEnum
RHipRoll_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RHipRoll_Max         = DEG2RAD(23.76);$/;"	m	namespace:RSJoints::Radians
RHipRoll_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RHipRoll_Min         = DEG2RAD(-42.30);$/;"	m	namespace:RSJoints::Radians
RHipYawPitch	core/common/RobotInfo.h	/^  RHipYawPitch,$/;"	e	enum:Joint
RIGHT	core/memory/BehaviorBlock.h	/^    RIGHT,$/;"	e	enum:Dive::diveTypes
RIGHT	core/memory/KickRequestBlock.h	/^    RIGHT,$/;"	e	enum:Kick::Leg
RIGHT	core/memory/OdometryBlock.h	/^    RIGHT,$/;"	e	enum:Fall::FallDir
RIGHT	core/motion/rswalk2014/types/ActionCommand.hpp	/^         RIGHT$/;"	e	enum:ActionCommand::Body::Foot
RIGHT	core/motion/rswalk2014/utils/body.hpp	/^   const int RIGHT = 2;$/;"	m	namespace:Sonar
RIGHTLEG	core/common/Kicks.h	/^#define RIGHTLEG /;"	d
RIGHT_CHAIN	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^         RIGHT_CHAIN = 1$/;"	e	enum:Kinematics::Chain
RIGHT_END	core/motion/rswalk2014/utils/body.hpp	/^   const float RIGHT_END = DEG2RAD(10.f);$/;"	m	namespace:Sonar
RIGHT_FOOT_BL	core/memory/RobotVisionBlock.h	/^    RIGHT_FOOT_BL,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
RIGHT_FOOT_BL	core/vision/enums/VisionBodyPoints.h	/^  RIGHT_FOOT_BL,$/;"	e	enum:VisionBodyPoints
RIGHT_FOOT_BR	core/memory/RobotVisionBlock.h	/^    RIGHT_FOOT_BR,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
RIGHT_FOOT_BR	core/vision/enums/VisionBodyPoints.h	/^  RIGHT_FOOT_BR,$/;"	e	enum:VisionBodyPoints
RIGHT_FOOT_TL	core/memory/RobotVisionBlock.h	/^    RIGHT_FOOT_TL,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
RIGHT_FOOT_TL	core/vision/enums/VisionBodyPoints.h	/^  RIGHT_FOOT_TL,$/;"	e	enum:VisionBodyPoints
RIGHT_FOOT_TR	core/memory/RobotVisionBlock.h	/^    RIGHT_FOOT_TR,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
RIGHT_FOOT_TR	core/vision/enums/VisionBodyPoints.h	/^  RIGHT_FOOT_TR,$/;"	e	enum:VisionBodyPoints
RIGHT_SHOULDER	core/memory/RobotVisionBlock.h	/^    RIGHT_SHOULDER,$/;"	e	enum:RobotVisionBlock::VisionBodyPoints
RIGHT_SHOULDER	core/vision/enums/VisionBodyPoints.h	/^  RIGHT_SHOULDER,$/;"	e	enum:VisionBodyPoints
RIGHT_START	core/motion/rswalk2014/utils/body.hpp	/^   const float RIGHT_START = DEG2RAD(-70.f); $/;"	m	namespace:Sonar
RIGHT_TO_LEFT	core/sonar/SonarModule.h	/^    RIGHT_TO_LEFT = 2,$/;"	e	enum:Sonar::Command
RIGHT_TO_RIGHT	core/sonar/SonarModule.h	/^    RIGHT_TO_RIGHT = 3,$/;"	e	enum:Sonar::Command
RKASK	lib/lua/src/lopcodes.h	/^#define RKASK(/;"	d
RKB	lib/lua/src/lvm.c	/^#define RKB(/;"	d	file:
RKC	lib/lua/src/lvm.c	/^#define RKC(/;"	d	file:
RKneePitch	core/common/RobotInfo.h	/^  RKneePitch,$/;"	e	enum:Joint
RKneePitch	core/motion/rswalk2014/utils/body.hpp	/^      RKneePitch, \/\/16$/;"	e	enum:RSJoints::JointCodesEnum
RKneePitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RKneePitch_Max       = DEG2RAD(121.47);$/;"	m	namespace:RSJoints::Radians
RKneePitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RKneePitch_Min       = DEG2RAD(-5.90);$/;"	m	namespace:RSJoints::Radians
RM	lib/lua/etc/Makefile	/^RM= rm -f$/;"	m
RM	lib/lua/src/Makefile	/^RM= rm -f$/;"	m
RMCLParticleFilter	particle_filters/RMCL_particle_filter.hpp	/^    RMCLParticleFilter(StateTransitionMatrix A_matrix, ControlMatrix B_matrix, MeasurementCovarianceMatrix Q_matrix, WhiteCovarianceVector N_matrix )$/;"	f	class:RMCLParticleFilter
RMCLParticleFilter	particle_filters/RMCL_particle_filter.hpp	/^class RMCLParticleFilter$/;"	c
RMCL_PARTICLE_FILTER_H	particle_filters/RMCL_particle_filter.hpp	/^#define RMCL_PARTICLE_FILTER_H$/;"	d
ROBOCUPGAMECONTROLDATA_H	core/communications/RoboCupGameControlData.h	/^#define ROBOCUPGAMECONTROLDATA_H$/;"	d
ROBOTBEHAVIOR_H	interfaces/sim_spark/RobotBehavior.h	/^#define ROBOTBEHAVIOR_H$/;"	d
ROBOTINFOBLOCK_CBJC25GF	core/memory/RobotInfoBlock.h	/^#define ROBOTINFOBLOCK_CBJC25GF$/;"	d
ROBOTINFO_R3BSIHAC	core/common/RobotInfo.h	/^#define ROBOTINFO_R3BSIHAC$/;"	d
ROBOTPOSITIONS_H_SBZQRKAM	core/common/RobotPositions.h	/^#define ROBOTPOSITIONS_H_SBZQRKAM$/;"	d
ROBOTSTATE_	core/memory/RobotStateBlock.h	/^#define ROBOTSTATE_$/;"	d
ROBOTS_PER_TEAM	core/motion/rswalk2014/utils/SPLDefs.hpp	/^   #define ROBOTS_PER_TEAM /;"	d
ROBOTVISIONBLOCK_	core/memory/RobotVisionBlock.h	/^#define ROBOTVISIONBLOCK_$/;"	d
ROBOT_CANDIDATE_H	core/vision/structures/RobotCandidate.h	/^#define ROBOT_CANDIDATE_H$/;"	d
ROBOT_CHEST_HEIGHT	core/constants/VisionConstants.h	/^#define ROBOT_CHEST_HEIGHT /;"	d
ROBOT_CONFIG_H	core/common/RobotConfig.h	/^#define ROBOT_CONFIG_H$/;"	d
ROBOT_CONTROLLER_CONFIG_H	build/include/tool/RobotControllerConfig.h	/^#define ROBOT_CONTROLLER_CONFIG_H$/;"	d
ROBOT_CONTROLLER_CONFIG_H	tools/UTNaoTool/RobotControllerConfig.h	/^#define ROBOT_CONTROLLER_CONFIG_H$/;"	d
ROBOT_CONTROLLER_WIDGET_H	build/include/tool/RobotControllerWidget.h	/^#define ROBOT_CONTROLLER_WIDGET_H$/;"	d
ROBOT_CONTROLLER_WIDGET_H	tools/UTNaoTool/RobotControllerWidget.h	/^#define ROBOT_CONTROLLER_WIDGET_H$/;"	d
ROBOT_GL_H	build/include/tool/UTOpenGL/RobotGL.h	/^#define ROBOT_GL_H$/;"	d
ROBOT_GL_H	tools/UTNaoTool/UTOpenGL/RobotGL.h	/^#define ROBOT_GL_H$/;"	d
ROLES_H	core/common/Roles.h	/^#define ROLES_H$/;"	d
ROOM	lib/zlib/infback.c	/^#define ROOM(/;"	d	file:
ROTATE_EXP	build/include/tool/simulation/RobotMovementSimulator.cpp	/^#define ROTATE_EXP /;"	d	file:
ROTATE_EXP	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^#define ROTATE_EXP /;"	d	file:
ROTATE_PERIOD	build/include/tool/simulation/RobotMovementSimulator.cpp	/^#define ROTATE_PERIOD /;"	d	file:
ROTATE_PERIOD	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^#define ROTATE_PERIOD /;"	d	file:
ROUND	core/vision/Macros.h	/^#define ROUND(/;"	d
RPF	core/localization/LocalizationModule.h	/^typedef RMCLParticleFilter<(25*12), 3, 12, 3> RPF;$/;"	t
RPF	particle_filters/main.cpp	/^typedef RMCLParticleFilter<NumParticle, SizeParticle, SizeMeasurement, SizeControl> RPF;$/;"	t	file:
RRCoord	core/motion/rswalk2014/types/RRCoord.hpp	/^   RRCoord() {$/;"	f	struct:RRCoord
RRCoord	core/motion/rswalk2014/types/RRCoord.hpp	/^   RRCoord(const RRCoord &other) {$/;"	f	struct:RRCoord
RRCoord	core/motion/rswalk2014/types/RRCoord.hpp	/^   RRCoord(float distance, float heading = NAN, float orientation = NAN)$/;"	f	struct:RRCoord
RRCoord	core/motion/rswalk2014/types/RRCoord.hpp	/^struct RRCoord {$/;"	s
RRCoordEnum	core/motion/rswalk2014/types/RRCoord.hpp	/^} RRCoordEnum;$/;"	t	typeref:enum:__anon15
RSCamera	core/motion/rswalk2014/perception/vision/RSCamera.cpp	/^RSCamera::RSCamera() : dumpFile(0) {$/;"	f	class:RSCamera
RSCamera	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^class RSCamera {$/;"	c
RSDEAD	core/motion/rswalk2014/types/ActionCommand.hpp	/^         RSDEAD, REF_PICKUP,                \/\/8, 9$/;"	e	enum:ActionCommand::Body::ActionType
RSJoints	core/motion/rswalk2014/utils/body.hpp	/^namespace RSJoints {$/;"	n
RSSIGN	core/motion/rswalk2014/utils/basic_maths.hpp	/^inline static int RSSIGN(const T &x) {$/;"	f
RSSensors	core/motion/rswalk2014/utils/body.hpp	/^namespace RSSensors {$/;"	n
RSWalkModule2014	core/motion/rswalk2014/RSWalkModule2014.cpp	/^RSWalkModule2014::RSWalkModule2014():$/;"	f	class:RSWalkModule2014
RSWalkModule2014	core/motion/rswalk2014/RSWalkModule2014.h	/^class RSWalkModule2014: public WalkModule {$/;"	c
RShoulderPitch	core/common/RobotInfo.h	/^  RShoulderPitch,$/;"	e	enum:Joint
RShoulderPitch	core/motion/rswalk2014/utils/body.hpp	/^      RShoulderPitch, \/\/19$/;"	e	enum:RSJoints::JointCodesEnum
RShoulderPitch_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RShoulderPitch_Max   = DEG2RAD(119.5);$/;"	m	namespace:RSJoints::Radians
RShoulderPitch_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RShoulderPitch_Min   = DEG2RAD(-119.5);$/;"	m	namespace:RSJoints::Radians
RShoulderRoll	core/common/RobotInfo.h	/^  RShoulderRoll,$/;"	e	enum:Joint
RShoulderRoll	core/motion/rswalk2014/utils/body.hpp	/^      RShoulderRoll, \/\/20$/;"	e	enum:RSJoints::JointCodesEnum
RShoulderRoll_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RShoulderRoll_Max    = DEG2RAD(18);$/;"	m	namespace:RSJoints::Radians
RShoulderRoll_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RShoulderRoll_Min    = DEG2RAD(-76);$/;"	m	namespace:RSJoints::Radians
RWristYaw	core/motion/rswalk2014/utils/body.hpp	/^      RWristYaw, \/\/23$/;"	e	enum:RSJoints::JointCodesEnum
RWristYaw_Max	core/motion/rswalk2014/utils/body.hpp	/^      const float RWristYaw_Max        = DEG2RAD(104.5);$/;"	m	namespace:RSJoints::Radians
RWristYaw_Min	core/motion/rswalk2014/utils/body.hpp	/^      const float RWristYaw_Min        = DEG2RAD(-104.5);$/;"	m	namespace:RSJoints::Radians
R_	interfaces/sim_spark/Random.h	/^   static const long   R_    = 0x5d5e;     \/\/ 23902$/;"	m	class:Random
Rad2Deg	core/math/Geometry.cpp	/^AngDeg Rad2Deg( AngRad ang )$/;"	f
Radians	core/motion/rswalk2014/utils/body.hpp	/^   namespace Radians {$/;"	n	namespace:RSJoints
Random	core/common/Random.cpp	/^Random::Random(int seed) :$/;"	f	class:Random
Random	core/common/Random.h	/^class Random {$/;"	c
Random	interfaces/sim_spark/Random.h	/^   Random( const Random& r )   \/\/ copy constructor (copies current state)$/;"	f	class:Random
Random	interfaces/sim_spark/Random.h	/^   Random( long seed )   \/\/ constructor to set the seed$/;"	f	class:Random
Random	interfaces/sim_spark/Random.h	/^   Random( void )   \/\/ default constructor uses process id to set the seed$/;"	f	class:Random
Random	interfaces/sim_spark/Random.h	/^class Random {$/;"	c
Randomratio	particle_filters/RMCL_particle_filter.hpp	/^    double Randomratio;$/;"	m	class:RMCLParticleFilter
Range	core/math/Range.h	/^    Range() {min = max = 0;}$/;"	f	class:Range
Range	core/math/Range.h	/^    Range(T min,T max)$/;"	f	class:Range
Range	core/math/Range.h	/^template <class T> class Range$/;"	c
RankUpdate	core/math/MatrixOperations.h	/^    static Eigen::Matrix<T, R, R> RankUpdate(Eigen::Matrix<T, R, R> L, Eigen::Matrix<T, R, 1> x, T sigma) {$/;"	f	class:MatrixOperations
Read	lib/yaml-cpp/include/yaml-cpp/nodereadimpl.h	/^	inline bool Node::Read(T& value) const {$/;"	f	class:YAML::Node
ReadAheadTo	lib/yaml-cpp/src/stream.h	/^	inline bool Stream::ReadAheadTo(size_t i) const {$/;"	f	class:YAML::Stream
ReadBuffer	lib/yaml-cpp/src/stream.cpp	/^	inline char* ReadBuffer(unsigned char* pBuffer)$/;"	f	namespace:YAML
ReadOptions	interfaces/sim_spark/main.cpp	/^void ReadOptions(int argc, char* argv[]) {$/;"	f
ReadSettings	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::ReadSettings() {$/;"	f	class:color_classifier::ClassificationWindow
ReadSettings	tools/color_classifier/src/main_window.cpp	/^  void MainWindow::ReadSettings() {$/;"	f	class:color_classifier::MainWindow
ReadingCode	core/motion/rswalk2014/utils/body.hpp	/^   } ReadingCode;$/;"	t	namespace:Sonar	typeref:enum:Sonar::ReadingCodesEnum
ReadingCodesEnum	core/motion/rswalk2014/utils/body.hpp	/^   typedef enum ReadingCodesEnum {$/;"	g	namespace:Sonar
Ready	core/python/behaviors/Distance.py	/^class Ready(Task):$/;"	c
Ready	core/python/behaviors/Movement.py	/^class Ready(Task):$/;"	c
Ready	core/python/behaviors/head_tracking.py	/^class Ready(Task):$/;"	c
Ready	core/python/behaviors/pid_distance_angle.py	/^class Ready(Task):$/;"	c
Ready	core/python/behaviors/stamp_in_circles.py	/^class Ready(Task):$/;"	c
Ready	core/python/behaviors/stand.py	/^class Ready(Task):$/;"	c
Ready	core/python/behaviors/walk_to_center.py	/^class Ready(Task):$/;"	c
Ready	core/python/behaviors/walk_to_center_2.py	/^class Ready(Task):$/;"	c
Ready	core/python/behaviors/win.py	/^class Ready(Task):$/;"	c
Ready	core/python/primary_bvr.py	/^class Ready(pose.Sit): pass$/;"	c
Rectangle	core/math/Geometry.cpp	/^Rectangle::Rectangle( Point2D p1, Point2D p2 )$/;"	f	class:Rectangle
Rectangle	core/math/Geometry.h	/^  Rectangle() {};$/;"	f	class:Rectangle
Rectangle	core/math/Geometry.h	/^class Rectangle$/;"	c
RectangleSelection	build/include/tool/annotations/RectangleSelection.h	/^        RectangleSelection(){}$/;"	f	class:RectangleSelection
RectangleSelection	build/include/tool/annotations/RectangleSelection.h	/^        RectangleSelection(Point tl, Point br){$/;"	f	class:RectangleSelection
RectangleSelection	build/include/tool/annotations/RectangleSelection.h	/^        RectangleSelection(QPoint qtl, QPoint qbr){$/;"	f	class:RectangleSelection
RectangleSelection	build/include/tool/annotations/RectangleSelection.h	/^class RectangleSelection : public Selection {$/;"	c
RectangleSelection	tools/UTNaoTool/annotations/RectangleSelection.h	/^        RectangleSelection(){}$/;"	f	class:RectangleSelection
RectangleSelection	tools/UTNaoTool/annotations/RectangleSelection.h	/^        RectangleSelection(Point tl, Point br){$/;"	f	class:RectangleSelection
RectangleSelection	tools/UTNaoTool/annotations/RectangleSelection.h	/^        RectangleSelection(QPoint qtl, QPoint qbr){$/;"	f	class:RectangleSelection
RectangleSelection	tools/UTNaoTool/annotations/RectangleSelection.h	/^class RectangleSelection : public Selection {$/;"	c
RectangleSelectionType	build/include/tool/annotations/SelectionType.h	/^    RectangleSelectionType,$/;"	e	enum:SelectionType
RectangleSelectionType	tools/UTNaoTool/annotations/SelectionType.h	/^    RectangleSelectionType,$/;"	e	enum:SelectionType
Red	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Red = TORGB(255,0,0);$/;"	m	class:Colors	file:
Red	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Red	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Red = TORGB(255,0,0);$/;"	m	class:Colors	file:
Red	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
RefPickupGenerator	core/motion/rswalk2014/RefPickupGenerator.cpp	/^RefPickupGenerator::RefPickupGenerator(std::string path)$/;"	f	class:RefPickupGenerator
RefPickupGenerator	core/motion/rswalk2014/RefPickupGenerator.hpp	/^class RefPickupGenerator : Generator {$/;"	c
RegEx	lib/yaml-cpp/src/regex.cpp	/^	RegEx::RegEx(): m_op(REGEX_EMPTY)$/;"	f	class:YAML::RegEx
RegEx	lib/yaml-cpp/src/regex.cpp	/^	RegEx::RegEx(REGEX_OP op): m_op(op)$/;"	f	class:YAML::RegEx
RegEx	lib/yaml-cpp/src/regex.cpp	/^	RegEx::RegEx(char a, char z): m_op(REGEX_RANGE), m_a(a), m_z(z)$/;"	f	class:YAML::RegEx
RegEx	lib/yaml-cpp/src/regex.cpp	/^	RegEx::RegEx(char ch): m_op(REGEX_MATCH), m_a(ch)$/;"	f	class:YAML::RegEx
RegEx	lib/yaml-cpp/src/regex.cpp	/^	RegEx::RegEx(const std::string& str, REGEX_OP op): m_op(op)$/;"	f	class:YAML::RegEx
RegEx	lib/yaml-cpp/src/regex.h	/^	class RegEx$/;"	c	namespace:YAML
Register	lib/yaml-cpp/include/yaml-cpp/contrib/anchordict.h	/^    void Register(anchor_t anchor, T value)$/;"	f	class:YAML::AnchorDict
RegisterAnchor	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  void GraphBuilderAdapter::RegisterAnchor(anchor_t anchor, void *pNode)$/;"	f	class:YAML::GraphBuilderAdapter
RegisterAnchor	lib/yaml-cpp/src/nodebuilder.cpp	/^	void NodeBuilder::RegisterAnchor(anchor_t anchor, Node& node)$/;"	f	class:YAML::NodeBuilder
RegisterAnchor	lib/yaml-cpp/src/singledocparser.cpp	/^	anchor_t SingleDocParser::RegisterAnchor(const std::string& name)$/;"	f	class:YAML::SingleDocParser
RegisterReference	lib/yaml-cpp/src/aliasmanager.cpp	/^	void AliasManager::RegisterReference(const Node& node)$/;"	f	class:YAML::AliasManager
ReportError	core/motion/rswalk2014/FADBAD++/fadbad.h	/^inline void ReportError(const char* errmsg)$/;"	f
RepresentationException	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		RepresentationException(const Mark& mark_, const std::string& msg_)$/;"	f	class:YAML::RepresentationException
RepresentationException	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	class RepresentationException: public Exception {$/;"	c	namespace:YAML
RequireHardSeparation	lib/yaml-cpp/src/emitterstate.h	/^		void RequireHardSeparation() { m_requiresSoftSeparation = true; m_requiresHardSeparation = true; }$/;"	f	class:YAML::EmitterState
RequireSoftSeparation	lib/yaml-cpp/src/emitterstate.h	/^		void RequireSoftSeparation() { m_requiresSoftSeparation = true; }$/;"	f	class:YAML::EmitterState
RequiresHardSeparation	lib/yaml-cpp/src/emitterstate.h	/^		bool RequiresHardSeparation() const { return m_requiresHardSeparation; }$/;"	f	class:YAML::EmitterState
RequiresSoftSeparation	lib/yaml-cpp/src/emitterstate.h	/^		bool RequiresSoftSeparation() const { return m_requiresSoftSeparation; }$/;"	f	class:YAML::EmitterState
ReservedDirectives	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST ReservedDirectives()$/;"	f	namespace:Test::Spec
Reset	core/opponents/UKF4.cpp	/^void UKF4::Reset()$/;"	f	class:UKF4
ResetColumn	lib/yaml-cpp/src/stream.h	/^		void ResetColumn() { m_mark.column = 0; }$/;"	f	class:YAML::Stream
Rgb	core/common/ColorConversion.h	/^  struct Rgb {$/;"	s	namespace:color
Rgb	tools/color_classifier/include/color_classifier/classification_window.hpp	/^  struct Rgb {$/;"	s	namespace:color_classifier
RgbImage	tools/color_classifier/include/color_classifier/classification_window.hpp	/^  typedef Rgb RgbImage[IMAGE_HEIGHT][IMAGE_WIDTH];$/;"	t	namespace:color_classifier
Right0	core/motion/rswalk2014/utils/body.hpp	/^      Right0,$/;"	e	enum:Sonar::ReadingCodesEnum
Right1	core/motion/rswalk2014/utils/body.hpp	/^      Right1,$/;"	e	enum:Sonar::ReadingCodesEnum
Right2	core/motion/rswalk2014/utils/body.hpp	/^      Right2,$/;"	e	enum:Sonar::ReadingCodesEnum
Right3	core/motion/rswalk2014/utils/body.hpp	/^      Right3,$/;"	e	enum:Sonar::ReadingCodesEnum
Right4	core/motion/rswalk2014/utils/body.hpp	/^      Right4,$/;"	e	enum:Sonar::ReadingCodesEnum
Right5	core/motion/rswalk2014/utils/body.hpp	/^      Right5,$/;"	e	enum:Sonar::ReadingCodesEnum
Right6	core/motion/rswalk2014/utils/body.hpp	/^      Right6,$/;"	e	enum:Sonar::ReadingCodesEnum
Right7	core/motion/rswalk2014/utils/body.hpp	/^      Right7,$/;"	e	enum:Sonar::ReadingCodesEnum
Right8	core/motion/rswalk2014/utils/body.hpp	/^      Right8,$/;"	e	enum:Sonar::ReadingCodesEnum
Right9	core/motion/rswalk2014/utils/body.hpp	/^      Right9,$/;"	e	enum:Sonar::ReadingCodesEnum
RightAnkleCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightAnkleCoM[] = {0.45, -0.30, 6.84, 1};$/;"	m	namespace:Limbs
RightAnkleMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightAnkleMass = 0.13415; \/\/ R Ankle Pitch$/;"	m	namespace:Limbs
RightBicepCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightBicepCoM[] = {24.29, -9.52, 3.20, 1};$/;"	m	namespace:Limbs
RightBicepMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightBicepMass = 0.15794; \/\/ R Shoulder Roll$/;"	m	namespace:Limbs
RightEar1	core/motion/rswalk2014/utils/body.hpp	/^      RightEar1,$/;"	e	enum:LEDs::LEDCode
RightEar10	core/motion/rswalk2014/utils/body.hpp	/^      RightEar10,$/;"	e	enum:LEDs::LEDCode
RightEar2	core/motion/rswalk2014/utils/body.hpp	/^      RightEar2,$/;"	e	enum:LEDs::LEDCode
RightEar3	core/motion/rswalk2014/utils/body.hpp	/^      RightEar3,$/;"	e	enum:LEDs::LEDCode
RightEar4	core/motion/rswalk2014/utils/body.hpp	/^      RightEar4,$/;"	e	enum:LEDs::LEDCode
RightEar5	core/motion/rswalk2014/utils/body.hpp	/^      RightEar5,$/;"	e	enum:LEDs::LEDCode
RightEar6	core/motion/rswalk2014/utils/body.hpp	/^      RightEar6,$/;"	e	enum:LEDs::LEDCode
RightEar7	core/motion/rswalk2014/utils/body.hpp	/^      RightEar7,$/;"	e	enum:LEDs::LEDCode
RightEar8	core/motion/rswalk2014/utils/body.hpp	/^      RightEar8,$/;"	e	enum:LEDs::LEDCode
RightEar9	core/motion/rswalk2014/utils/body.hpp	/^      RightEar9,$/;"	e	enum:LEDs::LEDCode
RightElbowCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightElbowCoM[] = {-27.44, 0.00, -0.14, 1};$/;"	m	namespace:Limbs
RightElbowMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightElbowMass = 0.06483; \/\/ R Elbow Yaw$/;"	m	namespace:Limbs
RightEyeBlue1	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeBlue1,$/;"	e	enum:LEDs::LEDCode
RightEyeBlue2	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeBlue2,$/;"	e	enum:LEDs::LEDCode
RightEyeBlue3	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeBlue3,$/;"	e	enum:LEDs::LEDCode
RightEyeBlue4	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeBlue4,$/;"	e	enum:LEDs::LEDCode
RightEyeBlue5	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeBlue5,$/;"	e	enum:LEDs::LEDCode
RightEyeBlue6	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeBlue6,$/;"	e	enum:LEDs::LEDCode
RightEyeBlue7	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeBlue7,$/;"	e	enum:LEDs::LEDCode
RightEyeBlue8	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeBlue8,$/;"	e	enum:LEDs::LEDCode
RightEyeGreen1	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeGreen1,$/;"	e	enum:LEDs::LEDCode
RightEyeGreen2	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeGreen2,$/;"	e	enum:LEDs::LEDCode
RightEyeGreen3	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeGreen3,$/;"	e	enum:LEDs::LEDCode
RightEyeGreen4	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeGreen4,$/;"	e	enum:LEDs::LEDCode
RightEyeGreen5	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeGreen5,$/;"	e	enum:LEDs::LEDCode
RightEyeGreen6	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeGreen6,$/;"	e	enum:LEDs::LEDCode
RightEyeGreen7	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeGreen7,$/;"	e	enum:LEDs::LEDCode
RightEyeGreen8	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeGreen8,$/;"	e	enum:LEDs::LEDCode
RightEyeRed1	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeRed1,$/;"	e	enum:LEDs::LEDCode
RightEyeRed2	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeRed2,$/;"	e	enum:LEDs::LEDCode
RightEyeRed3	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeRed3,$/;"	e	enum:LEDs::LEDCode
RightEyeRed4	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeRed4,$/;"	e	enum:LEDs::LEDCode
RightEyeRed5	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeRed5,$/;"	e	enum:LEDs::LEDCode
RightEyeRed6	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeRed6,$/;"	e	enum:LEDs::LEDCode
RightEyeRed7	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeRed7,$/;"	e	enum:LEDs::LEDCode
RightEyeRed8	core/motion/rswalk2014/utils/body.hpp	/^      RightEyeRed8,$/;"	e	enum:LEDs::LEDCode
RightFootBlue	core/motion/rswalk2014/utils/body.hpp	/^      RightFootBlue,$/;"	e	enum:LEDs::LEDCode
RightFootCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightFootCoM[] = {25.40, -3.32, -32.39, 1};$/;"	m	namespace:Limbs
RightFootGreen	core/motion/rswalk2014/utils/body.hpp	/^      RightFootGreen,$/;"	e	enum:LEDs::LEDCode
RightFootMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightFootMass = 0.16171; \/\/ R Ankle Roll$/;"	m	namespace:Limbs
RightFootRed	core/motion/rswalk2014/utils/body.hpp	/^      RightFootRed,$/;"	e	enum:LEDs::LEDCode
RightForearmCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightForearmCoM[] = {25.52, -2.81, 0.90, 1};$/;"	m	namespace:Limbs
RightForearmMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightForearmMass = 0.07778; \/\/ R Elbow Roll$/;"	m	namespace:Limbs
RightHandCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightHandCoM[] = {34.34, -0.88, 3.08, 1};$/;"	m	namespace:Limbs
RightHandMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightHandMass = 0.18533; \/\/ R Wrist Yaw$/;"	m	namespace:Limbs
RightHipCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightHipCoM[] = {-15.49, -0.29, -5.16, 1};$/;"	m	namespace:Limbs
RightHipMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightHipMass = 0.13053; \/\/ R Hip Roll$/;"	m	namespace:Limbs
RightPelvisCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightPelvisCoM[] = {-7.66, 12.00, 27.16, 1};$/;"	m	namespace:Limbs
RightPelvisMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightPelvisMass = 0.07118; \/\/ R Hip Yaw Pitch$/;"	m	namespace:Limbs
RightShoulderCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightShoulderCoM[] = {-1.65, 26.63, 0.14, 1};$/;"	m	namespace:Limbs
RightShoulderMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightShoulderMass = 0.07504; \/\/ R Shoulder Pitch$/;"	m	namespace:Limbs
RightThighCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightThighCoM[] = {1.39, -2.25, -53.74, 1};$/;"	m	namespace:Limbs
RightThighMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightThighMass = 0.38976; \/\/ R Hip Pitch$/;"	m	namespace:Limbs
RightTibiaCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float RightTibiaCoM[] = {3.94, -2.21, -49.38, 1};$/;"	m	namespace:Limbs
RightTibiaMass	core/motion/rswalk2014/utils/body.hpp	/^   const float RightTibiaMass = 0.29163; \/\/ R Knee Pitch$/;"	m	namespace:Limbs
RingBuffer	core/common/RingBuffer.h	/^    RingBuffer() {init();}$/;"	f	class:RingBuffer
RingBuffer	core/common/RingBuffer.h	/^template <class V, int n> class RingBuffer$/;"	c
RingBufferWithSum	core/common/RingBufferWithSum.h	/^    RingBufferWithSum() {init();}$/;"	f	class:RingBufferWithSum
RingBufferWithSum	core/common/RingBufferWithSum.h	/^template <class C, int n> class RingBufferWithSum$/;"	c
RingQueue	core/common/RingQueue.h	/^    RingQueue() {init();}$/;"	f	class:RingQueue
RingQueue	core/common/RingQueue.h	/^template <class V, int n> class RingQueue$/;"	c
RingQueueWithSum	core/common/RingQueueWithSum.h	/^    RingQueueWithSum() {init();}$/;"	f	class:RingQueueWithSum
RingQueueWithSum	core/common/RingQueueWithSum.h	/^template <class V, int n> class RingQueueWithSum$/;"	c
RoboCupGameControlData	core/communications/RoboCupGameControlData.h	/^struct RoboCupGameControlData$/;"	s
RoboCupGameControlReturnData	core/communications/RoboCupGameControlData.h	/^  RoboCupGameControlReturnData() : version(GAMECONTROLLER_RETURN_STRUCT_VERSION)$/;"	f	struct:RoboCupGameControlReturnData
RoboCupGameControlReturnData	core/communications/RoboCupGameControlData.h	/^struct RoboCupGameControlReturnData$/;"	s
RobotBehavior	interfaces/sim_spark/RobotBehavior.cpp	/^RobotBehavior::RobotBehavior(const std::string teamName, int uNum)$/;"	f	class:RobotBehavior
RobotBehavior	interfaces/sim_spark/RobotBehavior.h	/^class RobotBehavior : public Behavior{$/;"	c
RobotCalibration	core/common/RobotCalibration.cpp	/^RobotCalibration::RobotCalibration() {$/;"	f	class:RobotCalibration
RobotCalibration	core/common/RobotCalibration.h	/^class RobotCalibration : public YamlConfig {$/;"	c
RobotCandidate	core/vision/structures/RobotCandidate.h	/^  RobotCandidate() : feetMissing(false), blob(NULL), numLines(0), used(false) { }$/;"	f	struct:RobotCandidate
RobotCandidate	core/vision/structures/RobotCandidate.h	/^struct RobotCandidate {$/;"	s
RobotConfig	core/common/RobotConfig.cpp	/^RobotConfig::RobotConfig() {$/;"	f	class:RobotConfig
RobotConfig	core/common/RobotConfig.h	/^class RobotConfig : public YamlConfig {$/;"	c
RobotControllerConfig	build/include/tool/RobotControllerConfig.h	/^class RobotControllerConfig : public YamlConfig {$/;"	c
RobotControllerConfig	tools/UTNaoTool/RobotControllerConfig.h	/^class RobotControllerConfig : public YamlConfig {$/;"	c
RobotControllerWidget	build/include/tool/RobotControllerWidget.cpp	/^RobotControllerWidget::RobotControllerWidget(QWidget* parent) : ConfigWidget(parent) {$/;"	f	class:RobotControllerWidget
RobotControllerWidget	build/include/tool/RobotControllerWidget.h	/^class RobotControllerWidget : public ConfigWidget, public Ui_RobotControllerWidget { $/;"	c
RobotControllerWidget	tools/UTNaoTool/RobotControllerWidget.cpp	/^RobotControllerWidget::RobotControllerWidget(QWidget* parent) : ConfigWidget(parent) {$/;"	f	class:RobotControllerWidget
RobotControllerWidget	tools/UTNaoTool/RobotControllerWidget.h	/^class RobotControllerWidget : public ConfigWidget, public Ui_RobotControllerWidget { $/;"	c
RobotDimensions	core/common/RobotDimensions.h	/^  RobotDimensions() {$/;"	f	class:RobotDimensions
RobotDimensions	core/common/RobotDimensions.h	/^class RobotDimensions$/;"	c
RobotGL	build/include/tool/UTOpenGL/RobotGL.h	/^class RobotGL {$/;"	c
RobotGL	tools/UTNaoTool/UTOpenGL/RobotGL.h	/^class RobotGL {$/;"	c
RobotID	build/include/tool/StateWindow.h	/^     RobotID,$/;"	e	enum:StateWindow::__anon3
RobotID	tools/UTNaoTool/StateWindow.h	/^     RobotID,$/;"	e	enum:StateWindow::__anon141
RobotInfo	core/communications/RoboCupGameControlData.h	/^struct RobotInfo$/;"	s
RobotInfoBlock	core/memory/RobotInfoBlock.h	/^  RobotInfoBlock()  {$/;"	f	struct:RobotInfoBlock
RobotInfoBlock	core/memory/RobotInfoBlock.h	/^struct RobotInfoBlock : public MemoryBlock {$/;"	s
RobotMovementSimulator	build/include/tool/simulation/RobotMovementSimulator.cpp	/^RobotMovementSimulator::RobotMovementSimulator(int player) : player_(player) {$/;"	f	class:RobotMovementSimulator
RobotMovementSimulator	build/include/tool/simulation/RobotMovementSimulator.h	/^class RobotMovementSimulator {$/;"	c
RobotMovementSimulator	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^RobotMovementSimulator::RobotMovementSimulator(int player) : player_(player) {$/;"	f	class:RobotMovementSimulator
RobotMovementSimulator	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^class RobotMovementSimulator {$/;"	c
RobotPose	build/include/tool/VisionWindow.h	/^typedef Pose2D RobotPose;$/;"	t
RobotPose	build/include/tool/calibration/ExtrinsicCalibrator.h	/^typedef Pose2D RobotPose;$/;"	t
RobotPose	tools/UTNaoTool/VisionWindow.h	/^typedef Pose2D RobotPose;$/;"	t
RobotPose	tools/UTNaoTool/calibration/ExtrinsicCalibrator.h	/^typedef Pose2D RobotPose;$/;"	t
RobotPositions	core/common/RobotPositions.h	/^class RobotPositions {$/;"	c
RobotStateBlock	core/memory/RobotStateBlock.cpp	/^RobotStateBlock::RobotStateBlock() : WO_SELF(5), team_(TEAM_BLUE), role_(WO_SELF) {$/;"	f	class:RobotStateBlock
RobotStateBlock	core/memory/RobotStateBlock.h	/^struct RobotStateBlock : public MemoryBlock {$/;"	s
RobotStatus	build/include/tool/ProcessExecutor.h	/^    enum RobotStatus {$/;"	g	class:ProcessExecutor
RobotStatus	tools/UTNaoTool/ProcessExecutor.h	/^    enum RobotStatus {$/;"	g	class:ProcessExecutor
RobotVisionBlock	core/memory/RobotVisionBlock.cpp	/^RobotVisionBlock::RobotVisionBlock() : top_params_(Camera::TOP), bottom_params_(Camera::BOTTOM) {$/;"	f	class:RobotVisionBlock
RobotVisionBlock	core/memory/RobotVisionBlock.cpp	/^RobotVisionBlock::RobotVisionBlock(const RobotVisionBlock& other) : RobotVisionBlock() {$/;"	f	class:RobotVisionBlock
RobotVisionBlock	core/memory/RobotVisionBlock.h	/^struct RobotVisionBlock : public MemoryBlock {$/;"	s
Role	build/include/tool/StateWindow.h	/^     Role,$/;"	e	enum:StateWindow::__anon3
Role	core/common/Roles.h	/^enum Role {$/;"	g
Role	tools/UTNaoTool/StateWindow.h	/^     Role,$/;"	e	enum:StateWindow::__anon141
RolePositionConfig	core/memory/BehaviorParamBlock.h	/^struct RolePositionConfig {$/;"	s
RoleStrategy	core/memory/BehaviorParamBlock.h	/^struct RoleStrategy {$/;"	s
Root	core/vision/Union_find.cpp	/^int MergeBlob :: Root(int i)$/;"	f	class:MergeBlob
RootNode	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    void *RootNode() const {return m_pRootNode;}$/;"	f	class:YAML::GraphBuilderAdapter
Rotation	tools/behaviorSim/cma.py	/^class Rotation(object):$/;"	c
RotationMatrix	core/math/RotationMatrix.cpp	/^RotationMatrix::RotationMatrix($/;"	f	class:RotationMatrix
RotationMatrix	core/math/RotationMatrix.cpp	/^RotationMatrix::RotationMatrix(const Vector3<float>& a)$/;"	f	class:RotationMatrix
RotationMatrix	core/math/RotationMatrix.cpp	/^RotationMatrix::RotationMatrix(const Vector3<float>& a, float angle)$/;"	f	class:RotationMatrix
RotationMatrix	core/math/RotationMatrix.cpp	/^RotationMatrix::RotationMatrix(float yaw, float pitch, float roll)$/;"	f	class:RotationMatrix
RotationMatrix	core/math/RotationMatrix.h	/^  RotationMatrix() {}$/;"	f	class:RotationMatrix
RotationMatrix	core/math/RotationMatrix.h	/^  RotationMatrix(const Matrix3x3<float>& other)$/;"	f	class:RotationMatrix
RotationMatrix	core/math/RotationMatrix.h	/^class RotationMatrix : public Matrix3x3<float>$/;"	c
RotationMatrix_H	core/math/RotationMatrix.h	/^#define RotationMatrix_H$/;"	d
Round	core/math/Geometry.cpp	/^int Round( float d ) {$/;"	f
Run	interfaces/sim_spark/main.cpp	/^void Run() {    $/;"	f
RunAll	lib/yaml-cpp/test/tests.cpp	/^	void RunAll()$/;"	f	namespace:Test
RunEmitterErrorTest	lib/yaml-cpp/test/emittertests.cpp	/^		void RunEmitterErrorTest(void (*test)(YAML::Emitter&, std::string&), const std::string& name, int& passed, int& total) {$/;"	f	namespace:Test::__anon129
RunEmitterTest	lib/yaml-cpp/test/emittertests.cpp	/^		void RunEmitterTest(void (*test)(YAML::Emitter&, std::string&), const std::string& name, int& passed, int& total) {$/;"	f	namespace:Test::__anon129
RunEmitterTests	lib/yaml-cpp/test/emittertests.cpp	/^	bool RunEmitterTests()$/;"	f	namespace:Test
RunEncodingTest	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void RunEncodingTest(EncodingFn encoding, bool declareEncoding, const std::string& name, int& passed, int& total)$/;"	f	namespace:Test::__anon130
RunParserTest	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void RunParserTest(bool (*test)(), const std::string& name, int& passed, int& total) {$/;"	f	namespace:Test::__anon130
RunParserTests	lib/yaml-cpp/test/old-api/parsertests.cpp	/^	bool RunParserTests()$/;"	f	namespace:Test
RunScalarParserTest	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void RunScalarParserTest(void (*test)(std::string&, std::string&), const std::string& name, int& passed, int& total) {$/;"	f	namespace:Test::__anon130
RunSpecTest	lib/yaml-cpp/test/spectests.cpp	/^		void RunSpecTest(TEST (*test)(), const std::string& index, const std::string& name, int& passed, int& total) {$/;"	f	namespace:Test::__anon131
RunSpecTests	lib/yaml-cpp/test/spectests.cpp	/^	bool RunSpecTests()$/;"	f	namespace:Test
S	core/python/state_machine.py	/^def S(signal = None):$/;"	f
S	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  StateCovarianceMatrix S;$/;"	m	class:SRUnscentedKalmanFilter
S	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  MeasurementCovarianceMatrix S; \/\/measurement error$/;"	m	class:UnscentedKalmanFilter
S	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  MeasurementCovarianceMatrix S; \/\/measurement error$/;"	m	class:UnscentedKalmanFilter
S	lib/lua/src/print.c	/^#define S(/;"	d	file:
SAME_READING_THRESHOLD	core/sonar/SonarModule.h	/^  const int SAME_READING_THRESHOLD = 75;$/;"	m	namespace:Sonar
SAMPLE_COUNT	core/memory/AudioProcessingBlock.h	/^#define SAMPLE_COUNT /;"	d
SAMPLE_H	core/vision/structures/Sample.h	/^#define SAMPLE_H$/;"	d
SAMPLE_RATE	core/memory/AudioProcessingBlock.h	/^#define SAMPLE_RATE /;"	d
SAY	core/motion/rswalk2014/utils/speech.hpp	/^const inline void SAY(std::string text, bool blocking = false) {$/;"	f
SCANNER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/scanner.h	/^#define SCANNER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
SCANSCALAR_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/scanscalar.h	/^#define SCANSCALAR_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
SCANTAG_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/scantag.h	/^#define SCANTAG_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
SDK	install/install_naoqi	/^SDK = 'naoqi-sdk-%s-linux64.tar.gz' % VERSION$/;"	v
SECONDARY_HANDLE	lib/yaml-cpp/src/tag.h	/^			VERBATIM, PRIMARY_HANDLE, SECONDARY_HANDLE, NAMED_HANDLE, NON_SPECIFIC$/;"	e	enum:YAML::Tag::TYPE
SECONDS_PER_FRAME	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^#define SECONDS_PER_FRAME /;"	d	file:
SECONDS_PER_FRAME	build/include/tool/simulation/LocalizationSimulation.cpp	/^#define SECONDS_PER_FRAME /;"	d	file:
SECONDS_PER_FRAME	build/include/tool/simulation/RobotMovementSimulator.cpp	/^#define SECONDS_PER_FRAME /;"	d	file:
SECONDS_PER_FRAME	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^#define SECONDS_PER_FRAME /;"	d	file:
SECONDS_PER_FRAME	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^#define SECONDS_PER_FRAME /;"	d	file:
SECONDS_PER_FRAME	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^#define SECONDS_PER_FRAME /;"	d	file:
SECOND_COLOR_BLUE	core/vision/BeaconDetector.h	/^    SECOND_COLOR_BLUE,$/;"	e	enum:BeaconDetector::BeaconPossibilityState
SECOND_COLOR_PINK	core/vision/BeaconDetector.h	/^    SECOND_COLOR_PINK,$/;"	e	enum:BeaconDetector::BeaconPossibilityState
SECOND_COLOR_YELLOW	core/vision/BeaconDetector.h	/^    SECOND_COLOR_YELLOW,$/;"	e	enum:BeaconDetector::BeaconPossibilityState
SEED	core/common/Random.cpp	/^int Random::SEED = 0;$/;"	m	class:Random	file:
SEED	core/common/Random.h	/^    static int SEED;$/;"	m	class:Random
SEEK_CUR	lib/zlib/zconf.h	/^#  define SEEK_CUR /;"	d
SEEK_END	lib/zlib/zconf.h	/^#  define SEEK_END /;"	d
SEEK_SET	lib/zlib/zconf.h	/^#  define SEEK_SET /;"	d
SEG	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    SEG$/;"	e	enum:color_classifier::Image
SEG_IMAGE	build/include/tool/VisionWindow.h	/^#define SEG_IMAGE /;"	d
SEG_IMAGE	tools/UTNaoTool/VisionWindow.h	/^#define SEG_IMAGE /;"	d
SELECTION_H	build/include/tool/annotations/Selection.h	/^#define SELECTION_H$/;"	d
SELECTION_H	tools/UTNaoTool/annotations/Selection.h	/^#define SELECTION_H$/;"	d
SELECTION_MODE_H	build/include/tool/annotations/SelectionMode.h	/^#define SELECTION_MODE_H$/;"	d
SELECTION_MODE_H	tools/UTNaoTool/annotations/SelectionMode.h	/^#define SELECTION_MODE_H$/;"	d
SELECTION_TYPE_H	build/include/tool/annotations/SelectionType.h	/^#define SELECTION_TYPE_H$/;"	d
SELECTION_TYPE_H	tools/UTNaoTool/annotations/SelectionType.h	/^#define SELECTION_TYPE_H$/;"	d
SENSORBLOCK_	core/memory/SensorBlock.h	/^#define SENSORBLOCK_$/;"	d
SENSORCALIBRATIONBLOCK_	core/memory/SensorCalibrationBlock.h	/^#define SENSORCALIBRATIONBLOCK_$/;"	d
SENSOR_MODULE_H	core/sensor/SensorModule.h	/^#define SENSOR_MODULE_H$/;"	d
SENSOR_WINDOW_H	build/include/tool/SensorWindow.h	/^#define SENSOR_WINDOW_H$/;"	d
SENSOR_WINDOW_H	tools/UTNaoTool/SensorWindow.h	/^#define SENSOR_WINDOW_H$/;"	d
SEPARATOR	lib/zlib/trees.c	/^#  define SEPARATOR(/;"	d	file:
SEQ	lib/yaml-cpp/src/scanner.h	/^			enum INDENT_TYPE { MAP, SEQ, NONE };$/;"	e	enum:YAML::Scanner::IndentMarker::INDENT_TYPE
SERIALIZE_CONTAINER	core/common/Serializable.h	/^#define SERIALIZE_CONTAINER(/;"	d
SERIALIZE_CONTAINER	core/common/Serializable.h	/^#undef SERIALIZE_CONTAINER$/;"	d
SERIALIZE_PRIMITIVE	core/common/Serializable.h	/^#define SERIALIZE_PRIMITIVE(/;"	d
SET	core/common/States.h	/^  SET = 3,$/;"	e	enum:STATES
SETARG_A	lib/lua/src/lopcodes.h	/^#define SETARG_A(/;"	d
SETARG_B	lib/lua/src/lopcodes.h	/^#define SETARG_B(/;"	d
SETARG_Bx	lib/lua/src/lopcodes.h	/^#define SETARG_Bx(/;"	d
SETARG_C	lib/lua/src/lopcodes.h	/^#define SETARG_C(/;"	d
SETARG_sBx	lib/lua/src/lopcodes.h	/^#define SETARG_sBx(/;"	d
SETTING_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/setting.h	/^#define SETTING_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
SET_BINARY_MODE	lib/zlib/minigzip.c	/^#  define SET_BINARY_MODE(/;"	d	file:
SET_OPCODE	lib/lua/src/lopcodes.h	/^#define SET_OPCODE(/;"	d
SET_PARAMS	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^#define SET_PARAMS(/;"	d	file:
SET_PARAMS	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^#define SET_PARAMS(/;"	d	file:
SET_PLAY_RECEIVER	core/common/Roles.h	/^  SET_PLAY_RECEIVER = 8,$/;"	e	enum:Role
SFIXEDBIT	lib/lua/src/lgc.h	/^#define SFIXEDBIT	/;"	d
SFLAGS	lib/zlib/Makefile	/^SFLAGS=-O3 -fPIC -D_LARGEFILE64_SOURCE=1$/;"	m
SHARED	core/memory/MemoryBlock.h	/^    SHARED$/;"	e	enum:MemoryOwner::Owner
SHAREDLIB	lib/zlib/Makefile	/^SHAREDLIB=libz.so$/;"	m
SHAREDLIBM	lib/zlib/Makefile	/^SHAREDLIBM=libz.so.1$/;"	m
SHAREDLIBV	lib/zlib/Makefile	/^SHAREDLIBV=libz.so.1.2.5$/;"	m
SHAREDMEMORY_85G7089E	core/memory/SharedMemory.h	/^#define SHAREDMEMORY_85G7089E$/;"	d
SHARED_MEMORY_BASE_NAME	core/memory/SharedMemory.cpp	/^#define SHARED_MEMORY_BASE_NAME /;"	d	file:
SHELL	lib/zlib/Makefile	/^SHELL=\/bin\/sh$/;"	m
SHIFT	core/memory/KickEngineBlock.h	/^    SHIFT,$/;"	e	enum:KickEngineBlock::Kick_State
SHIFT	core/motion/KickParameters.h	/^    SHIFT,$/;"	e	enum:KickState::State
SHIFTBACK	core/motion/KickParameters.h	/^    SHIFTBACK,$/;"	e	enum:KickState::State
SHIFT_END_PERIOD	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define SHIFT_END_PERIOD /;"	d	file:
SHIFT_PERIOD	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define SHIFT_PERIOD /;"	d	file:
SHLIB_EXT	build/pythonswig/pyconfig.h	/^#define SHLIB_EXT /;"	d
SHORT_RANGE_APPROACH	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^      SHORT_RANGE_APPROACH,$/;"	e	enum:IsolatedBehaviorSimulation::ApproachState
SHORT_RANGE_APPROACH	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^      SHORT_RANGE_APPROACH,$/;"	e	enum:IsolatedBehaviorSimulation::ApproachState
SHORT_RANGE_COMPLETE	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^      SHORT_RANGE_COMPLETE,$/;"	e	enum:IsolatedBehaviorSimulation::ApproachState
SHORT_RANGE_COMPLETE	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^      SHORT_RANGE_COMPLETE,$/;"	e	enum:IsolatedBehaviorSimulation::ApproachState
SHORT_RANGE_WAIT	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^      SHORT_RANGE_WAIT$/;"	e	enum:IsolatedBehaviorSimulation::ApproachState
SHORT_RANGE_WAIT	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^      SHORT_RANGE_WAIT$/;"	e	enum:IsolatedBehaviorSimulation::ApproachState
SHOWABSFEETTARGETS	build/include/tool/MotionGLWidget.h	/^    SHOWABSFEETTARGETS,$/;"	e	enum:MotionGLWidget::__anon2
SHOWABSFEETTARGETS	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWABSFEETTARGETS,$/;"	e	enum:MotionGLWidget::__anon140
SHOWBODYMODEL	build/include/tool/MotionGLWidget.h	/^    SHOWBODYMODEL,$/;"	e	enum:MotionGLWidget::__anon2
SHOWBODYMODEL	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWBODYMODEL,$/;"	e	enum:MotionGLWidget::__anon140
SHOWCURRENTPEN	build/include/tool/MotionGLWidget.h	/^    SHOWCURRENTPEN,$/;"	e	enum:MotionGLWidget::__anon2
SHOWCURRENTPEN	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWCURRENTPEN,$/;"	e	enum:MotionGLWidget::__anon140
SHOWCURRENTZMP	build/include/tool/MotionGLWidget.h	/^    SHOWCURRENTZMP,$/;"	e	enum:MotionGLWidget::__anon2
SHOWCURRENTZMP	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWCURRENTZMP,$/;"	e	enum:MotionGLWidget::__anon140
SHOWDESIREDPEN	build/include/tool/MotionGLWidget.h	/^    SHOWDESIREDPEN,$/;"	e	enum:MotionGLWidget::__anon2
SHOWDESIREDPEN	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWDESIREDPEN,$/;"	e	enum:MotionGLWidget::__anon140
SHOWDESIREDZMP	build/include/tool/MotionGLWidget.h	/^    SHOWDESIREDZMP,$/;"	e	enum:MotionGLWidget::__anon2
SHOWDESIREDZMP	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWDESIREDZMP,$/;"	e	enum:MotionGLWidget::__anon140
SHOWFEETTEXT	build/include/tool/MotionGLWidget.h	/^    SHOWFEETTEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWFEETTEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWFEETTEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWFRAMETEXT	build/include/tool/MotionGLWidget.h	/^    SHOWFRAMETEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWFRAMETEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWFRAMETEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWJOINTCOMMANDSMODEL	build/include/tool/MotionGLWidget.h	/^    SHOWJOINTCOMMANDSMODEL,$/;"	e	enum:MotionGLWidget::__anon2
SHOWJOINTCOMMANDSMODEL	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWJOINTCOMMANDSMODEL,$/;"	e	enum:MotionGLWidget::__anon140
SHOWJOINTVALUESMODEL	build/include/tool/MotionGLWidget.h	/^    SHOWJOINTVALUESMODEL,$/;"	e	enum:MotionGLWidget::__anon2
SHOWJOINTVALUESMODEL	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWJOINTVALUESMODEL,$/;"	e	enum:MotionGLWidget::__anon140
SHOWKICKFOOTTARGET	build/include/tool/MotionGLWidget.h	/^    SHOWKICKFOOTTARGET,$/;"	e	enum:MotionGLWidget::__anon2
SHOWKICKFOOTTARGET	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWKICKFOOTTARGET,$/;"	e	enum:MotionGLWidget::__anon140
SHOWKICKINFO	build/include/tool/MotionGLWidget.h	/^    SHOWKICKINFO,$/;"	e	enum:MotionGLWidget::__anon2
SHOWKICKINFO	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWKICKINFO,$/;"	e	enum:MotionGLWidget::__anon140
SHOWKICKREQUESTTEXT	build/include/tool/MotionGLWidget.h	/^    SHOWKICKREQUESTTEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWKICKREQUESTTEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWKICKREQUESTTEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWKICKSPLINE	build/include/tool/MotionGLWidget.h	/^    SHOWKICKSPLINE,$/;"	e	enum:MotionGLWidget::__anon2
SHOWKICKSPLINE	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWKICKSPLINE,$/;"	e	enum:MotionGLWidget::__anon140
SHOWKICKTARGETTEXT	build/include/tool/MotionGLWidget.h	/^    SHOWKICKTARGETTEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWKICKTARGETTEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWKICKTARGETTEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWODOMETRYTEXT	build/include/tool/MotionGLWidget.h	/^    SHOWODOMETRYTEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWODOMETRYTEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWODOMETRYTEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWSENSEDZMP	build/include/tool/MotionGLWidget.h	/^    SHOWSENSEDZMP,$/;"	e	enum:MotionGLWidget::__anon2
SHOWSENSEDZMP	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWSENSEDZMP,$/;"	e	enum:MotionGLWidget::__anon140
SHOWSENSORSTEXT	build/include/tool/MotionGLWidget.h	/^    SHOWSENSORSTEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWSENSORSTEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWSENSORSTEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWSTEPS	build/include/tool/MotionGLWidget.h	/^    SHOWSTEPS,$/;"	e	enum:MotionGLWidget::__anon2
SHOWSTEPS	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWSTEPS,$/;"	e	enum:MotionGLWidget::__anon140
SHOWSTEPSTEXT	build/include/tool/MotionGLWidget.h	/^    SHOWSTEPSTEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWSTEPSTEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWSTEPSTEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWSWINGFOOT	build/include/tool/MotionGLWidget.h	/^    SHOWSWINGFOOT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWSWINGFOOT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWSWINGFOOT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWTARGETPT	build/include/tool/MotionGLWidget.h	/^    SHOWTARGETPT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWTARGETPT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWTARGETPT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWWALKREQUESTTEXT	build/include/tool/MotionGLWidget.h	/^    SHOWWALKREQUESTTEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWWALKREQUESTTEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWWALKREQUESTTEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWWALKTEXT	build/include/tool/MotionGLWidget.h	/^    SHOWWALKTEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWWALKTEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWWALKTEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWZMPPENTEXT	build/include/tool/MotionGLWidget.h	/^    SHOWZMPPENTEXT,$/;"	e	enum:MotionGLWidget::__anon2
SHOWZMPPENTEXT	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWZMPPENTEXT,$/;"	e	enum:MotionGLWidget::__anon140
SHOWZMPREF	build/include/tool/MotionGLWidget.h	/^    SHOWZMPREF,$/;"	e	enum:MotionGLWidget::__anon2
SHOWZMPREF	tools/UTNaoTool/MotionGLWidget.h	/^    SHOWZMPREF,$/;"	e	enum:MotionGLWidget::__anon140
SIDE	core/memory/BehaviorBlock.h	/^    SIDE,$/;"	e	enum:WalkMode::Mode
SIDE	core/memory/KickRequestBlock.h	/^    SIDE,$/;"	e	enum:Kick::Type
SIDEKICK	core/memory/BehaviorParamBlock.h	/^    SIDEKICK$/;"	e	enum:Cluster::Activity
SIGMA	core/common/RobotInfo.h	/^#define SIGMA /;"	d
SIGMA0	tools/behaviorSim/runCMAES.py	/^SIGMA0   = 100$/;"	v
SIGN	core/math/Geometry.h	/^#define SIGN(/;"	d
SILENT	core/motion/rswalk2014/utils/Logger.hpp	/^   SILENT  = -100,$/;"	e	enum:LogLevel
SIMEFFECTORBLOCK_H_	core/memory/SimEffectorBlock.h	/^#define SIMEFFECTORBLOCK_H_$/;"	d
SIMIMAGEBLOCK_	core/memory/SimImageBlock.h	/^#define SIMIMAGEBLOCK_$/;"	d
SIMULATION_PATH_H	build/include/tool/simulation/SimulationPath.h	/^#define SIMULATION_PATH_H$/;"	d
SIMULATION_PATH_H	tools/UTNaoTool/simulation/SimulationPath.h	/^#define SIMULATION_PATH_H$/;"	d
SIM_IMAGE_SIZE	core/common/RobotInfo.h	/^#define SIM_IMAGE_SIZE /;"	d
SIM_IMAGE_X	core/common/RobotInfo.h	/^#define SIM_IMAGE_X /;"	d
SIM_IMAGE_Y	core/common/RobotInfo.h	/^#define SIM_IMAGE_Y /;"	d
SIM_PLAYER_H	build/include/tool/simulation/SimulatedPlayer.h	/^#define SIM_PLAYER_H$/;"	d
SIM_PLAYER_H	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^#define SIM_PLAYER_H$/;"	d
SIM_TRUTH_DATA_H_	core/memory/SimTruthDataBlock.h	/^#define SIM_TRUTH_DATA_H_$/;"	d
SINGLEDOCPARSER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/singledocparser.h	/^#define SINGLEDOCPARSER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
SINGLE_QUOTED_CHAR	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const SINGLE_QUOTED_CHAR     = "invalid character in single-quoted string";$/;"	m	namespace:YAML::ErrorMsg
SIZE	core/motion/rswalk2014/utils/body.hpp	/^   const unsigned int SIZE = 3;$/;"	m	namespace:Sonar
SIZEOF_DOUBLE	build/pythonswig/pyconfig.h	/^#define SIZEOF_DOUBLE /;"	d
SIZEOF_FLOAT	build/pythonswig/pyconfig.h	/^#define SIZEOF_FLOAT /;"	d
SIZEOF_FPOS_T	build/pythonswig/pyconfig.h	/^#define SIZEOF_FPOS_T /;"	d
SIZEOF_INT	build/pythonswig/pyconfig.h	/^#define SIZEOF_INT /;"	d
SIZEOF_LONG	build/pythonswig/pyconfig.h	/^#define SIZEOF_LONG /;"	d
SIZEOF_LONG_DOUBLE	build/pythonswig/pyconfig.h	/^#define SIZEOF_LONG_DOUBLE /;"	d
SIZEOF_LONG_LONG	build/pythonswig/pyconfig.h	/^#define SIZEOF_LONG_LONG /;"	d
SIZEOF_OFF_T	build/pythonswig/pyconfig.h	/^#define SIZEOF_OFF_T /;"	d
SIZEOF_PID_T	build/pythonswig/pyconfig.h	/^#define SIZEOF_PID_T /;"	d
SIZEOF_PTHREAD_T	build/pythonswig/pyconfig.h	/^#define SIZEOF_PTHREAD_T /;"	d
SIZEOF_SHORT	build/pythonswig/pyconfig.h	/^#define SIZEOF_SHORT /;"	d
SIZEOF_SIZE_T	build/pythonswig/pyconfig.h	/^#define SIZEOF_SIZE_T /;"	d
SIZEOF_TIME_T	build/pythonswig/pyconfig.h	/^#define SIZEOF_TIME_T /;"	d
SIZEOF_UINTPTR_T	build/pythonswig/pyconfig.h	/^#define SIZEOF_UINTPTR_T /;"	d
SIZEOF_VOID_P	build/pythonswig/pyconfig.h	/^#define SIZEOF_VOID_P /;"	d
SIZEOF_WCHAR_T	build/pythonswig/pyconfig.h	/^#define SIZEOF_WCHAR_T /;"	d
SIZEOF__BOOL	build/pythonswig/pyconfig.h	/^#define SIZEOF__BOOL /;"	d
SIZE_A	lib/lua/src/lopcodes.h	/^#define SIZE_A	/;"	d
SIZE_B	lib/lua/src/lopcodes.h	/^#define SIZE_B	/;"	d
SIZE_Bx	lib/lua/src/lopcodes.h	/^#define SIZE_Bx	/;"	d
SIZE_C	lib/lua/src/lopcodes.h	/^#define SIZE_C	/;"	d
SIZE_OP	lib/lua/src/lopcodes.h	/^#define SIZE_OP	/;"	d
SKIP_TO_PLAYING	build/include/tool/simulation/BehaviorSimulation.cpp	/^#define SKIP_TO_PLAYING /;"	d	file:
SKIP_TO_PLAYING	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^#define SKIP_TO_PLAYING /;"	d	file:
SLOW	core/memory/BehaviorBlock.h	/^    SLOW,$/;"	e	enum:WalkMode::Mode
SMALLEST	lib/zlib/trees.c	/^#define SMALLEST /;"	d	file:
SMALL_MEDIUM	lib/zlib/zconf.h	/^#    define SMALL_MEDIUM$/;"	d
SNAP	build/include/tool/RobotControllerWidget.cpp	/^#define SNAP(/;"	d	file:
SNAP	tools/UTNaoTool/RobotControllerWidget.cpp	/^#define SNAP(/;"	d	file:
SONARMODULE_RGN30PU	core/sonar/SonarModule.h	/^#define SONARMODULE_RGN30PU$/;"	d
SPECIALS	lib/lua/src/lstrlib.c	/^#define SPECIALS	/;"	d	file:
SPECIAL_MOTION_MODULE_H	core/motion/SpecialMotionModule.h	/^#define SPECIAL_MOTION_MODULE_H$/;"	d
SPECIAL_MOTION_PARSER_H	core/motion/SpecialMotionParser.h	/^#define SPECIAL_MOTION_PARSER_H$/;"	d
SPECTESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/test/spectests.h	/^#define SPECTESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
SPEECHBLOCK_4A6NIGLO	core/memory/SpeechBlock.h	/^#define SPEECHBLOCK_4A6NIGLO$/;"	d
SPEECH_TEXT_SIZE	core/memory/SpeechBlock.h	/^#define SPEECH_TEXT_SIZE /;"	d
SPHERICAL_POSITION_H	core/vision/structures/SphericalPosition.h	/^#define SPHERICAL_POSITION_H$/;"	d
SPLCOACHMESSAGE_H	core/communications/SPLCoachMessage.h	/^#define SPLCOACHMESSAGE_H$/;"	d
SPLCoachMessage	core/communications/SPLCoachMessage.h	/^  SPLCoachMessage() : version(SPL_COACH_MESSAGE_STRUCT_VERSION)$/;"	f	struct:SPLCoachMessage
SPLCoachMessage	core/communications/SPLCoachMessage.h	/^struct SPLCoachMessage$/;"	s
SPLINE	core/motion/KickParameters.h	/^    SPLINE,$/;"	e	enum:KickState::State
SPLINE3D_IY189LJZ	core/math/Spline3D.h	/^#define SPLINE3D_IY189LJZ$/;"	d
SPLSTANDARDMESSAGE_H	core/communications/SPLStandardMessage.h	/^#define SPLSTANDARDMESSAGE_H$/;"	d
SPLStandardMessage	core/communications/SPLStandardMessage.h	/^  SPLStandardMessage() :$/;"	f	struct:SPLStandardMessage
SPLStandardMessage	core/communications/SPLStandardMessage.h	/^struct SPLStandardMessage$/;"	s
SPL_COACH_MESSAGE_PORT	core/communications/SPLCoachMessage.h	/^#define SPL_COACH_MESSAGE_PORT /;"	d
SPL_COACH_MESSAGE_SIZE	core/communications/SPLCoachMessage.h	/^#define SPL_COACH_MESSAGE_SIZE /;"	d
SPL_COACH_MESSAGE_STRUCT_HEADER	core/communications/SPLCoachMessage.h	/^#define SPL_COACH_MESSAGE_STRUCT_HEADER /;"	d
SPL_COACH_MESSAGE_STRUCT_VERSION	core/communications/SPLCoachMessage.h	/^#define SPL_COACH_MESSAGE_STRUCT_VERSION /;"	d
SPL_STANDARD_MESSAGE_DATA_SIZE	core/communications/SPLStandardMessage.h	/^#define SPL_STANDARD_MESSAGE_DATA_SIZE /;"	d
SPL_STANDARD_MESSAGE_MAX_NUM_OF_PLAYERS	core/communications/SPLStandardMessage.h	/^#define SPL_STANDARD_MESSAGE_MAX_NUM_OF_PLAYERS /;"	d
SPL_STANDARD_MESSAGE_STRUCT_HEADER	core/communications/SPLStandardMessage.h	/^#define SPL_STANDARD_MESSAGE_STRUCT_HEADER /;"	d
SPL_STANDARD_MESSAGE_STRUCT_VERSION	core/communications/SPLStandardMessage.h	/^#define SPL_STANDARD_MESSAGE_STRUCT_VERSION /;"	d
SPRINT	core/memory/BehaviorBlock.h	/^    SPRINT,$/;"	e	enum:WalkMode::Mode
SParser	lib/lua/src/ldo.c	/^struct SParser {  \/* data to `f_parser' *\/$/;"	s	file:
SQ	core/vision/Macros.h	/^#define SQ(/;"	d
SQUARE	core/motion/rswalk2014/utils/basic_maths.hpp	/^inline static T SQUARE(const T &x) {$/;"	f
SRC	lib/lua/etc/Makefile	/^SRC= $(TOP)\/src$/;"	m
SRUnscentedKalmanFilter	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  SRUnscentedKalmanFilter(StateTransitionFunction g_function, MeasurementFunction h_function, StateCovarianceMatrix R_matrix, MeasurementCovarianceMatrix Q_matrix, double w0)$/;"	f	class:SRUnscentedKalmanFilter
SRUnscentedKalmanFilter	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^class SRUnscentedKalmanFilter$/;"	c
SRXX	core/memory/OpponentBlock.h	/^  float SRXX, SRXY, SRYY;$/;"	m	struct:OpponentModel
SRXY	core/memory/OpponentBlock.h	/^  float SRXX, SRXY, SRYY;$/;"	m	struct:OpponentModel
SRYY	core/memory/OpponentBlock.h	/^  float SRXX, SRXY, SRYY;$/;"	m	struct:OpponentModel
SR_UNSCENTED_KALMAN_FILTER_H	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^#define SR_UNSCENTED_KALMAN_FILTER_H$/;"	d
SS	lib/lua/src/print.c	/^#define SS(/;"	d	file:
STAND	core/memory/KickEngineBlock.h	/^    STAND,$/;"	e	enum:KickEngineBlock::Kick_State
STAND	core/motion/KickParameters.h	/^    STAND,$/;"	e	enum:KickState::State
STAND	core/motion/rswalk2014/Walk2014Generator.hpp	/^      STAND        = 0, \/\/ with knees straight and stiffness set to zero to conserve energy and heat generation in motors$/;"	e	enum:Walk2014Generator::Walk2014Option
STAND	core/motion/rswalk2014/types/ActionCommand.hpp	/^         STAND,   \/\/1$/;"	e	enum:ActionCommand::Body::ActionType
STANDTALL	core/memory/KickEngineBlock.h	/^    STANDTALL,$/;"	e	enum:KickEngineBlock::Kick_State
STANDUP	core/motion/rswalk2014/Walk2014Generator.hpp	/^      STANDUP      = 1, \/\/ process of moving from WALK crouch to STAND$/;"	e	enum:Walk2014Generator::Walk2014Option
STAND_ANGLES	core/motion/WalkModule.h	/^    float STAND_ANGLES[NUM_JOINTS];$/;"	m	class:WalkModule
STAND_ANGLES	core/motion/rswalk2014/RSWalkModule2014.cpp	/^const float RSWalkModule2014::STAND_ANGLES[NUM_JOINTS] = {$/;"	m	class:RSWalkModule2014	file:
STAND_ANGLES	core/motion/rswalk2014/RSWalkModule2014.h	/^        static const float STAND_ANGLES[NUM_JOINTS]; $/;"	m	class:RSWalkModule2014
STAND_HIP_HEIGHT	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float STAND_HIP_HEIGHT = 0.248;                      \/\/ for tall power saving stand$/;"	v
STAND_STRAIGHT	core/motion/rswalk2014/types/ActionCommand.hpp	/^         STAND_STRAIGHT,                  \/\/24$/;"	e	enum:ActionCommand::Body::ActionType
STARTING	core/motion/rswalk2014/Walk2014Generator.hpp	/^      STARTING       = 1,$/;"	e	enum:Walk2014Generator::WalkState
STATE2_NORMAL	core/communications/RoboCupGameControlData.h	/^#define STATE2_NORMAL /;"	d
STATE2_OVERTIME	core/communications/RoboCupGameControlData.h	/^#define STATE2_OVERTIME /;"	d
STATE2_PENALTYSHOOT	core/communications/RoboCupGameControlData.h	/^#define STATE2_PENALTYSHOOT /;"	d
STATE2_TIMEOUT	core/communications/RoboCupGameControlData.h	/^#define STATE2_TIMEOUT /;"	d
STATEMACHINE_H	core/common/StateMachine.h	/^#define STATEMACHINE_H$/;"	d
STATES	core/common/States.h	/^enum STATES {$/;"	g
STATES_H	core/common/States.h	/^#define STATES_H$/;"	d
STATE_FINISHED	core/communications/RoboCupGameControlData.h	/^#define STATE_FINISHED /;"	d
STATE_INITIAL	core/communications/RoboCupGameControlData.h	/^#define STATE_INITIAL /;"	d
STATE_PLAYING	core/communications/RoboCupGameControlData.h	/^#define STATE_PLAYING /;"	d
STATE_READY	core/communications/RoboCupGameControlData.h	/^#define STATE_READY /;"	d
STATE_SET	core/communications/RoboCupGameControlData.h	/^#define STATE_SET /;"	d
STATE_SIZE	core/memory/LocalizationBlock.h	/^#define STATE_SIZE /;"	d
STATE_WINDOW_H	build/include/tool/StateWindow.h	/^#define STATE_WINDOW_H$/;"	d
STATE_WINDOW_H	tools/UTNaoTool/StateWindow.h	/^#define STATE_WINDOW_H$/;"	d
STATICLIB	lib/zlib/Makefile	/^STATICLIB=libz.a$/;"	m
STATIC_TREES	lib/zlib/zutil.h	/^#define STATIC_TREES /;"	d
STATIONARY	kalman_filters/src/ekf_test.cpp	/^  STATIONARY,$/;"	e	enum:TestType	file:
STATUS	lib/yaml-cpp/src/scanner.h	/^			enum STATUS { VALID, INVALID, UNKNOWN };$/;"	g	struct:YAML::Scanner::IndentMarker
STATUS	lib/yaml-cpp/src/token.h	/^		enum STATUS { VALID, INVALID, UNVERIFIED };$/;"	g	struct:YAML::Token
STATUS_CALLBACK	build/include/tool/ProcessExecutor.h	/^#define STATUS_CALLBACK(/;"	d
STATUS_CALLBACK	tools/UTNaoTool/ProcessExecutor.h	/^#define STATUS_CALLBACK(/;"	d
STDC	lib/zlib/zconf.h	/^#    define STDC$/;"	d
STDC	lib/zlib/zconf.h	/^#  define STDC$/;"	d
STDC99	lib/zlib/zconf.h	/^#      define STDC99$/;"	d
STDC_HEADERS	build/pythonswig/pyconfig.h	/^#define STDC_HEADERS /;"	d
STIFFNESS_OFF_TIME	core/motion/GetupModule.cpp	/^const float STIFFNESS_OFF_TIME = 0.25; $/;"	v
STLContainers	lib/yaml-cpp/test/emittertests.cpp	/^		void STLContainers(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
STLEMITTER_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/stlemitter.h	/^#define STLEMITTER_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
STLNODE_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/stlnode.h	/^#define STLNODE_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
STOPPING	core/motion/rswalk2014/Walk2014Generator.hpp	/^      STOPPING       = 2,$/;"	e	enum:Walk2014Generator::WalkState
STOP_EVAL_WHEN_COMPLETED_FRAC	tools/behaviorSim/runCMAES.py	/^STOP_EVAL_WHEN_COMPLETED_FRAC = 0.8$/;"	v
STORED	lib/zlib/inflate.h	/^        STORED,     \/* i: waiting for stored size (length and complement) *\/$/;"	e	enum:__anon136
STORED_BLOCK	lib/zlib/zutil.h	/^#define STORED_BLOCK /;"	d
STRAIGHT	core/memory/KickRequestBlock.h	/^    STRAIGHT,$/;"	e	enum:Kick::Type
STREAMCHARSOURCE_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/streamcharsource.h	/^#define STREAMCHARSOURCE_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
STREAMINGMESSAGE_9P0HZ3LW	core/communications/StreamingMessage.h	/^#define STREAMINGMESSAGE_9P0HZ3LW$/;"	d
STREAM_BUFFER_H	core/memory/StreamBuffer.h	/^#define STREAM_BUFFER_H$/;"	d
STREAM_CV	core/communications/CommunicationModule.cpp	/^std::condition_variable STREAM_CV;$/;"	v
STREAM_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/stream.h	/^#define STREAM_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
STREAM_MUTEX	core/communications/CommunicationModule.cpp	/^std::mutex STREAM_MUTEX;$/;"	v
STRICT_SYSV_CURSES	build/pythonswig/pyconfig.h	/^#define STRICT_SYSV_CURSES /;"	d
STRINGSOURCE_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/stringsource.h	/^#define STRINGSOURCE_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
STRIP	lib/yaml-cpp/src/scanscalar.h	/^	enum CHOMP { STRIP = -1, CLIP, KEEP };$/;"	e	enum:YAML::CHOMP
SUFFIX_CND	core/memory/Lock.h	/^#define SUFFIX_CND /;"	d
SUFFIX_LEN	lib/zlib/minigzip.c	/^#define SUFFIX_LEN /;"	d	file:
SUFFIX_MUTEX	core/memory/Lock.h	/^#define SUFFIX_MUTEX /;"	d
SUPPORTER	core/common/Roles.h	/^  SUPPORTER = 4,$/;"	e	enum:Role
SWITCHABLE	core/memory/KickRequestBlock.h	/^    SWITCHABLE$/;"	e	enum:Kick::Leg
SYNC	core/memory/MemoryBlock.h	/^    SYNC,$/;"	e	enum:MemoryOwner::Owner
SYNC	lib/zlib/inflate.h	/^    SYNC        \/* looking for synchronization bytes to restart inflate() *\/$/;"	e	enum:__anon136
SYNCHRONIZEDBLOCK_T1HQ0KQX	core/memory/SynchronizedBlock.h	/^#define SYNCHRONIZEDBLOCK_T1HQ0KQX$/;"	d
SYS16BIT	lib/zlib/zconf.h	/^#      define SYS16BIT$/;"	d
SYS_SELECT_WITH_SYS_TIME	build/pythonswig/pyconfig.h	/^#define SYS_SELECT_WITH_SYS_TIME /;"	d
S_ARRAY_END	lib/yaml-cpp/src/stream.cpp	/^#define S_ARRAY_END(/;"	d	file:
S_ARRAY_SIZE	lib/yaml-cpp/src/stream.cpp	/^#define S_ARRAY_SIZE(/;"	d	file:
S_bar	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  StateCovarianceMatrix S_bar;$/;"	m	class:SRUnscentedKalmanFilter
Sample	core/vision/structures/Sample.h	/^struct Sample : Point2D {$/;"	s
SampleItem	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^SampleItem::SampleItem() : QListWidgetItem() {}$/;"	f	class:SampleItem
SampleItem	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^SampleItem::SampleItem(int x, int y){$/;"	f	class:SampleItem
SampleItem	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^class SampleItem : public QListWidgetItem {$/;"	c	file:
SampleItem	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^SampleItem::SampleItem() : QListWidgetItem() {}$/;"	f	class:SampleItem
SampleItem	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^SampleItem::SampleItem(int x, int y){$/;"	f	class:SampleItem
SampleItem	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^class SampleItem : public QListWidgetItem {$/;"	c	file:
SanitizeCovariance	core/math/MatrixOperations.h	/^    static Eigen::Matrix<T, R, C> SanitizeCovariance(const Eigen::Matrix<T, R, C>& M) {$/;"	f	class:MatrixOperations
Scalar	lib/yaml-cpp/include/yaml-cpp/node.h	/^	struct NodeType { enum value { Null, Scalar, Sequence, Map }; };$/;"	e	enum:YAML::NodeType::value
ScalarFormat	lib/yaml-cpp/test/emittertests.cpp	/^		void ScalarFormat(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
ScanAnchorOrAlias	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanAnchorOrAlias()$/;"	f	class:YAML::Scanner
ScanBlockEntry	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanBlockEntry()$/;"	f	class:YAML::Scanner
ScanBlockScalar	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanBlockScalar()$/;"	f	class:YAML::Scanner
ScanDirective	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanDirective()$/;"	f	class:YAML::Scanner
ScanDocEnd	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanDocEnd()$/;"	f	class:YAML::Scanner
ScanDocStart	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanDocStart()$/;"	f	class:YAML::Scanner
ScanFlowEnd	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanFlowEnd()$/;"	f	class:YAML::Scanner
ScanFlowEntry	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanFlowEntry()$/;"	f	class:YAML::Scanner
ScanFlowStart	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanFlowStart()$/;"	f	class:YAML::Scanner
ScanKey	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanKey()$/;"	f	class:YAML::Scanner
ScanNextToken	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::ScanNextToken()$/;"	f	class:YAML::Scanner
ScanPlainScalar	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanPlainScalar()$/;"	f	class:YAML::Scanner
ScanQuotedScalar	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanQuotedScalar()$/;"	f	class:YAML::Scanner
ScanScalar	lib/yaml-cpp/src/scanscalar.cpp	/^	std::string ScanScalar(Stream& INPUT, ScanScalarParams& params)$/;"	f	namespace:YAML
ScanScalarParams	lib/yaml-cpp/src/scanscalar.h	/^		ScanScalarParams(): eatEnd(false), indent(0), detectIndent(false), eatLeadingWhitespace(0), escape(0), fold(DONT_FOLD),$/;"	f	struct:YAML::ScanScalarParams
ScanScalarParams	lib/yaml-cpp/src/scanscalar.h	/^	struct ScanScalarParams {$/;"	s	namespace:YAML
ScanTag	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanTag()$/;"	f	class:YAML::Scanner
ScanTagHandle	lib/yaml-cpp/src/scantag.cpp	/^	const std::string ScanTagHandle(Stream& INPUT, bool& canBeHandle)$/;"	f	namespace:YAML
ScanTagSuffix	lib/yaml-cpp/src/scantag.cpp	/^	const std::string ScanTagSuffix(Stream& INPUT)$/;"	f	namespace:YAML
ScanToNextToken	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::ScanToNextToken()$/;"	f	class:YAML::Scanner
ScanValue	lib/yaml-cpp/src/scantoken.cpp	/^	void Scanner::ScanValue()$/;"	f	class:YAML::Scanner
ScanVerbatimTag	lib/yaml-cpp/src/scantag.cpp	/^	const std::string ScanVerbatimTag(Stream& INPUT)$/;"	f	namespace:YAML
Scanner	lib/yaml-cpp/src/scanner.cpp	/^	Scanner::Scanner(std::istream& in)$/;"	f	class:YAML::Scanner
Scanner	lib/yaml-cpp/src/scanner.h	/^	class Scanner$/;"	c	namespace:YAML
SecondaryTag	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	inline _Tag SecondaryTag(const std::string content) {$/;"	f	namespace:YAML
SecondaryTagHandle	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SecondaryTagHandle()$/;"	f	namespace:Test::Spec
SecondsLeft	build/include/tool/StateWindow.h	/^     SecondsLeft,$/;"	e	enum:StateWindow::__anon3
SecondsLeft	tools/UTNaoTool/StateWindow.h	/^     SecondsLeft,$/;"	e	enum:StateWindow::__anon141
Sections	tools/behaviorSim/cma.py	/^class Sections(object):$/;"	c
SegImage	tools/color_classifier/include/color_classifier/classification_window.hpp	/^  typedef uint8_t SegImage[IMAGE_HEIGHT][IMAGE_WIDTH];$/;"	t	namespace:color_classifier
SelectInput	interfaces/sim_spark/main.cpp	/^bool SelectInput() {$/;"	f
Selection	build/include/tool/annotations/Selection.h	/^class Selection {$/;"	c
Selection	tools/UTNaoTool/annotations/Selection.h	/^class Selection {$/;"	c
SelectionListWidgetItem	build/include/tool/AnnotationWidget.h	/^        SelectionListWidgetItem(Selection* selection) {$/;"	f	class:SelectionListWidgetItem
SelectionListWidgetItem	build/include/tool/AnnotationWidget.h	/^        SelectionListWidgetItem(const SelectionListWidgetItem& other) : QListWidgetItem(other) {$/;"	f	class:SelectionListWidgetItem
SelectionListWidgetItem	build/include/tool/AnnotationWidget.h	/^class SelectionListWidgetItem : public QListWidgetItem {$/;"	c
SelectionListWidgetItem	tools/UTNaoTool/AnnotationWidget.h	/^        SelectionListWidgetItem(Selection* selection) {$/;"	f	class:SelectionListWidgetItem
SelectionListWidgetItem	tools/UTNaoTool/AnnotationWidget.h	/^        SelectionListWidgetItem(const SelectionListWidgetItem& other) : QListWidgetItem(other) {$/;"	f	class:SelectionListWidgetItem
SelectionListWidgetItem	tools/UTNaoTool/AnnotationWidget.h	/^class SelectionListWidgetItem : public QListWidgetItem {$/;"	c
SelectionMode	build/include/tool/annotations/SelectionMode.h	/^enum SelectionMode{$/;"	g
SelectionMode	tools/UTNaoTool/annotations/SelectionMode.h	/^enum SelectionMode{$/;"	g
SelectionType	build/include/tool/annotations/SelectionType.h	/^enum SelectionType {$/;"	g
SelectionType	tools/UTNaoTool/annotations/SelectionType.h	/^enum SelectionType {$/;"	g
SelfTheta	core/localization/LocalizationState.h	/^  SelfTheta = 2$/;"	m	class:LocalizationState
SelfX	core/localization/LocalizationState.h	/^  SelfX = 0,$/;"	m	class:LocalizationState
SelfY	core/localization/LocalizationState.h	/^  SelfY = 1,$/;"	m	class:LocalizationState
SemInfo	lib/lua/src/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon86
Sensor	core/common/RobotInfo.h	/^enum Sensor {$/;"	g
SensorBlock	core/memory/SensorBlock.h	/^  SensorBlock() {$/;"	f	struct:SensorBlock
SensorBlock	core/memory/SensorBlock.h	/^struct SensorBlock : public MemoryBlock {$/;"	s
SensorCalibrationBlock	core/memory/SensorCalibrationBlock.h	/^  SensorCalibrationBlock() {$/;"	f	struct:SensorCalibrationBlock
SensorCalibrationBlock	core/memory/SensorCalibrationBlock.h	/^struct SensorCalibrationBlock : public MemoryBlock {$/;"	s
SensorCode	core/motion/rswalk2014/utils/body.hpp	/^   } SensorCode;$/;"	t	namespace:RSSensors	typeref:enum:RSSensors::SensorCodesEnum
SensorCodesEnum	core/motion/rswalk2014/utils/body.hpp	/^   typedef enum SensorCodesEnum {$/;"	g	namespace:RSSensors
SensorModule	core/sensor/SensorModule.h	/^class SensorModule: public Module {$/;"	c
SensorNames	core/common/RobotInfo.h	/^static std::string SensorNames[] = {$/;"	v
SensorValues	core/motion/rswalk2014/types/SensorValues.hpp	/^   SensorValues() {$/;"	f	struct:SensorValues
SensorValues	core/motion/rswalk2014/types/SensorValues.hpp	/^   SensorValues(bool zero) {$/;"	f	struct:SensorValues
SensorValues	core/motion/rswalk2014/types/SensorValues.hpp	/^struct SensorValues {$/;"	s
SensorWindow	build/include/tool/SensorWindow.cpp	/^SensorWindow::SensorWindow() : QWidget() {$/;"	f	class:SensorWindow
SensorWindow	build/include/tool/SensorWindow.h	/^class SensorWindow : public QWidget {$/;"	c
SensorWindow	tools/UTNaoTool/SensorWindow.cpp	/^SensorWindow::SensorWindow() : QWidget() {$/;"	f	class:SensorWindow
SensorWindow	tools/UTNaoTool/SensorWindow.h	/^class SensorWindow : public QWidget {$/;"	c
SensorsModuleLog	core/memory/TextLogger.h	/^  SensorsModuleLog,$/;"	e	enum:modulesTypes
SeparatedComment	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SeparatedComment()$/;"	f	namespace:Test::Spec
SeparationSpaces	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SeparationSpaces()$/;"	f	namespace:Test::Spec
SeparationSpacesII	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SeparationSpacesII()$/;"	f	namespace:Test::Spec
SeqScalars	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SeqScalars() {$/;"	f	namespace:Test::Spec
Sequence	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    typedef typename Impl::Sequence Sequence;$/;"	t	class:YAML::GraphBuilder
Sequence	lib/yaml-cpp/include/yaml-cpp/node.h	/^	struct NodeType { enum value { Null, Scalar, Sequence, Map }; };$/;"	e	enum:YAML::NodeType::value
SequenceComplete	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void SequenceComplete(void *pSequence) {$/;"	f	class:YAML::GraphBuilder
SequenceComplete	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    virtual void SequenceComplete(void *pSequence) {(void)pSequence;}$/;"	f	class:YAML::GraphBuilderInterface
SequenceOfMappings	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SequenceOfMappings()$/;"	f	namespace:Test::Spec
SequenceOfSequences	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SequenceOfSequences()$/;"	f	namespace:Test::Spec
Serializable	core/common/Serializable.h	/^    Serializable() : buffer_(NULL){ }$/;"	f	class:Serializable
Serializable	core/common/Serializable.h	/^class Serializable {$/;"	c
Serialize	build/include/tool/annotations/EllipseSelection.h	/^        virtual void Serialize(YAML::Emitter& emitter) const {$/;"	f	class:EllipseSelection
Serialize	build/include/tool/annotations/PolygonSelection.h	/^        virtual void Serialize(YAML::Emitter& emitter) const {$/;"	f	class:PolygonSelection
Serialize	build/include/tool/annotations/RectangleSelection.h	/^        virtual void Serialize(YAML::Emitter& emitter) const {$/;"	f	class:RectangleSelection
Serialize	tools/UTNaoTool/annotations/EllipseSelection.h	/^        virtual void Serialize(YAML::Emitter& emitter) const {$/;"	f	class:EllipseSelection
Serialize	tools/UTNaoTool/annotations/PolygonSelection.h	/^        virtual void Serialize(YAML::Emitter& emitter) const {$/;"	f	class:PolygonSelection
Serialize	tools/UTNaoTool/annotations/RectangleSelection.h	/^        virtual void Serialize(YAML::Emitter& emitter) const {$/;"	f	class:RectangleSelection
Set	core/python/behaviors/Movement.py	/^from sets import Set$/;"	i
Set	core/python/behaviors/walk_to_center.py	/^from sets import Set$/;"	i
Set	core/python/behaviors/walk_to_center_2.py	/^from sets import Set$/;"	i
Set	core/python/behaviors/win.py	/^from sets import Set$/;"	i
Set	core/python/primary_bvr.py	/^class Set(pose.Sit): pass$/;"	c
SetBoolCaseFormat	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetBoolCaseFormat(EMITTER_MANIP value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetBoolFormat	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::SetBoolFormat(EMITTER_MANIP value)$/;"	f	class:YAML::Emitter
SetBoolFormat	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetBoolFormat(EMITTER_MANIP value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetBoolLengthFormat	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetBoolLengthFormat(EMITTER_MANIP value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetColorTable	core/vision/ImageProcessor.cpp	/^void ImageProcessor::SetColorTable(unsigned char* table)$/;"	f	class:ImageProcessor
SetDoublePrecision	lib/yaml-cpp/src/emitter.cpp	/^    bool Emitter::SetDoublePrecision(unsigned n)$/;"	f	class:YAML::Emitter
SetDoublePrecision	lib/yaml-cpp/src/emitterstate.cpp	/^    bool EmitterState::SetDoublePrecision(int value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetError	lib/yaml-cpp/src/emitterstate.h	/^		void SetError(const std::string& error) { m_isGood = false; m_lastError = error; }$/;"	f	class:YAML::EmitterState
SetFloatPrecision	lib/yaml-cpp/src/emitter.cpp	/^    bool Emitter::SetFloatPrecision(unsigned n)$/;"	f	class:YAML::Emitter
SetFloatPrecision	lib/yaml-cpp/src/emitterstate.cpp	/^    bool EmitterState::SetFloatPrecision(int value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetFlowType	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetFlowType(GROUP_TYPE groupType, EMITTER_MANIP value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetIndent	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::SetIndent(unsigned n)$/;"	f	class:YAML::Emitter
SetIndent	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetIndent(unsigned value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetIntBase	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::SetIntBase(EMITTER_MANIP value)$/;"	f	class:YAML::Emitter
SetIntFormat	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetIntFormat(EMITTER_MANIP value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetLocalIndent	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::SetLocalIndent(const _Indent& indent)$/;"	f	class:YAML::Emitter
SetLocalPrecision	lib/yaml-cpp/src/emitter.cpp	/^    Emitter& Emitter::SetLocalPrecision(const _Precision& precision)$/;"	f	class:YAML::Emitter
SetLocalValue	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::SetLocalValue(EMITTER_MANIP value)$/;"	f	class:YAML::Emitter
SetLocalValue	lib/yaml-cpp/src/emitterstate.cpp	/^	void EmitterState::SetLocalValue(EMITTER_MANIP value)$/;"	f	class:YAML::EmitterState
SetMapFormat	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::SetMapFormat(EMITTER_MANIP value)$/;"	f	class:YAML::Emitter
SetMapKeyFormat	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetMapKeyFormat(EMITTER_MANIP value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetOutputCharset	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::SetOutputCharset(EMITTER_MANIP value)$/;"	f	class:YAML::Emitter
SetOutputCharset	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetOutputCharset(EMITTER_MANIP value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetPlay	core/memory/BehaviorParamBlock.h	/^  SetPlay():$/;"	f	struct:SetPlay
SetPlay	core/memory/BehaviorParamBlock.h	/^struct SetPlay {$/;"	s
SetPlayInfo	core/memory/BehaviorBlock.h	/^  SetPlayInfo():$/;"	f	struct:SetPlayInfo
SetPlayInfo	core/memory/BehaviorBlock.h	/^struct SetPlayInfo {$/;"	s
SetPlayStrategy	core/memory/BehaviorParamBlock.h	/^struct SetPlayStrategy {$/;"	s
SetPostCommentIndent	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::SetPostCommentIndent(unsigned n)$/;"	f	class:YAML::Emitter
SetPostCommentIndent	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetPostCommentIndent(unsigned value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetPreCommentIndent	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::SetPreCommentIndent(unsigned n)$/;"	f	class:YAML::Emitter
SetPreCommentIndent	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetPreCommentIndent(unsigned value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
SetPrecision	lib/yaml-cpp/test/emittertests.cpp	/^        void SetPrecision(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
SetScalarData	lib/yaml-cpp/src/node.cpp	/^	void Node::SetScalarData(const std::string& data)$/;"	f	class:YAML::Node
SetSeqFormat	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::SetSeqFormat(EMITTER_MANIP value)$/;"	f	class:YAML::Emitter
SetStreamablePrecision	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^        template<typename T> void SetStreamablePrecision(std::stringstream&) {}$/;"	f	class:YAML::Emitter
SetStreamablePrecision	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^    inline void Emitter::SetStreamablePrecision<double>(std::stringstream& str)$/;"	f	class:YAML::Emitter
SetStreamablePrecision	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^    inline void Emitter::SetStreamablePrecision<float>(std::stringstream& str)$/;"	f	class:YAML::Emitter
SetStringFormat	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::SetStringFormat(EMITTER_MANIP value)$/;"	f	class:YAML::Emitter
SetStringFormat	lib/yaml-cpp/src/emitterstate.cpp	/^	bool EmitterState::SetStringFormat(EMITTER_MANIP value, FMT_SCOPE scope)$/;"	f	class:YAML::EmitterState
Setting	lib/yaml-cpp/src/setting.h	/^		Setting(): m_value() {}$/;"	f	class:YAML::Setting
Setting	lib/yaml-cpp/src/setting.h	/^	class Setting$/;"	c	namespace:YAML
SettingChange	lib/yaml-cpp/src/setting.h	/^		SettingChange(Setting<T> *pSetting): m_pCurSetting(pSetting) {$/;"	f	class:YAML::SettingChange
SettingChange	lib/yaml-cpp/src/setting.h	/^	class SettingChange: public SettingChangeBase$/;"	c	namespace:YAML
SettingChangeBase	lib/yaml-cpp/src/setting.h	/^	class SettingChangeBase$/;"	c	namespace:YAML
SettingChanges	lib/yaml-cpp/src/setting.h	/^		SettingChanges() {}$/;"	f	class:YAML::SettingChanges
SettingChanges	lib/yaml-cpp/src/setting.h	/^	class SettingChanges: private noncopyable$/;"	c	namespace:YAML
SharedMemMap	core/memory/SharedMemory.h	/^typedef boost::interprocess::map<SharedString,MemoryBlockPtr,std::less<SharedString>,boost::interprocess::allocator<std::pair<const SharedString, MemoryBlockPtr>,boost::interprocess::managed_shared_memory::segment_manager> > SharedMemMap;$/;"	t
SharedMemory	core/memory/SharedMemory.cpp	/^SharedMemory::SharedMemory(const std::string &suffix, bool server):$/;"	f	class:SharedMemory
SharedMemory	core/memory/SharedMemory.h	/^class SharedMemory : public AbstractMemory {$/;"	c
SharedString	core/memory/SharedMemory.h	/^typedef boost::interprocess::basic_string<char,std::char_traits<char>,CharAllocator> SharedString;$/;"	t
ShortBool	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		ShortBool,  \/\/ y, t$/;"	e	enum:YAML::EMITTER_MANIP
ShoulderOffsetY	core/motion/rswalk2014/utils/body.hpp	/^   const float ShoulderOffsetY = 98.00;$/;"	m	namespace:Limbs
ShoulderOffsetZ	core/motion/rswalk2014/utils/body.hpp	/^   const float ShoulderOffsetZ = 100.00;$/;"	m	namespace:Limbs
ShoulderPitchSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float ShoulderPitchSpeed   = MOTOR3_REDUCTIONA_RAD;$/;"	m	namespace:RSJoints::Radians
ShoulderRollSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float ShoulderRollSpeed    = MOTOR3_REDUCTIONB_RAD;$/;"	m	namespace:RSJoints::Radians
SigmaPointMatrix	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef boost::array<StateVector, (1 + 2 * NumStates)> SigmaPointMatrix;$/;"	t	class:SRUnscentedKalmanFilter
SigmaPointMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef boost::array<StateVector, (1 + 2 * NumStates)> SigmaPointMatrix;$/;"	t	class:UnscentedKalmanFilter
SigmaPointMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef Eigen::Matrix<double, NumStates, (1 + 2 * NumStates)> SigmaPointMatrix;$/;"	t	class:UnscentedKalmanFilter
Sign	core/math/Geometry.cpp	/^int Sign( float d )$/;"	f
SignalEvent	core/python/state_machine.py	/^class SignalEvent(Event):$/;"	c
SignalNode	core/python/state_machine.py	/^class SignalNode(EventNode):$/;"	c
SimControlWidget	build/include/tool/SimControlWidget.cpp	/^SimControlWidget::SimControlWidget(QWidget* parent) : QWidget(parent) {$/;"	f	class:SimControlWidget
SimControlWidget	build/include/tool/SimControlWidget.h	/^class SimControlWidget : public QWidget, public Ui_SimControlWidget {$/;"	c
SimControlWidget	tools/UTNaoTool/SimControlWidget.cpp	/^SimControlWidget::SimControlWidget(QWidget* parent) : QWidget(parent) {$/;"	f	class:SimControlWidget
SimControlWidget	tools/UTNaoTool/SimControlWidget.h	/^class SimControlWidget : public QWidget, public Ui_SimControlWidget {$/;"	c
SimEffector	core/memory/SimEffectorBlock.h	/^  SimEffector() {$/;"	f	struct:SimEffector
SimEffector	core/memory/SimEffectorBlock.h	/^struct SimEffector {$/;"	s
SimEffectorBlock	core/memory/SimEffectorBlock.h	/^  SimEffectorBlock()  {$/;"	f	struct:SimEffectorBlock
SimEffectorBlock	core/memory/SimEffectorBlock.h	/^struct SimEffectorBlock : public MemoryBlock {$/;"	s
SimImageBlock	core/memory/SimImageBlock.h	/^  SimImageBlock()  {$/;"	f	struct:SimImageBlock
SimImageBlock	core/memory/SimImageBlock.h	/^struct SimImageBlock : public MemoryBlock {$/;"	s
SimTruthDataBlock	core/memory/SimTruthDataBlock.h	/^  SimTruthDataBlock()$/;"	f	struct:SimTruthDataBlock
SimTruthDataBlock	core/memory/SimTruthDataBlock.h	/^struct SimTruthDataBlock : public MemoryBlock {$/;"	s
SimpleAlias	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool SimpleAlias()$/;"	f	namespace:Test::Parser
SimpleAnchor	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SimpleAnchor()$/;"	f	namespace:Test::Spec
SimpleComment	lib/yaml-cpp/test/emittertests.cpp	/^		void SimpleComment(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
SimpleFlowMap	lib/yaml-cpp/test/emittertests.cpp	/^		void SimpleFlowMap(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
SimpleFlowSeq	lib/yaml-cpp/test/emittertests.cpp	/^		void SimpleFlowSeq(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
SimpleGlobalSettings	lib/yaml-cpp/test/emittertests.cpp	/^		void SimpleGlobalSettings(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
SimpleKey	lib/yaml-cpp/src/scanner.h	/^		struct SimpleKey {$/;"	s	class:YAML::Scanner
SimpleKey	lib/yaml-cpp/src/simplekey.cpp	/^	Scanner::SimpleKey::SimpleKey(const Mark& mark_, int flowLevel_)$/;"	f	class:YAML::Scanner::SimpleKey
SimpleLongKey	lib/yaml-cpp/test/emittertests.cpp	/^		void SimpleLongKey(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
SimpleMap	lib/yaml-cpp/test/emittertests.cpp	/^		void SimpleMap(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
SimpleMap	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool SimpleMap()$/;"	f	namespace:Test::Parser
SimpleScalar	lib/yaml-cpp/test/emittertests.cpp	/^		void SimpleScalar(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
SimpleScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void SimpleScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
SimpleSeq	lib/yaml-cpp/test/emittertests.cpp	/^		void SimpleSeq(YAML::Emitter& out, std::string& desiredOutput) {$/;"	f	namespace:Test::Emitter
SimpleSeq	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool SimpleSeq()$/;"	f	namespace:Test::Parser
SimpleStateMachine	core/python/state_machine.py	/^class SimpleStateMachine(object):$/;"	c
SimpleVerbatimTag	lib/yaml-cpp/test/emittertests.cpp	/^		void SimpleVerbatimTag(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
SimulatedPlayer	build/include/tool/simulation/SimulatedPlayer.cpp	/^SimulatedPlayer::SimulatedPlayer(int team, int self, bool lMode) : iparams_(Camera::TOP), rmsim_(self + (team == TEAM_BLUE ? 0 : WO_TEAM_LAST)) {$/;"	f	class:SimulatedPlayer
SimulatedPlayer	build/include/tool/simulation/SimulatedPlayer.h	/^class SimulatedPlayer {$/;"	c
SimulatedPlayer	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^SimulatedPlayer::SimulatedPlayer(int team, int self, bool lMode) : iparams_(Camera::TOP), rmsim_(self + (team == TEAM_BLUE ? 0 : WO_TEAM_LAST)) {$/;"	f	class:SimulatedPlayer
SimulatedPlayer	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^class SimulatedPlayer {$/;"	c
Simulation	build/include/tool/simulation/Simulation.h	/^class Simulation {$/;"	c
Simulation	tools/UTNaoTool/simulation/Simulation.h	/^class Simulation {$/;"	c
SimulationPath	build/include/tool/simulation/SimulationPath.h	/^    SimulationPath() : SimulationPath(Point2D(0,0)) {}$/;"	f	class:SimulationPath
SimulationPath	build/include/tool/simulation/SimulationPath.h	/^    SimulationPath(Point2D start) { last_ = start; }$/;"	f	class:SimulationPath
SimulationPath	build/include/tool/simulation/SimulationPath.h	/^    SimulationPath(std::initializer_list<Point2D> l) : SimulationPath() {$/;"	f	class:SimulationPath
SimulationPath	build/include/tool/simulation/SimulationPath.h	/^class SimulationPath : public YamlConfig {$/;"	c
SimulationPath	tools/UTNaoTool/simulation/SimulationPath.h	/^    SimulationPath() : SimulationPath(Point2D(0,0)) {}$/;"	f	class:SimulationPath
SimulationPath	tools/UTNaoTool/simulation/SimulationPath.h	/^    SimulationPath(Point2D start) { last_ = start; }$/;"	f	class:SimulationPath
SimulationPath	tools/UTNaoTool/simulation/SimulationPath.h	/^    SimulationPath(std::initializer_list<Point2D> l) : SimulationPath() {$/;"	f	class:SimulationPath
SimulationPath	tools/UTNaoTool/simulation/SimulationPath.h	/^class SimulationPath : public YamlConfig {$/;"	c
SimulatorConfig	build/include/tool/SimulatorConfig.h	/^class SimulatorConfig : public YamlConfig {$/;"	c
SimulatorConfig	tools/UTNaoTool/SimulatorConfig.h	/^class SimulatorConfig : public YamlConfig {$/;"	c
SingleChar	lib/yaml-cpp/test/emittertests.cpp	/^		void SingleChar(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
SingleChar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool SingleChar()$/;"	f	namespace:Test::Parser
SingleDocParser	lib/yaml-cpp/src/singledocparser.cpp	/^	SingleDocParser::SingleDocParser(Scanner& scanner, const Directives& directives): m_scanner(scanner), m_directives(directives), m_pCollectionStack(new CollectionStack), m_curAnchor(0)$/;"	f	class:YAML::SingleDocParser
SingleDocParser	lib/yaml-cpp/src/singledocparser.h	/^	class SingleDocParser: private noncopyable$/;"	c	namespace:YAML
SingleDocumentWithTwoComments	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SingleDocumentWithTwoComments()$/;"	f	namespace:Test::Spec
SingleLongKey	lib/yaml-cpp/test/emittertests.cpp	/^		void SingleLongKey(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
SinglePairExplicitEntry	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SinglePairExplicitEntry()$/;"	f	namespace:Test::Spec
SinglePairFlowMappings	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SinglePairFlowMappings()$/;"	f	namespace:Test::Spec
SinglePairImplicitEntries	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SinglePairImplicitEntries()$/;"	f	namespace:Test::Spec
SingleQuoted	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		SingleQuoted,$/;"	e	enum:YAML::EMITTER_MANIP
SingleQuotedCharacters	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SingleQuotedCharacters()$/;"	f	namespace:Test::Spec
SingleQuotedImplicitKeys	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SingleQuotedImplicitKeys()$/;"	f	namespace:Test::Spec
SingleQuotedLines	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST SingleQuotedLines()$/;"	f	namespace:Test::Spec
Sit	core/python/pose.py	/^class Sit(Task):$/;"	c
Sitting	core/python/behaviors/keeper_2.py	/^class Sitting(Node):$/;"	c
SizeControl	particle_filters/MCL_main.cpp	/^const int SizeControl = 3;$/;"	v
SizeControl	particle_filters/main.cpp	/^const int SizeControl = 3;$/;"	v
SizeMeasurement	particle_filters/MCL_main.cpp	/^const int SizeMeasurement = 12;$/;"	v
SizeMeasurement	particle_filters/main.cpp	/^const int SizeMeasurement = 12;$/;"	v
SizeParticle	particle_filters/MCL_main.cpp	/^const int SizeParticle = 3;$/;"	v
SizeParticle	particle_filters/main.cpp	/^const int SizeParticle = 3;$/;"	v
Sizeof	lib/lua/src/print.c	/^#define Sizeof(/;"	d	file:
Slope	core/vision/structures/FieldLine.h	/^  float Slope, Angle;$/;"	m	struct:FieldLine
Smain	lib/lua/src/lua.c	/^struct Smain {$/;"	s	file:
Smain	lib/lua/src/luac.c	/^struct Smain {$/;"	s	file:
SmallUKF4Params	core/opponents/UKF4.h	/^struct SmallUKF4Params {$/;"	s
SolutionDict	tools/behaviorSim/cma.py	/^class SolutionDict(DerivedDictBase):$/;"	c
SolutionDictOld	tools/behaviorSim/cma.py	/^class SolutionDictOld(dict):$/;"	c
Sonar	core/motion/rswalk2014/utils/body.hpp	/^namespace Sonar {$/;"	n
Sonar	core/sonar/SonarModule.h	/^namespace Sonar {$/;"	n
SonarModule	core/sonar/SonarModule.h	/^class SonarModule: public Module {$/;"	c
Space	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Space() {$/;"	f	namespace:YAML::Exp
Spec	lib/yaml-cpp/test/old-api/spectests.cpp	/^	namespace Spec {$/;"	n	namespace:Test	file:
Spec	lib/yaml-cpp/test/specexamples.h	/^	namespace Spec {$/;"	n	namespace:Test
Spec	lib/yaml-cpp/test/spectests.h	/^	namespace Spec {$/;"	n	namespace:Test
SpecialMotion	core/motion/SpecialMotionParser.cpp	/^SpecialMotion::SpecialMotion():$/;"	f	class:SpecialMotion
SpecialMotion	core/motion/SpecialMotionParser.cpp	/^SpecialMotion::SpecialMotion(int type):$/;"	f	class:SpecialMotion
SpecialMotion	core/motion/SpecialMotionParser.h	/^class SpecialMotion{$/;"	c
SpecialMotionModule	core/motion/SpecialMotionModule.cpp	/^SpecialMotionModule::SpecialMotionModule():$/;"	f	class:SpecialMotionModule
SpecialMotionModule	core/motion/SpecialMotionModule.h	/^class SpecialMotionModule: public Module {$/;"	c
SpecialMotionParser	core/motion/SpecialMotionParser.h	/^class SpecialMotionParser$/;"	c
Speech	core/motion/rswalk2014/utils/speech.hpp	/^      Speech() {$/;"	f	class:Speech
Speech	core/motion/rswalk2014/utils/speech.hpp	/^class Speech$/;"	c
SpeechBlock	core/memory/SpeechBlock.h	/^ SpeechBlock():$/;"	f	struct:SpeechBlock
SpeechBlock	core/memory/SpeechBlock.h	/^struct SpeechBlock : public MemoryBlock {$/;"	s
SphericalPosition	core/vision/structures/SphericalPosition.h	/^  SphericalPosition() : r(0), theta(0), phi(0) { }$/;"	f	struct:SphericalPosition
SphericalPosition	core/vision/structures/SphericalPosition.h	/^  SphericalPosition(int r, int theta, int phi) : r(r), theta(theta), phi(phi) { }$/;"	f	struct:SphericalPosition
SphericalPosition	core/vision/structures/SphericalPosition.h	/^struct SphericalPosition {$/;"	s
Spline3D	core/math/Spline3D.h	/^  Spline3D() {initialized = false;}$/;"	f	class:Spline3D
Spline3D	core/math/Spline3D.h	/^class Spline3D {$/;"	c
SplitUtf16HighChar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool SplitUtf16HighChar(std::ostream& stream, EncodingFn encoding, int ch)$/;"	f	namespace:Test::__anon130
Squat	core/python/pose.py	/^class Squat(Task):$/;"	c
Stand	core/python/behaviors/Distance.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/Movement.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/custom_kick.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/head_tracking.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/keeper_2.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/keeper_3.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/kick.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/pid_distance_angle.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/stamp_in_circles.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/stand.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/walk_to_center.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/walk_to_center_2.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/behaviors/win.py	/^  class Stand(Node):$/;"	c	class:Playing
Stand	core/python/cfgstiff.py	/^Stand = [0] * core.NUM_JOINTS$/;"	v
Stand	core/python/pose.py	/^class Stand(Task):$/;"	c
StandGenerator	core/motion/rswalk2014/StandGenerator.cpp	/^StandGenerator::StandGenerator(std::string path)$/;"	f	class:StandGenerator
StandGenerator	core/motion/rswalk2014/StandGenerator.hpp	/^class StandGenerator : Generator {$/;"	c
StandHeadFree	core/python/cfgstiff.py	/^StandHeadFree = [0] * core.NUM_JOINTS$/;"	v
StandStraight	core/python/pose.py	/^class StandStraight(Task):$/;"	c
StandardColors	build/include/tool/UTOpenGL/Colors.cpp	/^vector<RGB> Colors::StandardColors =  { Blue, Red, Yellow, Green, Indigo, Brown, Cyan, Magenta, Orange, Violet };$/;"	m	class:Colors	file:
StandardColors	build/include/tool/UTOpenGL/Colors.h	/^    static std::vector<RGB> StandardColors, LightColors;$/;"	m	class:Colors
StandardColors	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^vector<RGB> Colors::StandardColors =  { Blue, Red, Yellow, Green, Indigo, Brown, Cyan, Magenta, Orange, Violet };$/;"	m	class:Colors	file:
StandardColors	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static std::vector<RGB> StandardColors, LightColors;$/;"	m	class:Colors
StandardShortcutTag	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool StandardShortcutTag()$/;"	f	namespace:Test::Parser
StartLongKey	lib/yaml-cpp/src/emitterstate.cpp	/^	void EmitterState::StartLongKey()$/;"	f	class:YAML::EmitterState
StartSimpleKey	lib/yaml-cpp/src/emitterstate.cpp	/^	void EmitterState::StartSimpleKey()$/;"	f	class:YAML::EmitterState
StartStream	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::StartStream()$/;"	f	class:YAML::Scanner
State	build/include/tool/StateWindow.h	/^     State,$/;"	e	enum:StateWindow::__anon3
State	core/motion/KickParameters.h	/^  enum State {$/;"	g	class:KickState
State	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^		struct State { enum value { WaitingForSequenceEntry, WaitingForKey, WaitingForValue }; };$/;"	s	class:YAML::EmitFromEvents
State	tools/UTNaoTool/StateWindow.h	/^     State,$/;"	e	enum:StateWindow::__anon141
StateCovarianceMatrix	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> StateCovarianceMatrix;$/;"	t	class:ExtendedKalmanFilter
StateCovarianceMatrix	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> StateCovarianceMatrix;$/;"	t	class:LinearKalmanFilter
StateCovarianceMatrix	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> StateCovarianceMatrix;$/;"	t	class:SRUnscentedKalmanFilter
StateCovarianceMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> StateCovarianceMatrix;$/;"	t	class:UnscentedKalmanFilter
StateCovarianceMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> StateCovarianceMatrix;$/;"	t	class:UnscentedKalmanFilter
StateJacobianFunction	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef boost::function<StateJacobianMatrix(StateVector&, ControlVector&)> StateJacobianFunction;$/;"	t	class:ExtendedKalmanFilter
StateJacobianMatrix	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> StateJacobianMatrix;$/;"	t	class:ExtendedKalmanFilter
StateMachine	core/common/StateMachine.cpp	/^StateMachine::StateMachine() {$/;"	f	class:StateMachine
StateMachine	core/common/StateMachine.cpp	/^StateMachine::StateMachine(std::string name) {$/;"	f	class:StateMachine
StateMachine	core/common/StateMachine.h	/^class StateMachine {$/;"	c
StateMachine	core/python/state_machine.py	/^class StateMachine(Task):$/;"	c
StatePair	core/common/StateMachine.h	/^typedef std::pair<std::string, int> StatePair;$/;"	t
StateTransitionFunction	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef boost::function<StateVector(StateVector&, ControlVector&)> StateTransitionFunction;$/;"	t	class:ExtendedKalmanFilter
StateTransitionFunction	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef boost::function<StateVector(StateVector&, ControlVector&)> StateTransitionFunction;$/;"	t	class:SRUnscentedKalmanFilter
StateTransitionFunction	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef boost::function<StateVector(StateVector&, ControlVector&)> StateTransitionFunction;$/;"	t	class:UnscentedKalmanFilter
StateTransitionFunction	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef boost::function<StateVector(StateVector, ControlVector)> StateTransitionFunction;$/;"	t	class:UnscentedKalmanFilter
StateTransitionMatrix	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> StateTransitionMatrix;$/;"	t	class:ExtendedKalmanFilter
StateTransitionMatrix	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, NumStates> StateTransitionMatrix;$/;"	t	class:LinearKalmanFilter
StateTransitionMatrix	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , SizeParticle> StateTransitionMatrix;$/;"	t	class:MCLParticleFilter
StateTransitionMatrix	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , SizeParticle> StateTransitionMatrix;$/;"	t	class:RMCLParticleFilter
StateVector	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, 1> StateVector;$/;"	t	class:ExtendedKalmanFilter
StateVector	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, 1> StateVector;$/;"	t	class:LinearKalmanFilter
StateVector	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, 1> StateVector;$/;"	t	class:SRUnscentedKalmanFilter
StateVector	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef Eigen::Matrix<double, NumStates, 1> StateVector;$/;"	t	class:UnscentedKalmanFilter
StateVector	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef Eigen::Matrix<double, NumStates, 1> StateVector;$/;"	t	class:UnscentedKalmanFilter
StateWindow	build/include/tool/StateWindow.cpp	/^StateWindow::StateWindow() : QWidget() {$/;"	f	class:StateWindow
StateWindow	build/include/tool/StateWindow.h	/^class StateWindow : public QWidget {$/;"	c
StateWindow	tools/UTNaoTool/StateWindow.cpp	/^StateWindow::StateWindow() : QWidget() {$/;"	f	class:StateWindow
StateWindow	tools/UTNaoTool/StateWindow.h	/^class StateWindow : public QWidget {$/;"	c
StatusCallback	build/include/tool/ProcessExecutor.h	/^    typedef std::function<void(RobotStatus)> StatusCallback;$/;"	t	class:ProcessExecutor
StatusCallback	tools/UTNaoTool/ProcessExecutor.h	/^    typedef std::function<void(RobotStatus)> StatusCallback;$/;"	t	class:ProcessExecutor
Step	core/memory/WalkEngineBlock.h	/^    Step(){$/;"	f	struct:WalkEngineBlock::Step
Step	core/memory/WalkEngineBlock.h	/^  struct Step {$/;"	s	struct:WalkEngineBlock
StepIntoKickState	core/motion/rswalk2014/RSWalkModule2014.h	/^        enum StepIntoKickState {$/;"	g	class:RSWalkModule2014
StkId	lib/lua/src/lobject.h	/^typedef TValue *StkId;  \/* index to stack elements *\/$/;"	t
Str	lib/yaml-cpp/src/exp.cpp	/^		std::string Str(unsigned ch)$/;"	f	namespace:YAML::Exp
Stream	lib/yaml-cpp/src/stream.cpp	/^	Stream::Stream(std::istream& input)$/;"	f	class:YAML::Stream
Stream	lib/yaml-cpp/src/stream.h	/^	class Stream: private noncopyable$/;"	c	namespace:YAML
StreamBuffer	core/memory/StreamBuffer.cpp	/^StreamBuffer::StreamBuffer() : size(0), capacity(0), buffer(NULL) {$/;"	f	class:StreamBuffer
StreamBuffer	core/memory/StreamBuffer.cpp	/^StreamBuffer::StreamBuffer(char* b, unsigned int n) : size(n), capacity(n), buffer((unsigned char*)b) {$/;"	f	class:StreamBuffer
StreamBuffer	core/memory/StreamBuffer.cpp	/^StreamBuffer::StreamBuffer(unsigned char* b, unsigned int n) : size(n), capacity(n), buffer(b) {$/;"	f	class:StreamBuffer
StreamBuffer	core/memory/StreamBuffer.h	/^struct StreamBuffer {$/;"	s
StreamCharSource	lib/yaml-cpp/src/streamcharsource.h	/^		StreamCharSource(const Stream& stream): m_offset(0), m_stream(stream) {}$/;"	f	class:YAML::StreamCharSource
StreamCharSource	lib/yaml-cpp/src/streamcharsource.h	/^		StreamCharSource(const StreamCharSource& source): m_offset(source.m_offset), m_stream(source.m_stream) {}$/;"	f	class:YAML::StreamCharSource
StreamCharSource	lib/yaml-cpp/src/streamcharsource.h	/^	class StreamCharSource$/;"	c	namespace:YAML
StreamInUtf16	lib/yaml-cpp/src/stream.cpp	/^	void Stream::StreamInUtf16() const$/;"	f	class:YAML::Stream
StreamInUtf32	lib/yaml-cpp/src/stream.cpp	/^	void Stream::StreamInUtf32() const$/;"	f	class:YAML::Stream
StreamInUtf8	lib/yaml-cpp/src/stream.cpp	/^	void Stream::StreamInUtf8() const$/;"	f	class:YAML::Stream
StreamLogger	core/memory/Logger.h	/^    StreamLogger() : Logger(true, NULL, false) { }$/;"	f	class:StreamLogger
StreamLogger	core/memory/Logger.h	/^class StreamLogger : public Logger {$/;"	c
StreamingMessage	core/communications/StreamingMessage.h	/^  StreamingMessage() {}$/;"	f	class:StreamingMessage
StreamingMessage	core/communications/StreamingMessage.h	/^class StreamingMessage {$/;"	c
StringCharSource	lib/yaml-cpp/src/stringsource.h	/^		StringCharSource(const char *str, std::size_t size): m_str(str), m_size(size), m_offset(0) {}$/;"	f	class:YAML::StringCharSource
StringCharSource	lib/yaml-cpp/src/stringsource.h	/^	class StringCharSource$/;"	c	namespace:YAML
StringIO	core/python/UTdebug.py	/^  import cProfile, pstats, StringIO$/;"	i
StringMap	lib/yaml-cpp/test/old-api/spectests.cpp	/^		struct StringMap {$/;"	s	namespace:Test::Spec	file:
StripComments	lib/zlib/zlib2ansi	/^sub StripComments$/;"	s
Subtract	build/include/tool/annotations/SelectionMode.h	/^    Subtract$/;"	e	enum:SelectionMode
Subtract	tools/UTNaoTool/annotations/SelectionMode.h	/^    Subtract$/;"	e	enum:SelectionMode
SwitchState	lib/yaml-cpp/src/emitterstate.h	/^		void SwitchState(EMITTER_STATE state) { PopState(); PushState(state); }$/;"	f	class:YAML::EmitterState
Sy_tilde	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  MeasurementCovarianceMatrix Sy_tilde;$/;"	m	class:SRUnscentedKalmanFilter
SynchronizedBlock	core/memory/SynchronizedBlock.h	/^  SynchronizedBlock(Memory *memory, const std::string &name, bool remove_old = false):$/;"	f	class:SynchronizedBlock
SynchronizedBlock	core/memory/SynchronizedBlock.h	/^class SynchronizedBlock {$/;"	c
T	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	typedef FTypeName<U,N> T;$/;"	t	struct:fadbad::Op
T	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float T;                                                \/\/ period of half a walk cycle$/;"	m	class:Walk2014Generator
T	core/motion/rswalk2014/WalkCycle.hpp	/^      float T;$/;"	m	class:WalkCycle
T	core/python/state_machine.py	/^T = TimeEvent$/;"	v
TABLE	lib/zlib/inflate.h	/^        TABLE,      \/* i: waiting for dynamic block table lengths *\/$/;"	e	enum:__anon136
TAB_IN_INDENTATION	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const TAB_IN_INDENTATION     = "illegal tab when looking for indentation";$/;"	m	namespace:YAML::ErrorMsg
TAG	lib/yaml-cpp/src/token.h	/^			TAG,$/;"	e	enum:YAML::Token::TYPE
TAG_DIRECTIVE_ARGS	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const TAG_DIRECTIVE_ARGS     = "TAG directives must have exactly two arguments";$/;"	m	namespace:YAML::ErrorMsg
TAG_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/tag.h	/^#define TAG_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
TAG_WITH_NO_SUFFIX	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const TAG_WITH_NO_SUFFIX     = "tag handle with no suffix";$/;"	m	namespace:YAML::ErrorMsg
TANH_PRESERVES_ZERO_SIGN	build/pythonswig/pyconfig.h	/^#define TANH_PRESERVES_ZERO_SIGN /;"	d
TAR	lib/zlib/Makefile	/^TAR=tar$/;"	m
TARGET	core/memory/BehaviorBlock.h	/^    TARGET,$/;"	e	enum:WalkMode::Mode
TARGET_CLOSE	core/memory/BehaviorBlock.h	/^    TARGET_CLOSE,$/;"	e	enum:WalkMode::Mode
TBLS	lib/zlib/crc32.c	/^#  define TBLS /;"	d	file:
TBOTH	core/motion/rswalk2014/utils/body.hpp	/^      const float TBOTH       = 8.0f; \/\/ use both transmitters$/;"	m	namespace:Sonar::Mode
TEAMCONFIG_WINDOW_H	build/include/tool/TeamConfigWindow.h	/^#define TEAMCONFIG_WINDOW_H$/;"	d
TEAMCONFIG_WINDOW_H	tools/UTNaoTool/TeamConfigWindow.h	/^#define TEAMCONFIG_WINDOW_H$/;"	d
TEAMS	core/common/States.h	/^enum TEAMS {$/;"	g
TEAM_BLACK	core/communications/RoboCupGameControlData.h	/^#define TEAM_BLACK /;"	d
TEAM_BLUE	core/common/States.h	/^ TEAM_BLUE = 0,$/;"	e	enum:TEAMS
TEAM_BROADCAST_IP	core/communications/CommInfo.cpp	/^std::string CommInfo::TEAM_BROADCAST_IP = "";$/;"	m	class:CommInfo	file:
TEAM_BROADCAST_IP	core/communications/CommInfo.h	/^    static std::string TEAM_BROADCAST_IP;$/;"	m	class:CommInfo
TEAM_CONFIG_H	core/common/TeamConfig.h	/^#define TEAM_CONFIG_H$/;"	d
TEAM_CYAN	core/communications/RoboCupGameControlData.h	/^#define TEAM_CYAN /;"	d
TEAM_MAGENTA	core/communications/RoboCupGameControlData.h	/^#define TEAM_MAGENTA /;"	d
TEAM_PACKET_WIDGET_H	build/include/tool/TeamPacketWidget.h	/^#define TEAM_PACKET_WIDGET_H$/;"	d
TEAM_PACKET_WIDGET_H	tools/UTNaoTool/TeamPacketWidget.h	/^#define TEAM_PACKET_WIDGET_H$/;"	d
TEAM_RED	core/common/States.h	/^ TEAM_RED = 1$/;"	e	enum:TEAMS
TEAM_UDP_PORT	core/communications/CommInfo.cpp	/^int CommInfo::TEAM_UDP_PORT = 0;$/;"	m	class:CommInfo	file:
TEAM_UDP_PORT	core/communications/CommInfo.h	/^    static int TEAM_UDP_PORT;$/;"	m	class:CommInfo
TEAM_YELLOW	core/communications/RoboCupGameControlData.h	/^#define TEAM_YELLOW /;"	d
TEST	lib/yaml-cpp/test/spectests.h	/^		TEST(): ok(false) {}$/;"	f	struct:Test::TEST
TEST	lib/yaml-cpp/test/spectests.h	/^		TEST(bool ok_): ok(ok_) {}$/;"	f	struct:Test::TEST
TEST	lib/yaml-cpp/test/spectests.h	/^		TEST(const char *error_): ok(false), error(error_) {}$/;"	f	struct:Test::TEST
TEST	lib/yaml-cpp/test/spectests.h	/^	struct TEST {$/;"	s	namespace:Test
TESTFILE	lib/zlib/example.c	/^#  define TESTFILE /;"	d	file:
TESTING	core/common/States.h	/^  TESTING = 5,$/;"	e	enum:STATES
TESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/test/tests.h	/^#define TESTS_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
TEST_LDFLAGS	lib/zlib/Makefile	/^TEST_LDFLAGS=-L. libz.a$/;"	m
TEST_ODOMETRY	core/common/States.h	/^  TEST_ODOMETRY = 11,$/;"	e	enum:STATES
TEXTLOGGER_	core/memory/TextLogger.h	/^#define TEXTLOGGER_$/;"	d
THEIR_TEAM	build/include/tool/simulation/BehaviorSimulation.cpp	/^#define THEIR_TEAM /;"	d	file:
THEIR_TEAM	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^#define THEIR_TEAM /;"	d	file:
THROUGH_PHASE	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define THROUGH_PHASE /;"	d	file:
THROW	lib/yaml-cpp/src/scanscalar.h	/^	enum ACTION { NONE, BREAK, THROW };$/;"	e	enum:YAML::ACTION
THROW_IN	core/motion/rswalk2014/types/ActionCommand.hpp	/^         THROW_IN,                        \/\/11$/;"	e	enum:ActionCommand::Body::ActionType
TILT_ROLL_H	core/common/TiltRoll.h	/^#define TILT_ROLL_H$/;"	d
TIME	core/python/UTdebug.py	/^TIME = False$/;"	v
TIME	lib/zlib/inflate.h	/^    TIME,       \/* i: waiting for modification time (gzip) *\/$/;"	e	enum:__anon136
TIME_INC	build/include/tool/simulation/PhysicsSimulator.cpp	/^#define TIME_INC /;"	d	file:
TIME_INC	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^#define TIME_INC /;"	d	file:
TIME_TO_HEIGHT	build/include/tool/MotionGLWidget.h	/^#define TIME_TO_HEIGHT /;"	d
TIME_TO_HEIGHT	tools/UTNaoTool/MotionGLWidget.h	/^#define TIME_TO_HEIGHT /;"	d
TIME_WITH_SYS_TIME	build/pythonswig/pyconfig.h	/^#define TIME_WITH_SYS_TIME /;"	d
TK_AND	lib/lua/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	lib/lua/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	lib/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_DO	lib/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	lib/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_ELSE	lib/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	lib/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	lib/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	lib/lua/src/llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED
TK_EQ	lib/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_FALSE	lib/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FOR	lib/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	lib/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	lib/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_IF	lib/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	lib/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_LE	lib/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_LOCAL	lib/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	lib/lua/src/llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED
TK_NE	lib/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_NIL	lib/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	lib/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NUMBER	lib/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_OR	lib/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	lib/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	lib/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_STRING	lib/lua/src/llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED
TK_THEN	lib/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	lib/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	lib/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	lib/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TKey	lib/lua/src/lobject.h	/^typedef union TKey {$/;"	u
TKey	lib/lua/src/lobject.h	/^} TKey;$/;"	t	typeref:union:TKey
TLRL	core/motion/rswalk2014/utils/body.hpp	/^      const float TLRL        = 0.0f; \/\/ transmit left, receive on left$/;"	m	namespace:Sonar::Mode
TLRR	core/motion/rswalk2014/utils/body.hpp	/^      const float TLRR        = 1.0f; \/\/ transmit left, receive on right$/;"	m	namespace:Sonar::Mode
TMS	lib/lua/src/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon99
TM_ADD	lib/lua/src/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon99
TM_CALL	lib/lua/src/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon99
TM_CONCAT	lib/lua/src/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon99
TM_DIV	lib/lua/src/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon99
TM_EQ	lib/lua/src/ltm.h	/^  TM_EQ,  \/* last tag method with `fast' access *\/$/;"	e	enum:__anon99
TM_GC	lib/lua/src/ltm.h	/^  TM_GC,$/;"	e	enum:__anon99
TM_INDEX	lib/lua/src/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon99
TM_LE	lib/lua/src/ltm.h	/^  TM_LE,$/;"	e	enum:__anon99
TM_LEN	lib/lua/src/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon99
TM_LT	lib/lua/src/ltm.h	/^  TM_LT,$/;"	e	enum:__anon99
TM_MOD	lib/lua/src/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon99
TM_MODE	lib/lua/src/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon99
TM_MUL	lib/lua/src/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon99
TM_N	lib/lua/src/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon99
TM_NEWINDEX	lib/lua/src/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon99
TM_POW	lib/lua/src/ltm.h	/^  TM_POW,$/;"	e	enum:__anon99
TM_SUB	lib/lua/src/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon99
TM_UNM	lib/lua/src/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon99
TODO	tools/behaviorSim/cma.py	/^                        import pygsl.eigen.eigenvectors  # TODO efficient enough?$/;"	i
TOKEN_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/src/token.h	/^#define TOKEN_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
TOKEN_LEN	lib/lua/src/llex.h	/^#define TOKEN_LEN	/;"	d
TOOL_COLORS_H	build/include/tool/UTOpenGL/Colors.h	/^#define TOOL_COLORS_H$/;"	d
TOOL_COLORS_H	tools/UTNaoTool/UTOpenGL/Colors.h	/^#define TOOL_COLORS_H$/;"	d
TOOL_CONFIG_H	build/include/tool/ToolConfig.h	/^#define TOOL_CONFIG_H$/;"	d
TOOL_CONFIG_H	tools/UTNaoTool/ToolConfig.h	/^#define TOOL_CONFIG_H$/;"	d
TOOL_LISTEN_IP	core/communications/CommInfo.cpp	/^const char* CommInfo::TOOL_LISTEN_IP = "127.0.0.1";$/;"	m	class:CommInfo	file:
TOOL_LISTEN_IP	core/communications/CommInfo.h	/^    static const char* TOOL_LISTEN_IP;$/;"	m	class:CommInfo
TOOL_MEM	core/memory/MemoryBlock.h	/^    TOOL_MEM, \/\/ no blocks are currently owned by the tool, but for the memory itself?$/;"	e	enum:MemoryOwner::Owner
TOOL_PACKET_H	core/common/ToolPacket.h	/^#define TOOL_PACKET_H$/;"	d
TOOL_TCP_PORT	core/communications/CommInfo.cpp	/^const int CommInfo::TOOL_TCP_PORT = 53666;$/;"	m	class:CommInfo	file:
TOOL_TCP_PORT	core/communications/CommInfo.h	/^    static const int TOOL_TCP_PORT;$/;"	m	class:CommInfo
TOOL_UDP_PORT	core/communications/CommInfo.cpp	/^const int CommInfo::TOOL_UDP_PORT = 78790;$/;"	m	class:CommInfo	file:
TOOL_UDP_PORT	core/communications/CommInfo.h	/^    static const int TOOL_UDP_PORT;$/;"	m	class:CommInfo
TOO_FAR	lib/zlib/deflate.c	/^#  define TOO_FAR /;"	d	file:
TOP	core/common/RobotInfo.h	/^    TOP = 0,$/;"	e	enum:Camera::Type
TOP	lib/lua/etc/Makefile	/^TOP= ..$/;"	m
TOP_CAM	core/common/States.h	/^  TOP_CAM = 10,$/;"	e	enum:STATES
TOP_CAMERA	core/motion/rswalk2014/perception/vision/WhichCamera.hpp	/^   TOP_CAMERA         =  0,$/;"	e	enum:__anon14
TOP_CAMERA_H	core/imageCapture/TopCamera.h	/^#define TOP_CAMERA_H$/;"	d
TOP_IMAGE_COLS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define TOP_IMAGE_COLS /;"	d
TOP_IMAGE_ROWS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define TOP_IMAGE_ROWS /;"	d
TOP_PIXEL_SIZE	core/motion/rswalk2014/perception/vision/CameraDefs.hpp	/^#define TOP_PIXEL_SIZE /;"	d
TOP_SALIENCY_COLS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define TOP_SALIENCY_COLS /;"	d
TOP_SALIENCY_DENSITY	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define TOP_SALIENCY_DENSITY /;"	d
TOP_SALIENCY_ROWS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^#define TOP_SALIENCY_ROWS /;"	d
TORGB	core/common/ColorSpaces.h	/^inline RGB TORGB(int r, int g, int b) {$/;"	f
TO_BIN	lib/lua/Makefile	/^TO_BIN= lua luac$/;"	m
TO_INC	lib/lua/Makefile	/^TO_INC= lua.h luaconf.h lualib.h lauxlib.h ..\/etc\/lua.hpp$/;"	m
TO_LIB	lib/lua/Makefile	/^TO_LIB= liblua.a$/;"	m
TO_MAN	lib/lua/Makefile	/^TO_MAN= lua.1 luac.1$/;"	m
TRACE	core/python/UTdebug.py	/^TRACE = True$/;"	v
TRAITS_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/traits.h	/^#define TRAITS_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
TRANSFORMED_IMAGE	build/include/tool/VisionWindow.h	/^#define TRANSFORMED_IMAGE /;"	d
TRANSFORMED_IMAGE	tools/UTNaoTool/VisionWindow.h	/^#define TRANSFORMED_IMAGE /;"	d
TRANSITION	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^#define TRANSITION(/;"	d	file:
TRANSITION	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^#define TRANSITION(/;"	d	file:
TRANSMIT_BOTH	core/sonar/SonarModule.h	/^    TRANSMIT_BOTH = 8,$/;"	e	enum:Sonar::Command
TRRL	core/motion/rswalk2014/utils/body.hpp	/^      const float TRRL        = 2.0f; \/\/ transmit right, receive on left$/;"	m	namespace:Sonar::Mode
TRRR	core/motion/rswalk2014/utils/body.hpp	/^      const float TRRR        = 3.0f; \/\/ transmit right, receive on right$/;"	m	namespace:Sonar::Mode
TRY_FREE	lib/zlib/zutil.h	/^#define TRY_FREE(/;"	d
TST	lib/lua/etc/Makefile	/^TST= $(TOP)\/test$/;"	m
TString	lib/lua/src/lobject.h	/^typedef union TString {$/;"	u
TString	lib/lua/src/lobject.h	/^} TString;$/;"	t	typeref:union:TString
TTypeName	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define TTypeName /;"	d
TURN	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^            INIT, TURN, FORWARD, END$/;"	e	enum:WalkEnginePreProcessor::DribbleEngine::DribbleState
TURN_EPSILON	core/motion/rswalk2014/Walk2014Generator.cpp	/^#define TURN_EPSILON /;"	d	file:
TValue	lib/lua/src/lobject.h	/^} TValue;$/;"	t	typeref:struct:lua_TValue
TValuefields	lib/lua/src/lobject.h	/^    TValuefields;$/;"	m	struct:TKey::__anon92
TValuefields	lib/lua/src/lobject.h	/^  TValuefields;$/;"	m	struct:lua_TValue
TValuefields	lib/lua/src/lobject.h	/^#define TValuefields	/;"	d
TWOPI	core/math/Geometry.h	/^#define TWOPI /;"	d
TYPE	lib/yaml-cpp/src/tag.h	/^		enum TYPE {$/;"	g	struct:YAML::Tag
TYPE	lib/yaml-cpp/src/token.h	/^		enum TYPE {$/;"	g	struct:YAML::Token
TYPE	lib/zlib/inflate.h	/^        TYPE,       \/* i: waiting for type bits, including last-flag bit *\/$/;"	e	enum:__anon136
TYPEDO	lib/zlib/inflate.h	/^        TYPEDO,     \/* i: same, but skip check to exit inflate on new block *\/$/;"	e	enum:__anon136
T_INT_OFFSET	core/common/WorldObject.h	/^const int T_INT_OFFSET = WO_OPP_PEN_LEFT_T;$/;"	v
Tab	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Tab() {$/;"	f	namespace:YAML::Exp
Table	lib/lua/src/lobject.h	/^typedef struct Table {$/;"	s
Table	lib/lua/src/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
TabsAndSpaces	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST TabsAndSpaces()$/;"	f	namespace:Test::Spec
Tag	lib/yaml-cpp/include/yaml-cpp/node.h	/^		const std::string& Tag() const { return m_tag; }$/;"	f	class:YAML::Node
Tag	lib/yaml-cpp/src/exp.h	/^		const char Tag = '!';$/;"	m	namespace:YAML::Keys
Tag	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Tag() {$/;"	f	namespace:YAML::Exp
Tag	lib/yaml-cpp/src/tag.cpp	/^	Tag::Tag(const Token& token): type(static_cast<TYPE>(token.data))$/;"	f	class:YAML::Tag
Tag	lib/yaml-cpp/src/tag.h	/^	struct Tag {$/;"	s	namespace:YAML
TagByKind	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		TagByKind,$/;"	e	enum:YAML::EMITTER_MANIP
TagDirective	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST TagDirective()$/;"	f	namespace:Test::Spec
TagHandles	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST TagHandles()$/;"	f	namespace:Test::Spec
TagMismatch	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			TagMismatch(const std::string& actualTag, const std::string& expectedTag) {$/;"	f	struct:Test::Parser::TagMismatch
TagMismatch	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		struct TagMismatch: public std::exception {$/;"	s	namespace:Test::Parser	file:
TagShorthands	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST TagShorthands()$/;"	f	namespace:Test::Spec
Task	build/include/tool/ProcessExecutor.h	/^    typedef std::function<void()> Task;$/;"	t	class:ProcessExecutor
Task	core/python/behaviors/Distance.py	/^from task import Task$/;"	i
Task	core/python/behaviors/Movement.py	/^from task import Task$/;"	i
Task	core/python/behaviors/custom_kick.py	/^from task import Task$/;"	i
Task	core/python/behaviors/head_tracking.py	/^from task import Task$/;"	i
Task	core/python/behaviors/keeper.py	/^from task import Task$/;"	i
Task	core/python/behaviors/keeper_2.py	/^from task import Task$/;"	i
Task	core/python/behaviors/keeper_3.py	/^from task import Task$/;"	i
Task	core/python/behaviors/kick.py	/^from task import Task$/;"	i
Task	core/python/behaviors/main.py	/^from task import Task$/;"	i
Task	core/python/behaviors/pid_distance_angle.py	/^from task import Task$/;"	i
Task	core/python/behaviors/sample.py	/^from task import Task$/;"	i
Task	core/python/behaviors/stamp_in_circles.py	/^from task import Task$/;"	i
Task	core/python/behaviors/stand.py	/^from task import Task$/;"	i
Task	core/python/behaviors/walk_to_center.py	/^from task import Task$/;"	i
Task	core/python/behaviors/walk_to_center_2.py	/^from task import Task$/;"	i
Task	core/python/behaviors/win.py	/^from task import Task$/;"	i
Task	core/python/head.py	/^from task import Task$/;"	i
Task	core/python/pose.py	/^from task import Task, MultiTask$/;"	i
Task	core/python/primary_bvr.py	/^from task import Task$/;"	i
Task	core/python/state_machine.py	/^from task import Task, BaseTask$/;"	i
Task	core/python/task.py	/^class Task(BaseTask):$/;"	c
Task	tools/UTNaoTool/ProcessExecutor.h	/^    typedef std::function<void()> Task;$/;"	t	class:ProcessExecutor
TaskNode	core/python/state_machine.py	/^class TaskNode(Node):$/;"	c
TeamConfig	core/common/TeamConfig.cpp	/^TeamConfig::TeamConfig() {$/;"	f	class:TeamConfig
TeamConfig	core/common/TeamConfig.h	/^class TeamConfig : public YamlConfig {$/;"	c
TeamConfigWindow	build/include/tool/TeamConfigWindow.cpp	/^TeamConfigWindow::TeamConfigWindow(QMainWindow* p) {$/;"	f	class:TeamConfigWindow
TeamConfigWindow	build/include/tool/TeamConfigWindow.h	/^class TeamConfigWindow : public QMainWindow, public Ui_TeamConfigWindow {$/;"	c
TeamConfigWindow	tools/UTNaoTool/TeamConfigWindow.cpp	/^TeamConfigWindow::TeamConfigWindow(QMainWindow* p) {$/;"	f	class:TeamConfigWindow
TeamConfigWindow	tools/UTNaoTool/TeamConfigWindow.h	/^class TeamConfigWindow : public QMainWindow, public Ui_TeamConfigWindow {$/;"	c
TeamInfo	core/communications/RoboCupGameControlData.h	/^struct TeamInfo$/;"	s
TeamPacket	core/common/TeamPacket.h	/^struct TeamPacket {$/;"	s
TeamPacketWidget	build/include/tool/TeamPacketWidget.cpp	/^TeamPacketWidget::TeamPacketWidget(QWidget* parent) : QWidget(parent) {$/;"	f	class:TeamPacketWidget
TeamPacketWidget	build/include/tool/TeamPacketWidget.h	/^class TeamPacketWidget : public QWidget, public Ui_TeamPacketWidget {$/;"	c
TeamPacketWidget	tools/UTNaoTool/TeamPacketWidget.cpp	/^TeamPacketWidget::TeamPacketWidget(QWidget* parent) : QWidget(parent) {$/;"	f	class:TeamPacketWidget
TeamPacketWidget	tools/UTNaoTool/TeamPacketWidget.h	/^class TeamPacketWidget : public QWidget, public Ui_TeamPacketWidget {$/;"	c
TeamPacketsBlock	core/memory/TeamPacketsBlock.h	/^    TeamPacketsBlock() {$/;"	f	struct:TeamPacketsBlock
TeamPacketsBlock	core/memory/TeamPacketsBlock.h	/^struct TeamPacketsBlock : public MemoryBlock {$/;"	s
TeammateWhistleFrame	build/include/tool/StateWindow.h	/^     TeammateWhistleFrame,$/;"	e	enum:StateWindow::__anon3
TeammateWhistleFrame	tools/UTNaoTool/StateWindow.h	/^     TeammateWhistleFrame,$/;"	e	enum:StateWindow::__anon141
Test	lib/yaml-cpp/test/emittertests.cpp	/^namespace Test$/;"	n	file:
Test	lib/yaml-cpp/test/emittertests.h	/^namespace Test {$/;"	n
Test	lib/yaml-cpp/test/nodetests.h	/^namespace Test {$/;"	n
Test	lib/yaml-cpp/test/old-api/parsertests.cpp	/^namespace Test$/;"	n	file:
Test	lib/yaml-cpp/test/old-api/spectests.cpp	/^namespace Test {$/;"	n	file:
Test	lib/yaml-cpp/test/parsertests.h	/^namespace Test {$/;"	n
Test	lib/yaml-cpp/test/specexamples.h	/^namespace Test {$/;"	n
Test	lib/yaml-cpp/test/spectests.cpp	/^namespace Test$/;"	n	file:
Test	lib/yaml-cpp/test/spectests.h	/^namespace Test {$/;"	n
Test	lib/yaml-cpp/test/tests.cpp	/^namespace Test$/;"	n	file:
Test	lib/yaml-cpp/test/tests.h	/^namespace Test {$/;"	n
TestType	kalman_filters/src/ekf_test.cpp	/^enum TestType$/;"	g	file:
TextLogger	core/memory/TextLogger.cpp	/^TextLogger::TextLogger(const char *filename, bool appendUniqueId) : frameInfo(NULL) {$/;"	f	class:TextLogger
TextLogger	core/memory/TextLogger.h	/^class TextLogger {$/;"	c
TheirScore	build/include/tool/StateWindow.h	/^     TheirScore,$/;"	e	enum:StateWindow::__anon3
TheirScore	tools/UTNaoTool/StateWindow.h	/^     TheirScore,$/;"	e	enum:StateWindow::__anon141
ThetaRatio	particle_filters/RMCL_particle_filter.hpp	/^#define ThetaRatio /;"	d
ThighLength	core/motion/rswalk2014/utils/body.hpp	/^   const float ThighLength = 100.00;$/;"	m	namespace:Limbs
Think	interfaces/sim_spark/RobotBehavior.cpp	/^string RobotBehavior::Think(const std::string& message) {$/;"	f	class:RobotBehavior
Thread	core/motion/rswalk2014/thread/Thread.hpp	/^class Thread {$/;"	c
ThreadedUDPSocket	core/communications/ThreadedUDPSocket.cpp	/^ThreadedUDPSocket::ThreadedUDPSocket() {$/;"	f	class:ThreadedUDPSocket
ThreadedUDPSocket	core/communications/ThreadedUDPSocket.h	/^class ThreadedUDPSocket {$/;"	c
ThrowParserException	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::ThrowParserException(const std::string& msg) const$/;"	f	class:YAML::Scanner
TibiaLength	core/motion/rswalk2014/utils/body.hpp	/^   const float TibiaLength = 102.90;$/;"	m	namespace:Limbs
TiltRoll	core/common/TiltRoll.h	/^struct TiltRoll {$/;"	s
Time	build/include/tool/StateWindow.h	/^     Time,$/;"	e	enum:StateWindow::__anon3
Time	tools/UTNaoTool/StateWindow.h	/^     Time,$/;"	e	enum:StateWindow::__anon141
TimeEvent	core/python/state_machine.py	/^class TimeEvent(Event):$/;"	c
TimeIt	tools/behaviorSim/cma.py	/^class TimeIt(object):$/;"	c
TimeList	core/common/Profiling.h	/^struct TimeList {$/;"	s
Timer	core/common/Profiling.cpp	/^Timer::Timer() : id_(0), pauseId_(0), elapsed_(0), paused_(0), interval_(1), iterations_(0) { }$/;"	f	class:Timer
Timer	core/common/Profiling.cpp	/^Timer::Timer(std::string message, int interval) : Timer() { $/;"	f	class:Timer
Timer	core/common/Profiling.h	/^class Timer {$/;"	c
Timer	core/motion/rswalk2014/utils/Timer.hpp	/^      Timer() {$/;"	f	class:Timer
Timer	core/motion/rswalk2014/utils/Timer.hpp	/^class Timer {$/;"	c
Timer	core/python/UTdebug.py	/^class Timer(object):$/;"	c
Timer	core/python/util.py	/^class Timer(object):$/;"	c
ToLower	lib/yaml-cpp/src/conversion.cpp	/^	char ToLower(char ch) { return IsUpper(ch) ? ch + 'a' - 'A' : ch; }$/;"	f	namespace:__anon125
ToPose	core/python/pose.py	/^class ToPose(Task):$/;"	c
ToPoseMoveHead	core/python/pose.py	/^class ToPoseMoveHead(MultiTask):$/;"	c
ToPoseTimes	core/python/pose.py	/^  def ToPoseTimes(poses, times):$/;"	m	class:PoseSequence
ToPoseTimes	core/python/pose.py	/^  def ToPoseTimes(poses, times):$/;"	m	class:ToPose
ToString	lib/yaml-cpp/src/emitfromevents.cpp	/^	std::string ToString(YAML::anchor_t anchor) {$/;"	f	namespace:__anon126
Token	lib/lua/src/llex.h	/^typedef struct Token {$/;"	s
Token	lib/lua/src/llex.h	/^} Token;$/;"	t	typeref:struct:Token
Token	lib/yaml-cpp/src/token.h	/^		Token(TYPE type_, const Mark& mark_): status(VALID), type(type_), mark(mark_), data(0) {}$/;"	f	struct:YAML::Token
Token	lib/yaml-cpp/src/token.h	/^	struct Token {$/;"	s	namespace:YAML
TokenNames	lib/yaml-cpp/src/token.h	/^	const std::string TokenNames[] = {$/;"	m	namespace:YAML
ToolConfig	build/include/tool/ToolConfig.cpp	/^ToolConfig::ToolConfig() {$/;"	f	class:ToolConfig
ToolConfig	build/include/tool/ToolConfig.h	/^class ToolConfig : public YamlConfig {$/;"	c
ToolConfig	tools/UTNaoTool/ToolConfig.cpp	/^ToolConfig::ToolConfig() {$/;"	f	class:ToolConfig
ToolConfig	tools/UTNaoTool/ToolConfig.h	/^class ToolConfig : public YamlConfig {$/;"	c
ToolPacket	core/common/ToolPacket.cpp	/^ToolPacket::ToolPacket() : ToolPacket(None) { }$/;"	f	class:ToolPacket
ToolPacket	core/common/ToolPacket.cpp	/^ToolPacket::ToolPacket(MessageType message) : message(message) {$/;"	f	class:ToolPacket
ToolPacket	core/common/ToolPacket.cpp	/^ToolPacket::ToolPacket(MessageType message, std::string s) : message(message) {$/;"	f	class:ToolPacket
ToolPacket	core/common/ToolPacket.h	/^struct ToolPacket {$/;"	s
ToolProcess	build/include/tool/ProcessExecutor.cpp	/^ToolProcess::ToolProcess() : process(NULL) { }$/;"	f	class:ToolProcess
ToolProcess	build/include/tool/ProcessExecutor.h	/^struct ToolProcess {$/;"	s
ToolProcess	tools/UTNaoTool/ProcessExecutor.cpp	/^ToolProcess::ToolProcess() : process(NULL) { }$/;"	f	class:ToolProcess
ToolProcess	tools/UTNaoTool/ProcessExecutor.h	/^struct ToolProcess {$/;"	s
Top	lib/yaml-cpp/src/nodebuilder.cpp	/^	Node& NodeBuilder::Top()$/;"	f	class:YAML::NodeBuilder
TopCamera	core/imageCapture/TopCamera.cpp	/^TopCamera::TopCamera(const ImageParams& iparams, CameraParams& p, CameraParams& rp) : NaoCamera(iparams, p,rp) {$/;"	f	class:TopCamera
TopCamera	core/imageCapture/TopCamera.h	/^class TopCamera : public NaoCamera {$/;"	c
TorsoCoM	core/motion/rswalk2014/utils/body.hpp	/^   const float TorsoCoM[] = {-4.13, 0.09, 43.42, 1};$/;"	m	namespace:Limbs
TorsoMass	core/motion/rswalk2014/utils/body.hpp	/^   const float TorsoMass = 1.04956;$/;"	m	namespace:Limbs
TorsoMatrix	core/kinematics/TorsoMatrix.h	/^  TorsoMatrix() : isValid(false) {}$/;"	f	class:TorsoMatrix
TorsoMatrix	core/kinematics/TorsoMatrix.h	/^class TorsoMatrix : public Pose3D$/;"	c
TorsoMatrixPrev	core/kinematics/TorsoMatrix.h	/^class TorsoMatrixPrev : public TorsoMatrix {};$/;"	c
TorsoMatrix_H	core/kinematics/TorsoMatrix.h	/^#define TorsoMatrix_H$/;"	d
Trace	lib/zlib/zutil.h	/^#  define Trace(/;"	d
Tracec	lib/zlib/zutil.h	/^#  define Tracec(/;"	d
Tracecv	lib/zlib/zutil.h	/^#  define Tracecv(/;"	d
Tracev	lib/zlib/zutil.h	/^#  define Tracev(/;"	d
Tracevv	lib/zlib/zutil.h	/^#  define Tracevv(/;"	d
TrackGoal	core/python/behaviors/Distance.py	/^  class TrackGoal(Node):$/;"	c	class:Playing
TrackGoal	core/python/behaviors/head_tracking.py	/^  class TrackGoal(Node):$/;"	c	class:Playing
TrackGoal	core/python/behaviors/pid_distance_angle.py	/^  class TrackGoal(Node):$/;"	c	class:Playing
TranPointsArray	core/vision/structures/FieldLine.h	/^  LinePoint** TranPointsArray;$/;"	m	struct:FieldLine
Translate	lib/yaml-cpp/src/tag.cpp	/^	const std::string Tag::Translate(const Directives& directives)$/;"	f	class:YAML::Tag
TranslateTagHandle	lib/yaml-cpp/src/directives.cpp	/^	const std::string Directives::TranslateTagHandle(const std::string& handle) const$/;"	f	class:YAML::Directives
TrueFalseBool	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		TrueFalseBool,  \/\/ true, false$/;"	e	enum:YAML::EMITTER_MANIP
TurnInPlace	core/python/behaviors/Movement.py	/^  class TurnInPlace(Node):$/;"	c	class:Playing
TurnInPlace	core/python/behaviors/stamp_in_circles.py	/^  class TurnInPlace(Node):$/;"	c	class:Playing
TwoDocumentsInAStream	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST TwoDocumentsInAStream()$/;"	f	namespace:Test::Spec
TwoParamLine	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^typedef struct twoParamLine TwoParamLine;$/;"	t	typeref:struct:twoParamLine
Type	build/include/tool/simulation/LocalizationSimulation.h	/^  enum Type {$/;"	g	struct:LocSimAgent
Type	core/VisionCore.h	/^    enum Type {$/;"	g	class:LocalizationMethod
Type	core/common/RobotInfo.h	/^  enum Type {$/;"	g	class:Camera
Type	core/memory/KickRequestBlock.h	/^  enum Type {$/;"	g	class:Kick
Type	core/motion/rswalk2014/types/PostInfo.hpp	/^   enum Type$/;"	g	struct:PostInfo
Type	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		struct Type { enum value { Verbatim, PrimaryHandle, NamedHandle }; };$/;"	s	struct:YAML::_Tag
Type	lib/yaml-cpp/include/yaml-cpp/node.h	/^		NodeType::value Type() const { return m_type; }$/;"	f	class:YAML::Node
Type	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  enum Type {$/;"	g	struct:LocSimAgent
TypeName	core/motion/rswalk2014/types/PostInfo.cpp	/^const char *const PostInfo::TypeName[] =$/;"	m	class:PostInfo	file:
TypeName	core/motion/rswalk2014/types/PostInfo.hpp	/^   static const char *const TypeName[];$/;"	m	struct:PostInfo
TypedKeyNotFound	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		TypedKeyNotFound(const Mark& mark_, const T& key_)$/;"	f	class:YAML::TypedKeyNotFound
TypedKeyNotFound	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^	class TypedKeyNotFound: public KeyNotFound {$/;"	c	namespace:YAML
U	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  KalmanMatrix U;$/;"	m	class:SRUnscentedKalmanFilter
UDPWRAPPER_AQS3G85P	core/communications/UDPWrapper.h	/^#define UDPWRAPPER_AQS3G85P$/;"	d
UDPWrapper	core/communications/UDPWrapper.cpp	/^UDPWrapper::UDPWrapper (unsigned short port, bool broadcast, std::string dest_ip, Direction direction):$/;"	f	class:UDPWrapper
UDPWrapper	core/communications/UDPWrapper.h	/^class UDPWrapper {$/;"	c
UKF4	core/opponents/UKF4.cpp	/^UKF4::UKF4()$/;"	f	class:UKF4
UKF4	core/opponents/UKF4.h	/^class UKF4 {$/;"	c
UKF4_OFF	core/opponents/UKF4.h	/^  UKF4_OFF  \/\/ return because this is turned off by params$/;"	e	enum:ukf4UpdateResult
UKF4_OK	core/opponents/UKF4.h	/^  UKF4_OK,$/;"	e	enum:ukf4UpdateResult
UKF4_OUTLIER	core/opponents/UKF4.h	/^  UKF4_OUTLIER,$/;"	e	enum:ukf4UpdateResult
UNALIGNED_OK	lib/zlib/zconf.h	/^#  define UNALIGNED_OK$/;"	d
UNARY_PRIORITY	lib/lua/src/lparser.c	/^#define UNARY_PRIORITY	/;"	d	file:
UNDEFINED	core/common/Roles.h	/^  UNDEFINED = 0,$/;"	e	enum:Role
UNDEFINED	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    UNDEFINED,$/;"	e	enum:color_classifier::Color
UNDEFINED_STATE	core/common/States.h	/^  UNDEFINED_STATE = 0,$/;"	e	enum:STATES
UNEXPECTED_END_MAP	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const UNEXPECTED_END_MAP     = "unexpected end map token";$/;"	m	namespace:YAML::ErrorMsg
UNEXPECTED_END_SEQ	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const UNEXPECTED_END_SEQ     = "unexpected end sequence token";$/;"	m	namespace:YAML::ErrorMsg
UNEXPECTED_KEY_TOKEN	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const UNEXPECTED_KEY_TOKEN   = "unexpected key token";$/;"	m	namespace:YAML::ErrorMsg
UNEXPECTED_VALUE_TOKEN	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const UNEXPECTED_VALUE_TOKEN = "unexpected value token";$/;"	m	namespace:YAML::ErrorMsg
UNKNOWN	core/memory/MemoryBlock.h	/^    UNKNOWN, \/\/ means it didn't get set = BAD$/;"	e	enum:MemoryOwner::Owner
UNKNOWN	core/memory/OdometryBlock.h	/^    UNKNOWN,$/;"	e	enum:Fall::FallDir
UNKNOWN	core/memory/OdometryBlock.h	/^    UNKNOWN,$/;"	e	enum:Getup::GetupType
UNKNOWN	lib/yaml-cpp/src/scanner.h	/^			enum STATUS { VALID, INVALID, UNKNOWN };$/;"	e	enum:YAML::Scanner::IndentMarker::STATUS
UNKNOWN_ANCHOR	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const UNKNOWN_ANCHOR         = "the referenced anchor is not defined";$/;"	m	namespace:YAML::ErrorMsg
UNKNOWN_COORD	core/motion/rswalk2014/utils/SPLDefs.hpp	/^#define UNKNOWN_COORD /;"	d
UNKNOWN_HEADING	core/motion/rswalk2014/utils/SPLDefs.hpp	/^#define UNKNOWN_HEADING /;"	d
UNKNOWN_TOKEN	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const UNKNOWN_TOKEN          = "unknown token";$/;"	m	namespace:YAML::ErrorMsg
UNMATCHED_GROUP_TAG	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const UNMATCHED_GROUP_TAG    = "unmatched group tag";$/;"	m	namespace:YAML::ErrorMsg
UNSCENTED_KALMAN_FILTER_H	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^#define UNSCENTED_KALMAN_FILTER_H$/;"	d
UNSCENTED_KALMAN_FILTER_H	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^#define UNSCENTED_KALMAN_FILTER_H$/;"	d
UNUSED	lib/lua/src/llimits.h	/^#define UNUSED(/;"	d
UNVERIFIED	lib/yaml-cpp/src/token.h	/^		enum STATUS { VALID, INVALID, UNVERIFIED };$/;"	e	enum:YAML::Token::STATUS
UPDATE	lib/zlib/inflate.c	/^#  define UPDATE(/;"	d	file:
UPDATE_HASH	lib/zlib/deflate.c	/^#define UPDATE_HASH(/;"	d	file:
URI	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& URI() {$/;"	f	namespace:YAML::Exp
URLScalar	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		void URLScalar(std::string& inputScalar, std::string& desiredOutput)$/;"	f	namespace:Test::Parser
US	core/motion/rswalk2014/utils/body.hpp	/^      US, \/\/27$/;"	e	enum:RSSensors::SensorCodesEnum
USER_ASSERT	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define USER_ASSERT(/;"	d
USER_HOME	install/setup_robot	/^USER_HOME = "\/home\/%s" % os.environ["USER"]$/;"	v
USE_AL_MOTION	core/common/InterfaceInfo.cpp	/^const bool USE_AL_MOTION = false;$/;"	v
UTCoachMessage	core/communications/PacketConverter.h	/^typedef CoachPacket UTCoachMessage;$/;"	t
UTEllipse	build/include/tool/ImageWidget.h	/^#define UTEllipse /;"	d
UTEllipse	tools/UTNaoTool/ImageWidget.h	/^#define UTEllipse /;"	d
UTILS_H	core/vision/utils.h	/^#define UTILS_H$/;"	d
UTMAINWND_H	build/include/tool/UTMainWnd.h	/^#define UTMAINWND_H$/;"	d
UTMAINWND_H	tools/UTNaoTool/UTMainWnd.h	/^#define UTMAINWND_H$/;"	d
UTMainWnd	build/include/tool/UTMainWnd.cpp	/^UTMainWnd::UTMainWnd(const char *directory, bool core):$/;"	f	class:UTMainWnd
UTMainWnd	build/include/tool/UTMainWnd.h	/^class UTMainWnd : public QMainWindow, public Ui_UTNaoTool {$/;"	c
UTMainWnd	tools/UTNaoTool/UTMainWnd.cpp	/^UTMainWnd::UTMainWnd(const char *directory, bool core):$/;"	f	class:UTMainWnd
UTMainWnd	tools/UTNaoTool/UTMainWnd.h	/^class UTMainWnd : public QMainWindow, public Ui_UTNaoTool {$/;"	c
UTPolygon	build/include/tool/ImageWidget.h	/^#define UTPolygon /;"	d
UTPolygon	tools/UTNaoTool/ImageWidget.h	/^#define UTPolygon /;"	d
UTRectangle	build/include/tool/ImageWidget.h	/^#define UTRectangle /;"	d
UTRectangle	tools/UTNaoTool/ImageWidget.h	/^#define UTRectangle /;"	d
UTStandardMessage	core/communications/PacketConverter.h	/^typedef TeamPacket UTStandardMessage;$/;"	t
UTdebug	core/python/cfgpose.py	/^import UTdebug$/;"	i
UTdebug	core/python/cfgwalk.py	/^import UTdebug$/;"	i
UTdebug	core/python/commands.py	/^import UTdebug$/;"	i
UTdebug	core/python/init.py	/^import UTdebug$/;"	i
UTdebug	core/python/state_machine.py	/^import util, UTdebug$/;"	i
UTdebug	core/python/task.py	/^import util, UTdebug, core$/;"	i
UTdebug	core/python/util.py	/^import UTdebug$/;"	i
Udata	lib/lua/src/lobject.h	/^typedef union Udata {$/;"	u
Udata	lib/lua/src/lobject.h	/^} Udata;$/;"	t	typeref:union:Udata
UnOpr	lib/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	lib/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
Underlying	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	typedef FTypeName<U,N> Underlying;$/;"	t	struct:fadbad::Op
UnderlyingType	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	typedef T UnderlyingType;$/;"	t	class:fadbad::FTypeName
UnexpectedKey	lib/yaml-cpp/test/emittertests.cpp	/^		void UnexpectedKey(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
UnexpectedValue	lib/yaml-cpp/test/emittertests.cpp	/^		void UnexpectedValue(YAML::Emitter& out, std::string& desiredError)$/;"	f	namespace:Test::Emitter
Unicode	lib/yaml-cpp/test/emittertests.cpp	/^		void Unicode(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Union	core/vision/Union_find.cpp	/^void MergeBlob :: Union(int i , int j)$/;"	f	class:MergeBlob
Union_process	core/vision/Union_find.cpp	/^void MergeBlob :: Union_process()$/;"	f	class:MergeBlob
Unknown	core/math/MVTools.h	/^    Unknown,$/;"	e	enum:MVException::ExceptionType
UnorderedSets	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST UnorderedSets()$/;"	f	namespace:Test::Spec
UnscentedKalmanFilter	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  UnscentedKalmanFilter(StateTransitionFunction g_function, MeasurementFunction h_function, StateCovarianceMatrix R_matrix, MeasurementCovarianceMatrix Q_matrix, double alpha = 1.0e-3, double kappa = 0.0, double beta = 2.0)$/;"	f	class:UnscentedKalmanFilter
UnscentedKalmanFilter	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^class UnscentedKalmanFilter$/;"	c
UnscentedKalmanFilter	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  UnscentedKalmanFilter(StateTransitionFunction g_function, MeasurementFunction h_function, StateCovarianceMatrix R_matrix, MeasurementCovarianceMatrix Q_matrix, double alpha = 1.0e-3, double kappa = 0.0, double beta = 2.0)$/;"	f	class:UnscentedKalmanFilter
UnscentedKalmanFilter	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^class UnscentedKalmanFilter$/;"	c
UnsetSeparation	lib/yaml-cpp/src/emitterstate.h	/^		void UnsetSeparation() { m_requiresSoftSeparation = false; m_requiresHardSeparation = false; }$/;"	f	class:YAML::EmitterState
UpVal	lib/lua/src/lobject.h	/^typedef struct UpVal {$/;"	s
UpVal	lib/lua/src/lobject.h	/^} UpVal;$/;"	t	typeref:struct:UpVal
UpperArmLength	core/motion/rswalk2014/utils/body.hpp	/^   const float UpperArmLength = 105.00;$/;"	m	namespace:Limbs
UpperCase	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		UpperCase,  \/\/ TRUE, N$/;"	e	enum:YAML::EMITTER_MANIP
UserType	lib/yaml-cpp/test/emittertests.cpp	/^		void UserType(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
UserTypeInContainer	lib/yaml-cpp/test/emittertests.cpp	/^		void UserTypeInContainer(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
Utf8Adjust	lib/yaml-cpp/src/stream.cpp	/^	inline char Utf8Adjust(unsigned long ch, unsigned char lead_bits, unsigned char rshift)$/;"	f	namespace:YAML
Utf8BytesIndicated	lib/yaml-cpp/src/emitterutils.cpp	/^			int Utf8BytesIndicated(char ch) {$/;"	f	namespace:YAML::Utils::__anon127
Utf8_ByteOrderMark	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Utf8_ByteOrderMark() {$/;"	f	namespace:YAML::Exp
UtfIntroCharType	lib/yaml-cpp/src/stream.cpp	/^	enum UtfIntroCharType {$/;"	g	namespace:YAML	file:
UtfIntroState	lib/yaml-cpp/src/stream.cpp	/^	enum UtfIntroState {$/;"	g	namespace:YAML	file:
Utils	lib/yaml-cpp/src/emitterutils.cpp	/^	namespace Utils$/;"	n	namespace:YAML	file:
Utils	lib/yaml-cpp/src/emitterutils.h	/^	namespace Utils$/;"	n	namespace:YAML
V	lib/lua/Makefile	/^V= 5.1$/;"	m
V4L2_CID_AEC_ALGORITHM	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_AEC_ALGORITHM /;"	d
V4L2_CID_AUDIO_MUTE	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_AUDIO_MUTE /;"	d
V4L2_CID_AUTOEXPOSURE	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_AUTOEXPOSURE /;"	d
V4L2_CID_AUTO_CONTRAST_CENTER	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_AUTO_CONTRAST_CENTER	/;"	d
V4L2_CID_AUTO_EXPOSURE_CORRECTION	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^#define V4L2_CID_AUTO_EXPOSURE_CORRECTION /;"	d
V4L2_CID_AUTO_EXPOSURE_CORRECTION_ALGORITHM	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^#define V4L2_CID_AUTO_EXPOSURE_CORRECTION_ALGORITHM /;"	d
V4L2_CID_AWB_G_CHANNEL_GAIN	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_AWB_G_CHANNEL_GAIN /;"	d
V4L2_CID_BACKLIGHT_COMPENSATION	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_BACKLIGHT_COMPENSATION /;"	d
V4L2_CID_CAMERA_CLASS	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_CAMERA_CLASS /;"	d
V4L2_CID_CAMERA_CLASS_BASE	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_CAMERA_CLASS_BASE /;"	d
V4L2_CID_CAM_INIT	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_CAM_INIT /;"	d
V4L2_CID_CONTRAST_CENTER	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_CONTRAST_CENTER	/;"	d
V4L2_CID_DENOISE_STRENGTH	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_DENOISE_STRENGTH	/;"	d
V4L2_CID_EDGE_ENH_FACTOR	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_EDGE_ENH_FACTOR	/;"	d
V4L2_CID_EXPOSURE_ABSOLUTE	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_EXPOSURE_ABSOLUTE /;"	d
V4L2_CID_EXPOSURE_AUTO	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_EXPOSURE_AUTO /;"	d
V4L2_CID_EXPOSURE_AUTO_PRIORITY	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_EXPOSURE_AUTO_PRIORITY /;"	d
V4L2_CID_EXPOSURE_CORRECTION	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_EXPOSURE_CORRECTION /;"	d
V4L2_CID_EXPOSURE_CORRECTION	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^#define V4L2_CID_EXPOSURE_CORRECTION /;"	d
V4L2_CID_FOCUS_ABSOLUTE	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_FOCUS_ABSOLUTE /;"	d
V4L2_CID_FOCUS_AUTO	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_FOCUS_AUTO /;"	d
V4L2_CID_FOCUS_RELATIVE	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_FOCUS_RELATIVE /;"	d
V4L2_CID_HUE_AUTO	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_HUE_AUTO /;"	d
V4L2_CID_PAN_ABSOLUTE	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_PAN_ABSOLUTE /;"	d
V4L2_CID_PAN_RELATIVE	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_PAN_RELATIVE /;"	d
V4L2_CID_PAN_RESET	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_PAN_RESET /;"	d
V4L2_CID_POWER_LINE_FREQUENCY	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_POWER_LINE_FREQUENCY /;"	d
V4L2_CID_POWER_LINE_FREQUENCY_50HZ	core/imageCapture/V4L2Constants.h	/^  V4L2_CID_POWER_LINE_FREQUENCY_50HZ  = 1,$/;"	e	enum:v4l2_power_line_frequency
V4L2_CID_POWER_LINE_FREQUENCY_60HZ	core/imageCapture/V4L2Constants.h	/^  V4L2_CID_POWER_LINE_FREQUENCY_60HZ  = 2,$/;"	e	enum:v4l2_power_line_frequency
V4L2_CID_POWER_LINE_FREQUENCY_DISABLED	core/imageCapture/V4L2Constants.h	/^  V4L2_CID_POWER_LINE_FREQUENCY_DISABLED  = 0,$/;"	e	enum:v4l2_power_line_frequency
V4L2_CID_SAT_AUTO	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_SAT_AUTO	/;"	d
V4L2_CID_SET_DEFAULT_PARAMETERS	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^#define V4L2_CID_SET_DEFAULT_PARAMETERS /;"	d
V4L2_CID_SHARPNESS	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_SHARPNESS /;"	d
V4L2_CID_TILT_ABSOLUTE	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_TILT_ABSOLUTE /;"	d
V4L2_CID_TILT_RELATIVE	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_TILT_RELATIVE /;"	d
V4L2_CID_TILT_RESET	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_TILT_RESET /;"	d
V4L2_CID_UVSAT_RESULT	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_UVSAT_RESULT	/;"	d
V4L2_CID_WHITE_BALANCE_TEMPERATURE	core/imageCapture/V4L2Constants.h	/^#define V4L2_CID_WHITE_BALANCE_TEMPERATURE /;"	d
V4L2_CID_YGB_AVERAGE_LEVEL	core/imageCapture/V4L2Constants.h	/^#  define V4L2_CID_YGB_AVERAGE_LEVEL /;"	d
V4L2_EXPOSURE_APERTURE_PRIORITY	core/imageCapture/V4L2Constants.h	/^  V4L2_EXPOSURE_APERTURE_PRIORITY = 3$/;"	e	enum:v4l2_exposure_auto_type
V4L2_EXPOSURE_AUTO	core/imageCapture/V4L2Constants.h	/^  V4L2_EXPOSURE_AUTO = 1,$/;"	e	enum:v4l2_exposure_auto_type
V4L2_EXPOSURE_MANUAL	core/imageCapture/V4L2Constants.h	/^  V4L2_EXPOSURE_MANUAL = 0,$/;"	e	enum:v4l2_exposure_auto_type
V4L2_EXPOSURE_SHUTTER_PRIORITY	core/imageCapture/V4L2Constants.h	/^  V4L2_EXPOSURE_SHUTTER_PRIORITY = 2,$/;"	e	enum:v4l2_exposure_auto_type
VALID	lib/yaml-cpp/src/scanner.h	/^			enum STATUS { VALID, INVALID, UNKNOWN };$/;"	e	enum:YAML::Scanner::IndentMarker::STATUS
VALID	lib/yaml-cpp/src/token.h	/^		enum STATUS { VALID, INVALID, UNVERIFIED };$/;"	e	enum:YAML::Token::STATUS
VALUE	lib/yaml-cpp/src/token.h	/^			VALUE,$/;"	e	enum:YAML::Token::TYPE
VALUEWEAK	lib/lua/src/lgc.c	/^#define VALUEWEAK /;"	d	file:
VALUEWEAKBIT	lib/lua/src/lgc.h	/^#define VALUEWEAKBIT	/;"	d
VARARG_HASARG	lib/lua/src/lobject.h	/^#define VARARG_HASARG	/;"	d
VARARG_ISVARARG	lib/lua/src/lobject.h	/^#define VARARG_ISVARARG	/;"	d
VARARG_NEEDSARG	lib/lua/src/lobject.h	/^#define VARARG_NEEDSARG	/;"	d
VCALL	lib/lua/src/lparser.h	/^  VCALL,	\/* info = instruction pc *\/$/;"	e	enum:__anon95
VERBATIM	lib/yaml-cpp/src/tag.h	/^			VERBATIM, PRIMARY_HANDLE, SECONDARY_HANDLE, NAMED_HANDLE, NON_SPECIFIC$/;"	e	enum:YAML::Tag::TYPE
VERBOSE	core/motion/rswalk2014/utils/Logger.hpp	/^   VERBOSE = 40,$/;"	e	enum:LogLevel
VERIFY_RESIZE	core/memory/StreamBuffer.cpp	/^#define VERIFY_RESIZE /;"	d	file:
VERSION	install/install_naoqi	/^VERSION = '2.1.3.3'$/;"	v
VERTICAL_BLOB_IMAGE	build/include/tool/VisionWindow.h	/^#define VERTICAL_BLOB_IMAGE /;"	d
VERTICAL_BLOB_IMAGE	tools/UTNaoTool/VisionWindow.h	/^#define VERTICAL_BLOB_IMAGE /;"	d
VERY_SMALL	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float VERY_SMALL = 0.0001;$/;"	v	file:
VFALSE	lib/lua/src/lparser.h	/^  VFALSE,$/;"	e	enum:__anon95
VGLOBAL	lib/lua/src/lparser.h	/^  VGLOBAL,	\/* info = index of table; aux = index of global name in `k' *\/$/;"	e	enum:__anon95
VIM	install/install_naoqi	/^VIM = 'vim.tar.gz'$/;"	v
VINDEXED	lib/lua/src/lparser.h	/^  VINDEXED,	\/* info = table register; aux = index register (or `k') *\/$/;"	e	enum:__anon95
VISION	core/memory/MemoryBlock.h	/^    VISION,$/;"	e	enum:MemoryOwner::Owner
VISIONBODYPOINTS_H	core/vision/enums/VisionBodyPoints.h	/^#define VISIONBODYPOINTS_H$/;"	d
VISIONCONSTANTS_H	core/constants/VisionConstants.h	/^#define VISIONCONSTANTS_H$/;"	d
VISIONPARAMS_H	core/vision/structures/VisionParams.h	/^#define VISIONPARAMS_H$/;"	d
VISIONPOINT_H	core/vision/structures/VisionPoint.h	/^#define VISIONPOINT_H$/;"	d
VISION_99KDYIX5	core/vision/VisionModule.h	/^#define VISION_99KDYIX5$/;"	d
VISION_BLOCKS_H	core/vision/VisionBlocks.h	/^#define VISION_BLOCKS_H$/;"	d
VISION_CORE_2H7QHCY7	core/VisionCore.h	/^#define VISION_CORE_2H7QHCY7$/;"	d
VISION_ERROR_FACTOR	build/include/tool/simulation/ObservationGenerator.cpp	/^#define VISION_ERROR_FACTOR /;"	d	file:
VISION_ERROR_FACTOR	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^#define VISION_ERROR_FACTOR /;"	d	file:
VISION_TESTING_HPP	vision_testing/include/vision_testing/vision_testing.hpp	/^#define VISION_TESTING_HPP$/;"	d
VJMP	lib/lua/src/lparser.h	/^  VJMP,		\/* info = instruction pc *\/$/;"	e	enum:__anon95
VK	lib/lua/src/lparser.h	/^  VK,		\/* info = index of constant in `k' *\/$/;"	e	enum:__anon95
VKNUM	lib/lua/src/lparser.h	/^  VKNUM,	\/* nval = numerical value *\/$/;"	e	enum:__anon95
VLOCAL	lib/lua/src/lparser.h	/^  VLOCAL,	\/* info = local register *\/$/;"	e	enum:__anon95
VNIL	lib/lua/src/lparser.h	/^  VNIL,$/;"	e	enum:__anon95
VNONRELOC	lib/lua/src/lparser.h	/^  VNONRELOC,	\/* info = result register *\/$/;"	e	enum:__anon95
VOID	lib/lua/src/print.c	/^#define VOID(/;"	d	file:
VOID_NUM	core/motion/SpecialMotionParser.h	/^const float VOID_NUM=-720;$/;"	v
VRELOCABLE	lib/lua/src/lparser.h	/^  VRELOCABLE,	\/* info = instruction pc *\/$/;"	e	enum:__anon95
VTRUE	lib/lua/src/lparser.h	/^  VTRUE,$/;"	e	enum:__anon95
VUPVAL	lib/lua/src/lparser.h	/^  VUPVAL,       \/* info = index of upvalue in `upvalues' *\/$/;"	e	enum:__anon95
VVARARG	lib/lua/src/lparser.h	/^  VVARARG	\/* info = instruction pc *\/$/;"	e	enum:__anon95
VVOID	lib/lua/src/lparser.h	/^  VVOID,	\/* no value *\/$/;"	e	enum:__anon95
Valid	core/vision/structures/CornerPoint.h	/^  bool Valid;$/;"	m	struct:CornerPoint
ValidLine	core/vision/structures/FieldLine.h	/^  bool ValidLine;$/;"	m	struct:FieldLine
Validate	lib/yaml-cpp/src/simplekey.cpp	/^	void Scanner::SimpleKey::Validate()$/;"	f	class:YAML::Scanner::SimpleKey
Value	lib/lua/src/lobject.h	/^} Value;$/;"	t	typeref:union:__anon87
Value	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Value,$/;"	e	enum:YAML::EMITTER_MANIP
Value	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Value() {$/;"	f	namespace:YAML::Exp
ValueInFlow	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& ValueInFlow() {$/;"	f	namespace:YAML::Exp
ValueInJSONFlow	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& ValueInJSONFlow() {$/;"	f	namespace:YAML::Exp
VariousExplicitTags	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST VariousExplicitTags()$/;"	f	namespace:Test::Spec
Vector	core/math/Vector.h	/^  Vector<n, V>()$/;"	f	class:Vector
Vector	core/math/Vector.h	/^  Vector<n, V>(V x, V y)$/;"	f	class:Vector
Vector	core/math/Vector.h	/^  Vector<n, V>(V x, V y, V z)$/;"	f	class:Vector
Vector	core/math/Vector.h	/^  Vector<n, V>(V x, V y, V z, V w)$/;"	f	class:Vector
Vector	core/math/Vector.h	/^  Vector<n, V>(const Vector<n, V>& other)$/;"	f	class:Vector
Vector	core/math/Vector.h	/^template <int n = 2, class V = float> class Vector : public VectorData<n, V>$/;"	c
Vector2	core/math/Vector2.h	/^  Vector2<V>():x(0),y(0)$/;"	f	class:Vector2
Vector2	core/math/Vector2.h	/^  Vector2<V>(V x, V y):x(x),y(y)$/;"	f	class:Vector2
Vector2	core/math/Vector2.h	/^  Vector2<V>(const Vector2<V>& other) {*this = other;}$/;"	f	class:Vector2
Vector2	core/math/Vector2.h	/^template <class V> class Vector2$/;"	c
Vector2D	core/math/Geometry.h	/^typedef Point2D Vector2D; \/*!< Type definition for two-dimensional vectors. *\/$/;"	t
Vector2ToString	build/include/tool/MotionGLWidget.cpp	/^QString MotionGLWidget::Vector2ToString(Vector2<float> val){$/;"	f	class:MotionGLWidget
Vector2ToString	tools/UTNaoTool/MotionGLWidget.cpp	/^QString MotionGLWidget::Vector2ToString(Vector2<float> val){$/;"	f	class:MotionGLWidget
Vector2f	core/math/Vector.h	/^typedef Vector<2, float> Vector2f;$/;"	t
Vector2i	core/math/Vector.h	/^typedef Vector<2, int> Vector2i;$/;"	t
Vector3	core/math/Vector3.h	/^  Vector3<V>():x(0),y(0),z(0)$/;"	f	class:Vector3
Vector3	core/math/Vector3.h	/^  Vector3<V>(V x, V y, V z):x(x),y(y),z(z)$/;"	f	class:Vector3
Vector3	core/math/Vector3.h	/^  Vector3<V>(const Vector3<V>& other) {*this = other;}$/;"	f	class:Vector3
Vector3	core/math/Vector3.h	/^template <class V> class Vector3$/;"	c
Vector3ToString	build/include/tool/MotionGLWidget.cpp	/^QString MotionGLWidget::Vector3ToString(Vector3<float> val){$/;"	f	class:MotionGLWidget
Vector3ToString	tools/UTNaoTool/MotionGLWidget.cpp	/^QString MotionGLWidget::Vector3ToString(Vector3<float> val){$/;"	f	class:MotionGLWidget
Vector3f	core/math/Vector.h	/^typedef Vector<3, float> Vector3f;$/;"	t
Vector3i	core/math/Vector.h	/^typedef Vector<3, int> Vector3i;$/;"	t
Vector4f	core/math/Vector.h	/^typedef Vector<4, float> Vector4f;$/;"	t
Vector4i	core/math/Vector.h	/^typedef Vector<4, int> Vector4i;$/;"	t
VectorData	core/math/Vector.h	/^template <class V> struct VectorData<2, V>$/;"	s
VectorData	core/math/Vector.h	/^template <class V> struct VectorData<3, V>$/;"	s
VectorData	core/math/Vector.h	/^template <int n, class V> struct VectorData$/;"	s
Vector_H	core/math/Vector.h	/^#define Vector_H$/;"	d
Verbatim	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		struct Type { enum value { Verbatim, PrimaryHandle, NamedHandle }; };$/;"	e	enum:YAML::_Tag::Type::value
VerbatimLocalTag	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool VerbatimLocalTag()$/;"	f	namespace:Test::Parser
VerbatimTag	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	inline _Tag VerbatimTag(const std::string content) {$/;"	f	namespace:YAML
VerbatimTagEnd	lib/yaml-cpp/src/exp.h	/^		const char VerbatimTagEnd = '>';$/;"	m	namespace:YAML::Keys
VerbatimTagInBlockMap	lib/yaml-cpp/test/emittertests.cpp	/^		void VerbatimTagInBlockMap(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
VerbatimTagInBlockSeq	lib/yaml-cpp/test/emittertests.cpp	/^		void VerbatimTagInBlockSeq(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
VerbatimTagInFlowMap	lib/yaml-cpp/test/emittertests.cpp	/^		void VerbatimTagInFlowMap(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
VerbatimTagInFlowMapWithNull	lib/yaml-cpp/test/emittertests.cpp	/^		void VerbatimTagInFlowMapWithNull(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
VerbatimTagInFlowSeq	lib/yaml-cpp/test/emittertests.cpp	/^		void VerbatimTagInFlowSeq(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
VerbatimTagInFlowSeqWithNull	lib/yaml-cpp/test/emittertests.cpp	/^		void VerbatimTagInFlowSeqWithNull(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
VerbatimTagStart	lib/yaml-cpp/src/exp.h	/^		const char VerbatimTagStart = '<';$/;"	m	namespace:YAML::Keys
VerbatimTagWithEmptyMap	lib/yaml-cpp/test/emittertests.cpp	/^		void VerbatimTagWithEmptyMap(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
VerbatimTagWithEmptySeq	lib/yaml-cpp/test/emittertests.cpp	/^		void VerbatimTagWithEmptySeq(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
VerbatimTagWithEmptySeqAndMap	lib/yaml-cpp/test/emittertests.cpp	/^		void VerbatimTagWithEmptySeqAndMap(YAML::Emitter& out, std::string& desiredOutput)$/;"	f	namespace:Test::Emitter
VerbatimTags	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST VerbatimTags()$/;"	f	namespace:Test::Spec
VerbatimURITag	lib/yaml-cpp/test/old-api/parsertests.cpp	/^		bool VerbatimURITag()$/;"	f	namespace:Test::Parser
VerifySimpleKey	lib/yaml-cpp/src/simplekey.cpp	/^	bool Scanner::VerifySimpleKey()$/;"	f	class:YAML::Scanner
Version	lib/yaml-cpp/src/directives.h	/^	struct Version {$/;"	s	namespace:YAML
Violet	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Violet = TORGB(160,32,240);$/;"	m	class:Colors	file:
Violet	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Violet	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Violet = TORGB(160,32,240);$/;"	m	class:Colors	file:
Violet	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
VisionBlocks	core/vision/VisionBlocks.h	/^    VisionBlocks($/;"	f	class:VisionBlocks
VisionBlocks	core/vision/VisionBlocks.h	/^    VisionBlocks(MemoryCache& cache)$/;"	f	class:VisionBlocks
VisionBlocks	core/vision/VisionBlocks.h	/^class VisionBlocks {$/;"	c
VisionBodyPoints	core/memory/RobotVisionBlock.h	/^  enum VisionBodyPoints {$/;"	g	struct:RobotVisionBlock
VisionBodyPoints	core/vision/enums/VisionBodyPoints.h	/^enum VisionBodyPoints {$/;"	g
VisionCore	core/VisionCore.cpp	/^VisionCore::VisionCore (CoreType type, bool use_shared_memory, int team_num, int player_num, LocalizationMethod::Type locMethod):$/;"	f	class:VisionCore
VisionCore	core/VisionCore.h	/^class VisionCore {$/;"	c
VisionModule	core/vision/VisionModule.cpp	/^VisionModule::VisionModule() {$/;"	f	class:VisionModule
VisionModule	core/vision/VisionModule.h	/^class VisionModule: public Module {$/;"	c
VisionModuleLog	core/memory/TextLogger.h	/^  VisionModuleLog,$/;"	e	enum:modulesTypes
VisionParams	core/vision/structures/VisionParams.h	/^    VisionParams() {$/;"	f	struct:VisionParams
VisionParams	core/vision/structures/VisionParams.h	/^struct VisionParams {$/;"	s
VisionPoint	core/vision/structures/VisionPoint.h	/^struct VisionPoint {$/;"	s
VisionWindow	build/include/tool/VisionWindow.cpp	/^VisionWindow::VisionWindow(QMainWindow* parent, VisionCore *core) :$/;"	f	class:VisionWindow
VisionWindow	build/include/tool/VisionWindow.h	/^class VisionWindow : public QMainWindow, public Ui_UTVisionWindow {$/;"	c
VisionWindow	tools/UTNaoTool/VisionWindow.cpp	/^VisionWindow::VisionWindow(QMainWindow* parent, VisionCore *core) :$/;"	f	class:VisionWindow
VisionWindow	tools/UTNaoTool/VisionWindow.h	/^class VisionWindow : public QMainWindow, public Ui_UTVisionWindow {$/;"	c
VoidAllocator	core/memory/SharedMemory.h	/^typedef boost::interprocess::allocator<void,boost::interprocess::managed_shared_memory::segment_manager> VoidAllocator;$/;"	t
W	particle_filters/MCL_particle_filter.hpp	/^    ParticleWeightSet W;$/;"	m	class:MCLParticleFilter
W	particle_filters/RMCL_particle_filter.hpp	/^    ParticleWeightSet W;$/;"	m	class:RMCLParticleFilter
WALK	core/motion/KickParameters.h	/^    WALK,$/;"	e	enum:KickState::State
WALK	core/motion/rswalk2014/Walk2014Generator.hpp	/^      WALK         = 3,$/;"	e	enum:Walk2014Generator::Walk2014Option
WALK	core/motion/rswalk2014/types/ActionCommand.hpp	/^         WALK,    \/\/2$/;"	e	enum:ActionCommand::Body::ActionType
WALKENGINEBLOCK_CTX0HMI2	core/memory/WalkEngineBlock.h	/^#define WALKENGINEBLOCK_CTX0HMI2$/;"	d
WALKENGINEPARAMETERS_5GLKWI3S	core/motion/WalkEngineParameters.h	/^#define WALKENGINEPARAMETERS_5GLKWI3S$/;"	d
WALKINFOBLOCK_SXELZJMF	core/memory/WalkInfoBlock.h	/^#define WALKINFOBLOCK_SXELZJMF$/;"	d
WALKING	core/motion/rswalk2014/Walk2014Generator.hpp	/^      WALKING        = 0,$/;"	e	enum:Walk2014Generator::WalkState
WALKMODE	build/include/tool/MotionGLWidget.h	/^    WALKMODE,$/;"	e	enum:MotionGLWidget::__anon1
WALKMODE	tools/UTNaoTool/MotionGLWidget.h	/^    WALKMODE,$/;"	e	enum:MotionGLWidget::__anon139
WALKPARAMBLOCK_REVJHZ5T	core/memory/WalkParamBlock.h	/^#define WALKPARAMBLOCK_REVJHZ5T$/;"	d
WALKREQUESTBLOCK_RE8SDRLN	core/memory/WalkRequestBlock.h	/^#define WALKREQUESTBLOCK_RE8SDRLN$/;"	d
WALKRESPONSEBLOCK_RE8SDRLN	core/memory/WalkResponseBlock.h	/^#define WALKRESPONSEBLOCK_RE8SDRLN$/;"	d
WALKSIMMODE	build/include/tool/MotionGLWidget.h	/^    WALKSIMMODE,$/;"	e	enum:MotionGLWidget::__anon1
WALKSIMMODE	tools/UTNaoTool/MotionGLWidget.h	/^    WALKSIMMODE,$/;"	e	enum:MotionGLWidget::__anon139
WALK_HIP_HEIGHT	core/motion/rswalk2014/Walk2014Generator.cpp	/^const float WALK_HIP_HEIGHT = .23;                         \/\/ Walk hip height - seems to work from .2 to .235$/;"	v
WALK_TYPE	core/common/InterfaceInfo.cpp	/^const int WALK_TYPE = BHUMAN2013_WALK;$/;"	v
WALK_WINDOW_H	build/include/tool/WalkWindow.h	/^#define WALK_WINDOW_H$/;"	d
WALK_WINDOW_H	tools/UTNaoTool/WalkWindow.h	/^#define WALK_WINDOW_H$/;"	d
WANT_SIGFPE_HANDLER	build/pythonswig/pyconfig.h	/^#define WANT_SIGFPE_HANDLER /;"	d
WARNING	core/motion/rswalk2014/utils/Logger.hpp	/^   WARNING = 10,$/;"	e	enum:LogLevel
WHICH_CAMERA_ERROR	core/motion/rswalk2014/perception/vision/WhichCamera.hpp	/^   WHICH_CAMERA_ERROR = -1,$/;"	e	enum:__anon14
WHITE	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    WHITE,$/;"	e	enum:color_classifier::Color
WHITE	vision_testing/src/vision_testing.cpp	/^  WHITE,$/;"	e	enum:FullColor	file:
WHITE0BIT	lib/lua/src/lgc.h	/^#define WHITE0BIT	/;"	d
WHITE1BIT	lib/lua/src/lgc.h	/^#define WHITE1BIT	/;"	d
WHITEBITS	lib/lua/src/lgc.h	/^#define WHITEBITS	/;"	d
WHITE_BLUE	core/vision/BeaconDetector.h	/^    WHITE_BLUE,$/;"	e	enum:BeaconDetector::ColorTransition
WHITE_GREEN	core/vision/BeaconDetector.h	/^    WHITE_GREEN,$/;"	e	enum:BeaconDetector::ColorTransition
WHITE_GREEN	vision_testing/src/vision_testing.cpp	/^  WHITE_GREEN$/;"	e	enum:ColorTransition	file:
WHITE_HORZ_MERGE_ANGLE_LIMIT	core/vision/structures/VisionParams.h	/^    float WHITE_HORZ_MERGE_ANGLE_LIMIT;\/\/ = 0.3;$/;"	m	struct:VisionParams
WHITE_HORZ_MERGE_POS_LIMIT	core/vision/structures/VisionParams.h	/^    int WHITE_HORZ_MERGE_POS_LIMIT;\/\/ = 7;$/;"	m	struct:VisionParams
WHITE_HORZ_MERGE_WIDTH_LIMIT	core/vision/structures/VisionParams.h	/^    float WHITE_HORZ_MERGE_WIDTH_LIMIT;\/\/ = 0.3;$/;"	m	struct:VisionParams
WHITE_HORZ_SEPARATION	core/vision/structures/VisionParams.h	/^    int WHITE_HORZ_SEPARATION; \/\/ = 3;$/;"	m	struct:VisionParams
WHITE_HORZ_VAL_FUNCTION_PARAM_A	core/vision/structures/VisionParams.h	/^    int WHITE_HORZ_VAL_FUNCTION_PARAM_A;\/\/ = 1;$/;"	m	struct:VisionParams
WHITE_HORZ_VAL_FUNCTION_PARAM_B	core/vision/structures/VisionParams.h	/^    int WHITE_HORZ_VAL_FUNCTION_PARAM_B;\/\/ = 1;$/;"	m	struct:VisionParams
WHITE_HORZ_VAL_FUNCTION_THRESHOLD	core/vision/structures/VisionParams.h	/^    int WHITE_HORZ_VAL_FUNCTION_THRESHOLD;\/\/ = 12;$/;"	m	struct:VisionParams
WHITE_PINK	core/vision/BeaconDetector.h	/^    WHITE_PINK,$/;"	e	enum:BeaconDetector::ColorTransition
WHITE_VERT_MERGE_ANGLE_LIMIT	core/vision/structures/VisionParams.h	/^    float WHITE_VERT_MERGE_ANGLE_LIMIT;\/\/ = 0.3;$/;"	m	struct:VisionParams
WHITE_VERT_MERGE_POS_LIMIT	core/vision/structures/VisionParams.h	/^    int WHITE_VERT_MERGE_POS_LIMIT;\/\/ = 7;$/;"	m	struct:VisionParams
WHITE_VERT_MERGE_WIDTH_LIMIT	core/vision/structures/VisionParams.h	/^    float WHITE_VERT_MERGE_WIDTH_LIMIT;\/\/ = 0.3;$/;"	m	struct:VisionParams
WHITE_VERT_SEPARATION	core/vision/structures/VisionParams.h	/^    int WHITE_VERT_SEPARATION; \/\/ = 3;$/;"	m	struct:VisionParams
WHITE_VERT_VAL_FUNCTION_PARAM_A	core/vision/structures/VisionParams.h	/^    int WHITE_VERT_VAL_FUNCTION_PARAM_A;\/\/ = 1;$/;"	m	struct:VisionParams
WHITE_VERT_VAL_FUNCTION_PARAM_B	core/vision/structures/VisionParams.h	/^    int WHITE_VERT_VAL_FUNCTION_PARAM_B;\/\/ = 1;$/;"	m	struct:VisionParams
WHITE_VERT_VAL_FUNCTION_THRESHOLD	core/vision/structures/VisionParams.h	/^    int WHITE_VERT_VAL_FUNCTION_THRESHOLD;\/\/ = 12;$/;"	m	struct:VisionParams
WHITE_WIDTH_ABS_BLOB	core/vision/structures/VisionParams.h	/^    int WHITE_WIDTH_ABS_BLOB;\/\/ = 2;$/;"	m	struct:VisionParams
WHITE_WIDTH_RATIO_BLOB	core/vision/structures/VisionParams.h	/^    int WHITE_WIDTH_RATIO_BLOB;\/\/ = 7;$/;"	m	struct:VisionParams
WHITE_YELLOW	core/vision/BeaconDetector.h	/^    WHITE_YELLOW,$/;"	e	enum:BeaconDetector::ColorTransition
WIN32	lib/zlib/zconf.h	/^#    define WIN32$/;"	d
WINDOWS	lib/zlib/zconf.h	/^#  define WINDOWS$/;"	d
WINDOW_HAS_FLAGS	build/pythonswig/pyconfig.h	/^#define WINDOW_HAS_FLAGS /;"	d
WIN_INIT	lib/zlib/deflate.h	/^#define WIN_INIT /;"	d
WITH_DOC_STRINGS	build/pythonswig/pyconfig.h	/^#define WITH_DOC_STRINGS /;"	d
WITH_PYMALLOC	build/pythonswig/pyconfig.h	/^#define WITH_PYMALLOC /;"	d
WITH_THREAD	build/pythonswig/pyconfig.h	/^#define WITH_THREAD /;"	d
WORDS_BIGENDIAN	build/pythonswig/pyconfig.h	/^#  define WORDS_BIGENDIAN /;"	d
WORLDOJBECTBLOCK_	core/memory/WorldObjectBlock.h	/^#define WORLDOJBECTBLOCK_$/;"	d
WORLD_CONFIG_H	build/include/tool/WorldConfig.h	/^#define WORLD_CONFIG_H$/;"	d
WORLD_CONFIG_H	tools/UTNaoTool/WorldConfig.h	/^#define WORLD_CONFIG_H$/;"	d
WORLD_GL_WIDGET_H	build/include/tool/WorldGLWidget.h	/^#define WORLD_GL_WIDGET_H$/;"	d
WORLD_GL_WIDGET_H	tools/UTNaoTool/WorldGLWidget.h	/^#define WORLD_GL_WIDGET_H$/;"	d
WORLD_WINDOW_H	build/include/tool/WorldWindow.h	/^#define WORLD_WINDOW_H$/;"	d
WORLD_WINDOW_H	tools/UTNaoTool/WorldWindow.h	/^#define WORLD_WINDOW_H$/;"	d
WO_GOAL_FIRST	core/common/WorldObject.h	/^const int WO_GOAL_FIRST = WO_OWN_GOAL;$/;"	v
WO_GOAL_LAST	core/common/WorldObject.h	/^const int WO_GOAL_LAST = WO_UNKNOWN_GOALPOST;$/;"	v
WO_OPPONENT_FIRST	core/common/WorldObject.h	/^const int WO_OPPONENT_FIRST=WO_OPPONENT1;$/;"	v
WO_OPPONENT_LAST	core/common/WorldObject.h	/^const int WO_OPPONENT_LAST=WO_OPPONENT5;$/;"	v
WO_PLAYERS_FIRST	core/common/WorldObject.h	/^const int WO_PLAYERS_FIRST=WO_TEAM_FIRST;$/;"	v
WO_PLAYERS_LAST	core/common/WorldObject.h	/^const int WO_PLAYERS_LAST=WO_OPPONENT_LAST;$/;"	v
WO_ROBOTS_LAST	core/common/WorldObject.h	/^const int WO_ROBOTS_LAST=WO_OPPONENT_COACH;$/;"	v
WO_SELF	build/include/tool/StateWindow.h	/^     WO_SELF,$/;"	e	enum:StateWindow::__anon3
WO_SELF	core/memory/RobotStateBlock.h	/^  int WO_SELF;$/;"	m	struct:RobotStateBlock
WO_SELF	tools/UTNaoTool/StateWindow.h	/^     WO_SELF,$/;"	e	enum:StateWindow::__anon141
WO_TEAM_FIELD_FIRST	core/common/WorldObject.h	/^const int WO_TEAM_FIELD_FIRST=WO_TEAM2;$/;"	v
WO_TEAM_FIRST	core/common/WorldObject.h	/^const int WO_TEAM_FIRST=WO_TEAM1;$/;"	v
WO_TEAM_LAST	core/common/WorldObject.h	/^const int WO_TEAM_LAST=WO_TEAM5;$/;"	v
WaitingForKey	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^		struct State { enum value { WaitingForSequenceEntry, WaitingForKey, WaitingForValue }; };$/;"	e	enum:YAML::EmitFromEvents::State::value
WaitingForSequenceEntry	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^		struct State { enum value { WaitingForSequenceEntry, WaitingForKey, WaitingForValue }; };$/;"	e	enum:YAML::EmitFromEvents::State::value
WaitingForValue	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^		struct State { enum value { WaitingForSequenceEntry, WaitingForKey, WaitingForValue }; };$/;"	e	enum:YAML::EmitFromEvents::State::value
Walk	core/python/behaviors/Movement.py	/^  class Walk(Node):$/;"	c	class:Playing
Walk	core/python/behaviors/custom_kick.py	/^  class Walk(Node):$/;"	c	class:Playing
Walk	core/python/behaviors/kick.py	/^  class Walk(Node):$/;"	c	class:Playing
Walk2014Generator	core/motion/rswalk2014/Walk2014Generator.cpp	/^Walk2014Generator::Walk2014Generator()$/;"	f	class:Walk2014Generator
Walk2014Generator	core/motion/rswalk2014/Walk2014Generator.hpp	/^class Walk2014Generator : Generator {$/;"	c
Walk2014Option	core/motion/rswalk2014/Walk2014Generator.hpp	/^   enum Walk2014Option {$/;"	g	class:Walk2014Generator
WalkCycle	core/motion/rswalk2014/WalkCycle.cpp	/^WalkCycle::WalkCycle() {$/;"	f	class:WalkCycle
WalkCycle	core/motion/rswalk2014/WalkCycle.cpp	/^WalkCycle::WalkCycle(float useForwardL, float useForwardR, float useLeft,$/;"	f	class:WalkCycle
WalkCycle	core/motion/rswalk2014/WalkCycle.hpp	/^class WalkCycle {$/;"	c
WalkEngineBlock	core/memory/WalkEngineBlock.h	/^  WalkEngineBlock() {$/;"	f	struct:WalkEngineBlock
WalkEngineBlock	core/memory/WalkEngineBlock.h	/^struct WalkEngineBlock : public MemoryBlock {$/;"	s
WalkEngineParameters	core/motion/WalkEngineParameters.cpp	/^WalkEngineParameters::WalkEngineParameters():$/;"	f	class:WalkEngineParameters
WalkEngineParameters	core/motion/WalkEngineParameters.h	/^struct WalkEngineParameters {$/;"	s
WalkEnginePreProcessor	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^WalkEnginePreProcessor::WalkEnginePreProcessor() {$/;"	f	class:WalkEnginePreProcessor
WalkEnginePreProcessor	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^class WalkEnginePreProcessor : Generator {$/;"	c
WalkInfoBlock	core/memory/WalkInfoBlock.h	/^  WalkInfoBlock() {$/;"	f	struct:WalkInfoBlock
WalkInfoBlock	core/memory/WalkInfoBlock.h	/^struct WalkInfoBlock : public MemoryBlock {$/;"	s
WalkKickFront	core/common/Kicks.h	/^  WalkKickFront,$/;"	e	enum:kicks
WalkKickLeftward	core/common/Kicks.h	/^  WalkKickLeftward,$/;"	e	enum:kicks
WalkKickLeftwardSide	core/common/Kicks.h	/^  WalkKickLeftwardSide,$/;"	e	enum:kicks
WalkKickRightward	core/common/Kicks.h	/^  WalkKickRightward,$/;"	e	enum:kicks
WalkKickRightwardSide	core/common/Kicks.h	/^  WalkKickRightwardSide,$/;"	e	enum:kicks
WalkMode	core/memory/BehaviorBlock.h	/^struct WalkMode { \/\/ struct for lua access, otherwise namespace$/;"	s
WalkModule	core/motion/WalkModule.h	/^class WalkModule : public Module {$/;"	c
WalkParamBlock	core/memory/WalkParamBlock.h	/^  WalkParamBlock():$/;"	f	struct:WalkParamBlock
WalkParamBlock	core/memory/WalkParamBlock.h	/^struct WalkParamBlock : public MemoryBlock {$/;"	s
WalkRequestBlock	core/memory/WalkRequestBlock.cpp	/^WalkRequestBlock::WalkRequestBlock():$/;"	f	class:WalkRequestBlock
WalkRequestBlock	core/memory/WalkRequestBlock.h	/^struct WalkRequestBlock : public MemoryBlock {$/;"	s
WalkResponseBlock	core/memory/WalkResponseBlock.h	/^  WalkResponseBlock():$/;"	f	struct:WalkResponseBlock
WalkResponseBlock	core/memory/WalkResponseBlock.h	/^struct WalkResponseBlock : public MemoryBlock {$/;"	s
WalkState	core/memory/WalkEngineBlock.h	/^  struct WalkState {$/;"	s	struct:WalkEngineBlock
WalkState	core/motion/rswalk2014/Walk2014Generator.hpp	/^   enum WalkState {$/;"	g	class:Walk2014Generator
WalkToCenter	core/python/behaviors/walk_to_center.py	/^  class WalkToCenter(Node):$/;"	c	class:Playing
WalkToCenter	core/python/behaviors/walk_to_center_2.py	/^  class WalkToCenter(Node):$/;"	c	class:Playing
WalkWindow	build/include/tool/WalkWindow.cpp	/^WalkWindow::WalkWindow() : QWidget() {$/;"	f	class:WalkWindow
WalkWindow	build/include/tool/WalkWindow.h	/^class WalkWindow : public QWidget {$/;"	c
WalkWindow	tools/UTNaoTool/WalkWindow.cpp	/^WalkWindow::WalkWindow() : QWidget() {$/;"	f	class:WalkWindow
WalkWindow	tools/UTNaoTool/WalkWindow.h	/^class WalkWindow : public QWidget {$/;"	c
Walking	core/python/behaviors/keeper_2.py	/^class Walking(Node):$/;"	c
WalkingCenter	core/python/behaviors/keeper_2.py	/^class WalkingCenter(Node):$/;"	c
WalkingLeft	core/python/behaviors/keeper_2.py	/^class WalkingLeft(Node):$/;"	c
WalkingRight	core/python/behaviors/keeper_2.py	/^class WalkingRight(Node):$/;"	c
Waverage	particle_filters/RMCL_particle_filter.hpp	/^    double Waverage;$/;"	m	class:RMCLParticleFilter
Wc	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  WeightMatrix Wc;$/;"	m	class:UnscentedKalmanFilter
WeightMatrix	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  typedef boost::array<double, (1 + 2 * NumStates)> WeightMatrix;$/;"	t	class:SRUnscentedKalmanFilter
WeightMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  typedef boost::array<double, (1 + 2 * NumStates)> WeightMatrix;$/;"	t	class:UnscentedKalmanFilter
WeightMatrix	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef Eigen::Matrix<double, (1 + 2 * NumStates), (1 + 2 * NumStates)> WeightMatrix;$/;"	t	class:UnscentedKalmanFilter
WeightVector	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  typedef Eigen::Matrix<double, (1 + 2 * NumStates), 1> WeightVector;$/;"	t	class:UnscentedKalmanFilter
Wfast	particle_filters/RMCL_particle_filter.hpp	/^    double Wfast;$/;"	m	class:RMCLParticleFilter
WhichCamera	core/motion/rswalk2014/perception/vision/WhichCamera.hpp	/^} WhichCamera;$/;"	t	typeref:enum:__anon14
WhichPosts	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^enum WhichPosts$/;"	g
WhichPosts_to_PostType	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^inline std::pair<PostInfo::Type, PostInfo::Type> WhichPosts_to_PostType (WhichPosts posts)$/;"	f
WhistleFrame	build/include/tool/StateWindow.h	/^     WhistleFrame,$/;"	e	enum:StateWindow::__anon3
WhistleFrame	tools/UTNaoTool/StateWindow.h	/^     WhistleFrame,$/;"	e	enum:StateWindow::__anon141
WhistleTime	build/include/tool/StateWindow.h	/^     WhistleTime,$/;"	e	enum:StateWindow::__anon3
WhistleTime	tools/UTNaoTool/StateWindow.h	/^     WhistleTime,$/;"	e	enum:StateWindow::__anon141
White	build/include/tool/UTOpenGL/Colors.h	/^    static RGB White, Gray, Black, Pink;$/;"	m	class:Colors
White	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB White, Gray, Black, Pink;$/;"	m	class:Colors
WhiteCovarianceVector	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , SizeParticle> WhiteCovarianceVector;$/;"	t	class:MCLParticleFilter
WhiteCovarianceVector	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , SizeParticle> WhiteCovarianceVector;$/;"	t	class:RMCLParticleFilter
WhiteNoiseVector	particle_filters/MCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , 1> WhiteNoiseVector;$/;"	t	class:MCLParticleFilter
WhiteNoiseVector	particle_filters/RMCL_particle_filter.hpp	/^    typedef Eigen::Matrix< double, SizeParticle , 1> WhiteNoiseVector;$/;"	t	class:RMCLParticleFilter
Width	core/vision/structures/LinePoint.h	/^  unsigned short Width;$/;"	m	struct:LinePoint
Win	core/python/behaviors/win.py	/^  class Win(Node):$/;"	c	class:Playing
WirelessTester	data/scripts/wireless-monitor.py	/^class WirelessTester(object):$/;"	c
Wm	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  WeightMatrix Wm;$/;"	m	class:UnscentedKalmanFilter
Word	lib/yaml-cpp/src/exp.h	/^		inline const RegEx& Word() {$/;"	f	namespace:YAML::Exp
WorldConfig	build/include/tool/WorldConfig.h	/^    WorldConfig() : $/;"	f	class:WorldConfig
WorldConfig	build/include/tool/WorldConfig.h	/^class WorldConfig : public YamlConfig {$/;"	c
WorldConfig	tools/UTNaoTool/WorldConfig.h	/^    WorldConfig() : $/;"	f	class:WorldConfig
WorldConfig	tools/UTNaoTool/WorldConfig.h	/^class WorldConfig : public YamlConfig {$/;"	c
WorldGLWidget	build/include/tool/WorldGLWidget.cpp	/^WorldGLWidget::WorldGLWidget(QWidget* p): $/;"	f	class:WorldGLWidget
WorldGLWidget	build/include/tool/WorldGLWidget.h	/^class WorldGLWidget : public QGLViewer {$/;"	c
WorldGLWidget	tools/UTNaoTool/WorldGLWidget.cpp	/^WorldGLWidget::WorldGLWidget(QWidget* p): $/;"	f	class:WorldGLWidget
WorldGLWidget	tools/UTNaoTool/WorldGLWidget.h	/^class WorldGLWidget : public QGLViewer {$/;"	c
WorldObject	core/common/WorldObject.cpp	/^WorldObject::WorldObject() {$/;"	f	class:WorldObject
WorldObject	core/common/WorldObject.h	/^class WorldObject {$/;"	c
WorldObjectBlock	core/memory/WorldObjectBlock.h	/^  WorldObjectBlock()  {$/;"	f	struct:WorldObjectBlock
WorldObjectBlock	core/memory/WorldObjectBlock.h	/^struct WorldObjectBlock : public MemoryBlock {$/;"	s
WorldWindow	build/include/tool/WorldWindow.cpp	/^WorldWindow::WorldWindow(QMainWindow* pa) : ConfigWindow(pa) {$/;"	f	class:WorldWindow
WorldWindow	build/include/tool/WorldWindow.h	/^class WorldWindow : public ConfigWindow, public Ui_WorldWindow {$/;"	c
WorldWindow	tools/UTNaoTool/WorldWindow.cpp	/^WorldWindow::WorldWindow(QMainWindow* pa) : ConfigWindow(pa) {$/;"	f	class:WorldWindow
WorldWindow	tools/UTNaoTool/WorldWindow.h	/^class WorldWindow : public ConfigWindow, public Ui_WorldWindow {$/;"	c
WristYawSpeed	core/motion/rswalk2014/utils/body.hpp	/^      const float WristYawSpeed        = MOTOR2_REDUCTIONA_RAD;$/;"	m	namespace:RSJoints::Radians
Write	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::Write(bool b)$/;"	f	class:YAML::Emitter
Write	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::Write(char ch)$/;"	f	class:YAML::Emitter
Write	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::Write(const Binary& binary)$/;"	f	class:YAML::Emitter
Write	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::Write(const _Alias& alias)$/;"	f	class:YAML::Emitter
Write	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::Write(const _Anchor& anchor)$/;"	f	class:YAML::Emitter
Write	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::Write(const _Comment& comment)$/;"	f	class:YAML::Emitter
Write	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::Write(const _Null& \/*null*\/)$/;"	f	class:YAML::Emitter
Write	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::Write(const _Tag& tag)$/;"	f	class:YAML::Emitter
Write	lib/yaml-cpp/src/emitter.cpp	/^	Emitter& Emitter::Write(const std::string& str)$/;"	f	class:YAML::Emitter
WriteAlias	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteAlias(ostream& out, const std::string& str)$/;"	f	namespace:YAML::Utils
WriteAliasName	lib/yaml-cpp/src/emitterutils.cpp	/^			bool WriteAliasName(ostream& out, const std::string& str) {$/;"	f	namespace:YAML::Utils::__anon127
WriteAnchor	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteAnchor(ostream& out, const std::string& str)$/;"	f	namespace:YAML::Utils
WriteBinary	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteBinary(ostream& out, const Binary& binary)$/;"	f	namespace:YAML::Utils
WriteChar	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteChar(ostream& out, char ch)$/;"	f	namespace:YAML::Utils
WriteCodePoint	lib/yaml-cpp/src/emitterutils.cpp	/^			void WriteCodePoint(ostream& out, int codePoint) {$/;"	f	namespace:YAML::Utils::__anon127
WriteComment	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteComment(ostream& out, const std::string& str, int postCommentIndent)$/;"	f	namespace:YAML::Utils
WriteDoubleQuoteEscapeSequence	lib/yaml-cpp/src/emitterutils.cpp	/^			void WriteDoubleQuoteEscapeSequence(ostream& out, int codePoint) {$/;"	f	namespace:YAML::Utils::__anon127
WriteDoubleQuotedString	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteDoubleQuotedString(ostream& out, const std::string& str, bool escapeNonAscii)$/;"	f	namespace:YAML::Utils
WriteIntegralType	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& Emitter::WriteIntegralType(T value)$/;"	f	class:YAML::Emitter
WriteLiteralString	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteLiteralString(ostream& out, const std::string& str, int indent)$/;"	f	namespace:YAML::Utils
WriteSettings	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::WriteSettings() {$/;"	f	class:color_classifier::ClassificationWindow
WriteSettings	tools/color_classifier/src/main_window.cpp	/^  void MainWindow::WriteSettings() {$/;"	f	class:color_classifier::MainWindow
WriteSingleQuotedString	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteSingleQuotedString(ostream& out, const std::string& str)$/;"	f	namespace:YAML::Utils
WriteStreamable	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& Emitter::WriteStreamable(T value)$/;"	f	class:YAML::Emitter
WriteString	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteString(ostream& out, const std::string& str, bool inFlow, bool escapeNonAscii)$/;"	f	namespace:YAML::Utils
WriteTag	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteTag(ostream& out, const std::string& str, bool verbatim)$/;"	f	namespace:YAML::Utils
WriteTagWithPrefix	lib/yaml-cpp/src/emitterutils.cpp	/^		bool WriteTagWithPrefix(ostream& out, const std::string& prefix, const std::string& tag)$/;"	f	namespace:YAML::Utils
Wslow	particle_filters/RMCL_particle_filter.hpp	/^    double Wslow;$/;"	m	class:RMCLParticleFilter
X	core/common/NMatrix.h	/^	float*	X;			\/\/ matrix pointer$/;"	m	class:NMatrix
X	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  SigmaPointMatrix X;$/;"	m	class:SRUnscentedKalmanFilter
X	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  SigmaPointMatrix X;$/;"	m	class:UnscentedKalmanFilter
X	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  SigmaPointMatrix X;$/;"	m	class:UnscentedKalmanFilter
X	particle_filters/MCL_particle_filter.hpp	/^    ParticleStateSet X;$/;"	m	class:MCLParticleFilter
X	particle_filters/RMCL_particle_filter.hpp	/^    ParticleStateSet X;$/;"	m	class:RMCLParticleFilter
X00	core/memory/OpponentBlock.h	/^    X00,$/;"	m	struct:OpponentModel
X1	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  SigmaPointMatrix X1;$/;"	m	class:UnscentedKalmanFilter
X10	core/memory/OpponentBlock.h	/^    X10,$/;"	m	struct:OpponentModel
X2	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  SigmaPointMatrix X2;$/;"	m	class:SRUnscentedKalmanFilter
X2	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  SigmaPointMatrix X2;$/;"	m	class:UnscentedKalmanFilter
X20	core/memory/OpponentBlock.h	/^    X20,$/;"	m	struct:OpponentModel
X30	core/memory/OpponentBlock.h	/^    X30,$/;"	m	struct:OpponentModel
XYZ_Coord	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      XYZ_Coord() {$/;"	f	class:XYZ_Coord
XYZ_Coord	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      XYZ_Coord(float nx, float ny, float nz) {$/;"	f	class:XYZ_Coord
XYZ_Coord	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^class XYZ_Coord {$/;"	c
X_bar	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  SigmaPointMatrix X_bar;$/;"	m	class:UnscentedKalmanFilter
X_bar	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  SigmaPointMatrix X_bar;$/;"	m	class:UnscentedKalmanFilter
X_bar	particle_filters/MCL_particle_filter.hpp	/^    ParticleStateSet X_bar;$/;"	m	class:MCLParticleFilter
X_bar	particle_filters/RMCL_particle_filter.hpp	/^    ParticleStateSet X_bar;$/;"	m	class:RMCLParticleFilter
X_bar_star	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  SigmaPointMatrix X_bar_star;$/;"	m	class:UnscentedKalmanFilter
X_star	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  SigmaPointMatrix X_star;$/;"	m	class:SRUnscentedKalmanFilter
Y 	lib/lua/test/factorial.lua	/^Y = function (g)$/;"	f
YAML	lib/yaml-cpp/include/yaml-cpp/aliasmanager.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/anchor.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/binary.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/contrib/anchordict.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/eventhandler.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/iterator.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/ltnode.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/mark.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/node.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/nodereadimpl.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/noncopyable.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/null.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/parser.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/stlemitter.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/stlnode.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/include/yaml-cpp/traits.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/aliasmanager.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/binary.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/collectionstack.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/contrib/graphbuilder.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/conversion.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/directives.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/directives.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/emitfromevents.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/emitter.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/emitterstate.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/emitterstate.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/emitterutils.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/emitterutils.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/exp.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/exp.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/indentation.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/iterator.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/iterpriv.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/node.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/nodebuilder.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/nodebuilder.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/nodeownership.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/nodeownership.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/null.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/ostream.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/parser.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/ptr_vector.h	/^namespace YAML {$/;"	n
YAML	lib/yaml-cpp/src/regex.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/regex.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/regeximpl.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/scanner.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/scanner.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/scanscalar.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/scanscalar.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/scantag.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/scantag.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/scantoken.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/setting.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/simplekey.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/singledocparser.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/singledocparser.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/stream.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/stream.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/streamcharsource.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/stringsource.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/tag.cpp	/^namespace YAML$/;"	n	file:
YAML	lib/yaml-cpp/src/tag.h	/^namespace YAML$/;"	n
YAML	lib/yaml-cpp/src/token.h	/^namespace YAML$/;"	n
YAMLDirective	lib/yaml-cpp/test/old-api/spectests.cpp	/^		TEST YAMLDirective()$/;"	f	namespace:Test::Spec
YAML_ASSERT	lib/yaml-cpp/test/old-api/spectests.cpp	/^#define YAML_ASSERT(/;"	d	file:
YAML_CONFIG_H	core/common/YamlConfig.h	/^#define YAML_CONFIG_H$/;"	d
YAML_CPP_API	lib/yaml-cpp/include/yaml-cpp/dll.h	/^		#define YAML_CPP_API /;"	d
YAML_CPP_API	lib/yaml-cpp/include/yaml-cpp/dll.h	/^#define YAML_CPP_API$/;"	d
YAML_CPP_API	lib/yaml-cpp/include/yaml-cpp/dll.h	/^#undef YAML_CPP_API$/;"	d
YAML_DESERIALIZE	core/common/YamlConfig.h	/^#define YAML_DESERIALIZE(/;"	d
YAML_DESERIALIZE_PTR	core/common/YamlConfig.h	/^#define YAML_DESERIALIZE_PTR(/;"	d
YAML_DIRECTIVE_ARGS	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const YAML_DIRECTIVE_ARGS    = "YAML directives must have exactly one argument";$/;"	m	namespace:YAML::ErrorMsg
YAML_H_62B23520_7C8E_11DE_8A39_0800200C9A66	lib/yaml-cpp/include/yaml-cpp/yaml.h	/^#define YAML_H_62B23520_7C8E_11DE_8A39_0800200C9A66$/;"	d
YAML_MAJOR_VERSION	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const YAML_MAJOR_VERSION     = "YAML major version too large";$/;"	m	namespace:YAML::ErrorMsg
YAML_PREFETCH_SIZE	lib/yaml-cpp/src/stream.cpp	/^#define YAML_PREFETCH_SIZE /;"	d	file:
YAML_SERIALIZE	core/common/YamlConfig.h	/^#define YAML_SERIALIZE(/;"	d
YAML_SERIALIZE_PTR	core/common/YamlConfig.h	/^#define YAML_SERIALIZE_PTR(/;"	d
YAML_VERSION	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const YAML_VERSION           = "bad YAML version: ";$/;"	m	namespace:YAML::ErrorMsg
YCrCb	vision_testing/src/vision_testing.cpp	/^  YCrCb()$/;"	f	class:YCrCb
YCrCb	vision_testing/src/vision_testing.cpp	/^  YCrCb(unsigned char Y, unsigned char Cr, unsigned char Cb)$/;"	f	class:YCrCb
YCrCb	vision_testing/src/vision_testing.cpp	/^class YCrCb$/;"	c	file:
YELLOW	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    YELLOW,$/;"	e	enum:color_classifier::Color
YELLOW	vision_testing/src/vision_testing.cpp	/^  YELLOW,$/;"	e	enum:FullColor	file:
YELLOW_BLUE	core/vision/BeaconDetector.h	/^    YELLOW_BLUE,$/;"	e	enum:BeaconDetector::ColorTransition
YELLOW_BLUE	vision_testing/src/vision_testing.cpp	/^  YELLOW_BLUE,$/;"	e	enum:ColorTransition	file:
YELLOW_BLUE_BEACON	core/vision/BeaconDetector.h	/^    YELLOW_BLUE_BEACON,$/;"	e	enum:BeaconDetector::BeaconType
YELLOW_BLUE_BEACON	vision_testing/src/vision_testing.cpp	/^  YELLOW_BLUE_BEACON,$/;"	e	enum:BeaconType	file:
YELLOW_PINK	core/vision/BeaconDetector.h	/^    YELLOW_PINK,$/;"	e	enum:BeaconDetector::ColorTransition
YELLOW_PINK	vision_testing/src/vision_testing.cpp	/^  YELLOW_PINK,$/;"	e	enum:ColorTransition	file:
YELLOW_PINK_BEACON	core/vision/BeaconDetector.h	/^    YELLOW_PINK_BEACON,$/;"	e	enum:BeaconDetector::BeaconType
YELLOW_PINK_BEACON	vision_testing/src/vision_testing.cpp	/^  YELLOW_PINK_BEACON,$/;"	e	enum:BeaconType	file:
YELLOW_RED	vision_testing/src/vision_testing.cpp	/^  YELLOW_RED,$/;"	e	enum:FullColor	file:
YELLOW_WHITE	core/vision/BeaconDetector.h	/^    YELLOW_WHITE,$/;"	e	enum:BeaconDetector::ColorTransition
YELLOW_WHITE	vision_testing/src/vision_testing.cpp	/^  YELLOW_WHITE,$/;"	e	enum:ColorTransition	file:
YUV	build/include/tool/annotations/AnnotationAnalyzer.h	/^    YUV(unsigned char _y, unsigned char _u, unsigned char _v, Color _color) {$/;"	f	struct:YUV
YUV	build/include/tool/annotations/AnnotationAnalyzer.h	/^struct YUV {$/;"	s
YUV	core/vision/structures/YUV.h	/^struct YUV {$/;"	s
YUV	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    YUV(unsigned char _y, unsigned char _u, unsigned char _v, Color _color) {$/;"	f	struct:YUV
YUV	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^struct YUV {$/;"	s
YUV2B	vision_testing/include/vision_testing/vision_testing.hpp	/^#define YUV2B(/;"	d
YUV2G	vision_testing/include/vision_testing/vision_testing.hpp	/^#define YUV2G(/;"	d
YUV2R	vision_testing/include/vision_testing/vision_testing.hpp	/^#define YUV2R(/;"	d
YUV422	core/common/ColorSpaces.h	/^struct YUV422 {$/;"	s
YUV422_TO_RGB	core/common/ColorSpaces.h	/^inline void YUV422_TO_RGB(YUV422 uyvy, RGB* rgb1, RGB* rgb2) {$/;"	f
YUV444	core/common/ColorSpaces.h	/^struct YUV444 {$/;"	s
YUV444_TO_RGB	core/common/ColorSpaces.h	/^inline RGB YUV444_TO_RGB (YUV444 yuv) {$/;"	f
YUV444_TO_RGB	core/common/ColorSpaces.h	/^inline RGB YUV444_TO_RGB (int y, int u, int v) {$/;"	f
YUV_H	core/vision/structures/YUV.h	/^#define YUV_H$/;"	d
Y_star	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  MeasurementPointMatrix Y_star;$/;"	m	class:SRUnscentedKalmanFilter
YaMatrix	core/math/YaMatrix.h	/^  YaMatrix(V a11, V a12, V a13, V a21, V a22, V a23, V a31, V a32, V a33) : M(3), N(3), v(3, YaVector<V>(3, V()))$/;"	f	class:YaMatrix
YaMatrix	core/math/YaMatrix.h	/^  YaMatrix(int M, int N, V diagonal = V()) : M(M), N(N), v(M, YaVector<V>(N, V()))$/;"	f	class:YaMatrix
YaMatrix	core/math/YaMatrix.h	/^class YaMatrix$/;"	c
YaVector	core/math/YaMatrix.h	/^  YaVector(V x, V y, V z) : std::vector<V>(3), N(3)$/;"	f	class:YaVector
YaVector	core/math/YaMatrix.h	/^  YaVector(const YaVector<V>& other) : std::vector<V>(other)$/;"	f	class:YaVector
YaVector	core/math/YaMatrix.h	/^  YaVector(size_t entries, const V& defaultValue)$/;"	f	class:YaVector
YaVector	core/math/YaMatrix.h	/^class YaVector : public std::vector<V>$/;"	c
YamlConfig	core/common/YamlConfig.h	/^class YamlConfig {$/;"	c
Yellow	build/include/tool/UTOpenGL/Colors.cpp	/^RGB Colors::Yellow = TORGB(255,255,0);$/;"	m	class:Colors	file:
Yellow	build/include/tool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
Yellow	tools/UTNaoTool/UTOpenGL/Colors.cpp	/^RGB Colors::Yellow = TORGB(255,255,0);$/;"	m	class:Colors	file:
Yellow	tools/UTNaoTool/UTOpenGL/Colors.h	/^    static RGB Red, Orange, Yellow, Green, Blue, Indigo, Violet, Brown, Cyan, Magenta;$/;"	m	class:Colors
YesNoBool	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		YesNoBool,  \/\/ yes, no$/;"	e	enum:YAML::EMITTER_MANIP
Yuv	tools/color_classifier/include/color_classifier/classification_window.hpp	/^  struct Yuv {$/;"	s	namespace:color_classifier
Yuv422	core/common/ColorConversion.h	/^  struct Yuv422 {$/;"	s	namespace:color
Yuv444	core/common/ColorConversion.h	/^  struct Yuv444 {$/;"	s	namespace:color
Z	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  SigmaPointMatrix Z;$/;"	m	class:UnscentedKalmanFilter
Z	lib/lua/src/lundump.c	/^ ZIO* Z;$/;"	m	struct:__anon100	file:
Z1	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  SigmaPointMatrix Z1;$/;"	m	class:UnscentedKalmanFilter
Z2	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  SigmaPointMatrix Z2;$/;"	m	class:UnscentedKalmanFilter
ZALLOC	lib/zlib/zutil.h	/^#define ZALLOC(/;"	d
ZCONF_H	lib/zlib/zconf.h	/^#define ZCONF_H$/;"	d
ZERO_INDENT_IN_BLOCK	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		const char * const ZERO_INDENT_IN_BLOCK   = "cannot set zero indentation for a block scalar";$/;"	m	namespace:YAML::ErrorMsg
ZEXPORT	lib/zlib/zconf.h	/^#      define ZEXPORT /;"	d
ZEXPORT	lib/zlib/zconf.h	/^#    define ZEXPORT /;"	d
ZEXPORT	lib/zlib/zconf.h	/^#  define ZEXPORT$/;"	d
ZEXPORTVA	lib/zlib/zconf.h	/^#      define ZEXPORTVA /;"	d
ZEXPORTVA	lib/zlib/zconf.h	/^#  define ZEXPORTVA$/;"	d
ZEXTERN	lib/zlib/zconf.h	/^#        define ZEXTERN /;"	d
ZEXTERN	lib/zlib/zconf.h	/^#  define ZEXTERN /;"	d
ZFREE	lib/zlib/zutil.h	/^#define ZFREE(/;"	d
ZIO	lib/lua/src/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
ZLIB_H	lib/zlib/zlib.h	/^#define ZLIB_H$/;"	d
ZLIB_INTERNAL	lib/zlib/compress.c	/^#define ZLIB_INTERNAL$/;"	d	file:
ZLIB_INTERNAL	lib/zlib/gzguts.h	/^#  define ZLIB_INTERNAL /;"	d
ZLIB_INTERNAL	lib/zlib/gzguts.h	/^#  define ZLIB_INTERNAL$/;"	d
ZLIB_INTERNAL	lib/zlib/uncompr.c	/^#define ZLIB_INTERNAL$/;"	d	file:
ZLIB_INTERNAL	lib/zlib/zutil.h	/^#  define ZLIB_INTERNAL /;"	d
ZLIB_INTERNAL	lib/zlib/zutil.h	/^#  define ZLIB_INTERNAL$/;"	d
ZLIB_VERNUM	lib/zlib/zlib.h	/^#define ZLIB_VERNUM /;"	d
ZLIB_VERSION	lib/zlib/zlib.h	/^#define ZLIB_VERSION /;"	d
ZLIB_VER_MAJOR	lib/zlib/zlib.h	/^#define ZLIB_VER_MAJOR /;"	d
ZLIB_VER_MINOR	lib/zlib/zlib.h	/^#define ZLIB_VER_MINOR /;"	d
ZLIB_VER_REVISION	lib/zlib/zlib.h	/^#define ZLIB_VER_REVISION /;"	d
ZLIB_VER_SUBREVISION	lib/zlib/zlib.h	/^#define ZLIB_VER_SUBREVISION /;"	d
ZMPF	core/motion/rswalk2014/BodyModel.hpp	/^      float ZMPF;$/;"	m	class:BodyModel
ZMPL	core/motion/rswalk2014/BodyModel.hpp	/^      float ZMPL;$/;"	m	class:BodyModel
ZUTIL_H	lib/zlib/zutil.h	/^#define ZUTIL_H$/;"	d
Z_ASCII	lib/zlib/zlib.h	/^#define Z_ASCII /;"	d
Z_BEST_COMPRESSION	lib/zlib/zlib.h	/^#define Z_BEST_COMPRESSION /;"	d
Z_BEST_SPEED	lib/zlib/zlib.h	/^#define Z_BEST_SPEED /;"	d
Z_BINARY	lib/zlib/zlib.h	/^#define Z_BINARY /;"	d
Z_BLOCK	lib/zlib/zlib.h	/^#define Z_BLOCK /;"	d
Z_BUF_ERROR	lib/zlib/zlib.h	/^#define Z_BUF_ERROR /;"	d
Z_DATA_ERROR	lib/zlib/zlib.h	/^#define Z_DATA_ERROR /;"	d
Z_DEFAULT_COMPRESSION	lib/zlib/zlib.h	/^#define Z_DEFAULT_COMPRESSION /;"	d
Z_DEFAULT_STRATEGY	lib/zlib/zlib.h	/^#define Z_DEFAULT_STRATEGY /;"	d
Z_DEFLATED	lib/zlib/zlib.h	/^#define Z_DEFLATED /;"	d
Z_ERRNO	lib/zlib/zlib.h	/^#define Z_ERRNO /;"	d
Z_FILTERED	lib/zlib/zlib.h	/^#define Z_FILTERED /;"	d
Z_FINISH	lib/zlib/zlib.h	/^#define Z_FINISH /;"	d
Z_FIXED	lib/zlib/zlib.h	/^#define Z_FIXED /;"	d
Z_FULL_FLUSH	lib/zlib/zlib.h	/^#define Z_FULL_FLUSH /;"	d
Z_HAVE_UNISTD_H	lib/zlib/zconf.h	/^#  define Z_HAVE_UNISTD_H$/;"	d
Z_HUFFMAN_ONLY	lib/zlib/zlib.h	/^#define Z_HUFFMAN_ONLY /;"	d
Z_MEM_ERROR	lib/zlib/zlib.h	/^#define Z_MEM_ERROR /;"	d
Z_NEED_DICT	lib/zlib/zlib.h	/^#define Z_NEED_DICT /;"	d
Z_NO_COMPRESSION	lib/zlib/zlib.h	/^#define Z_NO_COMPRESSION /;"	d
Z_NO_FLUSH	lib/zlib/zlib.h	/^#define Z_NO_FLUSH /;"	d
Z_NULL	lib/zlib/zlib.h	/^#define Z_NULL /;"	d
Z_OK	lib/zlib/zlib.h	/^#define Z_OK /;"	d
Z_PARTIAL_FLUSH	lib/zlib/zlib.h	/^#define Z_PARTIAL_FLUSH /;"	d
Z_RLE	lib/zlib/zlib.h	/^#define Z_RLE /;"	d
Z_STREAM_END	lib/zlib/zlib.h	/^#define Z_STREAM_END /;"	d
Z_STREAM_ERROR	lib/zlib/zlib.h	/^#define Z_STREAM_ERROR /;"	d
Z_SYNC_FLUSH	lib/zlib/zlib.h	/^#define Z_SYNC_FLUSH /;"	d
Z_TEXT	lib/zlib/zlib.h	/^#define Z_TEXT /;"	d
Z_TREES	lib/zlib/zlib.h	/^#define Z_TREES /;"	d
Z_UNKNOWN	lib/zlib/zlib.h	/^#define Z_UNKNOWN /;"	d
Z_VERSION_ERROR	lib/zlib/zlib.h	/^#define Z_VERSION_ERROR /;"	d
Z_bar	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  SigmaPointMatrix Z_bar;$/;"	m	class:UnscentedKalmanFilter
Z_bar	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  SigmaPointMatrix Z_bar;$/;"	m	class:UnscentedKalmanFilter
Zero	core/python/cfgstiff.py	/^Zero = [0] * core.NUM_JOINTS$/;"	v
ZeroKneeAnklePitch	core/python/cfgstiff.py	/^ZeroKneeAnklePitch = [0] * core.NUM_JOINTS$/;"	v
ZeroPtOne	core/python/cfgstiff.py	/^ZeroPtOne = [0] * core.NUM_JOINTS$/;"	v
ZeroPtThree	core/python/cfgstiff.py	/^ZeroPtThree = [0] * core.NUM_JOINTS$/;"	v
Zio	lib/lua/src/lzio.h	/^struct Zio {$/;"	s
Zoom	build/include/tool/annotations/SelectionMode.h	/^    Zoom,$/;"	e	enum:SelectionMode
Zoom	tools/UTNaoTool/annotations/SelectionMode.h	/^    Zoom,$/;"	e	enum:SelectionMode
_	lib/yaml-cpp/test/old-api/spectests.cpp	/^			Map _;$/;"	m	struct:Test::Spec::StringMap	file:
_ALL_SOURCE	build/pythonswig/pyconfig.h	/^# define _ALL_SOURCE /;"	d
_Alias	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		_Alias(const std::string& content_): content(content_) {}$/;"	f	struct:YAML::_Alias
_Alias	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	struct _Alias {$/;"	s	namespace:YAML
_Anchor	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		_Anchor(const std::string& content_): content(content_) {}$/;"	f	struct:YAML::_Anchor
_Anchor	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	struct _Anchor {$/;"	s	namespace:YAML
_BSD_TYPES	build/pythonswig/pyconfig.h	/^#define _BSD_TYPES /;"	d
_CELLS:draw	lib/lua/test/life.lua	/^function _CELLS:draw()$/;"	f
_CELLS:evolve	lib/lua/test/life.lua	/^function _CELLS:evolve(next)$/;"	f
_CELLS:spawn	lib/lua/test/life.lua	/^function _CELLS:spawn(shape,left,top)$/;"	f
_COLOUR_SPACES_H	core/common/ColorSpaces.h	/^#define _COLOUR_SPACES_H$/;"	d
_COREUDPSOCKET_H_	core/communications/ThreadedUDPSocket.h	/^#define _COREUDPSOCKET_H_$/;"	d
_Comment	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		_Comment(const std::string& content_): content(content_) {}$/;"	f	struct:YAML::_Comment
_Comment	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	struct _Comment {$/;"	s	namespace:YAML
_Create	lib/yaml-cpp/src/nodeownership.cpp	/^	Node& NodeOwnership::_Create()$/;"	f	class:YAML::NodeOwnership
_CreateNewAnchor	lib/yaml-cpp/src/aliasmanager.cpp	/^	anchor_t AliasManager::_CreateNewAnchor()$/;"	f	class:YAML::AliasManager
_DARWIN_C_SOURCE	build/pythonswig/pyconfig.h	/^#define _DARWIN_C_SOURCE /;"	d
_DIV	interfaces/sim_spark/Random.h	/^   static const long   _DIV  = 1+(_M-1)\/_NTAB;$/;"	m	class:Random
_Error	tools/behaviorSim/cma.py	/^class _Error(Exception):$/;"	c
_F	interfaces/sim_spark/Random.h	/^   static const float _F    = 1. \/ _M;$/;"	m	class:Random
_FADBAD_H	core/motion/rswalk2014/FADBAD++/fadbad.h	/^#define _FADBAD_H$/;"	d
_FADIFF_H	core/motion/rswalk2014/FADBAD++/fadiff.h	/^#define _FADIFF_H$/;"	d
_FIELD_H	core/common/Bowdoin14Field.h	/^#define _FIELD_H$/;"	d
_FIELD_H	core/common/Field.h	/^#define _FIELD_H$/;"	d
_FIELD_H	core/common/RC2013Field.h	/^#define _FIELD_H$/;"	d
_FIELD_H	core/common/UTField.h	/^#define _FIELD_H$/;"	d
_FILE_OFFSET_BITS	build/pythonswig/pyconfig.h	/^#define _FILE_OFFSET_BITS /;"	d
_FILE_OFFSET_BITS	lib/zlib/gzguts.h	/^#    undef _FILE_OFFSET_BITS$/;"	d
_FindFromNodeAtIndex	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^		_FindFromNodeAtIndex(const Node& node, const T& key): pRet(node.FindAtIndex(static_cast<std::size_t>(key))) {}$/;"	f	struct:YAML::_FindFromNodeAtIndex
_FindFromNodeAtIndex	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^		_FindFromNodeAtIndex(const Node&, const T&): pRet(0) {}$/;"	f	struct:YAML::_FindFromNodeAtIndex
_FindFromNodeAtIndex	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^	struct _FindFromNodeAtIndex {$/;"	s	namespace:YAML
_FindFromNodeAtIndex	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^	struct _FindFromNodeAtIndex<T, true> {$/;"	s	namespace:YAML
_GEOMETRY_H	core/math/Geometry.h	/^#define _GEOMETRY_H$/;"	d
_GNU_SOURCE	build/pythonswig/pyconfig.h	/^# define _GNU_SOURCE /;"	d
_GNU_SOURCE	build/pythonswig/pyconfig.h	/^#define _GNU_SOURCE /;"	d
_HEIGHT	build/include/tool/simulation/CoachSimulation.cpp	/^#define _HEIGHT /;"	d	file:
_HEIGHT	tools/UTNaoTool/simulation/CoachSimulation.cpp	/^#define _HEIGHT /;"	d	file:
_Indent	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		_Indent(int value_): value(value_) {}$/;"	f	struct:YAML::_Indent
_Indent	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	struct _Indent {$/;"	s	namespace:YAML
_InertialFilter_h_DEFINED	core/sensor/InertialFilter.h	/^#define _InertialFilter_h_DEFINED$/;"	d
_IsAliased	lib/yaml-cpp/src/nodeownership.cpp	/^	bool NodeOwnership::_IsAliased(const Node& node) const$/;"	f	class:YAML::NodeOwnership
_LARGEFILE64_SOURCE	lib/zlib/zconf.h	/^#  undef _LARGEFILE64_SOURCE$/;"	d
_LARGEFILE_SOURCE	build/pythonswig/pyconfig.h	/^#define _LARGEFILE_SOURCE /;"	d
_LARGEFILE_SOURCE	lib/zlib/gzguts.h	/^#    define _LARGEFILE_SOURCE /;"	d
_M	interfaces/sim_spark/Random.h	/^   static const long   _M    = 0x7fffffff; \/\/ 2147483647 (Mersenne prime 2^31-1)$/;"	m	class:Random
_MarkAsAliased	lib/yaml-cpp/src/nodeownership.cpp	/^	void NodeOwnership::_MarkAsAliased(const Node& node)$/;"	f	class:YAML::NodeOwnership
_NETBSD_SOURCE	build/pythonswig/pyconfig.h	/^#define _NETBSD_SOURCE /;"	d
_NMatrix_h_DEFINED	core/common/NMatrix.h	/^#define _NMatrix_h_DEFINED$/;"	d
_NTAB	interfaces/sim_spark/Random.h	/^   static const short  _NTAB = 32;         \/\/ arbitrary length of shuffle table$/;"	m	class:Random
_NaoCamera_H_	core/imageCapture/NaoCamera.h	/^#define _NaoCamera_H_$/;"	d
_Null	lib/yaml-cpp/include/yaml-cpp/null.h	/^	struct YAML_CPP_API _Null {};$/;"	s	namespace:YAML
_ORIENT	build/include/tool/simulation/CoachSimulation.cpp	/^#define _ORIENT /;"	d	file:
_ORIENT	build/include/tool/simulation/GoalieSimulation.cpp	/^#define _ORIENT /;"	d	file:
_ORIENT	tools/UTNaoTool/simulation/CoachSimulation.cpp	/^#define _ORIENT /;"	d	file:
_ORIENT	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^#define _ORIENT /;"	d	file:
_POSIX_C_SOURCE	build/pythonswig/pyconfig.h	/^#define _POSIX_C_SOURCE /;"	d
_POSIX_PTHREAD_SEMANTICS	build/pythonswig/pyconfig.h	/^# define _POSIX_PTHREAD_SEMANTICS /;"	d
_PTRDIFF_T_DEFINED	lib/zlib/zutil.h	/^#      define _PTRDIFF_T_DEFINED$/;"	d
_Precision	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^        _Precision(int floatPrecision_, int doublePrecision_): floatPrecision(floatPrecision_), doublePrecision(doublePrecision_) {}$/;"	f	struct:YAML::_Precision
_Precision	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^    struct _Precision {$/;"	s	namespace:YAML
_ReadAheadTo	lib/yaml-cpp/src/stream.cpp	/^	bool Stream::_ReadAheadTo(size_t i) const$/;"	f	class:YAML::Stream
_Set	lib/yaml-cpp/src/emitterstate.h	/^	void EmitterState::_Set(Setting<T>& fmt, T value, FMT_SCOPE scope) {$/;"	f	class:YAML::EmitterState
_TANDEM_SOURCE	build/pythonswig/pyconfig.h	/^# define _TANDEM_SOURCE /;"	d
_Tag	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		explicit _Tag(const std::string& prefix_, const std::string& content_, Type::value type_)$/;"	f	struct:YAML::_Tag
_Tag	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^	struct _Tag {$/;"	s	namespace:YAML
_UKF4_h_DEFINED	core/opponents/UKF4.h	/^#define _UKF4_h_DEFINED$/;"	d
_VmB	core/python/UTdebug.py	/^def _VmB(VmKey):$/;"	f
_WORLD_OBJECT_H	core/common/WorldObject.h	/^#define _WORLD_OBJECT_H$/;"	d
_X	build/include/tool/simulation/CoachSimulation.cpp	/^#define _X /;"	d	file:
_X	build/include/tool/simulation/GoalieSimulation.cpp	/^#define _X /;"	d	file:
_X	tools/UTNaoTool/simulation/CoachSimulation.cpp	/^#define _X /;"	d	file:
_X	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^#define _X /;"	d	file:
_XOPEN_SOURCE	build/pythonswig/pyconfig.h	/^#define _XOPEN_SOURCE /;"	d
_XOPEN_SOURCE_EXTENDED	build/pythonswig/pyconfig.h	/^#define _XOPEN_SOURCE_EXTENDED /;"	d
_Y	build/include/tool/simulation/CoachSimulation.cpp	/^#define _Y /;"	d	file:
_Y	build/include/tool/simulation/GoalieSimulation.cpp	/^#define _Y /;"	d	file:
_Y	tools/UTNaoTool/simulation/CoachSimulation.cpp	/^#define _Y /;"	d	file:
_Y	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^#define _Y /;"	d	file:
__BSD_VISIBLE	build/pythonswig/pyconfig.h	/^#define __BSD_VISIBLE /;"	d
__EXTENSIONS__	build/pythonswig/pyconfig.h	/^# define __EXTENSIONS__ /;"	d
__EXTENSIONS__	build/pythonswig/pyconfig.h	/^#define __EXTENSIONS__ /;"	d
__MassCalibration_H__	core/common/MassCalibration.h	/^#define __MassCalibration_H__$/;"	d
__Matrix2x2_h__	core/math/Matrix2x2.h	/^#define __Matrix2x2_h__$/;"	d
__Pose2D_h__	core/math/Pose2D.h	/^#define __Pose2D_h__$/;"	d
__RANGE_H__	core/math/Range.h	/^#define __RANGE_H__$/;"	d
__RingBufferWithSum_h_	core/common/RingBufferWithSum.h	/^#define __RingBufferWithSum_h_$/;"	d
__RingBuffer_h_	core/common/RingBuffer.h	/^#define __RingBuffer_h_$/;"	d
__RingQueueWithSum_h_	core/common/RingQueueWithSum.h	/^#define __RingQueueWithSum_h_$/;"	d
__RingQueue_h_	core/common/RingQueue.h	/^#define __RingQueue_h_$/;"	d
__RobotDimensions_H__	core/common/RobotDimensions.h	/^#define __RobotDimensions_H__$/;"	d
__STRICT_ANSI__	core/imageCapture/V4L2Constants.h	/^#define __STRICT_ANSI__$/;"	d
__STRICT_ANSI__	core/imageCapture/V4L2Constants.h	/^#undef __STRICT_ANSI__$/;"	d
__TOOL_PACKET_DATA_LENGTH	core/common/ToolPacket.h	/^#define __TOOL_PACKET_DATA_LENGTH /;"	d
__TextLoggerLevels	core/memory/TextLogger.cpp	/^char __TextLoggerLevels[0] = { };$/;"	v
__UTNAOTOOL_VISION_WINDOW_H__	build/include/tool/VisionWindow.h	/^#define __UTNAOTOOL_VISION_WINDOW_H__$/;"	d
__UTNAOTOOL_VISION_WINDOW_H__	tools/UTNaoTool/VisionWindow.h	/^#define __UTNAOTOOL_VISION_WINDOW_H__$/;"	d
__Vector2_h__	core/math/Vector2.h	/^#define __Vector2_h__$/;"	d
__Vector3_h__	core/math/Vector3.h	/^#define __Vector3_h__$/;"	d
__add__	core/python/geometry.py	/^  def __add__(self, other):$/;"	m	class:Point2D	file:
__builtins__	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
__call__	tools/behaviorSim/cma.py	/^    def __call__(self):$/;"	m	class:ElapsedTime	file:
__call__	tools/behaviorSim/cma.py	/^    def __call__(self, X, fit, func, ask=None, args=()):$/;"	m	class:NoiseHandler	file:
__call__	tools/behaviorSim/cma.py	/^    def __call__(self, es):$/;"	m	class:CMAStopDict	file:
__call__	tools/behaviorSim/cma.py	/^    def __call__(self, key, default=None, loc=None):$/;"	m	class:Options	file:
__call__	tools/behaviorSim/cma.py	/^    def __call__(self, x, archive, gp):$/;"	m	class:BoundPenalty	file:
__call__	tools/behaviorSim/cma.py	/^    def __call__(self, x, inverse=False): # function when calling an object$/;"	m	class:Rotation	file:
__contains__	tools/behaviorSim/cma.py	/^    def __contains__(self, value):$/;"	m	class:DerivedDictBase	file:
__delitem__	tools/behaviorSim/cma.py	/^    def __delitem__(self, key):$/;"	m	class:DerivedDictBase	file:
__delitem__	tools/behaviorSim/cma.py	/^    def __delitem__(self, key):$/;"	m	class:SolutionDict	file:
__div__	core/python/geometry.py	/^  def __div__(self, other):$/;"	m	class:Point2D	file:
__docformat__	tools/behaviorSim/cma.py	/^__docformat__ = "reStructuredText"  # this hides some comments entirely?$/;"	v
__enable_profiling	core/common/Profiling.cpp	/^static bool __enable_profiling = false;$/;"	v	file:
__getattr__	core/python/memory.py	/^  def __getattr__(self, name):$/;"	m	class:BlockWrapper	file:
__getitem__	core/python/mem_objects.py	/^  def __getitem__(self, i):$/;"	m	class:ObjectAccessor	file:
__getitem__	tools/behaviorSim/cma.py	/^    def __getitem__(self, key):$/;"	m	class:DerivedDictBase	file:
__getitem__	tools/behaviorSim/cma.py	/^    def __getitem__(self, key):$/;"	m	class:SolutionDict	file:
__id	core/common/Profiling.cpp	/^static int __id = FIRST_ID;$/;"	v	file:
__init__	core/python/UTdebug.py	/^  def __init__(self, name, interval=10):$/;"	m	class:Timer
__init__	core/python/geometry.py	/^  def __init__(self, loc=None, angle=None, loc1=None, loc2=None):$/;"	m	class:Line2D
__init__	core/python/geometry.py	/^  def __init__(self, x1, y1, x2, y2):$/;"	m	class:LineSegment
__init__	core/python/geometry.py	/^  def __init__(self, x=None, y=None, r=None, angle=None, p=None):$/;"	m	class:Point2D
__init__	core/python/head.py	/^  def __init__(self, tilt = None, pan = 0.0, time = 2.0):$/;"	m	class:MoveHead
__init__	core/python/mem_objects.py	/^  def __init__(self, func, max_index):$/;"	m	class:ObjectAccessor
__init__	core/python/memory.py	/^  def __init__(self, block):$/;"	m	class:BlockWrapper
__init__	core/python/pose.py	/^  def __init__(self):$/;"	m	class:Sit
__init__	core/python/pose.py	/^  def __init__(self, *args):$/;"	m	class:PoseSequence
__init__	core/python/pose.py	/^  def __init__(self, pose, tilt = 0.0, time = 2.0):$/;"	m	class:ToPoseMoveHead
__init__	core/python/pose.py	/^  def __init__(self, pose, time = 2.0, reverse=False):$/;"	m	class:ToPose
__init__	core/python/pose.py	/^  def __init__(self, time = 3.0):$/;"	m	class:BlockLeft
__init__	core/python/pose.py	/^  def __init__(self, time = 3.0):$/;"	m	class:BlockRight
__init__	core/python/pose.py	/^  def __init__(self, time = 3.0):$/;"	m	class:Squat
__init__	core/python/state_machine.py	/^    def __init__(self, **kwargs):$/;"	m	class:Negate.NegatedEventType
__init__	core/python/state_machine.py	/^  def __init__(self, *states):$/;"	m	class:SimpleStateMachine
__init__	core/python/state_machine.py	/^  def __init__(self, adapter=False, **kwargs):$/;"	m	class:Node
__init__	core/python/state_machine.py	/^  def __init__(self, event, name=None):$/;"	m	class:NegationEvent
__init__	core/python/state_machine.py	/^  def __init__(self, iterations):$/;"	m	class:IterationEvent
__init__	core/python/state_machine.py	/^  def __init__(self, machine=None, **kwargs):$/;"	m	class:MachineNode
__init__	core/python/state_machine.py	/^  def __init__(self, name=None):$/;"	m	class:Event
__init__	core/python/state_machine.py	/^  def __init__(self, node):$/;"	m	class:EventNode
__init__	core/python/state_machine.py	/^  def __init__(self, node, signal):$/;"	m	class:SignalNode
__init__	core/python/state_machine.py	/^  def __init__(self, signal):$/;"	m	class:SignalEvent
__init__	core/python/state_machine.py	/^  def __init__(self, submachine=None, **kwargs):$/;"	m	class:StateMachine
__init__	core/python/state_machine.py	/^  def __init__(self, task):$/;"	m	class:TaskNode
__init__	core/python/state_machine.py	/^  def __init__(self, time):$/;"	m	class:TimeEvent
__init__	core/python/state_machine.py	/^  def __init__(self, time=None):$/;"	m	class:CompletionEvent
__init__	core/python/task.py	/^  def __init__(self, **kwargs):$/;"	m	class:BaseTask
__init__	core/python/task.py	/^  def __init__(self, **kwargs):$/;"	m	class:Task
__init__	core/python/task.py	/^  def __init__(self, *tasks, **kwargs):$/;"	m	class:MultiTask
__init__	core/python/util.py	/^  def __init__(self):$/;"	m	class:Timer
__init__	data/scripts/wireless-monitor.py	/^  def __init__(self):$/;"	m	class:WirelessTester
__init__	install/setup_robot	/^  def __init__(self):$/;"	m	class:Options
__init__	tools/behaviorSim/cma.py	/^    def __init__(self):$/;"	m	class:ElapsedTime
__init__	tools/behaviorSim/cma.py	/^    def __init__(self):$/;"	m	class:FitnessFunctions
__init__	tools/behaviorSim/cma.py	/^    def __init__(self):$/;"	m	class:Rotation
__init__	tools/behaviorSim/cma.py	/^    def __init__(self):$/;"	m	class:SolutionDictOld
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:DerivedDictBase
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SolutionDict
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, N, maxevals=10, aggregate=np.median, reevals=None, epsilon=1e-7, parallel=False):$/;"	m	class:NoiseHandler
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, N, opts, ccovfac=1, verbose=True):$/;"	m	class:CMAParameters
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, bounds=None): $/;"	m	class:BoundPenalty
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, d={}):$/;"	m	class:CMAStopDict
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, dim, scaling=None, typical_x=None, bounds=None, fixed_values=None, tf=None):$/;"	m	class:GenoPheno
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, fct, args=(), seconds=1):$/;"	m	class:TimeIt
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, func, x, args=(), basis=None, name=None, $/;"	m	class:Sections
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, name_prefix=default_prefix, modulo=1, append=False):$/;"	m	class:CMADataLogger
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, name_prefix=default_prefix, modulo=1, append=False):$/;"	m	class:DEAPCMADataLogger
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, s=None, unchecked=False):$/;"	m	class:Options
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, x0, sigma0, inopts = {}):$/;"	m	class:CMAEvolutionStrategy
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, x0, sigma0, randn=np.random.randn):$/;"	m	class:AII
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, x=None, f=np.inf, evals=None):$/;"	m	class:BestSolution
__init__	tools/behaviorSim/cma.py	/^    def __init__(self, xstart, **more_args): $/;"	m	class:OOOptimizer
__iter__	tools/behaviorSim/cma.py	/^    def __iter__(self):$/;"	m	class:DerivedDictBase	file:
__lastid	core/common/Profiling.cpp	/^static int __lastid = __id;$/;"	v	file:
__len__	tools/behaviorSim/cma.py	/^    def __len__(self):$/;"	m	class:DerivedDictBase	file:
__module__	core/python/memory.py	/^__module__ = sys.modules[__name__]$/;"	v
__mul__	core/python/geometry.py	/^  def __mul__(self, other):$/;"	m	class:Point2D	file:
__repr__	core/python/state_machine.py	/^  def __repr__(self):$/;"	m	class:Event	file:
__repr__	core/python/state_machine.py	/^  def __repr__(self):$/;"	m	class:MachineNode	file:
__repr__	core/python/state_machine.py	/^  def __repr__(self):$/;"	m	class:NegationEvent	file:
__repr__	core/python/state_machine.py	/^  def __repr__(self):$/;"	m	class:StateMachine	file:
__repr__	core/python/state_machine.py	/^  def __repr__(self):$/;"	m	class:TaskNode	file:
__repr__	core/python/task.py	/^  def __repr__(self):$/;"	m	class:BaseTask	file:
__repr__	core/python/task.py	/^  def __repr__(self):$/;"	m	class:MultiTask	file:
__setitem__	tools/behaviorSim/cma.py	/^    def __setitem__(self, key, value):$/;"	m	class:DerivedDictBase	file:
__setitem__	tools/behaviorSim/cma.py	/^    def __setitem__(self, key, value):$/;"	m	class:SolutionDict	file:
__str__	core/math/Geometry.cpp	/^const char* Circle::__str__()$/;"	f	class:Circle
__str__	core/math/Geometry.cpp	/^const char* Point2D::__str__()$/;"	f	class:Point2D
__str__	core/math/Geometry.cpp	/^const char* Point3D::__str__()$/;"	f	class:Point3D
__str__	core/python/geometry.py	/^  def __str__(self):$/;"	m	class:Line2D	file:
__str__	core/python/geometry.py	/^  def __str__(self):$/;"	m	class:LineSegment	file:
__str__	core/python/geometry.py	/^  def __str__(self):$/;"	m	class:Point2D	file:
__str__	core/python/state_machine.py	/^  def __str__(self):$/;"	m	class:Event	file:
__str__	core/python/task.py	/^  def __str__(self):$/;"	m	class:BaseTask	file:
__sub__	core/python/geometry.py	/^  def __sub__(self, other):$/;"	m	class:Point2D	file:
__timelists	core/common/Profiling.cpp	/^static std::map<int,TimeList> __timelists;$/;"	v	file:
__times	core/common/Profiling.cpp	/^static std::map<int,timeval> __times;$/;"	v	file:
__version__	tools/behaviorSim/cma.py	/^__version__ = "0.92.04 $Revision: 3322 $ $Date: 2012-11-22 18:05:10 +0100 (Thu, 22 Nov 2012) $" $/;"	v
_addTransition	core/python/state_machine.py	/^  def _addTransition(self, *args):$/;"	m	class:StateMachine
_addstop	tools/behaviorSim/cma.py	/^    def _addstop(self, key, cond, val=None):$/;"	m	class:CMAStopDict
_ae_int32_t_must_be_32_bits_wide	lib/alglib/ap.cpp	/^static char _ae_int32_t_must_be_32_bits_wide[1-2*((int)(sizeof(ae_int32_t))-4)*((int)(sizeof(ae_int32_t))-4)];$/;"	m	namespace:alglib_impl	file:
_ae_int64_t_must_be_64_bits_wide	lib/alglib/ap.cpp	/^static char _ae_int64_t_must_be_64_bits_wide[1-2*((int)(sizeof(ae_int64_t))-8)*((int)(sizeof(ae_int64_t))-8)];$/;"	m	namespace:alglib_impl	file:
_ae_int_t_must_be_pointer_sized	lib/alglib/ap.cpp	/^static char _ae_int_t_must_be_pointer_sized [1-2*((int)(sizeof(ae_int_t))-(int)sizeof(void*))*((int)(sizeof(ae_int_t))-(int)(sizeof(void*)))];  $/;"	m	namespace:alglib_impl	file:
_alglibinternal_pkg_h	lib/alglib/alglibinternal.h	/^#define _alglibinternal_pkg_h$/;"	d
_alglibmisc_pkg_h	lib/alglib/alglibmisc.h	/^#define _alglibmisc_pkg_h$/;"	d
_alloc_counter	lib/alglib/ap.cpp	/^ae_int64_t _alloc_counter = 0;$/;"	m	namespace:alglib_impl	file:
_ap_h	lib/alglib/ap.h	/^#define _ap_h$/;"	d
_apbuffers_clear	lib/alglib/alglibinternal.cpp	/^void _apbuffers_clear(apbuffers* p)$/;"	f	namespace:alglib_impl
_apbuffers_init	lib/alglib/alglibinternal.cpp	/^ae_bool _apbuffers_init(apbuffers* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_apbuffers_init_copy	lib/alglib/alglibinternal.cpp	/^ae_bool _apbuffers_init_copy(apbuffers* dst, apbuffers* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_armijostate_clear	lib/alglib/alglibinternal.cpp	/^void _armijostate_clear(armijostate* p)$/;"	f	namespace:alglib_impl
_armijostate_init	lib/alglib/alglibinternal.cpp	/^ae_bool _armijostate_init(armijostate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_armijostate_init_copy	lib/alglib/alglibinternal.cpp	/^ae_bool _armijostate_init_copy(armijostate* dst, armijostate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_autogkinternalstate_clear	lib/alglib/integration.cpp	/^void _autogkinternalstate_clear(autogkinternalstate* p)$/;"	f	namespace:alglib_impl
_autogkinternalstate_init	lib/alglib/integration.cpp	/^ae_bool _autogkinternalstate_init(autogkinternalstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_autogkinternalstate_init_copy	lib/alglib/integration.cpp	/^ae_bool _autogkinternalstate_init_copy(autogkinternalstate* dst, autogkinternalstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_autogkreport_clear	lib/alglib/integration.cpp	/^void _autogkreport_clear(autogkreport* p)$/;"	f	namespace:alglib_impl
_autogkreport_init	lib/alglib/integration.cpp	/^ae_bool _autogkreport_init(autogkreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_autogkreport_init_copy	lib/alglib/integration.cpp	/^ae_bool _autogkreport_init_copy(autogkreport* dst, autogkreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_autogkreport_owner	lib/alglib/integration.cpp	/^_autogkreport_owner::_autogkreport_owner()$/;"	f	class:alglib::_autogkreport_owner
_autogkreport_owner	lib/alglib/integration.cpp	/^_autogkreport_owner::_autogkreport_owner(const _autogkreport_owner &rhs)$/;"	f	class:alglib::_autogkreport_owner
_autogkreport_owner	lib/alglib/integration.h	/^class _autogkreport_owner$/;"	c	namespace:alglib
_autogkstate_clear	lib/alglib/integration.cpp	/^void _autogkstate_clear(autogkstate* p)$/;"	f	namespace:alglib_impl
_autogkstate_init	lib/alglib/integration.cpp	/^ae_bool _autogkstate_init(autogkstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_autogkstate_init_copy	lib/alglib/integration.cpp	/^ae_bool _autogkstate_init_copy(autogkstate* dst, autogkstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_autogkstate_owner	lib/alglib/integration.cpp	/^_autogkstate_owner::_autogkstate_owner()$/;"	f	class:alglib::_autogkstate_owner
_autogkstate_owner	lib/alglib/integration.cpp	/^_autogkstate_owner::_autogkstate_owner(const _autogkstate_owner &rhs)$/;"	f	class:alglib::_autogkstate_owner
_autogkstate_owner	lib/alglib/integration.h	/^class _autogkstate_owner$/;"	c	namespace:alglib
_barycentricfitreport_clear	lib/alglib/interpolation.cpp	/^void _barycentricfitreport_clear(barycentricfitreport* p)$/;"	f	namespace:alglib_impl
_barycentricfitreport_init	lib/alglib/interpolation.cpp	/^ae_bool _barycentricfitreport_init(barycentricfitreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_barycentricfitreport_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _barycentricfitreport_init_copy(barycentricfitreport* dst, barycentricfitreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_barycentricfitreport_owner	lib/alglib/interpolation.cpp	/^_barycentricfitreport_owner::_barycentricfitreport_owner()$/;"	f	class:alglib::_barycentricfitreport_owner
_barycentricfitreport_owner	lib/alglib/interpolation.cpp	/^_barycentricfitreport_owner::_barycentricfitreport_owner(const _barycentricfitreport_owner &rhs)$/;"	f	class:alglib::_barycentricfitreport_owner
_barycentricfitreport_owner	lib/alglib/interpolation.h	/^class _barycentricfitreport_owner$/;"	c	namespace:alglib
_barycentricinterpolant_clear	lib/alglib/interpolation.cpp	/^void _barycentricinterpolant_clear(barycentricinterpolant* p)$/;"	f	namespace:alglib_impl
_barycentricinterpolant_init	lib/alglib/interpolation.cpp	/^ae_bool _barycentricinterpolant_init(barycentricinterpolant* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_barycentricinterpolant_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _barycentricinterpolant_init_copy(barycentricinterpolant* dst, barycentricinterpolant* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_barycentricinterpolant_owner	lib/alglib/interpolation.cpp	/^_barycentricinterpolant_owner::_barycentricinterpolant_owner()$/;"	f	class:alglib::_barycentricinterpolant_owner
_barycentricinterpolant_owner	lib/alglib/interpolation.cpp	/^_barycentricinterpolant_owner::_barycentricinterpolant_owner(const _barycentricinterpolant_owner &rhs)$/;"	f	class:alglib::_barycentricinterpolant_owner
_barycentricinterpolant_owner	lib/alglib/interpolation.h	/^class _barycentricinterpolant_owner$/;"	c	namespace:alglib
_buffersize	interfaces/sim_spark/decode.h	/^  int _buffersize;$/;"	m	class:base64::Decoder
_buffersize	interfaces/sim_spark/encode.h	/^  int _buffersize;$/;"	m	class:base64::Encoder
_closeModule	interfaces/nao/src/naointerfacemain.cpp	/^ALCALL int _closeModule(  )$/;"	f
_code	interfaces/sim_spark/encode.h	/^  char* _code;$/;"	m	class:base64::Encoder
_createModule	interfaces/nao/src/naointerfacemain.cpp	/^ALCALL int _createModule( boost::shared_ptr<AL::ALBroker> pBroker )$/;"	f
_cvreport_clear	lib/alglib/dataanalysis.cpp	/^void _cvreport_clear(cvreport* p)$/;"	f	namespace:alglib_impl
_cvreport_init	lib/alglib/dataanalysis.cpp	/^ae_bool _cvreport_init(cvreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_cvreport_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _cvreport_init_copy(cvreport* dst, cvreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_dataanalysis_pkg_h	lib/alglib/dataanalysis.h	/^#define _dataanalysis_pkg_h$/;"	d
_decisionforest_clear	lib/alglib/dataanalysis.cpp	/^void _decisionforest_clear(decisionforest* p)$/;"	f	namespace:alglib_impl
_decisionforest_init	lib/alglib/dataanalysis.cpp	/^ae_bool _decisionforest_init(decisionforest* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_decisionforest_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _decisionforest_init_copy(decisionforest* dst, decisionforest* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_decisionforest_owner	lib/alglib/dataanalysis.cpp	/^_decisionforest_owner::_decisionforest_owner()$/;"	f	class:alglib::_decisionforest_owner
_decisionforest_owner	lib/alglib/dataanalysis.cpp	/^_decisionforest_owner::_decisionforest_owner(const _decisionforest_owner &rhs)$/;"	f	class:alglib::_decisionforest_owner
_decisionforest_owner	lib/alglib/dataanalysis.h	/^class _decisionforest_owner$/;"	c	namespace:alglib
_densesolverlsreport_clear	lib/alglib/solvers.cpp	/^void _densesolverlsreport_clear(densesolverlsreport* p)$/;"	f	namespace:alglib_impl
_densesolverlsreport_init	lib/alglib/solvers.cpp	/^ae_bool _densesolverlsreport_init(densesolverlsreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_densesolverlsreport_init_copy	lib/alglib/solvers.cpp	/^ae_bool _densesolverlsreport_init_copy(densesolverlsreport* dst, densesolverlsreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_densesolverlsreport_owner	lib/alglib/solvers.cpp	/^_densesolverlsreport_owner::_densesolverlsreport_owner()$/;"	f	class:alglib::_densesolverlsreport_owner
_densesolverlsreport_owner	lib/alglib/solvers.cpp	/^_densesolverlsreport_owner::_densesolverlsreport_owner(const _densesolverlsreport_owner &rhs)$/;"	f	class:alglib::_densesolverlsreport_owner
_densesolverlsreport_owner	lib/alglib/solvers.h	/^class _densesolverlsreport_owner$/;"	c	namespace:alglib
_densesolverreport_clear	lib/alglib/solvers.cpp	/^void _densesolverreport_clear(densesolverreport* p)$/;"	f	namespace:alglib_impl
_densesolverreport_init	lib/alglib/solvers.cpp	/^ae_bool _densesolverreport_init(densesolverreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_densesolverreport_init_copy	lib/alglib/solvers.cpp	/^ae_bool _densesolverreport_init_copy(densesolverreport* dst, densesolverreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_densesolverreport_owner	lib/alglib/solvers.cpp	/^_densesolverreport_owner::_densesolverreport_owner()$/;"	f	class:alglib::_densesolverreport_owner
_densesolverreport_owner	lib/alglib/solvers.cpp	/^_densesolverreport_owner::_densesolverreport_owner(const _densesolverreport_owner &rhs)$/;"	f	class:alglib::_densesolverreport_owner
_densesolverreport_owner	lib/alglib/solvers.h	/^class _densesolverreport_owner$/;"	c	namespace:alglib
_dfinternalbuffers_clear	lib/alglib/dataanalysis.cpp	/^void _dfinternalbuffers_clear(dfinternalbuffers* p)$/;"	f	namespace:alglib_impl
_dfinternalbuffers_init	lib/alglib/dataanalysis.cpp	/^ae_bool _dfinternalbuffers_init(dfinternalbuffers* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_dfinternalbuffers_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _dfinternalbuffers_init_copy(dfinternalbuffers* dst, dfinternalbuffers* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_dfreport_clear	lib/alglib/dataanalysis.cpp	/^void _dfreport_clear(dfreport* p)$/;"	f	namespace:alglib_impl
_dfreport_init	lib/alglib/dataanalysis.cpp	/^ae_bool _dfreport_init(dfreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_dfreport_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _dfreport_init_copy(dfreport* dst, dfreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_dfreport_owner	lib/alglib/dataanalysis.cpp	/^_dfreport_owner::_dfreport_owner()$/;"	f	class:alglib::_dfreport_owner
_dfreport_owner	lib/alglib/dataanalysis.cpp	/^_dfreport_owner::_dfreport_owner(const _dfreport_owner &rhs)$/;"	f	class:alglib::_dfreport_owner
_dfreport_owner	lib/alglib/dataanalysis.h	/^class _dfreport_owner$/;"	c	namespace:alglib
_diffequations_pkg_h	lib/alglib/diffequations.h	/^#define _diffequations_pkg_h$/;"	d
_dist_code	lib/zlib/trees.c	/^uch _dist_code[DIST_CODE_LEN];$/;"	v
_dist_code	lib/zlib/trees.h	/^const uch ZLIB_INTERNAL _dist_code[DIST_CODE_LEN] = {$/;"	v
_dist_code	lib/zlib/zconf.h	/^#  define _dist_code /;"	d
_fasttransforms_pkg_h	lib/alglib/fasttransforms.h	/^#define _fasttransforms_pkg_h$/;"	d
_fblslincgstate_clear	lib/alglib/linalg.cpp	/^void _fblslincgstate_clear(fblslincgstate* p)$/;"	f	namespace:alglib_impl
_fblslincgstate_init	lib/alglib/linalg.cpp	/^ae_bool _fblslincgstate_init(fblslincgstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_fblslincgstate_init_copy	lib/alglib/linalg.cpp	/^ae_bool _fblslincgstate_init_copy(fblslincgstate* dst, fblslincgstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_fileToMatrix	tools/behaviorSim/cma.py	/^def _fileToMatrix(file_name):$/;"	f
_ftplan_clear	lib/alglib/alglibinternal.cpp	/^void _ftplan_clear(ftplan* p)$/;"	f	namespace:alglib_impl
_ftplan_init	lib/alglib/alglibinternal.cpp	/^ae_bool _ftplan_init(ftplan* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_ftplan_init_copy	lib/alglib/alglibinternal.cpp	/^ae_bool _ftplan_init_copy(ftplan* dst, ftplan* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_get_derived	tools/behaviorSim/cma.py	/^    def _get_derived(self, x, default=None):$/;"	m	class:SolutionDictOld
_halloc	lib/zlib/zutil.c	/^#  define _halloc /;"	d	file:
_hfree	lib/zlib/zutil.c	/^#  define _hfree /;"	d	file:
_hqrndstate_clear	lib/alglib/alglibmisc.cpp	/^void _hqrndstate_clear(hqrndstate* p)$/;"	f	namespace:alglib_impl
_hqrndstate_init	lib/alglib/alglibmisc.cpp	/^ae_bool _hqrndstate_init(hqrndstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_hqrndstate_init_copy	lib/alglib/alglibmisc.cpp	/^ae_bool _hqrndstate_init_copy(hqrndstate* dst, hqrndstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_hqrndstate_owner	lib/alglib/alglibmisc.cpp	/^_hqrndstate_owner::_hqrndstate_owner()$/;"	f	class:alglib::_hqrndstate_owner
_hqrndstate_owner	lib/alglib/alglibmisc.cpp	/^_hqrndstate_owner::_hqrndstate_owner(const _hqrndstate_owner &rhs)$/;"	f	class:alglib::_hqrndstate_owner
_hqrndstate_owner	lib/alglib/alglibmisc.h	/^class _hqrndstate_owner$/;"	c	namespace:alglib
_ialglib_cmatrixgemm	lib/alglib/ap.cpp	/^ae_bool _ialglib_cmatrixgemm(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_cmatrixlefttrsm	lib/alglib/ap.cpp	/^ae_bool _ialglib_cmatrixlefttrsm(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_cmatrixrank1	lib/alglib/ap.cpp	/^ae_bool _ialglib_cmatrixrank1(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_cmatrixrighttrsm	lib/alglib/ap.cpp	/^ae_bool _ialglib_cmatrixrighttrsm(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_cmatrixsyrk	lib/alglib/ap.cpp	/^ae_bool _ialglib_cmatrixsyrk(ae_int_t n,$/;"	f	namespace:alglib_impl
_ialglib_cmv	lib/alglib/ap.cpp	/^void _ialglib_cmv(ae_int_t m, ae_int_t n, const double *a, const double *x, ae_complex *cy, double *dy, ae_int_t stride, ae_complex alpha, ae_complex beta)$/;"	f	namespace:alglib_impl
_ialglib_cmv_sse2	lib/alglib/ap.cpp	/^void _ialglib_cmv_sse2(ae_int_t m, ae_int_t n, const double *a, const double *x, ae_complex *cy, double *dy, ae_int_t stride, ae_complex alpha, ae_complex beta)$/;"	f	namespace:alglib_impl
_ialglib_i_cmatrixgemmf	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_cmatrixgemmf(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_i_cmatrixlefttrsmf	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_cmatrixlefttrsmf(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_i_cmatrixrank1f	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_cmatrixrank1f(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_i_cmatrixrighttrsmf	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_cmatrixrighttrsmf(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_i_cmatrixsyrkf	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_cmatrixsyrkf(ae_int_t n,$/;"	f	namespace:alglib_impl
_ialglib_i_rmatrixgemmf	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_rmatrixgemmf(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_i_rmatrixlefttrsmf	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_rmatrixlefttrsmf(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_i_rmatrixrank1f	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_rmatrixrank1f(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_i_rmatrixrighttrsmf	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_rmatrixrighttrsmf(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_i_rmatrixsyrkf	lib/alglib/ap.cpp	/^ae_bool _ialglib_i_rmatrixsyrkf(ae_int_t n,$/;"	f	namespace:alglib_impl
_ialglib_mcopyblock	lib/alglib/ap.cpp	/^void _ialglib_mcopyblock(ae_int_t m, ae_int_t n, const double *a, ae_int_t op, ae_int_t stride, double *b)$/;"	f	namespace:alglib_impl
_ialglib_mcopyblock_complex	lib/alglib/ap.cpp	/^void _ialglib_mcopyblock_complex(ae_int_t m, ae_int_t n, const ae_complex *a, ae_int_t op, ae_int_t stride, double *b)$/;"	f	namespace:alglib_impl
_ialglib_mcopyblock_sse2	lib/alglib/ap.cpp	/^void _ialglib_mcopyblock_sse2(ae_int_t m, ae_int_t n, const double *a, ae_int_t op, ae_int_t stride, double *b)$/;"	f	namespace:alglib_impl
_ialglib_mcopyunblock	lib/alglib/ap.cpp	/^void _ialglib_mcopyunblock(ae_int_t m, ae_int_t n, const double *a, ae_int_t op, double *b, ae_int_t stride)$/;"	f	namespace:alglib_impl
_ialglib_mcopyunblock_complex	lib/alglib/ap.cpp	/^void _ialglib_mcopyunblock_complex(ae_int_t m, ae_int_t n, const double *a, ae_int_t op, ae_complex* b, ae_int_t stride)$/;"	f	namespace:alglib_impl
_ialglib_mm22	lib/alglib/ap.cpp	/^void _ialglib_mm22(double alpha, const double *a, const double *b, ae_int_t k, double beta, double *r, ae_int_t stride, ae_int_t store_mode)$/;"	f	namespace:alglib_impl
_ialglib_mm22_sse2	lib/alglib/ap.cpp	/^void _ialglib_mm22_sse2(double alpha, const double *a, const double *b, ae_int_t k, double beta, double *r, ae_int_t stride, ae_int_t store_mode)$/;"	f	namespace:alglib_impl
_ialglib_mm22x2	lib/alglib/ap.cpp	/^void _ialglib_mm22x2(double alpha, const double *a, const double *b0, const double *b1, ae_int_t k, double beta, double *r, ae_int_t stride)$/;"	f	namespace:alglib_impl
_ialglib_mm22x2_sse2	lib/alglib/ap.cpp	/^void _ialglib_mm22x2_sse2(double alpha, const double *a, const double *b0, const double *b1, ae_int_t k, double beta, double *r, ae_int_t stride)$/;"	f	namespace:alglib_impl
_ialglib_mv_32	lib/alglib/ap.cpp	/^void _ialglib_mv_32(const double *a, const double *x, double *y, ae_int_t stride, double alpha, double beta)$/;"	f	namespace:alglib_impl
_ialglib_pack_n2	lib/alglib/ap.cpp	/^void _ialglib_pack_n2($/;"	f	namespace:alglib_impl
_ialglib_pack_n2_sse2	lib/alglib/ap.cpp	/^void _ialglib_pack_n2_sse2($/;"	f	namespace:alglib_impl
_ialglib_rmatrixgemm	lib/alglib/ap.cpp	/^ae_bool _ialglib_rmatrixgemm(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_rmatrixlefttrsm	lib/alglib/ap.cpp	/^ae_bool _ialglib_rmatrixlefttrsm(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_rmatrixrank1	lib/alglib/ap.cpp	/^ae_bool _ialglib_rmatrixrank1(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_rmatrixrighttrsm	lib/alglib/ap.cpp	/^ae_bool _ialglib_rmatrixrighttrsm(ae_int_t m,$/;"	f	namespace:alglib_impl
_ialglib_rmatrixsyrk	lib/alglib/ap.cpp	/^ae_bool _ialglib_rmatrixsyrk(ae_int_t n,$/;"	f	namespace:alglib_impl
_ialglib_rmv	lib/alglib/ap.cpp	/^void _ialglib_rmv(ae_int_t m, ae_int_t n, const double *a, const double *x, double *y, ae_int_t stride, double alpha, double beta)$/;"	f	namespace:alglib_impl
_ialglib_rmv_sse2	lib/alglib/ap.cpp	/^void _ialglib_rmv_sse2(ae_int_t m, ae_int_t n, const double *a, const double *x, double *y, ae_int_t stride, double alpha, double beta)$/;"	f	namespace:alglib_impl
_ialglib_vcopy	lib/alglib/ap.cpp	/^void _ialglib_vcopy(ae_int_t n, const double *a, ae_int_t stridea, double *b, ae_int_t strideb)$/;"	f	namespace:alglib_impl
_ialglib_vcopy_complex	lib/alglib/ap.cpp	/^void _ialglib_vcopy_complex(ae_int_t n, const ae_complex *a, ae_int_t stridea, double *b, ae_int_t strideb, const char *conj)$/;"	f	namespace:alglib_impl
_ialglib_vcopy_dcomplex	lib/alglib/ap.cpp	/^void _ialglib_vcopy_dcomplex(ae_int_t n, const double *a, ae_int_t stridea, double *b, ae_int_t strideb, const char *conj)$/;"	f	namespace:alglib_impl
_ialglib_vzero	lib/alglib/ap.cpp	/^void _ialglib_vzero(ae_int_t n, double *p, ae_int_t stride)$/;"	f	namespace:alglib_impl
_ialglib_vzero_complex	lib/alglib/ap.cpp	/^void _ialglib_vzero_complex(ae_int_t n, ae_complex *p, ae_int_t stride)$/;"	f	namespace:alglib_impl
_idwinterpolant_clear	lib/alglib/interpolation.cpp	/^void _idwinterpolant_clear(idwinterpolant* p)$/;"	f	namespace:alglib_impl
_idwinterpolant_init	lib/alglib/interpolation.cpp	/^ae_bool _idwinterpolant_init(idwinterpolant* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_idwinterpolant_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _idwinterpolant_init_copy(idwinterpolant* dst, idwinterpolant* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_idwinterpolant_owner	lib/alglib/interpolation.cpp	/^_idwinterpolant_owner::_idwinterpolant_owner()$/;"	f	class:alglib::_idwinterpolant_owner
_idwinterpolant_owner	lib/alglib/interpolation.cpp	/^_idwinterpolant_owner::_idwinterpolant_owner(const _idwinterpolant_owner &rhs)$/;"	f	class:alglib::_idwinterpolant_owner
_idwinterpolant_owner	lib/alglib/interpolation.h	/^class _idwinterpolant_owner$/;"	c	namespace:alglib
_imageProcessors	build/include/tool/VisionWindow.h	/^  map<int,ImageProcessor*> _imageProcessors;$/;"	m	class:VisionWindow
_imageProcessors	tools/UTNaoTool/VisionWindow.h	/^  map<int,ImageProcessor*> _imageProcessors;$/;"	m	class:VisionWindow
_integration_pkg_h	lib/alglib/integration.h	/^#define _integration_pkg_h$/;"	d
_interpolation_pkg_h	lib/alglib/interpolation.h	/^#define _interpolation_pkg_h$/;"	d
_kdtree_clear	lib/alglib/alglibmisc.cpp	/^void _kdtree_clear(kdtree* p)$/;"	f	namespace:alglib_impl
_kdtree_init	lib/alglib/alglibmisc.cpp	/^ae_bool _kdtree_init(kdtree* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_kdtree_init_copy	lib/alglib/alglibmisc.cpp	/^ae_bool _kdtree_init_copy(kdtree* dst, kdtree* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_kdtree_owner	lib/alglib/alglibmisc.cpp	/^_kdtree_owner::_kdtree_owner()$/;"	f	class:alglib::_kdtree_owner
_kdtree_owner	lib/alglib/alglibmisc.cpp	/^_kdtree_owner::_kdtree_owner(const _kdtree_owner &rhs)$/;"	f	class:alglib::_kdtree_owner
_kdtree_owner	lib/alglib/alglibmisc.h	/^class _kdtree_owner$/;"	c	namespace:alglib
_length_code	lib/zlib/trees.c	/^uch _length_code[MAX_MATCH-MIN_MATCH+1];$/;"	v
_length_code	lib/zlib/trees.h	/^const uch ZLIB_INTERNAL _length_code[MAX_MATCH-MIN_MATCH+1]= {$/;"	v
_length_code	lib/zlib/zconf.h	/^#  define _length_code /;"	d
_linalg_pkg_h	lib/alglib/linalg.h	/^#define _linalg_pkg_h$/;"	d
_linearmodel_clear	lib/alglib/dataanalysis.cpp	/^void _linearmodel_clear(linearmodel* p)$/;"	f	namespace:alglib_impl
_linearmodel_init	lib/alglib/dataanalysis.cpp	/^ae_bool _linearmodel_init(linearmodel* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_linearmodel_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _linearmodel_init_copy(linearmodel* dst, linearmodel* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_linearmodel_owner	lib/alglib/dataanalysis.cpp	/^_linearmodel_owner::_linearmodel_owner()$/;"	f	class:alglib::_linearmodel_owner
_linearmodel_owner	lib/alglib/dataanalysis.cpp	/^_linearmodel_owner::_linearmodel_owner(const _linearmodel_owner &rhs)$/;"	f	class:alglib::_linearmodel_owner
_linearmodel_owner	lib/alglib/dataanalysis.h	/^class _linearmodel_owner$/;"	c	namespace:alglib
_linminstate_clear	lib/alglib/alglibinternal.cpp	/^void _linminstate_clear(linminstate* p)$/;"	f	namespace:alglib_impl
_linminstate_init	lib/alglib/alglibinternal.cpp	/^ae_bool _linminstate_init(linminstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_linminstate_init_copy	lib/alglib/alglibinternal.cpp	/^ae_bool _linminstate_init_copy(linminstate* dst, linminstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_logitmcstate_clear	lib/alglib/dataanalysis.cpp	/^void _logitmcstate_clear(logitmcstate* p)$/;"	f	namespace:alglib_impl
_logitmcstate_init	lib/alglib/dataanalysis.cpp	/^ae_bool _logitmcstate_init(logitmcstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_logitmcstate_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _logitmcstate_init_copy(logitmcstate* dst, logitmcstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_logitmodel_clear	lib/alglib/dataanalysis.cpp	/^void _logitmodel_clear(logitmodel* p)$/;"	f	namespace:alglib_impl
_logitmodel_init	lib/alglib/dataanalysis.cpp	/^ae_bool _logitmodel_init(logitmodel* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_logitmodel_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _logitmodel_init_copy(logitmodel* dst, logitmodel* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_logitmodel_owner	lib/alglib/dataanalysis.cpp	/^_logitmodel_owner::_logitmodel_owner()$/;"	f	class:alglib::_logitmodel_owner
_logitmodel_owner	lib/alglib/dataanalysis.cpp	/^_logitmodel_owner::_logitmodel_owner(const _logitmodel_owner &rhs)$/;"	f	class:alglib::_logitmodel_owner
_logitmodel_owner	lib/alglib/dataanalysis.h	/^class _logitmodel_owner$/;"	c	namespace:alglib
_lrreport_clear	lib/alglib/dataanalysis.cpp	/^void _lrreport_clear(lrreport* p)$/;"	f	namespace:alglib_impl
_lrreport_init	lib/alglib/dataanalysis.cpp	/^ae_bool _lrreport_init(lrreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_lrreport_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _lrreport_init_copy(lrreport* dst, lrreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_lrreport_owner	lib/alglib/dataanalysis.cpp	/^_lrreport_owner::_lrreport_owner()$/;"	f	class:alglib::_lrreport_owner
_lrreport_owner	lib/alglib/dataanalysis.cpp	/^_lrreport_owner::_lrreport_owner(const _lrreport_owner &rhs)$/;"	f	class:alglib::_lrreport_owner
_lrreport_owner	lib/alglib/dataanalysis.h	/^class _lrreport_owner$/;"	c	namespace:alglib
_lsfitreport_clear	lib/alglib/interpolation.cpp	/^void _lsfitreport_clear(lsfitreport* p)$/;"	f	namespace:alglib_impl
_lsfitreport_init	lib/alglib/interpolation.cpp	/^ae_bool _lsfitreport_init(lsfitreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_lsfitreport_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _lsfitreport_init_copy(lsfitreport* dst, lsfitreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_lsfitreport_owner	lib/alglib/interpolation.cpp	/^_lsfitreport_owner::_lsfitreport_owner()$/;"	f	class:alglib::_lsfitreport_owner
_lsfitreport_owner	lib/alglib/interpolation.cpp	/^_lsfitreport_owner::_lsfitreport_owner(const _lsfitreport_owner &rhs)$/;"	f	class:alglib::_lsfitreport_owner
_lsfitreport_owner	lib/alglib/interpolation.h	/^class _lsfitreport_owner$/;"	c	namespace:alglib
_lsfitstate_clear	lib/alglib/interpolation.cpp	/^void _lsfitstate_clear(lsfitstate* p)$/;"	f	namespace:alglib_impl
_lsfitstate_init	lib/alglib/interpolation.cpp	/^ae_bool _lsfitstate_init(lsfitstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_lsfitstate_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _lsfitstate_init_copy(lsfitstate* dst, lsfitstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_lsfitstate_owner	lib/alglib/interpolation.cpp	/^_lsfitstate_owner::_lsfitstate_owner()$/;"	f	class:alglib::_lsfitstate_owner
_lsfitstate_owner	lib/alglib/interpolation.cpp	/^_lsfitstate_owner::_lsfitstate_owner(const _lsfitstate_owner &rhs)$/;"	f	class:alglib::_lsfitstate_owner
_lsfitstate_owner	lib/alglib/interpolation.h	/^class _lsfitstate_owner$/;"	c	namespace:alglib
_matinvreport_clear	lib/alglib/linalg.cpp	/^void _matinvreport_clear(matinvreport* p)$/;"	f	namespace:alglib_impl
_matinvreport_init	lib/alglib/linalg.cpp	/^ae_bool _matinvreport_init(matinvreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_matinvreport_init_copy	lib/alglib/linalg.cpp	/^ae_bool _matinvreport_init_copy(matinvreport* dst, matinvreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_matinvreport_owner	lib/alglib/linalg.cpp	/^_matinvreport_owner::_matinvreport_owner()$/;"	f	class:alglib::_matinvreport_owner
_matinvreport_owner	lib/alglib/linalg.cpp	/^_matinvreport_owner::_matinvreport_owner(const _matinvreport_owner &rhs)$/;"	f	class:alglib::_matinvreport_owner
_matinvreport_owner	lib/alglib/linalg.h	/^class _matinvreport_owner$/;"	c	namespace:alglib
_minasareport_clear	lib/alglib/optimization.cpp	/^void _minasareport_clear(minasareport* p)$/;"	f	namespace:alglib_impl
_minasareport_init	lib/alglib/optimization.cpp	/^ae_bool _minasareport_init(minasareport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minasareport_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minasareport_init_copy(minasareport* dst, minasareport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minasareport_owner	lib/alglib/optimization.cpp	/^_minasareport_owner::_minasareport_owner()$/;"	f	class:alglib::_minasareport_owner
_minasareport_owner	lib/alglib/optimization.cpp	/^_minasareport_owner::_minasareport_owner(const _minasareport_owner &rhs)$/;"	f	class:alglib::_minasareport_owner
_minasareport_owner	lib/alglib/optimization.h	/^class _minasareport_owner$/;"	c	namespace:alglib
_minasastate_clear	lib/alglib/optimization.cpp	/^void _minasastate_clear(minasastate* p)$/;"	f	namespace:alglib_impl
_minasastate_init	lib/alglib/optimization.cpp	/^ae_bool _minasastate_init(minasastate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minasastate_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minasastate_init_copy(minasastate* dst, minasastate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minasastate_owner	lib/alglib/optimization.cpp	/^_minasastate_owner::_minasastate_owner()$/;"	f	class:alglib::_minasastate_owner
_minasastate_owner	lib/alglib/optimization.cpp	/^_minasastate_owner::_minasastate_owner(const _minasastate_owner &rhs)$/;"	f	class:alglib::_minasastate_owner
_minasastate_owner	lib/alglib/optimization.h	/^class _minasastate_owner$/;"	c	namespace:alglib
_minbleicreport_clear	lib/alglib/optimization.cpp	/^void _minbleicreport_clear(minbleicreport* p)$/;"	f	namespace:alglib_impl
_minbleicreport_init	lib/alglib/optimization.cpp	/^ae_bool _minbleicreport_init(minbleicreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minbleicreport_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minbleicreport_init_copy(minbleicreport* dst, minbleicreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minbleicreport_owner	lib/alglib/optimization.cpp	/^_minbleicreport_owner::_minbleicreport_owner()$/;"	f	class:alglib::_minbleicreport_owner
_minbleicreport_owner	lib/alglib/optimization.cpp	/^_minbleicreport_owner::_minbleicreport_owner(const _minbleicreport_owner &rhs)$/;"	f	class:alglib::_minbleicreport_owner
_minbleicreport_owner	lib/alglib/optimization.h	/^class _minbleicreport_owner$/;"	c	namespace:alglib
_minbleicstate_clear	lib/alglib/optimization.cpp	/^void _minbleicstate_clear(minbleicstate* p)$/;"	f	namespace:alglib_impl
_minbleicstate_init	lib/alglib/optimization.cpp	/^ae_bool _minbleicstate_init(minbleicstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minbleicstate_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minbleicstate_init_copy(minbleicstate* dst, minbleicstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minbleicstate_owner	lib/alglib/optimization.cpp	/^_minbleicstate_owner::_minbleicstate_owner()$/;"	f	class:alglib::_minbleicstate_owner
_minbleicstate_owner	lib/alglib/optimization.cpp	/^_minbleicstate_owner::_minbleicstate_owner(const _minbleicstate_owner &rhs)$/;"	f	class:alglib::_minbleicstate_owner
_minbleicstate_owner	lib/alglib/optimization.h	/^class _minbleicstate_owner$/;"	c	namespace:alglib
_mincgreport_clear	lib/alglib/optimization.cpp	/^void _mincgreport_clear(mincgreport* p)$/;"	f	namespace:alglib_impl
_mincgreport_init	lib/alglib/optimization.cpp	/^ae_bool _mincgreport_init(mincgreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mincgreport_init_copy	lib/alglib/optimization.cpp	/^ae_bool _mincgreport_init_copy(mincgreport* dst, mincgreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mincgreport_owner	lib/alglib/optimization.cpp	/^_mincgreport_owner::_mincgreport_owner()$/;"	f	class:alglib::_mincgreport_owner
_mincgreport_owner	lib/alglib/optimization.cpp	/^_mincgreport_owner::_mincgreport_owner(const _mincgreport_owner &rhs)$/;"	f	class:alglib::_mincgreport_owner
_mincgreport_owner	lib/alglib/optimization.h	/^class _mincgreport_owner$/;"	c	namespace:alglib
_mincgstate_clear	lib/alglib/optimization.cpp	/^void _mincgstate_clear(mincgstate* p)$/;"	f	namespace:alglib_impl
_mincgstate_init	lib/alglib/optimization.cpp	/^ae_bool _mincgstate_init(mincgstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mincgstate_init_copy	lib/alglib/optimization.cpp	/^ae_bool _mincgstate_init_copy(mincgstate* dst, mincgstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mincgstate_owner	lib/alglib/optimization.cpp	/^_mincgstate_owner::_mincgstate_owner()$/;"	f	class:alglib::_mincgstate_owner
_mincgstate_owner	lib/alglib/optimization.cpp	/^_mincgstate_owner::_mincgstate_owner(const _mincgstate_owner &rhs)$/;"	f	class:alglib::_mincgstate_owner
_mincgstate_owner	lib/alglib/optimization.h	/^class _mincgstate_owner$/;"	c	namespace:alglib
_minlbfgsreport_clear	lib/alglib/optimization.cpp	/^void _minlbfgsreport_clear(minlbfgsreport* p)$/;"	f	namespace:alglib_impl
_minlbfgsreport_init	lib/alglib/optimization.cpp	/^ae_bool _minlbfgsreport_init(minlbfgsreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minlbfgsreport_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minlbfgsreport_init_copy(minlbfgsreport* dst, minlbfgsreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minlbfgsreport_owner	lib/alglib/optimization.cpp	/^_minlbfgsreport_owner::_minlbfgsreport_owner()$/;"	f	class:alglib::_minlbfgsreport_owner
_minlbfgsreport_owner	lib/alglib/optimization.cpp	/^_minlbfgsreport_owner::_minlbfgsreport_owner(const _minlbfgsreport_owner &rhs)$/;"	f	class:alglib::_minlbfgsreport_owner
_minlbfgsreport_owner	lib/alglib/optimization.h	/^class _minlbfgsreport_owner$/;"	c	namespace:alglib
_minlbfgsstate_clear	lib/alglib/optimization.cpp	/^void _minlbfgsstate_clear(minlbfgsstate* p)$/;"	f	namespace:alglib_impl
_minlbfgsstate_init	lib/alglib/optimization.cpp	/^ae_bool _minlbfgsstate_init(minlbfgsstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minlbfgsstate_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minlbfgsstate_init_copy(minlbfgsstate* dst, minlbfgsstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minlbfgsstate_owner	lib/alglib/optimization.cpp	/^_minlbfgsstate_owner::_minlbfgsstate_owner()$/;"	f	class:alglib::_minlbfgsstate_owner
_minlbfgsstate_owner	lib/alglib/optimization.cpp	/^_minlbfgsstate_owner::_minlbfgsstate_owner(const _minlbfgsstate_owner &rhs)$/;"	f	class:alglib::_minlbfgsstate_owner
_minlbfgsstate_owner	lib/alglib/optimization.h	/^class _minlbfgsstate_owner$/;"	c	namespace:alglib
_minlmreport_clear	lib/alglib/optimization.cpp	/^void _minlmreport_clear(minlmreport* p)$/;"	f	namespace:alglib_impl
_minlmreport_init	lib/alglib/optimization.cpp	/^ae_bool _minlmreport_init(minlmreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minlmreport_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minlmreport_init_copy(minlmreport* dst, minlmreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minlmreport_owner	lib/alglib/optimization.cpp	/^_minlmreport_owner::_minlmreport_owner()$/;"	f	class:alglib::_minlmreport_owner
_minlmreport_owner	lib/alglib/optimization.cpp	/^_minlmreport_owner::_minlmreport_owner(const _minlmreport_owner &rhs)$/;"	f	class:alglib::_minlmreport_owner
_minlmreport_owner	lib/alglib/optimization.h	/^class _minlmreport_owner$/;"	c	namespace:alglib
_minlmstate_clear	lib/alglib/optimization.cpp	/^void _minlmstate_clear(minlmstate* p)$/;"	f	namespace:alglib_impl
_minlmstate_init	lib/alglib/optimization.cpp	/^ae_bool _minlmstate_init(minlmstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minlmstate_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minlmstate_init_copy(minlmstate* dst, minlmstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minlmstate_owner	lib/alglib/optimization.cpp	/^_minlmstate_owner::_minlmstate_owner()$/;"	f	class:alglib::_minlmstate_owner
_minlmstate_owner	lib/alglib/optimization.cpp	/^_minlmstate_owner::_minlmstate_owner(const _minlmstate_owner &rhs)$/;"	f	class:alglib::_minlmstate_owner
_minlmstate_owner	lib/alglib/optimization.h	/^class _minlmstate_owner$/;"	c	namespace:alglib
_minqpreport_clear	lib/alglib/optimization.cpp	/^void _minqpreport_clear(minqpreport* p)$/;"	f	namespace:alglib_impl
_minqpreport_init	lib/alglib/optimization.cpp	/^ae_bool _minqpreport_init(minqpreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minqpreport_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minqpreport_init_copy(minqpreport* dst, minqpreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minqpreport_owner	lib/alglib/optimization.cpp	/^_minqpreport_owner::_minqpreport_owner()$/;"	f	class:alglib::_minqpreport_owner
_minqpreport_owner	lib/alglib/optimization.cpp	/^_minqpreport_owner::_minqpreport_owner(const _minqpreport_owner &rhs)$/;"	f	class:alglib::_minqpreport_owner
_minqpreport_owner	lib/alglib/optimization.h	/^class _minqpreport_owner$/;"	c	namespace:alglib
_minqpstate_clear	lib/alglib/optimization.cpp	/^void _minqpstate_clear(minqpstate* p)$/;"	f	namespace:alglib_impl
_minqpstate_init	lib/alglib/optimization.cpp	/^ae_bool _minqpstate_init(minqpstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minqpstate_init_copy	lib/alglib/optimization.cpp	/^ae_bool _minqpstate_init_copy(minqpstate* dst, minqpstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_minqpstate_owner	lib/alglib/optimization.cpp	/^_minqpstate_owner::_minqpstate_owner()$/;"	f	class:alglib::_minqpstate_owner
_minqpstate_owner	lib/alglib/optimization.cpp	/^_minqpstate_owner::_minqpstate_owner(const _minqpstate_owner &rhs)$/;"	f	class:alglib::_minqpstate_owner
_minqpstate_owner	lib/alglib/optimization.h	/^class _minqpstate_owner$/;"	c	namespace:alglib
_mlpcvreport_clear	lib/alglib/dataanalysis.cpp	/^void _mlpcvreport_clear(mlpcvreport* p)$/;"	f	namespace:alglib_impl
_mlpcvreport_init	lib/alglib/dataanalysis.cpp	/^ae_bool _mlpcvreport_init(mlpcvreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mlpcvreport_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _mlpcvreport_init_copy(mlpcvreport* dst, mlpcvreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mlpcvreport_owner	lib/alglib/dataanalysis.cpp	/^_mlpcvreport_owner::_mlpcvreport_owner()$/;"	f	class:alglib::_mlpcvreport_owner
_mlpcvreport_owner	lib/alglib/dataanalysis.cpp	/^_mlpcvreport_owner::_mlpcvreport_owner(const _mlpcvreport_owner &rhs)$/;"	f	class:alglib::_mlpcvreport_owner
_mlpcvreport_owner	lib/alglib/dataanalysis.h	/^class _mlpcvreport_owner$/;"	c	namespace:alglib
_mlpensemble_clear	lib/alglib/dataanalysis.cpp	/^void _mlpensemble_clear(mlpensemble* p)$/;"	f	namespace:alglib_impl
_mlpensemble_init	lib/alglib/dataanalysis.cpp	/^ae_bool _mlpensemble_init(mlpensemble* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mlpensemble_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _mlpensemble_init_copy(mlpensemble* dst, mlpensemble* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mlpensemble_owner	lib/alglib/dataanalysis.cpp	/^_mlpensemble_owner::_mlpensemble_owner()$/;"	f	class:alglib::_mlpensemble_owner
_mlpensemble_owner	lib/alglib/dataanalysis.cpp	/^_mlpensemble_owner::_mlpensemble_owner(const _mlpensemble_owner &rhs)$/;"	f	class:alglib::_mlpensemble_owner
_mlpensemble_owner	lib/alglib/dataanalysis.h	/^class _mlpensemble_owner$/;"	c	namespace:alglib
_mlpreport_clear	lib/alglib/dataanalysis.cpp	/^void _mlpreport_clear(mlpreport* p)$/;"	f	namespace:alglib_impl
_mlpreport_init	lib/alglib/dataanalysis.cpp	/^ae_bool _mlpreport_init(mlpreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mlpreport_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _mlpreport_init_copy(mlpreport* dst, mlpreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mlpreport_owner	lib/alglib/dataanalysis.cpp	/^_mlpreport_owner::_mlpreport_owner()$/;"	f	class:alglib::_mlpreport_owner
_mlpreport_owner	lib/alglib/dataanalysis.cpp	/^_mlpreport_owner::_mlpreport_owner(const _mlpreport_owner &rhs)$/;"	f	class:alglib::_mlpreport_owner
_mlpreport_owner	lib/alglib/dataanalysis.h	/^class _mlpreport_owner$/;"	c	namespace:alglib
_mnlreport_clear	lib/alglib/dataanalysis.cpp	/^void _mnlreport_clear(mnlreport* p)$/;"	f	namespace:alglib_impl
_mnlreport_init	lib/alglib/dataanalysis.cpp	/^ae_bool _mnlreport_init(mnlreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mnlreport_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _mnlreport_init_copy(mnlreport* dst, mnlreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_mnlreport_owner	lib/alglib/dataanalysis.cpp	/^_mnlreport_owner::_mnlreport_owner()$/;"	f	class:alglib::_mnlreport_owner
_mnlreport_owner	lib/alglib/dataanalysis.cpp	/^_mnlreport_owner::_mnlreport_owner(const _mnlreport_owner &rhs)$/;"	f	class:alglib::_mnlreport_owner
_mnlreport_owner	lib/alglib/dataanalysis.h	/^class _mnlreport_owner$/;"	c	namespace:alglib
_multilayerperceptron_clear	lib/alglib/dataanalysis.cpp	/^void _multilayerperceptron_clear(multilayerperceptron* p)$/;"	f	namespace:alglib_impl
_multilayerperceptron_init	lib/alglib/dataanalysis.cpp	/^ae_bool _multilayerperceptron_init(multilayerperceptron* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_multilayerperceptron_init_copy	lib/alglib/dataanalysis.cpp	/^ae_bool _multilayerperceptron_init_copy(multilayerperceptron* dst, multilayerperceptron* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_multilayerperceptron_owner	lib/alglib/dataanalysis.cpp	/^_multilayerperceptron_owner::_multilayerperceptron_owner()$/;"	f	class:alglib::_multilayerperceptron_owner
_multilayerperceptron_owner	lib/alglib/dataanalysis.cpp	/^_multilayerperceptron_owner::_multilayerperceptron_owner(const _multilayerperceptron_owner &rhs)$/;"	f	class:alglib::_multilayerperceptron_owner
_multilayerperceptron_owner	lib/alglib/dataanalysis.h	/^class _multilayerperceptron_owner$/;"	c	namespace:alglib
_next	interfaces/sim_spark/Random.h	/^   long         _next;                    \/\/ seed to be used as index into table$/;"	m	class:Random
_nleqreport_clear	lib/alglib/solvers.cpp	/^void _nleqreport_clear(nleqreport* p)$/;"	f	namespace:alglib_impl
_nleqreport_init	lib/alglib/solvers.cpp	/^ae_bool _nleqreport_init(nleqreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_nleqreport_init_copy	lib/alglib/solvers.cpp	/^ae_bool _nleqreport_init_copy(nleqreport* dst, nleqreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_nleqreport_owner	lib/alglib/solvers.cpp	/^_nleqreport_owner::_nleqreport_owner()$/;"	f	class:alglib::_nleqreport_owner
_nleqreport_owner	lib/alglib/solvers.cpp	/^_nleqreport_owner::_nleqreport_owner(const _nleqreport_owner &rhs)$/;"	f	class:alglib::_nleqreport_owner
_nleqreport_owner	lib/alglib/solvers.h	/^class _nleqreport_owner$/;"	c	namespace:alglib
_nleqstate_clear	lib/alglib/solvers.cpp	/^void _nleqstate_clear(nleqstate* p)$/;"	f	namespace:alglib_impl
_nleqstate_init	lib/alglib/solvers.cpp	/^ae_bool _nleqstate_init(nleqstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_nleqstate_init_copy	lib/alglib/solvers.cpp	/^ae_bool _nleqstate_init_copy(nleqstate* dst, nleqstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_nleqstate_owner	lib/alglib/solvers.cpp	/^_nleqstate_owner::_nleqstate_owner()$/;"	f	class:alglib::_nleqstate_owner
_nleqstate_owner	lib/alglib/solvers.cpp	/^_nleqstate_owner::_nleqstate_owner(const _nleqstate_owner &rhs)$/;"	f	class:alglib::_nleqstate_owner
_nleqstate_owner	lib/alglib/solvers.h	/^class _nleqstate_owner$/;"	c	namespace:alglib
_odesolverreport_clear	lib/alglib/diffequations.cpp	/^void _odesolverreport_clear(odesolverreport* p)$/;"	f	namespace:alglib_impl
_odesolverreport_init	lib/alglib/diffequations.cpp	/^ae_bool _odesolverreport_init(odesolverreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_odesolverreport_init_copy	lib/alglib/diffequations.cpp	/^ae_bool _odesolverreport_init_copy(odesolverreport* dst, odesolverreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_odesolverreport_owner	lib/alglib/diffequations.cpp	/^_odesolverreport_owner::_odesolverreport_owner()$/;"	f	class:alglib::_odesolverreport_owner
_odesolverreport_owner	lib/alglib/diffequations.cpp	/^_odesolverreport_owner::_odesolverreport_owner(const _odesolverreport_owner &rhs)$/;"	f	class:alglib::_odesolverreport_owner
_odesolverreport_owner	lib/alglib/diffequations.h	/^class _odesolverreport_owner$/;"	c	namespace:alglib
_odesolverstate_clear	lib/alglib/diffequations.cpp	/^void _odesolverstate_clear(odesolverstate* p)$/;"	f	namespace:alglib_impl
_odesolverstate_init	lib/alglib/diffequations.cpp	/^ae_bool _odesolverstate_init(odesolverstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_odesolverstate_init_copy	lib/alglib/diffequations.cpp	/^ae_bool _odesolverstate_init_copy(odesolverstate* dst, odesolverstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_odesolverstate_owner	lib/alglib/diffequations.cpp	/^_odesolverstate_owner::_odesolverstate_owner()$/;"	f	class:alglib::_odesolverstate_owner
_odesolverstate_owner	lib/alglib/diffequations.cpp	/^_odesolverstate_owner::_odesolverstate_owner(const _odesolverstate_owner &rhs)$/;"	f	class:alglib::_odesolverstate_owner
_odesolverstate_owner	lib/alglib/diffequations.h	/^class _odesolverstate_owner$/;"	c	namespace:alglib
_optimization_pkg_h	lib/alglib/optimization.h	/^#define _optimization_pkg_h$/;"	d
_parabola	interfaces/sim_spark/Random.h	/^   static float _parabola( float x, float xMin, float xMax )  \/\/ parabola$/;"	f	class:Random
_parse_real_delim	lib/alglib/ap.cpp	/^bool alglib::_parse_real_delim(const char *s, const char *delim, double *result, const char **new_s)$/;"	f	class:alglib
_polynomialfitreport_clear	lib/alglib/interpolation.cpp	/^void _polynomialfitreport_clear(polynomialfitreport* p)$/;"	f	namespace:alglib_impl
_polynomialfitreport_init	lib/alglib/interpolation.cpp	/^ae_bool _polynomialfitreport_init(polynomialfitreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_polynomialfitreport_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _polynomialfitreport_init_copy(polynomialfitreport* dst, polynomialfitreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_polynomialfitreport_owner	lib/alglib/interpolation.cpp	/^_polynomialfitreport_owner::_polynomialfitreport_owner()$/;"	f	class:alglib::_polynomialfitreport_owner
_polynomialfitreport_owner	lib/alglib/interpolation.cpp	/^_polynomialfitreport_owner::_polynomialfitreport_owner(const _polynomialfitreport_owner &rhs)$/;"	f	class:alglib::_polynomialfitreport_owner
_polynomialfitreport_owner	lib/alglib/interpolation.h	/^class _polynomialfitreport_owner$/;"	c	namespace:alglib
_pop_derived	tools/behaviorSim/cma.py	/^    def _pop_derived(self, x):$/;"	m	class:SolutionDictOld
_postsetup	core/python/state_machine.py	/^  def _postsetup(self): pass$/;"	m	class:StateMachine
_postsetup	core/python/state_machine.py	/^  def _postsetup(self):$/;"	m	class:LoopingStateMachine
_presetup	core/python/state_machine.py	/^  def _presetup(self): pass$/;"	m	class:StateMachine
_proc_status	core/python/UTdebug.py	/^_proc_status = '\/proc\/%d\/status' % os.getpid()$/;"	v
_pspline2interpolant_clear	lib/alglib/interpolation.cpp	/^void _pspline2interpolant_clear(pspline2interpolant* p)$/;"	f	namespace:alglib_impl
_pspline2interpolant_init	lib/alglib/interpolation.cpp	/^ae_bool _pspline2interpolant_init(pspline2interpolant* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_pspline2interpolant_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _pspline2interpolant_init_copy(pspline2interpolant* dst, pspline2interpolant* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_pspline2interpolant_owner	lib/alglib/interpolation.cpp	/^_pspline2interpolant_owner::_pspline2interpolant_owner()$/;"	f	class:alglib::_pspline2interpolant_owner
_pspline2interpolant_owner	lib/alglib/interpolation.cpp	/^_pspline2interpolant_owner::_pspline2interpolant_owner(const _pspline2interpolant_owner &rhs)$/;"	f	class:alglib::_pspline2interpolant_owner
_pspline2interpolant_owner	lib/alglib/interpolation.h	/^class _pspline2interpolant_owner$/;"	c	namespace:alglib
_pspline3interpolant_clear	lib/alglib/interpolation.cpp	/^void _pspline3interpolant_clear(pspline3interpolant* p)$/;"	f	namespace:alglib_impl
_pspline3interpolant_init	lib/alglib/interpolation.cpp	/^ae_bool _pspline3interpolant_init(pspline3interpolant* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_pspline3interpolant_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _pspline3interpolant_init_copy(pspline3interpolant* dst, pspline3interpolant* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_pspline3interpolant_owner	lib/alglib/interpolation.cpp	/^_pspline3interpolant_owner::_pspline3interpolant_owner()$/;"	f	class:alglib::_pspline3interpolant_owner
_pspline3interpolant_owner	lib/alglib/interpolation.cpp	/^_pspline3interpolant_owner::_pspline3interpolant_owner(const _pspline3interpolant_owner &rhs)$/;"	f	class:alglib::_pspline3interpolant_owner
_pspline3interpolant_owner	lib/alglib/interpolation.h	/^class _pspline3interpolant_owner$/;"	c	namespace:alglib
_rcommstate_clear	lib/alglib/ap.cpp	/^void _rcommstate_clear(rcommstate* p)$/;"	f	namespace:alglib_impl
_rcommstate_init	lib/alglib/ap.cpp	/^ae_bool _rcommstate_init(rcommstate* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_rcommstate_init_copy	lib/alglib/ap.cpp	/^ae_bool _rcommstate_init_copy(rcommstate* dst, rcommstate* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_scale	core/python/UTdebug.py	/^_scale = {'kB': 1024.0, 'mB': 1024.0*1024.0,$/;"	v
_seed	interfaces/sim_spark/Random.h	/^   long         _seed;                    \/\/ current random number seed$/;"	m	class:Random
_seed2	interfaces/sim_spark/Random.h	/^   unsigned     _seed2;                   \/\/ seed for tausworthe random bit$/;"	m	class:Random
_seedTable	interfaces/sim_spark/Random.h	/^   void _seedTable( void )                          \/\/ seeds the shuffle table$/;"	f	class:Random
_solvers_pkg_h	lib/alglib/solvers.h	/^#define _solvers_pkg_h$/;"	d
_specialfunctions_pkg_h	lib/alglib/specialfunctions.h	/^#define _specialfunctions_pkg_h$/;"	d
_spline1dfitreport_clear	lib/alglib/interpolation.cpp	/^void _spline1dfitreport_clear(spline1dfitreport* p)$/;"	f	namespace:alglib_impl
_spline1dfitreport_init	lib/alglib/interpolation.cpp	/^ae_bool _spline1dfitreport_init(spline1dfitreport* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_spline1dfitreport_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _spline1dfitreport_init_copy(spline1dfitreport* dst, spline1dfitreport* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_spline1dfitreport_owner	lib/alglib/interpolation.cpp	/^_spline1dfitreport_owner::_spline1dfitreport_owner()$/;"	f	class:alglib::_spline1dfitreport_owner
_spline1dfitreport_owner	lib/alglib/interpolation.cpp	/^_spline1dfitreport_owner::_spline1dfitreport_owner(const _spline1dfitreport_owner &rhs)$/;"	f	class:alglib::_spline1dfitreport_owner
_spline1dfitreport_owner	lib/alglib/interpolation.h	/^class _spline1dfitreport_owner$/;"	c	namespace:alglib
_spline1dinterpolant_clear	lib/alglib/interpolation.cpp	/^void _spline1dinterpolant_clear(spline1dinterpolant* p)$/;"	f	namespace:alglib_impl
_spline1dinterpolant_init	lib/alglib/interpolation.cpp	/^ae_bool _spline1dinterpolant_init(spline1dinterpolant* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_spline1dinterpolant_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _spline1dinterpolant_init_copy(spline1dinterpolant* dst, spline1dinterpolant* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_spline1dinterpolant_owner	lib/alglib/interpolation.cpp	/^_spline1dinterpolant_owner::_spline1dinterpolant_owner()$/;"	f	class:alglib::_spline1dinterpolant_owner
_spline1dinterpolant_owner	lib/alglib/interpolation.cpp	/^_spline1dinterpolant_owner::_spline1dinterpolant_owner(const _spline1dinterpolant_owner &rhs)$/;"	f	class:alglib::_spline1dinterpolant_owner
_spline1dinterpolant_owner	lib/alglib/interpolation.h	/^class _spline1dinterpolant_owner$/;"	c	namespace:alglib
_spline2dinterpolant_clear	lib/alglib/interpolation.cpp	/^void _spline2dinterpolant_clear(spline2dinterpolant* p)$/;"	f	namespace:alglib_impl
_spline2dinterpolant_init	lib/alglib/interpolation.cpp	/^ae_bool _spline2dinterpolant_init(spline2dinterpolant* p, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_spline2dinterpolant_init_copy	lib/alglib/interpolation.cpp	/^ae_bool _spline2dinterpolant_init_copy(spline2dinterpolant* dst, spline2dinterpolant* src, ae_state *_state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
_spline2dinterpolant_owner	lib/alglib/interpolation.cpp	/^_spline2dinterpolant_owner::_spline2dinterpolant_owner()$/;"	f	class:alglib::_spline2dinterpolant_owner
_spline2dinterpolant_owner	lib/alglib/interpolation.cpp	/^_spline2dinterpolant_owner::_spline2dinterpolant_owner(const _spline2dinterpolant_owner &rhs)$/;"	f	class:alglib::_spline2dinterpolant_owner
_spline2dinterpolant_owner	lib/alglib/interpolation.h	/^class _spline2dinterpolant_owner$/;"	c	namespace:alglib
_startrun	core/python/task.py	/^  def _startrun(self):$/;"	m	class:BaseTask
_state	interfaces/sim_spark/decode.h	/^  base64_decodestate _state;$/;"	m	class:base64::Decoder
_state	interfaces/sim_spark/encode.h	/^  base64_encodestate _state;$/;"	m	class:base64::Encoder
_statistics_pkg_h	lib/alglib/statistics.h	/^#define _statistics_pkg_h$/;"	d
_table	interfaces/sim_spark/Random.h	/^   long         _table[ _NTAB ];          \/\/ shuffle table of seeds$/;"	m	class:Random
_test	tools/behaviorSim/cma.py	/^def _test(module=None):  # None is fine when called from inside the module$/;"	f
_tr_align	lib/zlib/trees.c	/^void ZLIB_INTERNAL _tr_align(s)$/;"	f
_tr_align	lib/zlib/zconf.h	/^#  define _tr_align /;"	d
_tr_flush_block	lib/zlib/trees.c	/^void ZLIB_INTERNAL _tr_flush_block(s, buf, stored_len, last)$/;"	f
_tr_flush_block	lib/zlib/zconf.h	/^#  define _tr_flush_block /;"	d
_tr_init	lib/zlib/trees.c	/^void ZLIB_INTERNAL _tr_init(s)$/;"	f
_tr_init	lib/zlib/zconf.h	/^#  define _tr_init /;"	d
_tr_stored_block	lib/zlib/trees.c	/^void ZLIB_INTERNAL _tr_stored_block(s, buf, stored_len, last)$/;"	f
_tr_stored_block	lib/zlib/zconf.h	/^#  define _tr_stored_block /;"	d
_tr_tally	lib/zlib/trees.c	/^int ZLIB_INTERNAL _tr_tally (s, dist, lc)$/;"	f
_tr_tally	lib/zlib/zconf.h	/^#  define _tr_tally /;"	d
_tr_tally_dist	lib/zlib/deflate.h	/^# define _tr_tally_dist(/;"	d
_tr_tally_lit	lib/zlib/deflate.h	/^# define _tr_tally_lit(/;"	d
_u	interfaces/sim_spark/Random.h	/^   float _u( void )                                \/\/ uniform rng$/;"	f	class:Random
_update	tools/behaviorSim/cma.py	/^    def _update(self, es):$/;"	m	class:CMAStopDict
_updateCholesky	tools/behaviorSim/cma.py	/^    def _updateCholesky(self, A, Ainv, p, alpha, beta): $/;"	m	class:CMAEvolutionStrategy
_widgetAssignments	build/include/tool/VisionWindow.h	/^  map<ImageWidget*,int> _widgetAssignments;$/;"	m	class:VisionWindow
_widgetAssignments	tools/UTNaoTool/VisionWindow.h	/^  map<ImageWidget*,int> _widgetAssignments;$/;"	m	class:VisionWindow
_x	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^    int _x, _y;$/;"	m	class:SampleItem	file:
_x	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^    int _x, _y;$/;"	m	class:SampleItem	file:
_y	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^    int _x, _y;$/;"	m	class:SampleItem	file:
_y	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^    int _x, _y;$/;"	m	class:SampleItem	file:
a	build/include/tool/joystickxbox.h	/^  int a;$/;"	m	struct:ControllerInfo
a	core/motion/rswalk2014/types/BBox.hpp	/^   Point a, b;$/;"	m	struct:BBox
a	lib/alglib/integration.h	/^    double a;$/;"	m	struct:alglib_impl::__anon54
a	lib/alglib/integration.h	/^    double a;$/;"	m	struct:alglib_impl::__anon55
a	lib/lua/etc/Makefile	/^	-.\/a.out -e'a=1'$/;"	m
a	tools/UTNaoTool/joystickxbox.h	/^  int a;$/;"	m	struct:ControllerInfo
a	tools/behaviorSim/cma.py	/^            self.B = np.eye(N) # identity(N), do not from matlib import *, as eye is a matrix there$/;"	i
a1Bot	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float a1Bot = atan(camera_up_bottom \/ camera_out_bottom) + camera_bottom_angle;$/;"	v	file:
a1Top	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float a1Top = atan(camera_up_top \/ camera_out_top) + camera_top_angle;$/;"	v	file:
a3Bot	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float a3Bot = camera_bottom_angle - M_PI;$/;"	v	file:
a3Top	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float a3Top = camera_top_angle - M_PI;$/;"	v	file:
ablas_ablasinternalsplitlength	lib/alglib/linalg.cpp	/^static void ablas_ablasinternalsplitlength(ae_int_t n,$/;"	f	namespace:alglib_impl
ablas_cmatrixgemmk	lib/alglib/linalg.cpp	/^static void ablas_cmatrixgemmk(ae_int_t m,$/;"	f	namespace:alglib_impl
ablas_cmatrixlefttrsm2	lib/alglib/linalg.cpp	/^static void ablas_cmatrixlefttrsm2(ae_int_t m,$/;"	f	namespace:alglib_impl
ablas_cmatrixrighttrsm2	lib/alglib/linalg.cpp	/^static void ablas_cmatrixrighttrsm2(ae_int_t m,$/;"	f	namespace:alglib_impl
ablas_cmatrixsyrk2	lib/alglib/linalg.cpp	/^static void ablas_cmatrixsyrk2(ae_int_t n,$/;"	f	namespace:alglib_impl
ablas_rmatrixgemmk	lib/alglib/linalg.cpp	/^static void ablas_rmatrixgemmk(ae_int_t m,$/;"	f	namespace:alglib_impl
ablas_rmatrixlefttrsm2	lib/alglib/linalg.cpp	/^static void ablas_rmatrixlefttrsm2(ae_int_t m,$/;"	f	namespace:alglib_impl
ablas_rmatrixrighttrsm2	lib/alglib/linalg.cpp	/^static void ablas_rmatrixrighttrsm2(ae_int_t m,$/;"	f	namespace:alglib_impl
ablas_rmatrixsyrk2	lib/alglib/linalg.cpp	/^static void ablas_rmatrixsyrk2(ae_int_t n,$/;"	f	namespace:alglib_impl
ablasblocksize	lib/alglib/linalg.cpp	/^ae_int_t ablasblocksize(\/* Real    *\/ ae_matrix* a, ae_state *_state)$/;"	f	namespace:alglib_impl
ablascomplexblocksize	lib/alglib/linalg.cpp	/^ae_int_t ablascomplexblocksize(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
ablascomplexsplitlength	lib/alglib/linalg.cpp	/^void ablascomplexsplitlength(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
ablasmicroblocksize	lib/alglib/linalg.cpp	/^ae_int_t ablasmicroblocksize(ae_state *_state)$/;"	f	namespace:alglib_impl
ablassplitlength	lib/alglib/linalg.cpp	/^void ablassplitlength(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
abort	core/python/task.py	/^  def abort(self):$/;"	m	class:BaseTask
abort	core/python/task.py	/^  def abort(self):$/;"	m	class:MultiTask
abort	core/python/task.py	/^  def abort(self):$/;"	m	class:Task
abortKick	core/memory/KickRequestBlock.h	/^  void abortKick(){$/;"	f	struct:KickRequestBlock
aborted	core/python/task.py	/^  def aborted(self):$/;"	m	class:BaseTask
abs	core/math/Vector.h	/^  V abs() const$/;"	f	class:Vector
abs	core/math/Vector2.h	/^  V abs() const$/;"	f	class:Vector2
abs	core/math/Vector3.h	/^  V abs() const $/;"	f	class:Vector3
absPosition	core/vision/structures/BallCandidate.h	/^  Position absPosition;$/;"	m	struct:BallCandidate
absTargetPt	core/memory/BehaviorBlock.h	/^  Point2D absTargetPt;$/;"	m	struct:BehaviorBlock
absVel	core/common/WorldObject.h	/^  Vector2D absVel;$/;"	m	class:WorldObject
absWalkVel	build/include/tool/simulation/SimulatedPlayer.h	/^  Pose2D absWalkVel;$/;"	m	class:SimulatedPlayer
absWalkVel	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  Pose2D absWalkVel;$/;"	m	class:SimulatedPlayer
abs_index	lib/lua/src/lauxlib.c	/^#define abs_index(/;"	d	file:
abs_left_foot_	core/memory/WalkEngineBlock.h	/^  Pose3D abs_left_foot_;$/;"	m	struct:WalkEngineBlock
abs_parts_	core/memory/BodyModelBlock.h	/^  Pose3D abs_parts_[BodyPart::NUM_PARTS];$/;"	m	struct:BodyModelBlock
abs_right_foot_	core/memory/WalkEngineBlock.h	/^  Pose3D abs_right_foot_;$/;"	m	struct:WalkEngineBlock
abscomplex	lib/alglib/ap.cpp	/^double alglib::abscomplex(const alglib::complex &z)$/;"	f	class:alglib
accX	core/motion/rswalk2014/PendulumModel.hpp	/^   float accX;$/;"	m	struct:PendulumModel
acc_var	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^static const float acc_var = SQUARE(DEG2RAD(50.f)); \/\/50$/;"	v	file:
accelTheta	build/include/tool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
accelTheta	tools/UTNaoTool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
accelX	build/include/tool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
accelX	core/common/RobotInfo.h	/^  accelX,$/;"	e	enum:Sensor
accelX	tools/UTNaoTool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
accelX_	core/memory/KickRequestBlock.h	/^  RingBufferWithSum<float, 10> accelX_;$/;"	m	struct:KickRequestBlock
accelY	build/include/tool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
accelY	core/common/RobotInfo.h	/^  accelY,$/;"	e	enum:Sensor
accelY	tools/UTNaoTool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
accelY_	core/memory/KickRequestBlock.h	/^  RingBufferWithSum<float, 10> accelY_;$/;"	m	struct:KickRequestBlock
accelZ	core/common/RobotInfo.h	/^  accelZ,$/;"	e	enum:Sensor
accel_sensor_delay_frames_	core/motion/WalkEngineParameters.h	/^  int accel_sensor_delay_frames_;$/;"	m	struct:WalkEngineParameters
access	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
aclamp	tools/behaviorSim/cma.py	/^        def aclamp(x, upper):$/;"	m	class:Misc.MathHelperFunctions
acos	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> acos (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
acos	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> acos (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
acount	lib/alglib/optimization.h	/^    ae_int_t acount;$/;"	m	struct:alglib_impl::__anon75
actionType	core/motion/rswalk2014/types/ActionCommand.hpp	/^      ActionType actionType;$/;"	m	struct:ActionCommand::Body
activate	build/include/tool/KeyframeWidget.cpp	/^void KeyframeItem::activate() {$/;"	f	class:KeyframeItem
activate	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::activate(QListWidgetItem* item) {$/;"	f	class:KeyframeWidget
activate	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeItem::activate() {$/;"	f	class:KeyframeItem
activate	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::activate(QListWidgetItem* item) {$/;"	f	class:KeyframeWidget
activated_	build/include/tool/KeyframeWidget.h	/^    KeyframeItem* activated_;$/;"	m	class:KeyframeWidget
activated_	tools/UTNaoTool/KeyframeWidget.h	/^    KeyframeItem* activated_;$/;"	m	class:KeyframeWidget
active	core/memory/BehaviorParamBlock.h	/^  bool active;$/;"	m	struct:SetPlay
active	core/motion/rswalk2014/ActionGenerator.hpp	/^      ActionCommand::Body active;$/;"	m	class:ActionGenerator
active	core/motion/rswalk2014/Walk2014Generator.hpp	/^   ActionCommand::Body active;$/;"	m	class:Walk2014Generator
activePlayers	build/include/tool/simulation/Simulation.h	/^    virtual std::vector<int> activePlayers() { return activePlayers_; }$/;"	f	class:Simulation
activePlayers	tools/UTNaoTool/simulation/Simulation.h	/^    virtual std::vector<int> activePlayers() { return activePlayers_; }$/;"	f	class:Simulation
activePlayers_	build/include/tool/simulation/Simulation.h	/^    std::vector<int> activePlayers_;$/;"	m	class:Simulation
activePlayers_	tools/UTNaoTool/simulation/Simulation.h	/^    std::vector<int> activePlayers_;$/;"	m	class:Simulation
activeconstraints	lib/alglib/optimization.h	/^    ae_int_t &activeconstraints;$/;"	m	class:alglib::minasareport
activeconstraints	lib/alglib/optimization.h	/^    ae_int_t activeconstraints;$/;"	m	struct:alglib_impl::__anon76
activeconstraints	lib/alglib/optimization.h	/^    ae_vector activeconstraints;$/;"	m	struct:alglib_impl::__anon71
activeconstraints	lib/alglib/optimization.h	/^    ae_vector activeconstraints;$/;"	m	struct:alglib_impl::__anon79
actual_Deg30_kick_distance_	core/memory/KickEngineBlock.h	/^  float actual_Deg30_kick_distance_;$/;"	m	struct:KickEngineBlock
actual_side_kick_distance_	core/memory/KickEngineBlock.h	/^  float actual_side_kick_distance_;$/;"	m	struct:KickEngineBlock
actual_straight_kick_distance_	core/memory/KickEngineBlock.h	/^  float actual_straight_kick_distance_;$/;"	m	struct:KickEngineBlock
actualdecrease	lib/alglib/optimization.h	/^    double actualdecrease;$/;"	m	struct:alglib_impl::__anon73
actuatorName	core/motion/rswalk2014/utils/body.hpp	/^   const std::string actuatorName = "US\/Actuator\/Value";$/;"	m	namespace:Sonar
actvar	lib/lua/src/lparser.h	/^  unsigned short actvar[LUAI_MAXVARS];  \/* declared-variable stack *\/$/;"	m	struct:FuncState
add	core/common/RingBuffer.h	/^    void add (const V& v) $/;"	f	class:RingBuffer
add	core/common/RingBufferWithSum.h	/^    void add (C value) $/;"	f	class:RingBufferWithSum
add	core/math/Range.h	/^    Range<T>& add(T t)$/;"	f	class:Range
add	core/math/Range.h	/^    Range<T>& add(const Range<T>& r)$/;"	f	class:Range
add	core/memory/StreamBuffer.cpp	/^void StreamBuffer::add(const char* data, unsigned int n) {$/;"	f	class:StreamBuffer
add	core/memory/StreamBuffer.cpp	/^void StreamBuffer::add(const unsigned char* data, unsigned int n) {$/;"	f	class:StreamBuffer
add	core/memory/StreamBuffer.cpp	/^void StreamBuffer::add(std::istream& is) {$/;"	f	class:StreamBuffer
add	core/memory/StreamBuffer.cpp	/^void StreamBuffer::add(std::istream& is, unsigned int n) {$/;"	f	class:StreamBuffer
add	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      inline void add(const XYZ_Coord &opt) {$/;"	f	class:XYZ_Coord
add	core/motion/rswalk2014/utils/speech.hpp	/^      void add(std::string text) {$/;"	f	class:Speech
add	tools/behaviorSim/cma.py	/^    def add(self, es=None, more_data=[], modulo=None): # TODO: find a different way to communicate current x and f$/;"	m	class:CMADataLogger
add	tools/behaviorSim/cma.py	/^    def add(self, fitness_values, es=None, more_data=[], modulo=None): # TODO: find a different way to communicate current x and f$/;"	m	class:DEAPCMADataLogger
add	tools/behaviorSim/cma.py	/^    def add(self, optim=None, more_data=[]):$/;"	m	class:BaseDataLogger
add	tools/behaviorSim/cma.py	/^    def add(self, optim=None, more_data=[]):$/;"	m	class:BaseDataLogger2
add1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> add1(const U& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
add1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> add1(const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
add2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> add2(const FTypeName<T,0>& a, const U& b)$/;"	f	namespace:fadbad
add2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> add2(const FTypeName<T,N>& a, const U& b)$/;"	f	namespace:fadbad
add3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> add3(const FTypeName<T,0>& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
add3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> add3(const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
addAccelX	core/memory/KickRequestBlock.h	/^  void addAccelX(float accel) {$/;"	f	struct:KickRequestBlock
addAccelY	core/memory/KickRequestBlock.h	/^  void addAccelY(float accel) {$/;"	f	struct:KickRequestBlock
addAllFrames	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::addAllFrames() {$/;"	f	class:LogEditorWindow
addAllFrames	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::addAllFrames() {$/;"	f	class:LogEditorWindow
addBlock	core/memory/Memory.h	/^  bool addBlock(const std::string &name,T *block) {$/;"	f	class:Memory
addBlock	core/memory/PrivateMemory.cpp	/^bool PrivateMemory::addBlock(const std::string &name,MemoryBlock *block) {$/;"	f	class:PrivateMemory
addBlock	core/memory/SharedMemory.h	/^  bool addBlock(const std::string &name, T *block) {$/;"	f	class:SharedMemory
addBlockByName	core/memory/Memory.cpp	/^bool Memory::addBlockByName(const std::string &name, MemoryOwner::Owner owner) {$/;"	f	class:Memory
addCopy	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^static inline XYZ_Coord addCopy(const XYZ_Coord &A, const XYZ_Coord &B) {$/;"	f
addData	core/memory/GraphableBlock.h	/^  void addData(const char *name, float data) {$/;"	f	struct:GraphableBlock
addDistance	core/sonar/SonarModule.cpp	/^void SonarModule::addDistance(float distance, int index) {$/;"	f	class:SonarModule
addFrames	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::addFrames() {$/;"	f	class:LogEditorWindow
addFrames	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::addFrames() {$/;"	f	class:LogEditorWindow
addImage	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^vector<Point2f> IntrinsicCalibrator::addImage(const cv::Mat& image) {$/;"	f	class:IntrinsicCalibrator
addImage	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^vector<Point2f> IntrinsicCalibrator::addImage(const cv::Mat& image) {$/;"	f	class:IntrinsicCalibrator
addImages	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^void IntrinsicCalibrator::addImages(const vector<Mat>& images) {$/;"	f	class:IntrinsicCalibrator
addImages	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^void IntrinsicCalibrator::addImages(const vector<Mat>& images) {$/;"	f	class:IntrinsicCalibrator
addKeyframe	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::addKeyframe() {$/;"	f	class:KeyframeWidget
addKeyframe	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::addKeyframe() {$/;"	f	class:KeyframeWidget
addKickJoints	core/motion/rswalk2014/Walk2014Generator.cpp	/^void Walk2014Generator::addKickJoints(JointValues &j){$/;"	f	class:Walk2014Generator
addLine	build/include/tool/PlotWindow.cpp	/^void PlotWindow::addLine(std::string name, std::string color) {$/;"	f	class:PlotWindow
addLine	tools/UTNaoTool/PlotWindow.cpp	/^void PlotWindow::addLine(std::string name, std::string color) {$/;"	f	class:PlotWindow
addLocalizationAnnotation	build/include/tool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::addLocalizationAnnotation(LocalizationAnnotation* la) {$/;"	f	class:AnnotationGroup
addLocalizationAnnotation	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::addLocalizationAnnotation(LocalizationAnnotation* la) {$/;"	f	class:AnnotationGroup
addMult	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      inline void addMult(const XYZ_Coord &opt, float mult) {$/;"	f	class:XYZ_Coord
addPathPoint	core/memory/BehaviorBlock.h	/^  void addPathPoint(int x, int y){dottedPathPoints.push_back(Point2D(x, y));};$/;"	f	struct:BehaviorBlock
addSample	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::addSample(Sample s){$/;"	f	class:ExtrinsicCalibrationWidget
addSample	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::addSample(Sample s){$/;"	f	class:ExtrinsicCalibrationWidget
addSelection	build/include/tool/annotations/Annotation.cpp	/^void Annotation::addSelection(Selection* selection){$/;"	f	class:Annotation
addSelection	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::addSelection(Selection* selection){$/;"	f	class:Annotation
addShot	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::addShot(QListWidgetItem* item) {$/;"	f	class:LogEditorWindow
addShot	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::addShot(QListWidgetItem* item) {$/;"	f	class:LogEditorWindow
addSplinePoint	build/include/tool/MotionGLWidget.cpp	/^  void MotionGLWidget::addSplinePoint() {$/;"	f	class:MotionGLWidget
addSplinePoint	tools/UTNaoTool/MotionGLWidget.cpp	/^  void MotionGLWidget::addSplinePoint() {$/;"	f	class:MotionGLWidget
addState	core/common/StateMachine.cpp	/^bool StateMachine::addState(std::string name, int ID) {$/;"	f	class:StateMachine
addTimeToSwingSplinePoint	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::addTimeToSwingSplinePoint(Vector3<float> &pt, float time_frac) {$/;"	f	class:MotionGLWidget
addTimeToSwingSplinePoint	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::addTimeToSwingSplinePoint(Vector3<float> &pt, float time_frac) {$/;"	f	class:MotionGLWidget
addTransition	core/common/StateMachine.cpp	/^bool StateMachine::addTransition(std::string state1, std::string state2) {$/;"	f	class:StateMachine
addVertex	build/include/tool/annotations/EllipseSelection.h	/^        void addVertex(Point p) {$/;"	f	class:EllipseSelection
addVertex	build/include/tool/annotations/PolygonSelection.h	/^        void addVertex(Point p) {$/;"	f	class:PolygonSelection
addVertex	core/math/Polygon.cpp	/^void Polygon::addVertex(int x, int y) {$/;"	f	class:Polygon
addVertex	tools/UTNaoTool/annotations/EllipseSelection.h	/^        void addVertex(Point p) {$/;"	f	class:EllipseSelection
addVertex	tools/UTNaoTool/annotations/PolygonSelection.h	/^        void addVertex(Point p) {$/;"	f	class:PolygonSelection
add_event	lib/lua/doc/manual.html	/^     function add_event (op1, op2)$/;"	f
add_s	lib/lua/src/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_value	lib/lua/src/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
addfield	lib/lua/src/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, int i) {$/;"	f	file:
addinfo	lib/lua/src/ldebug.c	/^static void addinfo (lua_State *L, const char *msg) {$/;"	f	file:
addintlen	lib/lua/src/lstrlib.c	/^static void addintlen (char *form) {$/;"	f	file:
addk	lib/lua/src/lcode.c	/^static int addk (FuncState *fs, TValue *k, TValue *v) {$/;"	f	file:
addquoted	lib/lua/src/lstrlib.c	/^static void addquoted (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addr	core/imageCapture/i2c-dev.h	/^	__u16 addr;	\/* slave address			*\/$/;"	m	struct:i2c_msg
addressChanged	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::addressChanged() {$/;"	f	class:UTMainWnd
addressChanged	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::addressChanged() {$/;"	f	class:UTMainWnd
adjoint	core/math/Matrix3x3.h	/^  Matrix3x3<V> adjoint() const$/;"	f	class:Matrix3x3
adjust_assign	lib/lua/src/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_varargs	lib/lua/src/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustlocalvars	lib/lua/src/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustresults	lib/lua/src/lapi.c	/^#define adjustresults(/;"	d	file:
adjuststack	lib/lua/src/lauxlib.c	/^static void adjuststack (luaL_Buffer *B) {$/;"	f	file:
adler	lib/zlib/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	lib/zlib/adler32.c	/^uLong ZEXPORT adler32(adler, buf, len)$/;"	f
adler32	lib/zlib/zconf.h	/^#  define adler32 /;"	d
adler32_combine	lib/zlib/adler32.c	/^uLong ZEXPORT adler32_combine(adler1, adler2, len2)$/;"	f
adler32_combine	lib/zlib/zconf.h	/^#  define adler32_combine /;"	d
adler32_combine	lib/zlib/zlib.h	/^#  define adler32_combine /;"	d
adler32_combine64	lib/zlib/adler32.c	/^uLong ZEXPORT adler32_combine64(adler1, adler2, len2)$/;"	f
adler32_combine64	lib/zlib/zconf.h	/^#  define adler32_combine64 /;"	d
adler32_combine_	lib/zlib/adler32.c	/^local uLong adler32_combine_(adler1, adler2, len2)$/;"	f
advanceIndex	core/common/RingBuffer.h	/^    void advanceIndex () $/;"	f	class:RingBuffer
ae_acos	lib/alglib/ap.cpp	/^double   ae_acos(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_align	lib/alglib/ap.cpp	/^void* ae_align(void *ptr, size_t alignment)$/;"	f	namespace:alglib_impl
ae_asin	lib/alglib/ap.cpp	/^double   ae_asin(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_assert	lib/alglib/ap.cpp	/^void ae_assert(ae_bool cond, const char *msg, ae_state *state)$/;"	f	namespace:alglib_impl
ae_atan	lib/alglib/ap.cpp	/^double   ae_atan(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_atan2	lib/alglib/ap.cpp	/^double   ae_atan2(double x, double y, ae_state *state)$/;"	f	namespace:alglib_impl
ae_bool	lib/alglib/ap.h	/^#define ae_bool /;"	d
ae_break	lib/alglib/ap.cpp	/^void ae_break(ae_state *state, ae_error_type error_type, const char *msg)$/;"	f	namespace:alglib_impl
ae_c_abs	lib/alglib/ap.cpp	/^double ae_c_abs(ae_complex z, ae_state *state)$/;"	f	namespace:alglib_impl
ae_c_add	lib/alglib/ap.cpp	/^ae_complex ae_c_add(ae_complex lhs,  ae_complex rhs)$/;"	f	namespace:alglib_impl
ae_c_add_d	lib/alglib/ap.cpp	/^ae_complex ae_c_add_d(ae_complex lhs, double rhs)$/;"	f	namespace:alglib_impl
ae_c_conj	lib/alglib/ap.cpp	/^ae_complex ae_c_conj(ae_complex lhs, ae_state *state)$/;"	f	namespace:alglib_impl
ae_c_d_div	lib/alglib/ap.cpp	/^ae_complex ae_c_d_div(double lhs,   ae_complex rhs)$/;"	f	namespace:alglib_impl
ae_c_d_sub	lib/alglib/ap.cpp	/^ae_complex ae_c_d_sub(double lhs,     ae_complex rhs)$/;"	f	namespace:alglib_impl
ae_c_div	lib/alglib/ap.cpp	/^ae_complex ae_c_div(ae_complex lhs,   ae_complex rhs)$/;"	f	namespace:alglib_impl
ae_c_div_d	lib/alglib/ap.cpp	/^ae_complex ae_c_div_d(ae_complex lhs, double rhs)$/;"	f	namespace:alglib_impl
ae_c_eq	lib/alglib/ap.cpp	/^ae_bool ae_c_eq(ae_complex lhs,   ae_complex rhs)$/;"	f	namespace:alglib_impl
ae_c_eq_d	lib/alglib/ap.cpp	/^ae_bool ae_c_eq_d(ae_complex lhs,  double rhs)$/;"	f	namespace:alglib_impl
ae_c_mul	lib/alglib/ap.cpp	/^ae_complex ae_c_mul(ae_complex lhs,  ae_complex rhs)$/;"	f	namespace:alglib_impl
ae_c_mul_d	lib/alglib/ap.cpp	/^ae_complex ae_c_mul_d(ae_complex lhs, double rhs)$/;"	f	namespace:alglib_impl
ae_c_neg	lib/alglib/ap.cpp	/^ae_complex ae_c_neg(ae_complex lhs)$/;"	f	namespace:alglib_impl
ae_c_neq	lib/alglib/ap.cpp	/^ae_bool ae_c_neq(ae_complex lhs,  ae_complex rhs)$/;"	f	namespace:alglib_impl
ae_c_neq_d	lib/alglib/ap.cpp	/^ae_bool ae_c_neq_d(ae_complex lhs, double rhs)$/;"	f	namespace:alglib_impl
ae_c_sqr	lib/alglib/ap.cpp	/^ae_complex ae_c_sqr(ae_complex lhs, ae_state *state)$/;"	f	namespace:alglib_impl
ae_c_sub	lib/alglib/ap.cpp	/^ae_complex ae_c_sub(ae_complex lhs,   ae_complex rhs)$/;"	f	namespace:alglib_impl
ae_c_sub_d	lib/alglib/ap.cpp	/^ae_complex ae_c_sub_d(ae_complex lhs, double rhs)$/;"	f	namespace:alglib_impl
ae_complex	lib/alglib/ap.h	/^typedef struct { double x, y; } ae_complex;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon26
ae_complex_from_d	lib/alglib/ap.cpp	/^ae_complex ae_complex_from_d(double v)$/;"	f	namespace:alglib_impl
ae_cos	lib/alglib/ap.cpp	/^double   ae_cos(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_cosh	lib/alglib/ap.cpp	/^double   ae_cosh(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_cpuid	lib/alglib/ap.cpp	/^ae_int_t ae_cpuid()$/;"	f	namespace:alglib_impl
ae_datatype	lib/alglib/ap.h	/^typedef ae_int_t ae_datatype;$/;"	t	namespace:alglib_impl
ae_db_attach	lib/alglib/ap.cpp	/^void ae_db_attach(ae_dyn_block *block, ae_state *state)$/;"	f	namespace:alglib_impl
ae_db_free	lib/alglib/ap.cpp	/^void ae_db_free(ae_dyn_block *block)$/;"	f	namespace:alglib_impl
ae_db_malloc	lib/alglib/ap.cpp	/^ae_bool ae_db_malloc(ae_dyn_block *block, ae_int_t size, ae_state *state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
ae_db_realloc	lib/alglib/ap.cpp	/^ae_bool ae_db_realloc(ae_dyn_block *block, ae_int_t size, ae_state *state)$/;"	f	namespace:alglib_impl
ae_db_swap	lib/alglib/ap.cpp	/^void ae_db_swap(ae_dyn_block *block1, ae_dyn_block *block2)$/;"	f	namespace:alglib_impl
ae_deallocator	lib/alglib/ap.h	/^typedef void(*ae_deallocator)(void*);$/;"	t	namespace:alglib_impl
ae_dyn_block	lib/alglib/ap.h	/^typedef struct ae_dyn_block$/;"	s	namespace:alglib_impl
ae_dyn_block	lib/alglib/ap.h	/^} ae_dyn_block;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::ae_dyn_block
ae_error_type	lib/alglib/ap.h	/^} ae_error_type;$/;"	t	namespace:alglib_impl	typeref:enum:alglib_impl::__anon27
ae_exp	lib/alglib/ap.cpp	/^double   ae_exp(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_fabs	lib/alglib/ap.cpp	/^double ae_fabs(double x,  ae_state *state)$/;"	f	namespace:alglib_impl
ae_false	lib/alglib/ap.h	/^#define ae_false /;"	d
ae_force_hermitian	lib/alglib/ap.cpp	/^ae_bool ae_force_hermitian(ae_matrix *a)$/;"	f	namespace:alglib_impl
ae_force_symmetric	lib/alglib/ap.cpp	/^ae_bool ae_force_symmetric(ae_matrix *a)$/;"	f	namespace:alglib_impl
ae_fp_eq	lib/alglib/ap.cpp	/^ae_bool ae_fp_eq(double v1, double v2)$/;"	f	namespace:alglib_impl
ae_fp_greater	lib/alglib/ap.cpp	/^ae_bool ae_fp_greater(double v1, double v2)$/;"	f	namespace:alglib_impl
ae_fp_greater_eq	lib/alglib/ap.cpp	/^ae_bool ae_fp_greater_eq(double v1, double v2)$/;"	f	namespace:alglib_impl
ae_fp_less	lib/alglib/ap.cpp	/^ae_bool ae_fp_less(double v1, double v2)$/;"	f	namespace:alglib_impl
ae_fp_less_eq	lib/alglib/ap.cpp	/^ae_bool ae_fp_less_eq(double v1, double v2)$/;"	f	namespace:alglib_impl
ae_fp_neq	lib/alglib/ap.cpp	/^ae_bool ae_fp_neq(double v1, double v2)$/;"	f	namespace:alglib_impl
ae_frame	lib/alglib/ap.h	/^typedef struct ae_frame$/;"	s	namespace:alglib_impl
ae_frame	lib/alglib/ap.h	/^} ae_frame;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::ae_frame
ae_frame_leave	lib/alglib/ap.cpp	/^void ae_frame_leave(ae_state *state)$/;"	f	namespace:alglib_impl
ae_frame_make	lib/alglib/ap.cpp	/^void ae_frame_make(ae_state *state, ae_frame *tmp)$/;"	f	namespace:alglib_impl
ae_free	lib/alglib/ap.cpp	/^void ae_free(void *p)$/;"	f	namespace:alglib_impl
ae_get_endianness	lib/alglib/ap.cpp	/^ae_int_t ae_get_endianness()$/;"	f	namespace:alglib_impl
ae_iabs	lib/alglib/ap.cpp	/^ae_int_t ae_iabs(ae_int_t x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_iceil	lib/alglib/ap.cpp	/^ae_int_t ae_iceil(double x,  ae_state *state)$/;"	f	namespace:alglib_impl
ae_ifloor	lib/alglib/ap.cpp	/^ae_int_t ae_ifloor(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_int32_t	lib/alglib/ap.h	/^typedef AE_INT32_T ae_int32_t;$/;"	t	namespace:alglib_impl
ae_int32_t	lib/alglib/ap.h	/^typedef _int32 ae_int32_t;$/;"	t	namespace:alglib_impl
ae_int32_t	lib/alglib/ap.h	/^typedef int ae_int32_t;$/;"	t	namespace:alglib_impl
ae_int32_t	lib/alglib/ap.h	/^typedef int32_t ae_int32_t;$/;"	t	namespace:alglib_impl
ae_int64_t	lib/alglib/ap.h	/^typedef AE_INT64_T ae_int64_t;$/;"	t	namespace:alglib_impl
ae_int64_t	lib/alglib/ap.h	/^typedef _int64 ae_int64_t;$/;"	t	namespace:alglib_impl
ae_int64_t	lib/alglib/ap.h	/^typedef int64_t ae_int64_t;$/;"	t	namespace:alglib_impl
ae_int64_t	lib/alglib/ap.h	/^typedef signed long long ae_int64_t;$/;"	t	namespace:alglib_impl
ae_int_t	lib/alglib/ap.h	/^typedef alglib_impl::ae_int_t ae_int_t;$/;"	t	namespace:alglib
ae_int_t	lib/alglib/ap.h	/^typedef ptrdiff_t ae_int_t;$/;"	t	namespace:alglib_impl
ae_is_hermitian	lib/alglib/ap.cpp	/^ae_bool ae_is_hermitian(ae_matrix *a)$/;"	f	namespace:alglib_impl
ae_is_symmetric	lib/alglib/ap.cpp	/^ae_bool ae_is_symmetric(ae_matrix *a)$/;"	f	namespace:alglib_impl
ae_isfinite	lib/alglib/ap.cpp	/^ae_bool ae_isfinite(double x,ae_state *state)$/;"	f	namespace:alglib_impl
ae_isfinite_stateless	lib/alglib/ap.cpp	/^ae_bool ae_isfinite_stateless(double x, ae_int_t endianness)$/;"	f	namespace:alglib_impl
ae_isinf	lib/alglib/ap.cpp	/^ae_bool ae_isinf(double x,   ae_state *state)$/;"	f	namespace:alglib_impl
ae_isinf_stateless	lib/alglib/ap.cpp	/^ae_bool ae_isinf_stateless(double x,    ae_int_t endianness)$/;"	f	namespace:alglib_impl
ae_isnan	lib/alglib/ap.cpp	/^ae_bool ae_isnan(double x,   ae_state *state)$/;"	f	namespace:alglib_impl
ae_isnan_stateless	lib/alglib/ap.cpp	/^ae_bool ae_isnan_stateless(double x,    ae_int_t endianness)$/;"	f	namespace:alglib_impl
ae_isneginf	lib/alglib/ap.cpp	/^ae_bool ae_isneginf(double x,ae_state *state)$/;"	f	namespace:alglib_impl
ae_isneginf_stateless	lib/alglib/ap.cpp	/^ae_bool ae_isneginf_stateless(double x, ae_int_t endianness)$/;"	f	namespace:alglib_impl
ae_isposinf	lib/alglib/ap.cpp	/^ae_bool ae_isposinf(double x,ae_state *state)$/;"	f	namespace:alglib_impl
ae_isposinf_stateless	lib/alglib/ap.cpp	/^ae_bool ae_isposinf_stateless(double x, ae_int_t endianness)$/;"	f	namespace:alglib_impl
ae_log	lib/alglib/ap.cpp	/^double   ae_log(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_machineepsilon	lib/alglib/ap.h	/^#define ae_machineepsilon /;"	d
ae_malloc	lib/alglib/ap.cpp	/^void* ae_malloc(size_t size, ae_state *state)$/;"	f	namespace:alglib_impl
ae_matrix	lib/alglib/ap.h	/^typedef struct ae_matrix$/;"	s	namespace:alglib_impl
ae_matrix	lib/alglib/ap.h	/^} ae_matrix;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::ae_matrix
ae_matrix_clear	lib/alglib/ap.cpp	/^void ae_matrix_clear(ae_matrix *dst)$/;"	f	namespace:alglib_impl
ae_matrix_init	lib/alglib/ap.cpp	/^ae_bool ae_matrix_init(ae_matrix *dst, ae_int_t rows, ae_int_t cols, ae_datatype datatype, ae_state *state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
ae_matrix_init_copy	lib/alglib/ap.cpp	/^ae_bool ae_matrix_init_copy(ae_matrix *dst, ae_matrix *src, ae_state *state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
ae_matrix_init_from_x	lib/alglib/ap.cpp	/^void ae_matrix_init_from_x(ae_matrix *dst, x_matrix *src, ae_state *state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
ae_matrix_set_length	lib/alglib/ap.cpp	/^ae_bool ae_matrix_set_length(ae_matrix *dst, ae_int_t rows, ae_int_t cols, ae_state *state)$/;"	f	namespace:alglib_impl
ae_matrix_update_row_pointers	lib/alglib/ap.cpp	/^void ae_matrix_update_row_pointers(ae_matrix *dst, void *storage)$/;"	f	namespace:alglib_impl
ae_matrix_wrapper	lib/alglib/ap.cpp	/^alglib::ae_matrix_wrapper::ae_matrix_wrapper()$/;"	f	class:alglib::ae_matrix_wrapper
ae_matrix_wrapper	lib/alglib/ap.cpp	/^alglib::ae_matrix_wrapper::ae_matrix_wrapper(const alglib::ae_matrix_wrapper &rhs)$/;"	f	class:alglib::ae_matrix_wrapper
ae_matrix_wrapper	lib/alglib/ap.h	/^class ae_matrix_wrapper$/;"	c	namespace:alglib
ae_maxint	lib/alglib/ap.cpp	/^ae_int_t ae_maxint(ae_int_t m1, ae_int_t m2, ae_state *state)$/;"	f	namespace:alglib_impl
ae_maxreal	lib/alglib/ap.cpp	/^double ae_maxreal(double m1, double m2, ae_state *state)$/;"	f	namespace:alglib_impl
ae_maxrealnumber	lib/alglib/ap.h	/^#define ae_maxrealnumber /;"	d
ae_minint	lib/alglib/ap.cpp	/^ae_int_t ae_minint(ae_int_t m1, ae_int_t m2, ae_state *state)$/;"	f	namespace:alglib_impl
ae_minreal	lib/alglib/ap.cpp	/^double ae_minreal(double m1, double m2, ae_state *state)$/;"	f	namespace:alglib_impl
ae_minrealnumber	lib/alglib/ap.h	/^#define ae_minrealnumber /;"	d
ae_misalignment	lib/alglib/ap.cpp	/^ae_int_t ae_misalignment(const void *ptr, size_t alignment)$/;"	f	namespace:alglib_impl
ae_pi	lib/alglib/ap.h	/^#define ae_pi /;"	d
ae_pow	lib/alglib/ap.cpp	/^double   ae_pow(double x, double y, ae_state *state)$/;"	f	namespace:alglib_impl
ae_randominteger	lib/alglib/ap.cpp	/^ae_int_t ae_randominteger(ae_int_t maxv, ae_state *state)$/;"	f	namespace:alglib_impl
ae_randomreal	lib/alglib/ap.cpp	/^double ae_randomreal(ae_state *state)$/;"	f	namespace:alglib_impl
ae_round	lib/alglib/ap.cpp	/^ae_int_t ae_round(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_sign	lib/alglib/ap.cpp	/^ae_int_t ae_sign(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_sin	lib/alglib/ap.cpp	/^double   ae_sin(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_sinh	lib/alglib/ap.cpp	/^double   ae_sinh(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_sizeof	lib/alglib/ap.cpp	/^ae_int_t ae_sizeof(ae_datatype datatype)$/;"	f	namespace:alglib_impl
ae_sqr	lib/alglib/ap.cpp	/^double ae_sqr(double x,  ae_state *state)$/;"	f	namespace:alglib_impl
ae_sqrt	lib/alglib/ap.cpp	/^double ae_sqrt(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_state	lib/alglib/ap.h	/^} ae_state;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon35
ae_state_clear	lib/alglib/ap.cpp	/^void ae_state_clear(ae_state *state)$/;"	f	namespace:alglib_impl
ae_state_init	lib/alglib/ap.cpp	/^void ae_state_init(ae_state *state)$/;"	f	namespace:alglib_impl
ae_state_set_break_jump	lib/alglib/ap.cpp	/^void ae_state_set_break_jump(ae_state *state, jmp_buf *buf)$/;"	f	namespace:alglib_impl
ae_swap_matrices	lib/alglib/ap.cpp	/^void ae_swap_matrices(ae_matrix *mat1, ae_matrix *mat2)$/;"	f	namespace:alglib_impl
ae_swap_vectors	lib/alglib/ap.cpp	/^void ae_swap_vectors(ae_vector *vec1, ae_vector *vec2)$/;"	f	namespace:alglib_impl
ae_tan	lib/alglib/ap.cpp	/^double   ae_tan(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_tanh	lib/alglib/ap.cpp	/^double   ae_tanh(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_true	lib/alglib/ap.h	/^#define ae_true /;"	d
ae_trunc	lib/alglib/ap.cpp	/^ae_int_t ae_trunc(double x, ae_state *state)$/;"	f	namespace:alglib_impl
ae_v_add	lib/alglib/ap.cpp	/^void ae_v_add(double *vdst,     ae_int_t stride_dst, const double *vsrc,  ae_int_t stride_src, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_addd	lib/alglib/ap.cpp	/^void ae_v_addd(double *vdst,    ae_int_t stride_dst, const double *vsrc,  ae_int_t stride_src, ae_int_t n, double alpha)$/;"	f	namespace:alglib_impl
ae_v_cadd	lib/alglib/ap.cpp	/^void ae_v_cadd(ae_complex *vdst,     ae_int_t stride_dst, const ae_complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_caddc	lib/alglib/ap.cpp	/^void ae_v_caddc(ae_complex *vdst,    ae_int_t stride_dst, const ae_complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, ae_complex alpha)$/;"	f	namespace:alglib_impl
ae_v_caddd	lib/alglib/ap.cpp	/^void ae_v_caddd(ae_complex *vdst,    ae_int_t stride_dst, const ae_complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, double alpha)$/;"	f	namespace:alglib_impl
ae_v_cdotproduct	lib/alglib/ap.cpp	/^ae_complex ae_v_cdotproduct(const ae_complex *v0, ae_int_t stride0, const char *conj0, const ae_complex *v1, ae_int_t stride1, const char *conj1, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_cmove	lib/alglib/ap.cpp	/^void ae_v_cmove(ae_complex *vdst, ae_int_t stride_dst, const ae_complex* vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_cmovec	lib/alglib/ap.cpp	/^void ae_v_cmovec(ae_complex *vdst, ae_int_t stride_dst, const ae_complex* vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, ae_complex alpha)$/;"	f	namespace:alglib_impl
ae_v_cmoved	lib/alglib/ap.cpp	/^void ae_v_cmoved(ae_complex *vdst, ae_int_t stride_dst, const ae_complex* vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, double alpha)$/;"	f	namespace:alglib_impl
ae_v_cmoveneg	lib/alglib/ap.cpp	/^void ae_v_cmoveneg(ae_complex *vdst, ae_int_t stride_dst, const ae_complex* vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_cmulc	lib/alglib/ap.cpp	/^void ae_v_cmulc(ae_complex *vdst, ae_int_t stride_dst, ae_int_t n, ae_complex alpha)$/;"	f	namespace:alglib_impl
ae_v_cmuld	lib/alglib/ap.cpp	/^void ae_v_cmuld(ae_complex *vdst, ae_int_t stride_dst, ae_int_t n, double alpha)$/;"	f	namespace:alglib_impl
ae_v_csub	lib/alglib/ap.cpp	/^void ae_v_csub(ae_complex *vdst,     ae_int_t stride_dst, const ae_complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_csubc	lib/alglib/ap.cpp	/^void ae_v_csubc(ae_complex *vdst, ae_int_t stride_dst, const ae_complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, ae_complex alpha)$/;"	f	namespace:alglib_impl
ae_v_csubd	lib/alglib/ap.cpp	/^void ae_v_csubd(ae_complex *vdst, ae_int_t stride_dst, const ae_complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, double alpha)$/;"	f	namespace:alglib_impl
ae_v_dotproduct	lib/alglib/ap.cpp	/^double ae_v_dotproduct(const double *v0, ae_int_t stride0, const double *v1, ae_int_t stride1, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_len	lib/alglib/ap.cpp	/^ae_int_t ae_v_len(ae_int_t a, ae_int_t b)$/;"	f	namespace:alglib_impl
ae_v_move	lib/alglib/ap.cpp	/^void ae_v_move(double *vdst,  ae_int_t stride_dst, const double* vsrc,  ae_int_t stride_src, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_moved	lib/alglib/ap.cpp	/^void ae_v_moved(double *vdst,  ae_int_t stride_dst, const double* vsrc,  ae_int_t stride_src, ae_int_t n, double alpha)$/;"	f	namespace:alglib_impl
ae_v_moveneg	lib/alglib/ap.cpp	/^void ae_v_moveneg(double *vdst,  ae_int_t stride_dst, const double* vsrc,  ae_int_t stride_src, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_muld	lib/alglib/ap.cpp	/^void ae_v_muld(double *vdst,  ae_int_t stride_dst, ae_int_t n, double alpha)$/;"	f	namespace:alglib_impl
ae_v_sub	lib/alglib/ap.cpp	/^void ae_v_sub(double *vdst,     ae_int_t stride_dst, const double *vsrc,  ae_int_t stride_src, ae_int_t n)$/;"	f	namespace:alglib_impl
ae_v_subd	lib/alglib/ap.cpp	/^void ae_v_subd(double *vdst,  ae_int_t stride_dst, const double *vsrc,  ae_int_t stride_src, ae_int_t n, double alpha)$/;"	f	namespace:alglib_impl
ae_vector	lib/alglib/ap.h	/^typedef struct ae_vector$/;"	s	namespace:alglib_impl
ae_vector	lib/alglib/ap.h	/^} ae_vector;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::ae_vector
ae_vector_clear	lib/alglib/ap.cpp	/^void ae_vector_clear(ae_vector *dst)$/;"	f	namespace:alglib_impl
ae_vector_init	lib/alglib/ap.cpp	/^ae_bool ae_vector_init(ae_vector *dst, ae_int_t size, ae_datatype datatype, ae_state *state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
ae_vector_init_copy	lib/alglib/ap.cpp	/^ae_bool ae_vector_init_copy(ae_vector *dst, ae_vector *src, ae_state *state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
ae_vector_init_from_x	lib/alglib/ap.cpp	/^void ae_vector_init_from_x(ae_vector *dst, x_vector *src, ae_state *state, ae_bool make_automatic)$/;"	f	namespace:alglib_impl
ae_vector_set_length	lib/alglib/ap.cpp	/^ae_bool ae_vector_set_length(ae_vector *dst, ae_int_t newsize, ae_state *state)$/;"	f	namespace:alglib_impl
ae_vector_wrapper	lib/alglib/ap.cpp	/^alglib::ae_vector_wrapper::ae_vector_wrapper()$/;"	f	class:alglib::ae_vector_wrapper
ae_vector_wrapper	lib/alglib/ap.cpp	/^alglib::ae_vector_wrapper::ae_vector_wrapper(const alglib::ae_vector_wrapper &rhs)$/;"	f	class:alglib::ae_vector_wrapper
ae_vector_wrapper	lib/alglib/ap.h	/^class ae_vector_wrapper$/;"	c	namespace:alglib
ae_x_attach_to_matrix	lib/alglib/ap.cpp	/^void ae_x_attach_to_matrix(x_matrix *dst, ae_matrix *src)$/;"	f	namespace:alglib_impl
ae_x_attach_to_vector	lib/alglib/ap.cpp	/^void ae_x_attach_to_vector(x_vector *dst, ae_vector *src)$/;"	f	namespace:alglib_impl
ae_x_set_matrix	lib/alglib/ap.cpp	/^void ae_x_set_matrix(x_matrix *dst, ae_matrix *src, ae_state *state)$/;"	f	namespace:alglib_impl
ae_x_set_vector	lib/alglib/ap.cpp	/^void ae_x_set_vector(x_vector *dst, ae_vector *src, ae_state *state)$/;"	f	namespace:alglib_impl
agentTeamName	interfaces/sim_spark/RobotBehavior.h	/^  std::string agentTeamName;$/;"	m	class:RobotBehavior
agentUNum	interfaces/sim_spark/RobotBehavior.h	/^  int agentUNum;$/;"	m	class:RobotBehavior
agents_	build/include/tool/simulation/LocalizationSimulation.h	/^    std::map<LocSimAgent::Type, LocSimAgent> agents_;$/;"	m	class:LocalizationSimulation
agents_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    std::map<LocSimAgent::Type, LocSimAgent> agents_;$/;"	m	class:LocalizationSimulation
ah	data/goalfit.py	/^ah = numpy.exp(logah)$/;"	v
airy	lib/alglib/specialfunctions.cpp	/^void airy(const double x, double &ai, double &aip, double &bi, double &bip)$/;"	f	namespace:alglib
airy	lib/alglib/specialfunctions.cpp	/^void airy(double x,$/;"	f	namespace:alglib_impl
ak	lib/alglib/optimization.h	/^    ae_vector ak;$/;"	m	struct:alglib_impl::__anon75
akind	lib/alglib/optimization.h	/^    ae_int_t akind;$/;"	m	struct:alglib_impl::__anon71
al_memory_	interfaces/nao/src/naointerface.h	/^    boost::shared_ptr<AL::ALMemoryProxy> al_memory_;$/;"	m	class:naointerface
al_motion_	interfaces/nao/src/naointerface.h	/^    boost::shared_ptr<AL::ALMotionProxy> al_motion_;$/;"	m	class:naointerface
al_motion_wrap_	interfaces/nao/src/naointerface.h	/^    ALMotionWrapper* al_motion_wrap_;$/;"	m	class:naointerface
al_walk_param	core/python/memory.py	/^  def al_walk_param(): return core.pythonC.al_walk_param_$/;"	f	function:init
al_walk_param_	core/InterpreterModule.h	/^    ALWalkParamBlock *al_walk_param_;$/;"	m	class:InterpreterModule
al_walk_param_	core/MotionCore.h	/^  ALWalkParamBlock* al_walk_param_;$/;"	m	class:MotionCore
al_walk_param_	interfaces/nao/src/naointerface.h	/^    ALWalkParamBlock* al_walk_param_;$/;"	m	class:naointerface
alglib	lib/alglib/alglibinternal.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/alglibinternal.h	/^namespace alglib$/;"	n
alglib	lib/alglib/alglibmisc.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/alglibmisc.h	/^namespace alglib$/;"	n
alglib	lib/alglib/ap.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/ap.h	/^namespace alglib$/;"	n
alglib	lib/alglib/dataanalysis.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/dataanalysis.h	/^namespace alglib$/;"	n
alglib	lib/alglib/diffequations.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/diffequations.h	/^namespace alglib$/;"	n
alglib	lib/alglib/fasttransforms.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/fasttransforms.h	/^namespace alglib$/;"	n
alglib	lib/alglib/integration.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/integration.h	/^namespace alglib$/;"	n
alglib	lib/alglib/interpolation.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/interpolation.h	/^namespace alglib$/;"	n
alglib	lib/alglib/linalg.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/linalg.h	/^namespace alglib$/;"	n
alglib	lib/alglib/optimization.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/optimization.h	/^namespace alglib$/;"	n
alglib	lib/alglib/solvers.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/solvers.h	/^namespace alglib$/;"	n
alglib	lib/alglib/specialfunctions.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/specialfunctions.h	/^namespace alglib$/;"	n
alglib	lib/alglib/statistics.cpp	/^namespace alglib$/;"	n	file:
alglib	lib/alglib/statistics.h	/^namespace alglib$/;"	n
alglib_c_block	lib/alglib/ap.cpp	/^#define alglib_c_block /;"	d	file:
alglib_half_c_block	lib/alglib/ap.cpp	/^#define alglib_half_c_block /;"	d	file:
alglib_half_r_block	lib/alglib/ap.cpp	/^#define alglib_half_r_block /;"	d	file:
alglib_impl	lib/alglib/alglibinternal.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/alglibinternal.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/alglibmisc.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/alglibmisc.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/ap.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/ap.h	/^namespace alglib_impl { \/\/ namespace declaration continued$/;"	n
alglib_impl	lib/alglib/ap.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/dataanalysis.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/dataanalysis.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/diffequations.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/diffequations.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/fasttransforms.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/fasttransforms.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/integration.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/integration.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/interpolation.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/interpolation.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/linalg.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/linalg.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/optimization.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/optimization.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/solvers.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/solvers.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/specialfunctions.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/specialfunctions.h	/^namespace alglib_impl$/;"	n
alglib_impl	lib/alglib/statistics.cpp	/^namespace alglib_impl$/;"	n	file:
alglib_impl	lib/alglib/statistics.h	/^namespace alglib_impl$/;"	n
alglib_r_block	lib/alglib/ap.cpp	/^#define alglib_r_block /;"	d	file:
alglib_simd_alignment	lib/alglib/ap.cpp	/^#define alglib_simd_alignment /;"	d	file:
alglib_twice_c_block	lib/alglib/ap.cpp	/^#define alglib_twice_c_block /;"	d	file:
alglib_twice_r_block	lib/alglib/ap.cpp	/^#define alglib_twice_r_block /;"	d	file:
algokind	lib/alglib/optimization.h	/^    ae_int_t algokind;$/;"	m	struct:alglib_impl::__anon71
algomode	lib/alglib/optimization.h	/^    ae_int_t algomode;$/;"	m	struct:alglib_impl::__anon73
algpowerup	lib/alglib/optimization.h	/^    ae_bool algpowerup;$/;"	m	struct:alglib_impl::__anon77
align	core/python/behaviors/win.py	/^  align=4$/;"	v	class:AttackingStates
align_	build/include/tool/simulation/GoalieSimulation.h	/^    bool align_;$/;"	m	class:GoalieSimulation
align_	tools/UTNaoTool/simulation/GoalieSimulation.h	/^    bool align_;$/;"	m	class:GoalieSimulation
align_height_	core/motion/KickParameters.h	/^  float align_height_;$/;"	m	struct:KickParameters
align_x_	core/memory/KickModuleBlock.h	/^  float align_x_;$/;"	m	struct:KickModuleBlock
align_y_	core/memory/KickModuleBlock.h	/^  float align_y_;$/;"	m	struct:KickModuleBlock
aligned_free	lib/alglib/ap.cpp	/^void aligned_free(void *block)$/;"	f	namespace:alglib_impl
aligned_malloc	lib/alglib/ap.cpp	/^void* aligned_malloc(size_t size, size_t alignment)$/;"	f	namespace:alglib_impl
allBottomLeftEye	core/lights/LEDModule.cpp	/^void LEDModule::allBottomLeftEye(float r, float g, float b) {$/;"	f	class:LEDModule
allBottomRightEye	core/lights/LEDModule.cpp	/^void LEDModule::allBottomRightEye(float r, float g, float b) {$/;"	f	class:LEDModule
allGroupToggled	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::allGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
allGroupToggled	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::allGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
allInterfaces	bin/compile	/^allInterfaces = list(validInterfaces)$/;"	v
allInterfaces	bin/copy_robot	/^allInterfaces = list(validInterfaces)$/;"	v
allInterfaces	build/compile	/^allInterfaces = list(validInterfaces)$/;"	v
allInterfaces	build/copy_robot	/^allInterfaces = list(validInterfaces)$/;"	v
allLeftEar	core/lights/LEDModule.cpp	/^void LEDModule::allLeftEar(float val) {$/;"	f	class:LEDModule
allLeftEye	core/lights/LEDModule.cpp	/^void LEDModule::allLeftEye(float r, float g, float b) {$/;"	f	class:LEDModule
allRangeEye	core/lights/LEDModule.cpp	/^void LEDModule::allRangeEye(int startOffset, int count, bool right, float r, float g, float b) {$/;"	f	class:LEDModule
allRightEar	core/lights/LEDModule.cpp	/^void LEDModule::allRightEar(float val) {$/;"	f	class:LEDModule
allRightEye	core/lights/LEDModule.cpp	/^void LEDModule::allRightEye(float r, float g, float b) {$/;"	f	class:LEDModule
allTopLeftEye	core/lights/LEDModule.cpp	/^void LEDModule::allTopLeftEye(float r, float g, float b) {$/;"	f	class:LEDModule
allTopRightEye	core/lights/LEDModule.cpp	/^void LEDModule::allTopRightEye(float r, float g, float b) {$/;"	f	class:LEDModule
alloc_func	lib/zlib/zconf.h	/^#  define alloc_func /;"	d
alloc_func	lib/zlib/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
allocate_own	lib/alglib/ap.cpp	/^void alglib::ae_matrix_wrapper::allocate_own(ae_int_t rows, ae_int_t cols, alglib_impl::ae_datatype datatype)$/;"	f	class:alglib::ae_matrix_wrapper
allocate_own	lib/alglib/ap.cpp	/^void alglib::ae_vector_wrapper::allocate_own(ae_int_t size, alglib_impl::ae_datatype datatype)$/;"	f	class:alglib::ae_vector_wrapper
allowOpponentSideDist	core/memory/BehaviorParamBlock.h	/^  float allowOpponentSideDist; \/\/ passes that are more than this to the side can ignore the minOpponentDist (negative disallows this option)$/;"	m	struct:KickStrategy
allowOpponentSideDist	core/memory/BehaviorParamBlock.h	/^  float allowOpponentSideDist;$/;"	m	struct:ClusterKickStrategy
allow_correction_walk_	core/memory/KickRequestBlock.h	/^  bool allow_correction_walk_;$/;"	m	struct:KickRequestBlock
allow_multiple	core/sensor/ButtonModule.h	/^    bool allow_multiple;$/;"	m	struct:ButtonModule::ButtonInfo
allowhook	lib/lua/src/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State
alpha	core/math/GaussNewtonOptimizer.h	/^  float alpha;$/;"	m	class:GaussNewtonOptimizer
alpha	core/memory/OpponentBlock.h	/^  float alpha;$/;"	m	struct:OpponentModel
alpha	core/opponents/UKF4.h	/^  float alpha;$/;"	m	class:UKF4
alpha	core/python/behaviors/head_tracking.py	/^alpha = 0.6$/;"	v
alpha	core/python/behaviors/pid_distance_angle.py	/^alpha = 0.6$/;"	v
alpha	lib/alglib/integration.h	/^    double alpha;$/;"	m	struct:alglib_impl::__anon55
alreadyProcessedFrame	core/MotionCore.cpp	/^bool MotionCore::alreadyProcessedFrame() {$/;"	f	class:MotionCore
also	tools/behaviorSim/cma.py	/^    import matplotlib.pylab as pylab  # also: use ipython -pylab$/;"	i
amax	tools/behaviorSim/cma.py	/^        def amax(vec, vec_or_scalar):$/;"	m	class:Misc.MathHelperFunctions
amin	tools/behaviorSim/cma.py	/^        def amin(vec_or_scalar, vec_or_scalar2):$/;"	m	class:Misc.MathHelperFunctions
an	lib/alglib/optimization.h	/^    ae_vector an;$/;"	m	struct:alglib_impl::__anon75
analyze	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::analyze(){$/;"	f	class:AnalysisWidget
analyze	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::analyze(){$/;"	f	class:AnalysisWidget
analyzer	build/include/tool/AnnotationWidget.h	/^        AnnotationAnalyzer analyzer;$/;"	m	class:AnnotationWidget
analyzer	tools/UTNaoTool/AnnotationWidget.h	/^        AnnotationAnalyzer analyzer;$/;"	m	class:AnnotationWidget
analyzer_	build/include/tool/AnalysisWidget.h	/^        AnnotationAnalyzer analyzer_;$/;"	m	class:AnalysisWidget
analyzer_	tools/UTNaoTool/AnalysisWidget.h	/^        AnnotationAnalyzer analyzer_;$/;"	m	class:AnalysisWidget
anchor_t	lib/yaml-cpp/include/yaml-cpp/anchor.h	/^	typedef std::size_t anchor_t;$/;"	t	namespace:YAML
anchor_token	lib/lua/src/lparser.c	/^static void anchor_token (LexState *ls) {$/;"	f	file:
and	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
and	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
angle	core/math/Vector2.h	/^  float angle() const$/;"	f	class:Vector2
angleX	core/common/RobotInfo.h	/^  angleX,$/;"	e	enum:Sensor
angleXVel	core/memory/SensorBlock.h	/^  float angleXVel;$/;"	m	struct:SensorBlock
angleY	core/common/RobotInfo.h	/^  angleY,$/;"	e	enum:Sensor
angleYBuffer	core/motion/GetupModule.h	/^  RingBufferWithSum<float,20> angleYBuffer;$/;"	m	class:GetupModule
angleYVel	core/memory/SensorBlock.h	/^  float angleYVel;$/;"	m	struct:SensorBlock
angleZ	core/common/RobotInfo.h	/^  angleZ,$/;"	e	enum:Sensor
angleZVel	core/memory/SensorBlock.h	/^  float angleZVel;$/;"	m	struct:SensorBlock
angle_commands	build/include/tool/MotionSimulation.h	/^  float angle_commands[NUM_JOINTS];$/;"	m	class:MotionSimulation
angle_commands	tools/UTNaoTool/MotionSimulation.h	/^  float angle_commands[NUM_JOINTS];$/;"	m	class:MotionSimulation
angle_target	core/motion/rswalk2014/RSWalkModule2014.h	/^	float angle_target;$/;"	m	class:RSWalkModule2014
angle_time	build/include/tool/MotionSimulation.h	/^  float angle_time;$/;"	m	class:MotionSimulation
angle_time	tools/UTNaoTool/MotionSimulation.h	/^  float angle_time;$/;"	m	class:MotionSimulation
angle_var	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^static const float angle_var = SQUARE(DEG2RAD(1.f)); \/\/1$/;"	v	file:
angles	core/common/RobotInfo.h	/^	Joints angles;$/;"	m	struct:JointRequest
angles	core/motion/rswalk2014/types/JointValues.hpp	/^   float angles[RSJoints::NUMBER_OF_JOINTS];$/;"	m	struct:JointValues
angles_	core/memory/JointCommandBlock.h	/^  float angles_[NUM_JOINTS];$/;"	m	struct:JointCommandBlock
ankle	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float ankle;                                            \/\/ height of ankle above ground$/;"	m	class:Walk2014Generator
anklePitchL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float anklePitchL, anklePitchR;$/;"	m	class:Walk2014Generator
anklePitchR	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float anklePitchL, anklePitchR;$/;"	m	class:Walk2014Generator
ankleToFootCenter	core/common/RobotDimensions.h	/^    ankleToFootCenter,$/;"	e	enum:RobotDimensions::__anon8
annotationModeChanged	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::annotationModeChanged(int state){$/;"	f	class:AnnotationWidget
annotationModeChanged	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::annotationModeChanged(int state){$/;"	f	class:AnnotationWidget
annotationSelected	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::annotationSelected(){$/;"	f	class:AnnotationWidget
annotationSelected	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::annotationSelected(){$/;"	f	class:AnnotationWidget
annotation_	build/include/tool/AnnotationWidget.h	/^        Annotation* annotation_;$/;"	m	class:AnnotationListWidgetItem
annotation_	tools/UTNaoTool/AnnotationWidget.h	/^        Annotation* annotation_;$/;"	m	class:AnnotationListWidgetItem
annotations_	build/include/tool/AnalysisWidget.h	/^        vector<Annotation*> annotations_;$/;"	m	class:AnalysisWidget
annotations_	build/include/tool/AnnotationWidget.h	/^        std::map<std::string, Annotation*> annotations_;$/;"	m	class:AnnotationWidget
annotations_	build/include/tool/ClassificationWidget.h	/^        vector<Annotation*> annotations_;$/;"	m	class:ClassificationWidget
annotations_	build/include/tool/LogWidget.h	/^    AnnotationGroup* annotations_;$/;"	m	class:LogWidget
annotations_	build/include/tool/UTMainWnd.h	/^  AnnotationGroup* annotations_;$/;"	m	class:UTMainWnd
annotations_	build/include/tool/UTOpenGL/GLDrawer.h	/^    AnnotationGroup* annotations_;$/;"	m	class:GLDrawer
annotations_	build/include/tool/WorldGLWidget.h	/^    AnnotationGroup* annotations_;$/;"	m	class:WorldGLWidget
annotations_	build/include/tool/WorldWindow.h	/^    AnnotationGroup* annotations_;$/;"	m	class:WorldWindow
annotations_	build/include/tool/annotations/AnnotationAnalyzer.h	/^        std::vector<Annotation*> annotations_;$/;"	m	class:AnnotationAnalyzer
annotations_	tools/UTNaoTool/AnalysisWidget.h	/^        vector<Annotation*> annotations_;$/;"	m	class:AnalysisWidget
annotations_	tools/UTNaoTool/AnnotationWidget.h	/^        std::map<std::string, Annotation*> annotations_;$/;"	m	class:AnnotationWidget
annotations_	tools/UTNaoTool/ClassificationWidget.h	/^        vector<Annotation*> annotations_;$/;"	m	class:ClassificationWidget
annotations_	tools/UTNaoTool/LogWidget.h	/^    AnnotationGroup* annotations_;$/;"	m	class:LogWidget
annotations_	tools/UTNaoTool/UTMainWnd.h	/^  AnnotationGroup* annotations_;$/;"	m	class:UTMainWnd
annotations_	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    AnnotationGroup* annotations_;$/;"	m	class:GLDrawer
annotations_	tools/UTNaoTool/WorldGLWidget.h	/^    AnnotationGroup* annotations_;$/;"	m	class:WorldGLWidget
annotations_	tools/UTNaoTool/WorldWindow.h	/^    AnnotationGroup* annotations_;$/;"	m	class:WorldWindow
annotations_	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^        std::vector<Annotation*> annotations_;$/;"	m	class:AnnotationAnalyzer
ap_error	lib/alglib/ap.cpp	/^alglib::ap_error::ap_error()$/;"	f	class:alglib::ap_error
ap_error	lib/alglib/ap.cpp	/^alglib::ap_error::ap_error(const char *s)$/;"	f	class:alglib::ap_error
ap_error	lib/alglib/ap.h	/^class ap_error$/;"	c	namespace:alglib
apbuffers	lib/alglib/alglibinternal.h	/^} apbuffers;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon20
api_check	lib/lua/src/llimits.h	/^#define api_check	/;"	d
api_check	lib/lua/src/llimits.h	/^#define api_check(/;"	d
api_checknelems	lib/lua/src/lapi.c	/^#define api_checknelems(/;"	d	file:
api_checkvalidindex	lib/lua/src/lapi.c	/^#define api_checkvalidindex(/;"	d	file:
api_incr_top	lib/lua/src/lapi.c	/^#define api_incr_top(/;"	d	file:
apos	tools/behaviorSim/cma.py	/^        def apos(x, lower=0):$/;"	m	class:Misc.MathHelperFunctions
apperiodicmap	lib/alglib/alglibinternal.cpp	/^void apperiodicmap(double* x,$/;"	f	namespace:alglib_impl
applyDimensions	core/common/RobotCalibration.cpp	/^void RobotCalibration::applyDimensions(float* dimensions) {$/;"	f	class:RobotCalibration
applyJoints	core/common/RobotCalibration.cpp	/^void RobotCalibration::applyJoints(float* joints) {$/;"	f	class:RobotCalibration
applySensors	core/common/RobotCalibration.cpp	/^void RobotCalibration::applySensors(float* sensors) {$/;"	f	class:RobotCalibration
applyreflectionfromtheleft	lib/alglib/alglibinternal.cpp	/^void applyreflectionfromtheleft(\/* Real    *\/ ae_matrix* c,$/;"	f	namespace:alglib_impl
applyreflectionfromtheright	lib/alglib/alglibinternal.cpp	/^void applyreflectionfromtheright(\/* Real    *\/ ae_matrix* c,$/;"	f	namespace:alglib_impl
applyrotationsfromtheleft	lib/alglib/alglibinternal.cpp	/^void applyrotationsfromtheleft(ae_bool isforward,$/;"	f	namespace:alglib_impl
applyrotationsfromtheright	lib/alglib/alglibinternal.cpp	/^void applyrotationsfromtheright(ae_bool isforward,$/;"	f	namespace:alglib_impl
approach	core/python/behaviors/win.py	/^  approach=1$/;"	v	class:AttackingStates
approachState_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    int approachState_;$/;"	m	class:IsolatedBehaviorSimulation
approachState_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    int approachState_;$/;"	m	class:IsolatedBehaviorSimulation
approxf	lib/alglib/alglibmisc.h	/^    double approxf;$/;"	m	struct:alglib_impl::__anon25
apservisfinitecmatrix	lib/alglib/alglibinternal.cpp	/^ae_bool apservisfinitecmatrix(\/* Complex *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
apservisfinitectrmatrix	lib/alglib/alglibinternal.cpp	/^ae_bool apservisfinitectrmatrix(\/* Complex *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
apservisfinitematrix	lib/alglib/alglibinternal.cpp	/^ae_bool apservisfinitematrix(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
apservisfiniteornanmatrix	lib/alglib/alglibinternal.cpp	/^ae_bool apservisfiniteornanmatrix(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
arange	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
arcsine	interfaces/sim_spark/Random.h	/^   float arcsine( float xMin = 0., float xMax = 1. )   \/\/ Arc Sine$/;"	f	class:Random
areDistinct	core/python/primary_bvr.py	/^def areDistinct(state1, state2):$/;"	f
areFeetOnGround	core/vision/VisionModule.cpp	/^bool VisionModule::areFeetOnGround() {$/;"	f	class:VisionModule
areJointsHot	core/motion/GetupModule.cpp	/^bool GetupModule::areJointsHot() {$/;"	f	class:GetupModule
area	core/vision/structures/FocusArea.h	/^  int width, height, cx, cy, area;$/;"	m	struct:FocusArea
aredistinct	lib/alglib/alglibinternal.cpp	/^ae_bool aredistinct(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
arg	bin/copy_robot	/^    arg = arg.lower()$/;"	v
arg	build/copy_robot	/^    arg = arg.lower()$/;"	v
argList	core/sensor/offline/genInertialFilterMatrices.py	/^argList = [[False,0.01],[True,0.02]] # args in format (in_simulation,dt)$/;"	v
argc	lib/lua/src/lua.c	/^  int argc;$/;"	m	struct:Smain	file:
argc	lib/lua/src/luac.c	/^ int argc;$/;"	m	struct:Smain	file:
args	build/luaswig/generateSwig.py	/^  args = sys.argv[1:]$/;"	v
args	install/copy_wpa.py	/^  args = sys.argv[1:]$/;"	v
args	tools/behaviorSim/runCMAES.py	/^  args = sys.argv[1:]$/;"	v
argsort	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
argv	lib/lua/src/lua.c	/^  char **argv;$/;"	m	struct:Smain	file:
argv	lib/lua/src/luac.c	/^ char** argv;$/;"	m	struct:Smain	file:
arith_op	lib/lua/src/lvm.c	/^#define arith_op(/;"	d	file:
armBehindKeeperPose	core/python/cfgpose.py	/^armBehindKeeperPose = dict()$/;"	v
armBehindPose	core/python/cfgpose.py	/^armBehindPose = dict()$/;"	v
armOffset1	core/common/RobotDimensions.h	/^    armOffset1,$/;"	e	enum:RobotDimensions::__anon8
armOffset2	core/common/RobotDimensions.h	/^    armOffset2,$/;"	e	enum:RobotDimensions::__anon8
armOffset3	core/common/RobotDimensions.h	/^    armOffset3,$/;"	e	enum:RobotDimensions::__anon8
armSidePose	core/python/cfgpose.py	/^armSidePose = dict()$/;"	v
armStart	core/motion/rswalk2014/RSWalkModule2014.h	/^        Joints armStart;$/;"	m	class:RSWalkModule2014
armStuck	core/motion/rswalk2014/Walk2014Generator.hpp	/^   bool armStuck;$/;"	m	class:Walk2014Generator
arm_command_time_	core/memory/JointCommandBlock.h	/^  float arm_command_time_;$/;"	m	struct:JointCommandBlock
arm_joint_names_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue arm_joint_names_;$/;"	m	class:ALMotionWrapper
arm_position_commands_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue arm_position_commands_;$/;"	m	class:ALMotionWrapper
arm_state_	core/motion/rswalk2014/RSWalkModule2014.h	/^        int arm_state_;$/;"	m	class:RSWalkModule2014
arm_state_change_	core/motion/rswalk2014/RSWalkModule2014.h	/^        float arm_state_change_;$/;"	m	class:RSWalkModule2014
armijocreate	lib/alglib/alglibinternal.cpp	/^void armijocreate(ae_int_t n,$/;"	f	namespace:alglib_impl
armijoiteration	lib/alglib/alglibinternal.cpp	/^ae_bool armijoiteration(armijostate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
armijoresults	lib/alglib/alglibinternal.cpp	/^void armijoresults(armijostate* state,$/;"	f	namespace:alglib_impl
armijostate	lib/alglib/alglibinternal.h	/^} armijostate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon22
armsStuckBehindBack	core/motion/GetupModule.cpp	/^bool GetupModule::armsStuckBehindBack() {$/;"	f	class:GetupModule
arms_close_to_targets_	core/motion/rswalk2014/RSWalkModule2014.h	/^        bool arms_close_to_targets_;$/;"	m	class:RSWalkModule2014
array	lib/lua/src/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table
array	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
array_image	core/vision/Union_find.h	/^		unsigned char *array_image;$/;"	m	class:MergeBlob
array_tree	core/vision/Union_find.h	/^		int *array_tree;$/;"	m	class:MergeBlob
array_weight	core/vision/Union_find.h	/^		int *array_weight;$/;"	m	class:MergeBlob
arrayindex	lib/lua/src/ltable.c	/^static int arrayindex (const TValue *key) {$/;"	f	file:
arraytostring	lib/alglib/ap.cpp	/^std::string alglib::arraytostring(const ae_int_t *ptr, ae_int_t n)$/;"	f	class:alglib
arraytostring	lib/alglib/ap.cpp	/^std::string alglib::arraytostring(const alglib::complex *ptr, ae_int_t n, int dps)$/;"	f	class:alglib
arraytostring	lib/alglib/ap.cpp	/^std::string alglib::arraytostring(const bool *ptr, ae_int_t n)$/;"	f	class:alglib
arraytostring	lib/alglib/ap.cpp	/^std::string alglib::arraytostring(const double *ptr, ae_int_t n, int dps)$/;"	f	class:alglib
asin	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> asin (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
asin	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> asin (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
ask	install/common.py	/^def ask(prompt):$/;"	f
ask	install/fix_autoload.py	/^from setup_robotv4 import runRemoteCommand, ask, makeTempDir, removeTempDir, copyFile$/;"	i
ask	tools/behaviorSim/cma.py	/^    def ask(self): $/;"	m	class:OOOptimizer
ask	tools/behaviorSim/cma.py	/^    def ask(self, number=None, xmean=None, sigma_fac=1):$/;"	m	class:CMAEvolutionStrategy
ask	tools/behaviorSim/cma.py	/^    def ask(self, popsize):$/;"	m	class:AII
ask_and_eval	tools/behaviorSim/cma.py	/^    def ask_and_eval(self, func, args=(), number=None, xmean=None, sigma_fac=1, $/;"	m	class:CMAEvolutionStrategy
ask_geno	tools/behaviorSim/cma.py	/^    def ask_geno(self, number=None, xmean=None, sigma_fac=1):$/;"	m	class:CMAEvolutionStrategy
aspectRatio	build/include/tool/calibration/CalibratorSettings.h	/^    float aspectRatio;$/;"	m	class:CalibratorSettings
aspectRatio	tools/UTNaoTool/calibration/CalibratorSettings.h	/^    float aspectRatio;$/;"	m	class:CalibratorSettings
assignColor	core/vision/ColorTableMethods.h	/^        static inline void assignColor(unsigned char* colorTable, int y, int u, int v, Color c){$/;"	f	class:ColorTableMethods
assignColor	core/vision/ColorTableMethods.h	/^        static inline void assignColor(unsigned char* colorTable, int y, int u, int v, Color c, int yrad, int urad, int vrad, bool ignorePreviousAssignments = false){$/;"	f	class:ColorTableMethods
assignColor	core/vision/ColorTableMethods.h	/^        static inline void assignColor(unsigned char* image, unsigned char* colorTable, int x, int y, int width, Color c){$/;"	f	class:ColorTableMethods
assignColor	core/vision/ColorTableMethods.h	/^        static inline void assignColor(unsigned char* image, unsigned char* colorTable, int x, int y, int width, Color c, int yrad, int urad, int vrad, bool ignorePreviousAssignments = false){$/;"	f	class:ColorTableMethods
assignImageWidgets	build/include/tool/VisionWindow.cpp	/^void VisionWindow::assignImageWidgets() {$/;"	f	class:VisionWindow
assignImageWidgets	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::assignImageWidgets() {$/;"	f	class:VisionWindow
assignProcessors	build/include/tool/VisionWindow.cpp	/^void VisionWindow::assignProcessors() {$/;"	f	class:VisionWindow
assignProcessors	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::assignProcessors() {$/;"	f	class:VisionWindow
assignment	lib/lua/src/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
at_center	core/python/behaviors/walk_to_center.py	/^at_center = False$/;"	v
at_center	core/python/behaviors/walk_to_center_2.py	/^at_center = False$/;"	v
atan	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> atan (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
atan	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> atan (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
atom	install/copy_wpa.py	/^  atom = None$/;"	v
atomic	lib/lua/src/lgc.c	/^static void atomic (lua_State *L) {$/;"	f	file:
attach_to	lib/alglib/ap.cpp	/^void alglib::ae_matrix_wrapper::attach_to(alglib_impl::ae_matrix *ptr)$/;"	f	class:alglib::ae_matrix_wrapper
attach_to	lib/alglib/ap.cpp	/^void alglib::ae_vector_wrapper::attach_to(alglib_impl::ae_vector *ptr)$/;"	f	class:alglib::ae_vector_wrapper
attack_align	core/python/behaviors/win.py	/^    def attack_align(self):$/;"	m	class:Playing.Win
attack_approach	core/python/behaviors/win.py	/^    def attack_approach(self):$/;"	m	class:Playing.Win
attack_dribble	core/python/behaviors/win.py	/^    def attack_dribble(self):$/;"	m	class:Playing.Win
attack_kick	core/python/behaviors/win.py	/^    def attack_kick(self):$/;"	m	class:Playing.Win
attack_left	core/python/behaviors/win.py	/^attack_left = False$/;"	v
attack_rotate	core/python/behaviors/win.py	/^    def attack_rotate(self):$/;"	m	class:Playing.Win
attack_start	core/python/behaviors/win.py	/^    def attack_start(self):$/;"	m	class:Playing.Win
attacking	core/python/behaviors/win.py	/^  attacking=1$/;"	v	class:Modes
audio_	core/VisionCore.h	/^  AudioModule *audio_;$/;"	m	class:VisionCore
audio_block_	interfaces/nao/src/AudioWrapper.h	/^    AudioProcessingBlock *audio_block_;$/;"	m	class:AudioWrapper
audio_enabled	core/common/RobotConfig.h	/^    bool audio_enabled;$/;"	m	class:RobotConfig
audio_enabled	core/common/TeamConfig.h	/^    bool audio_enabled;$/;"	m	class:TeamConfig
audio_processing	core/memory/MemoryCache.h	/^    AudioProcessingBlock* audio_processing;$/;"	m	class:MemoryCache
audio_processing	core/python/memory.py	/^  def audio_processing(): return core.pythonC.audio_processing_$/;"	f	function:init
audio_processing_	core/InterpreterModule.h	/^    AudioProcessingBlock *audio_processing_;$/;"	m	class:InterpreterModule
audio_processing_	core/communications/CommunicationModule.h	/^  AudioProcessingBlock *audio_processing_;$/;"	m	class:CommunicationModule
autobuf	lib/alglib/optimization.h	/^    ae_vector autobuf;$/;"	m	struct:alglib_impl::__anon69
autogk_autogkinternaliteration	lib/alglib/integration.cpp	/^static ae_bool autogk_autogkinternaliteration(autogkinternalstate* state,$/;"	f	namespace:alglib_impl
autogk_autogkinternalprepare	lib/alglib/integration.cpp	/^static void autogk_autogkinternalprepare(double a,$/;"	f	namespace:alglib_impl
autogk_mheappop	lib/alglib/integration.cpp	/^static void autogk_mheappop(\/* Real    *\/ ae_matrix* heap,$/;"	f	namespace:alglib_impl
autogk_mheappush	lib/alglib/integration.cpp	/^static void autogk_mheappush(\/* Real    *\/ ae_matrix* heap,$/;"	f	namespace:alglib_impl
autogk_mheapresize	lib/alglib/integration.cpp	/^static void autogk_mheapresize(\/* Real    *\/ ae_matrix* heap,$/;"	f	namespace:alglib_impl
autogkintegrate	lib/alglib/integration.cpp	/^void autogkintegrate(autogkstate &state,$/;"	f	namespace:alglib
autogkinternalstate	lib/alglib/integration.h	/^} autogkinternalstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon54
autogkiteration	lib/alglib/integration.cpp	/^ae_bool autogkiteration(autogkstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
autogkiteration	lib/alglib/integration.cpp	/^bool autogkiteration(const autogkstate &state)$/;"	f	namespace:alglib
autogkreport	lib/alglib/integration.cpp	/^autogkreport::autogkreport() : _autogkreport_owner() ,terminationtype(p_struct->terminationtype),nfev(p_struct->nfev),nintervals(p_struct->nintervals)$/;"	f	class:alglib::autogkreport
autogkreport	lib/alglib/integration.cpp	/^autogkreport::autogkreport(const autogkreport &rhs):_autogkreport_owner(rhs) ,terminationtype(p_struct->terminationtype),nfev(p_struct->nfev),nintervals(p_struct->nintervals)$/;"	f	class:alglib::autogkreport
autogkreport	lib/alglib/integration.h	/^class autogkreport : public _autogkreport_owner$/;"	c	namespace:alglib
autogkreport	lib/alglib/integration.h	/^} autogkreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon53
autogkresults	lib/alglib/integration.cpp	/^void autogkresults(autogkstate* state,$/;"	f	namespace:alglib_impl
autogkresults	lib/alglib/integration.cpp	/^void autogkresults(const autogkstate &state, double &v, autogkreport &rep)$/;"	f	namespace:alglib
autogksingular	lib/alglib/integration.cpp	/^void autogksingular(const double a, const double b, const double alpha, const double beta, autogkstate &state)$/;"	f	namespace:alglib
autogksingular	lib/alglib/integration.cpp	/^void autogksingular(double a,$/;"	f	namespace:alglib_impl
autogksmooth	lib/alglib/integration.cpp	/^void autogksmooth(const double a, const double b, autogkstate &state)$/;"	f	namespace:alglib
autogksmooth	lib/alglib/integration.cpp	/^void autogksmooth(double a,$/;"	f	namespace:alglib_impl
autogksmoothw	lib/alglib/integration.cpp	/^void autogksmoothw(const double a, const double b, const double xwidth, autogkstate &state)$/;"	f	namespace:alglib
autogksmoothw	lib/alglib/integration.cpp	/^void autogksmoothw(double a,$/;"	f	namespace:alglib_impl
autogkstate	lib/alglib/integration.cpp	/^autogkstate::autogkstate() : _autogkstate_owner() ,needf(p_struct->needf),x(p_struct->x),xminusa(p_struct->xminusa),bminusx(p_struct->bminusx),f(p_struct->f)$/;"	f	class:alglib::autogkstate
autogkstate	lib/alglib/integration.cpp	/^autogkstate::autogkstate(const autogkstate &rhs):_autogkstate_owner(rhs) ,needf(p_struct->needf),x(p_struct->x),xminusa(p_struct->xminusa),bminusx(p_struct->bminusx),f(p_struct->f)$/;"	f	class:alglib::autogkstate
autogkstate	lib/alglib/integration.h	/^class autogkstate : public _autogkstate_owner$/;"	c	namespace:alglib
autogkstate	lib/alglib/integration.h	/^} autogkstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon55
autoplay	build/include/tool/WorldConfig.h	/^    bool autoplay;$/;"	m	class:WorldConfig
autoplay	tools/UTNaoTool/WorldConfig.h	/^    bool autoplay;$/;"	m	class:WorldConfig
aux	lib/lua/src/lparser.h	/^    struct { int info, aux; } s;$/;"	m	struct:expdesc::__anon96::__anon97
aux_close	lib/lua/src/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	lib/lua/src/ltablib.c	/^#define aux_getn(/;"	d	file:
aux_lines	lib/lua/src/liolib.c	/^static void aux_lines (lua_State *L, int idx, int toclose) {$/;"	f	file:
aux_upvalue	lib/lua/src/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val) {$/;"	f	file:
auxgetinfo	lib/lua/src/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxopen	lib/lua/src/lbaselib.c	/^static void auxopen (lua_State *L, const char *name,$/;"	f	file:
auxresume	lib/lua/src/lbaselib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsort	lib/lua/src/ltablib.c	/^static void auxsort (lua_State *L, int l, int u) {$/;"	f	file:
auxupvalue	lib/lua/src/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
avail_in	lib/zlib/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	lib/zlib/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
available	tools/behaviorSim/cma.py	/^    print('  Could not import matplotlib.pylab, therefore ``cma.plot()`` etc. is not available')$/;"	i
available	tools/behaviorSim/cma.py	/^from __future__ import print_function  # for cross-checking, available from python 2.6$/;"	i
average	build/include/tool/simulation/LocalizationSimulation.h	/^  static AgentError average(std::vector<AgentError> errors) {$/;"	f	struct:AgentError
average	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  static AgentError average(std::vector<AgentError> errors) {$/;"	f	struct:AgentError
averageWalkSpeed	core/communications/SPLStandardMessage.h	/^  int16_t averageWalkSpeed;$/;"	m	struct:SPLStandardMessage
avgWidth	core/vision/structures/Blob.h	/^  float avgWidth;$/;"	m	struct:Blob
avgX	core/vision/structures/Blob.h	/^  uint16_t avgX;$/;"	m	struct:Blob
avgX	core/vision/structures/FieldLine.h	/^  int avgX;$/;"	m	struct:FieldLine
avgX	core/vision/structures/GoalPostCandidate.h	/^  uint16_t avgX, avgY;$/;"	m	struct:GoalPostCandidate
avgY	core/vision/structures/Blob.h	/^  uint16_t avgY;$/;"	m	struct:Blob
avgY	core/vision/structures/FieldLine.h	/^  int avgY;$/;"	m	struct:FieldLine
avgY	core/vision/structures/GoalPostCandidate.h	/^  uint16_t avgX, avgY;$/;"	m	struct:GoalPostCandidate
avg_delta_gyroX	core/motion/rswalk2014/RSWalkModule2014.h	/^	double avg_delta_gyroX = 10.0; \/\/ this influence calibration speed at the first time when start motion$/;"	m	class:RSWalkModule2014
avg_delta_gyroY	core/motion/rswalk2014/RSWalkModule2014.h	/^	double avg_delta_gyroY = 10.0; $/;"	m	class:RSWalkModule2014
avg_gyroX	core/motion/rswalk2014/RSWalkModule2014.h	/^	double avg_gyroX = 0.0;$/;"	m	class:RSWalkModule2014
avg_gyroY	core/motion/rswalk2014/RSWalkModule2014.h	/^	double avg_gyroY = 0.0;$/;"	m	class:RSWalkModule2014
avgce	lib/alglib/dataanalysis.h	/^    double &avgce;$/;"	m	class:alglib::dfreport
avgce	lib/alglib/dataanalysis.h	/^    double &avgce;$/;"	m	class:alglib::mlpcvreport
avgce	lib/alglib/dataanalysis.h	/^    double avgce;$/;"	m	struct:alglib_impl::__anon38
avgce	lib/alglib/dataanalysis.h	/^    double avgce;$/;"	m	struct:alglib_impl::__anon40
avgce	lib/alglib/dataanalysis.h	/^    double avgce;$/;"	m	struct:alglib_impl::__anon49
avgerror	lib/alglib/dataanalysis.h	/^    double &avgerror;$/;"	m	class:alglib::dfreport
avgerror	lib/alglib/dataanalysis.h	/^    double &avgerror;$/;"	m	class:alglib::lrreport
avgerror	lib/alglib/dataanalysis.h	/^    double &avgerror;$/;"	m	class:alglib::mlpcvreport
avgerror	lib/alglib/dataanalysis.h	/^    double avgerror;$/;"	m	struct:alglib_impl::__anon38
avgerror	lib/alglib/dataanalysis.h	/^    double avgerror;$/;"	m	struct:alglib_impl::__anon40
avgerror	lib/alglib/dataanalysis.h	/^    double avgerror;$/;"	m	struct:alglib_impl::__anon43
avgerror	lib/alglib/dataanalysis.h	/^    double avgerror;$/;"	m	struct:alglib_impl::__anon49
avgerror	lib/alglib/interpolation.h	/^    double &avgerror;$/;"	m	class:alglib::barycentricfitreport
avgerror	lib/alglib/interpolation.h	/^    double &avgerror;$/;"	m	class:alglib::lsfitreport
avgerror	lib/alglib/interpolation.h	/^    double &avgerror;$/;"	m	class:alglib::polynomialfitreport
avgerror	lib/alglib/interpolation.h	/^    double &avgerror;$/;"	m	class:alglib::spline1dfitreport
avgerror	lib/alglib/interpolation.h	/^    double avgerror;$/;"	m	struct:alglib_impl::__anon59
avgerror	lib/alglib/interpolation.h	/^    double avgerror;$/;"	m	struct:alglib_impl::__anon60
avgerror	lib/alglib/interpolation.h	/^    double avgerror;$/;"	m	struct:alglib_impl::__anon61
avgerror	lib/alglib/interpolation.h	/^    double avgerror;$/;"	m	struct:alglib_impl::__anon62
avgrate	core/common/Profiling.cpp	/^double Timer::avgrate() {$/;"	f	class:Timer
avgrelerror	lib/alglib/dataanalysis.h	/^    double &avgrelerror;$/;"	m	class:alglib::dfreport
avgrelerror	lib/alglib/dataanalysis.h	/^    double &avgrelerror;$/;"	m	class:alglib::lrreport
avgrelerror	lib/alglib/dataanalysis.h	/^    double &avgrelerror;$/;"	m	class:alglib::mlpcvreport
avgrelerror	lib/alglib/dataanalysis.h	/^    double avgrelerror;$/;"	m	struct:alglib_impl::__anon38
avgrelerror	lib/alglib/dataanalysis.h	/^    double avgrelerror;$/;"	m	struct:alglib_impl::__anon40
avgrelerror	lib/alglib/dataanalysis.h	/^    double avgrelerror;$/;"	m	struct:alglib_impl::__anon43
avgrelerror	lib/alglib/dataanalysis.h	/^    double avgrelerror;$/;"	m	struct:alglib_impl::__anon49
avgrelerror	lib/alglib/interpolation.h	/^    double &avgrelerror;$/;"	m	class:alglib::barycentricfitreport
avgrelerror	lib/alglib/interpolation.h	/^    double &avgrelerror;$/;"	m	class:alglib::lsfitreport
avgrelerror	lib/alglib/interpolation.h	/^    double &avgrelerror;$/;"	m	class:alglib::polynomialfitreport
avgrelerror	lib/alglib/interpolation.h	/^    double &avgrelerror;$/;"	m	class:alglib::spline1dfitreport
avgrelerror	lib/alglib/interpolation.h	/^    double avgrelerror;$/;"	m	struct:alglib_impl::__anon59
avgrelerror	lib/alglib/interpolation.h	/^    double avgrelerror;$/;"	m	struct:alglib_impl::__anon60
avgrelerror	lib/alglib/interpolation.h	/^    double avgrelerror;$/;"	m	struct:alglib_impl::__anon61
avgrelerror	lib/alglib/interpolation.h	/^    double avgrelerror;$/;"	m	struct:alglib_impl::__anon62
avgtime	core/common/Profiling.cpp	/^double Timer::avgtime() {$/;"	f	class:Timer
avoidSonarDirIsLeft	core/memory/BehaviorBlock.h	/^  bool avoidSonarDirIsLeft;$/;"	m	struct:BehaviorBlock
avoidSonarTime	core/memory/BehaviorBlock.h	/^  float avoidSonarTime;$/;"	m	struct:BehaviorBlock
avoidance	interfaces/sim_spark/Random.h	/^   float avoidance( void )   \/\/ Maximal Avoidance (1-D)$/;"	f	class:Random
avoidance	interfaces/sim_spark/Random.h	/^   void avoidance( float x[], unsigned ndim )   \/\/ Maximal Avoidance (N-D)$/;"	f	class:Random
aw	data/ballfit.py	/^aw = numpy.exp(logaw)$/;"	v
aw	data/goalfit.py	/^aw = numpy.exp(logaw)$/;"	v
ax	lib/alglib/linalg.h	/^    ae_vector ax;$/;"	m	struct:alglib_impl::__anon68
axis	build/include/tool/joystickxbox.cpp	/^int joy_fd, *axis=NULL, num_of_axis=0, num_of_buttons=0;$/;"	v
axis	tools/UTNaoTool/joystickxbox.cpp	/^int joy_fd, *axis=NULL, num_of_axis=0, num_of_buttons=0;$/;"	v
axis	tools/behaviorSim/cma.py	/^                 axis, title, text$/;"	i
axis	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
b	core/common/ColorConversion.h	/^    int b;$/;"	m	struct:color::Rgb
b	core/common/ColorSpaces.h	/^  int b;$/;"	m	struct:RGB
b	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   float b;$/;"	m	struct:twoParamLine
b	core/motion/rswalk2014/types/BBox.hpp	/^   Point a, b;$/;"	m	struct:BBox
b	lib/alglib/integration.h	/^    double b;$/;"	m	struct:alglib_impl::__anon54
b	lib/alglib/integration.h	/^    double b;$/;"	m	struct:alglib_impl::__anon55
b	lib/alglib/linalg.h	/^    ae_vector b;$/;"	m	struct:alglib_impl::__anon68
b	lib/alglib/optimization.h	/^    ae_vector b;$/;"	m	struct:alglib_impl::__anon71
b	lib/lua/src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	lib/lua/src/lobject.h	/^  int b;$/;"	m	union:__anon87
b	lib/lua/src/lundump.c	/^ Mbuffer* b;$/;"	m	struct:__anon100	file:
b	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    uint8_t b;$/;"	m	struct:color_classifier::Rgb
b	vision_testing/src/vision_testing.cpp	/^  unsigned char b;$/;"	m	class:RGB	file:
bR	core/vision/structures/FieldLine.h	/^  Point2D bR;         \/\/ bottom or right point in image coordinates$/;"	m	struct:FieldLine
ba	lib/alglib/ap.h	/^    ae_vector ba;$/;"	m	struct:alglib_impl::rcommstate
back	build/include/tool/WorldWindow.cpp	/^void WorldWindow::back() {$/;"	f	class:WorldWindow
back	core/common/RingQueue.h	/^    const V& back() const$/;"	f	class:RingQueue
back	lib/yaml-cpp/src/ptr_vector.h	/^		T& back() { return *m_data.back(); }$/;"	f	class:YAML::ptr_vector
back	lib/yaml-cpp/src/ptr_vector.h	/^		const T& back() const { return *m_data.back(); }$/;"	f	class:YAML::ptr_vector
back	lib/zlib/inflate.h	/^    int back;                   \/* bits back of last unprocessed length\/lit *\/$/;"	m	struct:inflate_state
back	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::back() {$/;"	f	class:WorldWindow
backIndex	core/common/RingQueue.h	/^    int backIndex;$/;"	m	class:RingQueue
backIndex	core/common/RingQueueWithSum.h	/^    int backIndex;$/;"	m	class:RingQueueWithSum
backLeftEar	core/lights/LEDModule.cpp	/^void LEDModule::backLeftEar(float val) {$/;"	f	class:LEDModule
backOfFootToAnkle	core/common/RobotDimensions.h	/^    backOfFootToAnkle,$/;"	e	enum:RobotDimensions::__anon8
backRightEar	core/lights/LEDModule.cpp	/^void LEDModule::backRightEar(float val) {$/;"	f	class:LEDModule
backwards_limit	core/motion/rswalk2014/RSWalkModule2014.h	/^        const float backwards_limit = -0.75f;$/;"	m	class:RSWalkModule2014
balScanTime	core/memory/BehaviorBlock.h	/^  float balScanTime;$/;"	m	struct:BehaviorBlock
balSeenGoalFrame	core/memory/BehaviorBlock.h	/^  int balSeenGoalFrame;$/;"	m	struct:BehaviorBlock
balanceAdjustment	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float balanceAdjustment;$/;"	m	class:Walk2014Generator
ball	core/communications/SPLStandardMessage.h	/^  float ball[2];$/;"	m	struct:SPLStandardMessage
ballAge	core/communications/SPLStandardMessage.h	/^  float ballAge;        \/\/ seconds since this robot last saw the ball. -1.f if we haven't seen it$/;"	m	struct:SPLStandardMessage
ballBlobIndex	core/common/WorldObject.h	/^  int ballBlobIndex;$/;"	m	class:WorldObject
ballClearedFromCircle	build/include/tool/simulation/BehaviorSimulation.h	/^    bool ballClearedFromCircle;$/;"	m	class:BehaviorSimulation
ballClearedFromCircle	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    bool ballClearedFromCircle;$/;"	m	class:BehaviorSimulation
ballIsInCorner	core/memory/BehaviorBlock.h	/^  bool ballIsInCorner;$/;"	m	struct:BehaviorBlock
ballVel	core/communications/SPLStandardMessage.h	/^  float ballVel[2];$/;"	m	struct:SPLStandardMessage
ball_Dist_From_Foot_Front_	core/memory/KickEngineBlock.h	/^  float ball_Dist_From_Foot_Front_; \/\/ measured from front middle of foot$/;"	m	struct:KickEngineBlock
ball_Dist_From_Foot_Side_	core/memory/KickEngineBlock.h	/^  float ball_Dist_From_Foot_Side_; \/\/ negative is on the inside, positive on the outside - measured from the middle of the foot$/;"	m	struct:KickEngineBlock
ball_dist_forward_	core/memory/KickModuleBlock.h	/^  float ball_dist_forward_; \/\/ not used - wrt stance foot$/;"	m	struct:KickModuleBlock
ball_dist_side_	core/memory/KickModuleBlock.h	/^  float ball_dist_side_; \/\/ wrt swing foot - positive if to left, negative if to right$/;"	m	struct:KickModuleBlock
ball_filter	core/localization/LocalizationModule.h	/^    KF *ball_filter;$/;"	m	class:LocalizationModule
ball_if_find_flag	core/python/behaviors/pid_distance_angle.py	/^ball_if_find_flag = 0$/;"	v
ball_if_seen	core/python/behaviors/pid_distance_angle.py	/^ball_if_seen = [0]*40$/;"	v
ball_if_seen_counter	core/python/behaviors/pid_distance_angle.py	/^ball_if_seen_counter = 0$/;"	v
ball_image_center_x_	core/memory/KickEngineBlock.h	/^  unsigned int ball_image_center_x_;$/;"	m	struct:KickEngineBlock
ball_image_center_x_	core/memory/KickRequestBlock.h	/^  int ball_image_center_x_;$/;"	m	struct:KickRequestBlock
ball_image_center_y_	core/memory/KickEngineBlock.h	/^  unsigned int ball_image_center_y_;$/;"	m	struct:KickEngineBlock
ball_image_center_y_	core/memory/KickRequestBlock.h	/^  int ball_image_center_y_;$/;"	m	struct:KickRequestBlock
ball_pos_	core/memory/SimTruthDataBlock.h	/^  Pose2D ball_pos_;$/;"	m	struct:SimTruthDataBlock
ball_rel_x_	core/memory/KickRequestBlock.h	/^  float ball_rel_x_;$/;"	m	struct:KickRequestBlock
ball_rel_y_	core/memory/KickRequestBlock.h	/^  float ball_rel_y_;$/;"	m	struct:KickRequestBlock
ball_seen_	core/memory/KickEngineBlock.h	/^  bool ball_seen_;$/;"	m	struct:KickEngineBlock
ball_seen_	core/memory/KickRequestBlock.h	/^  bool ball_seen_;$/;"	m	struct:KickRequestBlock
ballmove_	build/include/tool/simulation/LocalizationSimulation.h	/^    int ballmove_;$/;"	m	class:LocalizationSimulation
ballmove_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    int ballmove_;$/;"	m	class:LocalizationSimulation
ballstats	build/include/tool/AnalysisWidget.h	/^    ballstats(){ falseBalls = falseCandidates = missingBalls = missingCandidates = 0; }$/;"	f	struct:ballstats
ballstats	build/include/tool/AnalysisWidget.h	/^struct ballstats {$/;"	s
ballstats	tools/UTNaoTool/AnalysisWidget.h	/^    ballstats(){ falseBalls = falseCandidates = missingBalls = missingCandidates = 0; }$/;"	f	struct:ballstats
ballstats	tools/UTNaoTool/AnalysisWidget.h	/^struct ballstats {$/;"	s
bar	lib/yaml-cpp/test/emittertests.cpp	/^			std::string bar;$/;"	m	struct:Test::Emitter::Foo	file:
barycentricbuildfloaterhormann	lib/alglib/interpolation.cpp	/^void barycentricbuildfloaterhormann(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
barycentricbuildfloaterhormann	lib/alglib/interpolation.cpp	/^void barycentricbuildfloaterhormann(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t d, barycentricinterpolant &b)$/;"	f	namespace:alglib
barycentricbuildxyw	lib/alglib/interpolation.cpp	/^void barycentricbuildxyw(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
barycentricbuildxyw	lib/alglib/interpolation.cpp	/^void barycentricbuildxyw(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const ae_int_t n, barycentricinterpolant &b)$/;"	f	namespace:alglib
barycentriccalc	lib/alglib/interpolation.cpp	/^double barycentriccalc(barycentricinterpolant* b,$/;"	f	namespace:alglib_impl
barycentriccalc	lib/alglib/interpolation.cpp	/^double barycentriccalc(const barycentricinterpolant &b, const double t)$/;"	f	namespace:alglib
barycentriccopy	lib/alglib/interpolation.cpp	/^void barycentriccopy(barycentricinterpolant* b,$/;"	f	namespace:alglib_impl
barycentricdiff1	lib/alglib/interpolation.cpp	/^void barycentricdiff1(barycentricinterpolant* b,$/;"	f	namespace:alglib_impl
barycentricdiff1	lib/alglib/interpolation.cpp	/^void barycentricdiff1(const barycentricinterpolant &b, const double t, double &f, double &df)$/;"	f	namespace:alglib
barycentricdiff2	lib/alglib/interpolation.cpp	/^void barycentricdiff2(barycentricinterpolant* b,$/;"	f	namespace:alglib_impl
barycentricdiff2	lib/alglib/interpolation.cpp	/^void barycentricdiff2(const barycentricinterpolant &b, const double t, double &f, double &df, double &d2f)$/;"	f	namespace:alglib
barycentricfitfloaterhormann	lib/alglib/interpolation.cpp	/^void barycentricfitfloaterhormann(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
barycentricfitfloaterhormann	lib/alglib/interpolation.cpp	/^void barycentricfitfloaterhormann(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t m, ae_int_t &info, barycentricinterpolant &b, barycentricfitreport &rep)$/;"	f	namespace:alglib
barycentricfitfloaterhormannwc	lib/alglib/interpolation.cpp	/^void barycentricfitfloaterhormannwc(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
barycentricfitfloaterhormannwc	lib/alglib/interpolation.cpp	/^void barycentricfitfloaterhormannwc(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const ae_int_t n, const real_1d_array &xc, const real_1d_array &yc, const integer_1d_array &dc, const ae_int_t k, const ae_int_t m, ae_int_t &info, barycentricinterpolant &b, barycentricfitreport &rep)$/;"	f	namespace:alglib
barycentricfitreport	lib/alglib/interpolation.cpp	/^barycentricfitreport::barycentricfitreport() : _barycentricfitreport_owner() ,taskrcond(p_struct->taskrcond),dbest(p_struct->dbest),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),maxerror(p_struct->maxerror)$/;"	f	class:alglib::barycentricfitreport
barycentricfitreport	lib/alglib/interpolation.cpp	/^barycentricfitreport::barycentricfitreport(const barycentricfitreport &rhs):_barycentricfitreport_owner(rhs) ,taskrcond(p_struct->taskrcond),dbest(p_struct->dbest),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),maxerror(p_struct->maxerror)$/;"	f	class:alglib::barycentricfitreport
barycentricfitreport	lib/alglib/interpolation.h	/^class barycentricfitreport : public _barycentricfitreport_owner$/;"	c	namespace:alglib
barycentricfitreport	lib/alglib/interpolation.h	/^} barycentricfitreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon60
barycentricinterpolant	lib/alglib/interpolation.cpp	/^barycentricinterpolant::barycentricinterpolant() : _barycentricinterpolant_owner() $/;"	f	class:alglib::barycentricinterpolant
barycentricinterpolant	lib/alglib/interpolation.cpp	/^barycentricinterpolant::barycentricinterpolant(const barycentricinterpolant &rhs):_barycentricinterpolant_owner(rhs) $/;"	f	class:alglib::barycentricinterpolant
barycentricinterpolant	lib/alglib/interpolation.h	/^class barycentricinterpolant : public _barycentricinterpolant_owner$/;"	c	namespace:alglib
barycentricinterpolant	lib/alglib/interpolation.h	/^} barycentricinterpolant;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon57
barycentriclintransx	lib/alglib/interpolation.cpp	/^void barycentriclintransx(barycentricinterpolant* b,$/;"	f	namespace:alglib_impl
barycentriclintransx	lib/alglib/interpolation.cpp	/^void barycentriclintransx(const barycentricinterpolant &b, const double ca, const double cb)$/;"	f	namespace:alglib
barycentriclintransy	lib/alglib/interpolation.cpp	/^void barycentriclintransy(barycentricinterpolant* b,$/;"	f	namespace:alglib_impl
barycentriclintransy	lib/alglib/interpolation.cpp	/^void barycentriclintransy(const barycentricinterpolant &b, const double ca, const double cb)$/;"	f	namespace:alglib
barycentricunpack	lib/alglib/interpolation.cpp	/^void barycentricunpack(barycentricinterpolant* b,$/;"	f	namespace:alglib_impl
barycentricunpack	lib/alglib/interpolation.cpp	/^void barycentricunpack(const barycentricinterpolant &b, ae_int_t &n, real_1d_array &x, real_1d_array &y, real_1d_array &w)$/;"	f	namespace:alglib
base	build/include/tool/KeyframeConfig.h	/^    SupportBase base;$/;"	m	class:KeyframeConfig
base	lib/lua/src/lstate.h	/^  StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo
base	lib/lua/src/lstate.h	/^  StkId base;  \/* base of current function *\/$/;"	m	struct:lua_State
base	tools/UTNaoTool/KeyframeConfig.h	/^    SupportBase base;$/;"	m	class:KeyframeConfig
base64	interfaces/sim_spark/decode.h	/^namespace base64 {$/;"	n
base64	interfaces/sim_spark/encode.h	/^namespace base64 {$/;"	n
base64_decode_block	interfaces/sim_spark/cdecode.c	/^int base64_decode_block(const char* code_in, const int length_in, char* plaintext_out, base64_decodestate* state_in)$/;"	f
base64_decode_value	interfaces/sim_spark/cdecode.c	/^int base64_decode_value(char value_in)$/;"	f
base64_decodestate	interfaces/sim_spark/cdecode.h	/^} base64_decodestate;$/;"	t	typeref:struct:__anon17
base64_decodestep	interfaces/sim_spark/cdecode.h	/^} base64_decodestep;$/;"	t	typeref:enum:__anon16
base64_encode_block	interfaces/sim_spark/cencode.c	/^int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)$/;"	f
base64_encode_blockend	interfaces/sim_spark/cencode.c	/^int base64_encode_blockend(char* code_out, base64_encodestate* state_in)$/;"	f
base64_encode_value	interfaces/sim_spark/cencode.c	/^char base64_encode_value(char value_in)$/;"	f
base64_encodestate	interfaces/sim_spark/cencode.h	/^} base64_encodestate;$/;"	t	typeref:struct:__anon19
base64_encodestep	interfaces/sim_spark/cencode.h	/^} base64_encodestep;$/;"	t	typeref:enum:__anon18
base64_init_decodestate	interfaces/sim_spark/cdecode.c	/^void base64_init_decodestate(base64_decodestate* state_in)$/;"	f
base64_init_encodestate	interfaces/sim_spark/cencode.c	/^void base64_init_encodestate(base64_encodestate* state_in)$/;"	f
baseCcalls	lib/lua/src/lstate.h	/^  unsigned short baseCcalls;  \/* nested C calls when resuming coroutine *\/$/;"	m	struct:lua_State
baseIP	bin/copy_robot	/^baseIP = '192.168.1.%s'$/;"	v
baseIP	build/copy_robot	/^baseIP = '192.168.1.%s'$/;"	v
baseLoadConfig	build/include/tool/ConfigWidget.cpp	/^void ConfigWidget::baseLoadConfig(const ToolConfig& config) {$/;"	f	class:ConfigWidget
baseLoadConfig	build/include/tool/ConfigWindow.cpp	/^void ConfigWindow::baseLoadConfig(const ToolConfig& config) {$/;"	f	class:ConfigWindow
baseLoadConfig	tools/UTNaoTool/ConfigWidget.cpp	/^void ConfigWidget::baseLoadConfig(const ToolConfig& config) {$/;"	f	class:ConfigWidget
baseLoadConfig	tools/UTNaoTool/ConfigWindow.cpp	/^void ConfigWindow::baseLoadConfig(const ToolConfig& config) {$/;"	f	class:ConfigWindow
basePath	bin/copy_robot	/^basePath = os.path.join(NAO_HOME,'build')$/;"	v
basePath	build/copy_robot	/^basePath = os.path.join(NAO_HOME,'build')$/;"	v
basePath	build/include/tool/FilesWindow.h	/^    QString basePath;$/;"	m	class:FilesWindow
basePath	tools/UTNaoTool/FilesWindow.h	/^    QString basePath;$/;"	m	class:FilesWindow
base_	build/include/tool/MotionGLWidget.h	/^  SupportBase base_;$/;"	m	class:MotionGLWidget
base_	tools/UTNaoTool/MotionGLWidget.h	/^  SupportBase base_;$/;"	m	class:MotionGLWidget
base_ci	lib/lua/src/lstate.h	/^  CallInfo *base_ci;  \/* array of CallInfo's *\/$/;"	m	struct:lua_State
base_dist	lib/zlib/trees.c	/^local int base_dist[D_CODES];$/;"	v
base_dist	lib/zlib/trees.h	/^local const int base_dist[D_CODES] = {$/;"	v
base_funcs	lib/lua/src/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
base_length	lib/zlib/trees.c	/^local int base_length[LENGTH_CODES];$/;"	v
base_length	lib/zlib/trees.h	/^local const int base_length[LENGTH_CODES] = {$/;"	v
base_open	lib/lua/src/lbaselib.c	/^static void base_open (lua_State *L) {$/;"	f	file:
base_s	build/include/tool/KeyframeConfig.h	/^    mutable std::string base_s;$/;"	m	class:KeyframeConfig
base_s	tools/UTNaoTool/KeyframeConfig.h	/^    mutable std::string base_s;$/;"	m	class:KeyframeConfig
basehookcount	lib/lua/src/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State
basepath_	build/include/tool/ProcessExecutor.h	/^    QString basepath_, logpath_, datapath_;$/;"	m	class:ProcessExecutor
basepath_	tools/UTNaoTool/ProcessExecutor.h	/^    QString basepath_, logpath_, datapath_;$/;"	m	class:ProcessExecutor
basicGL	build/include/tool/UTOpenGL/GLDrawer.h	/^    BasicGL basicGL;$/;"	m	class:GLDrawer
basicGL	build/include/tool/UTOpenGL/LocalizationGL.h	/^  BasicGL basicGL;$/;"	m	class:LocalizationGL
basicGL	build/include/tool/UTOpenGL/ObjectsGL.h	/^  BasicGL basicGL;$/;"	m	class:ObjectsGL
basicGL	build/include/tool/UTOpenGL/RobotGL.h	/^  BasicGL basicGL;$/;"	m	class:RobotGL
basicGL	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    BasicGL basicGL;$/;"	m	class:GLDrawer
basicGL	tools/UTNaoTool/UTOpenGL/LocalizationGL.h	/^  BasicGL basicGL;$/;"	m	class:LocalizationGL
basicGL	tools/UTNaoTool/UTOpenGL/ObjectsGL.h	/^  BasicGL basicGL;$/;"	m	class:ObjectsGL
basicGL	tools/UTNaoTool/UTOpenGL/RobotGL.h	/^  BasicGL basicGL;$/;"	m	class:RobotGL
basicGL_	build/include/tool/MotionGLWidget.h	/^  BasicGL basicGL_;$/;"	m	class:MotionGLWidget
basicGL_	build/include/tool/WorldGLWidget.h	/^    BasicGL basicGL_;$/;"	m	class:WorldGLWidget
basicGL_	tools/UTNaoTool/MotionGLWidget.h	/^  BasicGL basicGL_;$/;"	m	class:MotionGLWidget
basicGL_	tools/UTNaoTool/WorldGLWidget.h	/^    BasicGL basicGL_;$/;"	m	class:WorldGLWidget
basic_nullbuf	core/motion/rswalk2014/utils/basic_onullstream.hpp	/^class basic_nullbuf : public std::basic_streambuf<cT, traits> {$/;"	c
basic_onullstream	core/motion/rswalk2014/utils/basic_onullstream.hpp	/^      basic_onullstream() :$/;"	f	class:basic_onullstream
basic_onullstream	core/motion/rswalk2014/utils/basic_onullstream.hpp	/^class basic_onullstream : public std::basic_ostream<cT, traits> {$/;"	c
batchButton	build/include/tool/LogSelectWindow.h	/^    QCheckBox* batchButton;$/;"	m	class:LogSelectWindow
batchButton	tools/UTNaoTool/LogSelectWindow.h	/^    QCheckBox* batchButton;$/;"	m	class:LogSelectWindow
battery	core/common/RobotInfo.h	/^  battery,$/;"	e	enum:Sensor
bcache_	build/include/tool/UTOpenGL/GLDrawer.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:GLDrawer
bcache_	build/include/tool/simulation/CommunicationGenerator.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:CommunicationGenerator
bcache_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:IsolatedBehaviorSimulation
bcache_	build/include/tool/simulation/RobotMovementSimulator.h	/^    MemoryCache bcache_;$/;"	m	class:RobotMovementSimulator
bcache_	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:GLDrawer
bcache_	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:CommunicationGenerator
bcache_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:IsolatedBehaviorSimulation
bcache_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    MemoryCache bcache_;$/;"	m	class:RobotMovementSimulator
bcaches_	build/include/tool/simulation/CommunicationGenerator.h	/^    std::vector<MemoryCache> bcaches_;$/;"	m	class:CommunicationGenerator
bcaches_	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^    std::vector<MemoryCache> bcaches_;$/;"	m	class:CommunicationGenerator
bconfig	core/common/FieldConfiguration.h	/^    FieldConfiguration gtconfig, bconfig;$/;"	m	class:BeliefConfiguration
bdss_getcv	lib/alglib/dataanalysis.cpp	/^static double bdss_getcv(\/* Integer *\/ ae_vector* cnt,$/;"	f	namespace:alglib_impl
bdss_tieaddc	lib/alglib/dataanalysis.cpp	/^static void bdss_tieaddc(\/* Integer *\/ ae_vector* c,$/;"	f	namespace:alglib_impl
bdss_tiesubc	lib/alglib/dataanalysis.cpp	/^static void bdss_tiesubc(\/* Integer *\/ ae_vector* c,$/;"	f	namespace:alglib_impl
bdss_xlny	lib/alglib/dataanalysis.cpp	/^static double bdss_xlny(double x, double y, ae_state *_state)$/;"	f	namespace:alglib_impl
bdsvd_bidiagonalsvddecompositioninternal	lib/alglib/linalg.cpp	/^static ae_bool bdsvd_bidiagonalsvddecompositioninternal(\/* Real    *\/ ae_vector* d,$/;"	f	namespace:alglib_impl
bdsvd_extsignbdsqr	lib/alglib/linalg.cpp	/^static double bdsvd_extsignbdsqr(double a, double b, ae_state *_state)$/;"	f	namespace:alglib_impl
bdsvd_svd2x2	lib/alglib/linalg.cpp	/^static void bdsvd_svd2x2(double f,$/;"	f	namespace:alglib_impl
bdsvd_svdv2x2	lib/alglib/linalg.cpp	/^static void bdsvd_svdv2x2(double f,$/;"	f	namespace:alglib_impl
beacon_candidate	core/vision/Union_find.h	/^			bool beacon_candidate;$/;"	m	struct:MergeBlob::Blob
beacon_detector_	core/vision/ImageProcessor.h	/^    BeaconDetector* beacon_detector_;$/;"	m	class:ImageProcessor
beacons_seen	core/python/behaviors/walk_to_center.py	/^beacons_seen = Set()$/;"	v
beacons_seen	core/python/behaviors/walk_to_center_2.py	/^beacons_seen = Set()$/;"	v
bearing	core/common/WorldObject.h	/^  AngRad bearing; \/\/\/< The relative angle between this object and the robot.$/;"	m	class:WorldObject
bearing	core/vision/CameraMatrix.cpp	/^float CameraMatrix::bearing(const Position& p) const {$/;"	f	class:CameraMatrix
been	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
begin	build/include/tool/simulation/SimulationPath.h	/^    std::list<Point2D>::iterator begin() { return points_.begin(); }$/;"	f	class:SimulationPath
begin	lib/yaml-cpp/src/node.cpp	/^	Iterator Node::begin() const$/;"	f	class:YAML::Node
begin	tools/UTNaoTool/simulation/SimulationPath.h	/^    std::list<Point2D>::iterator begin() { return points_.begin(); }$/;"	f	class:SimulationPath
beginCollection	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::beginCollection() {$/;"	f	class:IntrinsicCalibrationWidget
beginCollection	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::beginCollection() {$/;"	f	class:IntrinsicCalibrationWidget
beginSelection	build/include/tool/ImageWidget.cpp	/^void ImageWidget::beginSelection(){$/;"	f	class:ImageWidget
beginSelection	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::beginSelection(){$/;"	f	class:ImageWidget
behavior	core/localization/LocalizationParams.h	/^  std::string behavior;$/;"	m	struct:LocalizationParams
behavior	core/memory/BehaviorParamBlock.h	/^  Cluster::Activity behavior;$/;"	m	struct:ClusterKickStrategy
behavior	core/memory/MemoryCache.h	/^    BehaviorBlock* behavior;$/;"	m	class:MemoryCache
behavior	core/python/init.py	/^import primary_bvr as behavior$/;"	i
behaviorGroupToggled	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::behaviorGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
behaviorGroupToggled	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::behaviorGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
behaviorLoaded	core/python/init.py	/^behaviorLoaded = False$/;"	v
behaviorModule	build/include/tool/UTOpenGL/GLDrawer.h	/^    BehaviorModule* behaviorModule;$/;"	m	class:GLDrawer
behaviorModule	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    BehaviorModule* behaviorModule;$/;"	m	class:GLDrawer
behaviorSim	build/include/tool/UTNaoTool.cpp	/^  bool behaviorSim = false;$/;"	m	namespace:__anon4	file:
behaviorSim	tools/UTNaoTool/UTNaoTool.cpp	/^  bool behaviorSim = false;$/;"	m	namespace:__anon142	file:
behavior_	core/InterpreterModule.h	/^    BehaviorBlock *behavior_;$/;"	m	class:InterpreterModule
behavior_	core/VisionCore.h	/^  BehaviorModule *behavior_;$/;"	m	class:VisionCore
behavior_	core/communications/CommunicationModule.h	/^  BehaviorBlock *behavior_;$/;"	m	class:CommunicationModule
behavior_mem	core/python/behaviors/custom_kick.py	/^from memory import sensors, walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles, vision_frame_info$/;"	i
behavior_mem	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
behavior_mem	core/python/memory.py	/^  def behavior_mem(): return core.pythonC.behavior_$/;"	f	function:init
behavior_mem	core/python/pose.py	/^from memory import walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles$/;"	i
behavior_mem	core/python/util.py	/^  game_state, behavior_mem$/;"	i
behavior_params	core/memory/MemoryCache.h	/^    BehaviorParamBlock* behavior_params;$/;"	m	class:MemoryCache
behavior_params	core/python/memory.py	/^  def behavior_params(): return core.pythonC.behavior_params_$/;"	f	function:init
behavior_params_	core/InterpreterModule.h	/^    BehaviorParamBlock *behavior_params_;$/;"	m	class:InterpreterModule
bend	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float bend;$/;"	m	class:Walk2014Generator
bend	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float bend;$/;"	m	struct:ActionCommand::Body
bernoulli	interfaces/sim_spark/Random.h	/^   bool bernoulli( float p = 0.5 )   \/\/ Bernoulli Trial$/;"	f	class:Random
bessel_besselasympt0	lib/alglib/specialfunctions.cpp	/^static void bessel_besselasympt0(double x,$/;"	f	namespace:alglib_impl
bessel_besselasympt1	lib/alglib/specialfunctions.cpp	/^static void bessel_besselasympt1(double x,$/;"	f	namespace:alglib_impl
bessel_besselm1firstcheb	lib/alglib/specialfunctions.cpp	/^static void bessel_besselm1firstcheb(double c,$/;"	f	namespace:alglib_impl
bessel_besselm1nextcheb	lib/alglib/specialfunctions.cpp	/^static void bessel_besselm1nextcheb(double x,$/;"	f	namespace:alglib_impl
bessel_besselmfirstcheb	lib/alglib/specialfunctions.cpp	/^static void bessel_besselmfirstcheb(double c,$/;"	f	namespace:alglib_impl
bessel_besselmnextcheb	lib/alglib/specialfunctions.cpp	/^static void bessel_besselmnextcheb(double x,$/;"	f	namespace:alglib_impl
besseli0	lib/alglib/specialfunctions.cpp	/^double besseli0(const double x)$/;"	f	namespace:alglib
besseli0	lib/alglib/specialfunctions.cpp	/^double besseli0(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besseli1	lib/alglib/specialfunctions.cpp	/^double besseli1(const double x)$/;"	f	namespace:alglib
besseli1	lib/alglib/specialfunctions.cpp	/^double besseli1(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besselj0	lib/alglib/specialfunctions.cpp	/^double besselj0(const double x)$/;"	f	namespace:alglib
besselj0	lib/alglib/specialfunctions.cpp	/^double besselj0(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besselj1	lib/alglib/specialfunctions.cpp	/^double besselj1(const double x)$/;"	f	namespace:alglib
besselj1	lib/alglib/specialfunctions.cpp	/^double besselj1(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besseljn	lib/alglib/specialfunctions.cpp	/^double besseljn(ae_int_t n, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besseljn	lib/alglib/specialfunctions.cpp	/^double besseljn(const ae_int_t n, const double x)$/;"	f	namespace:alglib
besselk0	lib/alglib/specialfunctions.cpp	/^double besselk0(const double x)$/;"	f	namespace:alglib
besselk0	lib/alglib/specialfunctions.cpp	/^double besselk0(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besselk1	lib/alglib/specialfunctions.cpp	/^double besselk1(const double x)$/;"	f	namespace:alglib
besselk1	lib/alglib/specialfunctions.cpp	/^double besselk1(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besselkn	lib/alglib/specialfunctions.cpp	/^double besselkn(ae_int_t nn, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besselkn	lib/alglib/specialfunctions.cpp	/^double besselkn(const ae_int_t nn, const double x)$/;"	f	namespace:alglib
bessely0	lib/alglib/specialfunctions.cpp	/^double bessely0(const double x)$/;"	f	namespace:alglib
bessely0	lib/alglib/specialfunctions.cpp	/^double bessely0(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
bessely1	lib/alglib/specialfunctions.cpp	/^double bessely1(const double x)$/;"	f	namespace:alglib
bessely1	lib/alglib/specialfunctions.cpp	/^double bessely1(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besselyn	lib/alglib/specialfunctions.cpp	/^double besselyn(ae_int_t n, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
besselyn	lib/alglib/specialfunctions.cpp	/^double besselyn(const ae_int_t n, const double x)$/;"	f	namespace:alglib
beta	interfaces/sim_spark/Random.h	/^   float beta( float v, float w,                    \/\/ Beta$/;"	f	class:Random
beta	lib/alglib/integration.h	/^    double beta;$/;"	m	struct:alglib_impl::__anon55
beta	lib/alglib/specialfunctions.cpp	/^double beta(const double a, const double b)$/;"	f	namespace:alglib
beta	lib/alglib/specialfunctions.cpp	/^double beta(double a, double b, ae_state *_state)$/;"	f	namespace:alglib_impl
betady	lib/alglib/optimization.h	/^    double betady;$/;"	m	struct:alglib_impl::__anon75
betady	lib/alglib/optimization.h	/^    double betady;$/;"	m	struct:alglib_impl::__anon77
betahs	lib/alglib/optimization.h	/^    double betahs;$/;"	m	struct:alglib_impl::__anon75
betahs	lib/alglib/optimization.h	/^    double betahs;$/;"	m	struct:alglib_impl::__anon77
bh_params_	core/memory/WalkParamBlock.h	/^  BHWalkParameters bh_params_;$/;"	m	struct:WalkParamBlock
bi_buf	lib/zlib/deflate.h	/^    ush bi_buf;$/;"	m	struct:internal_state
bi_flush	lib/zlib/trees.c	/^local void bi_flush(s)$/;"	f
bi_reverse	lib/zlib/trees.c	/^local unsigned bi_reverse(code, len)$/;"	f
bi_valid	lib/zlib/deflate.h	/^    int bi_valid;$/;"	m	struct:internal_state
bi_windup	lib/zlib/trees.c	/^local void bi_windup(s)$/;"	f
bidiagonalsvddecomposition	lib/alglib/linalg.cpp	/^ae_bool bidiagonalsvddecomposition(\/* Real    *\/ ae_vector* d,$/;"	f	namespace:alglib_impl
binomial	interfaces/sim_spark/Random.h	/^   int binomial( int n, float p )   \/\/ Binomial$/;"	f	class:Random
binomialcdistribution	lib/alglib/specialfunctions.cpp	/^double binomialcdistribution(ae_int_t k,$/;"	f	namespace:alglib_impl
binomialcdistribution	lib/alglib/specialfunctions.cpp	/^double binomialcdistribution(const ae_int_t k, const ae_int_t n, const double p)$/;"	f	namespace:alglib
binomialdistribution	lib/alglib/specialfunctions.cpp	/^double binomialdistribution(ae_int_t k,$/;"	f	namespace:alglib_impl
binomialdistribution	lib/alglib/specialfunctions.cpp	/^double binomialdistribution(const ae_int_t k, const ae_int_t n, const double p)$/;"	f	namespace:alglib
bisect	lib/lua/test/bisect.lua	/^function bisect(f,a,b,fa,fb)$/;"	f
bit2mask	lib/lua/src/lgc.h	/^#define bit2mask(/;"	d
bitmask	lib/lua/src/lgc.h	/^#define bitmask(/;"	d
bits	lib/zlib/inflate.h	/^    unsigned bits;              \/* number of bits in "in" *\/$/;"	m	struct:inflate_state
bits	lib/zlib/inftrees.h	/^    unsigned char bits;         \/* bits in this part of the code *\/$/;"	m	struct:__anon137
bits_sent	lib/zlib/deflate.h	/^    ulg bits_sent;      \/* bit length of compressed data sent mod 2^32 *\/$/;"	m	struct:internal_state
bivariateNormal	interfaces/sim_spark/Random.h	/^   cartesianCoord bivariateNormal( float muX    = 0.,   \/\/ Bivariate Gaussian$/;"	f	class:Random
bivariateUniform	interfaces/sim_spark/Random.h	/^   cartesianCoord bivariateUniform( float xMin = -1.,    \/\/ Bivariate Uniform$/;"	f	class:Random
bl	lib/lua/src/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt
bl_count	lib/zlib/deflate.h	/^    ush bl_count[MAX_BITS+1];$/;"	m	struct:internal_state
bl_desc	lib/zlib/deflate.h	/^    struct tree_desc_s bl_desc;              \/* desc. for bit length tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::tree_desc_s
bl_order	lib/zlib/trees.c	/^local const uch bl_order[BL_CODES]$/;"	v
bl_tree	lib/zlib/deflate.h	/^    struct ct_data_s bl_tree[2*BL_CODES+1];  \/* Huffman tree for bit lengths *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::ct_data_s
black2gray	lib/lua/src/lgc.c	/^#define black2gray(/;"	d	file:
blob	core/vision/Union_find.h	/^		Blob *blob;$/;"	m	class:MergeBlob
blob	core/vision/structures/BallCandidate.h	/^  Blob* blob;$/;"	m	struct:BallCandidate
blob	core/vision/structures/RobotCandidate.h	/^  Blob* blob;$/;"	m	struct:RobotCandidate
blobUseWidthRatioHorz	core/vision/structures/VisionParams.h	/^    bool blobUseWidthRatioHorz[NUM_COLORS];$/;"	m	struct:VisionParams
blobUseWidthRatioVert	core/vision/structures/VisionParams.h	/^    bool blobUseWidthRatioVert[NUM_COLORS];$/;"	m	struct:VisionParams
blobWidthAbs	core/vision/structures/VisionParams.h	/^    uint16_t blobWidthAbs[NUM_COLORS];$/;"	m	struct:VisionParams
blobWidthRatio	core/vision/structures/VisionParams.h	/^    uint16_t blobWidthRatio[NUM_COLORS];$/;"	m	struct:VisionParams
blob_number	core/vision/Union_find.h	/^		int blob_number;$/;"	m	class:MergeBlob
blob_pixel_number_threshold	core/vision/Union_find.h	/^		int blob_pixel_number_threshold;$/;"	m	class:MergeBlob
blobs_connected_to_bottom	core/vision/Union_find.h	/^			std::vector<Blob*> blobs_connected_to_bottom;$/;"	m	struct:MergeBlob::Blob
blobs_connected_to_top	core/vision/Union_find.h	/^			std::vector<Blob*> blobs_connected_to_top;$/;"	m	struct:MergeBlob::Blob
block	core/imageCapture/i2c-dev.h	/^	__u8 block[I2C_SMBUS_BLOCK_MAX + 2]; \/* block[0] is used for length *\/$/;"	m	union:i2c_smbus_data
block	core/python/behaviors/win.py	/^  block=5$/;"	v	class:DefendingStates
block	lib/lua/src/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block_done	lib/zlib/deflate.c	/^    block_done,     \/* block flush performed *\/$/;"	e	enum:__anon132	file:
block_follow	lib/lua/src/lparser.c	/^static int block_follow (int token) {$/;"	f	file:
block_left	core/python/behaviors/win.py	/^  block_left=7$/;"	v	class:DefendingStates
block_names	core/memory/Memory.h	/^  std::vector<std::string> block_names;$/;"	m	struct:MemoryHeader
block_names_	build/include/tool/LogSelectWindow.h	/^    std::vector<std::string> block_names_;$/;"	m	class:LogSelectWindow
block_names_	tools/UTNaoTool/LogSelectWindow.h	/^    std::vector<std::string> block_names_;$/;"	m	class:LogSelectWindow
block_right	core/python/behaviors/win.py	/^  block_right=8$/;"	v	class:DefendingStates
block_start	lib/zlib/deflate.h	/^    long block_start;$/;"	m	struct:internal_state
block_state	lib/zlib/deflate.c	/^} block_state;$/;"	t	typeref:enum:__anon132	file:
block_trigger_flag	core/python/behaviors/keeper_2.py	/^block_trigger_flag = 0$/;"	v
block_trigger_flag	core/python/behaviors/win.py	/^block_trigger_flag = 0$/;"	v
blockleft	core/python/cfgpose.py	/^blockleft = dict()$/;"	v
blockright	core/python/cfgpose.py	/^blockright = dict()$/;"	v
blocks	build/core/generate_block_operations.py	/^blocks = {$/;"	v
blocks_	core/memory/PrivateMemory.h	/^  MemMap blocks_;$/;"	m	class:PrivateMemory
blocks_	core/memory/SharedMemory.h	/^  SharedMemMap *blocks_;$/;"	m	class:SharedMemory
blue	core/motion/rswalk2014/types/ActionCommand.hpp	/^      bool blue;$/;"	m	struct:ActionCommand::rgb
bminusx	lib/alglib/integration.h	/^    double &bminusx;$/;"	m	class:alglib::autogkstate
bminusx	lib/alglib/integration.h	/^    double bminusx;$/;"	m	struct:alglib_impl::__anon55
bndl	lib/alglib/interpolation.h	/^    ae_vector bndl;$/;"	m	struct:alglib_impl::__anon63
bndl	lib/alglib/optimization.h	/^    ae_vector bndl;$/;"	m	struct:alglib_impl::__anon71
bndl	lib/alglib/optimization.h	/^    ae_vector bndl;$/;"	m	struct:alglib_impl::__anon73
bndl	lib/alglib/optimization.h	/^    ae_vector bndl;$/;"	m	struct:alglib_impl::__anon75
bndleffective	lib/alglib/optimization.h	/^    ae_vector bndleffective;$/;"	m	struct:alglib_impl::__anon79
bndloriginal	lib/alglib/optimization.h	/^    ae_vector bndloriginal;$/;"	m	struct:alglib_impl::__anon79
bndu	lib/alglib/interpolation.h	/^    ae_vector bndu;$/;"	m	struct:alglib_impl::__anon63
bndu	lib/alglib/optimization.h	/^    ae_vector bndu;$/;"	m	struct:alglib_impl::__anon71
bndu	lib/alglib/optimization.h	/^    ae_vector bndu;$/;"	m	struct:alglib_impl::__anon73
bndu	lib/alglib/optimization.h	/^    ae_vector bndu;$/;"	m	struct:alglib_impl::__anon75
bndueffective	lib/alglib/optimization.h	/^    ae_vector bndueffective;$/;"	m	struct:alglib_impl::__anon79
bnduoriginal	lib/alglib/optimization.h	/^    ae_vector bnduoriginal;$/;"	m	struct:alglib_impl::__anon79
boardOffset	build/include/tool/calibration/JointCalibrator.h	/^    float boardOffset;$/;"	m	class:JCSettings
boardOffset	tools/UTNaoTool/calibration/JointCalibrator.h	/^    float boardOffset;$/;"	m	class:JCSettings
boardSize	build/include/tool/calibration/CalibratorSettings.h	/^    cv::Size boardSize;$/;"	m	class:CalibratorSettings
boardSize	tools/UTNaoTool/calibration/CalibratorSettings.h	/^    cv::Size boardSize;$/;"	m	class:CalibratorSettings
body	core/motion/rswalk2014/types/ActionCommand.hpp	/^      Body body;$/;"	m	struct:ActionCommand::All
body	core/sensor/offline/genInertialFilterMatrices.py	/^body = ''$/;"	v
body	lib/lua/src/lparser.c	/^static void body (LexState *ls, expdesc *e, int needself, int line) {$/;"	f	file:
bodyGenerators	core/motion/rswalk2014/DistributedGenerator.hpp	/^      Generator* bodyGenerators[ActionCommand::Body::NUM_ACTION_TYPES];$/;"	m	class:DistributedGenerator
bodyId	core/memory/RobotStateBlock.h	/^  std::string bodyId() { return std::string(body_id_).substr(0, 15); }$/;"	f	struct:RobotStateBlock
bodyModel	core/motion/rswalk2014/RSWalkModule2014.h	/^	BodyModel bodyModel;$/;"	m	class:RSWalkModule2014
bodyParts	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      bodyParts;$/;"	m	class:Kinematics
bodyPitch	core/motion/rswalk2014/perception/kinematics/Parameters.hpp	/^      T bodyPitch;$/;"	m	class:Parameters
bodyPointsImage	core/memory/RobotVisionBlock.h	/^  Point2D bodyPointsImage[NUM_VISION_BODY_POINTS];$/;"	m	struct:RobotVisionBlock
body_angle_time_	core/memory/JointCommandBlock.h	/^  float body_angle_time_;$/;"	m	struct:JointCommandBlock
body_id_	core/memory/RobotStateBlock.h	/^  char body_id_[16+1];$/;"	m	struct:RobotStateBlock
body_joint_names_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue body_joint_names_;$/;"	m	class:ALMotionWrapper
body_model	core/memory/MemoryCache.h	/^    BodyModelBlock* body_model;$/;"	m	class:MemoryCache
body_model	core/python/memory.py	/^  def body_model(): return core.pythonC.body_model_$/;"	f	function:init
body_model	core/vision/VisionBlocks.h	/^    BodyModelBlock*& body_model;$/;"	m	class:VisionBlocks
body_model_	build/include/tool/MotionGLWidget.h	/^  BodyModelBlock* body_model_;$/;"	m	class:MotionGLWidget
body_model_	build/include/tool/MotionSimulation.h	/^  BodyModelBlock *body_model_;$/;"	m	class:MotionSimulation
body_model_	core/InterpreterModule.h	/^    BodyModelBlock *body_model_;$/;"	m	class:InterpreterModule
body_model_	core/MotionCore.h	/^  BodyModelBlock* body_model_;$/;"	m	class:MotionCore
body_model_	core/kinematics/KinematicsModule.h	/^  BodyModelBlock* body_model_;$/;"	m	class:KinematicsModule
body_model_	core/motion/MotionModule.h	/^  BodyModelBlock* body_model_;$/;"	m	class:MotionModule
body_model_	core/motion/SpecialMotionModule.h	/^  BodyModelBlock *body_model_;$/;"	m	class:SpecialMotionModule
body_model_	core/motion/rswalk2014/RSWalkModule2014.h	/^        BodyModelBlock* body_model_;        $/;"	m	class:RSWalkModule2014
body_model_	core/sensor/SensorModule.h	/^  BodyModelBlock *body_model_;$/;"	m	class:SensorModule
body_model_	core/vision/VisionModule.h	/^  BodyModelBlock *body_model_;$/;"	m	class:VisionModule
body_model_	tools/UTNaoTool/MotionGLWidget.h	/^  BodyModelBlock* body_model_;$/;"	m	class:MotionGLWidget
body_model_	tools/UTNaoTool/MotionSimulation.h	/^  BodyModelBlock *body_model_;$/;"	m	class:MotionSimulation
body_model_block_	build/include/tool/VisionWindow.h	/^  BodyModelBlock* body_model_block_;$/;"	m	class:VisionWindow
body_model_block_	tools/UTNaoTool/VisionWindow.h	/^  BodyModelBlock* body_model_block_;$/;"	m	class:VisionWindow
body_position_commands_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue body_position_commands_;$/;"	m	class:ALMotionWrapper
body_position_commands_	interfaces/nao/src/dcmwrapper.h	/^  AL::ALValue body_position_commands_;  $/;"	m	class:DCMWrapper
body_position_name_	interfaces/nao/src/dcmwrapper.cpp	/^const std::string DCMWrapper::body_position_name_ = "bodyActuator";$/;"	m	class:DCMWrapper	file:
body_position_name_	interfaces/nao/src/dcmwrapper.h	/^  static const std::string body_position_name_;$/;"	m	class:DCMWrapper
body_position_time_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue body_position_time_;$/;"	m	class:ALMotionWrapper
body_turning_flag	core/python/behaviors/keeper_2.py	/^body_turning_flag = 0$/;"	v
body_turning_flag	core/python/behaviors/win.py	/^body_turning_flag = 0$/;"	v
body_version_	core/memory/RobotStateBlock.h	/^  int head_version_, body_version_;$/;"	m	struct:RobotStateBlock
boolK	lib/lua/src/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
boolean_1d_array	lib/alglib/ap.cpp	/^alglib::boolean_1d_array::boolean_1d_array()  $/;"	f	class:alglib::boolean_1d_array
boolean_1d_array	lib/alglib/ap.cpp	/^alglib::boolean_1d_array::boolean_1d_array(alglib_impl::ae_vector *p)  $/;"	f	class:alglib::boolean_1d_array
boolean_1d_array	lib/alglib/ap.cpp	/^alglib::boolean_1d_array::boolean_1d_array(const char *s)  $/;"	f	class:alglib::boolean_1d_array
boolean_1d_array	lib/alglib/ap.h	/^class boolean_1d_array : public ae_vector_wrapper$/;"	c	namespace:alglib
boolean_2d_array	lib/alglib/ap.cpp	/^alglib::boolean_2d_array::boolean_2d_array()  $/;"	f	class:alglib::boolean_2d_array
boolean_2d_array	lib/alglib/ap.cpp	/^alglib::boolean_2d_array::boolean_2d_array(alglib_impl::ae_matrix *p)  $/;"	f	class:alglib::boolean_2d_array
boolean_2d_array	lib/alglib/ap.cpp	/^alglib::boolean_2d_array::boolean_2d_array(const char *s)  $/;"	f	class:alglib::boolean_2d_array
boolean_2d_array	lib/alglib/ap.h	/^class boolean_2d_array : public ae_matrix_wrapper$/;"	c	namespace:alglib
boost	core/motion/rswalk2014/types/Point.hpp	/^namespace boost {$/;"	n
boost	core/motion/rswalk2014/types/boostSerializationEigenTypes.hpp	/^namespace boost {$/;"	n
botCOrigin	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> topCOrigin, botCOrigin;$/;"	m	class:Pose
botCameraToWorldTransform	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> botCameraToWorldTransform;$/;"	m	class:Pose
botExclusionArray	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      int16_t botExclusionArray[EXCLUSION_RESOLUTION];$/;"	m	class:Pose
botToFocus	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> topToFocus, botToFocus;$/;"	m	class:Pose
botWorldToCameraTransform	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> botWorldToCameraTransform;$/;"	m	class:Pose
botWorldToCameraTransformT	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> botWorldToCameraTransformT;$/;"	m	class:Pose
bottomColorTable	core/vision/VisionModule.h	/^  unsigned char* bottomColorTable;$/;"	m	class:VisionModule
bottomColorTableName	core/vision/VisionModule.h	/^  string bottomColorTableName;$/;"	m	class:VisionModule
bottomFOVx	core/common/RobotCalibration.h	/^      bottomFOVx,$/;"	m	class:RobotCalibration
bottomFOVy	core/common/RobotCalibration.h	/^      bottomFOVy;$/;"	m	class:RobotCalibration
bottomGreenPct	core/memory/RobotVisionBlock.h	/^  float bottomGreenPct, topGreenPct;$/;"	m	struct:RobotVisionBlock
bottomImageParams_	core/imageCapture/ImageCapture.h	/^  ImageParams topImageParams_, bottomImageParams_;$/;"	m	class:ImageCapture
bottomNewTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::bottomNewTable() {$/;"	f	class:VisionWindow
bottomNewTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::bottomNewTable() {$/;"	f	class:VisionWindow
bottomOpenTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::bottomOpenTable() {$/;"	f	class:VisionWindow
bottomOpenTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::bottomOpenTable() {$/;"	f	class:VisionWindow
bottomProcessor_	build/include/tool/AnalysisWidget.h	/^        ImageProcessor *topProcessor_, *bottomProcessor_;$/;"	m	class:AnalysisWidget
bottomProcessor_	build/include/tool/AnnotationWidget.h	/^        ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:AnnotationWidget
bottomProcessor_	build/include/tool/ClassificationWidget.h	/^        ImageProcessor *topProcessor_, *bottomProcessor_;$/;"	m	class:ClassificationWidget
bottomProcessor_	build/include/tool/ExtrinsicCalibrationWidget.h	/^    ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:ExtrinsicCalibrationWidget
bottomProcessor_	build/include/tool/IntrinsicCalibrationWidget.h	/^    ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:IntrinsicCalibrationWidget
bottomProcessor_	tools/UTNaoTool/AnalysisWidget.h	/^        ImageProcessor *topProcessor_, *bottomProcessor_;$/;"	m	class:AnalysisWidget
bottomProcessor_	tools/UTNaoTool/AnnotationWidget.h	/^        ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:AnnotationWidget
bottomProcessor_	tools/UTNaoTool/ClassificationWidget.h	/^        ImageProcessor *topProcessor_, *bottomProcessor_;$/;"	m	class:ClassificationWidget
bottomProcessor_	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^    ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:ExtrinsicCalibrationWidget
bottomProcessor_	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^    ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:IntrinsicCalibrationWidget
bottomSaveTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::bottomSaveTable() {$/;"	f	class:VisionWindow
bottomSaveTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::bottomSaveTable() {$/;"	f	class:VisionWindow
bottomSaveTableAs	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::bottomSaveTableAs() {$/;"	f	class:VisionWindow
bottomSaveTableAs	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::bottomSaveTableAs() {$/;"	f	class:VisionWindow
bottomUndefPct	core/memory/RobotVisionBlock.h	/^  float bottomUndefPct, topUndefPct;$/;"	m	struct:RobotVisionBlock
bottom_	core/math/Polygon.h	/^        int left_, right_, top_, bottom_;$/;"	m	class:Polygon
bottom_camera	core/common/RobotInfo.h	/^    bottom_camera,$/;"	e	enum:BodyPart::Part
bottom_camera_	core/imageCapture/ImageCapture.h	/^  NaoCamera* bottom_camera_;$/;"	m	class:ImageCapture
bottom_params_	core/memory/ImageBlock.h	/^  ImageParams top_params_, bottom_params_;$/;"	m	struct:ImageBlock
bottom_params_	core/memory/RobotVisionBlock.h	/^  ImageParams top_params_, bottom_params_;$/;"	m	struct:RobotVisionBlock
bottom_params_	core/vision/VisionModule.h	/^  ImageParams *top_params_, *bottom_params_;$/;"	m	class:VisionModule
bottom_params_loaded_	core/imageCapture/ImageCapture.h	/^  bool bottom_params_loaded_, top_params_loaded_;$/;"	m	class:ImageCapture
bottom_processor_	core/vision/VisionModule.h	/^  ImageProcessor *top_processor_, *bottom_processor_;$/;"	m	class:VisionModule
bottomright	build/include/tool/annotations/RectangleSelection.h	/^        Point topleft, bottomright;$/;"	m	class:RectangleSelection
bottomright	tools/UTNaoTool/annotations/RectangleSelection.h	/^        Point topleft, bottomright;$/;"	m	class:RectangleSelection
boundingbox_height	core/vision/Union_find.h	/^			int boundingbox_height; \/\/y$/;"	m	struct:MergeBlob::Blob
boundingbox_length	core/vision/Union_find.h	/^			int boundingbox_length; \/\/x$/;"	m	struct:MergeBlob::Blob
boundingbox_vertex_x	core/vision/Union_find.h	/^			int boundingbox_vertex_x;$/;"	m	struct:MergeBlob::Blob
boundingbox_vertex_y	core/vision/Union_find.h	/^			int boundingbox_vertex_y;$/;"	m	struct:MergeBlob::Blob
boundval	lib/alglib/alglibinternal.cpp	/^double boundval(double x, double b1, double b2, ae_state *_state)$/;"	f	namespace:alglib_impl
boxmax	lib/alglib/alglibmisc.h	/^    ae_vector boxmax;$/;"	m	struct:alglib_impl::__anon25
boxmin	lib/alglib/alglibmisc.h	/^    ae_vector boxmin;$/;"	m	struct:alglib_impl::__anon25
brackt	lib/alglib/alglibinternal.h	/^    ae_bool brackt;$/;"	m	struct:alglib_impl::__anon21
brackt	lib/alglib/dataanalysis.h	/^    ae_bool brackt;$/;"	m	struct:alglib_impl::__anon46
branin	tools/behaviorSim/cma.py	/^    def branin(self, x):$/;"	m	class:FitnessFunctions
break_jump	lib/alglib/ap.h	/^    jmp_buf * volatile break_jump;$/;"	m	struct:alglib_impl::__anon35
breaklist	lib/lua/src/lparser.c	/^  int breaklist;  \/* list of jumps out of this loop *\/$/;"	m	struct:BlockCnt	file:
breakstat	lib/lua/src/lparser.c	/^static void breakstat (LexState *ls) {$/;"	f	file:
buf	core/imageCapture/NaoCamera.h	/^  struct v4l2_buffer* buf; \/**< Reusable parameter struct for some ioctl calls. *\/$/;"	m	class:NaoCamera	typeref:struct:NaoCamera::v4l2_buffer
buf	core/imageCapture/i2c-dev.h	/^	char *buf;		\/* pointer to msg data			*\/$/;"	m	struct:i2c_msg
buf	lib/alglib/alglibmisc.h	/^    ae_vector buf;$/;"	m	struct:alglib_impl::__anon25
buf	lib/alglib/optimization.h	/^    apbuffers buf;$/;"	m	struct:alglib_impl::__anon71
bufa	lib/alglib/optimization.h	/^    ae_matrix bufa;$/;"	m	struct:alglib_impl::__anon71
bufb	lib/alglib/optimization.h	/^    ae_vector bufb;$/;"	m	struct:alglib_impl::__anon71
buff	lib/lua/src/lauxlib.c	/^  char buff[LUAL_BUFFERSIZE];$/;"	m	struct:LoadF	file:
buff	lib/lua/src/ldo.c	/^  Mbuffer buff;  \/* buffer to be used by the scanner *\/$/;"	m	struct:SParser	file:
buff	lib/lua/src/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState
buff	lib/lua/src/lstate.h	/^  Mbuffer buff;  \/* temporary buffer for string concatentation *\/$/;"	m	struct:global_State
buffer	core/common/RingBuffer.h	/^    V buffer[n];$/;"	m	class:RingBuffer
buffer	core/common/RingBufferWithSum.h	/^    C buffer[n];$/;"	m	class:RingBufferWithSum
buffer	core/common/RingQueue.h	/^    V buffer[n];$/;"	m	class:RingQueue
buffer	core/common/RingQueueWithSum.h	/^    V buffer[n];$/;"	m	class:RingQueueWithSum
buffer	core/communications/ThreadedUDPSocket.h	/^  char* buffer;$/;"	m	class:ThreadedUDPSocket
buffer	core/memory/StreamBuffer.h	/^  unsigned char* buffer;$/;"	m	struct:StreamBuffer
buffer	lib/lua/src/lauxlib.h	/^  char buffer[LUAL_BUFFERSIZE];$/;"	m	struct:luaL_Buffer
buffer	lib/lua/src/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer
bufferSize	core/communications/ThreadedUDPSocket.h	/^  int bufferSize;$/;"	m	class:ThreadedUDPSocket
buffer_	core/common/Serializable.h	/^    mutable Buffer* buffer_;$/;"	m	class:Serializable
buffer_	core/memory/AudioProcessingBlock.h	/^    signed short buffer_[NUM_CHANNELS * SAMPLE_COUNT];$/;"	m	struct:AudioProcessingBlock
buffer_logging_	core/memory/MemoryBlock.h	/^  bool buffer_logging_;$/;"	m	class:MemoryBlock
buffered_sensor_pen_	core/memory/WalkEngineBlock.h	/^  RingQueueWithSum<Vector3<float>,MAX_SENSOR_DELAY> buffered_sensor_pen_;$/;"	m	struct:WalkEngineBlock
buffered_sensor_zmp_	core/memory/WalkEngineBlock.h	/^  RingQueueWithSum<Vector2<float>,MAX_SENSOR_DELAY> buffered_sensor_zmp_;$/;"	m	struct:WalkEngineBlock
bufffree	lib/lua/src/lauxlib.c	/^#define bufffree(/;"	d	file:
bufflen	lib/lua/src/lauxlib.c	/^#define bufflen(/;"	d	file:
buffreplace	lib/lua/src/llex.c	/^static void buffreplace (LexState *ls, char from, char to) {$/;"	f	file:
buffsize	lib/lua/src/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer
bufsize	lib/alglib/dataanalysis.h	/^    ae_int_t bufsize;$/;"	m	struct:alglib_impl::__anon39
bufx	lib/alglib/optimization.h	/^    ae_vector bufx;$/;"	m	struct:alglib_impl::__anon71
buildDir	bin/copy_robot	/^  buildDir = os.path.join(NAO_HOME,'build')$/;"	v
buildDir	build/copy_robot	/^  buildDir = os.path.join(NAO_HOME,'build')$/;"	v
build_bl_tree	lib/zlib/trees.c	/^local int build_bl_tree(s)$/;"	f
build_tree	lib/zlib/trees.c	/^local void build_tree(s, desc)$/;"	f
build_what	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		static const std::string build_what(const Mark& mark, const std::string& msg) {$/;"	f	class:YAML::Exception
built	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
bump_left_	core/memory/ProcessedSonarBlock.h	/^  bool bump_left_;$/;"	m	struct:ProcessedSonarBlock
bump_right_	core/memory/ProcessedSonarBlock.h	/^  bool bump_right_;$/;"	m	struct:ProcessedSonarBlock
bumperLL	core/common/RobotInfo.h	/^  bumperLL,$/;"	e	enum:Sensor
bumperLR	core/common/RobotInfo.h	/^  bumperLR,$/;"	e	enum:Sensor
bumperRL	core/common/RobotInfo.h	/^  bumperRL,$/;"	e	enum:Sensor
bumperRR	core/common/RobotInfo.h	/^  bumperRR,$/;"	e	enum:Sensor
button	build/include/tool/WorldGLWidget.h	/^      Qt::MouseButton button;$/;"	m	struct:WorldGLWidget::__anon7
button	build/include/tool/joystickxbox.cpp	/^char *button=NULL, name_of_joystick[80];$/;"	v
button	tools/UTNaoTool/WorldGLWidget.h	/^      Qt::MouseButton button;$/;"	m	struct:WorldGLWidget::__anon145
button	tools/UTNaoTool/joystickxbox.cpp	/^char *button=NULL, name_of_joystick[80];$/;"	v
buttons_	core/VisionCore.h	/^  ButtonModule *buttons_;$/;"	m	class:VisionCore
bvalue	lib/lua/src/lobject.h	/^#define bvalue(/;"	d
bvectorsetlengthatleast	lib/alglib/alglibinternal.cpp	/^void bvectorsetlengthatleast(\/* Boolean *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
byte	core/imageCapture/i2c-dev.h	/^	__u8 byte;$/;"	m	union:i2c_smbus_data
c	core/math/Matrix2x2.h	/^  Vector2<V> c[2];$/;"	m	class:Matrix2x2
c	core/math/Matrix3x3.h	/^  Vector3<V> c[3];$/;"	m	class:Matrix3x3
c	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  double c;$/;"	m	class:UnscentedKalmanFilter
c	lib/alglib/dataanalysis.h	/^    ae_matrix c;$/;"	m	struct:alglib_impl::__anon43
c	lib/alglib/dataanalysis.h	/^    real_2d_array c;$/;"	m	class:alglib::lrreport
c	lib/alglib/interpolation.h	/^    ae_vector c;$/;"	m	struct:alglib_impl::__anon58
c	lib/alglib/interpolation.h	/^    ae_vector c;$/;"	m	struct:alglib_impl::__anon63
c	lib/alglib/interpolation.h	/^    ae_vector c;$/;"	m	struct:alglib_impl::__anon66
c	lib/alglib/interpolation.h	/^    real_1d_array c;$/;"	m	class:alglib::lsfitstate
c	lib/lua/src/lobject.h	/^  CClosure c;$/;"	m	union:Closure
c0	core/math/Matrix3x3.h	/^  Vector2<V> c0; \/**< The first column of the matrix. *\/$/;"	m	class:Matrix2x3
c0	core/math/Matrix3x3.h	/^  Vector3<V> c0; \/**< The first column of the matrix. *\/$/;"	m	class:Matrix3x2
c1	core/math/Matrix3x3.h	/^  Vector2<V> c1; \/**< The second column of the matrix. *\/$/;"	m	class:Matrix2x3
c1	core/math/Matrix3x3.h	/^  Vector3<V> c1; \/**< The second column of the matrix. *\/$/;"	m	class:Matrix3x2
c2	core/math/Matrix3x3.h	/^  Vector2<V> c2; \/**< The third column of the matrix. *\/$/;"	m	class:Matrix2x3
cBACKGROUND	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cBACKGROUND = 8,$/;"	e	enum:__anon12
cBALL	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cBALL = 0,$/;"	e	enum:__anon12
cBLACK	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cBLACK = 7,$/;"	e	enum:__anon12
cBODY_PART	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cBODY_PART = 10,$/;"	e	enum:__anon12
cFIELD_GREEN	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cFIELD_GREEN = 5,$/;"	e	enum:__anon12
cGOAL_BLUE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cGOAL_BLUE = 1,$/;"	e	enum:__anon12
cGOAL_YELLOW	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cGOAL_YELLOW = 2,$/;"	e	enum:__anon12
cNUM_COLOURS	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cNUM_COLOURS = 11$/;"	e	enum:__anon12
cProfile	core/python/UTdebug.py	/^  import cProfile, pstats, StringIO$/;"	i
cROBOT_BLUE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cROBOT_BLUE = 1,$/;"	e	enum:__anon12
cROBOT_RED	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cROBOT_RED = 4,$/;"	e	enum:__anon12
cUNCLASSIFIED	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cUNCLASSIFIED = 9,$/;"	e	enum:__anon12
cWHITE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   cWHITE = 6,$/;"	e	enum:__anon12
c_BLUE	core/vision/enums/Colors.h	/^  c_BLUE          = 5,$/;"	e	enum:Color
c_BLUE	vision_testing/src/vision_testing.cpp	/^  c_BLUE = 5,$/;"	e	enum:Color	file:
c_FIELD_GREEN	core/vision/enums/Colors.h	/^  c_FIELD_GREEN   = 1,$/;"	e	enum:Color
c_FIELD_GREEN	vision_testing/src/vision_testing.cpp	/^  c_FIELD_GREEN = 1,$/;"	e	enum:Color	file:
c_ORANGE	core/vision/enums/Colors.h	/^  c_ORANGE        = 3,$/;"	e	enum:Color
c_ORANGE	vision_testing/src/vision_testing.cpp	/^  c_ORANGE = 3,$/;"	e	enum:Color	file:
c_PINK	core/vision/enums/Colors.h	/^  c_PINK          = 4,$/;"	e	enum:Color
c_PINK	vision_testing/src/vision_testing.cpp	/^  c_PINK = 4,$/;"	e	enum:Color	file:
c_ROBOT_WHITE	core/vision/enums/Colors.h	/^  c_ROBOT_WHITE   = 7,$/;"	e	enum:Color
c_ROBOT_WHITE	vision_testing/src/vision_testing.cpp	/^  c_ROBOT_WHITE = 7,$/;"	e	enum:Color	file:
c_UNDEFINED	core/vision/enums/Colors.h	/^  c_UNDEFINED     = 0,$/;"	e	enum:Color
c_UNDEFINED	vision_testing/src/vision_testing.cpp	/^  c_UNDEFINED = 0,$/;"	e	enum:Color	file:
c_WHITE	core/vision/enums/Colors.h	/^  c_WHITE         = 2,$/;"	e	enum:Color
c_WHITE	vision_testing/src/vision_testing.cpp	/^  c_WHITE = 2,$/;"	e	enum:Color	file:
c_YELLOW	core/vision/enums/Colors.h	/^  c_YELLOW        = 6,$/;"	e	enum:Color
c_YELLOW	vision_testing/src/vision_testing.cpp	/^  c_YELLOW = 6,$/;"	e	enum:Color	file:
c_ptr	lib/alglib/alglibmisc.cpp	/^alglib_impl::hqrndstate* _hqrndstate_owner::c_ptr() const$/;"	f	class:alglib::_hqrndstate_owner
c_ptr	lib/alglib/alglibmisc.cpp	/^alglib_impl::hqrndstate* _hqrndstate_owner::c_ptr()$/;"	f	class:alglib::_hqrndstate_owner
c_ptr	lib/alglib/alglibmisc.cpp	/^alglib_impl::kdtree* _kdtree_owner::c_ptr() const$/;"	f	class:alglib::_kdtree_owner
c_ptr	lib/alglib/alglibmisc.cpp	/^alglib_impl::kdtree* _kdtree_owner::c_ptr()$/;"	f	class:alglib::_kdtree_owner
c_ptr	lib/alglib/ap.cpp	/^alglib_impl::ae_complex* alglib::complex::c_ptr()$/;"	f	class:alglib::complex
c_ptr	lib/alglib/ap.cpp	/^alglib_impl::ae_matrix* alglib::ae_matrix_wrapper::c_ptr()$/;"	f	class:alglib::ae_matrix_wrapper
c_ptr	lib/alglib/ap.cpp	/^alglib_impl::ae_vector* alglib::ae_vector_wrapper::c_ptr()$/;"	f	class:alglib::ae_vector_wrapper
c_ptr	lib/alglib/ap.cpp	/^const alglib_impl::ae_complex* alglib::complex::c_ptr() const$/;"	f	class:alglib::complex
c_ptr	lib/alglib/ap.cpp	/^const alglib_impl::ae_matrix* alglib::ae_matrix_wrapper::c_ptr() const$/;"	f	class:alglib::ae_matrix_wrapper
c_ptr	lib/alglib/ap.cpp	/^const alglib_impl::ae_vector* alglib::ae_vector_wrapper::c_ptr() const$/;"	f	class:alglib::ae_vector_wrapper
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::decisionforest* _decisionforest_owner::c_ptr() const$/;"	f	class:alglib::_decisionforest_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::decisionforest* _decisionforest_owner::c_ptr()$/;"	f	class:alglib::_decisionforest_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::dfreport* _dfreport_owner::c_ptr() const$/;"	f	class:alglib::_dfreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::dfreport* _dfreport_owner::c_ptr()$/;"	f	class:alglib::_dfreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::linearmodel* _linearmodel_owner::c_ptr() const$/;"	f	class:alglib::_linearmodel_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::linearmodel* _linearmodel_owner::c_ptr()$/;"	f	class:alglib::_linearmodel_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::logitmodel* _logitmodel_owner::c_ptr() const$/;"	f	class:alglib::_logitmodel_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::logitmodel* _logitmodel_owner::c_ptr()$/;"	f	class:alglib::_logitmodel_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::lrreport* _lrreport_owner::c_ptr() const$/;"	f	class:alglib::_lrreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::lrreport* _lrreport_owner::c_ptr()$/;"	f	class:alglib::_lrreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::mlpcvreport* _mlpcvreport_owner::c_ptr() const$/;"	f	class:alglib::_mlpcvreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::mlpcvreport* _mlpcvreport_owner::c_ptr()$/;"	f	class:alglib::_mlpcvreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::mlpensemble* _mlpensemble_owner::c_ptr() const$/;"	f	class:alglib::_mlpensemble_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::mlpensemble* _mlpensemble_owner::c_ptr()$/;"	f	class:alglib::_mlpensemble_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::mlpreport* _mlpreport_owner::c_ptr() const$/;"	f	class:alglib::_mlpreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::mlpreport* _mlpreport_owner::c_ptr()$/;"	f	class:alglib::_mlpreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::mnlreport* _mnlreport_owner::c_ptr() const$/;"	f	class:alglib::_mnlreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::mnlreport* _mnlreport_owner::c_ptr()$/;"	f	class:alglib::_mnlreport_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::multilayerperceptron* _multilayerperceptron_owner::c_ptr() const$/;"	f	class:alglib::_multilayerperceptron_owner
c_ptr	lib/alglib/dataanalysis.cpp	/^alglib_impl::multilayerperceptron* _multilayerperceptron_owner::c_ptr()$/;"	f	class:alglib::_multilayerperceptron_owner
c_ptr	lib/alglib/diffequations.cpp	/^alglib_impl::odesolverreport* _odesolverreport_owner::c_ptr() const$/;"	f	class:alglib::_odesolverreport_owner
c_ptr	lib/alglib/diffequations.cpp	/^alglib_impl::odesolverreport* _odesolverreport_owner::c_ptr()$/;"	f	class:alglib::_odesolverreport_owner
c_ptr	lib/alglib/diffequations.cpp	/^alglib_impl::odesolverstate* _odesolverstate_owner::c_ptr() const$/;"	f	class:alglib::_odesolverstate_owner
c_ptr	lib/alglib/diffequations.cpp	/^alglib_impl::odesolverstate* _odesolverstate_owner::c_ptr()$/;"	f	class:alglib::_odesolverstate_owner
c_ptr	lib/alglib/integration.cpp	/^alglib_impl::autogkreport* _autogkreport_owner::c_ptr() const$/;"	f	class:alglib::_autogkreport_owner
c_ptr	lib/alglib/integration.cpp	/^alglib_impl::autogkreport* _autogkreport_owner::c_ptr()$/;"	f	class:alglib::_autogkreport_owner
c_ptr	lib/alglib/integration.cpp	/^alglib_impl::autogkstate* _autogkstate_owner::c_ptr() const$/;"	f	class:alglib::_autogkstate_owner
c_ptr	lib/alglib/integration.cpp	/^alglib_impl::autogkstate* _autogkstate_owner::c_ptr()$/;"	f	class:alglib::_autogkstate_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::barycentricfitreport* _barycentricfitreport_owner::c_ptr() const$/;"	f	class:alglib::_barycentricfitreport_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::barycentricfitreport* _barycentricfitreport_owner::c_ptr()$/;"	f	class:alglib::_barycentricfitreport_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::barycentricinterpolant* _barycentricinterpolant_owner::c_ptr() const$/;"	f	class:alglib::_barycentricinterpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::barycentricinterpolant* _barycentricinterpolant_owner::c_ptr()$/;"	f	class:alglib::_barycentricinterpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::idwinterpolant* _idwinterpolant_owner::c_ptr() const$/;"	f	class:alglib::_idwinterpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::idwinterpolant* _idwinterpolant_owner::c_ptr()$/;"	f	class:alglib::_idwinterpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::lsfitreport* _lsfitreport_owner::c_ptr() const$/;"	f	class:alglib::_lsfitreport_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::lsfitreport* _lsfitreport_owner::c_ptr()$/;"	f	class:alglib::_lsfitreport_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::lsfitstate* _lsfitstate_owner::c_ptr() const$/;"	f	class:alglib::_lsfitstate_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::lsfitstate* _lsfitstate_owner::c_ptr()$/;"	f	class:alglib::_lsfitstate_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::polynomialfitreport* _polynomialfitreport_owner::c_ptr() const$/;"	f	class:alglib::_polynomialfitreport_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::polynomialfitreport* _polynomialfitreport_owner::c_ptr()$/;"	f	class:alglib::_polynomialfitreport_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::pspline2interpolant* _pspline2interpolant_owner::c_ptr() const$/;"	f	class:alglib::_pspline2interpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::pspline2interpolant* _pspline2interpolant_owner::c_ptr()$/;"	f	class:alglib::_pspline2interpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::pspline3interpolant* _pspline3interpolant_owner::c_ptr() const$/;"	f	class:alglib::_pspline3interpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::pspline3interpolant* _pspline3interpolant_owner::c_ptr()$/;"	f	class:alglib::_pspline3interpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::spline1dfitreport* _spline1dfitreport_owner::c_ptr() const$/;"	f	class:alglib::_spline1dfitreport_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::spline1dfitreport* _spline1dfitreport_owner::c_ptr()$/;"	f	class:alglib::_spline1dfitreport_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::spline1dinterpolant* _spline1dinterpolant_owner::c_ptr() const$/;"	f	class:alglib::_spline1dinterpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::spline1dinterpolant* _spline1dinterpolant_owner::c_ptr()$/;"	f	class:alglib::_spline1dinterpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::spline2dinterpolant* _spline2dinterpolant_owner::c_ptr() const$/;"	f	class:alglib::_spline2dinterpolant_owner
c_ptr	lib/alglib/interpolation.cpp	/^alglib_impl::spline2dinterpolant* _spline2dinterpolant_owner::c_ptr()$/;"	f	class:alglib::_spline2dinterpolant_owner
c_ptr	lib/alglib/linalg.cpp	/^alglib_impl::matinvreport* _matinvreport_owner::c_ptr() const$/;"	f	class:alglib::_matinvreport_owner
c_ptr	lib/alglib/linalg.cpp	/^alglib_impl::matinvreport* _matinvreport_owner::c_ptr()$/;"	f	class:alglib::_matinvreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minasareport* _minasareport_owner::c_ptr() const$/;"	f	class:alglib::_minasareport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minasareport* _minasareport_owner::c_ptr()$/;"	f	class:alglib::_minasareport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minasastate* _minasastate_owner::c_ptr() const$/;"	f	class:alglib::_minasastate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minasastate* _minasastate_owner::c_ptr()$/;"	f	class:alglib::_minasastate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minbleicreport* _minbleicreport_owner::c_ptr() const$/;"	f	class:alglib::_minbleicreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minbleicreport* _minbleicreport_owner::c_ptr()$/;"	f	class:alglib::_minbleicreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minbleicstate* _minbleicstate_owner::c_ptr() const$/;"	f	class:alglib::_minbleicstate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minbleicstate* _minbleicstate_owner::c_ptr()$/;"	f	class:alglib::_minbleicstate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::mincgreport* _mincgreport_owner::c_ptr() const$/;"	f	class:alglib::_mincgreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::mincgreport* _mincgreport_owner::c_ptr()$/;"	f	class:alglib::_mincgreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::mincgstate* _mincgstate_owner::c_ptr() const$/;"	f	class:alglib::_mincgstate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::mincgstate* _mincgstate_owner::c_ptr()$/;"	f	class:alglib::_mincgstate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minlbfgsreport* _minlbfgsreport_owner::c_ptr() const$/;"	f	class:alglib::_minlbfgsreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minlbfgsreport* _minlbfgsreport_owner::c_ptr()$/;"	f	class:alglib::_minlbfgsreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minlbfgsstate* _minlbfgsstate_owner::c_ptr() const$/;"	f	class:alglib::_minlbfgsstate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minlbfgsstate* _minlbfgsstate_owner::c_ptr()$/;"	f	class:alglib::_minlbfgsstate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minlmreport* _minlmreport_owner::c_ptr() const$/;"	f	class:alglib::_minlmreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minlmreport* _minlmreport_owner::c_ptr()$/;"	f	class:alglib::_minlmreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minlmstate* _minlmstate_owner::c_ptr() const$/;"	f	class:alglib::_minlmstate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minlmstate* _minlmstate_owner::c_ptr()$/;"	f	class:alglib::_minlmstate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minqpreport* _minqpreport_owner::c_ptr() const$/;"	f	class:alglib::_minqpreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minqpreport* _minqpreport_owner::c_ptr()$/;"	f	class:alglib::_minqpreport_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minqpstate* _minqpstate_owner::c_ptr() const$/;"	f	class:alglib::_minqpstate_owner
c_ptr	lib/alglib/optimization.cpp	/^alglib_impl::minqpstate* _minqpstate_owner::c_ptr()$/;"	f	class:alglib::_minqpstate_owner
c_ptr	lib/alglib/solvers.cpp	/^alglib_impl::densesolverlsreport* _densesolverlsreport_owner::c_ptr() const$/;"	f	class:alglib::_densesolverlsreport_owner
c_ptr	lib/alglib/solvers.cpp	/^alglib_impl::densesolverlsreport* _densesolverlsreport_owner::c_ptr()$/;"	f	class:alglib::_densesolverlsreport_owner
c_ptr	lib/alglib/solvers.cpp	/^alglib_impl::densesolverreport* _densesolverreport_owner::c_ptr() const$/;"	f	class:alglib::_densesolverreport_owner
c_ptr	lib/alglib/solvers.cpp	/^alglib_impl::densesolverreport* _densesolverreport_owner::c_ptr()$/;"	f	class:alglib::_densesolverreport_owner
c_ptr	lib/alglib/solvers.cpp	/^alglib_impl::nleqreport* _nleqreport_owner::c_ptr() const$/;"	f	class:alglib::_nleqreport_owner
c_ptr	lib/alglib/solvers.cpp	/^alglib_impl::nleqreport* _nleqreport_owner::c_ptr()$/;"	f	class:alglib::_nleqreport_owner
c_ptr	lib/alglib/solvers.cpp	/^alglib_impl::nleqstate* _nleqstate_owner::c_ptr() const$/;"	f	class:alglib::_nleqstate_owner
c_ptr	lib/alglib/solvers.cpp	/^alglib_impl::nleqstate* _nleqstate_owner::c_ptr()$/;"	f	class:alglib::_nleqstate_owner
c_str	lib/yaml-cpp/src/emitter.cpp	/^	const char *Emitter::c_str() const$/;"	f	class:YAML::Emitter
ca	lib/alglib/ap.h	/^    ae_vector ca;$/;"	m	struct:alglib_impl::rcommstate
cache	build/include/tool/simulation/LocalizationSimulation.h	/^  MemoryCache cache;$/;"	m	struct:LocSimAgent
cache	lib/lua/test/fib.lua	/^function cache(f)$/;"	f
cache	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  MemoryCache cache;$/;"	m	struct:LocSimAgent
cache_	build/include/tool/KeyframeWidget.h	/^    MemoryCache cache_;$/;"	m	class:KeyframeWidget
cache_	build/include/tool/MotionWindow.h	/^    MemoryCache cache_;$/;"	m	class:MotionWindow
cache_	build/include/tool/TeamPacketWidget.h	/^    MemoryCache cache_;$/;"	m	class:TeamPacketWidget
cache_	build/include/tool/WorldGLWidget.h	/^    MemoryCache cache_;$/;"	m	class:WorldGLWidget
cache_	build/include/tool/calibration/JointCalibrator.h	/^    MemoryCache* cache_;$/;"	m	class:JointCalibrator
cache_	build/include/tool/simulation/SimulatedPlayer.h	/^  MemoryCache cache_;$/;"	m	class:SimulatedPlayer
cache_	core/localization/LocalizationModule.h	/^    MemoryCache cache_;$/;"	m	class:LocalizationModule
cache_	core/localization/ParticleFilter.h	/^    MemoryCache& cache_;$/;"	m	class:ParticleFilter
cache_	core/memory/Log.h	/^    std::map<unsigned int, Memory*> cache_;$/;"	m	class:Log
cache_	core/motion/KickModule.h	/^    MemoryCache cache_;$/;"	m	class:KickModule
cache_	tools/UTNaoTool/KeyframeWidget.h	/^    MemoryCache cache_;$/;"	m	class:KeyframeWidget
cache_	tools/UTNaoTool/MotionWindow.h	/^    MemoryCache cache_;$/;"	m	class:MotionWindow
cache_	tools/UTNaoTool/TeamPacketWidget.h	/^    MemoryCache cache_;$/;"	m	class:TeamPacketWidget
cache_	tools/UTNaoTool/WorldGLWidget.h	/^    MemoryCache cache_;$/;"	m	class:WorldGLWidget
cache_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    MemoryCache* cache_;$/;"	m	class:JointCalibrator
cache_	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  MemoryCache cache_;$/;"	m	class:SimulatedPlayer
calX_count	core/motion/rswalk2014/RSWalkModule2014.h	/^	int calX_count = 0; \/\/number of calibration performed$/;"	m	class:RSWalkModule2014
calY_count	core/motion/rswalk2014/RSWalkModule2014.h	/^	int calY_count = 0;$/;"	m	class:RSWalkModule2014
cal_	build/include/tool/calibration/JointCalibrator.h	/^    RobotCalibration* cal_;$/;"	m	class:JointCalibrator
cal_	core/vision/CameraMatrix.h	/^    RobotCalibration cal_;$/;"	m	class:CameraMatrix
cal_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    RobotCalibration* cal_;$/;"	m	class:JointCalibrator
calc	core/math/Spline3D.h	/^  void calc(float time, Vector3<float> &vals) {$/;"	f	class:Spline3D
calcArmJoints	core/kinematics/InverseKinematics.cpp	/^bool InverseKinematics::calcArmJoints(Vector3<float> target, Vector3<float> targetDir, int side, Joints jointAngles, const RobotDimensions& theRobotDimensions) {$/;"	f	class:InverseKinematics
calcArmJoints	core/kinematics/InverseKinematics.cpp	/^bool InverseKinematics::calcArmJoints(const Pose3D& left, const Pose3D& right, Joints jointAngles, const RobotDimensions& theRobotDimensions) {$/;"	f	class:InverseKinematics
calcArmJoints	core/kinematics/InverseKinematics.cpp	/^void InverseKinematics::calcArmJoints(const Vector3<float>& position, const float elbowYaw, Joints jointAngles, bool left, const RobotDimensions& robotDimensions) {$/;"	f	class:InverseKinematics
calcChessboardCorners	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^vector<Point3f> IntrinsicCalibrator::calcChessboardCorners() const {$/;"	f	class:IntrinsicCalibrator
calcChessboardCorners	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^vector<Point3f> IntrinsicCalibrator::calcChessboardCorners() const {$/;"	f	class:IntrinsicCalibrator
calcElbowPosition	core/kinematics/InverseKinematics.cpp	/^bool InverseKinematics::calcElbowPosition(Vector3<float> &target, const Vector3<float> &targetDir, int side, Vector3<float> &elbow, const RobotDimensions& theRobotDimensions) {$/;"	f	class:InverseKinematics
calcJointsForElbowPos	core/kinematics/InverseKinematics.cpp	/^void InverseKinematics::calcJointsForElbowPos(const Vector3<float> &elbow, const Vector3<float> &target, Joints jointAngles, int offset, const RobotDimensions& theRobotDimensions) {$/;"	f	class:InverseKinematics
calcKickSplinePoints	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::calcKickSplinePoints() {$/;"	f	class:MotionGLWidget
calcKickSplinePoints	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::calcKickSplinePoints() {$/;"	f	class:MotionGLWidget
calcLeft	tools/testStepSide.py	/^def calcLeft(t,left_swing):$/;"	f
calcLegJoints	core/kinematics/InverseKinematics.cpp	/^bool InverseKinematics::calcLegJoints(const Pose3D& position, Joints jointAngles, bool left, const RobotDimensions& robotDimensions) {$/;"	f	class:InverseKinematics
calcLegJoints	core/kinematics/InverseKinematics.cpp	/^bool InverseKinematics::calcLegJoints(const Pose3D& position, Joints jointAngles, float joint0, bool left, const RobotDimensions& robotDimensions) {$/;"	f	class:InverseKinematics
calcLegJoints	core/kinematics/InverseKinematics.cpp	/^bool InverseKinematics::calcLegJoints(const Pose3D& positionLeft, const Pose3D& positionRight, Joints jointAngles, const RobotDimensions& robotDimensions, float ratio) {$/;"	f	class:InverseKinematics
calcOffsetLeftFrac	tools/testStepSide.py	/^def calcOffsetLeftFrac(t,left_swing):$/;"	f
calcOffsetRightFrac	tools/testStepSide.py	/^def calcOffsetRightFrac(t,left_swing):$/;"	f
calcRelCenterOfMassFromFSRs	core/kinematics/KinematicsModule.cpp	/^void KinematicsModule::calcRelCenterOfMassFromFSRs(float* sensors, float* dimensions, BodyModelBlock* body_model) {$/;"	f	class:KinematicsModule
calcRight	tools/testStepSide.py	/^def calcRight(t,left_swing):$/;"	f
calcSeparationOffset	tools/testStepSide.py	/^def calcSeparationOffset(t,left_swing):$/;"	f
calcShiftFrac	tools/testStepSide.py	/^def calcShiftFrac(t):$/;"	f
calculateAbsolutePose	core/kinematics/ForwardKinematics.cpp	/^void ForwardKinematics::calculateAbsolutePose(Pose3D base, Pose3D *rel_parts, Pose3D *abs_parts) {$/;"	f	class:ForwardKinematics
calculateAbsolutePose	core/kinematics/ForwardKinematics.cpp	/^void ForwardKinematics::calculateAbsolutePose(float* sensors, Pose3D *rel_parts, Pose3D *abs_parts) {$/;"	f	class:ForwardKinematics
calculateAbsolutePose	core/kinematics/ForwardKinematics.cpp	/^void ForwardKinematics::calculateAbsolutePose(vector<float> sensors, Pose3D *rel_parts, Pose3D *abs_parts) {$/;"	f	class:ForwardKinematics
calculateAngles	interfaces/sim_spark/RobotBehavior.cpp	/^void RobotBehavior::calculateAngles() {$/;"	f	class:RobotBehavior
calculateCoM	core/kinematics/ForwardKinematics.cpp	/^void ForwardKinematics::calculateCoM(Pose3D *abs_parts, Vector3<float> &center_of_mass, const MassCalibration &mass_calibration) {$/;"	f	class:ForwardKinematics
calculateHorizon	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^std::pair<int, int> Kinematics::calculateHorizon($/;"	f	class:Kinematics
calculatePose	core/kinematics/KinematicsModule.cpp	/^void KinematicsModule::calculatePose() {$/;"	f	class:KinematicsModule
calculatePose	core/kinematics/KinematicsModule.cpp	/^void KinematicsModule::calculatePose(float* joints, float* sensors, float* dimensions, BodyModelBlock* body_model) {$/;"	f	class:KinematicsModule
calculateRelativePose	core/kinematics/ForwardKinematics.cpp	/^void ForwardKinematics::calculateRelativePose(float *joint_angles, Pose3D* rel_parts, float* dimensions) {$/;"	f	class:ForwardKinematics
calculateRelativePose	core/kinematics/ForwardKinematics.cpp	/^void ForwardKinematics::calculateRelativePose(float *joint_angles, float angleXval, float angleYval, Pose3D *rel_parts, float* dimensions) {$/;"	f	class:ForwardKinematics
calculateRelativePose	core/kinematics/ForwardKinematics.cpp	/^void ForwardKinematics::calculateRelativePose(vector<float> joint_angles, Pose3D* rel_parts, vector<float> dimensions) {$/;"	f	class:ForwardKinematics
calculateRelativePose	core/kinematics/ForwardKinematics.cpp	/^void ForwardKinematics::calculateRelativePose(vector<float> joint_angles, float angleXval, float angleYval, Pose3D *rel_parts, vector<float> dimensions) {$/;"	f	class:ForwardKinematics
calculateSlope	core/python/util.py	/^def calculateSlope(pt1,pt2):$/;"	f
calculateSlopeFromPointAngle	core/python/util.py	/^def calculateSlopeFromPointAngle(pt,angle):$/;"	f
calculateStickFigure	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::calculateStickFigure(BodyModelBlock* bm_) {$/;"	f	class:MotionGLWidget
calculateStickFigure	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::calculateStickFigure(BodyModelBlock* bm_) {$/;"	f	class:MotionGLWidget
calculateTiltRollFromLeg	core/kinematics/ForwardKinematics.cpp	/^TiltRoll ForwardKinematics::calculateTiltRollFromLeg(bool left, float *joint_angles, const RobotDimensions &dimensions) {$/;"	f	class:ForwardKinematics
calculateVirtualBase	core/kinematics/ForwardKinematics.cpp	/^Pose3D ForwardKinematics::calculateVirtualBase(bool useLeft, Pose3D *rel_parts) {$/;"	f	class:ForwardKinematics
calculateVirtualBase	core/kinematics/ForwardKinematics.cpp	/^Pose3D ForwardKinematics::calculateVirtualBase(float *sensors, Pose3D *rel_parts) {$/;"	f	class:ForwardKinematics
calculateVirtualBase	core/kinematics/ForwardKinematics.cpp	/^Pose3D ForwardKinematics::calculateVirtualBase(vector<float> sensors, Pose3D *rel_parts) {$/;"	f	class:ForwardKinematics
calibrate	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::calibrate() {$/;"	f	class:IntrinsicCalibrationWidget
calibrate	build/include/tool/calibration/ExtrinsicCalibrator.cpp	/^void ExtrinsicCalibrator::calibrate(RobotCalibration& cal, vector<Sample> samples, int iterations) {$/;"	f	class:ExtrinsicCalibrator
calibrate	build/include/tool/calibration/JointCalibrator.cpp	/^void JointCalibrator::calibrate(int iterations, function<void()> callback) {$/;"	f	class:JointCalibrator
calibrate	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::calibrate() {$/;"	f	class:IntrinsicCalibrationWidget
calibrate	tools/UTNaoTool/calibration/ExtrinsicCalibrator.cpp	/^void ExtrinsicCalibrator::calibrate(RobotCalibration& cal, vector<Sample> samples, int iterations) {$/;"	f	class:ExtrinsicCalibrator
calibrate	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^void JointCalibrator::calibrate(int iterations, function<void()> callback) {$/;"	f	class:JointCalibrator
calibrating	build/include/tool/calibration/JointCalibrator.h	/^    bool& calibrating() { return calibrating_; }$/;"	f	class:JointCalibrator
calibrating	build/include/tool/calibration/JointCalibrator.h	/^    const bool& calibrating() const { return calibrating_; }$/;"	f	class:JointCalibrator
calibrating	tools/UTNaoTool/calibration/JointCalibrator.h	/^    bool& calibrating() { return calibrating_; }$/;"	f	class:JointCalibrator
calibrating	tools/UTNaoTool/calibration/JointCalibrator.h	/^    const bool& calibrating() const { return calibrating_; }$/;"	f	class:JointCalibrator
calibrating_	build/include/tool/calibration/JointCalibrator.h	/^    bool calibrating_;$/;"	m	class:JointCalibrator
calibrating_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    bool calibrating_;$/;"	m	class:JointCalibrator
calibrationLineColor	build/include/tool/VisionWindow.h	/^  QColor sampleColor, calibrationLineColor, connectionLineColor;$/;"	m	class:VisionWindow
calibrationLineColor	tools/UTNaoTool/VisionWindow.h	/^  QColor sampleColor, calibrationLineColor, connectionLineColor;$/;"	m	class:VisionWindow
calibration_	core/MotionCore.h	/^  RobotCalibration* calibration_;$/;"	m	class:MotionCore
calibration_	core/vision/ImageProcessor.h	/^    RobotCalibration* calibration_;$/;"	m	class:ImageProcessor
calibration_file_	build/include/tool/ExtrinsicCalibrationWidget.h	/^    std::string calibration_file_;$/;"	m	class:ExtrinsicCalibrationWidget
calibration_file_	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^    std::string calibration_file_;$/;"	m	class:ExtrinsicCalibrationWidget
calibration_ind_	core/sensor/SensorModule.h	/^  int calibration_ind_;$/;"	m	class:SensorModule
calibration_inertial_sum_	core/sensor/SensorModule.h	/^  float calibration_inertial_sum_[6];$/;"	m	class:SensorModule
calibration_write_time	core/motion/rswalk2014/GyroConfig.h	/^    double calibration_write_time;$/;"	m	class:GyroConfig
calibration_write_time	core/motion/rswalk2014/RSWalkModule2014.h	/^	double calibration_write_time = -1.0;$/;"	m	class:RSWalkModule2014
calibrationsUpdated	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::calibrationsUpdated() {$/;"	f	class:VisionWindow
calibrationsUpdated	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::calibrationsUpdated() {$/;"	f	class:VisionWindow
calibrator_	build/include/tool/ExtrinsicCalibrationWidget.h	/^    JointCalibrator calibrator_;$/;"	m	class:ExtrinsicCalibrationWidget
calibrator_	build/include/tool/IntrinsicCalibrationWidget.h	/^    IntrinsicCalibrator calibrator_;$/;"	m	class:IntrinsicCalibrationWidget
calibrator_	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^    JointCalibrator calibrator_;$/;"	m	class:ExtrinsicCalibrationWidget
calibrator_	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^    IntrinsicCalibrator calibrator_;$/;"	m	class:IntrinsicCalibrationWidget
call	core/python/PythonModule.cpp	/^void PythonModule::call(std::string cmd) {$/;"	f	class:PythonModule
call	install/common.py	/^def call(command,shell=True):$/;"	f
callTM	lib/lua/src/lvm.c	/^static void callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	file:
callTMres	lib/lua/src/lvm.c	/^static void callTMres (lua_State *L, StkId res, const TValue *f,$/;"	f	file:
call_binTM	lib/lua/src/lvm.c	/^static int call_binTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
call_orderTM	lib/lua/src/lvm.c	/^static int call_orderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
callallgcTM	lib/lua/src/lstate.c	/^static void callallgcTM (lua_State *L, void *ud) {$/;"	f	file:
callrethooks	lib/lua/src/ldo.c	/^static StkId callrethooks (lua_State *L, StkId firstResult) {$/;"	f	file:
camToWorld_	core/vision/CameraMatrix.h	/^    Eigen::Matrix4f worldToCam_, camToWorld_;$/;"	m	class:CameraMatrix
camera	core/common/RobotCalibration.h	/^    Camera::Type camera;$/;"	m	class:RobotCalibration
camera	core/memory/MemoryCache.h	/^    CameraBlock* camera;$/;"	m	class:MemoryCache
camera	core/vision/structures/Sample.h	/^      Camera::Type camera;$/;"	m	struct:Sample
cameraBoxIndexChanged	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::cameraBoxIndexChanged(const QString& text) {$/;"	f	class:AnnotationWidget
cameraBoxIndexChanged	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::cameraBoxIndexChanged(const QString& text) {$/;"	f	class:AnnotationWidget
cameraCalibration_	core/vision/CameraMatrix.h	/^    Eigen::Matrix3f cameraCalibration_;$/;"	m	class:CameraMatrix
cameraMatrix_	build/include/tool/calibration/IntrinsicCalibrator.h	/^    cv::Mat cameraMatrix_, distortionCoeffs_;$/;"	m	class:IntrinsicCalibrator
cameraMatrix_	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^    cv::Mat cameraMatrix_, distortionCoeffs_;$/;"	m	class:IntrinsicCalibrator
cameraPanInverseHack	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> cameraPanInverseHack;$/;"	m	class:Kinematics
cameraPitchBottom	core/motion/rswalk2014/perception/kinematics/Parameters.hpp	/^      T cameraPitchBottom;$/;"	m	class:Parameters
cameraPitchTop	core/motion/rswalk2014/perception/kinematics/Parameters.hpp	/^      T cameraPitchTop;$/;"	m	class:Parameters
cameraPosition_	core/vision/CameraMatrix.h	/^    Eigen::Vector3f cameraPosition_;$/;"	m	class:CameraMatrix
cameraRollBottom	core/motion/rswalk2014/perception/kinematics/Parameters.hpp	/^      T cameraRollBottom;$/;"	m	class:Parameters
cameraRollTop	core/motion/rswalk2014/perception/kinematics/Parameters.hpp	/^      T cameraRollTop;$/;"	m	class:Parameters
cameraRotation_	core/vision/CameraMatrix.h	/^    Eigen::Matrix3f cameraRotation_;$/;"	m	class:CameraMatrix
cameraStrings	build/include/tool/AnnotationWidget.h	/^        QString colorStrings[NUM_COLORS], selectionStrings[NumSelectionTypes], cameraStrings[2];$/;"	m	class:AnnotationWidget
cameraStrings	tools/UTNaoTool/AnnotationWidget.h	/^        QString colorStrings[NUM_COLORS], selectionStrings[NumSelectionTypes], cameraStrings[2];$/;"	m	class:AnnotationWidget
cameraWnd_	build/include/tool/UTMainWnd.h	/^  CameraWindow* cameraWnd_;$/;"	m	class:UTMainWnd
cameraWnd_	tools/UTNaoTool/UTMainWnd.h	/^  CameraWindow* cameraWnd_;$/;"	m	class:UTMainWnd
cameraYawBottom	core/motion/rswalk2014/perception/kinematics/Parameters.hpp	/^      T cameraYawBottom;$/;"	m	class:Parameters
cameraYawTop	core/motion/rswalk2014/perception/kinematics/Parameters.hpp	/^      T cameraYawTop;$/;"	m	class:Parameters
camera_	build/include/tool/annotations/Annotation.h	/^        Camera::Type camera_;$/;"	m	class:Annotation
camera_	core/communications/CommunicationModule.h	/^  CameraBlock *camera_;$/;"	m	class:CommunicationModule
camera_	core/vision/CameraMatrix.h	/^    const Camera::Type& camera_;$/;"	m	class:CameraMatrix
camera_	core/vision/Classifier.h	/^  const Camera::Type& camera_;$/;"	m	class:Classifier
camera_	core/vision/ImageProcessor.h	/^    Camera::Type camera_;$/;"	m	class:ImageProcessor
camera_	core/vision/ObjectDetector.h	/^    const Camera::Type& camera_;$/;"	m	class:ObjectDetector
camera_	tools/UTNaoTool/annotations/Annotation.h	/^        Camera::Type camera_;$/;"	m	class:Annotation
camera_block	core/python/memory.py	/^  def camera_block(): return core.pythonC.camera_block_$/;"	f	function:init
camera_block_	build/include/tool/CameraWindow.h	/^    CameraBlock *camera_block_;$/;"	m	class:CameraWindow
camera_block_	build/include/tool/VisionWindow.h	/^  CameraBlock* camera_block_;$/;"	m	class:VisionWindow
camera_block_	core/InterpreterModule.h	/^    CameraBlock *camera_block_;$/;"	m	class:InterpreterModule
camera_block_	tools/UTNaoTool/CameraWindow.h	/^    CameraBlock *camera_block_;$/;"	m	class:CameraWindow
camera_block_	tools/UTNaoTool/VisionWindow.h	/^  CameraBlock* camera_block_;$/;"	m	class:VisionWindow
camera_bottom_angle	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float camera_bottom_angle = DEG2RAD(39.7);$/;"	v	file:
camera_info_	core/VisionCore.h	/^  CameraBlock *camera_info_;$/;"	m	class:VisionCore
camera_info_	core/imageCapture/ImageCapture.h	/^  CameraBlock *camera_info_;$/;"	m	class:ImageCapture
camera_info_	core/vision/VisionModule.h	/^  CameraBlock *camera_info_;$/;"	m	class:VisionModule
camera_info_	interfaces/sim_spark/RobotBehavior.h	/^  CameraBlock* camera_info_;$/;"	m	class:RobotBehavior
camera_out_bottom	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float camera_out_bottom = 50.71;$/;"	v	file:
camera_out_top	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float camera_out_top = 58.71;$/;"	v	file:
camera_params_	core/imageCapture/NaoCamera.h	/^    CameraParams& camera_params_;$/;"	m	class:NaoCamera
camera_top_angle	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float camera_top_angle = DEG2RAD(1.2);$/;"	v	file:
camera_up_bottom	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float camera_up_bottom = 17.74;$/;"	v	file:
camera_up_top	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float camera_up_top = 63.64;$/;"	v	file:
cameras_tested_	core/memory/CameraBlock.h	/^  bool cameras_tested_;$/;"	m	struct:CameraBlock
camtimer_	core/VisionCore.h	/^   Timer vtimer_, camtimer_, logtimer_;$/;"	m	class:VisionCore
candstep	lib/alglib/solvers.h	/^    ae_vector candstep;$/;"	m	struct:alglib_impl::__anon83
cannot	lib/lua/src/luac.c	/^static void cannot(const char* what)$/;"	f	file:
capacity	core/memory/StreamBuffer.h	/^  unsigned int capacity;$/;"	m	struct:StreamBuffer
capture	lib/lua/src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon98	file:
capture_to_close	lib/lua/src/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
carrot	core/python/behaviors/head_tracking.py	/^carrot = 0$/;"	v
carrot	core/python/behaviors/pid_distance_angle.py	/^carrot = 0$/;"	v
cartesianCoord	interfaces/sim_spark/Random.h	/^struct cartesianCoord {   \/\/ cartesian coordinates in 2-D$/;"	s
cast	core/motion/rswalk2014/perception/kinematics/Parameters.cpp	/^Parameters<float> Parameters<fadbad::F<float> >::cast<float>()$/;"	f	class:Parameters
cast	lib/lua/src/llimits.h	/^#define cast(/;"	d
cast_byte	lib/lua/src/llimits.h	/^#define cast_byte(/;"	d
cast_int	lib/lua/src/llimits.h	/^#define cast_int(/;"	d
cast_num	lib/lua/src/llimits.h	/^#define cast_num(/;"	d
cauchy	interfaces/sim_spark/Random.h	/^   float cauchy( float a = 0., float b = 1. )   \/\/ Cauchy (or Lorentz)$/;"	f	class:Random
cauchy_with_variance_one	tools/behaviorSim/cma.py	/^        def cauchy_with_variance_one():$/;"	m	class:Misc.MathHelperFunctions
caughtLeft	core/motion/rswalk2014/types/ActionCommand.hpp	/^      bool caughtLeft;$/;"	m	struct:ActionCommand::Body
caughtRight	core/motion/rswalk2014/types/ActionCommand.hpp	/^      bool caughtRight;$/;"	m	struct:ActionCommand::Body
cb	vision_testing/src/vision_testing.cpp	/^  unsigned char cb;$/;"	m	class:YCrCb	file:
cbuffer_	core/communications/CommunicationModule.h	/^  StreamBuffer cbuffer_;$/;"	m	class:CommunicationModule
cd_	core/common/PIDController.h	/^  float cd_;$/;"	m	class:PIDController
cecnt	lib/alglib/optimization.h	/^    ae_int_t cecnt;$/;"	m	struct:alglib_impl::__anon79
cecurrent	lib/alglib/optimization.h	/^    ae_matrix cecurrent;$/;"	m	struct:alglib_impl::__anon79
cedim	lib/alglib/optimization.h	/^    ae_int_t cedim;$/;"	m	struct:alglib_impl::__anon79
ceeffective	lib/alglib/optimization.h	/^    ae_matrix ceeffective;$/;"	m	struct:alglib_impl::__anon79
ceillog2	lib/lua/src/lobject.h	/^#define ceillog2(/;"	d
center	core/math/Geometry.h	/^  Point2D center;$/;"	m	class:Line2D
center	core/python/behaviors/win.py	/^  center=1$/;"	v	class:EnemyGoalStates
centerButton	core/common/RobotInfo.h	/^  centerButton,$/;"	e	enum:Sensor
centerPoints_	build/include/tool/annotations/Annotation.h	/^        std::map<int,Point> centerPoints_;$/;"	m	class:Annotation
centerPoints_	tools/UTNaoTool/annotations/Annotation.h	/^        std::map<int,Point> centerPoints_;$/;"	m	class:Annotation
centerX	core/vision/structures/BallCandidate.h	/^  float centerX;$/;"	m	struct:BallCandidate
centerX	core/vision/structures/RobotCandidate.h	/^  float centerX;$/;"	m	struct:RobotCandidate
centerY	core/vision/structures/BallCandidate.h	/^  float centerY;$/;"	m	struct:BallCandidate
centerY	core/vision/structures/RobotCandidate.h	/^  float centerY;$/;"	m	struct:RobotCandidate
center_	core/sensor/ButtonModule.h	/^  ButtonInfo center_;$/;"	m	class:ButtonModule
center_distance_	core/memory/ProcessedSonarBlock.h	/^  float center_distance_;$/;"	m	struct:ProcessedSonarBlock
center_of_mass_	core/memory/BodyModelBlock.h	/^  Vector3<float> center_of_mass_;$/;"	m	struct:BodyModelBlock
centralWidget	build/include/tool/LogSelectWindow.h	/^    QWidget* centralWidget;$/;"	m	class:LogSelectWindow
centralWidget	tools/UTNaoTool/LogSelectWindow.h	/^    QWidget* centralWidget;$/;"	m	class:LogSelectWindow
centreOfMass	core/motion/rswalk2014/BodyModel.hpp	/^      XYZ_Coord centreOfMass;$/;"	m	class:BodyModel
centreOfMassOther	core/motion/rswalk2014/BodyModel.hpp	/^      XYZ_Coord centreOfMassOther; \/\/ other foot$/;"	m	class:BodyModel
centroid_x	core/vision/Union_find.h	/^			int centroid_x;$/;"	m	struct:MergeBlob::Blob
centroid_y	core/vision/Union_find.h	/^			int centroid_y;$/;"	m	struct:MergeBlob::Blob
ceoriginal	lib/alglib/optimization.h	/^    ae_matrix ceoriginal;$/;"	m	struct:alglib_impl::__anon79
cfgNDD	core/python/cfgwalk.py	/^cfgNDD = Dynamic()$/;"	v
cfgSimNDD	core/python/cfgwalk.py	/^cfgSimNDD = deepcopy(cfgNDD)$/;"	v
cfgSimWalk1	core/python/cfgwalk.py	/^cfgSimWalk1 = deepcopy(cfgWalk1)$/;"	v
cfgWalk1	core/python/cfgwalk.py	/^cfgWalk1 = Dynamic()$/;"	v
cfglocalization	core/python/init.py	/^import cfglocalization$/;"	i
cfgmap	core/python/init.py	/^import cfgwalk, cfgmap$/;"	i
cfgpose	core/python/behaviors/custom_kick.py	/^import cfgpose, cfgstiff$/;"	i
cfgpose	core/python/behaviors/keeper_2.py	/^import pose, commands, cfgstiff, cfgpose$/;"	i
cfgpose	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
cfgpose	core/python/pose.py	/^import cfgpose, cfgstiff$/;"	i
cfgstiff	core/python/behaviors/Distance.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
cfgstiff	core/python/behaviors/Movement.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
cfgstiff	core/python/behaviors/custom_kick.py	/^import cfgpose, cfgstiff$/;"	i
cfgstiff	core/python/behaviors/custom_kick.py	/^import memory, pose, commands, cfgstiff, core$/;"	i
cfgstiff	core/python/behaviors/head_tracking.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
cfgstiff	core/python/behaviors/keeper.py	/^import pose, commands, cfgstiff$/;"	i
cfgstiff	core/python/behaviors/keeper_2.py	/^import pose, commands, cfgstiff, cfgpose$/;"	i
cfgstiff	core/python/behaviors/keeper_3.py	/^import pose, commands, cfgstiff$/;"	i
cfgstiff	core/python/behaviors/kick.py	/^import memory, pose, commands, cfgstiff$/;"	i
cfgstiff	core/python/behaviors/pid_distance_angle.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
cfgstiff	core/python/behaviors/stamp_in_circles.py	/^import memory, pose, commands, cfgstiff, math$/;"	i
cfgstiff	core/python/behaviors/stand.py	/^import memory, pose, commands, cfgstiff$/;"	i
cfgstiff	core/python/behaviors/walk_to_center.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
cfgstiff	core/python/behaviors/walk_to_center_2.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
cfgstiff	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
cfgstiff	core/python/commands.py	/^import cfgstiff$/;"	i
cfgstiff	core/python/pose.py	/^import cfgpose, cfgstiff$/;"	i
cfgstiff	core/python/primary_bvr.py	/^import commands, cfgstiff$/;"	i
cfgwalk	core/python/init.py	/^import cfgwalk, cfgmap$/;"	i
cg_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    CommunicationGenerator cg_;$/;"	m	class:IsolatedBehaviorSimulation
cg_	build/include/tool/simulation/LocalizationSimulation.h	/^    CommunicationGenerator cg_;$/;"	m	class:LocalizationSimulation
cg_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    CommunicationGenerator cg_;$/;"	m	class:IsolatedBehaviorSimulation
cg_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    CommunicationGenerator cg_;$/;"	m	class:LocalizationSimulation
cgbuf	lib/alglib/solvers.h	/^    ae_vector cgbuf;$/;"	m	struct:alglib_impl::__anon83
cgrep	lib/alglib/optimization.h	/^    mincgreport cgrep;$/;"	m	struct:alglib_impl::__anon79
cgstate	lib/alglib/optimization.h	/^    mincgstate cgstate;$/;"	m	struct:alglib_impl::__anon79
cgtype	lib/alglib/optimization.h	/^    ae_int_t cgtype;$/;"	m	struct:alglib_impl::__anon75
cgtype	lib/alglib/optimization.h	/^    ae_int_t cgtype;$/;"	m	struct:alglib_impl::__anon77
change	core/memory/GameStateBlock.h	/^  bool change() { return stateElapsedTime() == 0; }$/;"	f	struct:GameStateBlock
changeBigImage	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeBigImage(int type, int cam) {$/;"	f	class:VisionWindow
changeBigImage	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeBigImage(int type, int cam) {$/;"	f	class:VisionWindow
changeImage	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::changeImage(sensor_msgs::ImageConstPtr image) {$/;"	f	class:color_classifier::ClassificationWindow
changeLocationIndex	build/include/tool/FilesWindow.cpp	/^void FilesWindow::changeLocationIndex(int index) {$/;"	f	class:FilesWindow
changeLocationIndex	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::changeLocationIndex(int index) {$/;"	f	class:FilesWindow
changeSimulationKickoff	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::changeSimulationKickoff(){$/;"	f	class:BehaviorSimulation
changeSimulationKickoff	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::changeSimulationKickoff(){$/;"	f	class:BehaviorSimulation
changeSimulationState	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::changeSimulationState(int state){$/;"	f	class:BehaviorSimulation
changeSimulationState	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::changeSimulationState(int state){$/;"	f	class:BehaviorSimulation
changeToHorizontalBlobBottom	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToHorizontalBlobBottom() {$/;"	f	class:VisionWindow
changeToHorizontalBlobBottom	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToHorizontalBlobBottom() {$/;"	f	class:VisionWindow
changeToHorizontalBlobTop	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToHorizontalBlobTop() {$/;"	f	class:VisionWindow
changeToHorizontalBlobTop	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToHorizontalBlobTop() {$/;"	f	class:VisionWindow
changeToObjBottom	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToObjBottom() {$/;"	f	class:VisionWindow
changeToObjBottom	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToObjBottom() {$/;"	f	class:VisionWindow
changeToObjTop	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToObjTop() {$/;"	f	class:VisionWindow
changeToObjTop	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToObjTop() {$/;"	f	class:VisionWindow
changeToRawBottom	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToRawBottom() {$/;"	f	class:VisionWindow
changeToRawBottom	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToRawBottom() {$/;"	f	class:VisionWindow
changeToRawTop	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToRawTop() {$/;"	f	class:VisionWindow
changeToRawTop	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToRawTop() {$/;"	f	class:VisionWindow
changeToSegBottom	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToSegBottom() {$/;"	f	class:VisionWindow
changeToSegBottom	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToSegBottom() {$/;"	f	class:VisionWindow
changeToSegTop	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToSegTop() {$/;"	f	class:VisionWindow
changeToSegTop	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToSegTop() {$/;"	f	class:VisionWindow
changeToTransformedBottom	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToTransformedBottom() {$/;"	f	class:VisionWindow
changeToTransformedBottom	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToTransformedBottom() {$/;"	f	class:VisionWindow
changeToTransformedTop	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToTransformedTop() {$/;"	f	class:VisionWindow
changeToTransformedTop	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToTransformedTop() {$/;"	f	class:VisionWindow
changeToVerticalBlobBottom	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToVerticalBlobBottom() {$/;"	f	class:VisionWindow
changeToVerticalBlobBottom	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToVerticalBlobBottom() {$/;"	f	class:VisionWindow
changeToVerticalBlobTop	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToVerticalBlobTop() {$/;"	f	class:VisionWindow
changeToVerticalBlobTop	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::changeToVerticalBlobTop() {$/;"	f	class:VisionWindow
changewhite	lib/lua/src/lgc.h	/^#define changewhite(/;"	d
char2int	lib/lua/src/lzio.h	/^#define char2int(/;"	d
charf	lib/zlib/zconf.h	/^#  define charf /;"	d
charf	lib/zlib/zconf.h	/^typedef char  FAR charf;$/;"	t
chebyshevcalculate	lib/alglib/specialfunctions.cpp	/^double chebyshevcalculate(ae_int_t r,$/;"	f	namespace:alglib_impl
chebyshevcalculate	lib/alglib/specialfunctions.cpp	/^double chebyshevcalculate(const ae_int_t r, const ae_int_t n, const double x)$/;"	f	namespace:alglib
chebyshevcoefficients	lib/alglib/specialfunctions.cpp	/^void chebyshevcoefficients(ae_int_t n,$/;"	f	namespace:alglib_impl
chebyshevcoefficients	lib/alglib/specialfunctions.cpp	/^void chebyshevcoefficients(const ae_int_t n, real_1d_array &c)$/;"	f	namespace:alglib
chebyshevsum	lib/alglib/specialfunctions.cpp	/^double chebyshevsum(\/* Real    *\/ ae_vector* c,$/;"	f	namespace:alglib_impl
chebyshevsum	lib/alglib/specialfunctions.cpp	/^double chebyshevsum(const real_1d_array &c, const ae_int_t r, const ae_int_t n, const double x)$/;"	f	namespace:alglib
check	lib/lua/src/ldebug.c	/^#define check(/;"	d	file:
check	lib/lua/src/ldebug.c	/^#undef check$/;"	d	file:
check	lib/lua/src/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
check	lib/zlib/inflate.h	/^    unsigned long check;        \/* protected copy of check value *\/$/;"	m	struct:inflate_state
checkArgMode	lib/lua/src/ldebug.c	/^static int checkArgMode (const Proto *pt, int r, enum OpArgMask mode) {$/;"	f	file:
checkCameraParams	core/imageCapture/ImageCapture.cpp	/^void ImageCapture::checkCameraParams() {$/;"	f	class:ImageCapture
checkColorChain	core/vision/BeaconDetector.cpp	/^bool checkColorChain(MergeBlob::Blob* blob, Color last_color, WorldObjectType& beacon, std::vector<MergeBlob::Blob*>& blobs)$/;"	f
checkFallen	core/python/util.py	/^def checkFallen():$/;"	f
checkLocalizationErrors	build/include/tool/simulation/BehaviorSimulation.cpp	/^int BehaviorSimulation::checkLocalizationErrors(){$/;"	f	class:BehaviorSimulation
checkLocalizationErrors	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^int BehaviorSimulation::checkLocalizationErrors(){$/;"	f	class:BehaviorSimulation
checkNaN	core/motion/rswalk2014/Walk2014Generator.cpp	/^void checkNaN(float n, string s){$/;"	f
checkOwner	core/memory/MemoryBlock.cpp	/^bool MemoryBlock::checkOwner(const std::string &name, MemoryOwner::Owner expect_owner, bool no_exit) const {$/;"	f	class:MemoryBlock
checkPasswordlessSSH	install/setup_robot	/^def checkPasswordlessSSH(ip):$/;"	f
checkPython	core/python/PythonModule.cpp	/^bool PythonModule::checkPython() {$/;"	f	class:PythonModule
checkRobotStatus	build/include/tool/ProcessExecutor.cpp	/^void PE::checkRobotStatus(QString ip, StatusCallback callback) {$/;"	f	class:PE
checkRobotStatus	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::checkRobotStatus(QString ip, StatusCallback callback) {$/;"	f	class:PE
checkSizes	lib/lua/src/lgc.c	/^static void checkSizes (lua_State *L) {$/;"	f	file:
checkStatus	build/include/tool/FilesWindow.cpp	/^void FilesWindow::checkStatus(bool repeat){$/;"	f	class:FilesWindow
checkStatus	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::checkStatus(){$/;"	f	class:TeamConfigWindow
checkStatus	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::checkStatus(bool repeat){$/;"	f	class:FilesWindow
checkStatus	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::checkStatus(){$/;"	f	class:TeamConfigWindow
checkTemperatures	core/python/util.py	/^def checkTemperatures():$/;"	f
checkTemperatures	core/sensor/SensorModule.cpp	/^void SensorModule::checkTemperatures() {$/;"	f	class:SensorModule
checkVisionLive	interfaces/shared_motion/main.cpp	/^bool checkVisionLive = false;$/;"	v
check_call	install/common.py	/^from subprocess import PIPE, Popen, check_call$/;"	i
check_capture	lib/lua/src/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	lib/lua/src/lparser.c	/^#define check_condition(/;"	d	file:
check_conflict	lib/lua/src/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_exp	lib/lua/src/llimits.h	/^#define check_exp(/;"	d
check_match	lib/lua/src/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_match	lib/zlib/deflate.c	/^#  define check_match(/;"	d	file:
check_match	lib/zlib/deflate.c	/^local void check_match(s, start, match, length)$/;"	f
check_next	lib/lua/src/llex.c	/^static int check_next (LexState *ls, const char *set) {$/;"	f	file:
checkconsistency	lib/lua/src/lobject.h	/^#define checkconsistency(/;"	d
checkerboard_	build/include/tool/VisionWindow.h	/^  bool doingCalibration_, checkerboard_;$/;"	m	class:VisionWindow
checkerboard_	tools/UTNaoTool/VisionWindow.h	/^  bool doingCalibration_, checkerboard_;$/;"	m	class:VisionWindow
checking	tools/behaviorSim/cma.py	/^from __future__ import print_function  # for cross-checking, available from python 2.6$/;"	i
checkint	lib/lua/src/lauxlib.c	/^static int checkint (lua_State *L, int topop) {$/;"	f	file:
checkjump	lib/lua/src/ldebug.c	/^#define checkjump(/;"	d	file:
checkjump	lib/lua/src/ldebug.c	/^#undef checkjump$/;"	d	file:
checkliveness	lib/lua/src/lobject.h	/^#define checkliveness(/;"	d
checkname	lib/lua/src/lparser.c	/^static void checkname(LexState *ls, expdesc *e) {$/;"	f	file:
checknext	lib/lua/src/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkopenop	lib/lua/src/ldebug.c	/^#define checkopenop(/;"	d	file:
checkreg	lib/lua/src/ldebug.c	/^#define checkreg(/;"	d	file:
checkreg	lib/lua/src/ldebug.c	/^#undef checkreg$/;"	d	file:
checkresults	lib/lua/src/lapi.c	/^#define checkresults(/;"	d	file:
checks_	build/include/tool/TeamConfigWindow.h	/^    std::map<int, QCheckBox*> checks_;$/;"	m	class:TeamConfigWindow
checks_	tools/UTNaoTool/TeamConfigWindow.h	/^    std::map<int, QCheckBox*> checks_;$/;"	m	class:TeamConfigWindow
checkstacksizes	lib/lua/src/lgc.c	/^static void checkstacksizes (lua_State *L, StkId max) {$/;"	f	file:
chest	core/lights/LEDModule.cpp	/^void LEDModule::chest(float r, float g, float b) {$/;"	f	class:LEDModule
chestButton	core/motion/rswalk2014/types/ActionCommand.hpp	/^      rgb chestButton; \/\/ Colour of chest button (default: white)$/;"	m	struct:ActionCommand::LED
chestButtonHeight	core/vision/structures/RobotCandidate.h	/^  float chestButtonHeight;$/;"	m	struct:RobotCandidate
chiSquare	interfaces/sim_spark/Random.h	/^   float chiSquare( int df )   \/\/ Chi-Square$/;"	f	class:Random
children	core/memory/StreamBuffer.h	/^  std::list<StreamBuffer> children;$/;"	m	struct:StreamBuffer
chisquarecdistribution	lib/alglib/specialfunctions.cpp	/^double chisquarecdistribution(const double v, const double x)$/;"	f	namespace:alglib
chisquarecdistribution	lib/alglib/specialfunctions.cpp	/^double chisquarecdistribution(double v, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
chisquaredistribution	lib/alglib/specialfunctions.cpp	/^double chisquaredistribution(const double v, const double x)$/;"	f	namespace:alglib
chisquaredistribution	lib/alglib/specialfunctions.cpp	/^double chisquaredistribution(double v, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
chol	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^static Eigen::Matrix<T, R, R> chol(const Eigen::Matrix<T, R, R>& A)$/;"	f
cholesky	core/common/NMatrix.cpp	/^NMatrix cholesky(NMatrix P)$/;"	f
choleskyDecomposition	core/math/YaMatrix.h	/^  YaMatrix<V> choleskyDecomposition() const$/;"	f	class:YaMatrix
choleskybuf	lib/alglib/optimization.h	/^    ae_vector choleskybuf;$/;"	m	struct:alglib_impl::__anon73
chomp	lib/yaml-cpp/src/scanscalar.h	/^		CHOMP chomp;                    \/\/ do we strip, clip, or keep trailing newlines (at the very end)$/;"	m	struct:YAML::ScanScalarParams
chooseKick	core/memory/BehaviorBlock.h	/^  bool chooseKick;$/;"	m	struct:BehaviorBlock
chunk	lib/lua/src/lparser.c	/^static void chunk (LexState *ls) {$/;"	f	file:
chunks	lib/alglib/dataanalysis.h	/^    ae_matrix chunks;$/;"	m	struct:alglib_impl::__anon44
ci	lib/lua/src/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State
ci_	core/common/PIDController.h	/^  float ci_;$/;"	m	class:PIDController
ci_func	lib/lua/src/lstate.h	/^#define ci_func(/;"	d
cigar	tools/behaviorSim/cma.py	/^    def cigar(self, x, rot=0, cond=1e6):$/;"	m	class:FitnessFunctions
cigtab	tools/behaviorSim/cma.py	/^    def cigtab(self, y):$/;"	m	class:FitnessFunctions
circleLocation	core/common/Bowdoin14Field.h	/^const Point2D circleLocation = Point2D(0, 0);$/;"	v
circleLocation	core/common/Field.h	/^const Point2D circleLocation = Point2D(0, 0);$/;"	v
circleLocation	core/common/RC2013Field.h	/^const Point2D circleLocation = Point2D(0, 0);$/;"	v
circleLocation	core/common/UTField.h	/^const Point2D circleLocation = Point2D(0, 0);$/;"	v
circle_effect	core/python/behaviors/pid_distance_angle.py	/^circle_effect = 0$/;"	v
cl	lib/lua/src/lstate.h	/^  union Closure cl;$/;"	m	union:GCObject	typeref:union:GCObject::Closure
classWindow	tools/color_classifier/include/color_classifier/main_window.hpp	/^      ClassificationWindow classWindow;$/;"	m	class:color_classifier::MainWindow
classend	lib/lua/src/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
classibuf	lib/alglib/dataanalysis.h	/^    ae_vector classibuf;$/;"	m	struct:alglib_impl::__anon41
classifier_	core/vision/ImageProcessor.h	/^    Classifier* classifier_;$/;"	m	class:ImageProcessor
classifyImage	core/vision/Classifier.cpp	/^bool Classifier::classifyImage(unsigned char *colorTable) {$/;"	f	class:Classifier
classifyImage	core/vision/Classifier.cpp	/^void Classifier::classifyImage(const FocusArea& area, unsigned char* colorTable){$/;"	f	class:Classifier
cleanInterfaces	bin/compile	/^def cleanInterfaces(interfaces,options):$/;"	f
cleanInterfaces	build/compile	/^def cleanInterfaces(interfaces,options):$/;"	f
cleanLock	core/memory/Lock.cpp	/^void cleanLock(const std::string &name){$/;"	f
cleanLock	interfaces/shared_motion/main.cpp	/^void cleanLock(Lock *&lock) {$/;"	f
cleanLock	interfaces/shared_vision/main.cpp	/^void cleanLock(Lock *&lock) {$/;"	f
cleanUDP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::cleanUDP() {$/;"	f	class:CommunicationModule
clear	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::clear(){$/;"	f	class:ExtrinsicCalibrationWidget
clear	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::clear(){$/;"	f	class:AnnotationAnalyzer
clear	build/include/tool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::clear() {$/;"	f	class:AnnotationGroup
clear	core/memory/MemoryCache.cpp	/^void MemoryCache::clear() {$/;"	f	class:MemoryCache
clear	core/memory/StreamBuffer.cpp	/^void StreamBuffer::clear() {$/;"	f	class:StreamBuffer
clear	core/memory/StreamBuffer.cpp	/^void StreamBuffer::clear(std::list<StreamBuffer>& buffers) {$/;"	f	class:StreamBuffer
clear	core/memory/StreamBuffer.cpp	/^void StreamBuffer::clear(std::vector<StreamBuffer>& buffers) {$/;"	f	class:StreamBuffer
clear	core/motion/rswalk2014/types/Odometry.hpp	/^   inline void clear() {$/;"	f	struct:Odometry
clear	lib/yaml-cpp/src/ptr_stack.h	/^	void clear() {$/;"	f	class:ptr_stack
clear	lib/yaml-cpp/src/ptr_vector.h	/^		void clear() {$/;"	f	class:YAML::ptr_vector
clear	lib/yaml-cpp/src/setting.h	/^		void clear() {$/;"	f	class:YAML::SettingChanges
clear	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::clear(){$/;"	f	class:ExtrinsicCalibrationWidget
clear	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::clear(){$/;"	f	class:AnnotationAnalyzer
clear	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::clear() {$/;"	f	class:AnnotationGroup
clearBuffer	core/memory/Logger.cpp	/^void Logger::clearBuffer() {$/;"	f	class:Logger
clearCenterPoints	build/include/tool/annotations/Annotation.cpp	/^void Annotation::clearCenterPoints() {$/;"	f	class:Annotation
clearCenterPoints	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::clearCenterPoints() {$/;"	f	class:Annotation
clearFrames	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::clearFrames() {$/;"	f	class:LogEditorWindow
clearFrames	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::clearFrames() {$/;"	f	class:LogEditorWindow
clearMovements	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::clearMovements() {$/;"	f	class:AnnotationWidget
clearMovements	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::clearMovements() {$/;"	f	class:AnnotationWidget
clearOffsets	build/include/tool/annotations/Selection.h	/^        void clearOffsets() {$/;"	f	class:Selection
clearOffsets	tools/UTNaoTool/annotations/Selection.h	/^        void clearOffsets() {$/;"	f	class:Selection
clearPathPoints	core/memory/BehaviorBlock.h	/^  void clearPathPoints(){dottedPathPoints.clear();};$/;"	f	struct:BehaviorBlock
clearProgress	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::clearProgress() {$/;"	f	class:IntrinsicCalibrationWidget
clearProgress	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::clearProgress() {$/;"	f	class:IntrinsicCalibrationWidget
clearRobotStatus	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::clearRobotStatus(int robot) {$/;"	f	class:TeamConfigWindow
clearRobotStatus	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::clearRobotStatus(int robot) {$/;"	f	class:TeamConfigWindow
clearSamples	build/include/tool/VisionWindow.cpp	/^void VisionWindow::clearSamples(){$/;"	f	class:VisionWindow
clearSamples	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::clearSamples(){$/;"	f	class:VisionWindow
clearSelection	build/include/tool/ImageWidget.cpp	/^void ImageWidget::clearSelection(){$/;"	f	class:ImageWidget
clearSelection	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::clearSelection(){$/;"	f	class:ImageWidget
clearSelections	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::clearSelections() {$/;"	f	class:AnnotationWidget
clearSelections	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::clearSelections() {$/;"	f	class:AnnotationWidget
clearingKeeperArea	core/memory/BehaviorParamBlock.h	/^  FieldAreaRoleConfig clearingKeeperArea;$/;"	m	struct:RoleStrategy
cleartable	lib/lua/src/lgc.c	/^static void cleartable (GCObject *l) {$/;"	f	file:
clickMode	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      ClickMode clickMode;$/;"	m	class:color_classifier::ClassificationWindow
clip255	core/common/ColorConversion.h	/^  inline int clip255(int x) {$/;"	f	namespace:color
clip255	core/common/ColorSpaces.h	/^inline int clip255(int x) {$/;"	f
clip255	interfaces/sim_spark/Parser.cpp	/^unsigned char clip255(int x) {$/;"	f
clipState	core/opponents/UKF4.cpp	/^bool UKF4::clipState(int stateIndex, float minValue, float maxValue){$/;"	f	class:UKF4
clip_or_fit_solutions	tools/behaviorSim/cma.py	/^    def clip_or_fit_solutions(self, pop, idx):$/;"	m	class:CMAEvolutionStrategy
clipper	core/motion/rswalk2014/RSWalkModule2014.h	/^	ClippedGenerator* clipper;$/;"	m	class:RSWalkModule2014
clock_offset_	core/memory/RobotStateBlock.h	/^  double clock_offset_;$/;"	m	struct:RobotStateBlock
clockavg	core/common/Profiling.cpp	/^int clockavg(int maxSize) {$/;"	f
close	core/memory/LogReader.cpp	/^void LogReader::close() {$/;"	f	class:LogReader
close	core/memory/Logger.cpp	/^void Logger::close() {$/;"	f	class:Logger
close	core/memory/TextLogger.cpp	/^void TextLogger::close() {$/;"	f	class:TextLogger
closeEvent	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::closeEvent(QCloseEvent *event) {$/;"	f	class:color_classifier::ClassificationWindow
closeEvent	tools/color_classifier/src/main_window.cpp	/^  void MainWindow::closeEvent(QCloseEvent *event) {$/;"	f	class:color_classifier::MainWindow
closeLog	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::closeLog(){$/;"	f	class:LogEditorWindow
closeLog	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::closeLog(){$/;"	f	class:LogEditorWindow
closeSSH	build/include/tool/ProcessExecutor.cpp	/^void PE::closeSSH(QString ip, StatusCallback callback) {$/;"	f	class:PE
closeSSH	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::closeSSH(QString ip, StatusCallback callback) {$/;"	f	class:PE
closeSocket	core/communications/ThreadedUDPSocket.cpp	/^void ThreadedUDPSocket::closeSocket() {$/;"	f	class:ThreadedUDPSocket
close_func	lib/lua/src/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_state	lib/lua/src/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
closed_loop_pen_	core/motion/WalkEngineParameters.h	/^  bool closed_loop_pen_;$/;"	m	struct:WalkEngineParameters
closed_loop_zmp_	core/motion/WalkEngineParameters.h	/^  bool closed_loop_zmp_;$/;"	m	struct:WalkEngineParameters
closefig	tools/behaviorSim/cma.py	/^    closefig = pylab.close$/;"	v
closefig	tools/behaviorSim/cma.py	/^    def closefig(self):$/;"	m	class:CMADataLogger
closefig	tools/behaviorSim/cma.py	/^    def closefig(self):$/;"	m	class:DEAPCMADataLogger
closelistfield	lib/lua/src/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
clusterStrategy	core/memory/BehaviorParamBlock.h	/^  ClusterKickStrategy clusterStrategy;$/;"	m	struct:BehaviorParamBlock
clvalue	lib/lua/src/lobject.h	/^#define clvalue(/;"	d
cma	tools/behaviorSim/cma.py	/^    print('  Could not import matplotlib.pylab, therefore ``cma.plot()`` etc. is not available')$/;"	i
cmatrix_	core/vision/ImageProcessor.h	/^    CameraMatrix cmatrix_;$/;"	m	class:ImageProcessor
cmatrix_	core/vision/ObjectDetector.h	/^    const CameraMatrix& cmatrix_;$/;"	m	class:ObjectDetector
cmatrixcopy	lib/alglib/linalg.cpp	/^void cmatrixcopy(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixcopy	lib/alglib/linalg.cpp	/^void cmatrixcopy(const ae_int_t m, const ae_int_t n, const complex_2d_array &a, const ae_int_t ia, const ae_int_t ja, complex_2d_array &b, const ae_int_t ib, const ae_int_t jb)$/;"	f	namespace:alglib
cmatrixdet	lib/alglib/linalg.cpp	/^ae_complex cmatrixdet(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixdet	lib/alglib/linalg.cpp	/^alglib::complex cmatrixdet(const complex_2d_array &a)$/;"	f	namespace:alglib
cmatrixdet	lib/alglib/linalg.cpp	/^alglib::complex cmatrixdet(const complex_2d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
cmatrixgemm	lib/alglib/linalg.cpp	/^void cmatrixgemm(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixgemm	lib/alglib/linalg.cpp	/^void cmatrixgemm(const ae_int_t m, const ae_int_t n, const ae_int_t k, const alglib::complex alpha, const complex_2d_array &a, const ae_int_t ia, const ae_int_t ja, const ae_int_t optypea, const complex_2d_array &b, const ae_int_t ib, const ae_int_t jb, const ae_int_t optypeb, const alglib::complex beta, complex_2d_array &c, const ae_int_t ic, const ae_int_t jc)$/;"	f	namespace:alglib
cmatrixgemmf	lib/alglib/alglibinternal.cpp	/^ae_bool cmatrixgemmf(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixinverse	lib/alglib/linalg.cpp	/^void cmatrixinverse(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixinverse	lib/alglib/linalg.cpp	/^void cmatrixinverse(complex_2d_array &a, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
cmatrixinverse	lib/alglib/linalg.cpp	/^void cmatrixinverse(complex_2d_array &a, const ae_int_t n, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
cmatrixlefttrsm	lib/alglib/linalg.cpp	/^void cmatrixlefttrsm(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixlefttrsm	lib/alglib/linalg.cpp	/^void cmatrixlefttrsm(const ae_int_t m, const ae_int_t n, const complex_2d_array &a, const ae_int_t i1, const ae_int_t j1, const bool isupper, const bool isunit, const ae_int_t optype, complex_2d_array &x, const ae_int_t i2, const ae_int_t j2)$/;"	f	namespace:alglib
cmatrixlefttrsmf	lib/alglib/alglibinternal.cpp	/^ae_bool cmatrixlefttrsmf(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixlq	lib/alglib/linalg.cpp	/^void cmatrixlq(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixlq	lib/alglib/linalg.cpp	/^void cmatrixlq(complex_2d_array &a, const ae_int_t m, const ae_int_t n, complex_1d_array &tau)$/;"	f	namespace:alglib
cmatrixlqunpackl	lib/alglib/linalg.cpp	/^void cmatrixlqunpackl(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixlqunpackl	lib/alglib/linalg.cpp	/^void cmatrixlqunpackl(const complex_2d_array &a, const ae_int_t m, const ae_int_t n, complex_2d_array &l)$/;"	f	namespace:alglib
cmatrixlqunpackq	lib/alglib/linalg.cpp	/^void cmatrixlqunpackq(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixlqunpackq	lib/alglib/linalg.cpp	/^void cmatrixlqunpackq(const complex_2d_array &a, const ae_int_t m, const ae_int_t n, const complex_1d_array &tau, const ae_int_t qrows, complex_2d_array &q)$/;"	f	namespace:alglib
cmatrixlu	lib/alglib/linalg.cpp	/^void cmatrixlu(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixlu	lib/alglib/linalg.cpp	/^void cmatrixlu(complex_2d_array &a, const ae_int_t m, const ae_int_t n, integer_1d_array &pivots)$/;"	f	namespace:alglib
cmatrixludet	lib/alglib/linalg.cpp	/^ae_complex cmatrixludet(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixludet	lib/alglib/linalg.cpp	/^alglib::complex cmatrixludet(const complex_2d_array &a, const integer_1d_array &pivots)$/;"	f	namespace:alglib
cmatrixludet	lib/alglib/linalg.cpp	/^alglib::complex cmatrixludet(const complex_2d_array &a, const integer_1d_array &pivots, const ae_int_t n)$/;"	f	namespace:alglib
cmatrixluinverse	lib/alglib/linalg.cpp	/^void cmatrixluinverse(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixluinverse	lib/alglib/linalg.cpp	/^void cmatrixluinverse(complex_2d_array &a, const integer_1d_array &pivots, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
cmatrixluinverse	lib/alglib/linalg.cpp	/^void cmatrixluinverse(complex_2d_array &a, const integer_1d_array &pivots, const ae_int_t n, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
cmatrixlup	lib/alglib/linalg.cpp	/^void cmatrixlup(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixlurcond1	lib/alglib/linalg.cpp	/^double cmatrixlurcond1(\/* Complex *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
cmatrixlurcond1	lib/alglib/linalg.cpp	/^double cmatrixlurcond1(const complex_2d_array &lua, const ae_int_t n)$/;"	f	namespace:alglib
cmatrixlurcondinf	lib/alglib/linalg.cpp	/^double cmatrixlurcondinf(\/* Complex *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
cmatrixlurcondinf	lib/alglib/linalg.cpp	/^double cmatrixlurcondinf(const complex_2d_array &lua, const ae_int_t n)$/;"	f	namespace:alglib
cmatrixlusolve	lib/alglib/solvers.cpp	/^void cmatrixlusolve(\/* Complex *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
cmatrixlusolve	lib/alglib/solvers.cpp	/^void cmatrixlusolve(const complex_2d_array &lua, const integer_1d_array &p, const ae_int_t n, const complex_1d_array &b, ae_int_t &info, densesolverreport &rep, complex_1d_array &x)$/;"	f	namespace:alglib
cmatrixlusolvem	lib/alglib/solvers.cpp	/^void cmatrixlusolvem(\/* Complex *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
cmatrixlusolvem	lib/alglib/solvers.cpp	/^void cmatrixlusolvem(const complex_2d_array &lua, const integer_1d_array &p, const ae_int_t n, const complex_2d_array &b, const ae_int_t m, ae_int_t &info, densesolverreport &rep, complex_2d_array &x)$/;"	f	namespace:alglib
cmatrixmixedsolve	lib/alglib/solvers.cpp	/^void cmatrixmixedsolve(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixmixedsolve	lib/alglib/solvers.cpp	/^void cmatrixmixedsolve(const complex_2d_array &a, const complex_2d_array &lua, const integer_1d_array &p, const ae_int_t n, const complex_1d_array &b, ae_int_t &info, densesolverreport &rep, complex_1d_array &x)$/;"	f	namespace:alglib
cmatrixmixedsolvem	lib/alglib/solvers.cpp	/^void cmatrixmixedsolvem(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixmixedsolvem	lib/alglib/solvers.cpp	/^void cmatrixmixedsolvem(const complex_2d_array &a, const complex_2d_array &lua, const integer_1d_array &p, const ae_int_t n, const complex_2d_array &b, const ae_int_t m, ae_int_t &info, densesolverreport &rep, complex_2d_array &x)$/;"	f	namespace:alglib
cmatrixmv	lib/alglib/linalg.cpp	/^void cmatrixmv(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixmv	lib/alglib/linalg.cpp	/^void cmatrixmv(const ae_int_t m, const ae_int_t n, const complex_2d_array &a, const ae_int_t ia, const ae_int_t ja, const ae_int_t opa, const complex_1d_array &x, const ae_int_t ix, complex_1d_array &y, const ae_int_t iy)$/;"	f	namespace:alglib
cmatrixmvf	lib/alglib/alglibinternal.cpp	/^ae_bool cmatrixmvf(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixplu	lib/alglib/linalg.cpp	/^void cmatrixplu(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixqr	lib/alglib/linalg.cpp	/^void cmatrixqr(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixqr	lib/alglib/linalg.cpp	/^void cmatrixqr(complex_2d_array &a, const ae_int_t m, const ae_int_t n, complex_1d_array &tau)$/;"	f	namespace:alglib
cmatrixqrunpackq	lib/alglib/linalg.cpp	/^void cmatrixqrunpackq(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixqrunpackq	lib/alglib/linalg.cpp	/^void cmatrixqrunpackq(const complex_2d_array &a, const ae_int_t m, const ae_int_t n, const complex_1d_array &tau, const ae_int_t qcolumns, complex_2d_array &q)$/;"	f	namespace:alglib
cmatrixqrunpackr	lib/alglib/linalg.cpp	/^void cmatrixqrunpackr(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixqrunpackr	lib/alglib/linalg.cpp	/^void cmatrixqrunpackr(const complex_2d_array &a, const ae_int_t m, const ae_int_t n, complex_2d_array &r)$/;"	f	namespace:alglib
cmatrixrank1	lib/alglib/linalg.cpp	/^void cmatrixrank1(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixrank1	lib/alglib/linalg.cpp	/^void cmatrixrank1(const ae_int_t m, const ae_int_t n, complex_2d_array &a, const ae_int_t ia, const ae_int_t ja, complex_1d_array &u, const ae_int_t iu, complex_1d_array &v, const ae_int_t iv)$/;"	f	namespace:alglib
cmatrixrank1f	lib/alglib/alglibinternal.cpp	/^ae_bool cmatrixrank1f(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixrcond1	lib/alglib/linalg.cpp	/^double cmatrixrcond1(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixrcond1	lib/alglib/linalg.cpp	/^double cmatrixrcond1(const complex_2d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
cmatrixrcondinf	lib/alglib/linalg.cpp	/^double cmatrixrcondinf(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixrcondinf	lib/alglib/linalg.cpp	/^double cmatrixrcondinf(const complex_2d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
cmatrixrighttrsm	lib/alglib/linalg.cpp	/^void cmatrixrighttrsm(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixrighttrsm	lib/alglib/linalg.cpp	/^void cmatrixrighttrsm(const ae_int_t m, const ae_int_t n, const complex_2d_array &a, const ae_int_t i1, const ae_int_t j1, const bool isupper, const bool isunit, const ae_int_t optype, complex_2d_array &x, const ae_int_t i2, const ae_int_t j2)$/;"	f	namespace:alglib
cmatrixrighttrsmf	lib/alglib/alglibinternal.cpp	/^ae_bool cmatrixrighttrsmf(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixrndcond	lib/alglib/linalg.cpp	/^void cmatrixrndcond(ae_int_t n,$/;"	f	namespace:alglib_impl
cmatrixrndcond	lib/alglib/linalg.cpp	/^void cmatrixrndcond(const ae_int_t n, const double c, complex_2d_array &a)$/;"	f	namespace:alglib
cmatrixrndorthogonal	lib/alglib/linalg.cpp	/^void cmatrixrndorthogonal(ae_int_t n,$/;"	f	namespace:alglib_impl
cmatrixrndorthogonal	lib/alglib/linalg.cpp	/^void cmatrixrndorthogonal(const ae_int_t n, complex_2d_array &a)$/;"	f	namespace:alglib
cmatrixrndorthogonalfromtheleft	lib/alglib/linalg.cpp	/^void cmatrixrndorthogonalfromtheleft(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixrndorthogonalfromtheleft	lib/alglib/linalg.cpp	/^void cmatrixrndorthogonalfromtheleft(complex_2d_array &a, const ae_int_t m, const ae_int_t n)$/;"	f	namespace:alglib
cmatrixrndorthogonalfromtheright	lib/alglib/linalg.cpp	/^void cmatrixrndorthogonalfromtheright(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixrndorthogonalfromtheright	lib/alglib/linalg.cpp	/^void cmatrixrndorthogonalfromtheright(complex_2d_array &a, const ae_int_t m, const ae_int_t n)$/;"	f	namespace:alglib
cmatrixscaledtrsafesolve	lib/alglib/alglibinternal.cpp	/^ae_bool cmatrixscaledtrsafesolve(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixsolve	lib/alglib/solvers.cpp	/^void cmatrixsolve(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixsolve	lib/alglib/solvers.cpp	/^void cmatrixsolve(const complex_2d_array &a, const ae_int_t n, const complex_1d_array &b, ae_int_t &info, densesolverreport &rep, complex_1d_array &x)$/;"	f	namespace:alglib
cmatrixsolvem	lib/alglib/solvers.cpp	/^void cmatrixsolvem(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixsolvem	lib/alglib/solvers.cpp	/^void cmatrixsolvem(const complex_2d_array &a, const ae_int_t n, const complex_2d_array &b, const ae_int_t m, const bool rfs, ae_int_t &info, densesolverreport &rep, complex_2d_array &x)$/;"	f	namespace:alglib
cmatrixsyrk	lib/alglib/linalg.cpp	/^void cmatrixsyrk(ae_int_t n,$/;"	f	namespace:alglib_impl
cmatrixsyrk	lib/alglib/linalg.cpp	/^void cmatrixsyrk(const ae_int_t n, const ae_int_t k, const double alpha, const complex_2d_array &a, const ae_int_t ia, const ae_int_t ja, const ae_int_t optypea, const double beta, complex_2d_array &c, const ae_int_t ic, const ae_int_t jc, const bool isupper)$/;"	f	namespace:alglib
cmatrixsyrkf	lib/alglib/alglibinternal.cpp	/^ae_bool cmatrixsyrkf(ae_int_t n,$/;"	f	namespace:alglib_impl
cmatrixtranspose	lib/alglib/linalg.cpp	/^void cmatrixtranspose(ae_int_t m,$/;"	f	namespace:alglib_impl
cmatrixtranspose	lib/alglib/linalg.cpp	/^void cmatrixtranspose(const ae_int_t m, const ae_int_t n, const complex_2d_array &a, const ae_int_t ia, const ae_int_t ja, complex_2d_array &b, const ae_int_t ib, const ae_int_t jb)$/;"	f	namespace:alglib
cmatrixtrinverse	lib/alglib/linalg.cpp	/^void cmatrixtrinverse(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixtrinverse	lib/alglib/linalg.cpp	/^void cmatrixtrinverse(complex_2d_array &a, const ae_int_t n, const bool isupper, const bool isunit, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
cmatrixtrinverse	lib/alglib/linalg.cpp	/^void cmatrixtrinverse(complex_2d_array &a, const bool isupper, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
cmatrixtrrcond1	lib/alglib/linalg.cpp	/^double cmatrixtrrcond1(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixtrrcond1	lib/alglib/linalg.cpp	/^double cmatrixtrrcond1(const complex_2d_array &a, const ae_int_t n, const bool isupper, const bool isunit)$/;"	f	namespace:alglib
cmatrixtrrcondinf	lib/alglib/linalg.cpp	/^double cmatrixtrrcondinf(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
cmatrixtrrcondinf	lib/alglib/linalg.cpp	/^double cmatrixtrrcondinf(const complex_2d_array &a, const ae_int_t n, const bool isupper, const bool isunit)$/;"	f	namespace:alglib
cmd	install/fix_autoload.py	/^  cmd = '.\/copy_robot %s scripts autoload --atom' % ip$/;"	v
cmu	tools/behaviorSim/cma.py	/^        def cmu(df, mu, alphamu=0.0, alphacov=2.0):$/;"	f	function:CMAParameters.set
cmudf	tools/behaviorSim/cma.py	/^        def cmudf(df, mu, alphamu):$/;"	f	function:CMAParameters.set
cnt	lib/alglib/ap.h	/^    ae_int64_t     cnt;$/;"	m	struct:alglib_impl::__anon33
cnt	lib/alglib/ap.h	/^    ae_int_t cnt;$/;"	m	struct:alglib_impl::ae_vector
co_funcs	lib/lua/src/lbaselib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
coach	core/communications/RoboCupGameControlData.h	/^  RobotInfo coach;$/;"	m	struct:TeamInfo
coachMessage	core/communications/RoboCupGameControlData.h	/^  uint8_t coachMessage[SPL_COACH_MESSAGE_SIZE]; \/\/ the coach's message to the team$/;"	m	struct:TeamInfo
coachSequence	core/communications/RoboCupGameControlData.h	/^  uint8_t coachSequence;        \/\/ sequence number of the coach's message$/;"	m	struct:TeamInfo
coachTimer_	core/communications/CommunicationModule.h	/^  Timer coachTimer_;$/;"	m	class:CommunicationModule
coachUDP	core/communications/CommunicationModule.h	/^  UDPWrapper* coachUDP;$/;"	m	class:CommunicationModule
coachframe_	build/include/tool/simulation/CommunicationGenerator.h	/^    int teamBroadcastFrame_, teamSilenceFrame_, coachframe_;$/;"	m	class:CommunicationGenerator
coachframe_	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^    int teamBroadcastFrame_, teamSilenceFrame_, coachframe_;$/;"	m	class:CommunicationGenerator
code	lib/lua/src/lobject.h	/^  Instruction *code;$/;"	m	struct:Proto
code	lib/zlib/deflate.h	/^        ush  code;       \/* bit string *\/$/;"	m	union:ct_data_s::__anon133
code	lib/zlib/inftrees.h	/^} code;$/;"	t	typeref:struct:__anon137
code	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
code_label	lib/lua/src/lcode.c	/^static int code_label (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
codearith	lib/lua/src/lcode.c	/^static void codearith (FuncState *fs, OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
codecomp	lib/lua/src/lcode.c	/^static void codecomp (FuncState *fs, OpCode op, int cond, expdesc *e1,$/;"	f	file:
codenot	lib/lua/src/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codes	lib/zlib/inflate.h	/^    code codes[ENOUGH];         \/* space for code tables *\/$/;"	m	struct:inflate_state
codestring	lib/lua/src/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
codetype	lib/zlib/inftrees.h	/^} codetype;$/;"	t	typeref:enum:__anon138
col	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^		unsigned col() const { return m_col; }$/;"	f	class:YAML::ostream
collectClicked	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::collectClicked() {$/;"	f	class:IntrinsicCalibrationWidget
collectClicked	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::collectClicked() {$/;"	f	class:IntrinsicCalibrationWidget
collectargs	lib/lua/src/lua.c	/^static int collectargs (char **argv, int *pi, int *pv, int *pe) {$/;"	f	file:
collectionStack	lib/yaml-cpp/src/collectionstack.h	/^		std::stack<CollectionType::value> collectionStack;$/;"	m	class:YAML::CollectionStack
collections	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
collectvalidlines	lib/lua/src/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
color	build/include/tool/annotations/AnnotationAnalyzer.h	/^    Color color;$/;"	m	struct:YUV
color	core/common/ColorConversion.h	/^namespace color {$/;"	n
color	core/vision/Union_find.h	/^			int color;$/;"	m	struct:MergeBlob::Blob
color	core/vision/structures/RobotCandidate.h	/^  Color color;$/;"	m	struct:RobotCandidate
color	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    Color color;$/;"	m	struct:YUV
colorBoxIndexChanged	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::colorBoxIndexChanged(const QString& text) {$/;"	f	class:AnalysisWidget
colorBoxIndexChanged	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::colorBoxIndexChanged(const QString& text) {$/;"	f	class:AnnotationWidget
colorBoxIndexChanged	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::colorBoxIndexChanged(const QString& text) {$/;"	f	class:AnalysisWidget
colorBoxIndexChanged	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::colorBoxIndexChanged(const QString& text) {$/;"	f	class:AnnotationWidget
colorRGB	build/include/tool/UTOpenGL/BasicGL.h	/^  void colorRGB(RGB col) { glColor3f(col.r\/255.0,col.g\/255.0,col.b\/255.0); };    $/;"	f	class:BasicGL
colorRGB	build/include/tool/UTOpenGL/BasicGL.h	/^  void colorRGB(int r, int g, int b) { glColor3f(r\/255.0,g\/255.0,b\/255.0); };$/;"	f	class:BasicGL
colorRGB	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^  void colorRGB(RGB col) { glColor3f(col.r\/255.0,col.g\/255.0,col.b\/255.0); };    $/;"	f	class:BasicGL
colorRGB	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^  void colorRGB(int r, int g, int b) { glColor3f(r\/255.0,g\/255.0,b\/255.0); };$/;"	f	class:BasicGL
colorRGBAlpha	build/include/tool/UTOpenGL/BasicGL.h	/^  void colorRGBAlpha(RGB col, float alpha) { glColor4f(col.r\/255.0,col.g\/255.0,col.b\/255.0,alpha); };  $/;"	f	class:BasicGL
colorRGBAlpha	build/include/tool/UTOpenGL/BasicGL.h	/^  void colorRGBAlpha(int r, int g, int b, float alpha) { glColor4f(r\/255.0,g\/255.0,b\/255.0,alpha); };$/;"	f	class:BasicGL
colorRGBAlpha	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^  void colorRGBAlpha(RGB col, float alpha) { glColor4f(col.r\/255.0,col.g\/255.0,col.b\/255.0,alpha); };  $/;"	f	class:BasicGL
colorRGBAlpha	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^  void colorRGBAlpha(int r, int g, int b, float alpha) { glColor4f(r\/255.0,g\/255.0,b\/255.0,alpha); };$/;"	f	class:BasicGL
colorStrings	build/include/tool/AnalysisWidget.h	/^        QString colorStrings[NUM_COLORS];$/;"	m	class:AnalysisWidget
colorStrings	build/include/tool/AnnotationWidget.h	/^        QString colorStrings[NUM_COLORS], selectionStrings[NumSelectionTypes], cameraStrings[2];$/;"	m	class:AnnotationWidget
colorStrings	tools/UTNaoTool/AnalysisWidget.h	/^        QString colorStrings[NUM_COLORS];$/;"	m	class:AnalysisWidget
colorStrings	tools/UTNaoTool/AnnotationWidget.h	/^        QString colorStrings[NUM_COLORS], selectionStrings[NumSelectionTypes], cameraStrings[2];$/;"	m	class:AnnotationWidget
colorTable	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      ColorTable colorTable;$/;"	m	class:color_classifier::ClassificationWindow
colorTableFilename	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      std::string colorTableFilename;$/;"	m	class:color_classifier::ClassificationWindow
colorTablePointCount	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^int AnnotationAnalyzer::colorTablePointCount(Color query) {$/;"	f	class:AnnotationAnalyzer
colorTablePointCount	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^int AnnotationAnalyzer::colorTablePointCount(Color query) {$/;"	f	class:AnnotationAnalyzer
colorTable_	core/vision/Classifier.h	/^  unsigned char* colorTable_;$/;"	m	class:Classifier
colorUpdateAvailable_	build/include/tool/VisionWindow.h	/^  bool colorUpdateAvailable_;$/;"	m	class:VisionWindow
colorUpdateAvailable_	tools/UTNaoTool/VisionWindow.h	/^  bool colorUpdateAvailable_;$/;"	m	class:VisionWindow
color_	build/include/tool/annotations/Annotation.h	/^        Color color_;$/;"	m	class:Annotation
color_	tools/UTNaoTool/annotations/Annotation.h	/^        Color color_;$/;"	m	class:Annotation
color_classifier	tools/color_classifier/include/color_classifier/ImageWidget.hpp	/^namespace color_classifier {$/;"	n
color_classifier	tools/color_classifier/include/color_classifier/classification_window.hpp	/^namespace color_classifier {$/;"	n
color_classifier	tools/color_classifier/include/color_classifier/main_window.hpp	/^namespace color_classifier {$/;"	n
color_classifier	tools/color_classifier/src/ImageWidget.cpp	/^namespace color_classifier {$/;"	n	file:
color_classifier	tools/color_classifier/src/classification_window.cpp	/^namespace color_classifier {$/;"	n	file:
color_classifier	tools/color_classifier/src/main_window.cpp	/^namespace color_classifier {$/;"	n	file:
color_table_	core/vision/ImageProcessor.h	/^    unsigned char* color_table_;$/;"	m	class:ImageProcessor
cols	lib/alglib/ap.cpp	/^alglib::ae_int_t alglib::ae_matrix_wrapper::cols() const$/;"	f	class:alglib::ae_matrix_wrapper
cols	lib/alglib/ap.h	/^    ae_int64_t     cols;$/;"	m	struct:alglib_impl::__anon34
cols	lib/alglib/ap.h	/^    ae_int_t cols;$/;"	m	struct:alglib_impl::ae_matrix
column	lib/yaml-cpp/include/yaml-cpp/mark.h	/^		int line, column;$/;"	m	struct:YAML::Mark
column	lib/yaml-cpp/src/scanner.h	/^			int column;$/;"	m	struct:YAML::Scanner::IndentMarker
column	lib/yaml-cpp/src/stream.h	/^		int column() const { return m_mark.column; }$/;"	f	class:YAML::Stream
columnVector	core/math/YaMatrix.h	/^  YaMatrix<V> columnVector(int n) const$/;"	f	class:YaMatrix
columnidxabsmax	lib/alglib/alglibinternal.cpp	/^ae_int_t columnidxabsmax(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
columnmeans	lib/alglib/dataanalysis.h	/^    ae_vector columnmeans;$/;"	m	struct:alglib_impl::__anon44
columnmeans	lib/alglib/dataanalysis.h	/^    ae_vector columnmeans;$/;"	m	struct:alglib_impl::__anon50
columnsigmas	lib/alglib/dataanalysis.h	/^    ae_vector columnsigmas;$/;"	m	struct:alglib_impl::__anon44
columnsigmas	lib/alglib/dataanalysis.h	/^    ae_vector columnsigmas;$/;"	m	struct:alglib_impl::__anon50
com	core/motion/KickParameters.h	/^  Vector3<float> com;$/;"	m	struct:KickStateInfo
comJacobian	motion_planning/src/plan_kick.cpp	/^  void PlanKick::comJacobian(std::vector<unsigned int> joint_indices, std::string goal_frame, matec_utils::Matrix& jacobian)$/;"	f	class:motion_planning::PlanKick
comOffset	core/motion/KickParameters.h	/^  float comOffset;$/;"	m	struct:KickStateInfo
comOffset	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float comOffset;                                        \/\/ move in meters of CoM in x-direction when walking to spread weight more evenly over foot$/;"	m	class:Walk2014Generator
comOffsetLeft	core/motion/KickParameters.h	/^  float comOffsetLeft;$/;"	m	struct:KickStateInfo
comOffsetRight	core/motion/KickParameters.h	/^  float comOffsetRight;$/;"	m	struct:KickStateInfo
comRecursive	motion_planning/src/plan_kick.cpp	/^  void PlanKick::comRecursive(boost::shared_ptr<dynamics_tree::DynamicsTreeNode> node)$/;"	f	class:motion_planning::PlanKick
combine	core/memory/StreamBuffer.cpp	/^StreamBuffer StreamBuffer::combine(const std::vector<StreamBuffer>& buffers) {$/;"	f	class:StreamBuffer
combine	core/memory/StreamBuffer.cpp	/^void StreamBuffer::combine(const std::list<StreamBuffer>& buffers, StreamBuffer& combined) {$/;"	f	class:StreamBuffer
combine	core/memory/StreamBuffer.cpp	/^void StreamBuffer::combine(const std::vector<StreamBuffer>& buffers, StreamBuffer& combined) {$/;"	f	class:StreamBuffer
combine	lib/lua/src/luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	file:
combineAllLogs	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::combineAllLogs() {$/;"	f	class:LogEditorWindow
combineAllLogs	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::combineAllLogs() {$/;"	f	class:LogEditorWindow
comm_max	lib/zlib/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s
comm_module_request_received_	core/memory/CameraBlock.h	/^  bool comm_module_request_received_;$/;"	m	struct:CameraBlock
command	core/imageCapture/i2c-dev.h	/^	__u8 command;$/;"	m	struct:i2c_smbus_ioctl_data
commandAngles	build/include/tool/JointsWindow.h	/^  QLabel* commandAngles;$/;"	m	class:JointsWindow
commandAngles	tools/UTNaoTool/JointsWindow.h	/^  QLabel* commandAngles;$/;"	m	class:JointsWindow
commandStiffs	build/include/tool/JointsWindow.h	/^  QLabel* commandStiffs;$/;"	m	class:JointsWindow
commandStiffs	tools/UTNaoTool/JointsWindow.h	/^  QLabel* commandStiffs;$/;"	m	class:JointsWindow
command_	build/include/tool/RobotControllerWidget.h	/^    Eigen::Vector3f velocity_, command_;$/;"	m	class:RobotControllerWidget
command_	tools/UTNaoTool/RobotControllerWidget.h	/^    Eigen::Vector3f velocity_, command_;$/;"	m	class:RobotControllerWidget
command_map_	core/sonar/SonarModule.h	/^  std::map<float, std::string> command_map_;$/;"	m	class:SonarModule
commands	core/python/behaviors/Distance.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
commands	core/python/behaviors/Movement.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
commands	core/python/behaviors/custom_kick.py	/^import memory, pose, commands, cfgstiff, core$/;"	i
commands	core/python/behaviors/head_tracking.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
commands	core/python/behaviors/keeper.py	/^import pose, commands, cfgstiff$/;"	i
commands	core/python/behaviors/keeper_2.py	/^import pose, commands, cfgstiff, cfgpose$/;"	i
commands	core/python/behaviors/keeper_3.py	/^import pose, commands, cfgstiff$/;"	i
commands	core/python/behaviors/kick.py	/^import memory, pose, commands, cfgstiff$/;"	i
commands	core/python/behaviors/main.py	/^import memory, commands$/;"	i
commands	core/python/behaviors/pid_distance_angle.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
commands	core/python/behaviors/sample.py	/^import memory, commands$/;"	i
commands	core/python/behaviors/stamp_in_circles.py	/^import memory, pose, commands, cfgstiff, math$/;"	i
commands	core/python/behaviors/stand.py	/^import memory, pose, commands, cfgstiff$/;"	i
commands	core/python/behaviors/walk_to_center.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
commands	core/python/behaviors/walk_to_center_2.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
commands	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
commands	core/python/head.py	/^import commands$/;"	i
commands	core/python/init.py	/^import memory, mem_objects, commands$/;"	i
commands	core/python/pose.py	/^import commands$/;"	i
commands	core/python/primary_bvr.py	/^import commands, cfgstiff$/;"	i
commands_	build/include/tool/MotionSimulation.h	/^  JointCommandBlock *commands_;$/;"	m	class:MotionSimulation
commands_	core/motion/MotionModule.h	/^  JointCommandBlock *commands_;$/;"	m	class:MotionModule
commands_	core/motion/SpecialMotionModule.h	/^  JointCommandBlock* commands_;$/;"	m	class:SpecialMotionModule
commands_	core/motion/rswalk2014/RSWalkModule2014.h	/^        JointCommandBlock *commands_;$/;"	m	class:RSWalkModule2014
commands_	core/sonar/SonarModule.h	/^  JointCommandBlock *commands_;$/;"	m	class:SonarModule
commands_	tools/UTNaoTool/MotionSimulation.h	/^  JointCommandBlock *commands_;$/;"	m	class:MotionSimulation
comment	lib/zlib/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s
common_ip	core/common/TeamConfig.h	/^    std::string common_ip;$/;"	m	class:TeamConfig
communications_	core/VisionCore.h	/^  CommunicationModule *communications_;$/;"	m	class:VisionCore
compile	install/setup_robot	/^def compile(geode=False):$/;"	f
compileInterfaces	bin/compile	/^def compileInterfaces(interfaces,build_dir):$/;"	f
compileInterfaces	build/compile	/^def compileInterfaces(interfaces,build_dir):$/;"	f
complement	tools/behaviorSim/cma.py	/^    def complement(self):$/;"	m	class:Options
complete	build/include/tool/simulation/BehaviorSimulation.cpp	/^bool BehaviorSimulation::complete() {$/;"	f	class:BehaviorSimulation
complete	build/include/tool/simulation/LocalizationSimulation.cpp	/^bool LocalizationSimulation::complete() {$/;"	f	class:LocalizationSimulation
complete	build/include/tool/simulation/Simulation.h	/^    virtual bool complete() { return false; }$/;"	f	class:Simulation
complete	core/python/state_machine.py	/^  def complete(self):$/;"	m	class:Node
complete	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^bool BehaviorSimulation::complete() {$/;"	f	class:BehaviorSimulation
complete	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^bool LocalizationSimulation::complete() {$/;"	f	class:LocalizationSimulation
complete	tools/UTNaoTool/simulation/Simulation.h	/^    virtual bool complete() { return false; }$/;"	f	class:Simulation
completeBallSearchTime	core/memory/BehaviorBlock.h	/^  float completeBallSearchTime;$/;"	m	struct:BehaviorBlock
completedBallSearch	core/memory/BehaviorBlock.h	/^  bool completedBallSearch;$/;"	m	struct:BehaviorBlock
complex	lib/alglib/ap.cpp	/^alglib::complex::complex():x(0.0),y(0.0)$/;"	f	class:alglib::complex
complex	lib/alglib/ap.cpp	/^alglib::complex::complex(const alglib::complex &z):x(z.x),y(z.y)$/;"	f	class:alglib::complex
complex	lib/alglib/ap.cpp	/^alglib::complex::complex(const double &_x):x(_x),y(0.0)$/;"	f	class:alglib::complex
complex	lib/alglib/ap.cpp	/^alglib::complex::complex(const double &_x, const double &_y):x(_x),y(_y)$/;"	f	class:alglib::complex
complex	lib/alglib/ap.h	/^class complex$/;"	c	namespace:alglib
complex_1d_array	lib/alglib/ap.cpp	/^alglib::complex_1d_array::complex_1d_array()  $/;"	f	class:alglib::complex_1d_array
complex_1d_array	lib/alglib/ap.cpp	/^alglib::complex_1d_array::complex_1d_array(alglib_impl::ae_vector *p)  $/;"	f	class:alglib::complex_1d_array
complex_1d_array	lib/alglib/ap.cpp	/^alglib::complex_1d_array::complex_1d_array(const char *s)  $/;"	f	class:alglib::complex_1d_array
complex_1d_array	lib/alglib/ap.h	/^class complex_1d_array : public ae_vector_wrapper$/;"	c	namespace:alglib
complex_2d_array	lib/alglib/ap.cpp	/^alglib::complex_2d_array::complex_2d_array()  $/;"	f	class:alglib::complex_2d_array
complex_2d_array	lib/alglib/ap.cpp	/^alglib::complex_2d_array::complex_2d_array(alglib_impl::ae_matrix *p)  $/;"	f	class:alglib::complex_2d_array
complex_2d_array	lib/alglib/ap.cpp	/^alglib::complex_2d_array::complex_2d_array(const char *s)  $/;"	f	class:alglib::complex_2d_array
complex_2d_array	lib/alglib/ap.h	/^class complex_2d_array : public ae_matrix_wrapper$/;"	c	namespace:alglib
complexapplyreflectionfromtheleft	lib/alglib/alglibinternal.cpp	/^void complexapplyreflectionfromtheleft(\/* Complex *\/ ae_matrix* c,$/;"	f	namespace:alglib_impl
complexapplyreflectionfromtheright	lib/alglib/alglibinternal.cpp	/^void complexapplyreflectionfromtheright(\/* Complex *\/ ae_matrix* c,$/;"	f	namespace:alglib_impl
complexgeneratereflection	lib/alglib/alglibinternal.cpp	/^void complexgeneratereflection(\/* Complex *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
composeAction	interfaces/sim_spark/RobotBehavior.cpp	/^string RobotBehavior::composeAction(){$/;"	f	class:RobotBehavior
compress	lib/zlib/compress.c	/^int ZEXPORT compress (dest, destLen, source, sourceLen)$/;"	f
compress	lib/zlib/zconf.h	/^#  define compress /;"	d
compress2	lib/zlib/compress.c	/^int ZEXPORT compress2 (dest, destLen, source, sourceLen, level)$/;"	f
compress2	lib/zlib/zconf.h	/^#  define compress2 /;"	d
compressBound	lib/zlib/compress.c	/^uLong ZEXPORT compressBound (sourceLen)$/;"	f
compressBound	lib/zlib/zconf.h	/^#  define compressBound /;"	d
compress_block	lib/zlib/trees.c	/^local void compress_block(s, ltree, dtree)$/;"	f
compress_func	lib/zlib/deflate.c	/^typedef block_state (*compress_func) OF((deflate_state *s, int flush));$/;"	t	file:
compressed_len	lib/zlib/deflate.h	/^    ulg compressed_len; \/* total bit length of compressed file mod 2^32 *\/$/;"	m	struct:internal_state
computeCenter	core/math/Geometry.cpp	/^void LineSegment::computeCenter() {$/;"	f	class:LineSegment
computeErrorParameterVector	build/include/tool/calibration/ExtrinsicCalibrator.cpp	/^float ExtrinsicCalibrator::computeErrorParameterVector(const Sample& sample, const VectorXf& parameters) {$/;"	f	class:ExtrinsicCalibrator
computeErrorParameterVector	tools/UTNaoTool/calibration/ExtrinsicCalibrator.cpp	/^float ExtrinsicCalibrator::computeErrorParameterVector(const Sample& sample, const VectorXf& parameters) {$/;"	f	class:ExtrinsicCalibrator
computeProjectionError	build/include/tool/calibration/JointCalibrator.cpp	/^float JointCalibrator::computeProjectionError(const vector<Vector2f>& icorners, const vector<Vector2f>& pcorners) const {$/;"	f	class:JointCalibrator
computeProjectionError	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^float JointCalibrator::computeProjectionError(const vector<Vector2f>& icorners, const vector<Vector2f>& pcorners) const {$/;"	f	class:JointCalibrator
computeReprojectionErrors	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^double IntrinsicCalibrator::computeReprojectionErrors($/;"	f	class:IntrinsicCalibrator
computeReprojectionErrors	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^double IntrinsicCalibrator::computeReprojectionErrors($/;"	f	class:IntrinsicCalibrator
computeTorque	interfaces/sim_spark/RobotBehavior.cpp	/^double RobotBehavior::computeTorque(const int &effectorID) {$/;"	f	class:RobotBehavior
computesizes	lib/lua/src/ltable.c	/^static int computesizes (int nums[], int *narray) {$/;"	f	file:
conc	core/math/Pose2D.h	/^  Pose2D& conc(const Pose2D& other)$/;"	f	class:Pose2D
conc	core/math/Pose3D.h	/^  Pose3D& conc(const Pose3D& other)$/;"	f	class:Pose3D
concat_event	lib/lua/doc/manual.html	/^     function concat_event (op1, op2)$/;"	f
cond	lib/lua/src/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
cond_	core/memory/Lock.h	/^  boost::interprocess::named_condition *cond_;$/;"	m	class:Lock
condhardstacktests	lib/lua/src/llimits.h	/^#define condhardstacktests(/;"	d
condjump	lib/lua/src/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
cone	tools/behaviorSim/cma.py	/^        def cone(df, mu, N, alphacov=2.0):$/;"	f	function:CMAParameters.set
conedf	tools/behaviorSim/cma.py	/^        def conedf(df, mu, N):$/;"	f	function:CMAParameters.set
conf	core/memory/DelayedLocalizationBlock.h	/^  float conf; \/\/ confidence in prediction$/;"	m	struct:DelayedLocalizationBlock
confidence	core/vision/structures/BallCandidate.h	/^  float confidence;$/;"	m	struct:BallCandidate
confidence	core/vision/structures/FieldLine.h	/^  float confidence;$/;"	m	struct:FieldLine
confidence	core/vision/structures/RobotCandidate.h	/^  float confidence;$/;"	m	struct:RobotCandidate
confidence_	core/sonar/SonarModule.h	/^  float confidence_[2];$/;"	m	class:SonarModule
config	lib/zlib/deflate.c	/^} config;$/;"	t	typeref:struct:config_s	file:
config_	build/include/tool/UTMainWnd.h	/^  ToolConfig config_;$/;"	m	class:UTMainWnd
config_	tools/UTNaoTool/UTMainWnd.h	/^  ToolConfig config_;$/;"	m	class:UTMainWnd
config_s	lib/zlib/deflate.c	/^typedef struct config_s {$/;"	s	file:
configuration_table	lib/zlib/deflate.c	/^local const config configuration_table[10] = {$/;"	v
configuration_table	lib/zlib/deflate.c	/^local const config configuration_table[2] = {$/;"	v
configureInterfaces	bin/compile	/^def configureInterfaces(interfaces,flags,build_dir):$/;"	f
configureInterfaces	build/compile	/^def configureInterfaces(interfaces,flags,build_dir):$/;"	f
conj	lib/alglib/ap.cpp	/^alglib::complex alglib::conj(const alglib::complex &z)$/;"	f	class:alglib
connected_	core/communications/CommunicationModule.h	/^  bool connected_;$/;"	m	class:CommunicationModule
connectionLineColor	build/include/tool/VisionWindow.h	/^  QColor sampleColor, calibrationLineColor, connectionLineColor;$/;"	m	class:VisionWindow
connectionLineColor	tools/UTNaoTool/VisionWindow.h	/^  QColor sampleColor, calibrationLineColor, connectionLineColor;$/;"	m	class:VisionWindow
connections_	build/include/tool/ProcessExecutor.cpp	/^map<QString,ToolProcess*> PE::connections_;$/;"	m	class:PE	file:
connections_	build/include/tool/ProcessExecutor.h	/^    static std::map<QString,ToolProcess*> connections_;$/;"	m	class:ProcessExecutor
connections_	tools/UTNaoTool/ProcessExecutor.cpp	/^map<QString,ToolProcess*> PE::connections_;$/;"	m	class:PE	file:
connections_	tools/UTNaoTool/ProcessExecutor.h	/^    static std::map<QString,ToolProcess*> connections_;$/;"	m	class:ProcessExecutor
const	lib/zlib/zconf.h	/^#    define const /;"	d
constfolding	lib/lua/src/lcode.c	/^static int constfolding (OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
constrainedvalues	lib/alglib/optimization.h	/^    ae_vector constrainedvalues;$/;"	m	struct:alglib_impl::__anon79
constructPose	core/motion/rswalk2014/ActionGenerator.cpp	/^void ActionGenerator::constructPose(std::string path) {$/;"	f	class:ActionGenerator
constructor	lib/lua/src/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
constterm	lib/alglib/optimization.h	/^    double constterm;$/;"	m	struct:alglib_impl::__anon71
contains	core/math/Range.h	/^    bool contains(const Range<T>& r) const {return min < r.min && max > r.max;}$/;"	f	class:Range
content	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		std::string content;$/;"	m	struct:YAML::_Alias
content	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		std::string content;$/;"	m	struct:YAML::_Anchor
content	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		std::string content;$/;"	m	struct:YAML::_Comment
content	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		std::string content;$/;"	m	struct:YAML::_Tag
contents	core/sensor/offline/genInertialFilterMatrices.py	/^contents = template % (sys.argv[0],body)$/;"	v
contents	lib/lua/doc/contents.html	/^<H2><A NAME="contents">Contents<\/A><\/H2>$/;"	a
contract	core/memory/StreamBuffer.cpp	/^void StreamBuffer::contract() {$/;"	f	class:StreamBuffer
controlSpins	build/include/tool/CameraWindow.h	/^    QSpinBox* controlSpins;$/;"	m	class:CameraWindow
controlSpins	tools/UTNaoTool/CameraWindow.h	/^    QSpinBox* controlSpins;$/;"	m	class:CameraWindow
controlValues	core/motion/rswalk2014/perception/vision/RSCamera.cpp	/^__s32 (*controlValues)[NUM_CONTROLS] = controlValues_lights;$/;"	v
controlValues_lights	core/motion/rswalk2014/perception/vision/RSCamera.cpp	/^__s32 controlValues_lights[NUM_CAMERAS][NUM_CONTROLS] =$/;"	v
controllerData	build/include/tool/joystickxbox.cpp	/^ControllerInfo controllerData;$/;"	v
controllerData	tools/UTNaoTool/joystickxbox.cpp	/^ControllerInfo controllerData;$/;"	v
controlsChanged	build/include/tool/ConfigWidget.h	/^    virtual void controlsChanged() { }$/;"	f	class:ConfigWidget
controlsChanged	build/include/tool/ConfigWidget.h	/^    void controlsChanged(bool) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	build/include/tool/ConfigWidget.h	/^    void controlsChanged(char) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	build/include/tool/ConfigWidget.h	/^    void controlsChanged(const QString&) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	build/include/tool/ConfigWidget.h	/^    void controlsChanged(double) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	build/include/tool/ConfigWidget.h	/^    void controlsChanged(float) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	build/include/tool/ConfigWidget.h	/^    void controlsChanged(int) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	build/include/tool/ConfigWidget.h	/^    void controlsChanged(short) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	build/include/tool/ConfigWindow.h	/^    virtual void controlsChanged() { }$/;"	f	class:ConfigWindow
controlsChanged	build/include/tool/ConfigWindow.h	/^    void controlsChanged(bool) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	build/include/tool/ConfigWindow.h	/^    void controlsChanged(char) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	build/include/tool/ConfigWindow.h	/^    void controlsChanged(const QString&) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	build/include/tool/ConfigWindow.h	/^    void controlsChanged(double) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	build/include/tool/ConfigWindow.h	/^    void controlsChanged(float) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	build/include/tool/ConfigWindow.h	/^    void controlsChanged(int) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	build/include/tool/ConfigWindow.h	/^    void controlsChanged(short) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	build/include/tool/WorldWindow.cpp	/^void WorldWindow::controlsChanged() {$/;"	f	class:WorldWindow
controlsChanged	tools/UTNaoTool/ConfigWidget.h	/^    virtual void controlsChanged() { }$/;"	f	class:ConfigWidget
controlsChanged	tools/UTNaoTool/ConfigWidget.h	/^    void controlsChanged(bool) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	tools/UTNaoTool/ConfigWidget.h	/^    void controlsChanged(char) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	tools/UTNaoTool/ConfigWidget.h	/^    void controlsChanged(const QString&) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	tools/UTNaoTool/ConfigWidget.h	/^    void controlsChanged(double) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	tools/UTNaoTool/ConfigWidget.h	/^    void controlsChanged(float) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	tools/UTNaoTool/ConfigWidget.h	/^    void controlsChanged(int) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	tools/UTNaoTool/ConfigWidget.h	/^    void controlsChanged(short) { controlsChanged(); }$/;"	f	class:ConfigWidget
controlsChanged	tools/UTNaoTool/ConfigWindow.h	/^    virtual void controlsChanged() { }$/;"	f	class:ConfigWindow
controlsChanged	tools/UTNaoTool/ConfigWindow.h	/^    void controlsChanged(bool) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	tools/UTNaoTool/ConfigWindow.h	/^    void controlsChanged(char) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	tools/UTNaoTool/ConfigWindow.h	/^    void controlsChanged(const QString&) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	tools/UTNaoTool/ConfigWindow.h	/^    void controlsChanged(double) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	tools/UTNaoTool/ConfigWindow.h	/^    void controlsChanged(float) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	tools/UTNaoTool/ConfigWindow.h	/^    void controlsChanged(int) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	tools/UTNaoTool/ConfigWindow.h	/^    void controlsChanged(short) { controlsChanged(); }$/;"	f	class:ConfigWindow
controlsChanged	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::controlsChanged() {$/;"	f	class:WorldWindow
convDble	core/common/NMatrix.h	/^inline float convDble(const NMatrix& a) { return a[0][0]; } \/\/ Convert 1x1 matrix to Double$/;"	f
convc1d	lib/alglib/fasttransforms.cpp	/^void convc1d(\/* Complex *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
convc1d	lib/alglib/fasttransforms.cpp	/^void convc1d(const complex_1d_array &a, const ae_int_t m, const complex_1d_array &b, const ae_int_t n, complex_1d_array &r)$/;"	f	namespace:alglib
convc1dcircular	lib/alglib/fasttransforms.cpp	/^void convc1dcircular(\/* Complex *\/ ae_vector* s,$/;"	f	namespace:alglib_impl
convc1dcircular	lib/alglib/fasttransforms.cpp	/^void convc1dcircular(const complex_1d_array &s, const ae_int_t m, const complex_1d_array &r, const ae_int_t n, complex_1d_array &c)$/;"	f	namespace:alglib
convc1dcircularinv	lib/alglib/fasttransforms.cpp	/^void convc1dcircularinv(\/* Complex *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
convc1dcircularinv	lib/alglib/fasttransforms.cpp	/^void convc1dcircularinv(const complex_1d_array &a, const ae_int_t m, const complex_1d_array &b, const ae_int_t n, complex_1d_array &r)$/;"	f	namespace:alglib
convc1dinv	lib/alglib/fasttransforms.cpp	/^void convc1dinv(\/* Complex *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
convc1dinv	lib/alglib/fasttransforms.cpp	/^void convc1dinv(const complex_1d_array &a, const ae_int_t m, const complex_1d_array &b, const ae_int_t n, complex_1d_array &r)$/;"	f	namespace:alglib
convc1dx	lib/alglib/fasttransforms.cpp	/^void convc1dx(\/* Complex *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
convert	core/communications/PacketConverter.cpp	/^SPLCoachMessage PacketConverter::convert(UTCoachMessage message) {$/;"	f	class:PacketConverter
convert	core/communications/PacketConverter.cpp	/^SPLStandardMessage PacketConverter::convert(UTStandardMessage message) {$/;"	f	class:PacketConverter
convert	core/communications/PacketConverter.cpp	/^UTCoachMessage PacketConverter::convert(SPLCoachMessage message) {$/;"	f	class:PacketConverter
convert	core/communications/PacketConverter.cpp	/^UTStandardMessage PacketConverter::convert(SPLStandardMessage message) {$/;"	f	class:PacketConverter
convertParams	build/include/tool/calibration/JointCalibrator.cpp	/^RobotCalibration JointCalibrator::convertParams(const vector<float>& offsets) const {$/;"	f	class:JointCalibrator
convertParams	build/include/tool/calibration/JointCalibrator.cpp	/^vector<float> JointCalibrator::convertParams(const RobotCalibration& cal) const {$/;"	f	class:JointCalibrator
convertParams	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^RobotCalibration JointCalibrator::convertParams(const vector<float>& offsets) const {$/;"	f	class:JointCalibrator
convertParams	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^vector<float> JointCalibrator::convertParams(const RobotCalibration& cal) const {$/;"	f	class:JointCalibrator
convertToRobotRelative	core/motion/rswalk2014/types/AbsCoord.hpp	/^   RRCoord convertToRobotRelative(const AbsCoord &robotPose) const {$/;"	f	struct:AbsCoord
convertToRobotRelative	core/motion/rswalk2014/types/AbsCoord.hpp	/^   RRCoord convertToRobotRelative(void) const {$/;"	f	struct:AbsCoord
convertToRobotRelativeCartesian	core/motion/rswalk2014/types/AbsCoord.hpp	/^   AbsCoord convertToRobotRelativeCartesian(const AbsCoord &robotPose) const {$/;"	f	struct:AbsCoord
convr1d	lib/alglib/fasttransforms.cpp	/^void convr1d(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
convr1d	lib/alglib/fasttransforms.cpp	/^void convr1d(const real_1d_array &a, const ae_int_t m, const real_1d_array &b, const ae_int_t n, real_1d_array &r)$/;"	f	namespace:alglib
convr1dcircular	lib/alglib/fasttransforms.cpp	/^void convr1dcircular(\/* Real    *\/ ae_vector* s,$/;"	f	namespace:alglib_impl
convr1dcircular	lib/alglib/fasttransforms.cpp	/^void convr1dcircular(const real_1d_array &s, const ae_int_t m, const real_1d_array &r, const ae_int_t n, real_1d_array &c)$/;"	f	namespace:alglib
convr1dcircularinv	lib/alglib/fasttransforms.cpp	/^void convr1dcircularinv(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
convr1dcircularinv	lib/alglib/fasttransforms.cpp	/^void convr1dcircularinv(const real_1d_array &a, const ae_int_t m, const real_1d_array &b, const ae_int_t n, real_1d_array &r)$/;"	f	namespace:alglib
convr1dinv	lib/alglib/fasttransforms.cpp	/^void convr1dinv(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
convr1dinv	lib/alglib/fasttransforms.cpp	/^void convr1dinv(const real_1d_array &a, const ae_int_t m, const real_1d_array &b, const ae_int_t n, real_1d_array &r)$/;"	f	namespace:alglib
convr1dx	lib/alglib/fasttransforms.cpp	/^void convr1dx(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
coordinateShift_	core/vision/CameraMatrix.h	/^    Eigen::Matrix3f coordinateShift_;$/;"	m	class:CameraMatrix
copy	build/include/tool/annotations/Annotation.cpp	/^Annotation* Annotation::copy() {$/;"	f	class:Annotation
copy	build/include/tool/annotations/EllipseSelection.h	/^        virtual Selection* copy() {$/;"	f	class:EllipseSelection
copy	build/include/tool/annotations/PolygonSelection.h	/^        virtual Selection* copy() {$/;"	f	class:PolygonSelection
copy	build/include/tool/annotations/RectangleSelection.h	/^        virtual Selection* copy() {$/;"	f	class:RectangleSelection
copy	core/python/state_machine.py	/^import copy$/;"	i
copy	core/python/util.py	/^import time, math, copy$/;"	i
copy	tools/UTNaoTool/annotations/Annotation.cpp	/^Annotation* Annotation::copy() {$/;"	f	class:Annotation
copy	tools/UTNaoTool/annotations/EllipseSelection.h	/^        virtual Selection* copy() {$/;"	f	class:EllipseSelection
copy	tools/UTNaoTool/annotations/PolygonSelection.h	/^        virtual Selection* copy() {$/;"	f	class:PolygonSelection
copy	tools/UTNaoTool/annotations/RectangleSelection.h	/^        virtual Selection* copy() {$/;"	f	class:RectangleSelection
copyConstructorString	build/luaswig/generateSwig.py	/^copyConstructorString = '%%feature("copyctor","%s");'$/;"	v
copyDirectory	install/common.py	/^def copyDirectory(ip,path,dest,root=False):$/;"	f
copyFile	install/common.py	/^copyFile = copyFiles$/;"	v
copyFile	install/copy_wpa.py	/^def copyFile(ip,filename,dest=''):$/;"	f
copyFile	install/fix_autoload.py	/^from setup_robotv4 import runRemoteCommand, ask, makeTempDir, removeTempDir, copyFile$/;"	i
copyFileAndMove	install/copy_wpa.py	/^def copyFileAndMove(ip,filename,dest):$/;"	f
copyFiles	bin/copy_robot	/^def copyFiles(ip,sourcePath,destPath,extension=None):$/;"	f
copyFiles	build/copy_robot	/^def copyFiles(ip,sourcePath,destPath,extension=None):$/;"	f
copyFiles	install/common.py	/^def copyFiles(ip,files,dest='',root=False):$/;"	f
copyFromImageCapture	core/memory/CameraBlock.h	/^  void copyFromImageCapture(CameraBlock *raw) {$/;"	f	struct:CameraBlock
copyLogs	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::copyLogs() {$/;"	f	class:TeamConfigWindow
copyLogs	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::copyLogs() {$/;"	f	class:TeamConfigWindow
copyParams	build/include/tool/CameraWindow.cpp	/^void CameraWindow::copyParams(bool readParams){$/;"	f	class:CameraWindow
copyParams	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::copyParams(bool readParams){$/;"	f	class:CameraWindow
copyPrevValues	core/memory/SensorBlock.h	/^  void copyPrevValues() { for(int i = 0; i < NUM_SENSORS; i++) prevValues_[i] = values_[i]; }$/;"	f	struct:SensorBlock
copyReadParams	build/include/tool/CameraWindow.cpp	/^void CameraWindow::copyReadParams() {$/;"	f	class:CameraWindow
copyReadParams	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::copyReadParams() {$/;"	f	class:CameraWindow
copyRobot	install/setup_robot	/^def copyRobot(ip,robotID,geode=False):$/;"	f
copySentParams	build/include/tool/CameraWindow.cpp	/^void CameraWindow::copySentParams(){$/;"	f	class:CameraWindow
copySentParams	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::copySentParams(){$/;"	f	class:CameraWindow
copyToCppArray	core/python/util.py	/^def copyToCppArray(dest=None,src=None,method=None):$/;"	f
copyToImageCapture	core/memory/CameraBlock.h	/^  void copyToImageCapture(CameraBlock *raw) {$/;"	f	struct:CameraBlock
copy_block	lib/zlib/trees.c	/^local void copy_block(s, buf, len, header)$/;"	f
copy_constructors	build/pythonswig/generateSwig.py	/^copy_constructors = ['KickStrategy', 'RoleStrategy']$/;"	v
copy_python_core	install/install_python	/^copy_python_core() {$/;"	f
copyandtranspose	lib/alglib/alglibinternal.cpp	/^void copyandtranspose(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
copymatrix	lib/alglib/alglibinternal.cpp	/^void copymatrix(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
core	build/include/tool/UTMainWnd.h	/^  static VisionCore* core() { return instance_->visionCore_; }$/;"	f	class:UTMainWnd
core	build/include/tool/simulation/LocalizationSimulation.h	/^  VisionCore* core;$/;"	m	struct:LocSimAgent
core	build/include/tool/simulation/SimulatedPlayer.h	/^  VisionCore* core;$/;"	m	class:SimulatedPlayer
core	core/python/UTdebug.py	/^import core$/;"	i
core	core/python/behaviors/Distance.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
core	core/python/behaviors/Movement.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
core	core/python/behaviors/custom_kick.py	/^import memory, pose, commands, cfgstiff, core$/;"	i
core	core/python/behaviors/head_tracking.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
core	core/python/behaviors/keeper.py	/^import core, memory$/;"	i
core	core/python/behaviors/keeper_2.py	/^import core, memory$/;"	i
core	core/python/behaviors/keeper_3.py	/^import core, memory$/;"	i
core	core/python/behaviors/pid_distance_angle.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
core	core/python/behaviors/walk_to_center.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
core	core/python/behaviors/walk_to_center_2.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
core	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
core	core/python/cfglocalization.py	/^import core$/;"	i
core	core/python/cfgpose.py	/^import core$/;"	i
core	core/python/cfgstiff.py	/^import core$/;"	i
core	core/python/cfgwalk.py	/^import core$/;"	i
core	core/python/commands.py	/^import core$/;"	i
core	core/python/init.py	/^import core$/;"	i
core	core/python/lights.py	/^import core$/;"	i
core	core/python/mem_objects.py	/^import core$/;"	i
core	core/python/memory.py	/^import core, sys$/;"	i
core	core/python/pose.py	/^import core$/;"	i
core	core/python/primary_bvr.py	/^import core$/;"	i
core	core/python/task.py	/^import util, UTdebug, core$/;"	i
core	core/python/util.py	/^import core, mem_objects$/;"	i
core	interfaces/shared_motion/main.cpp	/^MotionCore *core = NULL;$/;"	v
core	interfaces/shared_vision/main.cpp	/^VisionCore *core = NULL;$/;"	v
core	tools/UTNaoTool/UTMainWnd.h	/^  static VisionCore* core() { return instance_->visionCore_; }$/;"	f	class:UTMainWnd
core	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  VisionCore* core;$/;"	m	struct:LocSimAgent
core	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  VisionCore* core;$/;"	m	class:SimulatedPlayer
coreAvailable_	build/include/tool/UTMainWnd.h	/^  bool coreAvailable_;$/;"	m	class:UTMainWnd
coreAvailable_	tools/UTNaoTool/UTMainWnd.h	/^  bool coreAvailable_;$/;"	m	class:UTMainWnd
coreBehaviors	build/include/tool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
coreBehaviors	tools/UTNaoTool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
core_	build/include/tool/AnalysisWidget.h	/^        VisionCore* core_;$/;"	m	class:AnalysisWidget
core_	build/include/tool/MotionSimulation.h	/^  MotionCore* core_;$/;"	m	class:MotionSimulation
core_	build/include/tool/VisionWindow.h	/^  VisionCore *core_;$/;"	m	class:VisionWindow
core_	core/InterpreterModule.h	/^    VisionCore* core_;$/;"	m	class:InterpreterModule
core_	core/communications/CommunicationModule.h	/^  VisionCore *core_;$/;"	m	class:CommunicationModule
core_	tools/UTNaoTool/AnalysisWidget.h	/^        VisionCore* core_;$/;"	m	class:AnalysisWidget
core_	tools/UTNaoTool/MotionSimulation.h	/^  MotionCore* core_;$/;"	m	class:MotionSimulation
core_	tools/UTNaoTool/VisionWindow.h	/^  VisionCore *core_;$/;"	m	class:VisionWindow
core_type_	core/memory/Memory.h	/^  CoreType core_type_;$/;"	m	class:Memory
cornerAngle	core/memory/BehaviorParamBlock.h	/^  float cornerAngle;$/;"	m	struct:CornerKickStrategy
cornerStrategy	core/memory/BehaviorParamBlock.h	/^  CornerKickStrategy cornerStrategy;$/;"	m	struct:BehaviorParamBlock
cornerelli	tools/behaviorSim/cma.py	/^    def cornerelli(self, x):$/;"	m	class:FitnessFunctions
cornerellirot	tools/behaviorSim/cma.py	/^    def cornerellirot(self, x):$/;"	m	class:FitnessFunctions
corners	build/include/tool/calibration/JointCalibrator.h	/^    int corners;$/;"	m	class:JCSettings
corners	build/include/tool/calibration/JointDataset.h	/^    std::vector<Eigen::Vector2f> corners;$/;"	m	class:JointMeasurement
corners	tools/UTNaoTool/calibration/JointCalibrator.h	/^    int corners;$/;"	m	class:JCSettings
corners	tools/UTNaoTool/calibration/JointDataset.h	/^    std::vector<Eigen::Vector2f> corners;$/;"	m	class:JointMeasurement
cornersphere	tools/behaviorSim/cma.py	/^    def cornersphere(self, x):$/;"	m	class:FitnessFunctions
coronalBalanceAdjustment	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float coronalBalanceAdjustment;$/;"	m	class:Walk2014Generator
coronal_prior_mean	core/memory/WalkParamBlock.h	/^  float coronal_prior_mean;$/;"	m	struct:WalkParamBlock
coronal_prior_stddev	core/memory/WalkParamBlock.h	/^  float coronal_prior_stddev;$/;"	m	struct:WalkParamBlock
corrNormal	interfaces/sim_spark/Random.h	/^   cartesianCoord corrNormal( float r,              \/\/ Correlated Normal$/;"	f	class:Random
corrUniform	interfaces/sim_spark/Random.h	/^   cartesianCoord corrUniform( float r,        \/\/ Correlated Uniform$/;"	f	class:Random
corrc1d	lib/alglib/fasttransforms.cpp	/^void corrc1d(\/* Complex *\/ ae_vector* signal,$/;"	f	namespace:alglib_impl
corrc1d	lib/alglib/fasttransforms.cpp	/^void corrc1d(const complex_1d_array &signal, const ae_int_t n, const complex_1d_array &pattern, const ae_int_t m, complex_1d_array &r)$/;"	f	namespace:alglib
corrc1dcircular	lib/alglib/fasttransforms.cpp	/^void corrc1dcircular(\/* Complex *\/ ae_vector* signal,$/;"	f	namespace:alglib_impl
corrc1dcircular	lib/alglib/fasttransforms.cpp	/^void corrc1dcircular(const complex_1d_array &signal, const ae_int_t m, const complex_1d_array &pattern, const ae_int_t n, complex_1d_array &c)$/;"	f	namespace:alglib
correctPercent	core/vision/structures/RobotCandidate.h	/^  float jerseyColorPercent, greenWhitePercent, whitePercent, correctPercent;$/;"	m	struct:RobotCandidate
correctPixelRatio	core/vision/structures/Blob.h	/^  float correctPixelRatio;$/;"	m	struct:Blob
correctstack	lib/lua/src/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
correlationtests_spearmantail	lib/alglib/statistics.cpp	/^static double correlationtests_spearmantail(double t,$/;"	f	namespace:alglib_impl
correlationtests_spearmantail5	lib/alglib/statistics.cpp	/^static double correlationtests_spearmantail5(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
correlationtests_spearmantail6	lib/alglib/statistics.cpp	/^static double correlationtests_spearmantail6(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
correlationtests_spearmantail7	lib/alglib/statistics.cpp	/^static double correlationtests_spearmantail7(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
correlationtests_spearmantail8	lib/alglib/statistics.cpp	/^static double correlationtests_spearmantail8(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
correlationtests_spearmantail9	lib/alglib/statistics.cpp	/^static double correlationtests_spearmantail9(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
corrr1d	lib/alglib/fasttransforms.cpp	/^void corrr1d(\/* Real    *\/ ae_vector* signal,$/;"	f	namespace:alglib_impl
corrr1d	lib/alglib/fasttransforms.cpp	/^void corrr1d(const real_1d_array &signal, const ae_int_t n, const real_1d_array &pattern, const ae_int_t m, real_1d_array &r)$/;"	f	namespace:alglib
corrr1dcircular	lib/alglib/fasttransforms.cpp	/^void corrr1dcircular(\/* Real    *\/ ae_vector* signal,$/;"	f	namespace:alglib_impl
corrr1dcircular	lib/alglib/fasttransforms.cpp	/^void corrr1dcircular(const real_1d_array &signal, const ae_int_t m, const real_1d_array &pattern, const ae_int_t n, real_1d_array &c)$/;"	f	namespace:alglib
cos	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> cos (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
cos	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> cos (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
cos	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
cosec	core/math/Common.h	/^template <class V> inline V cosec(const V& a) {return 1\/sinf(a);}$/;"	f
cosine	interfaces/sim_spark/Random.h	/^   float cosine( float xMin = 0., float xMax = 1. )   \/\/ Cosine$/;"	f	class:Random
costatus	lib/lua/src/lbaselib.c	/^static int costatus (lua_State *L, lua_State *co) {$/;"	f	file:
count_	core/math/Polygon.h	/^        int *xcoords_, *ycoords_, count_;$/;"	m	class:Polygon
countint	lib/lua/src/ltable.c	/^static int countint (const TValue *key, int *nums) {$/;"	f	file:
cov2	lib/alglib/statistics.cpp	/^double cov2(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
cov2	lib/alglib/statistics.cpp	/^double cov2(const real_1d_array &x, const real_1d_array &y)$/;"	f	namespace:alglib
cov2	lib/alglib/statistics.cpp	/^double cov2(const real_1d_array &x, const real_1d_array &y, const ae_int_t n)$/;"	f	namespace:alglib
covSqrt	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  inline StateCovarianceMatrix covSqrt(StateCovarianceMatrix mat)$/;"	f	class:UnscentedKalmanFilter
covariance	core/memory/LocalizationBlock.h	/^    Eigen::Matrix<float, STATE_SIZE, STATE_SIZE, Eigen::DontAlign> covariance;$/;"	m	struct:LocalizationBlock
covm	lib/alglib/statistics.cpp	/^void covm(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
covm	lib/alglib/statistics.cpp	/^void covm(const real_2d_array &x, const ae_int_t n, const ae_int_t m, real_2d_array &c)$/;"	f	namespace:alglib
covm	lib/alglib/statistics.cpp	/^void covm(const real_2d_array &x, real_2d_array &c)$/;"	f	namespace:alglib
covm2	lib/alglib/statistics.cpp	/^void covm2(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
covm2	lib/alglib/statistics.cpp	/^void covm2(const real_2d_array &x, const real_2d_array &y, const ae_int_t n, const ae_int_t m1, const ae_int_t m2, real_2d_array &c)$/;"	f	namespace:alglib
covm2	lib/alglib/statistics.cpp	/^void covm2(const real_2d_array &x, const real_2d_array &y, real_2d_array &c)$/;"	f	namespace:alglib
cp_	core/common/PIDController.h	/^  float cp_;$/;"	m	class:PIDController
cr	vision_testing/src/vision_testing.cpp	/^  unsigned char cr;$/;"	m	class:YCrCb	file:
crabPose	core/python/cfgpose.py	/^crabPose = dict()$/;"	v
crc32	lib/zlib/crc32.c	/^unsigned long ZEXPORT crc32(crc, buf, len)$/;"	f
crc32	lib/zlib/zconf.h	/^#  define crc32 /;"	d
crc32_big	lib/zlib/crc32.c	/^local unsigned long crc32_big(crc, buf, len)$/;"	f
crc32_combine	lib/zlib/crc32.c	/^uLong ZEXPORT crc32_combine(crc1, crc2, len2)$/;"	f
crc32_combine	lib/zlib/zconf.h	/^#  define crc32_combine /;"	d
crc32_combine	lib/zlib/zlib.h	/^#  define crc32_combine /;"	d
crc32_combine64	lib/zlib/crc32.c	/^uLong ZEXPORT crc32_combine64(crc1, crc2, len2)$/;"	f
crc32_combine64	lib/zlib/zconf.h	/^#  define crc32_combine64 /;"	d
crc32_combine_	lib/zlib/crc32.c	/^local uLong crc32_combine_(crc1, crc2, len2)$/;"	f
crc32_little	lib/zlib/crc32.c	/^local unsigned long crc32_little(crc, buf, len)$/;"	f
crc_table	lib/zlib/crc32.c	/^local unsigned long FAR crc_table[TBLS][256];$/;"	v
crc_table	lib/zlib/crc32.h	/^local const unsigned long FAR crc_table[TBLS][256] =$/;"	v
crc_table_empty	lib/zlib/crc32.c	/^local volatile int crc_table_empty = 1;$/;"	v
create	core/memory/MemoryCache.cpp	/^MemoryCache MemoryCache::create(int team, int player) {$/;"	f	class:MemoryCache
createCameraToFootTransform	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::createCameraToFootTransform(Chain foot, bool top) {$/;"	f	class:Kinematics
createCameraToWorldTransform	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::createCameraToWorldTransform(Chain foot, bool top) {$/;"	f	class:Kinematics
createDir	install/install_naoqi	/^def createDir(path):$/;"	f
createFootToWorldTransform	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::createFootToWorldTransform(Chain foot, bool top) {$/;"	f	class:Kinematics
createKickSplines	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::createKickSplines() {$/;"	f	class:MotionGLWidget
createKickSplines	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::createKickSplines() {$/;"	f	class:MotionGLWidget
createLock	core/memory/Lock.cpp	/^void Lock::createLock() {$/;"	f	class:Lock
createNeckToFootTransform	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::createNeckToFootTransform(Chain foot) {$/;"	f	class:Kinematics
createNeckToWorldTransform	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::createNeckToWorldTransform(Chain foot) {$/;"	f	class:Kinematics
createPF	core/localization/LocalizationModule.cpp	/^void LocalizationModule::createPF()$/;"	f	class:LocalizationModule
createParentItem	build/include/tool/KeyframeWidget.cpp	/^QListWidgetItem* KeyframeItem::createParentItem(int row) {$/;"	f	class:KeyframeItem
createParentItem	tools/UTNaoTool/KeyframeWidget.cpp	/^QListWidgetItem* KeyframeItem::createParentItem(int row) {$/;"	f	class:KeyframeItem
createSimpleConfig	bin/copy_robot	/^def createSimpleConfig(filename, id, team, role):$/;"	f
createSimpleConfig	build/copy_robot	/^def createSimpleConfig(filename, id, team, role):$/;"	f
createSpline	core/math/Spline3D.h	/^  void createSpline(alglib::real_1d_array *arr, alglib::spline1dinterpolant *spline) {$/;"	f	class:Spline3D
createSplines	core/math/Spline3D.h	/^  void createSplines() {$/;"	f	class:Spline3D
createStateTask	core/python/primary_bvr.py	/^def createStateTask(state):$/;"	f
createWorldToFOVTransform	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::createWorldToFOVTransform($/;"	f	class:Kinematics
createmeta	lib/lua/src/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	lib/lua/src/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createstdfile	lib/lua/src/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, int k, const char *fname) {$/;"	f	file:
crop	build/include/tool/simulation/SimulatedPlayer.cpp	/^float SimulatedPlayer::crop(float val, float min, float max){$/;"	f	class:SimulatedPlayer
crop	core/math/Geometry.cpp	/^LineSegment LineSegment::crop(LineSegment bounds) {$/;"	f	class:LineSegment
crop	core/math/Geometry.cpp	/^float crop ( float val, float minval, float maxval){$/;"	f
crop	core/motion/rswalk2014/utils/basic_maths.hpp	/^inline static T crop(const T &x, const T &minimum, const T &maximum)$/;"	f
crop	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^float SimulatedPlayer::crop(float val, float min, float max){$/;"	f	class:SimulatedPlayer
cropCumulative	core/common/PIDController.cpp	/^void PIDController::cropCumulative(float max) {$/;"	f	class:PIDController
cropVals	core/math/Spline3D.h	/^  void cropVals(int dim, float minVal, float maxVal) {$/;"	f	class:Spline3D
cropped_align_x_	core/memory/KickModuleBlock.h	/^  float cropped_align_x_;$/;"	m	struct:KickModuleBlock
cropped_align_y_	core/memory/KickModuleBlock.h	/^  float cropped_align_y_;$/;"	m	struct:KickModuleBlock
cropped_kick2_x_	core/memory/KickModuleBlock.h	/^  float cropped_kick2_x_;$/;"	m	struct:KickModuleBlock
cropped_kick2_y_	core/memory/KickModuleBlock.h	/^  float cropped_kick2_y_;$/;"	m	struct:KickModuleBlock
cross	core/motion/GetupModule.cpp	/^void GetupModule::cross() {$/;"	f	class:GetupModule
cross	tools/behaviorSim/cma.py	/^from __future__ import print_function  # for cross-checking, available from python 2.6$/;"	i
csqr	lib/alglib/ap.cpp	/^alglib::complex alglib::csqr(const alglib::complex &z)$/;"	f	class:alglib
ct	lib/alglib/optimization.h	/^    ae_vector ct;$/;"	m	struct:alglib_impl::__anon79
ct_data	lib/zlib/deflate.h	/^} FAR ct_data;$/;"	t	typeref:struct:ct_data_s
ct_data_s	lib/zlib/deflate.h	/^typedef struct ct_data_s {$/;"	s
ctarget_	build/include/tool/simulation/RobotMovementSimulator.h	/^    Point2D ctarget_;$/;"	m	class:RobotMovementSimulator
ctarget_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    Point2D ctarget_;$/;"	m	class:RobotMovementSimulator
cumulative_error_	core/common/PIDController.h	/^  float cumulative_error_; \/\/ corr. ci_$/;"	m	class:PIDController
cumulative_error_	core/memory/SimEffectorBlock.h	/^  double cumulative_error_;\/\/ corr. k2$/;"	m	struct:SimEffector
curalgo	lib/alglib/optimization.h	/^    ae_int_t curalgo;$/;"	m	struct:alglib_impl::__anon75
curboxmax	lib/alglib/alglibmisc.h	/^    ae_vector curboxmax;$/;"	m	struct:alglib_impl::__anon25
curboxmin	lib/alglib/alglibmisc.h	/^    ae_vector curboxmin;$/;"	m	struct:alglib_impl::__anon25
curdist	lib/alglib/alglibmisc.h	/^    double curdist;$/;"	m	struct:alglib_impl::__anon25
currFrame	build/include/tool/LogWindow.h	/^    int currFrame;$/;"	m	class:LogWindow
currFrame	tools/UTNaoTool/LogWindow.h	/^    int currFrame;$/;"	m	class:LogWindow
currIsNewline	lib/lua/src/llex.c	/^#define currIsNewline(/;"	d	file:
currKickChoice	build/include/tool/UTOpenGL/GLDrawer.h	/^    int currKickChoice;$/;"	m	class:GLDrawer
currKickChoice	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    int currKickChoice;$/;"	m	class:GLDrawer
currMotion	core/motion/SpecialMotionModule.h	/^  Motion currMotion;$/;"	m	class:SpecialMotionModule
curr_func	lib/lua/src/lstate.h	/^#define curr_func(/;"	d
current	core/common/RingBuffer.h	/^    int current;$/;"	m	class:RingBuffer
current	core/common/RingBufferWithSum.h	/^    int current;$/;"	m	class:RingBufferWithSum
current	lib/lua/src/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState
currentBigImageCam_	build/include/tool/VisionWindow.h	/^  int currentBigImageCam_;$/;"	m	class:VisionWindow
currentBigImageCam_	tools/UTNaoTool/VisionWindow.h	/^  int currentBigImageCam_;$/;"	m	class:VisionWindow
currentBigImageType_	build/include/tool/VisionWindow.h	/^  int currentBigImageType_;$/;"	m	class:VisionWindow
currentBigImageType_	tools/UTNaoTool/VisionWindow.h	/^  int currentBigImageType_;$/;"	m	class:VisionWindow
currentBuf	core/imageCapture/NaoCamera.h	/^  struct v4l2_buffer* currentBuf; \/**< The last dequeued frame buffer. *\/$/;"	m	class:NaoCamera	typeref:struct:NaoCamera::v4l2_buffer
currentCamera_	build/include/tool/AnalysisWidget.h	/^        Camera::Type currentCamera_;$/;"	m	class:AnalysisWidget
currentCamera_	build/include/tool/AnnotationWidget.h	/^        Camera::Type selectedCamera_, currentCamera_;$/;"	m	class:AnnotationWidget
currentCamera_	build/include/tool/ClassificationWidget.h	/^        Camera::Type currentCamera_;$/;"	m	class:ClassificationWidget
currentCamera_	build/include/tool/ExtrinsicCalibrationWidget.h	/^    Camera::Type currentCamera_;$/;"	m	class:ExtrinsicCalibrationWidget
currentCamera_	build/include/tool/IntrinsicCalibrationWidget.h	/^    Camera::Type currentCamera_;$/;"	m	class:IntrinsicCalibrationWidget
currentCamera_	tools/UTNaoTool/AnalysisWidget.h	/^        Camera::Type currentCamera_;$/;"	m	class:AnalysisWidget
currentCamera_	tools/UTNaoTool/AnnotationWidget.h	/^        Camera::Type selectedCamera_, currentCamera_;$/;"	m	class:AnnotationWidget
currentCamera_	tools/UTNaoTool/ClassificationWidget.h	/^        Camera::Type currentCamera_;$/;"	m	class:ClassificationWidget
currentCamera_	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^    Camera::Type currentCamera_;$/;"	m	class:ExtrinsicCalibrationWidget
currentCamera_	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^    Camera::Type currentCamera_;$/;"	m	class:IntrinsicCalibrationWidget
currentColor	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      Color currentColor;$/;"	m	class:color_classifier::ClassificationWindow
currentFrame	core/python/util.py	/^def currentFrame():$/;"	f
currentFrame_	build/include/tool/AnalysisWidget.h	/^        int currentFrame_;$/;"	m	class:AnalysisWidget
currentFrame_	build/include/tool/AnnotationWidget.h	/^        int maxFrames_, currentFrame_;$/;"	m	class:AnnotationWidget
currentFrame_	build/include/tool/ExtrinsicCalibrationWidget.h	/^    int currentFrame_;$/;"	m	class:ExtrinsicCalibrationWidget
currentFrame_	build/include/tool/IntrinsicCalibrationWidget.h	/^    int currentFrame_;$/;"	m	class:IntrinsicCalibrationWidget
currentFrame_	build/include/tool/KeyframeWidget.h	/^    int currentKeyframe_, currentFrame_;$/;"	m	class:KeyframeWidget
currentFrame_	build/include/tool/annotations/Selection.h	/^        int currentFrame_;$/;"	m	class:Selection
currentFrame_	tools/UTNaoTool/AnalysisWidget.h	/^        int currentFrame_;$/;"	m	class:AnalysisWidget
currentFrame_	tools/UTNaoTool/AnnotationWidget.h	/^        int maxFrames_, currentFrame_;$/;"	m	class:AnnotationWidget
currentFrame_	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^    int currentFrame_;$/;"	m	class:ExtrinsicCalibrationWidget
currentFrame_	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^    int currentFrame_;$/;"	m	class:IntrinsicCalibrationWidget
currentFrame_	tools/UTNaoTool/KeyframeWidget.h	/^    int currentKeyframe_, currentFrame_;$/;"	m	class:KeyframeWidget
currentFrame_	tools/UTNaoTool/annotations/Selection.h	/^        int currentFrame_;$/;"	m	class:Selection
currentIP	install/copy_wpa.py	/^  currentIP = args[0]$/;"	v
currentKeyframe_	build/include/tool/KeyframeWidget.h	/^    int currentKeyframe_, currentFrame_;$/;"	m	class:KeyframeWidget
currentKeyframe_	tools/UTNaoTool/KeyframeWidget.h	/^    int currentKeyframe_, currentFrame_;$/;"	m	class:KeyframeWidget
currentMode	build/include/tool/MotionGLWidget.h	/^  int currentMode;$/;"	m	class:MotionGLWidget
currentMode	tools/UTNaoTool/MotionGLWidget.h	/^  int currentMode;$/;"	m	class:MotionGLWidget
currentParameters	core/math/GaussNewtonOptimizer.h	/^  std::vector<float> currentParameters; \/**< The vector (Nx1-matrix) containing the current parameters. *\/$/;"	m	class:GaussNewtonOptimizer
currentParams	core/sensor/offline/genInertialFilterMatrices.py	/^  currentParams = dict(params)$/;"	v
currentPoint	build/include/tool/simulation/SimulationPath.h	/^    const Point2D& currentPoint() { return points_.front(); }$/;"	f	class:SimulationPath
currentPoint	tools/UTNaoTool/simulation/SimulationPath.h	/^    const Point2D& currentPoint() { return points_.front(); }$/;"	f	class:SimulationPath
currentPositionConfidence	core/communications/SPLStandardMessage.h	/^  int8_t currentPositionConfidence;$/;"	m	struct:SPLStandardMessage
currentSideConfidence	core/communications/SPLStandardMessage.h	/^  int8_t currentSideConfidence;$/;"	m	struct:SPLStandardMessage
currentSim	build/include/tool/UTOpenGL/GLDrawer.h	/^    int currentSim;$/;"	m	class:GLDrawer
currentSim	build/include/tool/simulation/BehaviorSimulation.h	/^    int currentSim;$/;"	m	class:BehaviorSimulation
currentSim	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    int currentSim;$/;"	m	class:GLDrawer
currentSim	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    int currentSim;$/;"	m	class:BehaviorSimulation
currentState	core/python/primary_bvr.py	/^currentState = None$/;"	v
currentStateID	core/common/StateMachine.cpp	/^int StateMachine::currentStateID() {$/;"	f	class:StateMachine
currentStateName	core/common/StateMachine.cpp	/^std::string StateMachine::currentStateName() {$/;"	f	class:StateMachine
currentTask	core/python/primary_bvr.py	/^currentTask = None$/;"	v
currentU_	build/include/tool/VisionWindow.h	/^  int currentU_;$/;"	m	class:VisionWindow
currentU_	tools/UTNaoTool/VisionWindow.h	/^  int currentU_;$/;"	m	class:VisionWindow
currentV_	build/include/tool/VisionWindow.h	/^  int currentV_;$/;"	m	class:VisionWindow
currentV_	tools/UTNaoTool/VisionWindow.h	/^  int currentV_;$/;"	m	class:VisionWindow
currentValues	core/math/GaussNewtonOptimizer.h	/^  Vector currentValues; \/**< The vector (Nx1-matrix) containing the current error values for all measurements. *\/$/;"	m	class:GaussNewtonOptimizer
currentX_	build/include/tool/ImageWidget.h	/^    int startX_, startY_, currentX_, currentY_;$/;"	m	class:ImageWidget
currentX_	tools/UTNaoTool/ImageWidget.h	/^    int startX_, startY_, currentX_, currentY_;$/;"	m	class:ImageWidget
currentY_	build/include/tool/ImageWidget.h	/^    int startX_, startY_, currentX_, currentY_;$/;"	m	class:ImageWidget
currentY_	build/include/tool/VisionWindow.h	/^  int currentY_;$/;"	m	class:VisionWindow
currentY_	tools/UTNaoTool/ImageWidget.h	/^    int startX_, startY_, currentX_, currentY_;$/;"	m	class:ImageWidget
currentY_	tools/UTNaoTool/VisionWindow.h	/^  int currentY_;$/;"	m	class:VisionWindow
current_	build/include/tool/TeamPacketWidget.h	/^    RobotSelection current_;$/;"	m	class:TeamPacketWidget
current_	tools/UTNaoTool/TeamPacketWidget.h	/^    RobotSelection current_;$/;"	m	class:TeamPacketWidget
current_angle_	core/memory/SimEffectorBlock.h	/^  double current_angle_;$/;"	m	struct:SimEffector
current_ankle_	core/memory/KickEngineBlock.h	/^  Pose3D current_ankle_; \/\/ current ankle x,y,x for IK kicks - updated in each visit to stand, one_leg, kick, and middle$/;"	m	struct:KickEngineBlock
current_control_	core/memory/WalkEngineBlock.h	/^  Vector2<float> current_control_;$/;"	m	struct:WalkEngineBlock
current_error_	core/common/PIDController.h	/^  float current_error_; \/\/ corr. cp_$/;"	m	class:PIDController
current_error_	core/memory/SimEffectorBlock.h	/^  double current_error_;\/\/ corr. k1$/;"	m	struct:SimEffector
current_generator	core/motion/rswalk2014/DistributedGenerator.hpp	/^      ActionCommand::Body::ActionType current_generator;$/;"	m	class:DistributedGenerator
current_index_	build/include/tool/UTMainWnd.h	/^  int current_index_;$/;"	m	class:UTMainWnd
current_index_	tools/UTNaoTool/UTMainWnd.h	/^  int current_index_;$/;"	m	class:UTMainWnd
current_state	core/python/behaviors/win.py	/^current_state = AttackingStates.start$/;"	v
current_state_	core/common/StateMachine.h	/^  std::vector<StatePair>::iterator current_state_;$/;"	m	class:StateMachine
current_state_	core/memory/WalkEngineBlock.h	/^  WalkState current_state_;$/;"	m	struct:WalkEngineBlock
current_stiffness_	core/memory/WalkEngineBlock.h	/^  float current_stiffness_;$/;"	m	struct:WalkEngineBlock
current_time	core/motion/rswalk2014/ActionGenerator.hpp	/^      int current_time;$/;"	m	class:ActionGenerator
currentfrequency	core/motion/rswalk2014/BodyModel.hpp	/^      float currentfrequency;$/;"	m	class:BodyModel
currentline	lib/lua/src/ldebug.c	/^static int currentline (lua_State *L, CallInfo *ci) {$/;"	f	file:
currentline	lib/lua/src/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug
currentpc	lib/lua/src/ldebug.c	/^static int currentpc (lua_State *L, CallInfo *ci) {$/;"	f	file:
currentwhite	lib/lua/src/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State
curstpmax	lib/alglib/optimization.h	/^    double curstpmax;$/;"	m	struct:alglib_impl::__anon77
cvavgerror	lib/alglib/dataanalysis.h	/^    double &cvavgerror;$/;"	m	class:alglib::lrreport
cvavgerror	lib/alglib/dataanalysis.h	/^    double cvavgerror;$/;"	m	struct:alglib_impl::__anon43
cvavgrelerror	lib/alglib/dataanalysis.h	/^    double &cvavgrelerror;$/;"	m	class:alglib::lrreport
cvavgrelerror	lib/alglib/dataanalysis.h	/^    double cvavgrelerror;$/;"	m	struct:alglib_impl::__anon43
cvdefects	lib/alglib/dataanalysis.h	/^    ae_vector cvdefects;$/;"	m	struct:alglib_impl::__anon43
cvdefects	lib/alglib/dataanalysis.h	/^    integer_1d_array cvdefects;$/;"	m	class:alglib::lrreport
cvreport	lib/alglib/dataanalysis.h	/^} cvreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon38
cvrmserror	lib/alglib/dataanalysis.h	/^    double &cvrmserror;$/;"	m	class:alglib::lrreport
cvrmserror	lib/alglib/dataanalysis.h	/^    double cvrmserror;$/;"	m	struct:alglib_impl::__anon43
cx	core/vision/structures/FocusArea.h	/^  int width, height, cx, cy, area;$/;"	m	struct:FocusArea
cx	lib/alglib/solvers.h	/^    ae_matrix cx;$/;"	m	struct:alglib_impl::__anon82
cx	lib/alglib/solvers.h	/^    real_2d_array cx;$/;"	m	class:alglib::densesolverlsreport
cx_	core/vision/CameraMatrix.h	/^    float fx_, fy_, scale_, cx_, cy_;$/;"	m	class:CameraMatrix
cy	core/vision/structures/FocusArea.h	/^  int width, height, cx, cy, area;$/;"	m	struct:FocusArea
cy_	core/vision/CameraMatrix.h	/^    float fx_, fy_, scale_, cx_, cy_;$/;"	m	class:CameraMatrix
d	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	T& d(const unsigned int i)$/;"	f	class:fadbad::FTypeName
d	install/fix_autoload.py	/^d = makeTempDir()$/;"	v
d	lib/alglib/interpolation.h	/^    ae_int_t d;$/;"	m	struct:alglib_impl::__anon56
d	lib/alglib/optimization.h	/^    ae_vector d;$/;"	m	struct:alglib_impl::__anon69
d	lib/alglib/optimization.h	/^    ae_vector d;$/;"	m	struct:alglib_impl::__anon75
d	lib/alglib/optimization.h	/^    ae_vector d;$/;"	m	struct:alglib_impl::__anon77
d11Bot	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float d11Bot = d1Bot * cos(a1Bot);$/;"	v	file:
d11Top	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float d11Top = d1Top * cos(a1Top);$/;"	v	file:
d1Bot	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float d1Bot = sqrt(pow(camera_out_bottom, 2) + pow(camera_up_bottom, 2));$/;"	v	file:
d1Top	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float d1Top = sqrt(pow(camera_out_top, 2) + pow(camera_up_top, 2));$/;"	v	file:
d2	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float d2 = trunk_length - Limbs::HipOffsetY;$/;"	v	file:
d3	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float d3 = Limbs::HipOffsetY * sqrt(2);$/;"	v	file:
dSquared	interfaces/sim_spark/Random.h	/^   struct dSquared :$/;"	s	class:Random
d_buf	lib/zlib/deflate.h	/^    ushf *d_buf;$/;"	m	struct:internal_state
d_code	lib/zlib/deflate.h	/^#define d_code(/;"	d
d_desc	lib/zlib/deflate.h	/^    struct tree_desc_s d_desc;               \/* desc. for distance tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::tree_desc_s
d_ee	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_ee,$/;"	e	enum:dir_t
d_ne	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_ne,$/;"	e	enum:dir_t
d_nee	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_nee,$/;"	e	enum:dir_t
d_nn	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_nn,$/;"	e	enum:dir_t
d_nne	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_nne,$/;"	e	enum:dir_t
d_nnw	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_nnw,$/;"	e	enum:dir_t
d_none	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_none$/;"	e	enum:dir_t
d_num	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_num,$/;"	e	enum:dir_t
d_nw	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_nw,$/;"	e	enum:dir_t
d_nww	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_nww,$/;"	e	enum:dir_t
d_se	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_se,$/;"	e	enum:dir_t
d_see	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_see,$/;"	e	enum:dir_t
d_ss	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_ss,$/;"	e	enum:dir_t
d_sse	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_sse,$/;"	e	enum:dir_t
d_ssw	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_ssw,$/;"	e	enum:dir_t
d_sw	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_sw,$/;"	e	enum:dir_t
d_sww	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_sww,$/;"	e	enum:dir_t
d_ww	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   d_ww,$/;"	e	enum:dir_t
dad	lib/zlib/deflate.h	/^        ush  dad;        \/* father node in Huffman tree *\/$/;"	m	union:ct_data_s::__anon134
damping	kalman_filters/src/ekf_test.cpp	/^double damping = 0.2;$/;"	v
data	core/common/ToolPacket.h	/^  char data[__TOOL_PACKET_DATA_LENGTH];$/;"	m	struct:ToolPacket
data	core/communications/SPLStandardMessage.h	/^  uint8_t data[SPL_STANDARD_MESSAGE_DATA_SIZE];$/;"	m	struct:SPLStandardMessage
data	core/imageCapture/i2c-dev.h	/^	union i2c_smbus_data *data;$/;"	m	struct:i2c_smbus_ioctl_data	typeref:union:i2c_smbus_ioctl_data::i2c_smbus_data
data	lib/alglib/ap.h	/^    ae_dyn_block data;$/;"	m	struct:alglib_impl::ae_matrix
data	lib/alglib/ap.h	/^    ae_dyn_block data;$/;"	m	struct:alglib_impl::ae_vector
data	lib/lua/src/ldump.c	/^ void* data;$/;"	m	struct:__anon85	file:
data	lib/lua/src/lzio.h	/^  void* data;			\/* additional data *\/$/;"	m	struct:Zio
data	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        const unsigned char *data() const { return owned() ? &m_data[0] : m_unownedData; }$/;"	f	class:YAML::Binary
data	lib/yaml-cpp/src/token.h	/^		int data;$/;"	m	struct:YAML::Token
data	tools/behaviorSim/cma.py	/^    def data(self):$/;"	m	class:BaseDataLogger
data	tools/behaviorSim/cma.py	/^    def data(self):$/;"	m	class:BaseDataLogger2
dataDirectory	build/include/tool/UTMainWnd.h	/^  static std::string dataDirectory() { return std::string(getenv("NAO_HOME")) + "\/data"; }$/;"	f	class:UTMainWnd
dataDirectory	tools/UTNaoTool/UTMainWnd.h	/^  static std::string dataDirectory() { return std::string(getenv("NAO_HOME")) + "\/data"; }$/;"	f	class:UTMainWnd
dataPath	build/include/tool/FilesWindow.h	/^    QString dataPath;$/;"	m	class:FilesWindow
dataPath	tools/UTNaoTool/FilesWindow.h	/^    QString dataPath;$/;"	m	class:FilesWindow
data_	core/communications/StreamingMessage.h	/^  unsigned char data_[MAX_STREAMING_MESSAGE_LEN];$/;"	m	class:StreamingMessage
data_	core/memory/GraphableBlock.h	/^  float data_[NUM_GRAPHABLE_DATA];$/;"	m	struct:GraphableBlock
data_	core/memory/SynchronizedBlock.h	/^  T *data_;$/;"	m	class:SynchronizedBlock
data_path_	core/memory/Memory.h	/^  std::string data_path_;$/;"	m	class:Memory
data_type	lib/zlib/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s
datafile_	build/include/tool/calibration/JointCalibrator.h	/^    std::string datafile_;$/;"	m	class:JointCalibrator
datafile_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    std::string datafile_;$/;"	m	class:JointCalibrator
datapath_	build/include/tool/ProcessExecutor.h	/^    QString basepath_, logpath_, datapath_;$/;"	m	class:ProcessExecutor
datapath_	tools/UTNaoTool/ProcessExecutor.h	/^    QString basepath_, logpath_, datapath_;$/;"	m	class:ProcessExecutor
datatype	lib/alglib/ap.h	/^    ae_datatype datatype;$/;"	m	struct:alglib_impl::ae_matrix
datatype	lib/alglib/ap.h	/^    ae_datatype datatype;$/;"	m	struct:alglib_impl::ae_vector
datatype	lib/alglib/ap.h	/^    ae_int64_t     datatype;$/;"	m	struct:alglib_impl::__anon33
datatype	lib/alglib/ap.h	/^    ae_int64_t     datatype;$/;"	m	struct:alglib_impl::__anon34
dawsonintegral	lib/alglib/specialfunctions.cpp	/^double dawsonintegral(const double x)$/;"	f	namespace:alglib
dawsonintegral	lib/alglib/specialfunctions.cpp	/^double dawsonintegral(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
db_debug	lib/lua/src/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_errorfb	lib/lua/src/ldblib.c	/^static int db_errorfb (lua_State *L) {$/;"	f	file:
db_getfenv	lib/lua/src/ldblib.c	/^static int db_getfenv (lua_State *L) {$/;"	f	file:
db_gethook	lib/lua/src/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	lib/lua/src/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	lib/lua/src/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	lib/lua/src/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	lib/lua/src/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	lib/lua/src/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_marker	lib/alglib/ap.h	/^    ae_dyn_block db_marker;$/;"	m	struct:alglib_impl::ae_frame
db_setfenv	lib/lua/src/ldblib.c	/^static int db_setfenv (lua_State *L) {$/;"	f	file:
db_sethook	lib/lua/src/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	lib/lua/src/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	lib/lua/src/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	lib/lua/src/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
dbest	lib/alglib/interpolation.h	/^    ae_int_t &dbest;$/;"	m	class:alglib::barycentricfitreport
dbest	lib/alglib/interpolation.h	/^    ae_int_t dbest;$/;"	m	struct:alglib_impl::__anon60
dblib	lib/lua/src/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
dcmWrap_	interfaces/nao/src/naointerface.h	/^    DCMWrapper* dcmWrap_;$/;"	m	class:naointerface
dcm_modes_	interfaces/nao/src/dcmwrapper.h	/^  std::vector<std::string> dcm_modes_;$/;"	m	class:DCMWrapper
dcm_postprocess_connection_	interfaces/nao/src/naointerface.h	/^    ProcessSignalConnection dcm_postprocess_connection_;$/;"	m	class:naointerface
dcm_preprocess_connection_	interfaces/nao/src/naointerface.h	/^    ProcessSignalConnection dcm_preprocess_connection_;$/;"	m	class:naointerface
dcm_proxy_	interfaces/nao/src/dcmwrapper.h	/^  boost::shared_ptr<AL::DCMProxy> dcm_proxy_;$/;"	m	class:DCMWrapper
deactivate	build/include/tool/KeyframeWidget.cpp	/^void KeyframeItem::deactivate() {$/;"	f	class:KeyframeItem
deactivate	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeItem::deactivate() {$/;"	f	class:KeyframeItem
deactivateCurrent	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::deactivateCurrent() {$/;"	f	class:KeyframeWidget
deactivateCurrent	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::deactivateCurrent() {$/;"	f	class:KeyframeWidget
deallocator	lib/alglib/ap.h	/^    void (*deallocator)(void*);$/;"	m	struct:alglib_impl::ae_dyn_block
debugLog	core/memory/TextLogger.h	/^#define debugLog(/;"	d
debugbestrcond	lib/alglib/interpolation.h	/^    double debugbestrcond;$/;"	m	struct:alglib_impl::__anon56
debugcounter	lib/alglib/alglibmisc.h	/^    ae_int_t debugcounter;$/;"	m	struct:alglib_impl::__anon25
debugdx	lib/alglib/optimization.h	/^    double &debugdx;$/;"	m	class:alglib::minbleicreport
debugdx	lib/alglib/optimization.h	/^    double debugdx;$/;"	m	struct:alglib_impl::__anon80
debugeqerr	lib/alglib/optimization.h	/^    double &debugeqerr;$/;"	m	class:alglib::minbleicreport
debugeqerr	lib/alglib/optimization.h	/^    double debugeqerr;$/;"	m	struct:alglib_impl::__anon80
debugff	lib/alglib/optimization.h	/^    double &debugff;$/;"	m	class:alglib::minbleicreport
debugff	lib/alglib/optimization.h	/^    double debugff;$/;"	m	struct:alglib_impl::__anon80
debugfs	lib/alglib/optimization.h	/^    double &debugfs;$/;"	m	class:alglib::minbleicreport
debugfs	lib/alglib/optimization.h	/^    double debugfs;$/;"	m	struct:alglib_impl::__anon80
debugrestartscount	lib/alglib/optimization.h	/^    ae_int_t debugrestartscount;$/;"	m	struct:alglib_impl::__anon75
debugrestartscount	lib/alglib/optimization.h	/^    ae_int_t debugrestartscount;$/;"	m	struct:alglib_impl::__anon77
debugsolverfailures	lib/alglib/interpolation.h	/^    ae_int_t debugsolverfailures;$/;"	m	struct:alglib_impl::__anon56
debugworstrcond	lib/alglib/interpolation.h	/^    double debugworstrcond;$/;"	m	struct:alglib_impl::__anon56
decayRate	core/common/ExponentialFilter.h	/^  float decayRate;$/;"	m	class:ExponentialFilter
decisionforest	lib/alglib/dataanalysis.cpp	/^decisionforest::decisionforest() : _decisionforest_owner() $/;"	f	class:alglib::decisionforest
decisionforest	lib/alglib/dataanalysis.cpp	/^decisionforest::decisionforest(const decisionforest &rhs):_decisionforest_owner(rhs) $/;"	f	class:alglib::decisionforest
decisionforest	lib/alglib/dataanalysis.h	/^class decisionforest : public _decisionforest_owner$/;"	c	namespace:alglib
decisionforest	lib/alglib/dataanalysis.h	/^} decisionforest;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon39
decode	interfaces/sim_spark/decode.h	/^  int decode(char value_in)$/;"	f	class:base64::Decoder
decode	interfaces/sim_spark/decode.h	/^  int decode(const char* code_in, const int length_in, char* plaintext_out)$/;"	f	class:base64::Decoder
decode	interfaces/sim_spark/decode.h	/^  int decode(const std::string& in, char* out, int out_len)$/;"	f	class:base64::Decoder
decode	interfaces/sim_spark/decode.h	/^  void decode(std::istream& istream_in, std::ostream& ostream_in)$/;"	f	class:base64::Decoder
decoding	lib/yaml-cpp/src/binary.cpp	/^    static const unsigned char decoding[] = {$/;"	m	namespace:YAML	file:
decpoint	lib/lua/src/llex.h	/^  char decpoint;  \/* locale decimal point *\/$/;"	m	struct:LexState
deepcopy	core/python/cfgwalk.py	/^from copy import deepcopy$/;"	i
deepcopy	core/python/util.py	/^deepcopy = copy.deepcopy$/;"	v
defaultHorizontalStepScale	core/common/RobotInfo.h	/^  int defaultHorizontalStepScale;$/;"	m	struct:ImageParams
defaultKick	core/memory/BehaviorParamBlock.h	/^  int defaultKick;$/;"	m	struct:KickStrategy
defaultPlayer	build/include/tool/simulation/BehaviorSimulation.h	/^    int defaultPlayer() { return activePlayers_[0]; }$/;"	f	class:BehaviorSimulation
defaultPlayer	build/include/tool/simulation/LocalizationSimulation.cpp	/^int LocalizationSimulation::defaultPlayer() {$/;"	f	class:LocalizationSimulation
defaultPlayer	build/include/tool/simulation/Simulation.h	/^    virtual int defaultPlayer() { return CHASER; }$/;"	f	class:Simulation
defaultPlayer	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    int defaultPlayer() { return activePlayers_[0]; }$/;"	f	class:BehaviorSimulation
defaultPlayer	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^int LocalizationSimulation::defaultPlayer() {$/;"	f	class:LocalizationSimulation
defaultPlayer	tools/UTNaoTool/simulation/Simulation.h	/^    virtual int defaultPlayer() { return CHASER; }$/;"	f	class:Simulation
defaultVerticalStepScale	core/common/RobotInfo.h	/^  int defaultVerticalStepScale;$/;"	m	struct:ImageParams
default_prefix	tools/behaviorSim/cma.py	/^    default_prefix = 'outcmaes'$/;"	v	class:CMADataLogger
default_prefix	tools/behaviorSim/cma.py	/^    default_prefix = 'outcmaes'$/;"	v	class:DEAPCMADataLogger
defaults	tools/behaviorSim/cma.py	/^    def defaults():$/;"	m	class:Options
defending	core/python/behaviors/win.py	/^  defending=2$/;"	v	class:Modes
defense_block	core/python/behaviors/win.py	/^    def defense_block(self):$/;"	m	class:Playing.Win
defense_block_left	core/python/behaviors/win.py	/^    def defense_block_left(self):$/;"	m	class:Playing.Win
defense_block_right	core/python/behaviors/win.py	/^    def defense_block_right(self):$/;"	m	class:Playing.Win
defense_delay_time	core/python/behaviors/win.py	/^defense_delay_time = 0$/;"	v
defense_sit	core/python/behaviors/win.py	/^    def defense_sit(self):$/;"	m	class:Playing.Win
defense_start	core/python/behaviors/win.py	/^    def defense_start(self):$/;"	m	class:Playing.Win
defense_time	core/python/behaviors/win.py	/^defense_time = 0$/;"	v
defense_walk	core/python/behaviors/win.py	/^    def defense_walk(self):$/;"	m	class:Playing.Win
defense_walk_center	core/python/behaviors/win.py	/^    def defense_walk_center(self):$/;"	m	class:Playing.Win
defense_walk_left	core/python/behaviors/win.py	/^    def defense_walk_left(self):$/;"	m	class:Playing.Win
defense_walk_right	core/python/behaviors/win.py	/^    def defense_walk_right(self):$/;"	m	class:Playing.Win
definingMovements_	build/include/tool/AnnotationWidget.h	/^        bool definingMovements_;$/;"	m	class:AnnotationWidget
definingMovements_	tools/UTNaoTool/AnnotationWidget.h	/^        bool definingMovements_;$/;"	m	class:AnnotationWidget
deflate	lib/zlib/deflate.c	/^int ZEXPORT deflate (strm, flush)$/;"	f
deflate	lib/zlib/zconf.h	/^#  define deflate /;"	d
deflateBound	lib/zlib/deflate.c	/^uLong ZEXPORT deflateBound(strm, sourceLen)$/;"	f
deflateBound	lib/zlib/zconf.h	/^#  define deflateBound /;"	d
deflateCopy	lib/zlib/deflate.c	/^int ZEXPORT deflateCopy (dest, source)$/;"	f
deflateCopy	lib/zlib/zconf.h	/^#  define deflateCopy /;"	d
deflateEnd	lib/zlib/deflate.c	/^int ZEXPORT deflateEnd (strm)$/;"	f
deflateEnd	lib/zlib/zconf.h	/^#  define deflateEnd /;"	d
deflateInit	lib/zlib/zlib.h	/^#define deflateInit(/;"	d
deflateInit2	lib/zlib/zlib.h	/^#define deflateInit2(/;"	d
deflateInit2_	lib/zlib/deflate.c	/^int ZEXPORT deflateInit2_(strm, level, method, windowBits, memLevel, strategy,$/;"	f
deflateInit2_	lib/zlib/zconf.h	/^#  define deflateInit2_ /;"	d
deflateInit_	lib/zlib/deflate.c	/^int ZEXPORT deflateInit_(strm, level, version, stream_size)$/;"	f
deflateInit_	lib/zlib/zconf.h	/^#  define deflateInit_ /;"	d
deflateParams	lib/zlib/deflate.c	/^int ZEXPORT deflateParams(strm, level, strategy)$/;"	f
deflateParams	lib/zlib/zconf.h	/^#  define deflateParams /;"	d
deflatePrime	lib/zlib/deflate.c	/^int ZEXPORT deflatePrime (strm, bits, value)$/;"	f
deflatePrime	lib/zlib/zconf.h	/^#  define deflatePrime /;"	d
deflateReset	lib/zlib/deflate.c	/^int ZEXPORT deflateReset (strm)$/;"	f
deflateReset	lib/zlib/zconf.h	/^#  define deflateReset /;"	d
deflateSetDictionary	lib/zlib/deflate.c	/^int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)$/;"	f
deflateSetDictionary	lib/zlib/zconf.h	/^#  define deflateSetDictionary /;"	d
deflateSetHeader	lib/zlib/deflate.c	/^int ZEXPORT deflateSetHeader (strm, head)$/;"	f
deflateSetHeader	lib/zlib/zconf.h	/^#  define deflateSetHeader /;"	d
deflateTune	lib/zlib/deflate.c	/^int ZEXPORT deflateTune(strm, good_length, max_lazy, nice_length, max_chain)$/;"	f
deflateTune	lib/zlib/zconf.h	/^#  define deflateTune /;"	d
deflate_copyright	lib/zlib/deflate.c	/^const char deflate_copyright[] =$/;"	v
deflate_copyright	lib/zlib/zconf.h	/^#  define deflate_copyright /;"	d
deflate_fast	lib/zlib/deflate.c	/^local block_state deflate_fast(s, flush)$/;"	f
deflate_huff	lib/zlib/deflate.c	/^local block_state deflate_huff(s, flush)$/;"	f
deflate_rle	lib/zlib/deflate.c	/^local block_state deflate_rle(s, flush)$/;"	f
deflate_slow	lib/zlib/deflate.c	/^local block_state deflate_slow(s, flush)$/;"	f
deflate_state	lib/zlib/deflate.h	/^} FAR deflate_state;$/;"	t	typeref:struct:internal_state
deflate_stored	lib/zlib/deflate.c	/^local block_state deflate_stored(s, flush)$/;"	f
del	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
delFrames	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::delFrames() {$/;"	f	class:LogEditorWindow
delFrames	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::delFrames() {$/;"	f	class:LogEditorWindow
delay	lib/lua/test/life.lua	/^function delay() -- NOTE: SYSTEM-DEPENDENT, adjust as necessary$/;"	f
delayed_accel_sensor_	core/memory/WalkEngineBlock.h	/^  Vector2<float> delayed_accel_sensor_;$/;"	m	struct:WalkEngineBlock
delayed_accel_sensor_buffer_	core/memory/WalkEngineBlock.h	/^  RingQueue<Vector2<float>, MAX_SENSOR_DELAY> delayed_accel_sensor_buffer_;$/;"	m	struct:WalkEngineBlock
delayed_localization	core/memory/MemoryCache.h	/^    DelayedLocalizationBlock* delayed_localization;$/;"	m	class:MemoryCache
delayed_pen_state_	core/memory/WalkEngineBlock.h	/^  Vector3<float> delayed_pen_state_;$/;"	m	struct:WalkEngineBlock
delayed_pen_state_buffer_	core/memory/WalkEngineBlock.h	/^  RingQueue<Vector3<float>, MAX_SENSOR_DELAY> delayed_pen_state_buffer_;$/;"	m	struct:WalkEngineBlock
delayed_stance_step_	core/memory/WalkEngineBlock.h	/^  Step delayed_stance_step_;$/;"	m	struct:WalkEngineBlock
delayed_step_buffer_	core/memory/WalkEngineBlock.h	/^  RingQueue<Step, MAX_SENSOR_DELAY> delayed_step_buffer_;$/;"	m	struct:WalkEngineBlock
delayed_zmp_state_	core/memory/WalkEngineBlock.h	/^  Vector2<float> delayed_zmp_state_;$/;"	m	struct:WalkEngineBlock
delayed_zmp_state_buffer_	core/memory/WalkEngineBlock.h	/^  RingQueue<Vector2<float>, MAX_SENSOR_DELAY> delayed_zmp_state_buffer_;$/;"	m	struct:WalkEngineBlock
deleteAnnotation	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::deleteAnnotation(){$/;"	f	class:AnnotationWidget
deleteAnnotation	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::deleteAnnotation(){$/;"	f	class:AnnotationWidget
deleteFromFrame	build/include/tool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::deleteFromFrame(int frame) {$/;"	f	class:AnnotationGroup
deleteFromFrame	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::deleteFromFrame(int frame) {$/;"	f	class:AnnotationGroup
deleteFromFrames	build/include/tool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::deleteFromFrames(std::vector<int> frames) {$/;"	f	class:AnnotationGroup
deleteFromFrames	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::deleteFromFrames(std::vector<int> frames) {$/;"	f	class:AnnotationGroup
deleteKeyframe	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::deleteKeyframe() {$/;"	f	class:KeyframeWidget
deleteKeyframe	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::deleteKeyframe() {$/;"	f	class:KeyframeWidget
deleteLock	core/memory/Lock.cpp	/^void Lock::deleteLock() {$/;"	f	class:Lock
deleteLogs	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::deleteLogs() {$/;"	f	class:TeamConfigWindow
deleteLogs	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::deleteLogs() {$/;"	f	class:TeamConfigWindow
deleteSelection	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::deleteSelection(){$/;"	f	class:AnnotationWidget
deleteSelection	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::deleteSelection(){$/;"	f	class:AnnotationWidget
delete_memory_on_destruct_	core/VisionCore.h	/^  bool delete_memory_on_destruct_;$/;"	m	class:VisionCore
delta	core/math/GaussNewtonOptimizer.h	/^  float delta; \/**< The delta used to approximate the partial derivatives of the Jacobian. *\/$/;"	m	class:GaussNewtonOptimizer
delta_threshold	core/motion/rswalk2014/RSWalkModule2014.h	/^        double delta_threshold = 1.0; \/\/ this needs tuning$/;"	m	class:RSWalkModule2014
deltaf	lib/alglib/optimization.h	/^    ae_vector deltaf;$/;"	m	struct:alglib_impl::__anon73
deltafready	lib/alglib/optimization.h	/^    ae_bool deltafready;$/;"	m	struct:alglib_impl::__anon73
deltax	lib/alglib/optimization.h	/^    ae_vector deltax;$/;"	m	struct:alglib_impl::__anon73
deltaxready	lib/alglib/optimization.h	/^    ae_bool deltaxready;$/;"	m	struct:alglib_impl::__anon73
densea	lib/alglib/optimization.h	/^    ae_matrix densea;$/;"	m	struct:alglib_impl::__anon71
denseh	lib/alglib/optimization.h	/^    ae_matrix denseh;$/;"	m	struct:alglib_impl::__anon69
densesolver_cbasiclusolve	lib/alglib/solvers.cpp	/^static void densesolver_cbasiclusolve(\/* Complex *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
densesolver_cmatrixlusolveinternal	lib/alglib/solvers.cpp	/^static void densesolver_cmatrixlusolveinternal(\/* Complex *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
densesolver_densesolverrfsmax	lib/alglib/solvers.cpp	/^static ae_int_t densesolver_densesolverrfsmax(ae_int_t n,$/;"	f	namespace:alglib_impl
densesolver_densesolverrfsmaxv2	lib/alglib/solvers.cpp	/^static ae_int_t densesolver_densesolverrfsmaxv2(ae_int_t n,$/;"	f	namespace:alglib_impl
densesolver_hpdbasiccholeskysolve	lib/alglib/solvers.cpp	/^static void densesolver_hpdbasiccholeskysolve(\/* Complex *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
densesolver_hpdmatrixcholeskysolveinternal	lib/alglib/solvers.cpp	/^static void densesolver_hpdmatrixcholeskysolveinternal(\/* Complex *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
densesolver_rbasiclusolve	lib/alglib/solvers.cpp	/^static void densesolver_rbasiclusolve(\/* Real    *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
densesolver_rmatrixlusolveinternal	lib/alglib/solvers.cpp	/^static void densesolver_rmatrixlusolveinternal(\/* Real    *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
densesolver_spdbasiccholeskysolve	lib/alglib/solvers.cpp	/^static void densesolver_spdbasiccholeskysolve(\/* Real    *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
densesolver_spdmatrixcholeskysolveinternal	lib/alglib/solvers.cpp	/^static void densesolver_spdmatrixcholeskysolveinternal(\/* Real    *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
densesolverlsreport	lib/alglib/solvers.cpp	/^densesolverlsreport::densesolverlsreport() : _densesolverlsreport_owner() ,r2(p_struct->r2),cx(&p_struct->cx),n(p_struct->n),k(p_struct->k)$/;"	f	class:alglib::densesolverlsreport
densesolverlsreport	lib/alglib/solvers.cpp	/^densesolverlsreport::densesolverlsreport(const densesolverlsreport &rhs):_densesolverlsreport_owner(rhs) ,r2(p_struct->r2),cx(&p_struct->cx),n(p_struct->n),k(p_struct->k)$/;"	f	class:alglib::densesolverlsreport
densesolverlsreport	lib/alglib/solvers.h	/^class densesolverlsreport : public _densesolverlsreport_owner$/;"	c	namespace:alglib
densesolverlsreport	lib/alglib/solvers.h	/^} densesolverlsreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon82
densesolverreport	lib/alglib/solvers.cpp	/^densesolverreport::densesolverreport() : _densesolverreport_owner() ,r1(p_struct->r1),rinf(p_struct->rinf)$/;"	f	class:alglib::densesolverreport
densesolverreport	lib/alglib/solvers.cpp	/^densesolverreport::densesolverreport(const densesolverreport &rhs):_densesolverreport_owner(rhs) ,r1(p_struct->r1),rinf(p_struct->rinf)$/;"	f	class:alglib::densesolverreport
densesolverreport	lib/alglib/solvers.h	/^class densesolverreport : public _densesolverreport_owner$/;"	c	namespace:alglib
densesolverreport	lib/alglib/solvers.h	/^} densesolverreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon81
depend	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	bool depend() const { return m_depend; }$/;"	f	class:fadbad::FTypeName
depend	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	bool depend() const { return m_size!=0; }$/;"	f	class:fadbad::FTypeName
depth	lib/zlib/deflate.h	/^    uch depth[2*L_CODES+1];$/;"	m	struct:internal_state
deriv	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	const T& deriv(const unsigned int i) const$/;"	f	class:fadbad::FTypeName
derror	lib/alglib/dataanalysis.h	/^    ae_vector derror;$/;"	m	struct:alglib_impl::__anon44
deserialize	build/include/tool/KeyframeConfig.cpp	/^void KeyframeConfig::deserialize(const YAML::Node& node) {$/;"	f	class:KeyframeConfig
deserialize	build/include/tool/RobotControllerConfig.h	/^    void deserialize(const YAML::Node& node) {$/;"	f	class:RobotControllerConfig
deserialize	build/include/tool/SimulatorConfig.cpp	/^void SimulatorConfig::deserialize(const YAML::Node& node) {$/;"	f	class:SimulatorConfig
deserialize	build/include/tool/ToolConfig.cpp	/^void ToolConfig::deserialize(const YAML::Node& node) {$/;"	f	class:ToolConfig
deserialize	build/include/tool/WorldConfig.h	/^    void deserialize(const YAML::Node& node) {$/;"	f	class:WorldConfig
deserialize	build/include/tool/annotations/Annotation.cpp	/^void Annotation::deserialize(const YAML::Node& node) {$/;"	f	class:Annotation
deserialize	build/include/tool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::deserialize(const YAML::Node& node){$/;"	f	class:AnnotationGroup
deserialize	build/include/tool/annotations/LocalizationAnnotation.cpp	/^void LocalizationAnnotation::deserialize(const YAML::Node& node) {$/;"	f	class:LocalizationAnnotation
deserialize	build/include/tool/calibration/JointDataset.cpp	/^void JointDataset::deserialize(const YAML::Node& node) {$/;"	f	class:JointDataset
deserialize	build/include/tool/calibration/JointDataset.cpp	/^void JointMeasurement::deserialize(const YAML::Node& node) {$/;"	f	class:JointMeasurement
deserialize	build/include/tool/simulation/SimulationPath.cpp	/^void SimulationPath::deserialize(const YAML::Node& node) {$/;"	f	class:SimulationPath
deserialize	core/common/FieldConfiguration.cpp	/^void BeliefConfiguration::deserialize(const YAML::Node& node) {$/;"	f	class:BeliefConfiguration
deserialize	core/common/FieldConfiguration.cpp	/^void FieldConfiguration::deserialize(const YAML::Node& node) {$/;"	f	class:FieldConfiguration
deserialize	core/common/FieldConfiguration.cpp	/^void ObjectConfiguration::deserialize(const YAML::Node& node) {$/;"	f	class:ObjectConfiguration
deserialize	core/common/Keyframe.cpp	/^void Keyframe::deserialize(const YAML::Node& node) {$/;"	f	class:Keyframe
deserialize	core/common/Keyframe.cpp	/^void KeyframeSequence::deserialize(const YAML::Node& node) {$/;"	f	class:KeyframeSequence
deserialize	core/common/RobotCalibration.cpp	/^void RobotCalibration::deserialize(const YAML::Node& node) {$/;"	f	class:RobotCalibration
deserialize	core/common/RobotConfig.cpp	/^void RobotConfig::deserialize(const YAML::Node& node) {$/;"	f	class:RobotConfig
deserialize	core/common/Serializable.h	/^    void deserialize(std::istream& is) {$/;"	f	class:Serializable
deserialize	core/common/TeamConfig.cpp	/^void TeamConfig::deserialize(const YAML::Node& node) {$/;"	f	class:TeamConfig
deserialize	core/memory/ImageBlock.cpp	/^bool ImageBlock::deserialize(const StreamBuffer& buffer, std::string data_dir) {$/;"	f	class:ImageBlock
deserialize	core/memory/LocalizationBlock.cpp	/^bool LocalizationBlock::deserialize(const StreamBuffer& buffer, std::string) {$/;"	f	class:LocalizationBlock
deserialize	core/memory/LogMetadata.cpp	/^void LogMetadata::deserialize(const YAML::Node& node) {$/;"	f	class:LogMetadata
deserialize	core/memory/MemoryBlock.h	/^  bool deserialize(const StreamBuffer& buffer) {$/;"	f	class:MemoryBlock
deserialize	core/memory/RobotVisionBlock.cpp	/^bool RobotVisionBlock::deserialize(const StreamBuffer& buffer, std::string) {$/;"	f	class:RobotVisionBlock
deserialize	core/motion/rswalk2014/GyroConfig.cpp	/^void GyroConfig::deserialize(const YAML::Node& node) {$/;"	f	class:GyroConfig
deserialize	tools/UTNaoTool/KeyframeConfig.cpp	/^void KeyframeConfig::deserialize(const YAML::Node& node) {$/;"	f	class:KeyframeConfig
deserialize	tools/UTNaoTool/RobotControllerConfig.h	/^    void deserialize(const YAML::Node& node) {$/;"	f	class:RobotControllerConfig
deserialize	tools/UTNaoTool/SimulatorConfig.cpp	/^void SimulatorConfig::deserialize(const YAML::Node& node) {$/;"	f	class:SimulatorConfig
deserialize	tools/UTNaoTool/ToolConfig.cpp	/^void ToolConfig::deserialize(const YAML::Node& node) {$/;"	f	class:ToolConfig
deserialize	tools/UTNaoTool/WorldConfig.h	/^    void deserialize(const YAML::Node& node) {$/;"	f	class:WorldConfig
deserialize	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::deserialize(const YAML::Node& node) {$/;"	f	class:Annotation
deserialize	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::deserialize(const YAML::Node& node){$/;"	f	class:AnnotationGroup
deserialize	tools/UTNaoTool/annotations/LocalizationAnnotation.cpp	/^void LocalizationAnnotation::deserialize(const YAML::Node& node) {$/;"	f	class:LocalizationAnnotation
deserialize	tools/UTNaoTool/calibration/JointDataset.cpp	/^void JointDataset::deserialize(const YAML::Node& node) {$/;"	f	class:JointDataset
deserialize	tools/UTNaoTool/calibration/JointDataset.cpp	/^void JointMeasurement::deserialize(const YAML::Node& node) {$/;"	f	class:JointMeasurement
deserialize	tools/UTNaoTool/simulation/SimulationPath.cpp	/^void SimulationPath::deserialize(const YAML::Node& node) {$/;"	f	class:SimulationPath
deserializeMember	core/common/Serializable.h	/^      void deserializeMember(T*& member) {$/;"	f	class:Serializable
deserializeMember	core/common/Serializable.h	/^      void deserializeMember(std::list<T>& member) {$/;"	f	class:Serializable
deserializeMember	core/common/Serializable.h	/^      void deserializeMember(std::vector<T>& member) {$/;"	f	class:Serializable
deserializeMember	core/common/Serializable.h	/^    void deserializeMember(Serializable& member) {$/;"	f	class:Serializable
deserializeMember	core/common/Serializable.h	/^    void deserializeMember(std::string& member) {$/;"	f	class:Serializable
deserializePrimitiveVector	core/common/Serializable.h	/^      void deserializePrimitiveVector(std::vector<T>& member) {$/;"	f	class:Serializable
desiredGoalBearing	core/memory/BehaviorParamBlock.h	/^  float desiredGoalBearing;$/;"	m	struct:SetPlay
desiredTargetOffset	core/memory/BehaviorParamBlock.h	/^  Point2D desiredTargetOffset;$/;"	m	struct:SetPlay
desired_angle_	core/memory/KickRequestBlock.h	/^  float desired_angle_; \/\/ in radians$/;"	m	struct:KickRequestBlock
desired_distance_	core/memory/KickRequestBlock.h	/^  float desired_distance_; \/\/ in mm$/;"	m	struct:KickRequestBlock
desired_kick_angle_	core/memory/KickEngineBlock.h	/^  float desired_kick_angle_; \/\/ in degrees$/;"	m	struct:KickEngineBlock
desired_kick_angle_	core/memory/KickModuleBlock.h	/^  float desired_kick_angle_;$/;"	m	struct:KickModuleBlock
desired_kick_distance_	core/memory/KickEngineBlock.h	/^  float desired_kick_distance_; \/\/ in mm$/;"	m	struct:KickEngineBlock
desired_kick_distance_	core/memory/KickModuleBlock.h	/^  float desired_kick_distance_;$/;"	m	struct:KickModuleBlock
desired_next_state_	core/memory/WalkEngineBlock.h	/^  WalkState desired_next_state_;$/;"	m	struct:WalkEngineBlock
desired_next_without_closed_loop_	core/memory/WalkEngineBlock.h	/^  WalkState desired_next_without_closed_loop_;$/;"	m	struct:WalkEngineBlock
desired_step_size_	core/memory/WalkEngineBlock.h	/^  Pose2D desired_step_size_;$/;"	m	struct:WalkEngineBlock
destination_	core/communications/UDPWrapper.h	/^  udp::endpoint *destination_;$/;"	m	class:UDPWrapper
destruct_	core/communications/UDPWrapper.h	/^  bool destruct_;$/;"	m	class:UDPWrapper
det	core/math/Matrix2x2.h	/^  V det() const$/;"	f	class:Matrix2x2
det	core/math/Matrix3x3.h	/^  V det() const $/;"	f	class:Matrix3x3
det2	core/math/Matrix3x3.h	/^  static V det2(V a, V b, V c, V d)$/;"	f	class:Matrix3x3
detectBall	core/vision/ImageProcessor.cpp	/^void ImageProcessor::detectBall(unsigned char* img, MergeBlob* mb)$/;"	f	class:ImageProcessor
detectBeacons	vision_testing/src/vision_testing.cpp	/^void detectBeacons(unsigned char* transitions, unsigned char* beacons, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
detectEnemy	core/vision/ImageProcessor.cpp	/^void ImageProcessor::detectEnemy(unsigned char* img, MergeBlob* mb)$/;"	f	class:ImageProcessor
detectGoal	core/vision/ImageProcessor.cpp	/^void ImageProcessor::detectGoal(unsigned char* img, MergeBlob* mb)$/;"	f	class:ImageProcessor
detectIndent	lib/yaml-cpp/src/scanscalar.h	/^		bool detectIndent;              \/\/ should we try to autodetect the indent?$/;"	m	struct:YAML::ScanScalarParams
detectTransitions	vision_testing/src/vision_testing.cpp	/^void detectTransitions(unsigned char* img, unsigned char* transitions, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
detect_data_type	lib/zlib/trees.c	/^local int detect_data_type(s)$/;"	f
determineBodyExclusionArray	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^void Kinematics::determineBodyExclusionArray($/;"	f	class:Kinematics
determineStartingArmState	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::determineStartingArmState() {$/;"	f	class:RSWalkModule2014
determineSupportChain	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::determineSupportChain() {$/;"	f	class:Kinematics
device_path_	core/imageCapture/NaoCamera.h	/^    std::string device_path_;$/;"	m	class:NaoCamera
dfavgce	lib/alglib/dataanalysis.cpp	/^double dfavgce(const decisionforest &df, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
dfavgce	lib/alglib/dataanalysis.cpp	/^double dfavgce(decisionforest* df,$/;"	f	namespace:alglib_impl
dfavgerror	lib/alglib/dataanalysis.cpp	/^double dfavgerror(const decisionforest &df, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
dfavgerror	lib/alglib/dataanalysis.cpp	/^double dfavgerror(decisionforest* df,$/;"	f	namespace:alglib_impl
dfavgrelerror	lib/alglib/dataanalysis.cpp	/^double dfavgrelerror(const decisionforest &df, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
dfavgrelerror	lib/alglib/dataanalysis.cpp	/^double dfavgrelerror(decisionforest* df,$/;"	f	namespace:alglib_impl
dfbuildinternal	lib/alglib/dataanalysis.cpp	/^void dfbuildinternal(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
dfbuildrandomdecisionforest	lib/alglib/dataanalysis.cpp	/^void dfbuildrandomdecisionforest(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
dfbuildrandomdecisionforest	lib/alglib/dataanalysis.cpp	/^void dfbuildrandomdecisionforest(const real_2d_array &xy, const ae_int_t npoints, const ae_int_t nvars, const ae_int_t nclasses, const ae_int_t ntrees, const double r, ae_int_t &info, decisionforest &df, dfreport &rep)$/;"	f	namespace:alglib
dfcopy	lib/alglib/dataanalysis.cpp	/^void dfcopy(decisionforest* df1, decisionforest* df2, ae_state *_state)$/;"	f	namespace:alglib_impl
dfdnet	lib/alglib/dataanalysis.h	/^    ae_vector dfdnet;$/;"	m	struct:alglib_impl::__anon44
dfdnet	lib/alglib/dataanalysis.h	/^    ae_vector dfdnet;$/;"	m	struct:alglib_impl::__anon50
dfinternalbuffers	lib/alglib/dataanalysis.h	/^} dfinternalbuffers;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon41
dforest_dfbuildtree	lib/alglib/dataanalysis.cpp	/^static void dforest_dfbuildtree(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
dforest_dfbuildtreerec	lib/alglib/dataanalysis.cpp	/^static void dforest_dfbuildtreerec(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
dforest_dfclserror	lib/alglib/dataanalysis.cpp	/^static ae_int_t dforest_dfclserror(decisionforest* df,$/;"	f	namespace:alglib_impl
dforest_dfprocessinternal	lib/alglib/dataanalysis.cpp	/^static void dforest_dfprocessinternal(decisionforest* df,$/;"	f	namespace:alglib_impl
dforest_dfsplitc	lib/alglib/dataanalysis.cpp	/^static void dforest_dfsplitc(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
dforest_dfsplitr	lib/alglib/dataanalysis.cpp	/^static void dforest_dfsplitr(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
dforest_dfuseevs	lib/alglib/dataanalysis.cpp	/^static ae_int_t dforest_dfuseevs = 2;$/;"	m	namespace:alglib_impl	file:
dforest_dfusestrongsplits	lib/alglib/dataanalysis.cpp	/^static ae_int_t dforest_dfusestrongsplits = 1;$/;"	m	namespace:alglib_impl	file:
dforest_innernodewidth	lib/alglib/dataanalysis.cpp	/^static ae_int_t dforest_innernodewidth = 3;$/;"	m	namespace:alglib_impl	file:
dforest_leafnodewidth	lib/alglib/dataanalysis.cpp	/^static ae_int_t dforest_leafnodewidth = 2;$/;"	m	namespace:alglib_impl	file:
dfprocess	lib/alglib/dataanalysis.cpp	/^void dfprocess(const decisionforest &df, const real_1d_array &x, real_1d_array &y)$/;"	f	namespace:alglib
dfprocess	lib/alglib/dataanalysis.cpp	/^void dfprocess(decisionforest* df,$/;"	f	namespace:alglib_impl
dfprocessi	lib/alglib/dataanalysis.cpp	/^void dfprocessi(const decisionforest &df, const real_1d_array &x, real_1d_array &y)$/;"	f	namespace:alglib
dfprocessi	lib/alglib/dataanalysis.cpp	/^void dfprocessi(decisionforest* df,$/;"	f	namespace:alglib_impl
dfrelclserror	lib/alglib/dataanalysis.cpp	/^double dfrelclserror(const decisionforest &df, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
dfrelclserror	lib/alglib/dataanalysis.cpp	/^double dfrelclserror(decisionforest* df,$/;"	f	namespace:alglib_impl
dfreport	lib/alglib/dataanalysis.cpp	/^dfreport::dfreport() : _dfreport_owner() ,relclserror(p_struct->relclserror),avgce(p_struct->avgce),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),oobrelclserror(p_struct->oobrelclserror),oobavgce(p_struct->oobavgce),oobrmserror(p_struct->oobrmserror),oobavgerror(p_struct->oobavgerror),oobavgrelerror(p_struct->oobavgrelerror)$/;"	f	class:alglib::dfreport
dfreport	lib/alglib/dataanalysis.cpp	/^dfreport::dfreport(const dfreport &rhs):_dfreport_owner(rhs) ,relclserror(p_struct->relclserror),avgce(p_struct->avgce),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),oobrelclserror(p_struct->oobrelclserror),oobavgce(p_struct->oobavgce),oobrmserror(p_struct->oobrmserror),oobavgerror(p_struct->oobavgerror),oobavgrelerror(p_struct->oobavgrelerror)$/;"	f	class:alglib::dfreport
dfreport	lib/alglib/dataanalysis.h	/^class dfreport : public _dfreport_owner$/;"	c	namespace:alglib
dfreport	lib/alglib/dataanalysis.h	/^} dfreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon40
dfrmserror	lib/alglib/dataanalysis.cpp	/^double dfrmserror(const decisionforest &df, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
dfrmserror	lib/alglib/dataanalysis.cpp	/^double dfrmserror(decisionforest* df,$/;"	f	namespace:alglib_impl
dg	lib/alglib/alglibinternal.h	/^    double dg;$/;"	m	struct:alglib_impl::__anon21
dg	lib/alglib/dataanalysis.h	/^    double dg;$/;"	m	struct:alglib_impl::__anon46
dginit	lib/alglib/alglibinternal.h	/^    double dginit;$/;"	m	struct:alglib_impl::__anon21
dginit	lib/alglib/dataanalysis.h	/^    double dginit;$/;"	m	struct:alglib_impl::__anon46
dginit	lib/alglib/optimization.h	/^    double dginit;$/;"	m	struct:alglib_impl::__anon75
dgm	lib/alglib/alglibinternal.h	/^    double dgm;$/;"	m	struct:alglib_impl::__anon21
dgm	lib/alglib/dataanalysis.h	/^    double dgm;$/;"	m	struct:alglib_impl::__anon46
dgtest	lib/alglib/alglibinternal.h	/^    double dgtest;$/;"	m	struct:alglib_impl::__anon21
dgtest	lib/alglib/dataanalysis.h	/^    double dgtest;$/;"	m	struct:alglib_impl::__anon46
dgx	lib/alglib/alglibinternal.h	/^    double dgx;$/;"	m	struct:alglib_impl::__anon21
dgx	lib/alglib/dataanalysis.h	/^    double dgx;$/;"	m	struct:alglib_impl::__anon46
dgxm	lib/alglib/alglibinternal.h	/^    double dgxm;$/;"	m	struct:alglib_impl::__anon21
dgxm	lib/alglib/dataanalysis.h	/^    double dgxm;$/;"	m	struct:alglib_impl::__anon46
dgy	lib/alglib/alglibinternal.h	/^    double dgy;$/;"	m	struct:alglib_impl::__anon21
dgy	lib/alglib/dataanalysis.h	/^    double dgy;$/;"	m	struct:alglib_impl::__anon46
dgym	lib/alglib/alglibinternal.h	/^    double dgym;$/;"	m	struct:alglib_impl::__anon21
dgym	lib/alglib/dataanalysis.h	/^    double dgym;$/;"	m	struct:alglib_impl::__anon46
diaga	lib/alglib/optimization.h	/^    ae_vector diaga;$/;"	m	struct:alglib_impl::__anon71
diagcat	core/common/NMatrix.cpp	/^NMatrix diagcat(NMatrix a, NMatrix b)$/;"	f
diagh	lib/alglib/optimization.h	/^    ae_vector diagh;$/;"	m	struct:alglib_impl::__anon69
diagh	lib/alglib/optimization.h	/^    ae_vector diagh;$/;"	m	struct:alglib_impl::__anon77
diagh	lib/alglib/optimization.h	/^    ae_vector diagh;$/;"	m	struct:alglib_impl::__anon79
diaghl2	lib/alglib/optimization.h	/^    ae_vector diaghl2;$/;"	m	struct:alglib_impl::__anon77
diaghoriginal	lib/alglib/optimization.h	/^    ae_vector diaghoriginal;$/;"	m	struct:alglib_impl::__anon79
diagonalInverse	core/math/YaMatrix.h	/^  YaMatrix<V> diagonalInverse()$/;"	f	class:YaMatrix
diameter	data/ballfit.py	/^      diameter = readMeasured(f)$/;"	v
diameters	data/ballfit.py	/^diameters = []$/;"	v
diameters	data/ballfit.py	/^diameters = numpy.array(diameters)$/;"	v
dicMatrices	tools/behaviorSim/cma.py	/^    dicMatrices = {}  # store matrix if necessary, for each dimension$/;"	v	class:Rotation
dictId	lib/zlib/example.c	/^uLong dictId; \/* Adler32 value of the dictionary *\/$/;"	v
dictionary	lib/zlib/example.c	/^const char dictionary[] = "hello";$/;"	v
didKick	core/memory/OdometryBlock.h	/^  bool didKick;$/;"	m	struct:OdometryBlock
diff	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	T& diff(unsigned int idx)$/;"	f	class:fadbad::FTypeName
diff	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	T& diff(unsigned int idx, unsigned int N)$/;"	f	class:fadbad::FTypeName
diff	core/vision/structures/LineStackInfo.h	/^  float diff;$/;"	m	struct:LineStackInfo
diffEnd	core/vision/structures/Blob.h	/^  float diffEnd;$/;"	m	struct:Blob
diffStart	core/vision/structures/Blob.h	/^  float diffStart;$/;"	m	struct:Blob
diffStart	core/vision/structures/LineStackInfo.h	/^  float diffStart;$/;"	m	struct:LineStackInfo
diffpow	tools/behaviorSim/cma.py	/^    def diffpow(self, x, rot=0):$/;"	m	class:FitnessFunctions
diffstep	lib/alglib/optimization.h	/^    double diffstep;$/;"	m	struct:alglib_impl::__anon73
dimensionValues_	core/common/RobotCalibration.h	/^    float dimensionValues_[RobotDimensions::NUM_DIMENSIONS];$/;"	m	class:RobotCalibration
dimensions_	build/include/tool/MotionGLWidget.h	/^  RobotDimensions dimensions_;$/;"	m	class:MotionGLWidget
dimensions_	build/include/tool/MotionSimulation.h	/^  RobotDimensions dimensions_;$/;"	m	class:MotionSimulation
dimensions_	core/memory/RobotInfoBlock.h	/^  RobotDimensions dimensions_;$/;"	m	struct:RobotInfoBlock
dimensions_	tools/UTNaoTool/MotionGLWidget.h	/^  RobotDimensions dimensions_;$/;"	m	class:MotionGLWidget
dimensions_	tools/UTNaoTool/MotionSimulation.h	/^  RobotDimensions dimensions_;$/;"	m	class:MotionSimulation
dir	build/include/tool/MotionGLWidget.h	/^  qglviewer::Vec orig, dir, selectedPoint;$/;"	m	class:MotionGLWidget
dir	core/motion/rswalk2014/types/PostInfo.hpp	/^   Direction dir;$/;"	m	struct:PostInfo
dir	tools/UTNaoTool/MotionGLWidget.h	/^  qglviewer::Vec orig, dir, selectedPoint;$/;"	m	class:MotionGLWidget
dir	tools/behaviorSim/runJob.py	/^dir = sys.argv[1]$/;"	v
dir_change_wait_duration	core/memory/WalkParamBlock.h	/^  float dir_change_wait_duration;$/;"	m	struct:WalkParamBlock
dir_t	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^enum dir_t$/;"	g
direct	lib/zlib/gzguts.h	/^    int direct;             \/* true if last read direct, false if gzip *\/$/;"	m	struct:__anon135
directDistance	core/vision/CameraMatrix.cpp	/^float CameraMatrix::directDistance(const Position& p) const {$/;"	f	class:CameraMatrix
direction	core/python/behaviors/head_tracking.py	/^direction = 1.$/;"	v
direction	core/python/behaviors/pid_distance_angle.py	/^direction = 1.$/;"	v
direction	core/python/behaviors/stamp_in_circles.py	/^direction = 1.$/;"	v
direction	core/python/behaviors/walk_to_center.py	/^direction = 1.$/;"	v
direction	core/python/behaviors/walk_to_center_2.py	/^direction = 1.$/;"	v
direction_	core/communications/UDPWrapper.h	/^  Direction direction_;$/;"	m	class:UDPWrapper
directory	core/memory/Log.h	/^    const std::string& directory() const { return directory_; }$/;"	f	class:Log
directory	core/memory/LogReader.h	/^    const std::string& directory() { return directory_; }$/;"	f	class:LogReader
directory	core/memory/Logger.h	/^  std::string directory() const { return directory_; }$/;"	f	class:Logger
directory_	build/include/tool/LogEditorWindow.h	/^    std::string directory_;$/;"	m	class:FrameListWidgetItem
directory_	core/memory/Log.h	/^    std::string directory_;$/;"	m	class:Log
directory_	core/memory/LogReader.h	/^    std::string directory_;$/;"	m	class:LogReader
directory_	core/memory/Logger.h	/^  std::string directory_, filename_;$/;"	m	class:Logger
directory_	tools/UTNaoTool/LogEditorWindow.h	/^    std::string directory_;$/;"	m	class:FrameListWidgetItem
dirty_	core/localization/ParticleFilter.h	/^    mutable bool dirty_;$/;"	m	class:ParticleFilter
disable	core/python/UTdebug.py	/^import logging; logging.disable(logging.ERROR) # kill hashlib errors from random$/;"	i
disable	core/python/init.py	/^import logging; logging.disable(logging.ERROR)$/;"	i
disableLogging	core/VisionCore.cpp	/^void VisionCore::disableLogging() {$/;"	f	class:VisionCore
disableMemoryLogging	core/VisionCore.cpp	/^void VisionCore::disableMemoryLogging() {$/;"	f	class:VisionCore
disableStreaming	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::disableStreaming() {$/;"	f	class:NaoCamera
disableTextLogging	core/MotionCore.cpp	/^void MotionCore::disableTextLogging() {$/;"	f	class:MotionCore
disableTextLogging	core/VisionCore.cpp	/^void VisionCore::disableTextLogging() {$/;"	f	class:VisionCore
disableUI	build/include/tool/UTNaoTool.cpp	/^  bool disableUI = false;$/;"	m	namespace:__anon4	file:
disableUI	tools/UTNaoTool/UTNaoTool.cpp	/^  bool disableUI = false;$/;"	m	namespace:__anon142	file:
disable_if	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	struct disable_if : public disable_if_c<Cond::value, T> {};$/;"	s	namespace:YAML
disable_if_c	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	struct disable_if_c {$/;"	s	namespace:YAML
disable_if_c	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	struct disable_if_c<true, T> {};$/;"	s	namespace:YAML
disable_log_	core/VisionCore.h	/^  bool disable_log_, is_logging_;$/;"	m	class:VisionCore
discharge2anyreg	lib/lua/src/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	lib/lua/src/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	lib/lua/src/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
disp	tools/behaviorSim/cma.py	/^    def disp(self):$/;"	m	class:BaseDataLogger
disp	tools/behaviorSim/cma.py	/^    def disp(self):$/;"	m	class:BaseDataLogger2
disp	tools/behaviorSim/cma.py	/^    def disp(self):$/;"	m	class:CMAParameters
disp	tools/behaviorSim/cma.py	/^    def disp(self, idx=100):  # r_[0:5,1e2:1e9:1e2,-10:0]):$/;"	m	class:CMADataLogger
disp	tools/behaviorSim/cma.py	/^    def disp(self, idx=100):  # r_[0:5,1e2:1e9:1e2,-10:0]):$/;"	m	class:DEAPCMADataLogger
disp	tools/behaviorSim/cma.py	/^    def disp(self, modulo=None):  # TODO: rather assign opt['verb_disp'] as default? $/;"	m	class:CMAEvolutionStrategy
disp	tools/behaviorSim/cma.py	/^    def disp(self, modulo=None):$/;"	m	class:OOOptimizer
disp	tools/behaviorSim/cma.py	/^def disp(name=None, idx=None):$/;"	f
disp_annotation	tools/behaviorSim/cma.py	/^    def disp_annotation(self):$/;"	m	class:CMAEvolutionStrategy
disp_header	tools/behaviorSim/cma.py	/^    def disp_header(self):$/;"	m	class:CMADataLogger
disp_header	tools/behaviorSim/cma.py	/^    def disp_header(self):$/;"	m	class:DEAPCMADataLogger
displacement	core/memory/OdometryBlock.h	/^  Pose2D displacement;$/;"	m	struct:OdometryBlock
displayAvailableSettings	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::displayAvailableSettings() {$/;"	f	class:NaoCamera
displayBallInfo	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::displayBallInfo(bool show){$/;"	f	class:AnalysisWidget
displayBallInfo	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::displayBallInfo(bool show){$/;"	f	class:AnalysisWidget
displayBoxes_	build/include/tool/WorldWindow.h	/^    std::map<GLDrawer::DisplayOption, QCheckBox*> displayBoxes_;$/;"	m	class:WorldWindow
displayBoxes_	tools/UTNaoTool/WorldWindow.h	/^    std::map<GLDrawer::DisplayOption, QCheckBox*> displayBoxes_;$/;"	m	class:WorldWindow
displayFilesWindow	build/include/tool/UTNaoTool.cpp	/^  bool displayFilesWindow = false;$/;"	m	namespace:__anon4	file:
displayFilesWindow	tools/UTNaoTool/UTNaoTool.cpp	/^  bool displayFilesWindow = false;$/;"	m	namespace:__anon142	file:
displayGoalInfo	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::displayGoalInfo(bool show){$/;"	f	class:AnalysisWidget
displayGoalInfo	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::displayGoalInfo(bool show){$/;"	f	class:AnalysisWidget
displayHelp	build/include/tool/UTNaoTool.cpp	/^void displayHelp() {$/;"	f
displayHelp	tools/UTNaoTool/UTNaoTool.cpp	/^void displayHelp() {$/;"	f
displayLogWindow	build/include/tool/UTNaoTool.cpp	/^  bool displayLogWindow = false;$/;"	m	namespace:__anon4	file:
displayLogWindow	tools/UTNaoTool/UTNaoTool.cpp	/^  bool displayLogWindow = false;$/;"	m	namespace:__anon142	file:
displayMotionWindow	build/include/tool/UTNaoTool.cpp	/^  bool displayMotionWindow = false;$/;"	m	namespace:__anon4	file:
displayMotionWindow	tools/UTNaoTool/UTNaoTool.cpp	/^  bool displayMotionWindow = false;$/;"	m	namespace:__anon142	file:
displayOptions	build/include/tool/MotionGLWidget.h	/^  bool displayOptions[NUM_DISPLAY_OPTIONS];$/;"	m	class:MotionGLWidget
displayOptions	tools/UTNaoTool/MotionGLWidget.h	/^  bool displayOptions[NUM_DISPLAY_OPTIONS];$/;"	m	class:MotionGLWidget
displayOptionsChanged	build/include/tool/WorldWindow.cpp	/^void WorldWindow::displayOptionsChanged(bool) {$/;"	f	class:WorldWindow
displayOptionsChanged	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::displayOptionsChanged(bool) {$/;"	f	class:WorldWindow
displayPacketData	build/include/tool/TeamPacketWidget.cpp	/^void TeamPacketWidget::displayPacketData() {$/;"	f	class:TeamPacketWidget
displayPacketData	tools/UTNaoTool/TeamPacketWidget.cpp	/^void TeamPacketWidget::displayPacketData() {$/;"	f	class:TeamPacketWidget
displayPlotWindow	build/include/tool/UTNaoTool.cpp	/^  bool displayPlotWindow = false;$/;"	m	namespace:__anon4	file:
displayPlotWindow	tools/UTNaoTool/UTNaoTool.cpp	/^  bool displayPlotWindow = false;$/;"	m	namespace:__anon142	file:
displaySimInfo	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::displaySimInfo(string simInfo){$/;"	f	class:GLDrawer
displaySimInfo	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::displaySimInfo(string simInfo){$/;"	f	class:GLDrawer
displayTeamWindow	build/include/tool/UTNaoTool.cpp	/^  bool displayTeamWindow = false;$/;"	m	namespace:__anon4	file:
displayTeamWindow	tools/UTNaoTool/UTNaoTool.cpp	/^  bool displayTeamWindow = false;$/;"	m	namespace:__anon142	file:
displayVisionWindow	build/include/tool/UTNaoTool.cpp	/^  bool displayVisionWindow = false;$/;"	m	namespace:__anon4	file:
displayVisionWindow	tools/UTNaoTool/UTNaoTool.cpp	/^  bool displayVisionWindow = false;$/;"	m	namespace:__anon142	file:
displayWorldWindow	build/include/tool/UTNaoTool.cpp	/^  bool displayWorldWindow = false;$/;"	m	namespace:__anon4	file:
displayWorldWindow	tools/UTNaoTool/UTNaoTool.cpp	/^  bool displayWorldWindow = false;$/;"	m	namespace:__anon142	file:
display_	build/include/tool/UTOpenGL/GLDrawer.h	/^    std::map<DisplayOption, bool> display_;$/;"	m	class:GLDrawer
display_	build/include/tool/WorldGLWidget.h	/^    std::map<GLDrawer::DisplayOption, bool> display_;$/;"	m	class:WorldGLWidget
display_	build/include/tool/WorldWindow.h	/^    std::map<GLDrawer::DisplayOption, bool> display_;$/;"	m	class:WorldWindow
display_	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    std::map<DisplayOption, bool> display_;$/;"	m	class:GLDrawer
display_	tools/UTNaoTool/WorldGLWidget.h	/^    std::map<GLDrawer::DisplayOption, bool> display_;$/;"	m	class:WorldGLWidget
display_	tools/UTNaoTool/WorldWindow.h	/^    std::map<GLDrawer::DisplayOption, bool> display_;$/;"	m	class:WorldWindow
displays_	build/include/tool/TeamPacketWidget.h	/^    std::map<RobotSelection,std::string> displays_;$/;"	m	class:TeamPacketWidget
displays_	tools/UTNaoTool/TeamPacketWidget.h	/^    std::map<RobotSelection,std::string> displays_;$/;"	m	class:TeamPacketWidget
dist	build/include/tool/simulation/LocalizationSimulation.h	/^  float dist;$/;"	m	struct:AgentError
dist	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  float dist;$/;"	m	struct:AgentError
distError	build/include/tool/simulation/LocalizationSimulation.h	/^  float distError;$/;"	m	struct:LocSimAgent
distError	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  float distError;$/;"	m	struct:LocSimAgent
distFromEndline	core/memory/BehaviorParamBlock.h	/^  float distFromEndline;$/;"	m	struct:CornerKickStrategy
distFromFarPost	core/memory/BehaviorParamBlock.h	/^  float distFromFarPost;$/;"	m	struct:CornerKickStrategy
distRMSE	build/include/tool/simulation/LocalizationSimulation.h	/^  float distRMSE() { return sqrtf(distError \/ steps); }$/;"	f	struct:LocSimAgent
distRMSE	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  float distRMSE() { return sqrtf(distError \/ steps); }$/;"	f	struct:LocSimAgent
distToConsider	core/memory/BehaviorParamBlock.h	/^  float distToConsider;$/;"	m	struct:PassStrategy
distance	core/common/WorldObject.h	/^  float distance; \/\/\/< Relative distance to the robot.$/;"	m	class:WorldObject
distance	core/motion/rswalk2014/types/RRCoord.hpp	/^   const float distance() const {$/;"	f	struct:RRCoord
distance	core/motion/rswalk2014/types/RRCoord.hpp	/^   float &distance() {$/;"	f	struct:RRCoord
distance	core/vision/structures/FocusArea.h	/^  inline int distance(const FocusArea& other) const {$/;"	f	struct:FocusArea
distance_	core/sonar/SonarModule.h	/^  float distance_[2];$/;"	m	class:SonarModule
distbits	lib/zlib/inflate.h	/^    unsigned distbits;          \/* index bits for distcode *\/$/;"	m	struct:inflate_state
distcode	lib/zlib/inflate.h	/^    code const FAR *distcode;   \/* starting table for distance codes *\/$/;"	m	struct:inflate_state
distfix	lib/zlib/inffixed.h	/^    static const code distfix[32] = {$/;"	v
distmatrixtype	lib/alglib/alglibmisc.h	/^    ae_int_t distmatrixtype;$/;"	m	struct:alglib_impl::__anon25
distortionCoeffs_	build/include/tool/calibration/IntrinsicCalibrator.h	/^    cv::Mat cameraMatrix_, distortionCoeffs_;$/;"	m	class:IntrinsicCalibrator
distortionCoeffs_	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^    cv::Mat cameraMatrix_, distortionCoeffs_;$/;"	m	class:IntrinsicCalibrator
div1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> div1(const U& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
div1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> div1(const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
div2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> div2(const FTypeName<T,0>& a, const U& b)$/;"	f	namespace:fadbad
div2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> div2(const FTypeName<T,N>& a, const U& b)$/;"	f	namespace:fadbad
div3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> div3(const FTypeName<T,0>& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
div3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> div3(const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
divCroot	tools/behaviorSim/cma.py	/^    def divCroot(self, mat):$/;"	m	class:CMAEvolutionStrategy
diveLeftTwo	core/python/cfgpose.py	/^diveLeftTwo = dict()$/;"	v
diveLeftTwoB	core/python/cfgpose.py	/^diveLeftTwoB = dict()$/;"	v
diveRightTwo	core/python/cfgpose.py	/^diveRightTwo = dict()$/;"	v
diveRightTwoB	core/python/cfgpose.py	/^diveRightTwoB = dict()$/;"	v
diveTypes	core/memory/BehaviorBlock.h	/^  enum diveTypes {$/;"	g	class:Dive
diving	build/include/tool/simulation/SimulatedPlayer.h	/^  int diving;$/;"	m	class:SimulatedPlayer
diving	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  int diving;$/;"	m	class:SimulatedPlayer
division	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
dk	lib/alglib/optimization.h	/^    ae_vector dk;$/;"	m	struct:alglib_impl::__anon75
dk	lib/alglib/optimization.h	/^    ae_vector dk;$/;"	m	struct:alglib_impl::__anon77
dl	lib/zlib/deflate.h	/^    } dl;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anon134
dlarmpitch_off	core/python/behaviors/custom_kick.py	/^dlarmpitch_off = 0.$/;"	v
dlarmroll_off	core/python/behaviors/custom_kick.py	/^dlarmroll_off = 0.$/;"	v
dmax	lib/zlib/inflate.h	/^    unsigned dmax;              \/* zlib header max distance (INFLATE_STRICT) *\/$/;"	m	struct:inflate_state
dn	lib/alglib/optimization.h	/^    ae_vector dn;$/;"	m	struct:alglib_impl::__anon75
dn	lib/alglib/optimization.h	/^    ae_vector dn;$/;"	m	struct:alglib_impl::__anon77
do	tools/behaviorSim/cma.py	/^    def do(self, repetitions=1, locations=np.arange(-0.5, 0.6, 0.2), plot=True):$/;"	m	class:Sections
doCoachEyes	core/python/lights.py	/^def doCoachEyes():$/;"	f
doEarLights	core/python/lights.py	/^def doEarLights():$/;"	f
doEyeBalls	core/python/lights.py	/^def doEyeBalls():$/;"	f
doEyeHeat	core/python/lights.py	/^def doEyeHeat():$/;"	f
doEyeLights	core/python/lights.py	/^def doEyeLights():$/;"	f
doEyePower	core/python/lights.py	/^def doEyePower(eye=ledsC.allBottomLeftEye):$/;"	f
doFileOperations	bin/copy_robot	/^def doFileOperations(ip,sourcePath,destPath,options,extension=None):$/;"	f
doFileOperations	build/copy_robot	/^def doFileOperations(ip,sourcePath,destPath,options,extension=None):$/;"	f
doFinishedEyeLights	core/python/lights.py	/^def doFinishedEyeLights():$/;"	f
doFootLights	core/python/lights.py	/^def doFootLights():$/;"	f
doHead	core/python/lights.py	/^def doHead():$/;"	f
doHighResBallScan	core/memory/RobotVisionBlock.h	/^  bool doHighResBallScan;$/;"	m	struct:RobotVisionBlock
doInitialEarLights	core/python/lights.py	/^def doInitialEarLights(): pass$/;"	f
doInitialEyeLights	core/python/lights.py	/^def doInitialEyeLights():$/;"	f
doLeftEyeGoal	core/python/lights.py	/^def doLeftEyeGoal():$/;"	f
doLeftEyeObjects	core/python/lights.py	/^def doLeftEyeObjects():$/;"	f
doPenaltyKickReset	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::doPenaltyKickReset(){$/;"	f	class:BehaviorSimulation
doPenaltyKickReset	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::doPenaltyKickReset(){$/;"	f	class:BehaviorSimulation
doPlayingEarLights	core/python/lights.py	/^def doPlayingEarLights():$/;"	f
doPlayingEyeLights	core/python/lights.py	/^def doPlayingEyeLights():$/;"	f
doRightEyeSonar	core/python/lights.py	/^def doRightEyeSonar():$/;"	f
doSlowStand	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::doSlowStand() {$/;"	f	class:RSWalkModule2014
doStateLights	core/python/lights.py	/^def doStateLights():$/;"	f
doStrategyCalculations	core/python/PythonModule.cpp	/^void PythonModule::doStrategyCalculations() {$/;"	f	class:PythonModule
doTestingEyeLights	core/python/lights.py	/^def doTestingEyeLights():$/;"	f
doUndo	build/include/tool/VisionWindow.cpp	/^void VisionWindow::doUndo() {$/;"	f	class:VisionWindow
doUndo	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::doUndo() {$/;"	f	class:VisionWindow
doargs	lib/lua/src/luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	file:
docall	lib/lua/src/lua.c	/^static int docall (lua_State *L, int narg, int clear) {$/;"	f	file:
doctest	tools/behaviorSim/cma.py	/^            import doctest$/;"	i
doctest	tools/behaviorSim/cma.py	/^    import doctest$/;"	i
dofile	lib/lua/src/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
doingCalibration_	build/include/tool/VisionWindow.h	/^  bool doingCalibration_, checkerboard_;$/;"	m	class:VisionWindow
doingCalibration_	tools/UTNaoTool/VisionWindow.h	/^  bool doingCalibration_, checkerboard_;$/;"	m	class:VisionWindow
doingClassification_	build/include/tool/VisionWindow.h	/^  bool doingClassification_;$/;"	m	class:VisionWindow
doingClassification_	tools/UTNaoTool/VisionWindow.h	/^  bool doingClassification_;$/;"	m	class:VisionWindow
doingSlowStand	core/motion/rswalk2014/RSWalkModule2014.cpp	/^bool RSWalkModule2014::doingSlowStand() {$/;"	f	class:RSWalkModule2014
dojump	lib/lua/src/lvm.c	/^#define dojump(/;"	d	file:
dolibrary	lib/lua/src/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
done	lib/zlib/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s
dooptions	lib/lua/src/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
dostring	lib/lua/src/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dot	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
dot	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
dotProduct	core/math/YaMatrix.h	/^  V dotProduct(const YaVector<V>& other)$/;"	f	class:YaVector
dottedPathPoints	core/memory/BehaviorBlock.h	/^  std::vector<Point2D> dottedPathPoints;$/;"	m	struct:BehaviorBlock
dotty	lib/lua/src/lua.c	/^static void dotty (lua_State *L) {$/;"	f	file:
doubleDiff	core/vision/structures/Blob.h	/^  float doubleDiff;$/;"	m	struct:Blob
doubleDiff	core/vision/structures/LineStackInfo.h	/^  float doubleDiff;$/;"	m	struct:LineStackInfo
doublePrecision	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^        int doublePrecision;$/;"	m	struct:YAML::_Precision
double_support_frac_	core/motion/WalkEngineParameters.h	/^  float double_support_frac_;$/;"	m	struct:WalkEngineParameters
downloadAll	install/install_naoqi	/^def downloadAll():$/;"	f
downloadCross	install/install_naoqi	/^def downloadCross():$/;"	f
downloadIncludes	install/install_naoqi	/^def downloadIncludes():$/;"	f
downloadLinkLibs	install/install_naoqi	/^def downloadLinkLibs():$/;"	f
downloadSDK	install/install_naoqi	/^def downloadSDK():$/;"	f
downsampling	tools/behaviorSim/cma.py	/^    def downsampling(self, factor=10, first=3, switch=True):$/;"	m	class:CMADataLogger
downsampling	tools/behaviorSim/cma.py	/^    def downsampling(self, factor=10, first=3, switch=True):$/;"	m	class:DEAPCMADataLogger
dpitch_off	core/python/behaviors/custom_kick.py	/^dpitch_off = 0.$/;"	v
dragEnd	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::dragEnd(Point2D,Point2D,Qt::MouseButton) {$/;"	f	class:WorldGLWidget
dragEnd	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::dragEnd(Point2D,Point2D,Qt::MouseButton) {$/;"	f	class:WorldGLWidget
dragInfo_	build/include/tool/WorldGLWidget.h	/^    } dragInfo_;$/;"	m	class:WorldGLWidget	typeref:struct:WorldGLWidget::__anon7
dragInfo_	tools/UTNaoTool/WorldGLWidget.h	/^    } dragInfo_;$/;"	m	class:WorldGLWidget	typeref:struct:WorldGLWidget::__anon145
dragStart	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::dragStart(Point2D start, Point2D end, Qt::MouseButton button) {$/;"	f	class:WorldGLWidget
dragStart	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::dragStart(Point2D start, Point2D end, Qt::MouseButton button) {$/;"	f	class:WorldGLWidget
dragging	build/include/tool/WorldGLWidget.h	/^      bool dragging;$/;"	m	struct:WorldGLWidget::__anon7
dragging	tools/UTNaoTool/WorldGLWidget.h	/^      bool dragging;$/;"	m	struct:WorldGLWidget::__anon145
drarmpitch_off	core/python/behaviors/custom_kick.py	/^drarmpitch_off = 0.$/;"	v
drarmroll_off	core/python/behaviors/custom_kick.py	/^drarmroll_off = 0.$/;"	v
draw	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::draw() {$/;"	f	class:MotionGLWidget
draw	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::draw(const map<DisplayOption,bool>& displayOptions) {$/;"	f	class:GLDrawer
draw	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::draw() {$/;"	f	class:WorldGLWidget
draw	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::draw(Simulation* simulation) {$/;"	f	class:WorldGLWidget
draw	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::draw() {$/;"	f	class:MotionGLWidget
draw	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::draw(const map<DisplayOption,bool>& displayOptions) {$/;"	f	class:GLDrawer
draw	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::draw() {$/;"	f	class:WorldGLWidget
draw	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::draw(Simulation* simulation) {$/;"	f	class:WorldGLWidget
draw	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
drawAbsFeetTargets	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawAbsFeetTargets(){$/;"	f	class:MotionGLWidget
drawAbsFeetTargets	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawAbsFeetTargets(){$/;"	f	class:MotionGLWidget
drawAllTeamPackets	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawAllTeamPackets(){$/;"	f	class:GLDrawer
drawAllTeamPackets	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawAllTeamPackets(){$/;"	f	class:GLDrawer
drawAlternateRobots	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawAlternateRobots(vector<MemoryCache> caches) {$/;"	f	class:GLDrawer
drawAlternateRobots	build/include/tool/UTOpenGL/GLDrawer.h	/^    void drawAlternateRobots(MemoryCache c) { std::vector<MemoryCache> cv = { c }; drawAlternateRobots(cv); }$/;"	f	class:GLDrawer
drawAlternateRobots	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawAlternateRobots(vector<MemoryCache> caches) {$/;"	f	class:GLDrawer
drawAlternateRobots	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    void drawAlternateRobots(MemoryCache c) { std::vector<MemoryCache> cv = { c }; drawAlternateRobots(cv); }$/;"	f	class:GLDrawer
drawAnnotations	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawAnnotations() {$/;"	f	class:GLDrawer
drawAnnotations	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawAnnotations() {$/;"	f	class:GLDrawer
drawArc	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawArc(float startAngle, float endAngle, float radius) {$/;"	f	class:BasicGL
drawArc	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawArc(float x, float y, float z, float startAng, float endAng, float radius){$/;"	f	class:BasicGL
drawArc	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawArc(float startAngle, float endAngle, float radius) {$/;"	f	class:BasicGL
drawArc	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawArc(float x, float y, float z, float startAng, float endAng, float radius){$/;"	f	class:BasicGL
drawArrow	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawArrow(Point2D start, Point2D end) {$/;"	f	class:BasicGL
drawArrow	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawArrow(Point2D start, Point2D end, RGB lineColor, RGB headColor, float alpha, float width) {$/;"	f	class:BasicGL
drawArrow	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawArrow(Point2D start, Point2D end) {$/;"	f	class:BasicGL
drawArrow	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawArrow(Point2D start, Point2D end, RGB lineColor, RGB headColor, float alpha, float width) {$/;"	f	class:BasicGL
drawBall	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawBall(){$/;"	f	class:GLDrawer
drawBall	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBall(Point2D p, float alpha) {$/;"	f	class:ObjectsGL
drawBall	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::drawBall(ImageWidget* image) {$/;"	f	class:VisionWindow
drawBall	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawBall(){$/;"	f	class:GLDrawer
drawBall	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBall(Point2D p, float alpha) {$/;"	f	class:ObjectsGL
drawBall	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::drawBall(ImageWidget* image) {$/;"	f	class:VisionWindow
drawBallCands	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::drawBallCands(ImageWidget* image) {$/;"	f	class:VisionWindow
drawBallCands	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::drawBallCands(ImageWidget* image) {$/;"	f	class:VisionWindow
drawBallColor	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBallColor(Point2D p, float alpha, RGB color){$/;"	f	class:ObjectsGL
drawBallColor	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBallColor(Point2D p, float alpha, RGB color){$/;"	f	class:ObjectsGL
drawBallVel	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBallVel(Point2D p, Vector2D vel, float alpha) {$/;"	f	class:ObjectsGL
drawBallVel	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBallVel(Point2D p, Vector2D vel, float alpha) {$/;"	f	class:ObjectsGL
drawBallVelColor	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBallVelColor(Point2D p, Vector2D vel, float alpha, RGB color) {$/;"	f	class:ObjectsGL
drawBallVelColor	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBallVelColor(Point2D p, Vector2D vel, float alpha, RGB color) {$/;"	f	class:ObjectsGL
drawBeacon	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBeacon(Point2D p, RGB topColor, RGB bottomColor, float alpha) {$/;"	f	class:ObjectsGL
drawBeacon	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawBeacon(Point2D p, RGB topColor, RGB bottomColor, float alpha) {$/;"	f	class:ObjectsGL
drawBeacons	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawBeacons() {$/;"	f	class:GLDrawer
drawBeacons	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::drawBeacons(ImageWidget* image) {$/;"	f	class:VisionWindow
drawBeacons	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawBeacons() {$/;"	f	class:GLDrawer
drawBeacons	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::drawBeacons(ImageWidget* image) {$/;"	f	class:VisionWindow
drawBodyModel	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawBodyModel(BodyModelBlock* bm_, RGB color){$/;"	f	class:MotionGLWidget
drawBodyModel	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawBodyModel(BodyModelBlock* bm_, RGB color){$/;"	f	class:MotionGLWidget
drawBodyModelFromJointCommands	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawBodyModelFromJointCommands(){$/;"	f	class:MotionGLWidget
drawBodyModelFromJointCommands	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawBodyModelFromJointCommands(){$/;"	f	class:MotionGLWidget
drawBodyModelFromJointValues	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawBodyModelFromJointValues(){$/;"	f	class:MotionGLWidget
drawBodyModelFromJointValues	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawBodyModelFromJointValues(){$/;"	f	class:MotionGLWidget
drawBodyModelFromKeyframe	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawBodyModelFromKeyframe(Keyframe keyframe){$/;"	f	class:MotionGLWidget
drawBodyModelFromKeyframe	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawBodyModelFromKeyframe(Keyframe keyframe){$/;"	f	class:MotionGLWidget
drawCenterCircle	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawCenterCircle(Point2D p, float alpha){$/;"	f	class:ObjectsGL
drawCenterCircle	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawCenterCircle(Point2D p, float alpha){$/;"	f	class:ObjectsGL
drawCircle	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawCircle(float radius) {$/;"	f	class:BasicGL
drawCircle	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawCircle(float radius) {$/;"	f	class:BasicGL
drawCoM	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawCoM(Vector3<float> CoM) {$/;"	f	class:RobotGL
drawCoM	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawCoM(Vector3<float> CoM) {$/;"	f	class:RobotGL
drawCoachBallPackets	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawCoachBallPackets() {$/;"	f	class:GLDrawer
drawCoachBallPackets	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawCoachBallPackets() {$/;"	f	class:GLDrawer
drawCone	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawCone(Point2D start, Point2D end, float z, float radius) {$/;"	f	class:BasicGL
drawCone	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawCone(Point2D start, Point2D end, float z, float radius) {$/;"	f	class:BasicGL
drawCrossBar	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawCrossBar(Point2D goalCenter) {$/;"	f	class:ObjectsGL
drawCrossBar	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawCrossBar(Point2D goalCenter) {$/;"	f	class:ObjectsGL
drawCylinder	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawCylinder(float radius, float height) {$/;"	f	class:BasicGL
drawCylinder	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawCylinder(float x1, float y1, float z1, float x2,float y2, float z2, float startRadius, float endRadius,int subdivisions)$/;"	f	class:BasicGL
drawCylinder	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawCylinder(float radius, float height) {$/;"	f	class:BasicGL
drawCylinder	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawCylinder(float x1, float y1, float z1, float x2,float y2, float z2, float startRadius, float endRadius,int subdivisions)$/;"	f	class:BasicGL
drawEllipse	build/include/tool/ImageWidget.cpp	/^void ImageWidget::drawEllipse(UTEllipse* ellipse){$/;"	f	class:ImageWidget
drawEllipse	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawEllipse(Matrix2f covariance) {$/;"	f	class:BasicGL
drawEllipse	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawEllipse(Point2D radius) {$/;"	f	class:BasicGL
drawEllipse	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawEllipse(float xradius, float yradius) {$/;"	f	class:BasicGL
drawEllipse	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::drawEllipse(UTEllipse* ellipse){$/;"	f	class:ImageWidget
drawEllipse	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawEllipse(Matrix2f covariance) {$/;"	f	class:BasicGL
drawEllipse	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawEllipse(Point2D radius) {$/;"	f	class:BasicGL
drawEllipse	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawEllipse(float xradius, float yradius) {$/;"	f	class:BasicGL
drawField	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawField() {$/;"	f	class:GLDrawer
drawField	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawField() {$/;"	f	class:GLDrawer
drawFieldLine	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawFieldLine(Point2D start, Point2D end) {$/;"	f	class:ObjectsGL
drawFieldLine	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawFieldLine(Point2D start, Point2D end) {$/;"	f	class:ObjectsGL
drawFilteredOpponents	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawFilteredOpponents(){$/;"	f	class:GLDrawer
drawFilteredOpponents	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawFilteredOpponents(){$/;"	f	class:GLDrawer
drawFoot	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawFoot(Pose3D &foot, RGB &color) {$/;"	f	class:MotionGLWidget
drawFoot	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawFoot(RGB color, Vector2<float> pt1, Vector2<float> pt2, Vector2<float> pt3, Vector2<float> pt4, float height){$/;"	f	class:RobotGL
drawFoot	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawFoot(RGB color, Vector3<float> pt1, Vector3<float> pt2, Vector3<float> pt3, Vector3<float> pt4){$/;"	f	class:RobotGL
drawFoot	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawFoot(RGB color, Vector3<float> pt1, Vector3<float> pt2, Vector3<float> pt3, Vector3<float> pt4, float height){$/;"	f	class:RobotGL
drawFoot	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawFoot(Pose3D &foot, RGB &color) {$/;"	f	class:MotionGLWidget
drawFoot	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawFoot(RGB color, Vector2<float> pt1, Vector2<float> pt2, Vector2<float> pt3, Vector2<float> pt4, float height){$/;"	f	class:RobotGL
drawFoot	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawFoot(RGB color, Vector3<float> pt1, Vector3<float> pt2, Vector3<float> pt3, Vector3<float> pt4){$/;"	f	class:RobotGL
drawFoot	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawFoot(RGB color, Vector3<float> pt1, Vector3<float> pt2, Vector3<float> pt3, Vector3<float> pt4, float height){$/;"	f	class:RobotGL
drawFootCommand	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawFootCommand(Vector3<float> command) {$/;"	f	class:RobotGL
drawFootCommand	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawFootCommand(Vector3<float> command) {$/;"	f	class:RobotGL
drawGoal	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawGoal(Point2D goalCenter) { $/;"	f	class:ObjectsGL
drawGoal	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawGoal(Point2D p1, float alpha) {$/;"	f	class:ObjectsGL
drawGoal	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawGoal(Point2D goalCenter) { $/;"	f	class:ObjectsGL
drawGoal	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawGoal(Point2D p1, float alpha) {$/;"	f	class:ObjectsGL
drawGoalPost	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawGoalPost(Point2D p) {$/;"	f	class:ObjectsGL
drawGoalPost	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawGoalPost(Point2D p) {$/;"	f	class:ObjectsGL
drawGreenCarpet	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawGreenCarpet() {$/;"	f	class:ObjectsGL
drawGreenCarpet	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawGreenCarpet() {$/;"	f	class:ObjectsGL
drawGroundCoM	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawGroundCoM(Vector3<float> CoM) {$/;"	f	class:RobotGL
drawGroundCoM	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawGroundCoM(Vector3<float> CoM) {$/;"	f	class:RobotGL
drawGtOpponents	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawGtOpponents() {$/;"	f	class:GLDrawer
drawGtOpponents	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawGtOpponents() {$/;"	f	class:GLDrawer
drawHorizonLine	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::drawHorizonLine(ImageWidget *image) {$/;"	f	class:VisionWindow
drawHorizonLine	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::drawHorizonLine(ImageWidget *image) {$/;"	f	class:VisionWindow
drawIntersection	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawIntersection(Point2D p, float alpha) {$/;"	f	class:ObjectsGL
drawIntersection	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawIntersection(Point2D p, float alpha) {$/;"	f	class:ObjectsGL
drawKeyframe	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawKeyframe(const Keyframe& keyframe) {$/;"	f	class:MotionGLWidget
drawKeyframe	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawKeyframe(const Keyframe& keyframe) {$/;"	f	class:MotionGLWidget
drawKickChoices	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawKickChoices(){$/;"	f	class:GLDrawer
drawKickChoices	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawKickChoices(){$/;"	f	class:GLDrawer
drawKickFootTarget	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawKickFootTarget(){$/;"	f	class:MotionGLWidget
drawKickFootTarget	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawKickFootTarget(){$/;"	f	class:MotionGLWidget
drawKickSpline	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawKickSpline(bool names){$/;"	f	class:MotionGLWidget
drawKickSpline	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawKickSpline(bool names){$/;"	f	class:MotionGLWidget
drawLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Point2D p1, Point2D p2) {$/;"	f	class:BasicGL
drawLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Point2D p1, Point2D p2, double z) {$/;"	f	class:BasicGL
drawLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Pose3D x1, Pose3D x2) {$/;"	f	class:BasicGL
drawLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Vector2<float> p1, Vector2<float> p2) {$/;"	f	class:BasicGL
drawLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Vector3<float> x1, Vector3<float> x2) {$/;"	f	class:BasicGL
drawLine	core/vision/utils.h	/^inline void drawLine(unsigned char* img, int x1, int y1, int x2, int y2, Color c)$/;"	f
drawLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Point2D p1, Point2D p2) {$/;"	f	class:BasicGL
drawLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Point2D p1, Point2D p2, double z) {$/;"	f	class:BasicGL
drawLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Pose3D x1, Pose3D x2) {$/;"	f	class:BasicGL
drawLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Vector2<float> p1, Vector2<float> p2) {$/;"	f	class:BasicGL
drawLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawLine(Vector3<float> x1, Vector3<float> x2) {$/;"	f	class:BasicGL
drawLine	vision_testing/src/vision_testing.cpp	/^void drawLine(unsigned char* img, int x1, int y1, int x2, int y2, unsigned char r, unsigned char g, unsigned char b)$/;"	f
drawLinePoint	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawLinePoint(Point2D p, float alpha) {$/;"	f	class:ObjectsGL
drawLinePoint	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawLinePoint(Point2D p, float alpha) {$/;"	f	class:ObjectsGL
drawLiveKickRegion	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawLiveKickRegion(){$/;"	f	class:GLDrawer
drawLiveKickRegion	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawLiveKickRegion(){$/;"	f	class:GLDrawer
drawObservationLine	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawObservationLine(Vector3<float> origin, Vector3<float> end, RGB color) {$/;"	f	class:LocalizationGL
drawObservationLine	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawObservationLine(Vector3<float> origin, Vector3<float> end, RGB color) {$/;"	f	class:LocalizationGL
drawOdometry	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawOdometry(){$/;"	f	class:GLDrawer
drawOdometry	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawOdometry(Point2D loc, AngRad ori, OdometryBlock* odometry){$/;"	f	class:LocalizationGL
drawOdometry	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawOdometry(){$/;"	f	class:GLDrawer
drawOdometry	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawOdometry(Point2D loc, AngRad ori, OdometryBlock* odometry){$/;"	f	class:LocalizationGL
drawParticles	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawParticles(const std::vector<Particle>& particles) {$/;"	f	class:LocalizationGL
drawParticles	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawParticles(const std::vector<Particle>& particles) {$/;"	f	class:LocalizationGL
drawPathPoints	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawPathPoints(){$/;"	f	class:GLDrawer
drawPathPoints	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawPathPoints(){$/;"	f	class:GLDrawer
drawPen	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawPen(RGB color, Vector2<float> val, float time){$/;"	f	class:MotionGLWidget
drawPen	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawPen(RGB color, Vector2<float> val, float time){$/;"	f	class:MotionGLWidget
drawPenaltyCross	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawPenaltyCross(Point2D p, float alpha){$/;"	f	class:ObjectsGL
drawPenaltyCross	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawPenaltyCross(Point2D p, float alpha){$/;"	f	class:ObjectsGL
drawPoint	core/vision/utils.h	/^inline void drawPoint(unsigned char* img, int x, int y, Color c)$/;"	f
drawPoint	vision_testing/src/vision_testing.cpp	/^void drawPoint(unsigned char* img, int x, int y, unsigned char r, unsigned char g, unsigned char b)$/;"	f
drawPolygon	build/include/tool/ImageWidget.cpp	/^void ImageWidget::drawPolygon(UTPolygon* poly) {$/;"	f	class:ImageWidget
drawPolygon	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::drawPolygon(UTPolygon* poly) {$/;"	f	class:ImageWidget
drawPost	build/include/tool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawPost(Point2D p1, float alpha) {$/;"	f	class:ObjectsGL
drawPost	tools/UTNaoTool/UTOpenGL/ObjectsGL.cpp	/^void ObjectsGL::drawPost(Point2D p1, float alpha) {$/;"	f	class:ObjectsGL
drawPrism	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawPrism(Vector3<float> v0, Vector3<float> v1, Vector3<float> v2, Vector3<float> v3) {$/;"	f	class:BasicGL
drawPrism	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawPrism(Vector3f v0, Vector3f v1, Vector3f v2, Vector3f v3) {$/;"	f	class:BasicGL
drawPrism	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawPrism(Vector3<float> v0, Vector3<float> v1, Vector3<float> v2, Vector3<float> v3) {$/;"	f	class:BasicGL
drawPrism	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawPrism(Vector3f v0, Vector3f v1, Vector3f v2, Vector3f v3) {$/;"	f	class:BasicGL
drawRawImage	build/include/tool/CameraWindow.cpp	/^void CameraWindow::drawRawImage(ImageWidget *image) {$/;"	f	class:CameraWindow
drawRawImage	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::drawRawImage(ImageWidget* widget) {$/;"	f	class:VisionWindow
drawRawImage	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::drawRawImage(ImageWidget *image) {$/;"	f	class:CameraWindow
drawRawImage	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::drawRawImage(ImageWidget* widget) {$/;"	f	class:VisionWindow
drawRectangle	build/include/tool/ImageWidget.cpp	/^void ImageWidget::drawRectangle(UTRectangle* rectangle, bool map){$/;"	f	class:ImageWidget
drawRectangle	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawRectangle(Vector3<float>  x1, Vector3<float>  x2,  Vector3<float>  x3,  Vector3<float>  x4) {$/;"	f	class:BasicGL
drawRectangle	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::drawRectangle(UTRectangle* rectangle, bool map){$/;"	f	class:ImageWidget
drawRectangle	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawRectangle(Vector3<float>  x1, Vector3<float>  x2,  Vector3<float>  x3,  Vector3<float>  x4) {$/;"	f	class:BasicGL
drawRectangleAtHeight	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawRectangleAtHeight(Vector2<float> x1, Vector2<float> x2, Vector2<float> x3, Vector2<float> x4, float height){$/;"	f	class:BasicGL
drawRectangleAtHeight	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawRectangleAtHeight(Vector3<float> x1, Vector3<float> x2, Vector3<float> x3, Vector3<float> x4, float height){$/;"	f	class:BasicGL
drawRectangleAtHeight	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawRectangleAtHeight(Vector2<float> x1, Vector2<float> x2, Vector2<float> x3, Vector2<float> x4, float height){$/;"	f	class:BasicGL
drawRectangleAtHeight	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawRectangleAtHeight(Vector3<float> x1, Vector3<float> x2, Vector3<float> x3, Vector3<float> x4, float height){$/;"	f	class:BasicGL
drawRelativeObjectUncerts	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawRelativeObjectUncerts(WorldObjectBlock* gtObjects, WorldObjectBlock* beliefObjects, RobotStateBlock* robotState, LocalizationBlock* localization) {$/;"	f	class:LocalizationGL
drawRelativeObjectUncerts	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawRelativeObjectUncerts(WorldObjectBlock* gtObjects, WorldObjectBlock* beliefObjects, RobotStateBlock* robotState, LocalizationBlock* localization) {$/;"	f	class:LocalizationGL
drawRelativeObjects	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawRelativeObjects(WorldObjectBlock* gtObjects, WorldObjectBlock* beliefObjects, RobotStateBlock* robotState) {$/;"	f	class:LocalizationGL
drawRelativeObjects	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawRelativeObjects(WorldObjectBlock* gtObjects, WorldObjectBlock* beliefObjects, RobotStateBlock* robotState) {$/;"	f	class:LocalizationGL
drawRgbImage	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::drawRgbImage(ImageWidget *widget) {$/;"	f	class:color_classifier::ClassificationWindow
drawRobot	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawRobot(){$/;"	f	class:GLDrawer
drawRobot	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawRobot(){$/;"	f	class:GLDrawer
drawSeenOpponents	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawSeenOpponents(){$/;"	f	class:GLDrawer
drawSeenOpponents	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawSeenOpponents(){$/;"	f	class:GLDrawer
drawSegImage	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::drawSegImage(ImageWidget *widget) {$/;"	f	class:color_classifier::ClassificationWindow
drawSegmentedImage	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::drawSegmentedImage(ImageWidget *image) {$/;"	f	class:VisionWindow
drawSegmentedImage	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::drawSegmentedImage(ImageWidget *image) {$/;"	f	class:VisionWindow
drawSelection	build/include/tool/ImageWidget.cpp	/^void ImageWidget::drawSelection(){$/;"	f	class:ImageWidget
drawSelection	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::drawSelection(){$/;"	f	class:ImageWidget
drawSelectionEllipse	build/include/tool/ImageWidget.cpp	/^void ImageWidget::drawSelectionEllipse(){$/;"	f	class:ImageWidget
drawSelectionEllipse	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::drawSelectionEllipse(){$/;"	f	class:ImageWidget
drawSelectionPolygon	build/include/tool/ImageWidget.cpp	/^void ImageWidget::drawSelectionPolygon(){$/;"	f	class:ImageWidget
drawSelectionPolygon	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::drawSelectionPolygon(){$/;"	f	class:ImageWidget
drawSelectionRectangle	build/include/tool/ImageWidget.cpp	/^void ImageWidget::drawSelectionRectangle(bool map){$/;"	f	class:ImageWidget
drawSelectionRectangle	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::drawSelectionRectangle(bool map){$/;"	f	class:ImageWidget
drawSequence	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawSequence(const Keyframe& start, const Keyframe& finish, int cframe) {$/;"	f	class:MotionGLWidget
drawSequence	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawSequence(const Keyframe& start, const Keyframe& finish, int cframe) {$/;"	f	class:MotionGLWidget
drawSimRobots	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawSimRobots(vector<MemoryCache> caches) {$/;"	f	class:GLDrawer
drawSimRobots	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawSimRobots(vector<MemoryCache> caches) {$/;"	f	class:GLDrawer
drawSimpleRobot	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawSimpleRobot() {$/;"	f	class:RobotGL
drawSimpleRobot	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawSimpleRobot(Point2D loc, double orientation, bool fallen) {$/;"	f	class:RobotGL
drawSimpleRobot	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawSimpleRobot(WorldObject* self, bool fallen) {$/;"	f	class:RobotGL
drawSimpleRobot	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawSimpleRobot() {$/;"	f	class:RobotGL
drawSimpleRobot	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawSimpleRobot(Point2D loc, double orientation, bool fallen) {$/;"	f	class:RobotGL
drawSimpleRobot	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawSimpleRobot(WorldObject* self, bool fallen) {$/;"	f	class:RobotGL
drawSmallSegmentedImage	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::drawSmallSegmentedImage(ImageWidget *image) {$/;"	f	class:VisionWindow
drawSmallSegmentedImage	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::drawSmallSegmentedImage(ImageWidget *image) {$/;"	f	class:VisionWindow
drawSolidLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Point2D p1, Point2D p2) {$/;"	f	class:BasicGL
drawSolidLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Point2D p1, Point2D p2, double z) {$/;"	f	class:BasicGL
drawSolidLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Pose3D x1, Pose3D x2) {$/;"	f	class:BasicGL
drawSolidLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Vector2<float> p1, Vector2<float> p2) {$/;"	f	class:BasicGL
drawSolidLine	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Vector3<float> x1, Vector3<float> x2) {$/;"	f	class:BasicGL
drawSolidLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Point2D p1, Point2D p2) {$/;"	f	class:BasicGL
drawSolidLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Point2D p1, Point2D p2, double z) {$/;"	f	class:BasicGL
drawSolidLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Pose3D x1, Pose3D x2) {$/;"	f	class:BasicGL
drawSolidLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Vector2<float> p1, Vector2<float> p2) {$/;"	f	class:BasicGL
drawSolidLine	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSolidLine(Vector3<float> x1, Vector3<float> x2) {$/;"	f	class:BasicGL
drawSphere	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSphere(Vector3<float> x,float radius) {$/;"	f	class:BasicGL
drawSphere	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSphere(float radius) {$/;"	f	class:BasicGL
drawSphere	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSphere(float x, float y, float z,float radius) {$/;"	f	class:BasicGL
drawSphere	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSphere(Vector3<float> x,float radius) {$/;"	f	class:BasicGL
drawSphere	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSphere(float radius) {$/;"	f	class:BasicGL
drawSphere	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSphere(float x, float y, float z,float radius) {$/;"	f	class:BasicGL
drawStaticKickRegion	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawStaticKickRegion(){$/;"	f	class:GLDrawer
drawStaticKickRegion	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawStaticKickRegion(){$/;"	f	class:GLDrawer
drawStep	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawStep(WalkEngineBlock::Step s, bool draw_on_ground){$/;"	f	class:MotionGLWidget
drawStep	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawStep(WalkEngineBlock::Step s, bool draw_on_ground){$/;"	f	class:MotionGLWidget
drawSteps	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawSteps(){$/;"	f	class:MotionGLWidget
drawSteps	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawSteps(){$/;"	f	class:MotionGLWidget
drawStickFigure	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawStickFigure(Vector3<float> *pos,RGB body_color, RGB left_color, RGB right_color) {$/;"	f	class:RobotGL
drawStickFigure	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawStickFigure(Vector3<float> *pos,RGB body_color, RGB left_color, RGB right_color) {$/;"	f	class:RobotGL
drawStoredSelections	build/include/tool/ImageWidget.cpp	/^void ImageWidget::drawStoredSelections() {$/;"	f	class:ImageWidget
drawStoredSelections	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::drawStoredSelections() {$/;"	f	class:ImageWidget
drawSurface	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSurface(Vector3<float> v0, Vector3<float> v1, Vector3<float> v2, Vector3<float> v3) {$/;"	f	class:BasicGL
drawSurface	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSurface(Vector3f v0, Vector3f v1, Vector3f v2, Vector3f v3) {$/;"	f	class:BasicGL
drawSurface	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSurface(Vector3<float> v0, Vector3<float> v1, Vector3<float> v2, Vector3<float> v3) {$/;"	f	class:BasicGL
drawSurface	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::drawSurface(Vector3f v0, Vector3f v1, Vector3f v2, Vector3f v3) {$/;"	f	class:BasicGL
drawSwingFoot	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawSwingFoot(){$/;"	f	class:MotionGLWidget
drawSwingFoot	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawSwingFoot(){$/;"	f	class:MotionGLWidget
drawTargetPoint	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawTargetPoint(){$/;"	f	class:MotionGLWidget
drawTargetPoint	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTargetPoint(){$/;"	f	class:GLDrawer
drawTargetPoint	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawTargetPoint(){$/;"	f	class:MotionGLWidget
drawTargetPoint	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTargetPoint(){$/;"	f	class:GLDrawer
drawTeamBallPackets	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTeamBallPackets() {$/;"	f	class:GLDrawer
drawTeamBallPackets	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTeamBallPackets() {$/;"	f	class:GLDrawer
drawTeamPackets	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTeamPackets(int id, bool white){$/;"	f	class:GLDrawer
drawTeamPackets	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTeamPackets(int id, bool white){$/;"	f	class:GLDrawer
drawTeammates	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTeammates(){$/;"	f	class:GLDrawer
drawTeammates	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTeammates(){$/;"	f	class:GLDrawer
drawTiltedRobot	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawTiltedRobot(Point2D loc, double height, double orient, double tilt, double roll){$/;"	f	class:RobotGL
drawTiltedRobot	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawTiltedRobot(Point2D loc, double orient, double tilt, double roll){$/;"	f	class:RobotGL
drawTiltedRobot	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawTiltedRobot(Pose2D pose, double tilt, double roll) {$/;"	f	class:RobotGL
drawTiltedRobot	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawTiltedRobot(Point2D loc, double height, double orient, double tilt, double roll){$/;"	f	class:RobotGL
drawTiltedRobot	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawTiltedRobot(Point2D loc, double orient, double tilt, double roll){$/;"	f	class:RobotGL
drawTiltedRobot	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawTiltedRobot(Pose2D pose, double tilt, double roll) {$/;"	f	class:RobotGL
drawTrueSimLocations	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTrueSimLocations(vector<MemoryCache> gtcaches){$/;"	f	class:GLDrawer
drawTrueSimLocations	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTrueSimLocations(vector<MemoryCache> gtcaches){$/;"	f	class:GLDrawer
drawTruthBall	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTruthBall(){$/;"	f	class:GLDrawer
drawTruthBall	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTruthBall(){$/;"	f	class:GLDrawer
drawTruthRobot	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTruthRobot(){$/;"	f	class:GLDrawer
drawTruthRobot	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawTruthRobot(){$/;"	f	class:GLDrawer
drawUncertaintyAngle	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyAngle(Point2D loc, double orientation, double sdOri) {$/;"	f	class:LocalizationGL
drawUncertaintyAngle	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyAngle(Pose2D pose, double var) {$/;"	f	class:LocalizationGL
drawUncertaintyAngle	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyAngle(Point2D loc, double orientation, double sdOri) {$/;"	f	class:LocalizationGL
drawUncertaintyAngle	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyAngle(Pose2D pose, double var) {$/;"	f	class:LocalizationGL
drawUncertaintyEllipse	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyEllipse(Point2D loc, Matrix2f cov) {$/;"	f	class:LocalizationGL
drawUncertaintyEllipse	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyEllipse(Point2D loc, Point2D sd) {$/;"	f	class:LocalizationGL
drawUncertaintyEllipse	build/include/tool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyEllipse(Pose2D pose, Matrix2f cov) {$/;"	f	class:LocalizationGL
drawUncertaintyEllipse	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyEllipse(Point2D loc, Matrix2f cov) {$/;"	f	class:LocalizationGL
drawUncertaintyEllipse	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyEllipse(Point2D loc, Point2D sd) {$/;"	f	class:LocalizationGL
drawUncertaintyEllipse	tools/UTNaoTool/UTOpenGL/LocalizationGL.cpp	/^void LocalizationGL::drawUncertaintyEllipse(Pose2D pose, Matrix2f cov) {$/;"	f	class:LocalizationGL
drawVBase	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawVBase(Vector3<float> vBase) {$/;"	f	class:RobotGL
drawVBase	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawVBase(Vector3<float> vBase) {$/;"	f	class:RobotGL
drawVisionRange	build/include/tool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawVisionRange(Point2D loc, double orientation, double yaw, double pitch) {$/;"	f	class:RobotGL
drawVisionRange	tools/UTNaoTool/UTOpenGL/RobotGL.cpp	/^void RobotGL::drawVisionRange(Point2D loc, double orientation, double yaw, double pitch) {$/;"	f	class:RobotGL
drawVisionRanges	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawVisionRanges(vector<MemoryCache> caches){$/;"	f	class:GLDrawer
drawVisionRanges	build/include/tool/UTOpenGL/GLDrawer.h	/^    void drawVisionRanges(MemoryCache c) { std::vector<MemoryCache> cv = { c }; drawVisionRanges(cv); }$/;"	f	class:GLDrawer
drawVisionRanges	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::drawVisionRanges(vector<MemoryCache> caches){$/;"	f	class:GLDrawer
drawVisionRanges	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    void drawVisionRanges(MemoryCache c) { std::vector<MemoryCache> cv = { c }; drawVisionRanges(cv); }$/;"	f	class:GLDrawer
drawWithNames	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawWithNames() {$/;"	f	class:MotionGLWidget
drawWithNames	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawWithNames() {$/;"	f	class:MotionGLWidget
drawWorldObject	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::drawWorldObject(ImageWidget* image, QColor color, int worldObjectID) {$/;"	f	class:VisionWindow
drawWorldObject	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::drawWorldObject(ImageWidget* image, QColor color, int worldObjectID) {$/;"	f	class:VisionWindow
drawZmp	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawZmp(RGB color, Vector2<float> val, float time){$/;"	f	class:MotionGLWidget
drawZmp	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawZmp(RGB color, Vector2<float> val, float time){$/;"	f	class:MotionGLWidget
drawZmpTrajectory	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::drawZmpTrajectory(RGB color, RingQueue<Vector2<float>, 100> zmp){$/;"	f	class:MotionGLWidget
drawZmpTrajectory	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::drawZmpTrajectory(RGB color, RingQueue<Vector2<float>, 100> zmp){$/;"	f	class:MotionGLWidget
drawer_	build/include/tool/WorldGLWidget.h	/^    GLDrawer drawer_;$/;"	m	class:WorldGLWidget
drawer_	tools/UTNaoTool/WorldGLWidget.h	/^    GLDrawer drawer_;$/;"	m	class:WorldGLWidget
drep	lib/alglib/optimization.h	/^    ae_bool drep;$/;"	m	struct:alglib_impl::__anon77
dribble	core/python/behaviors/win.py	/^  dribble=3$/;"	v	class:AttackingStates
dribbleEngine	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^      DribbleEngine* dribbleEngine;$/;"	m	class:WalkEnginePreProcessor
dribbleState	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^         DribbleState dribbleState;$/;"	m	class:WalkEnginePreProcessor::DribbleEngine
dribbleTimer	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^         Timer dribbleTimer;$/;"	m	class:WalkEnginePreProcessor::DribbleEngine
droll_off	core/python/behaviors/custom_kick.py	/^droll_off = 0.$/;"	v
dropInTeam	core/communications/RoboCupGameControlData.h	/^  uint8_t dropInTeam;           \/\/ number of team that caused last drop in$/;"	m	struct:RoboCupGameControlData
dropInTime	core/communications/RoboCupGameControlData.h	/^  uint16_t dropInTime;          \/\/ number of seconds passed since the last drop in. -1 (0xffff) before first dropin$/;"	m	struct:RoboCupGameControlData
dropInTime	core/memory/GameStateBlock.h	/^  int dropInTime;$/;"	m	struct:GameStateBlock
ds	data/ballfit.py	/^ds = range(int(diameters[0])+1,int(diameters[-1])-1,-1)$/;"	v
dserraccumulate	lib/alglib/dataanalysis.cpp	/^void dserraccumulate(\/* Real    *\/ ae_vector* buf,$/;"	f	namespace:alglib_impl
dserrallocate	lib/alglib/dataanalysis.cpp	/^void dserrallocate(ae_int_t nclasses,$/;"	f	namespace:alglib_impl
dserrfinish	lib/alglib/dataanalysis.cpp	/^void dserrfinish(\/* Real    *\/ ae_vector* buf, ae_state *_state)$/;"	f	namespace:alglib_impl
dsgetmeanmindistance	lib/alglib/dataanalysis.cpp	/^double dsgetmeanmindistance(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
dsnormalize	lib/alglib/dataanalysis.cpp	/^void dsnormalize(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
dsnormalizec	lib/alglib/dataanalysis.cpp	/^void dsnormalizec(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
dsoptimalsplit2	lib/alglib/dataanalysis.cpp	/^void dsoptimalsplit2(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
dsoptimalsplit2	lib/alglib/dataanalysis.cpp	/^void dsoptimalsplit2(const real_1d_array &a, const integer_1d_array &c, const ae_int_t n, ae_int_t &info, double &threshold, double &pal, double &pbl, double &par, double &pbr, double &cve)$/;"	f	namespace:alglib
dsoptimalsplit2fast	lib/alglib/dataanalysis.cpp	/^void dsoptimalsplit2fast(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
dsoptimalsplit2fast	lib/alglib/dataanalysis.cpp	/^void dsoptimalsplit2fast(real_1d_array &a, integer_1d_array &c, integer_1d_array &tiesbuf, integer_1d_array &cntbuf, real_1d_array &bufr, integer_1d_array &bufi, const ae_int_t n, const ae_int_t nc, const double alpha, ae_int_t &info, double &threshold, double &rms, double &cvrms)$/;"	f	namespace:alglib
dsoptimalsplitk	lib/alglib/dataanalysis.cpp	/^void dsoptimalsplitk(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
dssplitk	lib/alglib/dataanalysis.cpp	/^void dssplitk(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
dstie	lib/alglib/dataanalysis.cpp	/^void dstie(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
dstiefasti	lib/alglib/dataanalysis.cpp	/^void dstiefasti(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
dt	build/include/tool/simulation/SimulatedPlayer.h	/^  float dt;$/;"	m	class:SimulatedPlayer
dt	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float dt;$/;"	m	class:Walk2014Generator
dt	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^static const float dt = 0.01f; \/\/ 10ms time intervals$/;"	v	file:
dt	core/python/behaviors/keeper_2.py	/^dt = 1.0\/30.0$/;"	v
dt	core/python/behaviors/win.py	/^dt = 1.0\/30.0$/;"	v
dt	kalman_filters/src/ekf_test.cpp	/^double dt;$/;"	v
dt	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float dt;$/;"	m	class:SimulatedPlayer
dummy	lib/lua/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for `local' udata *\/$/;"	m	union:Udata
dummy	lib/lua/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:TString
dummy	lib/zlib/deflate.c	/^struct static_tree_desc_s {int dummy;}; \/* for buggy compilers *\/$/;"	m	struct:static_tree_desc_s	file:
dummy	lib/zlib/zlib.h	/^    struct internal_state {int dummy;};$/;"	m	struct:internal_state
dummy	lib/zlib/zutil.c	/^struct internal_state      {int dummy;}; \/* for buggy compilers *\/$/;"	m	struct:internal_state	file:
dummynode	lib/lua/src/ltable.c	/^#define dummynode	/;"	d	file:
dummynode_	lib/lua/src/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dumpFile	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^      FILE *dumpFile;$/;"	m	class:RSCamera
dumping	lib/lua/src/luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	file:
during	core/math/Range.h	/^    bool during(const Range<T>& r) const {return min > r.min && max < r.max;}$/;"	f	class:Range
dx	core/motion/rswalk2014/PendulumModel.hpp	/^   float dx;$/;"	m	struct:PendulumModel
dx	core/vision/structures/Blob.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:Blob
dx	core/vision/structures/VisionPoint.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:VisionPoint
dy	core/vision/structures/Blob.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:Blob
dy	core/vision/structures/VisionPoint.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:VisionPoint
dy	lib/alglib/diffequations.h	/^    ae_vector dy;$/;"	m	struct:alglib_impl::__anon51
dy	lib/alglib/diffequations.h	/^    real_1d_array dy;$/;"	m	class:alglib::odesolverstate
dyn_dtree	lib/zlib/deflate.h	/^    struct ct_data_s dyn_dtree[2*D_CODES+1]; \/* distance tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::ct_data_s
dyn_ltree	lib/zlib/deflate.h	/^    struct ct_data_s dyn_ltree[HEAP_SIZE];   \/* literal and length tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::ct_data_s
dyn_tree	lib/zlib/deflate.h	/^    ct_data *dyn_tree;           \/* the dynamic tree *\/$/;"	m	struct:tree_desc_s
dynamicSide	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float dynamicSide;$/;"	m	class:Walk2014Generator
e1	lib/alglib/linalg.h	/^    double e1;$/;"	m	struct:alglib_impl::__anon68
e2	lib/alglib/linalg.h	/^    double e2;$/;"	m	struct:alglib_impl::__anon68
e_angle_k0	core/python/behaviors/pid_distance_angle.py	/^e_angle_k0 = 0.0015$/;"	v
e_angle_k1	core/python/behaviors/pid_distance_angle.py	/^e_angle_k1 = 0$/;"	v
e_angle_k2	core/python/behaviors/pid_distance_angle.py	/^e_angle_k2 = 0$/;"	v
e_angle_x_set_close	core/python/behaviors/pid_distance_angle.py	/^e_angle_x_set_close = 192 # x_goal_indel when close$/;"	v
e_angle_x_set_far	core/python/behaviors/pid_distance_angle.py	/^e_angle_x_set_far = 160 # x_goal_indel when far away$/;"	v
e_angle_x_threshold	core/python/behaviors/pid_distance_angle.py	/^e_angle_x_threshold = 15$/;"	v
e_distance_k0	core/python/behaviors/pid_distance_angle.py	/^e_distance_k0 = 0.0006$/;"	v
e_distance_k1	core/python/behaviors/pid_distance_angle.py	/^e_distance_k1 = 0.003$/;"	v
e_distance_k2	core/python/behaviors/pid_distance_angle.py	/^e_distance_k2 = 0$/;"	v
e_distance_set	core/python/behaviors/pid_distance_angle.py	/^e_distance_set = 150$/;"	v
eat	lib/yaml-cpp/src/stream.cpp	/^	void Stream::eat(int n)$/;"	f	class:YAML::Stream
eatEnd	lib/yaml-cpp/src/scanscalar.h	/^		bool eatEnd;                    \/\/ should we eat that condition when we see it?$/;"	m	struct:YAML::ScanScalarParams
eatLeadingWhitespace	lib/yaml-cpp/src/scanscalar.h	/^		bool eatLeadingWhitespace;      \/\/ should we continue eating this delicious indentation after 'indent' spaces?$/;"	m	struct:YAML::ScanScalarParams
edgeBuffer	core/memory/BehaviorParamBlock.h	/^  float edgeBuffer;$/;"	m	struct:KickStrategy
edgeSize	core/vision/structures/Blob.h	/^  int edgeSize;$/;"	m	struct:Blob
edgeSize	core/vision/structures/GoalPostCandidate.h	/^  int edgeSize;$/;"	m	struct:GoalPostCandidate
edgeStrength	core/vision/structures/Blob.h	/^  int edgeStrength;$/;"	m	struct:Blob
edgeStrength	core/vision/structures/GoalPostCandidate.h	/^  int edgeStrength;$/;"	m	struct:GoalPostCandidate
effector_	core/memory/SimEffectorBlock.h	/^  SimEffector effector_[NUM_JOINTS];$/;"	m	struct:SimEffectorBlock
efficient	tools/behaviorSim/cma.py	/^                        import pygsl.eigen.eigenvectors  # TODO efficient enough?$/;"	i
eig	tools/behaviorSim/cma.py	/^                self.D, self.B = Misc.eig(self.C)  # def eig, see below$/;"	f	function:CMAEvolutionStrategy.updateBD
eig	tools/behaviorSim/cma.py	/^    def eig(C):$/;"	m	class:Misc
eigen	tools/behaviorSim/cma.py	/^                        import pygsl.eigen.eigenvectors  # TODO efficient enough?$/;"	i
eigenvectors	tools/behaviorSim/cma.py	/^                        import pygsl.eigen.eigenvectors  # TODO efficient enough?$/;"	i
eigh	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
elapsed	core/common/Profiling.cpp	/^double Timer::elapsed() {$/;"	f	class:Timer
elapsed	core/motion/rswalk2014/utils/Timer.hpp	/^      float elapsed() {$/;"	f	class:Timer
elapsed	core/python/UTdebug.py	/^  def elapsed(self):$/;"	m	class:Timer
elapsed	core/python/util.py	/^  def elapsed(self):$/;"	m	class:Timer
elapsed_	core/common/Profiling.h	/^    double elapsed_, paused_;$/;"	m	class:Timer
elapsed_max	core/motion/rswalk2014/utils/Timer.hpp	/^      float elapsed_max() {$/;"	f	class:Timer
elapsed_min	core/motion/rswalk2014/utils/Timer.hpp	/^      float elapsed_min() {$/;"	f	class:Timer
elapsed_ms	core/motion/rswalk2014/utils/Timer.hpp	/^      uint32_t elapsed_ms() {$/;"	f	class:Timer
elapsed_us	core/motion/rswalk2014/utils/Timer.hpp	/^      uint32_t elapsed_us() {$/;"	f	class:Timer
elbowOffsetY	core/common/RobotDimensions.h	/^    elbowOffsetY,$/;"	e	enum:RobotDimensions::__anon8
elems	lib/zlib/trees.c	/^    int     elems;               \/* max number of elements in the tree *\/$/;"	m	struct:static_tree_desc_s	file:
elevation	core/common/WorldObject.h	/^  float elevation; \/\/\/< How high off the ground this object is relative to the robot.$/;"	m	class:WorldObject
elevation	core/vision/CameraMatrix.cpp	/^float CameraMatrix::elevation(const Position& p) const {$/;"	f	class:CameraMatrix
elli	tools/behaviorSim/cma.py	/^    def elli(self, x, rot=0, xoffset=0, cond=1e6, actuator_noise=0.0, both=False):$/;"	m	class:FitnessFunctions
elliconstraint	tools/behaviorSim/cma.py	/^    def elliconstraint(self, x, cfac = 1e8, tough=True, cond=1e6):  $/;"	m	class:FitnessFunctions
ellipticintegrale	lib/alglib/specialfunctions.cpp	/^double ellipticintegrale(const double m)$/;"	f	namespace:alglib
ellipticintegrale	lib/alglib/specialfunctions.cpp	/^double ellipticintegrale(double m, ae_state *_state)$/;"	f	namespace:alglib_impl
ellipticintegralk	lib/alglib/specialfunctions.cpp	/^double ellipticintegralk(const double m)$/;"	f	namespace:alglib
ellipticintegralk	lib/alglib/specialfunctions.cpp	/^double ellipticintegralk(double m, ae_state *_state)$/;"	f	namespace:alglib_impl
ellipticintegralkhighprecision	lib/alglib/specialfunctions.cpp	/^double ellipticintegralkhighprecision(const double m1)$/;"	f	namespace:alglib
ellipticintegralkhighprecision	lib/alglib/specialfunctions.cpp	/^double ellipticintegralkhighprecision(double m1, ae_state *_state)$/;"	f	namespace:alglib_impl
ellirot	tools/behaviorSim/cma.py	/^    def ellirot(self, x):$/;"	m	class:FitnessFunctions
elliwithoneconstraint	tools/behaviorSim/cma.py	/^    def elliwithoneconstraint(self, x, idx=[-1]):$/;"	m	class:FitnessFunctions
empirical	interfaces/sim_spark/Random.h	/^   float empirical( void )   \/\/ Empirical Continuous$/;"	f	class:Random
empiricalDiscrete	interfaces/sim_spark/Random.h	/^   int empiricalDiscrete( void )   \/\/ Empirical Discrete$/;"	f	class:Random
empty	build/include/tool/simulation/SimulationPath.h	/^    bool empty() { return !points_.size(); }$/;"	f	class:SimulationPath
empty	lib/yaml-cpp/src/ptr_stack.h	/^	bool empty() const { return m_data.empty(); }$/;"	f	class:ptr_stack
empty	lib/yaml-cpp/src/ptr_vector.h	/^		bool empty() const { return m_data.empty(); }$/;"	f	class:YAML::ptr_vector
empty	lib/yaml-cpp/src/scanner.cpp	/^	bool Scanner::empty()$/;"	f	class:YAML::Scanner
empty	tools/UTNaoTool/simulation/SimulationPath.h	/^    bool empty() { return !points_.size(); }$/;"	f	class:SimulationPath
emptybuffer	lib/lua/src/lauxlib.c	/^static int emptybuffer (luaL_Buffer *B) {$/;"	f	file:
enableAudio	build/include/tool/ToolConfig.h	/^    bool enableAudio;$/;"	m	class:ToolConfig
enableAudio	tools/UTNaoTool/ToolConfig.h	/^    bool enableAudio;$/;"	m	class:ToolConfig
enableButtons	build/include/tool/FilesWindow.cpp	/^void FilesWindow::enableButtons(bool b){$/;"	f	class:FilesWindow
enableButtons	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::enableButtons(bool b){$/;"	f	class:FilesWindow
enableCache	core/memory/Log.h	/^    bool& enableCache() { return enableCache_; }$/;"	f	class:Log
enableCache_	core/memory/Log.h	/^    bool enableCache_;$/;"	m	class:Log
enableCalibration	core/vision/ImageProcessor.cpp	/^void ImageProcessor::enableCalibration(bool value)$/;"	f	class:ImageProcessor
enableCalibration_	core/vision/ImageProcessor.h	/^    bool enableCalibration_;$/;"	m	class:ImageProcessor
enableDraw_	build/include/tool/VisionWindow.h	/^  bool enableDraw_;$/;"	m	class:VisionWindow
enableDraw_	tools/UTNaoTool/VisionWindow.h	/^  bool enableDraw_;$/;"	m	class:VisionWindow
enableLogging	core/VisionCore.cpp	/^void VisionCore::enableLogging() {$/;"	f	class:VisionCore
enableLogging	core/VisionCore.cpp	/^void VisionCore::enableLogging(int frames, double frequency) {$/;"	f	class:VisionCore
enableMemoryLogging	core/VisionCore.cpp	/^void VisionCore::enableMemoryLogging() {$/;"	f	class:VisionCore
enableStreaming	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::enableStreaming() {$/;"	f	class:NaoCamera
enableTarget_	build/include/tool/simulation/RobotMovementSimulator.h	/^    bool enableTarget_;$/;"	m	class:RobotMovementSimulator
enableTarget_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    bool enableTarget_;$/;"	m	class:RobotMovementSimulator
enableTextLogging	core/MotionCore.cpp	/^void MotionCore::enableTextLogging(const char *filename) {$/;"	f	class:MotionCore
enableTextLogging	core/VisionCore.cpp	/^void VisionCore::enableTextLogging(const char *filename) {$/;"	f	class:VisionCore
enable_if	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	struct enable_if : public enable_if_c<Cond::value, T> {};$/;"	s	namespace:YAML
enable_if_c	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	struct enable_if_c {$/;"	s	namespace:YAML
enable_if_c	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	struct enable_if_c<false, T> {};$/;"	s	namespace:YAML
enabled	core/common/RobotCalibration.h	/^    bool enabled;$/;"	m	class:RobotCalibration
enabled	core/memory/TextLogger.h	/^  bool enabled;$/;"	m	class:TextLogger
enclosedPoints	core/math/Polygon.cpp	/^std::vector<Point> Polygon::enclosedPoints() {$/;"	f	class:Polygon
enclosed_	core/math/Polygon.h	/^        std::vector<Point> enclosed_;$/;"	m	class:Polygon
enclosesPoint	build/include/tool/annotations/Annotation.cpp	/^bool Annotation::enclosesPoint(int frame, int x, int y) {$/;"	f	class:Annotation
enclosesPoint	build/include/tool/annotations/Annotation.cpp	/^bool Annotation::enclosesPoint(int x, int y){$/;"	f	class:Annotation
enclosesPoint	build/include/tool/annotations/EllipseSelection.h	/^        virtual bool enclosesPoint(int x, int y){$/;"	f	class:EllipseSelection
enclosesPoint	build/include/tool/annotations/PolygonSelection.h	/^        virtual bool enclosesPoint(int x, int y){$/;"	f	class:PolygonSelection
enclosesPoint	build/include/tool/annotations/RectangleSelection.h	/^        virtual bool enclosesPoint(int x, int y){$/;"	f	class:RectangleSelection
enclosesPoint	build/include/tool/annotations/Selection.h	/^        virtual bool enclosesPoint(int frame, int x, int y) {$/;"	f	class:Selection
enclosesPoint	core/math/Polygon.cpp	/^bool Polygon::enclosesPoint(int nvert, int *vertx, int *verty, int testx, int testy) {$/;"	f	class:Polygon
enclosesPoint	core/math/Polygon.cpp	/^bool Polygon::enclosesPoint(int x, int y){$/;"	f	class:Polygon
enclosesPoint	tools/UTNaoTool/annotations/Annotation.cpp	/^bool Annotation::enclosesPoint(int frame, int x, int y) {$/;"	f	class:Annotation
enclosesPoint	tools/UTNaoTool/annotations/Annotation.cpp	/^bool Annotation::enclosesPoint(int x, int y){$/;"	f	class:Annotation
enclosesPoint	tools/UTNaoTool/annotations/EllipseSelection.h	/^        virtual bool enclosesPoint(int x, int y){$/;"	f	class:EllipseSelection
enclosesPoint	tools/UTNaoTool/annotations/PolygonSelection.h	/^        virtual bool enclosesPoint(int x, int y){$/;"	f	class:PolygonSelection
enclosesPoint	tools/UTNaoTool/annotations/RectangleSelection.h	/^        virtual bool enclosesPoint(int x, int y){$/;"	f	class:RectangleSelection
enclosesPoint	tools/UTNaoTool/annotations/Selection.h	/^        virtual bool enclosesPoint(int frame, int x, int y) {$/;"	f	class:Selection
encode	interfaces/sim_spark/encode.h	/^  int encode(char value_in)$/;"	f	class:base64::Encoder
encode	interfaces/sim_spark/encode.h	/^  int encode(const char* code_in, const int length_in, char* plaintext_out)$/;"	f	class:base64::Encoder
encode	interfaces/sim_spark/encode.h	/^  std::string encode(const char* in, int len)$/;"	f	class:base64::Encoder
encode	interfaces/sim_spark/encode.h	/^  void encode(std::istream& istream_in, std::ostream& ostream_in)$/;"	f	class:base64::Encoder
encode_end	interfaces/sim_spark/encode.h	/^  int encode_end(char* plaintext_out)$/;"	f	class:base64::Encoder
encoding	lib/yaml-cpp/src/binary.cpp	/^    static const char encoding[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	m	namespace:YAML	file:
end	build/include/tool/WorldGLWidget.h	/^      Point2D start, end;$/;"	m	struct:WorldGLWidget::__anon7
end	build/include/tool/simulation/SimulationPath.h	/^    std::list<Point2D>::iterator end() { return points_.end(); }$/;"	f	class:SimulationPath
end	core/math/Geometry.h	/^    Point2D start, end;$/;"	m	class:LineSegment
end	core/motion/SpecialMotionParser.h	/^  end$/;"	e	enum:Motions::mType
end	lib/yaml-cpp/src/node.cpp	/^	Iterator Node::end() const$/;"	f	class:YAML::Node
end	lib/yaml-cpp/src/scanscalar.h	/^		RegEx end;                      \/\/ what condition ends this scalar?$/;"	m	struct:YAML::ScanScalarParams
end	tools/UTNaoTool/WorldGLWidget.h	/^      Point2D start, end;$/;"	m	struct:WorldGLWidget::__anon145
end	tools/UTNaoTool/simulation/SimulationPath.h	/^    std::list<Point2D>::iterator end() { return points_.end(); }$/;"	f	class:SimulationPath
endFrame	build/include/tool/UTMainWnd.h	/^  int endFrame;$/;"	m	class:UTMainWnd
endFrame	build/include/tool/UTNaoTool.cpp	/^  int endFrame = -1;$/;"	m	namespace:__anon4	file:
endFrame	tools/UTNaoTool/UTMainWnd.h	/^  int endFrame;$/;"	m	class:UTMainWnd
endFrame	tools/UTNaoTool/UTNaoTool.cpp	/^  int endFrame = -1;$/;"	m	namespace:__anon142	file:
endJoints	core/motion/SpecialMotionParser.cpp	/^float endJoints[NUM_JOINTS] = {0, 0, 0, 0, 0, 11.46, -10.32, 0, 0, 0, 0, 11.46, -10.32, 0, -107.08, 16.3, -91.72, -33.45, -107.08, 16.3, -91.72, -33.45};    $/;"	v
endLoc	core/common/WorldObject.h	/^  Point2D endLoc;$/;"	m	class:WorldObject
endSelection	build/include/tool/ImageWidget.cpp	/^void ImageWidget::endSelection(){$/;"	f	class:ImageWidget
endSelection	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::endSelection(){$/;"	f	class:ImageWidget
end_capture	lib/lua/src/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
end_ci	lib/lua/src/lstate.h	/^  CallInfo *end_ci;  \/* points after end of ci array*\/$/;"	m	struct:lua_State
endianness	lib/alglib/ap.cpp	/^const alglib::ae_int_t alglib::endianness =  alglib_impl::ae_get_endianness();$/;"	m	class:alglib	file:
endianness	lib/alglib/ap.h	/^    ae_int_t endianness;$/;"	m	struct:alglib_impl::__anon35
endlineBuffer	core/memory/BehaviorParamBlock.h	/^  float endlineBuffer;$/;"	m	struct:CornerKickStrategy
endpc	lib/lua/src/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar
enemy_state	core/python/behaviors/win.py	/^enemy_state = EnemyGoalStates.unknown$/;"	v
enough	tools/behaviorSim/cma.py	/^                        import pygsl.eigen.eigenvectors  # TODO efficient enough?$/;"	i
ensemblesize	lib/alglib/dataanalysis.h	/^    ae_int_t ensemblesize;$/;"	m	struct:alglib_impl::__anon50
enterblock	lib/lua/src/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isbreakable) {$/;"	f	file:
enterlevel	lib/lua/src/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
entries	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			const std::vector<std::string>& entries() {return m_entries;}$/;"	f	class:Test::__anon130::EncodingTester
enumerateSettingMenu	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::enumerateSettingMenu() {$/;"	f	class:NaoCamera
env	lib/lua/src/lobject.h	/^    struct Table *env;$/;"	m	struct:Udata::__anon89	typeref:struct:Udata::__anon89::Table
env	lib/lua/src/lstate.h	/^  TValue env;  \/* temporary place for environments *\/$/;"	m	struct:lua_State
environment	build/include/tool/FilesWindow.h	/^    QProcessEnvironment environment;$/;"	m	class:FilesWindow
environment	tools/UTNaoTool/FilesWindow.h	/^    QProcessEnvironment environment;$/;"	m	class:FilesWindow
environment_	build/include/tool/ProcessExecutor.h	/^    QProcessEnvironment environment_;$/;"	m	class:ProcessExecutor
environment_	tools/UTNaoTool/ProcessExecutor.h	/^    QProcessEnvironment environment_;$/;"	m	class:ProcessExecutor
eof	lib/yaml-cpp/src/stream.h	/^		static char eof() { return 0x04; }$/;"	f	class:YAML::Stream
eof	lib/zlib/gzguts.h	/^    int eof;                \/* true if end of input file reached *\/$/;"	m	struct:__anon135
eps	lib/alglib/diffequations.h	/^    double eps;$/;"	m	struct:alglib_impl::__anon51
eps	lib/alglib/integration.h	/^    double eps;$/;"	m	struct:alglib_impl::__anon54
eps_	core/common/PIDController.h	/^  float eps_;$/;"	m	class:PIDController
epsf	lib/alglib/interpolation.h	/^    double epsf;$/;"	m	struct:alglib_impl::__anon63
epsf	lib/alglib/optimization.h	/^    double epsf;$/;"	m	struct:alglib_impl::__anon69
epsf	lib/alglib/optimization.h	/^    double epsf;$/;"	m	struct:alglib_impl::__anon73
epsf	lib/alglib/optimization.h	/^    double epsf;$/;"	m	struct:alglib_impl::__anon75
epsf	lib/alglib/optimization.h	/^    double epsf;$/;"	m	struct:alglib_impl::__anon77
epsf	lib/alglib/solvers.h	/^    double epsf;$/;"	m	struct:alglib_impl::__anon83
epsg	lib/alglib/optimization.h	/^    double epsg;$/;"	m	struct:alglib_impl::__anon69
epsg	lib/alglib/optimization.h	/^    double epsg;$/;"	m	struct:alglib_impl::__anon73
epsg	lib/alglib/optimization.h	/^    double epsg;$/;"	m	struct:alglib_impl::__anon75
epsg	lib/alglib/optimization.h	/^    double epsg;$/;"	m	struct:alglib_impl::__anon77
epsx	lib/alglib/interpolation.h	/^    double epsx;$/;"	m	struct:alglib_impl::__anon63
epsx	lib/alglib/optimization.h	/^    double epsx;$/;"	m	struct:alglib_impl::__anon69
epsx	lib/alglib/optimization.h	/^    double epsx;$/;"	m	struct:alglib_impl::__anon73
epsx	lib/alglib/optimization.h	/^    double epsx;$/;"	m	struct:alglib_impl::__anon75
epsx	lib/alglib/optimization.h	/^    double epsx;$/;"	m	struct:alglib_impl::__anon77
eq_event	lib/lua/doc/manual.html	/^     function eq_event (op1, op2)$/;"	f
equalobj	lib/lua/src/lvm.h	/^#define equalobj(/;"	d
equals	core/math/YaMatrix.h	/^bool equals(const YaMatrix<T>& a, const YaMatrix<T>& b, T delta)$/;"	f
erlang	interfaces/sim_spark/Random.h	/^   float erlang( float b, int c )   \/\/ Erlang (b > 0. and c >= 1)$/;"	f	class:Random
err	lib/zlib/gzguts.h	/^    int err;                \/* error code *\/$/;"	m	struct:__anon135
errfeas	lib/alglib/optimization.h	/^    double errfeas;$/;"	m	struct:alglib_impl::__anon79
errfile	lib/lua/src/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errfunc	lib/lua/src/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State
errno	lib/zlib/zutil.c	/^    int errno = 0;$/;"	v
error	build/include/tool/calibration/JointCalibrator.h	/^    float error() const { return error_; }$/;"	f	class:JointCalibrator
error	lib/lua/src/lundump.c	/^#define error(/;"	d	file:
error	lib/lua/src/lundump.c	/^static void error(LoadState* S, const char* why)$/;"	f	file:
error	lib/yaml-cpp/test/spectests.h	/^		std::string error;$/;"	m	struct:Test::TEST
error	lib/zlib/minigzip.c	/^void error(msg)$/;"	f
error	tools/UTNaoTool/calibration/JointCalibrator.h	/^    float error() const { return error_; }$/;"	f	class:JointCalibrator
errorJmp	lib/lua/src/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp
error_	build/include/tool/calibration/JointCalibrator.h	/^    float error_;$/;"	m	class:JointCalibrator
error_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    float error_;$/;"	m	class:JointCalibrator
error_expected	lib/lua/src/lparser.c	/^static void error_expected (LexState *ls, int token) {$/;"	f	file:
error_msg	lib/alglib/ap.h	/^    const char* volatile error_msg;$/;"	m	struct:alglib_impl::__anon35
errorfromcode	lib/lua/src/loadlib.c	/^static const char *errorfromcode (NSObjectFileImageReturnCode ret) {$/;"	f	file:
errorfunction	lib/alglib/specialfunctions.cpp	/^double errorfunction(const double x)$/;"	f	namespace:alglib
errorfunction	lib/alglib/specialfunctions.cpp	/^double errorfunction(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
errorfunctionc	lib/alglib/specialfunctions.cpp	/^double errorfunctionc(const double x)$/;"	f	namespace:alglib
errorfunctionc	lib/alglib/specialfunctions.cpp	/^double errorfunctionc(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
errorlimit	lib/lua/src/lparser.c	/^static void errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
errors	core/python/UTdebug.py	/^import logging; logging.disable(logging.ERROR) # kill hashlib errors from random$/;"	i
escale	lib/alglib/diffequations.h	/^    ae_vector escale;$/;"	m	struct:alglib_impl::__anon51
escape	lib/yaml-cpp/src/scanscalar.h	/^		char escape;                    \/\/ what character do we escape on (i.e., slash or single quote) (0 for none)$/;"	m	struct:YAML::ScanScalarParams
essential	tools/behaviorSim/cma.py	/^import time  # not really essential$/;"	i
estimate	lib/lua/src/lstate.h	/^  lu_mem estimate;  \/* an estimate of number of bytes actually in use *\/$/;"	m	struct:global_State
estimatedPose	core/memory/DelayedLocalizationBlock.h	/^  Pose2D estimatedPose; \/\/ estimated pose by the delayed localization update$/;"	m	struct:DelayedLocalizationBlock
etc	tools/behaviorSim/cma.py	/^    print('  Could not import matplotlib.pylab, therefore ``cma.plot()`` etc. is not available')$/;"	i
etimer	core/python/UTdebug.py	/^def etimer(name):$/;"	f
eval	tools/behaviorSim/cma.py	/^    def eval(self, key, default=None, loc=None):$/;"	m	class:Options
evalall	tools/behaviorSim/cma.py	/^    def evalall(self, loc=None):$/;"	m	class:Options
evaluate	build/include/tool/calibration/JointCalibrator.cpp	/^float JointCalibrator::evaluate(const Dataset& d, const vector<float>& offsets) const {$/;"	f	class:JointCalibrator
evaluate	build/include/tool/calibration/JointCalibrator.cpp	/^float JointCalibrator::evaluate(const Measurement& m, const vector<float>& offsets) const {$/;"	f	class:JointCalibrator
evaluate	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^float JointCalibrator::evaluate(const Dataset& d, const vector<float>& offsets) const {$/;"	f	class:JointCalibrator
evaluate	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^float JointCalibrator::evaluate(const Measurement& m, const vector<float>& offsets) const {$/;"	f	class:JointCalibrator
evaluateDHChain	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::evaluateDHChain(Link from, Link to, Chain foot, bool top) {$/;"	f	class:Kinematics
evaluateMassChain	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::evaluateMassChain() {   $/;"	f	class:Kinematics
evaluated	core/memory/BehaviorBlock.h	/^  bool evaluated;$/;"	m	struct:KickEvaluation
evd_internalbisectioneigenvalues	lib/alglib/linalg.cpp	/^static ae_bool evd_internalbisectioneigenvalues(\/* Real    *\/ ae_vector* d,$/;"	f	namespace:alglib_impl
evd_internaldlaebz	lib/alglib/linalg.cpp	/^static void evd_internaldlaebz(ae_int_t ijob,$/;"	f	namespace:alglib_impl
evd_internaldstein	lib/alglib/linalg.cpp	/^static void evd_internaldstein(ae_int_t n,$/;"	f	namespace:alglib_impl
evd_internalhsevdladiv	lib/alglib/linalg.cpp	/^static void evd_internalhsevdladiv(double a,$/;"	f	namespace:alglib_impl
evd_internalhsevdlaln2	lib/alglib/linalg.cpp	/^static void evd_internalhsevdlaln2(ae_bool ltrans,$/;"	f	namespace:alglib_impl
evd_internaltrevc	lib/alglib/linalg.cpp	/^static void evd_internaltrevc(\/* Real    *\/ ae_matrix* t,$/;"	f	namespace:alglib_impl
evd_nonsymmetricevd	lib/alglib/linalg.cpp	/^static ae_bool evd_nonsymmetricevd(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
evd_tdevde2	lib/alglib/linalg.cpp	/^static void evd_tdevde2(double a,$/;"	f	namespace:alglib_impl
evd_tdevdev2	lib/alglib/linalg.cpp	/^static void evd_tdevdev2(double a,$/;"	f	namespace:alglib_impl
evd_tdevdextsign	lib/alglib/linalg.cpp	/^static double evd_tdevdextsign(double a, double b, ae_state *_state)$/;"	f	namespace:alglib_impl
evd_tdevdpythag	lib/alglib/linalg.cpp	/^static double evd_tdevdpythag(double a, double b, ae_state *_state)$/;"	f	namespace:alglib_impl
evd_tdininternaldlagtf	lib/alglib/linalg.cpp	/^static void evd_tdininternaldlagtf(ae_int_t n,$/;"	f	namespace:alglib_impl
evd_tdininternaldlagts	lib/alglib/linalg.cpp	/^static void evd_tdininternaldlagts(ae_int_t n,$/;"	f	namespace:alglib_impl
evd_toupperhessenberg	lib/alglib/linalg.cpp	/^static void evd_toupperhessenberg(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
evd_tridiagonalevd	lib/alglib/linalg.cpp	/^static ae_bool evd_tridiagonalevd(\/* Real    *\/ ae_vector* d,$/;"	f	namespace:alglib_impl
evd_unpackqfromupperhessenberg	lib/alglib/linalg.cpp	/^static void evd_unpackqfromupperhessenberg(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
event	lib/lua/src/lua.h	/^  int event;$/;"	m	struct:lua_Debug
eventFilter	build/include/tool/VisionWindow.cpp	/^bool VisionWindow::eventFilter(QObject *object, QEvent *e) {$/;"	f	class:VisionWindow
eventFilter	tools/UTNaoTool/VisionWindow.cpp	/^bool VisionWindow::eventFilter(QObject *object, QEvent *e) {$/;"	f	class:VisionWindow
everyInterface	bin/copy_robot	/^everyInterface = list(validInterfaces)$/;"	v
everyInterface	build/copy_robot	/^everyInterface = list(validInterfaces)$/;"	v
evsbin	lib/alglib/dataanalysis.h	/^    ae_vector evsbin;$/;"	m	struct:alglib_impl::__anon41
evssplits	lib/alglib/dataanalysis.h	/^    ae_vector evssplits;$/;"	m	struct:alglib_impl::__anon41
ex2_1	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_1 =$/;"	m	namespace:Test::Spec
ex2_10	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_10 =$/;"	m	namespace:Test::Spec
ex2_11	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_11 =$/;"	m	namespace:Test::Spec
ex2_12	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_12 =$/;"	m	namespace:Test::Spec
ex2_13	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_13 =$/;"	m	namespace:Test::Spec
ex2_14	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_14 =$/;"	m	namespace:Test::Spec
ex2_15	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_15 =$/;"	m	namespace:Test::Spec
ex2_16	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_16 =$/;"	m	namespace:Test::Spec
ex2_17	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_17 =$/;"	m	namespace:Test::Spec
ex2_18	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_18 =$/;"	m	namespace:Test::Spec
ex2_2	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_2 =$/;"	m	namespace:Test::Spec
ex2_23	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_23 =$/;"	m	namespace:Test::Spec
ex2_24	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_24 =$/;"	m	namespace:Test::Spec
ex2_25	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_25 =$/;"	m	namespace:Test::Spec
ex2_26	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_26 =$/;"	m	namespace:Test::Spec
ex2_27	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_27 =$/;"	m	namespace:Test::Spec
ex2_28	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_28 =$/;"	m	namespace:Test::Spec
ex2_3	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_3 =$/;"	m	namespace:Test::Spec
ex2_4	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_4 =$/;"	m	namespace:Test::Spec
ex2_5	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_5 =$/;"	m	namespace:Test::Spec
ex2_6	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_6 =$/;"	m	namespace:Test::Spec
ex2_7	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_7 =$/;"	m	namespace:Test::Spec
ex2_8	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_8 =$/;"	m	namespace:Test::Spec
ex2_9	lib/yaml-cpp/test/specexamples.h	/^		const char *ex2_9 =$/;"	m	namespace:Test::Spec
ex5_11	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_11 =$/;"	m	namespace:Test::Spec
ex5_12	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_12 =$/;"	m	namespace:Test::Spec
ex5_13	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_13 =$/;"	m	namespace:Test::Spec
ex5_14	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_14 =$/;"	m	namespace:Test::Spec
ex5_3	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_3 =$/;"	m	namespace:Test::Spec
ex5_4	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_4 =$/;"	m	namespace:Test::Spec
ex5_5	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_5 =$/;"	m	namespace:Test::Spec
ex5_6	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_6 =$/;"	m	namespace:Test::Spec
ex5_7	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_7 =$/;"	m	namespace:Test::Spec
ex5_8	lib/yaml-cpp/test/specexamples.h	/^		const char *ex5_8 =$/;"	m	namespace:Test::Spec
ex6_1	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_1 =$/;"	m	namespace:Test::Spec
ex6_10	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_10 =$/;"	m	namespace:Test::Spec
ex6_11	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_11 =$/;"	m	namespace:Test::Spec
ex6_12	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_12 =$/;"	m	namespace:Test::Spec
ex6_13	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_13 =$/;"	m	namespace:Test::Spec
ex6_14	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_14 =$/;"	m	namespace:Test::Spec
ex6_15	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_15 =$/;"	m	namespace:Test::Spec
ex6_16	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_16 =$/;"	m	namespace:Test::Spec
ex6_17	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_17 =$/;"	m	namespace:Test::Spec
ex6_18	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_18 =$/;"	m	namespace:Test::Spec
ex6_19	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_19 =$/;"	m	namespace:Test::Spec
ex6_2	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_2 =$/;"	m	namespace:Test::Spec
ex6_20	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_20 =$/;"	m	namespace:Test::Spec
ex6_21	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_21 =$/;"	m	namespace:Test::Spec
ex6_22	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_22 =$/;"	m	namespace:Test::Spec
ex6_23	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_23 =$/;"	m	namespace:Test::Spec
ex6_24	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_24 =$/;"	m	namespace:Test::Spec
ex6_25	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_25 =$/;"	m	namespace:Test::Spec
ex6_26	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_26 =$/;"	m	namespace:Test::Spec
ex6_27a	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_27a =$/;"	m	namespace:Test::Spec
ex6_27b	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_27b =$/;"	m	namespace:Test::Spec
ex6_28	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_28 =$/;"	m	namespace:Test::Spec
ex6_29	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_29 =$/;"	m	namespace:Test::Spec
ex6_3	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_3 =$/;"	m	namespace:Test::Spec
ex6_4	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_4 =$/;"	m	namespace:Test::Spec
ex6_5	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_5 =$/;"	m	namespace:Test::Spec
ex6_6	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_6 =$/;"	m	namespace:Test::Spec
ex6_7	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_7 =$/;"	m	namespace:Test::Spec
ex6_8	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_8 =$/;"	m	namespace:Test::Spec
ex6_9	lib/yaml-cpp/test/specexamples.h	/^		const char *ex6_9 =$/;"	m	namespace:Test::Spec
ex7_1	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_1 =$/;"	m	namespace:Test::Spec
ex7_10	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_10 =$/;"	m	namespace:Test::Spec
ex7_11	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_11 =$/;"	m	namespace:Test::Spec
ex7_12	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_12 =$/;"	m	namespace:Test::Spec
ex7_13	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_13 =$/;"	m	namespace:Test::Spec
ex7_14	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_14 =$/;"	m	namespace:Test::Spec
ex7_15	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_15 =$/;"	m	namespace:Test::Spec
ex7_16	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_16 =$/;"	m	namespace:Test::Spec
ex7_17	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_17 =$/;"	m	namespace:Test::Spec
ex7_18	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_18 =$/;"	m	namespace:Test::Spec
ex7_19	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_19 =$/;"	m	namespace:Test::Spec
ex7_2	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_2 =$/;"	m	namespace:Test::Spec
ex7_20	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_20 =$/;"	m	namespace:Test::Spec
ex7_21	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_21 =$/;"	m	namespace:Test::Spec
ex7_22	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_22 =$/;"	m	namespace:Test::Spec
ex7_23	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_23 =$/;"	m	namespace:Test::Spec
ex7_24	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_24 =$/;"	m	namespace:Test::Spec
ex7_3	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_3 =$/;"	m	namespace:Test::Spec
ex7_4	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_4 =$/;"	m	namespace:Test::Spec
ex7_5	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_5 =$/;"	m	namespace:Test::Spec
ex7_6	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_6 =$/;"	m	namespace:Test::Spec
ex7_7	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_7 =$/;"	m	namespace:Test::Spec
ex7_8	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_8 =$/;"	m	namespace:Test::Spec
ex7_9	lib/yaml-cpp/test/specexamples.h	/^		const char *ex7_9 =$/;"	m	namespace:Test::Spec
ex8_1	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_1 =$/;"	m	namespace:Test::Spec
ex8_10	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_10 =$/;"	m	namespace:Test::Spec
ex8_11	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_11 = ex8_10;$/;"	m	namespace:Test::Spec
ex8_12	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_12 = ex8_10;$/;"	m	namespace:Test::Spec
ex8_13	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_13 = ex8_10;$/;"	m	namespace:Test::Spec
ex8_14	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_14 =$/;"	m	namespace:Test::Spec
ex8_15	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_15 =$/;"	m	namespace:Test::Spec
ex8_16	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_16 =$/;"	m	namespace:Test::Spec
ex8_17	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_17 =$/;"	m	namespace:Test::Spec
ex8_18	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_18 =$/;"	m	namespace:Test::Spec
ex8_19	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_19 =$/;"	m	namespace:Test::Spec
ex8_2	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_2 =$/;"	m	namespace:Test::Spec
ex8_20	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_20 =$/;"	m	namespace:Test::Spec
ex8_21	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_21 =$/;"	m	namespace:Test::Spec
ex8_22	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_22 =$/;"	m	namespace:Test::Spec
ex8_3a	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_3a =$/;"	m	namespace:Test::Spec
ex8_3b	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_3b =$/;"	m	namespace:Test::Spec
ex8_3c	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_3c =$/;"	m	namespace:Test::Spec
ex8_4	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_4 =$/;"	m	namespace:Test::Spec
ex8_5	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_5 =$/;"	m	namespace:Test::Spec
ex8_6	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_6 =$/;"	m	namespace:Test::Spec
ex8_7	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_7 =$/;"	m	namespace:Test::Spec
ex8_8	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_8 =$/;"	m	namespace:Test::Spec
ex8_9	lib/yaml-cpp/test/specexamples.h	/^		const char *ex8_9 =$/;"	m	namespace:Test::Spec
exactStepsRequested	core/motion/rswalk2014/Walk2014Generator.hpp	/^   bool exactStepsRequested;$/;"	m	class:Walk2014Generator
exec_prefix	lib/zlib/Makefile	/^exec_prefix =${prefix}$/;"	m
executeMotionSequence	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::executeMotionSequence() {$/;"	f	class:SpecialMotionModule
executeSimpleCommand	build/include/tool/ProcessExecutor.cpp	/^bool PE::executeSimpleCommand(QString command, QStringList args, bool verbose) {$/;"	f	class:PE
executeSimpleCommand	build/include/tool/ProcessExecutor.cpp	/^bool PE::executeSimpleCommand(QString command, bool verbose) {$/;"	f	class:PE
executeSimpleCommand	tools/UTNaoTool/ProcessExecutor.cpp	/^bool PE::executeSimpleCommand(QString command, QStringList args, bool verbose) {$/;"	f	class:PE
executeSimpleCommand	tools/UTNaoTool/ProcessExecutor.cpp	/^bool PE::executeSimpleCommand(QString command, bool verbose) {$/;"	f	class:PE
executingPass	core/memory/BehaviorBlock.h	/^  bool executingPass;$/;"	m	struct:PassInfo
executor_	build/include/tool/FilesWindow.h	/^   ProcessExecutor executor_;$/;"	m	class:FilesWindow
executor_	build/include/tool/TeamConfigWindow.h	/^    ProcessExecutor executor_;$/;"	m	class:TeamConfigWindow
executor_	tools/UTNaoTool/FilesWindow.h	/^   ProcessExecutor executor_;$/;"	m	class:FilesWindow
executor_	tools/UTNaoTool/TeamConfigWindow.h	/^    ProcessExecutor executor_;$/;"	m	class:TeamConfigWindow
exists	core/vision/structures/HorizonLine.h	/^  bool exists;$/;"	m	struct:HorizonLine
exit	bin/nao_start	/^def exit(procs):$/;"	f
exp	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> exp (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
exp	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> exp (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
exp	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
exp1	lib/lua/src/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	lib/lua/src/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
expand	core/memory/StreamBuffer.cpp	/^void StreamBuffer::expand() {$/;"	f	class:StreamBuffer
expandParams	tools/behaviorSim/runCMAES.py	/^def expandParams(paramNames,paramVals,dest):$/;"	f
expdesc	lib/lua/src/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	lib/lua/src/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expkind	lib/lua/src/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon95
explist1	lib/lua/src/lparser.c	/^static int explist1 (LexState *ls, expdesc *v) {$/;"	f	file:
expms	tools/behaviorSim/cma.py	/^        def expms(A, eig=np.linalg.eigh):  $/;"	m	class:Misc.MathHelperFunctions
exponential	interfaces/sim_spark/Random.h	/^   float exponential( float a = 0., float c = 1. )   \/\/ Exponential$/;"	f	class:Random
exponentialintegralei	lib/alglib/specialfunctions.cpp	/^double exponentialintegralei(const double x)$/;"	f	namespace:alglib
exponentialintegralei	lib/alglib/specialfunctions.cpp	/^double exponentialintegralei(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
exponentialintegralen	lib/alglib/specialfunctions.cpp	/^double exponentialintegralen(const double x, const ae_int_t n)$/;"	f	namespace:alglib
exponentialintegralen	lib/alglib/specialfunctions.cpp	/^double exponentialintegralen(double x, ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
exportKick	motion_planning/src/plan_kick.cpp	/^  void PlanKick::exportKick(std::string filename)$/;"	f	class:motion_planning::PlanKick
exportSparseKick	motion_planning/src/plan_kick.cpp	/^  void PlanKick::exportSparseKick(std::string filename)$/;"	f	class:motion_planning::PlanKick
expr	lib/lua/src/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	lib/lua/src/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
extra	lib/zlib/inflate.h	/^    unsigned extra;             \/* extra bits needed *\/$/;"	m	struct:inflate_state
extra	lib/zlib/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s
extra_back_one_leg_	core/memory/KickEngineBlock.h	/^  float extra_back_one_leg_;$/;"	m	struct:KickEngineBlock
extra_base	lib/zlib/trees.c	/^    int     extra_base;          \/* base index for extra_bits *\/$/;"	m	struct:static_tree_desc_s	file:
extra_bits	lib/zlib/trees.c	/^    const intf *extra_bits;      \/* extra bits for each code or NULL *\/$/;"	m	struct:static_tree_desc_s	file:
extra_blbits	lib/zlib/trees.c	/^local const int extra_blbits[BL_CODES]\/* extra bits for each bit length code *\/$/;"	v
extra_dbits	lib/zlib/trees.c	/^local const int extra_dbits[D_CODES] \/* extra bits for each distance code *\/$/;"	v
extra_lbits	lib/zlib/trees.c	/^local const int extra_lbits[LENGTH_CODES] \/* extra bits for each length code *\/$/;"	v
extra_len	lib/zlib/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s
extra_max	lib/zlib/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s
extraline	lib/lua/src/lauxlib.c	/^  int extraline;$/;"	m	struct:LoadF	file:
extremeValue	interfaces/sim_spark/Random.h	/^   float extremeValue( float a = 0., float c = 1. )   \/\/ Extreme Value$/;"	f	class:Random
extrinsicVector	core/common/RobotCalibration.h	/^    Eigen::VectorXf extrinsicVector() const {$/;"	f	class:RobotCalibration
eye	tools/behaviorSim/cma.py	/^            self.B = np.eye(N) # identity(N), do not from matlib import *, as eye is a matrix there$/;"	i
eye	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
f	build/core/generate_block_operations.py	/^  f = open(sys.argv[1], 'w')$/;"	v
f	build/core/generate_block_operations.py	/^  f = sys.stdout$/;"	v
f	lib/alglib/alglibinternal.h	/^    double f;$/;"	m	struct:alglib_impl::__anon22
f	lib/alglib/integration.h	/^    double &f;$/;"	m	class:alglib::autogkstate
f	lib/alglib/integration.h	/^    double f;$/;"	m	struct:alglib_impl::__anon54
f	lib/alglib/integration.h	/^    double f;$/;"	m	struct:alglib_impl::__anon55
f	lib/alglib/interpolation.h	/^    double &f;$/;"	m	class:alglib::lsfitstate
f	lib/alglib/interpolation.h	/^    double f;$/;"	m	struct:alglib_impl::__anon63
f	lib/alglib/optimization.h	/^    double &f;$/;"	m	class:alglib::minasastate
f	lib/alglib/optimization.h	/^    double &f;$/;"	m	class:alglib::minbleicstate
f	lib/alglib/optimization.h	/^    double &f;$/;"	m	class:alglib::mincgstate
f	lib/alglib/optimization.h	/^    double &f;$/;"	m	class:alglib::minlbfgsstate
f	lib/alglib/optimization.h	/^    double &f;$/;"	m	class:alglib::minlmstate
f	lib/alglib/optimization.h	/^    double f;$/;"	m	struct:alglib_impl::__anon69
f	lib/alglib/optimization.h	/^    double f;$/;"	m	struct:alglib_impl::__anon73
f	lib/alglib/optimization.h	/^    double f;$/;"	m	struct:alglib_impl::__anon75
f	lib/alglib/optimization.h	/^    double f;$/;"	m	struct:alglib_impl::__anon77
f	lib/alglib/optimization.h	/^    double f;$/;"	m	struct:alglib_impl::__anon79
f	lib/alglib/solvers.h	/^    double &f;$/;"	m	class:alglib::nleqstate
f	lib/alglib/solvers.h	/^    double f;$/;"	m	struct:alglib_impl::__anon83
f	lib/lua/doc/manual.html	/^     function f () <em>body<\/em> end$/;"	f
f	lib/lua/doc/manual.html	/^     function f(a, b) end$/;"	f
f	lib/lua/src/lauxlib.c	/^  FILE *f;$/;"	m	struct:LoadF	file:
f	lib/lua/src/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure
f	lib/lua/src/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState
f	lib/lua/src/lparser.h	/^  int f;  \/* patch list of `exit when false' *\/$/;"	m	struct:expdesc
f	lib/lua/test/bisect.lua	/^function f(x)$/;"	f
fBALL	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fBALL = 0,$/;"	e	enum:feature_type
fFIELD_CENTRE_CIRCLE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fFIELD_CENTRE_CIRCLE,$/;"	e	enum:feature_type
fFIELD_CORNER	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fFIELD_CORNER,$/;"	e	enum:feature_type
fFIELD_EDGE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fFIELD_EDGE,$/;"	e	enum:feature_type
fFIELD_LINE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fFIELD_LINE,$/;"	e	enum:feature_type
fFIELD_LINE_THIN	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fFIELD_LINE_THIN,$/;"	e	enum:feature_type
fFIELD_PENALTY_SPOT	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fFIELD_PENALTY_SPOT,$/;"	e	enum:feature_type
fFIELD_T_JUNCTION	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fFIELD_T_JUNCTION,$/;"	e	enum:feature_type
fGOAL_BAR_BLUE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fGOAL_BAR_BLUE,$/;"	e	enum:feature_type
fGOAL_BAR_YELLOW	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fGOAL_BAR_YELLOW,$/;"	e	enum:feature_type
fGOAL_POST_BLUE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fGOAL_POST_BLUE,$/;"	e	enum:feature_type
fGOAL_POST_YELLOW	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fGOAL_POST_YELLOW,$/;"	e	enum:feature_type
fInitXboxController	build/include/tool/joystickxbox.cpp	/^bool fInitXboxController = false;$/;"	v
fInitXboxController	tools/UTNaoTool/joystickxbox.cpp	/^bool fInitXboxController = false;$/;"	v
fNONE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fNONE = -1,$/;"	e	enum:feature_type
fNUM_FEATURES	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fNUM_FEATURES$/;"	e	enum:feature_type
fProcessedVision	interfaces/sim_spark/Parser.h	/^  bool fProcessedVision;$/;"	m	class:Parser
fROBOT_BLUE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fROBOT_BLUE,$/;"	e	enum:feature_type
fROBOT_RED	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   fROBOT_RED,$/;"	e	enum:feature_type
fRatio	interfaces/sim_spark/Random.h	/^   float fRatio( int v, int w )   \/\/ F Ratio (v and w >= 1)$/;"	f	class:Random
f_Ccall	lib/lua/src/lapi.c	/^static void f_Ccall (lua_State *L, void *ud) {$/;"	f	file:
f_call	lib/lua/src/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_corner_concave	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   f_corner_concave,$/;"	e	enum:low_feature_t
f_corner_convex	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   f_corner_convex,$/;"	e	enum:low_feature_t
f_dogs_breakfast	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   f_dogs_breakfast$/;"	e	enum:low_feature_t
f_flush	lib/lua/src/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_isLua	lib/lua/src/lstate.h	/^#define f_isLua(/;"	d
f_line_centre	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   f_line_centre,$/;"	e	enum:low_feature_t
f_line_edge	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   f_line_edge,$/;"	e	enum:low_feature_t
f_lines	lib/lua/src/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	lib/lua/src/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_none	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   f_none,$/;"	e	enum:low_feature_t
f_parser	lib/lua/src/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	lib/lua/src/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	lib/lua/src/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	lib/lua/src/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_write	lib/lua/src/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
facing_center	core/python/behaviors/walk_to_center.py	/^facing_center = False$/;"	v
facing_center	core/python/behaviors/walk_to_center_2.py	/^facing_center = False$/;"	v
factor	core/common/ExponentialFilter.h	/^  float factor;$/;"	m	class:ExponentialFilter
factor	core/common/RobotInfo.h	/^  int factor;$/;"	m	struct:ImageParams
fadbad	core/motion/rswalk2014/FADBAD++/fadbad.h	/^namespace fadbad$/;"	n
fadbad	core/motion/rswalk2014/FADBAD++/fadiff.h	/^namespace fadbad$/;"	n
failure	core/python/state_machine.py	/^  def failure(self):$/;"	m	class:Node
fall_direction_	core/memory/OdometryBlock.h	/^  Fall::FallDir fall_direction_;$/;"	m	struct:OdometryBlock
fallen	core/communications/SPLStandardMessage.h	/^  int8_t fallen;         \/\/ [MANDATORY FIELD] 1 means that the robot is fallen, 0 means that the robot can play$/;"	m	struct:SPLStandardMessage
fallenTime	build/include/tool/simulation/BehaviorSimulation.h	/^    float fallenTime[WO_ROBOTS_LAST + 1];$/;"	m	class:BehaviorSimulation
fallenTime	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    float fallenTime[WO_ROBOTS_LAST + 1];$/;"	m	class:BehaviorSimulation
falseBalls	build/include/tool/AnalysisWidget.h	/^    int falseBalls, falseCandidates, missingBalls, missingCandidates;$/;"	m	struct:ballstats
falseBalls	tools/UTNaoTool/AnalysisWidget.h	/^    int falseBalls, falseCandidates, missingBalls, missingCandidates;$/;"	m	struct:ballstats
falseCandidates	build/include/tool/AnalysisWidget.h	/^    int falseBalls, falseCandidates, missingBalls, missingCandidates;$/;"	m	struct:ballstats
falseCandidates	tools/UTNaoTool/AnalysisWidget.h	/^    int falseBalls, falseCandidates, missingBalls, missingCandidates;$/;"	m	struct:ballstats
falseNegativeCount	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^int AnnotationAnalyzer::falseNegativeCount(Color query){$/;"	f	class:AnnotationAnalyzer
falseNegativeCount	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^int AnnotationAnalyzer::falseNegativeCount(Color query){$/;"	f	class:AnnotationAnalyzer
falseNegativeRate	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^float AnnotationAnalyzer::falseNegativeRate(Color query){$/;"	f	class:AnnotationAnalyzer
falseNegativeRate	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^float AnnotationAnalyzer::falseNegativeRate(Color query){$/;"	f	class:AnnotationAnalyzer
falsePositiveCount	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^int AnnotationAnalyzer::falsePositiveCount(Color query){$/;"	f	class:AnnotationAnalyzer
falsePositiveCount	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^int AnnotationAnalyzer::falsePositiveCount(Color query){$/;"	f	class:AnnotationAnalyzer
falsePositiveRate	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^float AnnotationAnalyzer::falsePositiveRate(Color query){$/;"	f	class:AnnotationAnalyzer
falsePositiveRate	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^float AnnotationAnalyzer::falsePositiveRate(Color query){$/;"	f	class:AnnotationAnalyzer
falsePositives	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^std::vector<Point> AnnotationAnalyzer::falsePositives(Color query) {$/;"	f	class:AnnotationAnalyzer
falsePositives	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^std::vector<Point> AnnotationAnalyzer::falsePositives(Color query, int frame) {$/;"	f	class:AnnotationAnalyzer
falsePositives	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^std::vector<Point> AnnotationAnalyzer::falsePositives(Color query) {$/;"	f	class:AnnotationAnalyzer
falsePositives	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^std::vector<Point> AnnotationAnalyzer::falsePositives(Color query, int frame) {$/;"	f	class:AnnotationAnalyzer
falsePosts	build/include/tool/AnalysisWidget.h	/^  int falsePosts, truePosts, missingPosts;$/;"	m	struct:goalstats
falsePosts	tools/UTNaoTool/AnalysisWidget.h	/^  int falsePosts, truePosts, missingPosts;$/;"	m	struct:goalstats
fast_sensor_access_	interfaces/nao/src/naointerface.h	/^    boost::shared_ptr<AL::ALMemoryFastAccess> fast_sensor_access_;$/;"	m	class:naointerface
fasttm	lib/lua/src/ltm.h	/^#define fasttm(/;"	d
fatal	lib/lua/src/luac.c	/^static void fatal(const char* message)$/;"	f	file:
fbase	lib/alglib/optimization.h	/^    double fbase;$/;"	m	struct:alglib_impl::__anon73
fbase	lib/alglib/solvers.h	/^    double fbase;$/;"	m	struct:alglib_impl::__anon83
fblscgcreate	lib/alglib/linalg.cpp	/^void fblscgcreate(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
fblscgiteration	lib/alglib/linalg.cpp	/^ae_bool fblscgiteration(fblslincgstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
fblscholeskysolve	lib/alglib/linalg.cpp	/^void fblscholeskysolve(\/* Real    *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
fblslincgstate	lib/alglib/linalg.h	/^} fblslincgstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon68
fblssolvecgx	lib/alglib/linalg.cpp	/^void fblssolvecgx(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
fc	lib/zlib/deflate.h	/^    } fc;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anon133
fcdistribution	lib/alglib/specialfunctions.cpp	/^double fcdistribution(ae_int_t a, ae_int_t b, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
fcdistribution	lib/alglib/specialfunctions.cpp	/^double fcdistribution(const ae_int_t a, const ae_int_t b, const double x)$/;"	f	namespace:alglib
fct	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
fcts	tools/behaviorSim/cma.py	/^fcts = FitnessFunctions()$/;"	v
fcur	lib/alglib/alglibinternal.h	/^    double fcur;$/;"	m	struct:alglib_impl::__anon22
fd	lib/zlib/gzguts.h	/^    int fd;                 \/* file descriptor *\/$/;"	m	struct:__anon135
fdistribution	lib/alglib/specialfunctions.cpp	/^double fdistribution(ae_int_t a, ae_int_t b, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
fdistribution	lib/alglib/specialfunctions.cpp	/^double fdistribution(const ae_int_t a, const ae_int_t b, const double x)$/;"	f	namespace:alglib
fdopen	lib/zlib/zutil.h	/^#      define fdopen(/;"	d
fdopen	lib/zlib/zutil.h	/^#    define fdopen(/;"	d
fdopen	lib/zlib/zutil.h	/^#  define fdopen(/;"	d
feasible_ratio	tools/behaviorSim/cma.py	/^    def feasible_ratio(self, solutions):$/;"	m	class:BoundPenalty
feature_type	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^enum feature_type$/;"	g
feedForResume	tools/behaviorSim/cma.py	/^    def feedForResume(self, X, function_values):$/;"	m	class:CMAEvolutionStrategy
feetMissing	core/vision/structures/RobotCandidate.h	/^  bool feetMissing;$/;"	m	struct:RobotCandidate
feetX	core/vision/structures/RobotCandidate.h	/^  int feetY, feetX;$/;"	m	struct:RobotCandidate
feetY	core/vision/structures/RobotCandidate.h	/^  int feetY, feetX;$/;"	m	struct:RobotCandidate
feet_on_ground_	core/memory/BodyModelBlock.h	/^  bool feet_on_ground_; \/\/ if up for over 25 frames$/;"	m	struct:BodyModelBlock
feet_on_ground_inst_	core/memory/BodyModelBlock.h	/^  bool feet_on_ground_inst_; \/\/ instantaneous$/;"	m	struct:BodyModelBlock
felli	tools/behaviorSim/cma.py	/^def felli(x): # unbound function, needed to test multiprocessor $/;"	f
fftc1d	lib/alglib/fasttransforms.cpp	/^void fftc1d(\/* Complex *\/ ae_vector* a, ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
fftc1d	lib/alglib/fasttransforms.cpp	/^void fftc1d(complex_1d_array &a)$/;"	f	namespace:alglib
fftc1d	lib/alglib/fasttransforms.cpp	/^void fftc1d(complex_1d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
fftc1dinv	lib/alglib/fasttransforms.cpp	/^void fftc1dinv(\/* Complex *\/ ae_vector* a, ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
fftc1dinv	lib/alglib/fasttransforms.cpp	/^void fftc1dinv(complex_1d_array &a)$/;"	f	namespace:alglib
fftc1dinv	lib/alglib/fasttransforms.cpp	/^void fftc1dinv(complex_1d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
fftr1d	lib/alglib/fasttransforms.cpp	/^void fftr1d(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
fftr1d	lib/alglib/fasttransforms.cpp	/^void fftr1d(const real_1d_array &a, complex_1d_array &f)$/;"	f	namespace:alglib
fftr1d	lib/alglib/fasttransforms.cpp	/^void fftr1d(const real_1d_array &a, const ae_int_t n, complex_1d_array &f)$/;"	f	namespace:alglib
fftr1dinternaleven	lib/alglib/fasttransforms.cpp	/^void fftr1dinternaleven(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
fftr1dinv	lib/alglib/fasttransforms.cpp	/^void fftr1dinv(\/* Complex *\/ ae_vector* f,$/;"	f	namespace:alglib_impl
fftr1dinv	lib/alglib/fasttransforms.cpp	/^void fftr1dinv(const complex_1d_array &f, const ae_int_t n, real_1d_array &a)$/;"	f	namespace:alglib
fftr1dinv	lib/alglib/fasttransforms.cpp	/^void fftr1dinv(const complex_1d_array &f, real_1d_array &a)$/;"	f	namespace:alglib
fftr1dinvinternaleven	lib/alglib/fasttransforms.cpp	/^void fftr1dinvinternaleven(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
fhtr1d	lib/alglib/fasttransforms.cpp	/^void fhtr1d(\/* Real    *\/ ae_vector* a, ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
fhtr1d	lib/alglib/fasttransforms.cpp	/^void fhtr1d(real_1d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
fhtr1dinv	lib/alglib/fasttransforms.cpp	/^void fhtr1dinv(\/* Real    *\/ ae_vector* a, ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
fhtr1dinv	lib/alglib/fasttransforms.cpp	/^void fhtr1dinv(real_1d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
fi	lib/alglib/optimization.h	/^    ae_vector fi;$/;"	m	struct:alglib_impl::__anon73
fi	lib/alglib/optimization.h	/^    real_1d_array fi;$/;"	m	class:alglib::minlmstate
fi	lib/alglib/solvers.h	/^    ae_vector fi;$/;"	m	struct:alglib_impl::__anon83
fi	lib/alglib/solvers.h	/^    real_1d_array fi;$/;"	m	class:alglib::nleqstate
fib	lib/lua/test/fib.lua	/^function fib(n)$/;"	f
fibase	lib/alglib/optimization.h	/^    ae_vector fibase;$/;"	m	struct:alglib_impl::__anon73
field	core/python/behaviors/win.py	/^field = Fields.A$/;"	v
field	lib/lua/src/lparser.c	/^static void field (LexState *ls, expdesc *v) {$/;"	f	file:
fieldAreas	core/memory/BehaviorParamBlock.h	/^  FieldAreaRoleConfig fieldAreas[MAX_NUM_FIELD_AREAS];$/;"	m	struct:RoleStrategy
fieldClicked	build/include/tool/LogWidget.cpp	/^void LogWidget::fieldClicked(Point2D pos, Qt::MouseButton button) {$/;"	f	class:LogWidget
fieldClicked	build/include/tool/SimControlWidget.cpp	/^void SimControlWidget::fieldClicked(Point2D pos, Qt::MouseButton button) {$/;"	f	class:SimControlWidget
fieldClicked	build/include/tool/WorldWindow.cpp	/^void WorldWindow::fieldClicked(Point2D pos, Qt::MouseButton button) {$/;"	f	class:WorldWindow
fieldClicked	tools/UTNaoTool/LogWidget.cpp	/^void LogWidget::fieldClicked(Point2D pos, Qt::MouseButton button) {$/;"	f	class:LogWidget
fieldClicked	tools/UTNaoTool/SimControlWidget.cpp	/^void SimControlWidget::fieldClicked(Point2D pos, Qt::MouseButton button) {$/;"	f	class:SimControlWidget
fieldClicked	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::fieldClicked(Point2D pos, Qt::MouseButton button) {$/;"	f	class:WorldWindow
fieldDragged	build/include/tool/LogWidget.cpp	/^void LogWidget::fieldDragged(Point2D start, Point2D end, Qt::MouseButton button) {$/;"	f	class:LogWidget
fieldDragged	build/include/tool/SimControlWidget.cpp	/^void SimControlWidget::fieldDragged(Point2D start, Point2D end, Qt::MouseButton button) {$/;"	f	class:SimControlWidget
fieldDragged	tools/UTNaoTool/LogWidget.cpp	/^void LogWidget::fieldDragged(Point2D start, Point2D end, Qt::MouseButton button) {$/;"	f	class:LogWidget
fieldDragged	tools/UTNaoTool/SimControlWidget.cpp	/^void SimControlWidget::fieldDragged(Point2D start, Point2D end, Qt::MouseButton button) {$/;"	f	class:SimControlWidget
fieldHovered	build/include/tool/LogWidget.cpp	/^void LogWidget::fieldHovered(Point2D pos) {$/;"	f	class:LogWidget
fieldHovered	build/include/tool/SimControlWidget.cpp	/^void SimControlWidget::fieldHovered(Point2D pos) {$/;"	f	class:SimControlWidget
fieldHovered	build/include/tool/WorldWindow.cpp	/^void WorldWindow::fieldHovered(Point2D pos) {$/;"	f	class:WorldWindow
fieldHovered	tools/UTNaoTool/LogWidget.cpp	/^void LogWidget::fieldHovered(Point2D pos) {$/;"	f	class:LogWidget
fieldHovered	tools/UTNaoTool/SimControlWidget.cpp	/^void SimControlWidget::fieldHovered(Point2D pos) {$/;"	f	class:SimControlWidget
fieldHovered	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::fieldHovered(Point2D pos) {$/;"	f	class:WorldWindow
fieldLineIndex	core/common/WorldObject.h	/^  int fieldLineIndex;$/;"	m	class:WorldObject
field_length	particle_filters/MCL_particle_filter.hpp	/^    int field_length;$/;"	m	class:MCLParticleFilter
field_length	particle_filters/RMCL_particle_filter.hpp	/^    int field_length;$/;"	m	class:RMCLParticleFilter
field_width	particle_filters/MCL_particle_filter.hpp	/^    int field_width;$/;"	m	class:MCLParticleFilter
field_width	particle_filters/RMCL_particle_filter.hpp	/^    int field_width;$/;"	m	class:RMCLParticleFilter
figure	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
filAccX	core/motion/rswalk2014/BodyModel.hpp	/^      float filAccX;$/;"	m	class:BodyModel
filAccY	core/motion/rswalk2014/BodyModel.hpp	/^      float filAccY;$/;"	m	class:BodyModel
filHighZMPF	core/motion/rswalk2014/BodyModel.hpp	/^      float filHighZMPF;$/;"	m	class:BodyModel
filLowZMPF	core/motion/rswalk2014/BodyModel.hpp	/^      float filLowZMPF;$/;"	m	class:BodyModel
filZMPL	core/motion/rswalk2014/BodyModel.hpp	/^      float filZMPL;$/;"	m	class:BodyModel
fileLogLevel	core/memory/TextLogger.h	/^  int fileLogLevel;$/;"	m	class:TextLogger
fileName	lib/yaml-cpp/util/parse.cpp	/^	std::string fileName;$/;"	m	struct:Params	file:
fileSize	vision_testing/src/vision_testing.cpp	/^unsigned long fileSize(const char* filename)$/;"	f
file_compress	lib/zlib/minigzip.c	/^void file_compress(file, mode)$/;"	f
file_name	core/motion/rswalk2014/ActionGenerator.hpp	/^      std::string file_name;$/;"	m	class:ActionGenerator
file_uncompress	lib/zlib/minigzip.c	/^void file_uncompress(file)$/;"	f
fileerror	lib/lua/src/liolib.c	/^static void fileerror (lua_State *L, int arg, const char *filename) {$/;"	f	file:
fileinput	tools/behaviorSim/cma.py	/^    import fileinput$/;"	i
filename	build/luaswig/generateSwig.py	/^    filename = args[0]$/;"	v
filename	tools/behaviorSim/runJob.py	/^filename = dir + '\/%i.json' % ind$/;"	v
filename_	core/memory/LogReader.h	/^    std::string filename_;$/;"	m	class:LogReader
filename_	core/memory/Logger.h	/^  std::string directory_, filename_;$/;"	m	class:Logger
fileno	lib/zlib/minigzip.c	/^#  define fileno(/;"	d	file:
files	build/include/tool/FilesWindow.h	/^    QCheckBox* files;$/;"	m	class:FilesWindow
files	tools/UTNaoTool/FilesWindow.h	/^    QCheckBox* files;$/;"	m	class:FilesWindow
filesLocationIndex	build/include/tool/ToolConfig.h	/^    int filesLocationIndex;$/;"	m	class:ToolConfig
filesLocationIndex	tools/UTNaoTool/ToolConfig.h	/^    int filesLocationIndex;$/;"	m	class:ToolConfig
filesUpdateTimeChecked	build/include/tool/ToolConfig.h	/^    bool filesUpdateTimeChecked;$/;"	m	class:ToolConfig
filesUpdateTimeChecked	tools/UTNaoTool/ToolConfig.h	/^    bool filesUpdateTimeChecked;$/;"	m	class:ToolConfig
filesWnd_	build/include/tool/UTMainWnd.h	/^  FilesWindow* filesWnd_;$/;"	m	class:UTMainWnd
filesWnd_	tools/UTNaoTool/UTMainWnd.h	/^  FilesWindow* filesWnd_;$/;"	m	class:UTMainWnd
fill	build/include/tool/ImageWidget.h	/^   inline void fill(unsigned char value) {$/;"	f	class:ImageWidget
fill	core/memory/MemoryCache.cpp	/^void MemoryCache::fill(Memory& memory) {$/;"	f	class:MemoryCache
fill	core/memory/MemoryCache.cpp	/^void MemoryCache::fill(Memory* memory) {$/;"	f	class:MemoryCache
fill	tools/UTNaoTool/ImageWidget.h	/^   inline void fill(unsigned char value) {$/;"	f	class:ImageWidget
fillCaches	build/include/tool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::fillCaches() {$/;"	f	class:CommunicationGenerator
fillCaches	tools/UTNaoTool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::fillCaches() {$/;"	f	class:CommunicationGenerator
fillObservationObjects	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::fillObservationObjects() {$/;"	f	class:ObservationGenerator
fillObservationObjects	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::fillObservationObjects() {$/;"	f	class:ObservationGenerator
fill_window	lib/zlib/deflate.c	/^local void fill_window(s)$/;"	f
filloutID	install/copy_wpa.py	/^def filloutID(name,robotID,d):$/;"	f
filloutID	install/setup_robot	/^def filloutID(name,robotID,d):$/;"	f
filtRoll	core/sensor/InertialFilter.h	/^  float filtRoll;$/;"	m	class:InertialFilter
filtRollVel	core/sensor/InertialFilter.h	/^  float filtRollVel;$/;"	m	class:InertialFilter
filtTilt	core/sensor/InertialFilter.h	/^  float filtTilt;$/;"	m	class:InertialFilter
filtTiltVel	core/sensor/InertialFilter.h	/^  float filtTiltVel;$/;"	m	class:InertialFilter
filter 	lib/lua/test/sieve.lua	/^function filter (p, g)$/;"	f
filterAnnotation	build/include/tool/AnnotationWidget.cpp	/^bool AnnotationWidget::filterAnnotation(Annotation* annotation){$/;"	f	class:AnnotationWidget
filterAnnotation	tools/UTNaoTool/AnnotationWidget.cpp	/^bool AnnotationWidget::filterAnnotation(Annotation* annotation){$/;"	f	class:AnnotationWidget
filterCompileArgs	bin/compile_copy	/^def filterCompileArgs(args):$/;"	f
filterCompileArgs	build/compile_copy	/^def filterCompileArgs(args):$/;"	f
filterCompileArgs	build/cpcompile	/^def filterCompileArgs(args):$/;"	f
filterCopyArgs	bin/compile_copy	/^def filterCopyArgs(args):$/;"	f
filterCopyArgs	build/compile_copy	/^def filterCopyArgs(args):$/;"	f
filterCopyArgs	build/cpcompile	/^def filterCopyArgs(args):$/;"	f
filterFSR	core/sensor/SensorModule.cpp	/^void SensorModule::filterFSR() {$/;"	f	class:SensorModule
filterInertial	core/sensor/SensorModule.cpp	/^void SensorModule::filterInertial() {$/;"	f	class:SensorModule
filterSonarsFromConfidence	core/sonar/SonarModule.cpp	/^void SonarModule::filterSonarsFromConfidence() {$/;"	f	class:SonarModule
filterSonarsFromMedian	core/sonar/SonarModule.cpp	/^void SonarModule::filterSonarsFromMedian() {$/;"	f	class:SonarModule
filter_spaces	lib/alglib/ap.cpp	/^char* alglib::filter_spaces(const char *s)$/;"	f	class:alglib
filteredGyroX	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float filteredGyroX;$/;"	m	class:Walk2014Generator
filteredGyroY	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float filteredGyroY;$/;"	m	class:Walk2014Generator
filteredTotalPressure	core/motion/rswalk2014/BodyModel.hpp	/^      float filteredTotalPressure;$/;"	m	class:BodyModel
findBall	core/vision/ImageProcessor.cpp	/^bool ImageProcessor::findBall(MergeBlob::Blob* blob)$/;"	f	class:ImageProcessor
findBeacons	core/vision/BeaconDetector.cpp	/^void BeaconDetector::findBeacons(unsigned char* img, MergeBlob* mb)$/;"	f	class:BeaconDetector
findChessboardCorners	build/include/tool/calibration/JointCalibrator.cpp	/^vector<Vector2f> JointCalibrator::findChessboardCorners(cv::Mat& image) const {$/;"	f	class:JointCalibrator
findChessboardCorners	build/include/tool/calibration/JointCalibrator.cpp	/^vector<Vector2f> JointCalibrator::findChessboardCorners(unsigned char* image) const {$/;"	f	class:JointCalibrator
findChessboardCorners	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^vector<Vector2f> JointCalibrator::findChessboardCorners(cv::Mat& image) const {$/;"	f	class:JointCalibrator
findChessboardCorners	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^vector<Vector2f> JointCalibrator::findChessboardCorners(unsigned char* image) const {$/;"	f	class:JointCalibrator
findState	core/common/StateMachine.cpp	/^std::vector<StatePair>::iterator StateMachine::findState(std::string name) {$/;"	f	class:StateMachine
findfile	lib/lua/src/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findindex	lib/lua/src/ltable.c	/^static int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findlocal	lib/lua/src/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n) {$/;"	f	file:
finish	core/motion/KickModule.cpp	/^void KickModule::finish() {$/;"	f	class:KickModule
finish	core/python/state_machine.py	/^  def finish(self):$/;"	m	class:Node
finish	core/python/task.py	/^  def finish(self):$/;"	m	class:BaseTask
finish_	core/memory/Log.h	/^    int start_, finish_;$/;"	m	class:Log
finish_done	lib/zlib/deflate.c	/^    finish_done     \/* finish done, accept no more input or output *\/$/;"	e	enum:__anon132	file:
finish_stand_joint_time_	core/memory/KickEngineBlock.h	/^  float finish_stand_joint_time_;$/;"	m	struct:KickEngineBlock
finish_stand_tall_time_	core/memory/KickEngineBlock.h	/^  float finish_stand_tall_time_;$/;"	m	struct:KickEngineBlock
finish_stand_time_	core/memory/KickEngineBlock.h	/^  float finish_stand_time_;$/;"	m	struct:KickEngineBlock
finish_started	lib/zlib/deflate.c	/^    finish_started, \/* finish started, need only more output at next deflate *\/$/;"	e	enum:__anon132	file:
finished	core/motion/KickModule.cpp	/^bool KickModule::finished() {$/;"	f	class:KickModule
finished	core/python/task.py	/^  def finished(self):$/;"	m	class:BaseTask
finishedBy	core/math/Range.h	/^    bool finishedBy(const Range<T>& r) const {return max == r.max && min < r.min;}$/;"	f	class:Range
finishedWithStep	core/memory/KickRequestBlock.h	/^  void finishedWithStep() {$/;"	f	struct:KickRequestBlock
finished_standing_	core/memory/WalkRequestBlock.h	/^  bool finished_standing_;$/;"	m	struct:WalkRequestBlock
finished_standing_	core/memory/WalkResponseBlock.h	/^  bool finished_standing_;$/;"	m	struct:WalkResponseBlock
finished_with_step_	core/memory/KickRequestBlock.h	/^  bool finished_with_step_;$/;"	m	struct:KickRequestBlock
finished_with_target_	core/memory/WalkInfoBlock.h	/^  bool finished_with_target_;$/;"	m	struct:WalkInfoBlock
finished_with_target_max_x_error_	core/memory/WalkRequestBlock.h	/^  float finished_with_target_max_x_error_;$/;"	m	struct:WalkRequestBlock
finished_with_target_max_y_error_	core/memory/WalkRequestBlock.h	/^  float finished_with_target_max_y_error_;$/;"	m	struct:WalkRequestBlock
finished_with_target_min_y_error_	core/memory/WalkRequestBlock.h	/^  float finished_with_target_min_y_error_;$/;"	m	struct:WalkRequestBlock
finishes	core/math/Range.h	/^    bool finishes(const Range<T>& r) const {return max == r.max && min > r.min;}$/;"	f	class:Range
finit	lib/alglib/alglibinternal.h	/^    double finit;$/;"	m	struct:alglib_impl::__anon21
finit	lib/alglib/dataanalysis.h	/^    double finit;$/;"	m	struct:alglib_impl::__anon46
finit	lib/alglib/optimization.h	/^    double finit;$/;"	m	struct:alglib_impl::__anon75
fire	core/python/state_machine.py	/^  def fire(self):$/;"	m	class:Event
fired	core/python/state_machine.py	/^  def fired(self):$/;"	m	class:Event
first	core/localization/LocalizationModule.h	/^    bool first;$/;"	m	class:LocalizationModule
first	lib/yaml-cpp/src/iterator.cpp	/^	const Node& Iterator::first() const$/;"	f	class:YAML::Iterator
first	lib/yaml-cpp/test/old-api/spectests.cpp	/^			std::string first, second;$/;"	m	struct:Test::Spec::Pair	file:
firstHalf	core/communications/RoboCupGameControlData.h	/^  uint8_t firstHalf;            \/\/ 1 = game in first half, 0 otherwise$/;"	m	struct:RoboCupGameControlData
first_in_state_	core/memory/KickEngineBlock.h	/^  bool first_in_state_;$/;"	m	struct:KickEngineBlock
fisherlda	lib/alglib/dataanalysis.cpp	/^void fisherlda(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
fisherlda	lib/alglib/dataanalysis.cpp	/^void fisherlda(const real_2d_array &xy, const ae_int_t npoints, const ae_int_t nvars, const ae_int_t nclasses, ae_int_t &info, real_1d_array &w)$/;"	f	namespace:alglib
fisherldan	lib/alglib/dataanalysis.cpp	/^void fisherldan(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
fisherldan	lib/alglib/dataanalysis.cpp	/^void fisherldan(const real_2d_array &xy, const ae_int_t npoints, const ae_int_t nvars, const ae_int_t nclasses, ae_int_t &info, real_2d_array &w)$/;"	f	namespace:alglib
fixedtables	lib/zlib/infback.c	/^local void fixedtables(state)$/;"	f
fixedtables	lib/zlib/inflate.c	/^local void fixedtables(state)$/;"	f
fixjump	lib/lua/src/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
fixpoints	build/include/tool/annotations/EllipseSelection.h	/^        void fixpoints() {$/;"	f	class:EllipseSelection
fixpoints	tools/UTNaoTool/annotations/EllipseSelection.h	/^        void fixpoints() {$/;"	f	class:EllipseSelection
flags	build/include/tool/calibration/CalibratorSettings.h	/^    unsigned int flags;$/;"	m	class:CalibratorSettings
flags	core/imageCapture/i2c-dev.h	/^	unsigned short flags;		$/;"	m	struct:i2c_msg
flags	lib/lua/src/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/ $/;"	m	struct:Table
flags	lib/zlib/inflate.h	/^    int flags;                  \/* gzip header method and flags (0 if zlib) *\/$/;"	m	struct:inflate_state
flags	tools/UTNaoTool/calibration/CalibratorSettings.h	/^    unsigned int flags;$/;"	m	class:CalibratorSettings
flat	tools/behaviorSim/cma.py	/^    def flat(self,x):$/;"	m	class:FitnessFunctions
flattenParams	tools/behaviorSim/runCMAES.py	/^def flattenParams(conf,paramNames,paramVals,prefix):$/;"	f
flattened	tools/behaviorSim/cma.py	/^    def flattened(self):$/;"	m	class:Sections
flib	lib/lua/src/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
flip	build/include/tool/SimControlWidget.cpp	/^void SimControlWidget::flip() {$/;"	f	class:SimControlWidget
flip	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::flip() {$/;"	f	class:LocalizationSimulation
flip	build/include/tool/simulation/SimulationPath.cpp	/^void SimulationPath::flip() {$/;"	f	class:SimulationPath
flip	tools/UTNaoTool/SimControlWidget.cpp	/^void SimControlWidget::flip() {$/;"	f	class:SimControlWidget
flip	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::flip() {$/;"	f	class:LocalizationSimulation
flip	tools/UTNaoTool/simulation/SimulationPath.cpp	/^void SimulationPath::flip() {$/;"	f	class:SimulationPath
flipRobot	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::flipRobot(int index){$/;"	f	class:BehaviorSimulation
flipRobot	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::flipRobot(int index){$/;"	f	class:BehaviorSimulation
fliteJointNames	core/motion/rswalk2014/utils/body.hpp	/^   const std::string fliteJointNames[] = {$/;"	m	namespace:RSJoints
floatLog	interfaces/sim_spark/Random.h	/^   float floatLog( float xMin = -1., float xMax = 1. )   \/\/ Double Log$/;"	f	class:Random
floatPrecision	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^        int floatPrecision;$/;"	m	struct:YAML::_Precision
floor	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
flow	lib/yaml-cpp/src/emitterstate.h	/^			EMITTER_MANIP flow;$/;"	m	struct:YAML::EmitterState::Group
flowLevel	lib/yaml-cpp/src/scanner.h	/^			int flowLevel;$/;"	m	struct:YAML::Scanner::SimpleKey
flush_pending	lib/zlib/deflate.c	/^local void flush_pending(strm)$/;"	f
flushconsole	lib/alglib/ap.h	/^#define flushconsole(/;"	d
fly	tools/behaviorSim/cma.py	/^                if 1 < 3:  # import pygsl on the fly$/;"	i
fm	lib/alglib/alglibinternal.h	/^    double fm;$/;"	m	struct:alglib_impl::__anon21
fm	lib/alglib/dataanalysis.h	/^    double fm;$/;"	m	struct:alglib_impl::__anon46
fm1	lib/alglib/optimization.h	/^    ae_vector fm1;$/;"	m	struct:alglib_impl::__anon73
fmax	lib/alglib/alglibinternal.h	/^    ae_int_t fmax;$/;"	m	struct:alglib_impl::__anon22
fmin	tools/behaviorSim/cma.py	/^def fmin(func, x0, sigma0=None, args=()$/;"	f
fnames	lib/lua/src/liolib.c	/^static const char *const fnames[] = {"input", "output"};$/;"	v	file:
focusInEvent	build/include/tool/RobotControllerWidget.cpp	/^void RobotControllerWidget::focusInEvent(QFocusEvent* fevent) {$/;"	f	class:RobotControllerWidget
focusInEvent	tools/UTNaoTool/RobotControllerWidget.cpp	/^void RobotControllerWidget::focusInEvent(QFocusEvent* fevent) {$/;"	f	class:RobotControllerWidget
focusOutEvent	build/include/tool/RobotControllerWidget.cpp	/^void RobotControllerWidget::focusOutEvent(QFocusEvent* fevent) {$/;"	f	class:RobotControllerWidget
focusOutEvent	build/include/tool/WorldGLWidget.h	/^    void focusOutEvent(QFocusEvent* fevent) { kpressed_.clear(); modifiers_ = Qt::NoModifier; }$/;"	f	class:WorldGLWidget
focusOutEvent	tools/UTNaoTool/RobotControllerWidget.cpp	/^void RobotControllerWidget::focusOutEvent(QFocusEvent* fevent) {$/;"	f	class:RobotControllerWidget
focusOutEvent	tools/UTNaoTool/WorldGLWidget.h	/^    void focusOutEvent(QFocusEvent* fevent) { kpressed_.clear(); modifiers_ = Qt::NoModifier; }$/;"	f	class:WorldGLWidget
fold	lib/alglib/optimization.h	/^    double fold;$/;"	m	struct:alglib_impl::__anon69
fold	lib/alglib/optimization.h	/^    double fold;$/;"	m	struct:alglib_impl::__anon75
fold	lib/alglib/optimization.h	/^    double fold;$/;"	m	struct:alglib_impl::__anon77
fold	lib/yaml-cpp/src/scanscalar.h	/^		FOLD fold;                      \/\/ how do we fold line ends?$/;"	m	struct:YAML::ScanScalarParams
foo	lib/lua/doc/manual.html	/^     function foo (a)$/;"	f
foot	core/motion/rswalk2014/Walk2014Generator.hpp	/^   ActionCommand::Body::Foot foot;                         \/\/ is this right?$/;"	m	class:Walk2014Generator
foot	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^         ActionCommand::Body::Foot foot;$/;"	m	class:WalkEnginePreProcessor::DribbleEngine
foot	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^         ActionCommand::Body::Foot foot;$/;"	m	class:WalkEnginePreProcessor::LineUpEngine
foot	core/motion/rswalk2014/types/ActionCommand.hpp	/^      Foot foot;$/;"	m	struct:ActionCommand::Body
footHeight	core/common/RobotDimensions.h	/^    footHeight,$/;"	e	enum:RobotDimensions::__anon8
footLength	core/common/RobotDimensions.h	/^    footLength,$/;"	e	enum:RobotDimensions::__anon8
footSwitchT	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float footSwitchT;$/;"	m	class:Walk2014Generator
footWidth	core/common/RobotDimensions.h	/^    footWidth,$/;"	e	enum:RobotDimensions::__anon8
foot_down_joint_time_	core/memory/KickEngineBlock.h	/^  float foot_down_joint_time_;$/;"	m	struct:KickEngineBlock
foot_down_time_	core/memory/KickEngineBlock.h	/^  float foot_down_time_;$/;"	m	struct:KickEngineBlock
foot_middle_joint_time_	core/memory/KickEngineBlock.h	/^  float foot_middle_joint_time_;$/;"	m	struct:KickEngineBlock
foot_middle_time_	core/memory/KickEngineBlock.h	/^  float foot_middle_time_;$/;"	m	struct:KickEngineBlock
foot_separation_	core/motion/WalkEngineParameters.h	/^  float foot_separation_;$/;"	m	struct:WalkEngineParameters
foot_up_distance_	core/memory/KickEngineBlock.h	/^  float foot_up_distance_;$/;"	m	struct:KickEngineBlock
foothL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float foothL;                                           \/\/ meters left foot is lifted off the ground$/;"	m	class:Walk2014Generator
foothR	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float foothR;                                           \/\/ meters right foot is lifted off the ground$/;"	m	class:Walk2014Generator
for	tools/behaviorSim/cma.py	/^from __future__ import print_function  # for cross-checking, available from python 2.6$/;"	i
for	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
forbody	lib/lua/src/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
forceDesiredPositions	build/include/tool/simulation/BehaviorSimulation.h	/^    bool forceDesiredPositions;$/;"	m	class:BehaviorSimulation
forceDesiredPositions	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    bool forceDesiredPositions;$/;"	m	class:BehaviorSimulation
forceManualPositions	build/include/tool/simulation/BehaviorSimulation.h	/^    bool forceManualPositions;$/;"	m	class:BehaviorSimulation
forceManualPositions	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    bool forceManualPositions;$/;"	m	class:BehaviorSimulation
forceStopLogButton	build/include/tool/LogSelectWindow.h	/^    QPushButton* forceStopLogButton;$/;"	m	class:LogSelectWindow
forceStopLogButton	tools/UTNaoTool/LogSelectWindow.h	/^    QPushButton* forceStopLogButton;$/;"	m	class:LogSelectWindow
forceTransition	core/common/StateMachine.cpp	/^bool StateMachine::forceTransition(std::string name) {$/;"	f	class:StateMachine
force_hermitian_rec_diag_stat	lib/alglib/ap.cpp	/^static void force_hermitian_rec_diag_stat(x_matrix *a, ae_int_t offset, ae_int_t len)$/;"	f	namespace:alglib_impl
force_hermitian_rec_off_stat	lib/alglib/ap.cpp	/^static void force_hermitian_rec_off_stat(x_matrix *a, ae_int_t offset0, ae_int_t offset1, ae_int_t len0, ae_int_t len1)$/;"	f	namespace:alglib_impl
force_symmetric_rec_diag_stat	lib/alglib/ap.cpp	/^static void force_symmetric_rec_diag_stat(x_matrix *a, ae_int_t offset, ae_int_t len)$/;"	f	namespace:alglib_impl
force_symmetric_rec_off_stat	lib/alglib/ap.cpp	/^static void force_symmetric_rec_off_stat(x_matrix *a, ae_int_t offset0, ae_int_t offset1, ae_int_t len0, ae_int_t len1)$/;"	f	namespace:alglib_impl
foreach	lib/lua/src/ltablib.c	/^static int foreach (lua_State *L) {$/;"	f	file:
foreachi	lib/lua/src/ltablib.c	/^static int foreachi (lua_State *L) {$/;"	f	file:
forlist	lib/lua/src/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
fornum	lib/lua/src/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	lib/lua/src/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
forward	build/include/tool/WorldWindow.cpp	/^void WorldWindow::forward() {$/;"	f	class:WorldWindow
forward	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float forward;                                          \/\/ Omnidirectional walk forward\/backward$/;"	m	class:Walk2014Generator
forward	core/motion/rswalk2014/types/ActionCommand.hpp	/^      int forward; \/\/ How far forward (negative for backwards)  (mm)$/;"	m	struct:ActionCommand::Body
forward	core/motion/rswalk2014/types/Odometry.hpp	/^   float forward;$/;"	m	struct:Odometry
forward	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::forward() {$/;"	f	class:WorldWindow
forwardL	core/motion/rswalk2014/BodyModel.hpp	/^      float forwardL, forwardR, turnL, turnR;$/;"	m	class:BodyModel
forwardL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float forwardL0, forwardL;                              \/\/ variable left foot position wrt standing$/;"	m	class:Walk2014Generator
forwardL0	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float forwardL0, forwardL;                              \/\/ variable left foot position wrt standing$/;"	m	class:Walk2014Generator
forwardOpeningAngle	core/memory/BehaviorParamBlock.h	/^  float forwardOpeningAngle;$/;"	m	struct:ClusterKickStrategy
forwardOpeningAngle	core/memory/BehaviorParamBlock.h	/^  float forwardOpeningAngle;$/;"	m	struct:KickStrategy
forwardR	core/motion/rswalk2014/BodyModel.hpp	/^      float forwardL, forwardR, turnL, turnR;$/;"	m	class:BodyModel
forwardR	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float forwardR0, forwardR;                              \/\/ variable right foot position wrt standing$/;"	m	class:Walk2014Generator
forwardR0	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float forwardR0, forwardR;                              \/\/ variable right foot position wrt standing$/;"	m	class:Walk2014Generator
foundKeeper	core/memory/BehaviorBlock.h	/^  bool foundKeeper;$/;"	m	struct:BehaviorBlock
fovToImageSpaceTransform	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Kinematics::fovToImageSpaceTransform($/;"	f	class:Kinematics
fp1	lib/alglib/optimization.h	/^    ae_vector fp1;$/;"	m	struct:alglib_impl::__anon73
fp_eq	lib/alglib/ap.cpp	/^bool alglib::fp_eq(double v1, double v2)$/;"	f	class:alglib
fp_greater	lib/alglib/ap.cpp	/^bool alglib::fp_greater(double v1, double v2)$/;"	f	class:alglib
fp_greater_eq	lib/alglib/ap.cpp	/^bool alglib::fp_greater_eq(double v1, double v2)$/;"	f	class:alglib
fp_isfinite	lib/alglib/ap.cpp	/^bool alglib::fp_isfinite(double x)$/;"	f	class:alglib
fp_isinf	lib/alglib/ap.cpp	/^bool alglib::fp_isinf(double x)$/;"	f	class:alglib
fp_isnan	lib/alglib/ap.cpp	/^bool alglib::fp_isnan(double x)$/;"	f	class:alglib
fp_isneginf	lib/alglib/ap.cpp	/^bool alglib::fp_isneginf(double x)$/;"	f	class:alglib
fp_isposinf	lib/alglib/ap.cpp	/^bool alglib::fp_isposinf(double x)$/;"	f	class:alglib
fp_less	lib/alglib/ap.cpp	/^bool alglib::fp_less(double v1, double v2)$/;"	f	class:alglib
fp_less_eq	lib/alglib/ap.cpp	/^bool alglib::fp_less_eq(double v1, double v2)$/;"	f	class:alglib
fp_nan	lib/alglib/ap.cpp	/^const double alglib::fp_nan         =  alglib::get_aenv_nan();$/;"	m	class:alglib	file:
fp_neginf	lib/alglib/ap.cpp	/^const double alglib::fp_neginf      =  alglib::get_aenv_neginf();$/;"	m	class:alglib	file:
fp_neq	lib/alglib/ap.cpp	/^bool alglib::fp_neq(double v1, double v2)$/;"	f	class:alglib
fp_posinf	lib/alglib/ap.cpp	/^const double alglib::fp_posinf      =  alglib::get_aenv_posinf();$/;"	m	class:alglib	file:
fpcount	build/include/tool/annotations/AnnotationAnalyzer.h	/^    int fpcount, tpcount;$/;"	m	struct:YUV
fpcount	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    int fpcount, tpcount;$/;"	m	struct:YUV
fpmap_	build/include/tool/annotations/AnnotationAnalyzer.h	/^        YUV* fpmap_[LUT_SIZE];$/;"	m	class:AnnotationAnalyzer
fpmap_	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^        YUV* fpmap_[LUT_SIZE];$/;"	m	class:AnnotationAnalyzer
fprev	lib/alglib/solvers.h	/^    double fprev;$/;"	m	struct:alglib_impl::__anon83
fps_frames_processed_	core/MotionCore.h	/^  unsigned int fps_frames_processed_;$/;"	m	class:MotionCore
fps_time_	core/MotionCore.h	/^  double fps_time_;$/;"	m	class:MotionCore
frac_of_step_completed_	core/memory/WalkInfoBlock.h	/^  float frac_of_step_completed_;$/;"	m	struct:WalkInfoBlock
fraceps	lib/alglib/diffequations.h	/^    ae_bool fraceps;$/;"	m	struct:alglib_impl::__anon51
fraction_moving	tools/testStep.py	/^fraction_moving = 0.55$/;"	v
fraction_moving	tools/testStepSide.py	/^fraction_moving = 0.55$/;"	v
fraction_still	tools/testStep.py	/^fraction_still = 0.225$/;"	v
fraction_still	tools/testStepSide.py	/^fraction_still = 0.225$/;"	v
frame	build/include/tool/LogWidget.h	/^    int frame;$/;"	m	class:LAWidgetItem
frame	build/include/tool/annotations/LocalizationAnnotation.h	/^    int frame() const { return frame_; }$/;"	f	class:LocalizationAnnotation
frame	tools/UTNaoTool/LogWidget.h	/^    int frame;$/;"	m	class:LAWidgetItem
frame	tools/UTNaoTool/annotations/LocalizationAnnotation.h	/^    int frame() const { return frame_; }$/;"	f	class:LocalizationAnnotation
frameBufferCount	core/imageCapture/NaoCamera.h	/^    frameBufferCount = 3, \/**< Amount of available frame buffers. *\/$/;"	e	enum:NaoCamera::__anon11
frameCount	build/include/tool/LogSelectWindow.h	/^    QSpinBox* frameCount;$/;"	m	class:LogSelectWindow
frameCount	tools/UTNaoTool/LogSelectWindow.h	/^    QSpinBox* frameCount;$/;"	m	class:LogSelectWindow
frameInfo	build/include/tool/simulation/BehaviorSimulation.h	/^    FrameInfoBlock* frameInfo;$/;"	m	class:BehaviorSimulation
frameInfo	core/memory/TextLogger.h	/^  FrameInfoBlock* frameInfo;$/;"	m	class:TextLogger
frameInfo	core/opponents/UKF4.h	/^  FrameInfoBlock* frameInfo;$/;"	m	class:UKF4
frameInfo	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    FrameInfoBlock* frameInfo;$/;"	m	class:BehaviorSimulation
frameLastObserved	core/memory/OpponentBlock.h	/^  int frameLastObserved;$/;"	m	struct:OpponentModel
frameLastSeen	core/common/WorldObject.h	/^  int frameLastSeen;$/;"	m	class:WorldObject
frameLoaded	build/include/tool/LogWidget.cpp	/^void LogWidget::frameLoaded(int frame) {$/;"	f	class:LogWidget
frameLoaded	tools/UTNaoTool/LogWidget.cpp	/^void LogWidget::frameLoaded(int frame) {$/;"	f	class:LogWidget
frameReceived	core/memory/GameStateBlock.h	/^  int frameReceived;$/;"	m	struct:GameStateBlock
frameStarted	core/memory/DelayedLocalizationBlock.h	/^  unsigned int frameStarted; \/\/ not really needed now, but might be interesting$/;"	m	struct:DelayedLocalizationBlock
frameTwist	motion_planning/src/plan_kick.cpp	/^  inline matec_utils::Vector6 frameTwist(matec_utils::Matrix4 commonTf1, matec_utils::Matrix4 commonTf2, double dt, double& dx, double& dy, double& dz, double& dR, double& dP, double& dY)$/;"	f	namespace:motion_planning
frameUpdated	core/opponents/UKF4.h	/^  int frameUpdated;$/;"	m	class:UKF4
frame_	build/include/tool/LogEditorWindow.h	/^    int frame_;$/;"	m	class:FrameListWidgetItem
frame_	build/include/tool/LogWidget.h	/^    int frame_;$/;"	m	class:LogWidget
frame_	build/include/tool/MotionGLWidget.h	/^  FrameInfoBlock* frame_;$/;"	m	class:MotionGLWidget
frame_	build/include/tool/VisionWindow.h	/^  int frame_;$/;"	m	class:VisionWindow
frame_	build/include/tool/annotations/LocalizationAnnotation.h	/^    int frame_;$/;"	m	class:LocalizationAnnotation
frame_	core/memory/WalkEngineBlock.h	/^    unsigned int frame_;$/;"	m	struct:WalkEngineBlock::Step
frame_	tools/UTNaoTool/LogEditorWindow.h	/^    int frame_;$/;"	m	class:FrameListWidgetItem
frame_	tools/UTNaoTool/LogWidget.h	/^    int frame_;$/;"	m	class:LogWidget
frame_	tools/UTNaoTool/MotionGLWidget.h	/^  FrameInfoBlock* frame_;$/;"	m	class:MotionGLWidget
frame_	tools/UTNaoTool/VisionWindow.h	/^  int frame_;$/;"	m	class:VisionWindow
frame_	tools/UTNaoTool/annotations/LocalizationAnnotation.h	/^    int frame_;$/;"	m	class:LocalizationAnnotation
frame_id	core/memory/FrameInfoBlock.h	/^  unsigned int frame_id;$/;"	m	struct:FrameInfoBlock
frame_id_	core/memory/Logger.cpp	/^int Logger::frame_id_ = 0;$/;"	m	class:Logger	file:
frame_id_	core/memory/Logger.h	/^  static int frame_id_;$/;"	m	class:Logger
frame_info	core/memory/MemoryCache.h	/^    FrameInfoBlock* frame_info;$/;"	m	class:MemoryCache
frame_info	core/vision/VisionBlocks.h	/^    FrameInfoBlock*& frame_info;$/;"	m	class:VisionBlocks
frame_info_	build/include/tool/MotionSimulation.h	/^  FrameInfoBlock *frame_info_;$/;"	m	class:MotionSimulation
frame_info_	build/include/tool/simulation/ObservationGenerator.h	/^    FrameInfoBlock* frame_info_;$/;"	m	class:ObservationGenerator
frame_info_	core/MotionCore.h	/^  FrameInfoBlock *frame_info_;$/;"	m	class:MotionCore
frame_info_	core/communications/CommunicationModule.h	/^  FrameInfoBlock *frame_info_;$/;"	m	class:CommunicationModule
frame_info_	core/motion/SpecialMotionModule.h	/^  FrameInfoBlock *frame_info_;$/;"	m	class:SpecialMotionModule
frame_info_	core/motion/rswalk2014/RSWalkModule2014.h	/^        FrameInfoBlock *frame_info_;$/;"	m	class:RSWalkModule2014
frame_info_	core/sensor/ButtonModule.h	/^  FrameInfoBlock *frame_info_;$/;"	m	class:ButtonModule
frame_info_	core/sensor/SensorModule.h	/^  FrameInfoBlock *frame_info_;$/;"	m	class:SensorModule
frame_info_	core/sonar/SonarModule.h	/^  FrameInfoBlock *frame_info_;$/;"	m	class:SonarModule
frame_info_	interfaces/nao/src/naointerface.h	/^    FrameInfoBlock *frame_info_;$/;"	m	class:naointerface
frame_info_	interfaces/sim_spark/RobotBehavior.h	/^  FrameInfoBlock* frame_info_;$/;"	m	class:RobotBehavior
frame_info_	tools/UTNaoTool/MotionSimulation.h	/^  FrameInfoBlock *frame_info_;$/;"	m	class:MotionSimulation
frame_info_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    FrameInfoBlock* frame_info_;$/;"	m	class:ObservationGenerator
frameid	core/memory/MemoryBlock.h	/^  unsigned int frameid;$/;"	m	struct:MemoryBlockHeader
frames	core/common/Keyframe.h	/^    int frames;$/;"	m	class:Keyframe
frames	core/common/ToolPacket.h	/^  int frames;$/;"	m	struct:ToolPacket
frames	core/memory/LogMetadata.h	/^    unsigned int frames;$/;"	m	class:LogMetadata
framesSinceTransition	core/python/state_machine.py	/^  def framesSinceTransition(self):$/;"	m	class:SimpleStateMachine
frames_	core/motion/KickModule.h	/^    int frames_;$/;"	m	class:KickModule
frames_in_air_	core/kinematics/KinematicsModule.h	/^  int frames_in_air_;$/;"	m	class:KinematicsModule
frames_to_log_	core/VisionCore.h	/^  unsigned int frames_to_log_;$/;"	m	class:VisionCore
frealloc	lib/lua/src/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State
free_func	lib/zlib/zconf.h	/^#  define free_func /;"	d
free_func	lib/zlib/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
freeexp	lib/lua/src/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freeobj	lib/lua/src/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	lib/lua/src/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freereg	lib/lua/src/lparser.h	/^  int freereg;  \/* first free register *\/$/;"	m	struct:FuncState
freestack	lib/lua/src/lstate.c	/^static void freestack (lua_State *L, lua_State *L1) {$/;"	f	file:
freq	lib/zlib/deflate.h	/^        ush  freq;       \/* frequency count *\/$/;"	m	union:ct_data_s::__anon133
frequency	build/include/tool/LogSelectWindow.h	/^    QDoubleSpinBox* frequency;$/;"	m	class:LogSelectWindow
frequency	tools/UTNaoTool/LogSelectWindow.h	/^    QDoubleSpinBox* frequency;$/;"	m	class:LogSelectWindow
frequency_ms	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^      uint32_t frequency_ms;$/;"	m	class:RSCamera
fresnelintegral	lib/alglib/specialfunctions.cpp	/^void fresnelintegral(const double x, double &c, double &s)$/;"	f	namespace:alglib
fresnelintegral	lib/alglib/specialfunctions.cpp	/^void fresnelintegral(double x, double* c, double* s, ae_state *_state)$/;"	f	namespace:alglib_impl
friction	core/python/behaviors/keeper_2.py	/^friction = 0.35$/;"	v
friction	core/python/behaviors/win.py	/^friction = 0.35$/;"	v
from	core/communications/ThreadedUDPSocket.h	/^  struct sockaddr_in from;$/;"	m	class:ThreadedUDPSocket	typeref:struct:ThreadedUDPSocket::sockaddr_in
from	core/python/UTdebug.py	/^import logging; logging.disable(logging.ERROR) # kill hashlib errors from random$/;"	i
from	tools/behaviorSim/cma.py	/^from __future__ import print_function  # for cross-checking, available from python 2.6$/;"	i
fromAngle	core/math/Pose2D.h	/^  inline Pose2D fromAngle(const float a) {rotation=a; return *this;}$/;"	f	class:Pose2D
fromExtrinsicVector	core/common/RobotCalibration.h	/^    void fromExtrinsicVector(const Eigen::VectorXf& \/*v*\/) {$/;"	f	class:RobotCalibration
fromName	core/common/Enum.h	/^  size_t fromName(const char* s) { $/;"	f	class:EnumName
fromRotationX	core/math/RotationMatrix.h	/^  static RotationMatrix fromRotationX(const float angle)$/;"	f	class:RotationMatrix
fromRotationY	core/math/RotationMatrix.h	/^  static RotationMatrix fromRotationY(const float angle)$/;"	f	class:RotationMatrix
fromRotationZ	core/math/RotationMatrix.h	/^  static RotationMatrix fromRotationZ(const float angle)$/;"	f	class:RotationMatrix
fromTopCamera	core/common/WorldObject.h	/^  bool fromTopCamera; \/\/\/< True if observed from top cam, false if from bottom$/;"	m	class:WorldObject
fromchebyshev	lib/alglib/specialfunctions.cpp	/^void fromchebyshev(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
fromchebyshev	lib/alglib/specialfunctions.cpp	/^void fromchebyshev(const real_1d_array &a, const ae_int_t n, real_1d_array &b)$/;"	f	namespace:alglib
fromlen	core/communications/ThreadedUDPSocket.h	/^  socklen_t fromlen;$/;"	m	class:ThreadedUDPSocket
fromstate	lib/lua/src/lstate.c	/^#define fromstate(/;"	d	file:
front	core/common/RingQueue.h	/^    const V& front() const$/;"	f	class:RingQueue
front	core/common/RingQueueWithSum.h	/^    const V& front() const$/;"	f	class:RingQueueWithSum
frontIndex	core/common/RingQueue.h	/^    int frontIndex;$/;"	m	class:RingQueue
frontIndex	core/common/RingQueueWithSum.h	/^    int frontIndex;$/;"	m	class:RingQueueWithSum
frontLeftEar	core/lights/LEDModule.cpp	/^void LEDModule::frontLeftEar(float val) {$/;"	f	class:LEDModule
frontRightEar	core/lights/LEDModule.cpp	/^void LEDModule::frontRightEar(float val) {$/;"	f	class:LEDModule
fs	lib/lua/src/llex.h	/^  struct FuncState *fs;  \/* `FuncState' is private to the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState
fsLfl	core/motion/rswalk2014/BodyModel.hpp	/^      float fsLfr, fsLfl, fsLrr, fsLrl;                       \/\/ Maximum foot sensor reading during latest run$/;"	m	class:BodyModel
fsLfr	core/motion/rswalk2014/BodyModel.hpp	/^      float fsLfr, fsLfl, fsLrr, fsLrl;                       \/\/ Maximum foot sensor reading during latest run$/;"	m	class:BodyModel
fsLrl	core/motion/rswalk2014/BodyModel.hpp	/^      float fsLfr, fsLfl, fsLrr, fsLrl;                       \/\/ Maximum foot sensor reading during latest run$/;"	m	class:BodyModel
fsLrr	core/motion/rswalk2014/BodyModel.hpp	/^      float fsLfr, fsLfl, fsLrr, fsLrl;                       \/\/ Maximum foot sensor reading during latest run$/;"	m	class:BodyModel
fsRfl	core/motion/rswalk2014/BodyModel.hpp	/^      float fsRfr, fsRfl, fsRrr, fsRrl;                       \/\/ ... used to scale each foot sensor to read in similar range$/;"	m	class:BodyModel
fsRfr	core/motion/rswalk2014/BodyModel.hpp	/^      float fsRfr, fsRfl, fsRrr, fsRrl;                       \/\/ ... used to scale each foot sensor to read in similar range$/;"	m	class:BodyModel
fsRrl	core/motion/rswalk2014/BodyModel.hpp	/^      float fsRfr, fsRfl, fsRrr, fsRrl;                       \/\/ ... used to scale each foot sensor to read in similar range$/;"	m	class:BodyModel
fsRrr	core/motion/rswalk2014/BodyModel.hpp	/^      float fsRfr, fsRfl, fsRrr, fsRrl;                       \/\/ ... used to scale each foot sensor to read in similar range$/;"	m	class:BodyModel
fsrLFL	core/common/RobotInfo.h	/^  fsrLFL,$/;"	e	enum:Sensor
fsrLFR	core/common/RobotInfo.h	/^  fsrLFR,$/;"	e	enum:Sensor
fsrLRL	core/common/RobotInfo.h	/^  fsrLRL,$/;"	e	enum:Sensor
fsrLRR	core/common/RobotInfo.h	/^  fsrLRR,$/;"	e	enum:Sensor
fsrRFL	core/common/RobotInfo.h	/^  fsrRFL,$/;"	e	enum:Sensor
fsrRFR	core/common/RobotInfo.h	/^  fsrRFR,$/;"	e	enum:Sensor
fsrRRL	core/common/RobotInfo.h	/^  fsrRRL,$/;"	e	enum:Sensor
fsrRRR	core/common/RobotInfo.h	/^  fsrRRR,$/;"	e	enum:Sensor
fsr_feet_	core/memory/SensorBlock.h	/^  float fsr_feet_; \/\/ positive means left foot has more weight$/;"	m	struct:SensorBlock
fsr_feet_offset_	core/memory/SensorCalibrationBlock.h	/^  float fsr_feet_offset_; \/\/ positive for left foot$/;"	m	struct:SensorCalibrationBlock
fsr_left_front_	core/memory/SensorBlock.h	/^  float fsr_left_front_; \/\/ positive means front side of left foot has more weight$/;"	m	struct:SensorBlock
fsr_left_front_offset_	core/memory/SensorCalibrationBlock.h	/^  float fsr_left_front_offset_; \/\/ positive for front of left foot$/;"	m	struct:SensorCalibrationBlock
fsr_left_side_	core/memory/SensorBlock.h	/^  float fsr_left_side_; \/\/ positive means left side of left foot has more weight$/;"	m	struct:SensorBlock
fsr_left_side_offset_	core/memory/SensorCalibrationBlock.h	/^  float fsr_left_side_offset_; \/\/ positive for left side of left foot$/;"	m	struct:SensorCalibrationBlock
fsr_right_front_	core/memory/SensorBlock.h	/^  float fsr_right_front_; \/\/ positive means front side of right foot has more weight$/;"	m	struct:SensorBlock
fsr_right_front_offset_	core/memory/SensorCalibrationBlock.h	/^  float fsr_right_front_offset_; \/\/ positive for front of right foot$/;"	m	struct:SensorCalibrationBlock
fsr_right_side_	core/memory/SensorBlock.h	/^  float fsr_right_side_; \/\/ positive means left side of right foot has more weight$/;"	m	struct:SensorBlock
fsr_right_side_offset_	core/memory/SensorCalibrationBlock.h	/^  float fsr_right_side_offset_; \/\/ positive for left side of right foot$/;"	m	struct:SensorCalibrationBlock
ftbase_fftarrayresize	lib/alglib/alglibinternal.cpp	/^static void ftbase_fftarrayresize(\/* Integer *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
ftbase_fftbluesteinplan	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_fftbluesteinplan = 1;$/;"	m	namespace:alglib_impl	file:
ftbase_fftcodeletplan	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_fftcodeletplan = 2;$/;"	m	namespace:alglib_impl	file:
ftbase_fftcooleytukeyplan	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_fftcooleytukeyplan = 0;$/;"	m	namespace:alglib_impl	file:
ftbase_fftemptyplan	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_fftemptyplan = 6;$/;"	m	namespace:alglib_impl	file:
ftbase_ffticltrec	lib/alglib/alglibinternal.cpp	/^static void ftbase_ffticltrec(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
ftbase_fftirltrec	lib/alglib/alglibinternal.cpp	/^static void ftbase_fftirltrec(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
ftbase_fftrealcooleytukeyplan	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_fftrealcooleytukeyplan = 5;$/;"	m	namespace:alglib_impl	file:
ftbase_ffttwcalc	lib/alglib/alglibinternal.cpp	/^static void ftbase_ffttwcalc(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
ftbase_fhtcodeletplan	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_fhtcodeletplan = 4;$/;"	m	namespace:alglib_impl	file:
ftbase_fhtcooleytukeyplan	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_fhtcooleytukeyplan = 3;$/;"	m	namespace:alglib_impl	file:
ftbase_fhtn2plan	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_fhtn2plan = 999;$/;"	m	namespace:alglib_impl	file:
ftbase_ftbasecffttask	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_ftbasecffttask = 0;$/;"	m	namespace:alglib_impl	file:
ftbase_ftbasecodeletrecommended	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_ftbasecodeletrecommended = 5;$/;"	m	namespace:alglib_impl	file:
ftbase_ftbasefindsmoothrec	lib/alglib/alglibinternal.cpp	/^static void ftbase_ftbasefindsmoothrec(ae_int_t n,$/;"	f	namespace:alglib_impl
ftbase_ftbasegenerateplanrec	lib/alglib/alglibinternal.cpp	/^static void ftbase_ftbasegenerateplanrec(ae_int_t n,$/;"	f	namespace:alglib_impl
ftbase_ftbaseinefficiencyfactor	lib/alglib/alglibinternal.cpp	/^static double ftbase_ftbaseinefficiencyfactor = 1.3;$/;"	m	namespace:alglib_impl	file:
ftbase_ftbasemaxsmoothfactor	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_ftbasemaxsmoothfactor = 5;$/;"	m	namespace:alglib_impl	file:
ftbase_ftbaseplanentrysize	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_ftbaseplanentrysize = 8;$/;"	m	namespace:alglib_impl	file:
ftbase_ftbaseprecomputeplanrec	lib/alglib/alglibinternal.cpp	/^static void ftbase_ftbaseprecomputeplanrec(ftplan* plan,$/;"	f	namespace:alglib_impl
ftbase_ftbaserffttask	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_ftbaserffttask = 2;$/;"	m	namespace:alglib_impl	file:
ftbase_ftbaserfhttask	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_ftbaserfhttask = 1;$/;"	m	namespace:alglib_impl	file:
ftbase_ftbaseupdatetw	lib/alglib/alglibinternal.cpp	/^static ae_int_t ftbase_ftbaseupdatetw = 4;$/;"	m	namespace:alglib_impl	file:
ftbase_internalcomplexlintranspose	lib/alglib/alglibinternal.cpp	/^static void ftbase_internalcomplexlintranspose(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
ftbase_internalreallintranspose	lib/alglib/alglibinternal.cpp	/^static void ftbase_internalreallintranspose(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
ftbase_reffht	lib/alglib/alglibinternal.cpp	/^static void ftbase_reffht(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
ftbaseexecuteplan	lib/alglib/alglibinternal.cpp	/^void ftbaseexecuteplan(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
ftbaseexecuteplanrec	lib/alglib/alglibinternal.cpp	/^void ftbaseexecuteplanrec(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
ftbasefactorize	lib/alglib/alglibinternal.cpp	/^void ftbasefactorize(ae_int_t n,$/;"	f	namespace:alglib_impl
ftbasefindsmooth	lib/alglib/alglibinternal.cpp	/^ae_int_t ftbasefindsmooth(ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
ftbasefindsmootheven	lib/alglib/alglibinternal.cpp	/^ae_int_t ftbasefindsmootheven(ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
ftbasegeneratecomplexfftplan	lib/alglib/alglibinternal.cpp	/^void ftbasegeneratecomplexfftplan(ae_int_t n,$/;"	f	namespace:alglib_impl
ftbasegeneraterealfftplan	lib/alglib/alglibinternal.cpp	/^void ftbasegeneraterealfftplan(ae_int_t n, ftplan* plan, ae_state *_state)$/;"	f	namespace:alglib_impl
ftbasegeneraterealfhtplan	lib/alglib/alglibinternal.cpp	/^void ftbasegeneraterealfhtplan(ae_int_t n, ftplan* plan, ae_state *_state)$/;"	f	namespace:alglib_impl
ftbasegetflopestimate	lib/alglib/alglibinternal.cpp	/^double ftbasegetflopestimate(ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
ftbaseissmooth	lib/alglib/alglibinternal.cpp	/^ae_bool ftbaseissmooth(ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
ftest	lib/alglib/statistics.cpp	/^void ftest(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
ftest	lib/alglib/statistics.cpp	/^void ftest(const real_1d_array &x, const ae_int_t n, const real_1d_array &y, const ae_int_t m, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
ftest1	lib/alglib/alglibinternal.h	/^    double ftest1;$/;"	m	struct:alglib_impl::__anon21
ftest1	lib/alglib/dataanalysis.h	/^    double ftest1;$/;"	m	struct:alglib_impl::__anon46
ftplan	lib/alglib/alglibinternal.h	/^} ftplan;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon23
func	lib/lua/src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func	lib/lua/src/lapi.c	/^  lua_CFunction func;$/;"	m	struct:CCallS	file:
func	lib/lua/src/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg
func	lib/lua/src/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo
func	lib/zlib/deflate.c	/^   compress_func func;$/;"	m	struct:config_s	file:
funcargs	lib/lua/src/lparser.c	/^static void funcargs (LexState *ls, expdesc *f) {$/;"	f	file:
funcinfo	lib/lua/src/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	lib/lua/src/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcstat	lib/lua/src/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
function_event	lib/lua/doc/manual.html	/^     function function_event (func, ...)$/;"	f
functions	lib/lua/doc/contents.html	/^<H3><A NAME="functions">Lua functions<\/A><\/H3>$/;"	a
future	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
futureRoll	core/memory/SensorBlock.h	/^  float futureRoll;$/;"	m	struct:SensorBlock
futureTilt	core/memory/SensorBlock.h	/^  float futureTilt;$/;"	m	struct:SensorBlock
fwd_odometry_factor_	core/memory/ALWalkParamBlock.h	/^  float fwd_odometry_factor_;$/;"	m	struct:ALWalkParamBlock
fx	lib/alglib/alglibinternal.h	/^    double fx;$/;"	m	struct:alglib_impl::__anon21
fx	lib/alglib/dataanalysis.h	/^    double fx;$/;"	m	struct:alglib_impl::__anon46
fx_	core/vision/CameraMatrix.h	/^    float fx_, fy_, scale_, cx_, cy_;$/;"	m	class:CameraMatrix
fxm	lib/alglib/alglibinternal.h	/^    double fxm;$/;"	m	struct:alglib_impl::__anon21
fxm	lib/alglib/dataanalysis.h	/^    double fxm;$/;"	m	struct:alglib_impl::__anon46
fy	lib/alglib/alglibinternal.h	/^    double fy;$/;"	m	struct:alglib_impl::__anon21
fy	lib/alglib/dataanalysis.h	/^    double fy;$/;"	m	struct:alglib_impl::__anon46
fy_	core/vision/CameraMatrix.h	/^    float fx_, fy_, scale_, cx_, cy_;$/;"	m	class:CameraMatrix
fym	lib/alglib/alglibinternal.h	/^    double fym;$/;"	m	struct:alglib_impl::__anon21
fym	lib/alglib/dataanalysis.h	/^    double fym;$/;"	m	struct:alglib_impl::__anon46
g	core/common/ColorConversion.h	/^    int g;$/;"	m	struct:color::Rgb
g	core/common/ColorSpaces.h	/^  int g;$/;"	m	struct:RGB
g	core/localization/LocalizationModule.cpp	/^KF::StateVector LocalizationModule::g(KF::StateVector x, KF::ControlVector u)$/;"	f	class:LocalizationModule
g	core/motion/rswalk2014/PendulumModel.cpp	/^const float PendulumModel::g = 9806.65f;$/;"	m	class:PendulumModel	file:
g	core/motion/rswalk2014/PendulumModel.hpp	/^   static const float g;\/\/ = 9806.65f;$/;"	m	struct:PendulumModel
g	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateTransitionFunction g;$/;"	m	class:ExtendedKalmanFilter
g	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  StateTransitionFunction g;$/;"	m	class:SRUnscentedKalmanFilter
g	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  StateTransitionFunction g;$/;"	m	class:UnscentedKalmanFilter
g	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateTransitionFunction g;$/;"	m	class:UnscentedKalmanFilter
g	kalman_filters/src/ekf_test.cpp	/^KF::StateVector g(KF::StateVector x, KF::ControlVector u)$/;"	f
g	kalman_filters/src/ukf_test.cpp	/^KF::StateVector g(KF::StateVector x, KF::ControlVector u)$/;"	f
g	lib/alglib/interpolation.h	/^    ae_vector g;$/;"	m	struct:alglib_impl::__anon63
g	lib/alglib/interpolation.h	/^    real_1d_array g;$/;"	m	class:alglib::lsfitstate
g	lib/alglib/optimization.h	/^    ae_vector g;$/;"	m	struct:alglib_impl::__anon69
g	lib/alglib/optimization.h	/^    ae_vector g;$/;"	m	struct:alglib_impl::__anon73
g	lib/alglib/optimization.h	/^    ae_vector g;$/;"	m	struct:alglib_impl::__anon75
g	lib/alglib/optimization.h	/^    ae_vector g;$/;"	m	struct:alglib_impl::__anon77
g	lib/alglib/optimization.h	/^    ae_vector g;$/;"	m	struct:alglib_impl::__anon79
g	lib/alglib/optimization.h	/^    real_1d_array g;$/;"	m	class:alglib::minasastate
g	lib/alglib/optimization.h	/^    real_1d_array g;$/;"	m	class:alglib::minbleicstate
g	lib/alglib/optimization.h	/^    real_1d_array g;$/;"	m	class:alglib::mincgstate
g	lib/alglib/optimization.h	/^    real_1d_array g;$/;"	m	class:alglib::minlbfgsstate
g	lib/alglib/optimization.h	/^    real_1d_array g;$/;"	m	class:alglib::minlmstate
g	lib/lua/doc/manual.html	/^     function g(a, b, ...) end$/;"	f
g	lib/lua/src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    uint8_t g;$/;"	m	struct:color_classifier::Rgb
g	tools/testStepSide.py	/^g = -9806.65$/;"	v
g	vision_testing/src/vision_testing.cpp	/^  unsigned char g;$/;"	m	class:RGB	file:
gHost	interfaces/sim_spark/main.cpp	/^string gHost = "127.0.0.1";$/;"	v
gLoop	interfaces/sim_spark/main.cpp	/^static bool gLoop = true;$/;"	v	file:
gPort	interfaces/sim_spark/main.cpp	/^int gPort = 3100;$/;"	v
g_iofile	lib/lua/src/liolib.c	/^static int g_iofile (lua_State *L, int f, const char *mode) {$/;"	f	file:
g_read	lib/lua/src/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	lib/lua/src/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
gameContTeamNum	core/memory/GameStateBlock.h	/^  int gameContTeamNum;$/;"	m	struct:GameStateBlock
gameControllerUDP	core/communications/CommunicationModule.h	/^  UDPWrapper* gameControllerUDP;$/;"	m	class:CommunicationModule
gameState	build/include/tool/simulation/BehaviorSimulation.h	/^    GameStateBlock* gameState;$/;"	m	class:BehaviorSimulation
gameState	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    GameStateBlock* gameState;$/;"	m	class:BehaviorSimulation
gameType	core/communications/RoboCupGameControlData.h	/^  uint8_t gameType;             \/\/ type of the game (GAME_ROUNDROBIN, GAME_PLAYOFF)$/;"	m	struct:RoboCupGameControlData
game_state	core/memory/MemoryCache.h	/^    GameStateBlock* game_state;$/;"	m	class:MemoryCache
game_state	core/python/memory.py	/^  def game_state(): return core.pythonC.game_state_$/;"	f	function:init
game_state	core/python/util.py	/^  game_state, behavior_mem$/;"	i
game_state	core/vision/VisionBlocks.h	/^    GameStateBlock*& game_state;$/;"	m	class:VisionBlocks
game_state_	core/InterpreterModule.h	/^    GameStateBlock *game_state_;$/;"	m	class:InterpreterModule
game_state_	core/VisionCore.h	/^  GameStateBlock *game_state_;$/;"	m	class:VisionCore
game_state_	core/communications/CommunicationModule.h	/^  GameStateBlock *game_state_;$/;"	m	class:CommunicationModule
game_state_	core/motion/rswalk2014/RSWalkModule2014.h	/^	GameStateBlock *game_state_;$/;"	m	class:RSWalkModule2014
game_state_	core/sensor/ButtonModule.h	/^  GameStateBlock *game_state_;$/;"	m	class:ButtonModule
game_state_	core/vision/VisionModule.h	/^  GameStateBlock *game_state_;$/;"	m	class:VisionModule
game_state_	interfaces/sim_spark/RobotBehavior.h	/^  GameStateBlock* game_state_;$/;"	m	class:RobotBehavior
gamma	interfaces/sim_spark/Random.h	/^   float gamma( float a, float b, float c )  \/\/ Gamma$/;"	f	class:Random
gamma	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  double gamma;$/;"	m	class:UnscentedKalmanFilter
gammafunc_gammastirf	lib/alglib/specialfunctions.cpp	/^static double gammafunc_gammastirf(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
gammafunction	lib/alglib/specialfunctions.cpp	/^double gammafunction(const double x)$/;"	f	namespace:alglib
gammafunction	lib/alglib/specialfunctions.cpp	/^double gammafunction(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
gammak	lib/alglib/optimization.h	/^    double gammak;$/;"	m	struct:alglib_impl::__anon69
gaussian2d	particle_filters/MCL_particle_filter.hpp	/^    double gaussian2d(Eigen::Matrix<double,2,1> z , Eigen::Matrix<double,2,1> x , Eigen::Matrix<double,2,2> cov)$/;"	f	class:MCLParticleFilter
gaussian2d	particle_filters/RMCL_particle_filter.hpp	/^    double gaussian2d(Eigen::Matrix<double,2,1> z , Eigen::Matrix<double,2,1> x , Eigen::Matrix<double,2,2> cov)$/;"	f	class:RMCLParticleFilter
gbase	lib/alglib/optimization.h	/^    ae_vector gbase;$/;"	m	struct:alglib_impl::__anon73
gc	lib/alglib/optimization.h	/^    ae_vector gc;$/;"	m	struct:alglib_impl::__anon71
gc	lib/alglib/optimization.h	/^    ae_vector gc;$/;"	m	struct:alglib_impl::__anon75
gc	lib/lua/src/lobject.h	/^  GCObject *gc;$/;"	m	union:__anon87
gc_event	lib/lua/doc/manual.html	/^     function gc_event (udata)$/;"	f
gcdept	lib/lua/src/lstate.h	/^  lu_mem gcdept;  \/* how much GC is `behind schedule' *\/$/;"	m	struct:global_State
gcf	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
gch	lib/lua/src/lstate.h	/^  GCheader gch;$/;"	m	union:GCObject
gclist	lib/lua/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto
gclist	lib/lua/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table
gclist	lib/lua/src/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State
gco2cl	lib/lua/src/lstate.h	/^#define gco2cl(/;"	d
gco2h	lib/lua/src/lstate.h	/^#define gco2h(/;"	d
gco2p	lib/lua/src/lstate.h	/^#define gco2p(/;"	d
gco2th	lib/lua/src/lstate.h	/^#define gco2th(/;"	d
gco2ts	lib/lua/src/lstate.h	/^#define gco2ts(/;"	d
gco2u	lib/lua/src/lstate.h	/^#define gco2u(/;"	d
gco2uv	lib/lua/src/lstate.h	/^#define gco2uv(/;"	d
gcpause	lib/lua/src/lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State
gcstate	lib/lua/src/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State
gcstepmul	lib/lua/src/lstate.h	/^  int gcstepmul;  \/* GC `granularity' *\/$/;"	m	struct:global_State
gctm	lib/lua/src/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gcvalue	lib/lua/src/lobject.h	/^#define gcvalue(/;"	d
gen 	lib/lua/test/sieve.lua	/^function gen (n)$/;"	f
genModels	core/memory/OpponentBlock.h	/^    genModels[MAX_OPP_MODELS_IN_MEM]; \/\/ Models used everywhere else (in mm)$/;"	m	struct:OpponentBlock
gen_bitlen	lib/zlib/trees.c	/^local void gen_bitlen(s, desc)$/;"	f
gen_codes	lib/zlib/trees.c	/^local void gen_codes (tree, max_code, bl_count)$/;"	f
gen_trees_header	lib/zlib/trees.c	/^void gen_trees_header()$/;"	f
generate	build/include/tool/simulation/SimulationPath.cpp	/^SimulationPath SimulationPath::generate(int length, int seed) {$/;"	f	class:SimulationPath
generate	core/vision/structures/HorizonLine.cpp	/^HorizonLine HorizonLine::generate(const ImageParams& iparams, const CameraMatrix& camera, int distance) {$/;"	f	class:HorizonLine
generate	tools/UTNaoTool/simulation/SimulationPath.cpp	/^SimulationPath SimulationPath::generate(int length, int seed) {$/;"	f	class:SimulationPath
generateAddBlock	build/core/generate_block_operations.py	/^def generateAddBlock():$/;"	f
generateAllCommunications	build/include/tool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::generateAllCommunications() {$/;"	f	class:CommunicationGenerator
generateAllCommunications	tools/UTNaoTool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::generateAllCommunications() {$/;"	f	class:CommunicationGenerator
generateAllObservations	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateAllObservations() {$/;"	f	class:ObservationGenerator
generateAllObservations	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateAllObservations() {$/;"	f	class:ObservationGenerator
generateBallObservations	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateBallObservations() {$/;"	f	class:ObservationGenerator
generateBallObservations	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateBallObservations() {$/;"	f	class:ObservationGenerator
generateBeaconObservations	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateBeaconObservations() {$/;"	f	class:ObservationGenerator
generateBeaconObservations	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateBeaconObservations() {$/;"	f	class:ObservationGenerator
generateCenterCircleObservations	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateCenterCircleObservations() {$/;"	f	class:ObservationGenerator
generateCenterCircleObservations	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateCenterCircleObservations() {$/;"	f	class:ObservationGenerator
generateClusterVis	vision_testing/src/vision_testing.cpp	/^void generateClusterVis(unsigned char* clusters, unsigned char* vis_bgr, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
generateCoachBallCommunications	build/include/tool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::generateCoachBallCommunications() {$/;"	f	class:CommunicationGenerator
generateCoachBallCommunications	tools/UTNaoTool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::generateCoachBallCommunications() {$/;"	f	class:CommunicationGenerator
generateColorTable	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::generateColorTable() {$/;"	f	class:ClassificationWidget
generateColorTable	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::generateColorTable() {$/;"	f	class:ClassificationWidget
generateCommunications	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::generateCommunications() {$/;"	f	class:LocalizationSimulation
generateCommunications	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::generateCommunications() {$/;"	f	class:LocalizationSimulation
generateCopy	build/core/generate_block_operations.py	/^def generateCopy():$/;"	f
generateCpp	build/luaswig/generateSwig.py	/^def generateCpp(name,iFile,cppFile):$/;"	f
generateDelete	build/core/generate_block_operations.py	/^def generateDelete():$/;"	f
generateDirectoryName	core/memory/Logger.cpp	/^std::string Logger::generateDirectoryName(const char* basename) {$/;"	f	class:Logger
generateForColor	build/include/tool/ClassificationWidget.cpp	/^#define generateForColor(/;"	d	file:
generateForColor	tools/UTNaoTool/ClassificationWidget.cpp	/^#define generateForColor(/;"	d	file:
generateFullClusterVis	vision_testing/src/vision_testing.cpp	/^void generateFullClusterVis(unsigned char* clusters, unsigned char* vis_bgr, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
generateFunctionCall	build/core/generate_block_operations.py	/^def generateFunctionCall():$/;"	f
generateGoalObservations	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateGoalObservations() {$/;"	f	class:ObservationGenerator
generateGoalObservations	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateGoalObservations() {$/;"	f	class:ObservationGenerator
generateGroundTruthObservations	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateGroundTruthObservations(){$/;"	f	class:ObservationGenerator
generateGroundTruthObservations	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateGroundTruthObservations(){$/;"	f	class:ObservationGenerator
generateI	build/luaswig/generateSwig.py	/^def generateI(name,path,outputFile,names):$/;"	f
generateI	build/pythonswig/generateSwig.py	/^def generateI(listfile, srcroot, ifile):$/;"	f
generateIncludes	build/core/generate_block_operations.py	/^def generateIncludes():$/;"	f
generateLineObservations	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateLineObservations() {$/;"	f	class:ObservationGenerator
generateLineObservations	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateLineObservations() {$/;"	f	class:ObservationGenerator
generateNew	build/core/generate_block_operations.py	/^def generateNew():$/;"	f
generateObservations	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::generateObservations() {$/;"	f	class:LocalizationSimulation
generateObservations	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::generateObservations() {$/;"	f	class:LocalizationSimulation
generateOpenLuaLibs	build/luaswig/generateSwig.py	/^def generateOpenLuaLibs(filename,files):$/;"	f
generateOpponentObservations	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateOpponentObservations() {$/;"	f	class:ObservationGenerator
generateOpponentObservations	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generateOpponentObservations() {$/;"	f	class:ObservationGenerator
generatePenaltyCrossObservations	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generatePenaltyCrossObservations() {$/;"	f	class:ObservationGenerator
generatePenaltyCrossObservations	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::generatePenaltyCrossObservations() {$/;"	f	class:ObservationGenerator
generateTeamBallCommunications	build/include/tool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::generateTeamBallCommunications() {$/;"	f	class:CommunicationGenerator
generateTeamBallCommunications	tools/UTNaoTool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::generateTeamBallCommunications() {$/;"	f	class:CommunicationGenerator
generateTemplateI	build/luaswig/generateSwig.py	/^def generateTemplateI(name,typeName,outputFile):$/;"	f
generateTimestamp	core/common/File.cpp	/^std::string generateTimestamp() {$/;"	f
generateTransitionVis	vision_testing/src/vision_testing.cpp	/^void generateTransitionVis(unsigned char* transitions, unsigned char* vis_bgr, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
generateUniqueFileName	core/memory/TextLogger.cpp	/^void TextLogger::generateUniqueFileName(char *fileName, const char *prefix, const char *ext) {$/;"	f	class:TextLogger
generateWalk	core/motion/rswalk2014/WalkCycle.cpp	/^void WalkCycle::generateWalk(float &forwardL, float &forwardR,$/;"	f	class:WalkCycle
generateWarning	build/core/generate_block_operations.py	/^def generateWarning():$/;"	f
generatefib 	lib/lua/test/fibfor.lua	/^function generatefib (n)$/;"	f
generatereflection	lib/alglib/alglibinternal.cpp	/^void generatereflection(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
generaterotation	lib/alglib/alglibinternal.cpp	/^void generaterotation(double f,$/;"	f	namespace:alglib_impl
generator	core/motion/rswalk2014/ClippedGenerator.hpp	/^      Generator* generator;$/;"	m	class:ClippedGenerator
generator	core/motion/rswalk2014/RSWalkModule2014.h	/^	WalkEnginePreProcessor* generator;$/;"	m	class:RSWalkModule2014
generic_reader	lib/lua/src/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
geno	tools/behaviorSim/cma.py	/^    def geno(self, y, bounds=None, copy=True, copy_always=False, archive=None):$/;"	m	class:GenoPheno
geometric	interfaces/sim_spark/Random.h	/^   int geometric( float p )   \/\/ Geometric$/;"	f	class:Random
geometry	core/python/mem_objects.py	/^import memory, geometry$/;"	i
get	lib/yaml-cpp/src/setting.h	/^		const T get() const { return m_value; }$/;"	f	class:YAML::Setting
get	lib/yaml-cpp/src/stream.cpp	/^	char Stream::get()$/;"	f	class:YAML::Stream
get	lib/yaml-cpp/src/stream.cpp	/^	std::string Stream::get(int n)$/;"	f	class:YAML::Stream
get	tools/behaviorSim/cma.py	/^    def get(self):$/;"	m	class:BestSolution
getACoefficient	core/math/Geometry.cpp	/^float Line2D::getACoefficient() const$/;"	f	class:Line2D
getAngle	core/math/Geometry.cpp	/^AngRad Line2D::getAngle() const {$/;"	f	class:Line2D
getAngle	core/math/Pose2D.h	/^  inline float getAngle() const {return rotation;}$/;"	f	class:Pose2D
getAngleAxis	core/math/RotationMatrix.cpp	/^Vector3<float> RotationMatrix::getAngleAxis() const$/;"	f	class:RotationMatrix
getAngleAxis	core/math/RotationMatrix.cpp	/^void RotationMatrix::getAngleAxis(Vector3<float>& axis, float& angle) const$/;"	f	class:RotationMatrix
getAngleBetweenPoints	core/math/Geometry.cpp	/^AngRad Point2D::getAngleBetweenPoints( const Point2D &p1, $/;"	f	class:Point2D
getAngleTo	core/math/Geometry.cpp	/^AngRad Point2D::getAngleTo( const Point2D p ) const {$/;"	f	class:Point2D
getAngleToLine	core/math/Geometry.cpp	/^AngRad Line2D::getAngleToLine( Line2D line ) const {$/;"	f	class:Line2D
getAnnotation	build/include/tool/AnnotationWidget.h	/^        Annotation* getAnnotation() {$/;"	f	class:AnnotationListWidgetItem
getAnnotation	tools/UTNaoTool/AnnotationWidget.h	/^        Annotation* getAnnotation() {$/;"	f	class:AnnotationListWidgetItem
getAnnotations	build/include/tool/AnnotationWidget.cpp	/^std::vector<Annotation*> AnnotationWidget::getAnnotations() {$/;"	f	class:AnnotationWidget
getAnnotations	build/include/tool/annotations/AnnotationGroup.cpp	/^std::vector<Annotation*> AnnotationGroup::getAnnotations() {$/;"	f	class:AnnotationGroup
getAnnotations	tools/UTNaoTool/AnnotationWidget.cpp	/^std::vector<Annotation*> AnnotationWidget::getAnnotations() {$/;"	f	class:AnnotationWidget
getAnnotations	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^std::vector<Annotation*> AnnotationGroup::getAnnotations() {$/;"	f	class:AnnotationGroup
getArea	core/math/Geometry.cpp	/^float Circle::getArea() const $/;"	f	class:Circle
getArmsForState	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::getArmsForState(int state, Joints angles) {$/;"	f	class:RSWalkModule2014
getArray	core/math/Spline3D.h	/^  alglib::real_1d_array* getArray(int dim) {$/;"	f	class:Spline3D
getAverage	core/common/RingBufferWithSum.h	/^    C getAverage()$/;"	f	class:RingBufferWithSum
getAverage	core/common/RingQueueWithSum.h	/^    V getAverage() const {$/;"	f	class:RingQueueWithSum
getAverage	particle_filters/RMCL_particle_filter.hpp	/^    ParticleVector getAverage( double ratio )$/;"	f	class:RMCLParticleFilter
getAvgAccelX	core/memory/KickRequestBlock.h	/^  float getAvgAccelX() {$/;"	f	struct:KickRequestBlock
getAvgAccelY	core/memory/KickRequestBlock.h	/^  float getAvgAccelY() {$/;"	f	struct:KickRequestBlock
getBCoefficient	core/math/Geometry.cpp	/^float Line2D::getBCoefficient() const$/;"	f	class:Line2D
getBMode	lib/lua/src/lopcodes.h	/^#define getBMode(/;"	d
getBallCandidates	core/vision/ImageProcessor.cpp	/^std::vector<BallCandidate*> ImageProcessor::getBallCandidates()$/;"	f	class:ImageProcessor
getBallCov	core/memory/LocalizationBlock.cpp	/^Matrix2f LocalizationBlock::getBallCov() {$/;"	f	class:LocalizationBlock
getBallPosition	core/memory/LocalizationBlock.cpp	/^Point2D LocalizationBlock::getBallPosition() {$/;"	f	class:LocalizationBlock
getBallStatistics	build/include/tool/AnalysisWidget.cpp	/^ballstats AnalysisWidget::getBallStatistics() {$/;"	f	class:AnalysisWidget
getBallStatistics	tools/UTNaoTool/AnalysisWidget.cpp	/^ballstats AnalysisWidget::getBallStatistics() {$/;"	f	class:AnalysisWidget
getBallVel	core/memory/LocalizationBlock.cpp	/^Point2D LocalizationBlock::getBallVel() {$/;"	f	class:LocalizationBlock
getBearingTo	core/math/Geometry.cpp	/^AngRad Point2D::getBearingTo( const Point2D p, const AngRad o ) const {$/;"	f	class:Point2D
getBearingTo	core/python/geometry.py	/^  def getBearingTo(self, p, o):$/;"	m	class:Point2D
getBeliefMemory	build/include/tool/simulation/LocalizationSimulation.cpp	/^Memory* LocalizationSimulation::getBeliefMemory(int player) {$/;"	f	class:LocalizationSimulation
getBeliefMemory	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^Memory* LocalizationSimulation::getBeliefMemory(int player) {$/;"	f	class:LocalizationSimulation
getBeliefMemoryCache	build/include/tool/simulation/BehaviorSimulation.cpp	/^MemoryCache BehaviorSimulation::getBeliefMemoryCache(int player) {$/;"	f	class:BehaviorSimulation
getBeliefMemoryCache	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^MemoryCache IBSim::getBeliefMemoryCache(int player) {$/;"	f	class:IBSim
getBeliefMemoryCache	build/include/tool/simulation/LocalizationSimulation.cpp	/^MemoryCache LocalizationSimulation::getBeliefMemoryCache(int player) {$/;"	f	class:LocalizationSimulation
getBeliefMemoryCache	build/include/tool/simulation/Simulation.h	/^    virtual MemoryCache getBeliefMemoryCache(int player = 0) { return getGtMemoryCache(player); }$/;"	f	class:Simulation
getBeliefMemoryCache	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^MemoryCache BehaviorSimulation::getBeliefMemoryCache(int player) {$/;"	f	class:BehaviorSimulation
getBeliefMemoryCache	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^MemoryCache IBSim::getBeliefMemoryCache(int player) {$/;"	f	class:IBSim
getBeliefMemoryCache	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^MemoryCache LocalizationSimulation::getBeliefMemoryCache(int player) {$/;"	f	class:LocalizationSimulation
getBeliefMemoryCache	tools/UTNaoTool/simulation/Simulation.h	/^    virtual MemoryCache getBeliefMemoryCache(int player = 0) { return getGtMemoryCache(player); }$/;"	f	class:Simulation
getBestBallCandidate	core/vision/ImageProcessor.cpp	/^BallCandidate* ImageProcessor::getBestBallCandidate()$/;"	f	class:ImageProcessor
getBisectorTwoAngles	core/math/Geometry.cpp	/^AngRad getBisectorTwoAngles( AngRad angMin, AngRad angMax )$/;"	f
getBlockByName	core/memory/Memory.h	/^  bool getBlockByName(T *&ptr, const std::string &name, bool output_no_exist = true, MemoryOwner::Owner expect_owner = MemoryOwner::UNKNOWN) {$/;"	f	class:Memory
getBlockNames	core/memory/Memory.cpp	/^void Memory::getBlockNames(std::vector<std::string> &module_names, bool only_log) const {$/;"	f	class:Memory
getBlockNames	core/memory/PrivateMemory.cpp	/^void PrivateMemory::getBlockNames(std::vector<std::string> &module_names, bool only_log, MemoryOwner::Owner for_owner) const {$/;"	f	class:PrivateMemory
getBlockNames	core/memory/SharedMemory.cpp	/^void SharedMemory::getBlockNames(std::vector<std::string> &module_names, bool only_log, MemoryOwner::Owner for_owner) const {$/;"	f	class:SharedMemory
getBlockPtr	core/memory/Memory.cpp	/^MemoryBlock* Memory::getBlockPtr(const std::string &name, MemoryOwner::Owner expect_owner) {$/;"	f	class:Memory
getBlockPtr	core/memory/Memory.cpp	/^const MemoryBlock* Memory::getBlockPtr(const std::string &name, MemoryOwner::Owner expect_owner) const {$/;"	f	class:Memory
getBlockPtr	core/memory/PrivateMemory.cpp	/^MemoryBlock* PrivateMemory::getBlockPtr(const std::string &name) {$/;"	f	class:PrivateMemory
getBlockPtr	core/memory/PrivateMemory.cpp	/^const MemoryBlock* PrivateMemory::getBlockPtr(const std::string &name) const {$/;"	f	class:PrivateMemory
getBlockPtr	core/memory/SharedMemory.cpp	/^MemoryBlock* SharedMemory::getBlockPtr(const std::string &name) {$/;"	f	class:SharedMemory
getBlockPtr	core/memory/SharedMemory.cpp	/^const MemoryBlock* SharedMemory::getBlockPtr(const std::string &name) const {$/;"	f	class:SharedMemory
getBlockPtrByName	core/memory/Memory.cpp	/^MemoryBlock* Memory::getBlockPtrByName(const std::string &name){$/;"	f	class:Memory
getBlockPtrByName	core/memory/Memory.cpp	/^const MemoryBlock* Memory::getBlockPtrByName(const std::string &name) const {$/;"	f	class:Memory
getBodyModelFromJoints	build/include/tool/MotionGLWidget.cpp	/^BodyModelBlock* MotionGLWidget::getBodyModelFromJoints(array<float,NUM_JOINTS> joints){$/;"	f	class:MotionGLWidget
getBodyModelFromJoints	build/include/tool/MotionGLWidget.cpp	/^BodyModelBlock* MotionGLWidget::getBodyModelFromJoints(float *joints){$/;"	f	class:MotionGLWidget
getBodyModelFromJoints	build/include/tool/MotionGLWidget.cpp	/^BodyModelBlock* MotionGLWidget::getBodyModelFromJoints(vector<float> joints){$/;"	f	class:MotionGLWidget
getBodyModelFromJoints	tools/UTNaoTool/MotionGLWidget.cpp	/^BodyModelBlock* MotionGLWidget::getBodyModelFromJoints(array<float,NUM_JOINTS> joints){$/;"	f	class:MotionGLWidget
getBodyModelFromJoints	tools/UTNaoTool/MotionGLWidget.cpp	/^BodyModelBlock* MotionGLWidget::getBodyModelFromJoints(float *joints){$/;"	f	class:MotionGLWidget
getBodyModelFromJoints	tools/UTNaoTool/MotionGLWidget.cpp	/^BodyModelBlock* MotionGLWidget::getBodyModelFromJoints(vector<float> joints){$/;"	f	class:MotionGLWidget
getBodyRoll	build/include/tool/VisionWindow_GetSet.cpp	/^float VisionWindow::getBodyRoll() {$/;"	f	class:VisionWindow
getBodyRoll	tools/UTNaoTool/VisionWindow_GetSet.cpp	/^float VisionWindow::getBodyRoll() {$/;"	f	class:VisionWindow
getBodyTilt	build/include/tool/VisionWindow_GetSet.cpp	/^float VisionWindow::getBodyTilt() {$/;"	f	class:VisionWindow
getBodyTilt	tools/UTNaoTool/VisionWindow_GetSet.cpp	/^float VisionWindow::getBodyTilt() {$/;"	f	class:VisionWindow
getBool	core/InterpreterModule.cpp	/^bool InterpreterModule::getBool(bool *arr, int ind) {$/;"	f	class:InterpreterModule
getBotExclusionArray	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^const int16_t *Pose::getBotExclusionArray() const {$/;"	f	class:Pose
getBotExclusionArray	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^int16_t *Pose::getBotExclusionArray() {$/;"	f	class:Pose
getBottom	core/math/Geometry.cpp	/^float Rectangle::getBottom() const$/;"	f	class:Rectangle
getBottom	core/math/Polygon.cpp	/^int Polygon::getBottom() {$/;"	f	class:Polygon
getBottomLeft	core/math/Geometry.cpp	/^Point2D Rectangle::getBottomLeft() const$/;"	f	class:Rectangle
getBottomParams	core/memory/Log.cpp	/^std::vector<ImageParams> Log::getBottomParams() {$/;"	f	class:Log
getBottomRight	build/include/tool/annotations/RectangleSelection.h	/^        Point getBottomRight() {$/;"	f	class:RectangleSelection
getBottomRight	core/math/Geometry.cpp	/^Point2D Rectangle::getBottomRight() const$/;"	f	class:Rectangle
getBottomRight	tools/UTNaoTool/annotations/RectangleSelection.h	/^        Point getBottomRight() {$/;"	f	class:RectangleSelection
getBottomSegPixelValueAt	core/vision/Macros.h	/^#define getBottomSegPixelValueAt(/;"	d
getBuffer	core/memory/Logger.h	/^  inline const StreamBuffer& getBuffer() const { return main_buffer_; }$/;"	f	class:Logger
getC2wTransform	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^      Pose::getC2wTransform(bool top) const {$/;"	f	class:Pose
getCCoefficient	core/math/Geometry.cpp	/^float Line2D::getCCoefficient() const$/;"	f	class:Line2D
getCMode	lib/lua/src/lopcodes.h	/^#define getCMode(/;"	d
getCalibration	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^RobotCalibration ExtrinsicCalibrationWidget::getCalibration(bool includePose) const {$/;"	f	class:ExtrinsicCalibrationWidget
getCalibration	build/include/tool/calibration/JointCalibrator.h	/^    const RobotCalibration* getCalibration() const { return cal_; }$/;"	f	class:JointCalibrator
getCalibration	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^RobotCalibration ExtrinsicCalibrationWidget::getCalibration(bool includePose) const {$/;"	f	class:ExtrinsicCalibrationWidget
getCalibration	tools/UTNaoTool/calibration/JointCalibrator.h	/^    const RobotCalibration* getCalibration() const { return cal_; }$/;"	f	class:JointCalibrator
getCalibrationLineSegments	build/include/tool/VisionWindow_GetSet.cpp	/^vector<LineSegment> VisionWindow::getCalibrationLineSegments(ImageWidget* image) {$/;"	f	class:VisionWindow
getCalibrationLineSegments	tools/UTNaoTool/VisionWindow_GetSet.cpp	/^vector<LineSegment> VisionWindow::getCalibrationLineSegments(ImageWidget* image) {$/;"	f	class:VisionWindow
getCamera	build/include/tool/annotations/Annotation.cpp	/^Camera::Type Annotation::getCamera() {$/;"	f	class:Annotation
getCamera	tools/UTNaoTool/annotations/Annotation.cpp	/^Camera::Type Annotation::getCamera() {$/;"	f	class:Annotation
getCameraBearing	core/vision/CameraMatrix.h	/^    inline float getCameraBearing(int imageX) const {$/;"	f	class:CameraMatrix
getCameraElevation	core/vision/CameraMatrix.h	/^    inline float getCameraElevation(int imageY) const {$/;"	f	class:CameraMatrix
getCameraHeightByDistance	core/vision/CameraMatrix.cpp	/^float CameraMatrix::getCameraHeightByDistance(float distance, float worldHeight) const {$/;"	f	class:CameraMatrix
getCameraMatrix	core/vision/ImageProcessor.cpp	/^const CameraMatrix& ImageProcessor::getCameraMatrix()$/;"	f	class:ImageProcessor
getCameraParams	core/imageCapture/DummyCamera.h	/^  void getCameraParams() {}$/;"	f	class:DummyCamera
getCameraParams	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::getCameraParams() {$/;"	f	class:NaoCamera
getCameraWidthByDistance	core/vision/CameraMatrix.cpp	/^float CameraMatrix::getCameraWidthByDistance(float distance, float worldWidth) const {$/;"	f	class:CameraMatrix
getCenter	build/include/tool/annotations/Annotation.cpp	/^Point Annotation::getCenter() {$/;"	f	class:Annotation
getCenter	build/include/tool/annotations/EllipseSelection.h	/^        virtual Point getCenter() {$/;"	f	class:EllipseSelection
getCenter	build/include/tool/annotations/PolygonSelection.h	/^        virtual Point getCenter() {$/;"	f	class:PolygonSelection
getCenter	build/include/tool/annotations/RectangleSelection.h	/^        virtual Point getCenter() {$/;"	f	class:RectangleSelection
getCenter	core/math/Geometry.cpp	/^Point2D Circle::getCenter() const$/;"	f	class:Circle
getCenter	core/math/Geometry.cpp	/^Point2D Line2D::getCenter() const$/;"	f	class:Line2D
getCenter	core/math/Geometry.cpp	/^Point2D Rectangle::getCenter() const$/;"	f	class:Rectangle
getCenter	core/math/Range.h	/^    T getCenter() const {return (max + min) \/ 2;}$/;"	f	class:Range
getCenter	tools/UTNaoTool/annotations/Annotation.cpp	/^Point Annotation::getCenter() {$/;"	f	class:Annotation
getCenter	tools/UTNaoTool/annotations/EllipseSelection.h	/^        virtual Point getCenter() {$/;"	f	class:EllipseSelection
getCenter	tools/UTNaoTool/annotations/PolygonSelection.h	/^        virtual Point getCenter() {$/;"	f	class:PolygonSelection
getCenter	tools/UTNaoTool/annotations/RectangleSelection.h	/^        virtual Point getCenter() {$/;"	f	class:RectangleSelection
getCircumference	core/math/Geometry.cpp	/^float Circle::getCircumference() const$/;"	f	class:Circle
getCoM	core/motion/rswalk2014/BodyModel.hpp	/^      inline XYZ_Coord getCoM() {$/;"	f	class:BodyModel
getCol	core/common/NMatrix.cpp	/^NMatrix  NMatrix::getCol(int index)$/;"	f	class:NMatrix
getColor	build/include/tool/annotations/Annotation.cpp	/^Color Annotation::getColor() {$/;"	f	class:Annotation
getColor	tools/UTNaoTool/annotations/Annotation.cpp	/^Color Annotation::getColor() {$/;"	f	class:Annotation
getColorFlags	build/include/tool/ClassificationWidget.cpp	/^int ClassificationWidget::getColorFlags() {$/;"	f	class:ClassificationWidget
getColorFlags	tools/UTNaoTool/ClassificationWidget.cpp	/^int ClassificationWidget::getColorFlags() {$/;"	f	class:ClassificationWidget
getColorTable	core/vision/ImageProcessor.cpp	/^unsigned char* ImageProcessor::getColorTable()$/;"	f	class:ImageProcessor
getConfigId	core/python/cfgmap.py	/^def getConfigId():$/;"	f
getControlSetting	core/imageCapture/DummyCamera.h	/^  int getControlSetting(unsigned int id) {return 0;}$/;"	f	class:DummyCamera
getControlSetting	core/imageCapture/NaoCamera.cpp	/^int NaoCamera::getControlSetting(unsigned int id) {$/;"	f	class:NaoCamera
getControllerInfo	build/include/tool/joystickxbox.cpp	/^ControllerInfo getControllerInfo() {$/;"	f
getControllerInfo	tools/UTNaoTool/joystickxbox.cpp	/^ControllerInfo getControllerInfo() {$/;"	f
getCos	core/math/Pose2D.h	/^  inline float getCos() const {return cosf(rotation);}$/;"	f	class:Pose2D
getCriticalPoints	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^std::vector<YUV*> AnnotationAnalyzer::getCriticalPoints(Color query) {$/;"	f	class:AnnotationAnalyzer
getCriticalPoints	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^std::vector<YUV*> AnnotationAnalyzer::getCriticalPoints(Color query) {$/;"	f	class:AnnotationAnalyzer
getCurrentAddress	build/include/tool/UTMainWnd.cpp	/^QString UTMainWnd::getCurrentAddress() {$/;"	f	class:UTMainWnd
getCurrentAddress	tools/UTNaoTool/UTMainWnd.cpp	/^QString UTMainWnd::getCurrentAddress() {$/;"	f	class:UTMainWnd
getCurrentFrame	core/motion/SpecialMotionModule.cpp	/^int SpecialMotionModule::getCurrentFrame() {$/;"	f	class:SpecialMotionModule
getCurrentTime	core/vision/ImageProcessor.cpp	/^double ImageProcessor::getCurrentTime()$/;"	f	class:ImageProcessor
getData	core/memory/GraphableBlock.h	/^  float getData(const char *name) {$/;"	f	struct:GraphableBlock
getDataBase	core/vision/VisionModule.cpp	/^string VisionModule::getDataBase() {$/;"	f	class:VisionModule
getDelta	core/memory/SensorBlock.h	/^  float getDelta(int index) const { return values_[index] - prevValues_[index]; };$/;"	f	struct:SensorBlock
getDepth	core/python/task.py	/^  def getDepth(self):$/;"	m	class:BaseTask
getDescription	core/math/MVTools.cpp	/^const char* MVException::getDescription() const$/;"	f	class:MVException
getDiagonalLength	core/math/Geometry.cpp	/^float Rectangle::getDiagonalLength() const$/;"	f	class:Rectangle
getDirection	core/math/Geometry.cpp	/^AngRad Point2D::getDirection() const$/;"	f	class:Point2D
getDirection	core/math/Geometry.cpp	/^float LineSegment::getDirection() const {$/;"	f	class:LineSegment
getDirection	core/python/geometry.py	/^  def getDirection(self):$/;"	m	class:Point2D
getDistXYT	particle_filters/RMCL_particle_filter.hpp	/^    double getDistXYT( ParticleVector a , double *b)$/;"	f	class:RMCLParticleFilter
getDistanceTo	core/math/Geometry.cpp	/^float LineSegment::getDistanceTo(Point2D p) const {$/;"	f	class:LineSegment
getDistanceTo	core/math/Geometry.cpp	/^float LineSegment::getDistanceTo(Point2D p1, Point2D p2) const {$/;"	f	class:LineSegment
getDistanceTo	core/math/Geometry.cpp	/^float Point2D::getDistanceTo( const Point2D p ) const {$/;"	f	class:Point2D
getDistanceTo	core/python/geometry.py	/^  def getDistanceTo(self, p):$/;"	m	class:Point2D
getDistanceTo	core/python/geometry.py	/^  def getDistanceTo(self, point):$/;"	m	class:LineSegment
getDistanceToPoint	core/math/Geometry.cpp	/^float Line2D::getDistanceToPoint( Point2D p ) const$/;"	f	class:Line2D
getDouble	core/InterpreterModule.cpp	/^double InterpreterModule::getDouble(double *arr, int ind) {$/;"	f	class:InterpreterModule
getEnclosedPoints	build/include/tool/annotations/Annotation.cpp	/^std::vector<Point> Annotation::getEnclosedPoints() {$/;"	f	class:Annotation
getEnclosedPoints	build/include/tool/annotations/Annotation.cpp	/^std::vector<Point> Annotation::getEnclosedPoints(int frame) {$/;"	f	class:Annotation
getEnclosedPoints	build/include/tool/annotations/EllipseSelection.h	/^        virtual std::vector<Point> getEnclosedPoints() {$/;"	f	class:EllipseSelection
getEnclosedPoints	build/include/tool/annotations/PolygonSelection.h	/^        virtual std::vector<Point> getEnclosedPoints() {$/;"	f	class:PolygonSelection
getEnclosedPoints	build/include/tool/annotations/RectangleSelection.h	/^        virtual std::vector<Point> getEnclosedPoints() {$/;"	f	class:RectangleSelection
getEnclosedPoints	build/include/tool/annotations/Selection.h	/^        virtual std::vector<Point> getEnclosedPoints(int frame) {$/;"	f	class:Selection
getEnclosedPoints	tools/UTNaoTool/annotations/Annotation.cpp	/^std::vector<Point> Annotation::getEnclosedPoints() {$/;"	f	class:Annotation
getEnclosedPoints	tools/UTNaoTool/annotations/Annotation.cpp	/^std::vector<Point> Annotation::getEnclosedPoints(int frame) {$/;"	f	class:Annotation
getEnclosedPoints	tools/UTNaoTool/annotations/EllipseSelection.h	/^        virtual std::vector<Point> getEnclosedPoints() {$/;"	f	class:EllipseSelection
getEnclosedPoints	tools/UTNaoTool/annotations/PolygonSelection.h	/^        virtual std::vector<Point> getEnclosedPoints() {$/;"	f	class:PolygonSelection
getEnclosedPoints	tools/UTNaoTool/annotations/RectangleSelection.h	/^        virtual std::vector<Point> getEnclosedPoints() {$/;"	f	class:RectangleSelection
getEnclosedPoints	tools/UTNaoTool/annotations/Selection.h	/^        virtual std::vector<Point> getEnclosedPoints(int frame) {$/;"	f	class:Selection
getEntry	core/common/RingBuffer.h	/^    V& getEntry (int i)$/;"	f	class:RingBuffer
getEntry	core/common/RingBuffer.h	/^    const V& getEntry (int i) const$/;"	f	class:RingBuffer
getEntry	core/common/RingBufferWithSum.h	/^    C getEntry (int i)$/;"	f	class:RingBufferWithSum
getEntry	core/common/RingQueue.h	/^    V& getEntry(int i) {$/;"	f	class:RingQueue
getEntry	core/common/RingQueue.h	/^    const V& getEntry (int i) const$/;"	f	class:RingQueue
getEntry	core/common/RingQueueWithSum.h	/^    V& getEntry(int i) {$/;"	f	class:RingQueueWithSum
getEntry	core/common/RingQueueWithSum.h	/^    const V& getEntry (int i) const$/;"	f	class:RingQueueWithSum
getError	build/include/tool/simulation/LocalizationSimulation.cpp	/^AgentError LocalizationSimulation::getError(LocSimAgent::Type type) {$/;"	f	class:LocalizationSimulation
getError	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^AgentError LocalizationSimulation::getError(LocSimAgent::Type type) {$/;"	f	class:LocalizationSimulation
getF	lib/lua/src/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getFieldAreaRoleConfigPtr	core/memory/BehaviorParamBlock.h	/^  FieldAreaRoleConfig* getFieldAreaRoleConfigPtr(int i) {$/;"	f	struct:RoleStrategy
getFieldLinesCameraFrame	build/include/tool/calibration/ExtrinsicCalibrator.cpp	/^vector<LineSegment> ExtrinsicCalibrator::getFieldLinesCameraFrame(const RobotCalibration& cal, WorldObjectBlock* world_object_block, const CameraMatrix& cmatrix) {$/;"	f	class:ExtrinsicCalibrator
getFieldLinesCameraFrame	build/include/tool/calibration/ExtrinsicCalibrator.cpp	/^vector<LineSegment> ExtrinsicCalibrator::getFieldLinesCameraFrame(const RobotCalibration& cal, const CameraMatrix& cmatrix) const {$/;"	f	class:ExtrinsicCalibrator
getFieldLinesCameraFrame	tools/UTNaoTool/calibration/ExtrinsicCalibrator.cpp	/^vector<LineSegment> ExtrinsicCalibrator::getFieldLinesCameraFrame(const RobotCalibration& cal, WorldObjectBlock* world_object_block, const CameraMatrix& cmatrix) {$/;"	f	class:ExtrinsicCalibrator
getFieldLinesCameraFrame	tools/UTNaoTool/calibration/ExtrinsicCalibrator.cpp	/^vector<LineSegment> ExtrinsicCalibrator::getFieldLinesCameraFrame(const RobotCalibration& cal, const CameraMatrix& cmatrix) const {$/;"	f	class:ExtrinsicCalibrator
getFieldLinesGlobalFrame	build/include/tool/calibration/ExtrinsicCalibrator.cpp	/^vector<LineSegment> ExtrinsicCalibrator::getFieldLinesGlobalFrame() const {$/;"	f	class:ExtrinsicCalibrator
getFieldLinesGlobalFrame	tools/UTNaoTool/calibration/ExtrinsicCalibrator.cpp	/^vector<LineSegment> ExtrinsicCalibrator::getFieldLinesGlobalFrame() const {$/;"	f	class:ExtrinsicCalibrator
getFilAccX	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getFilAccX() {$/;"	f	class:BodyModel
getFilAccY	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getFilAccY() {$/;"	f	class:BodyModel
getFilHighZMPF	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getFilHighZMPF() {$/;"	f	class:BodyModel
getFilLowZMPF	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getFilLowZMPF() {$/;"	f	class:BodyModel
getFilZMPL	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getFilZMPL() {$/;"	f	class:BodyModel
getFile	build/include/tool/LogEditorWindow.h	/^    std::string getFile() {$/;"	f	class:FrameListWidgetItem
getFile	tools/UTNaoTool/LogEditorWindow.h	/^    std::string getFile() {$/;"	f	class:FrameListWidgetItem
getFilteredTotalPressure	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getFilteredTotalPressure() {$/;"	f	class:BodyModel
getFloat	core/InterpreterModule.cpp	/^float InterpreterModule::getFloat(float *arr, int ind) {$/;"	f	class:InterpreterModule
getFootZMP	core/motion/rswalk2014/BodyModel.cpp	/^float BodyModel::getFootZMP(bool isLeft, const SensorValues &sensors) {$/;"	f	class:BodyModel
getForwardLean	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^float CKF::getForwardLean(){$/;"	f	class:CKF
getFrame	build/include/tool/LogEditorWindow.h	/^    int getFrame() {$/;"	f	class:FrameListWidgetItem
getFrame	core/memory/Log.cpp	/^Memory& Log::getFrame(unsigned int idx, bool manage) {$/;"	f	class:Log
getFrame	tools/UTNaoTool/LogEditorWindow.h	/^    int getFrame() {$/;"	f	class:FrameListWidgetItem
getFrames	core/python/task.py	/^  def getFrames(self):$/;"	m	class:BaseTask
getFullIP	build/include/tool/TeamConfigWindow.cpp	/^QString TeamConfigWindow::getFullIP(const QString &suffix) {$/;"	f	class:TeamConfigWindow
getFullIP	tools/UTNaoTool/TeamConfigWindow.cpp	/^QString TeamConfigWindow::getFullIP(const QString &suffix) {$/;"	f	class:TeamConfigWindow
getGoalStatistics	build/include/tool/AnalysisWidget.cpp	/^goalstats AnalysisWidget::getGoalStatistics() {$/;"	f	class:AnalysisWidget
getGoalStatistics	tools/UTNaoTool/AnalysisWidget.cpp	/^goalstats AnalysisWidget::getGoalStatistics() {$/;"	f	class:AnalysisWidget
getGtMemory	build/include/tool/simulation/LocalizationSimulation.cpp	/^Memory* LocalizationSimulation::getGtMemory(int) {$/;"	f	class:LocalizationSimulation
getGtMemory	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^Memory* LocalizationSimulation::getGtMemory(int) {$/;"	f	class:LocalizationSimulation
getGtMemoryCache	build/include/tool/simulation/BehaviorSimulation.cpp	/^MemoryCache BehaviorSimulation::getGtMemoryCache(int player) {$/;"	f	class:BehaviorSimulation
getGtMemoryCache	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^MemoryCache IBSim::getGtMemoryCache(int player) {$/;"	f	class:IBSim
getGtMemoryCache	build/include/tool/simulation/LocalizationSimulation.cpp	/^MemoryCache LocalizationSimulation::getGtMemoryCache(int) {$/;"	f	class:LocalizationSimulation
getGtMemoryCache	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^MemoryCache BehaviorSimulation::getGtMemoryCache(int player) {$/;"	f	class:BehaviorSimulation
getGtMemoryCache	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^MemoryCache IBSim::getGtMemoryCache(int player) {$/;"	f	class:IBSim
getGtMemoryCache	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^MemoryCache LocalizationSimulation::getGtMemoryCache(int) {$/;"	f	class:LocalizationSimulation
getHeadChange	core/vision/ImageProcessor.cpp	/^float ImageProcessor::getHeadChange() const$/;"	f	class:ImageProcessor
getHeadMatrix	build/include/tool/VisionWindow_GetSet.cpp	/^Pose3D VisionWindow::getHeadMatrix() {$/;"	f	class:VisionWindow
getHeadMatrix	tools/UTNaoTool/VisionWindow_GetSet.cpp	/^Pose3D VisionWindow::getHeadMatrix() {$/;"	f	class:VisionWindow
getHeadPan	build/include/tool/VisionWindow_GetSet.cpp	/^float VisionWindow::getHeadPan() {$/;"	f	class:VisionWindow
getHeadPan	tools/UTNaoTool/VisionWindow_GetSet.cpp	/^float VisionWindow::getHeadPan() {$/;"	f	class:VisionWindow
getHeadTilt	build/include/tool/VisionWindow_GetSet.cpp	/^float VisionWindow::getHeadTilt() {$/;"	f	class:VisionWindow
getHeadTilt	tools/UTNaoTool/VisionWindow_GetSet.cpp	/^float VisionWindow::getHeadTilt() {$/;"	f	class:VisionWindow
getHorizon	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^std::pair<int, int> Pose::getHorizon() const {$/;"	f	class:Pose
getHorizontalFootZMP	core/motion/rswalk2014/BodyModel.cpp	/^float BodyModel::getHorizontalFootZMP(bool isLeft, const SensorValues &sensors) {$/;"	f	class:BodyModel
getIP	bin/compile_copy	/^def getIP(args):$/;"	f
getIP	bin/copy_robot	/^def getIP(args):$/;"	f
getIP	build/compile_copy	/^def getIP(args):$/;"	f
getIP	build/copy_robot	/^def getIP(args):$/;"	f
getIP	build/cpcompile	/^def getIP(args):$/;"	f
getImage	build/include/tool/ImageWidget.h	/^   inline QImage* getImage() { return img_; }$/;"	f	class:ImageWidget
getImage	core/imageCapture/DummyCamera.h	/^  unsigned char* getImage() const {return NULL;}$/;"	f	class:DummyCamera
getImage	core/imageCapture/NaoCamera.cpp	/^unsigned char* NaoCamera::getImage() {$/;"	f	class:NaoCamera
getImage	tools/UTNaoTool/ImageWidget.h	/^   inline QImage* getImage() { return img_; }$/;"	f	class:ImageWidget
getImageAssignment	build/include/tool/VisionWindow.cpp	/^int VisionWindow::getImageAssignment(ImageWidget* widget){$/;"	f	class:VisionWindow
getImageAssignment	tools/UTNaoTool/VisionWindow.cpp	/^int VisionWindow::getImageAssignment(ImageWidget* widget){$/;"	f	class:VisionWindow
getImageCoordinates	core/vision/CameraMatrix.cpp	/^Coordinates CameraMatrix::getImageCoordinates(Vector3f worldPosition) const {$/;"	f	class:CameraMatrix
getImageCoordinates	core/vision/CameraMatrix.cpp	/^Coordinates CameraMatrix::getImageCoordinates(float x, float y, float z) const {$/;"	f	class:CameraMatrix
getImageHeight	core/vision/ImageProcessor.cpp	/^int ImageProcessor::getImageHeight()$/;"	f	class:ImageProcessor
getImageParams	core/vision/CameraMatrix.h	/^    inline const ImageParams& getImageParams() const { return iparams_; }$/;"	f	class:CameraMatrix
getImageParams	core/vision/ImageProcessor.h	/^    const ImageParams& getImageParams() const { return iparams_; }$/;"	f	class:ImageProcessor
getImageProcessor	build/include/tool/VisionWindow.cpp	/^ImageProcessor* VisionWindow::getImageProcessor(ImageWidget* widget){$/;"	f	class:VisionWindow
getImageProcessor	build/include/tool/VisionWindow.cpp	/^ImageProcessor* VisionWindow::getImageProcessor(int image){$/;"	f	class:VisionWindow
getImageProcessor	tools/UTNaoTool/VisionWindow.cpp	/^ImageProcessor* VisionWindow::getImageProcessor(ImageWidget* widget){$/;"	f	class:VisionWindow
getImageProcessor	tools/UTNaoTool/VisionWindow.cpp	/^ImageProcessor* VisionWindow::getImageProcessor(int image){$/;"	f	class:VisionWindow
getImageWidth	core/vision/ImageProcessor.cpp	/^int ImageProcessor::getImageWidth()$/;"	f	class:ImageProcessor
getImageX	core/vision/CameraMatrix.h	/^    inline float getImageX(float cameraBearing) const {$/;"	f	class:CameraMatrix
getImageY	core/vision/CameraMatrix.h	/^    inline float getImageY(float cameraElevation) const {$/;"	f	class:CameraMatrix
getImg	core/vision/ImageProcessor.cpp	/^unsigned char* ImageProcessor::getImg()$/;"	f	class:ImageProcessor
getImgBottom	core/memory/ImageBlock.h	/^  inline unsigned char* getImgBottom() { return img_bottom_.get(); }$/;"	f	struct:ImageBlock
getImgTop	core/memory/ImageBlock.h	/^  inline unsigned char* getImgTop() { return img_top_.get(); }$/;"	f	struct:ImageBlock
getInt	core/InterpreterModule.cpp	/^int InterpreterModule::getInt(int *arr, int ind) {$/;"	f	class:InterpreterModule
getIntersection	core/math/Geometry.cpp	/^Point2D Line2D::getIntersection( Line2D line ) const$/;"	f	class:Line2D
getIntersection	core/python/geometry.py	/^  def getIntersection(self, line):$/;"	m	class:Line2D
getIntersectionArea	core/math/Geometry.cpp	/^float Circle::getIntersectionArea( Circle c ) const$/;"	f	class:Circle
getIntersectionPoints	core/math/Geometry.cpp	/^int Circle::getIntersectionPoints( Circle c, Point2D *p1, Point2D *p2) const$/;"	f	class:Circle
getIsBetweenSteps	core/motion/rswalk2014/BodyModel.hpp	/^      inline bool getIsBetweenSteps() {$/;"	f	class:BodyModel
getIsPaused	core/motion/rswalk2014/BodyModel.hpp	/^      inline bool getIsPaused() {$/;"	f	class:BodyModel
getIsStopped	core/motion/rswalk2014/BodyModel.hpp	/^      bool getIsStopped() {$/;"	f	class:BodyModel
getIterations	core/python/task.py	/^  def getIterations(self):$/;"	m	class:BaseTask
getJointDelta	core/memory/JointBlock.h	/^  float getJointDelta(int i) const {$/;"	f	struct:JointBlock
getJointName	core/common/RobotInfo.h	/^static const char* getJointName(Joint joint) {$/;"	f
getJointTemperature	core/memory/SensorBlock.h	/^  float getJointTemperature(int i){$/;"	f	struct:SensorBlock
getJointValue	core/memory/JointBlock.h	/^  float getJointValue(int i) const {$/;"	f	struct:JointBlock
getLEDString	core/common/RobotInfo.h	/^static const char* getLEDString(LED l) {$/;"	f
getLastZMPL	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getLastZMPL() {$/;"	f	class:BodyModel
getLeft	core/math/Geometry.cpp	/^float Rectangle::getLeft() const$/;"	f	class:Rectangle
getLeft	core/math/Polygon.cpp	/^int Polygon::getLeft() {$/;"	f	class:Polygon
getLeftFSROffsets	core/common/RobotDimensions.h	/^  std::vector<Vector3<float> > getLeftFSROffsets() {$/;"	f	class:RobotDimensions
getLength	core/math/Geometry.cpp	/^float Rectangle::getLength() const$/;"	f	class:Rectangle
getLocalizationAnnotations	build/include/tool/annotations/AnnotationGroup.cpp	/^std::vector<LocalizationAnnotation*> AnnotationGroup::getLocalizationAnnotations() {$/;"	f	class:AnnotationGroup
getLocalizationAnnotations	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^std::vector<LocalizationAnnotation*> AnnotationGroup::getLocalizationAnnotations() {$/;"	f	class:AnnotationGroup
getLockName	core/memory/Lock.cpp	/^std::string Lock::getLockName(Memory *memory,const std::string &name) {$/;"	f	class:Lock
getLogs	build/include/tool/FilesWindow.cpp	/^void FilesWindow::getLogs() {$/;"	f	class:FilesWindow
getLogs	build/include/tool/ProcessExecutor.cpp	/^void PE::getLogs(QString ip, PE::Callback callback) {$/;"	f	class:PE
getLogs	build/include/tool/ProcessExecutor.cpp	/^void PE::getLogs(QString ip, QString destination, PE::Callback callback) {$/;"	f	class:PE
getLogs	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::getLogs() {$/;"	f	class:FilesWindow
getLogs	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::getLogs(QString ip, PE::Callback callback) {$/;"	f	class:PE
getLogs	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::getLogs(QString ip, QString destination, PE::Callback callback) {$/;"	f	class:PE
getLuaParameters	build/include/tool/MotionSimulation.cpp	/^void MotionSimulation::getLuaParameters() {$/;"	f	class:MotionSimulation
getLuaParameters	tools/UTNaoTool/MotionSimulation.cpp	/^void MotionSimulation::getLuaParameters() {$/;"	f	class:MotionSimulation
getMagnitude	core/math/Geometry.cpp	/^float Point2D::getMagnitude() const$/;"	f	class:Point2D
getMagnitude	core/python/geometry.py	/^  def getMagnitude(self):$/;"	m	class:Point2D
getMangledName	build/luaswig/generateSwig.py	/^def getMangledName(name):$/;"	f
getMaxEntries	core/common/RingBuffer.h	/^    inline int getMaxEntries() const$/;"	f	class:RingBuffer
getMaxEntries	core/common/RingBufferWithSum.h	/^    inline int getMaxEntries() const$/;"	f	class:RingBufferWithSum
getMaxEntries	core/common/RingQueue.h	/^    inline int getMaxEntries() const$/;"	f	class:RingQueue
getMaxEntries	core/common/RingQueueWithSum.h	/^    inline int getMaxEntries() const$/;"	f	class:RingQueueWithSum
getMaxExpFloat	core/math/MVTools.cpp	/^float getMaxExpFloat()$/;"	f	namespace:MVTools
getMaxFrame	build/include/tool/annotations/Annotation.cpp	/^int Annotation::getMaxFrame() {$/;"	f	class:Annotation
getMaxFrame	tools/UTNaoTool/annotations/Annotation.cpp	/^int Annotation::getMaxFrame() {$/;"	f	class:Annotation
getMaxPosFloat	core/math/MVTools.cpp	/^float getMaxPosFloat()$/;"	f	namespace:MVTools
getMaxPosInt	core/math/MVTools.cpp	/^int getMaxPosInt()$/;"	f	namespace:MVTools
getMaxTemp	core/python/lights.py	/^def getMaxTemp():$/;"	f
getMeans	particle_filters/RMCL_particle_filter.hpp	/^    double** getMeans( int length , int k)$/;"	f	class:RMCLParticleFilter
getMedian	core/common/RingBufferWithSum.h	/^    C getMedian() {$/;"	f	class:RingBufferWithSum
getMemory	build/include/tool/MotionSimulation.cpp	/^Memory* MotionSimulation::getMemory(){$/;"	f	class:MotionSimulation
getMemory	build/include/tool/simulation/SimulatedPlayer.cpp	/^Memory* SimulatedPlayer::getMemory(){$/;"	f	class:SimulatedPlayer
getMemory	tools/UTNaoTool/MotionSimulation.cpp	/^Memory* MotionSimulation::getMemory(){$/;"	f	class:MotionSimulation
getMemory	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^Memory* SimulatedPlayer::getMemory(){$/;"	f	class:SimulatedPlayer
getMemoryBlock	core/Module.h	/^  void getMemoryBlock(T *&ptr, const std::string &name){$/;"	f	class:Module
getMemoryCache	build/include/tool/simulation/SimulatedPlayer.cpp	/^MemoryCache SimulatedPlayer::getMemoryCache() {$/;"	f	class:SimulatedPlayer
getMemoryCache	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^MemoryCache SimulatedPlayer::getMemoryCache() {$/;"	f	class:SimulatedPlayer
getMinFrame	build/include/tool/annotations/Annotation.cpp	/^int Annotation::getMinFrame() {$/;"	f	class:Annotation
getMinFrame	tools/UTNaoTool/annotations/Annotation.cpp	/^int Annotation::getMinFrame() {$/;"	f	class:Annotation
getMinPosFloat	core/math/MVTools.cpp	/^float getMinPosFloat()$/;"	f	namespace:MVTools
getMinPosInt	core/math/MVTools.cpp	/^int getMinPosInt()$/;"	f	namespace:MVTools
getMinimum	core/common/RingBufferWithSum.h	/^    C getMinimum()$/;"	f	class:RingBufferWithSum
getMode	build/include/tool/ImageWidget.cpp	/^SelectionMode ImageWidget::getMode(){$/;"	f	class:ImageWidget
getMode	tools/UTNaoTool/ImageWidget.cpp	/^SelectionMode ImageWidget::getMode(){$/;"	f	class:ImageWidget
getModel	core/memory/OpponentBlock.h	/^  OpponentModel getModel(int index) {$/;"	f	struct:OpponentBlock
getMotionIdName	core/motion/SpecialMotionParser.cpp	/^string SpecialMotionParser::getMotionIdName(string& s)$/;"	f	class:SpecialMotionParser
getMyIntersection	core/math/Geometry.cpp	/^Point2D Line2D::getMyIntersection( Line2D line ) const {$/;"	f	class:Line2D
getNAO_LOCATION	particle_filters/RMCL_particle_filter.hpp	/^ParticleVector getNAO_LOCATION(){return NAO_LOCATION;}$/;"	f	class:RMCLParticleFilter
getName	build/include/tool/annotations/Annotation.cpp	/^std::string Annotation::getName() {$/;"	f	class:Annotation
getName	build/include/tool/annotations/EllipseSelection.h	/^        virtual std::string getName(){$/;"	f	class:EllipseSelection
getName	build/include/tool/annotations/PolygonSelection.h	/^        virtual std::string getName(){$/;"	f	class:PolygonSelection
getName	build/include/tool/annotations/RectangleSelection.h	/^        virtual std::string getName(){$/;"	f	class:RectangleSelection
getName	core/common/Enum.h	/^  const char* getName(size_t e) { return valid(e) ? names[e].c_str() : 0; }$/;"	f	class:EnumName
getName	core/memory/BehaviorBlock.h	/^  static const char* getName(Mode mode) {$/;"	f	struct:WalkMode
getName	core/motion/KickParameters.h	/^  static std::string getName(State state) {$/;"	f	class:KickState
getName	tools/UTNaoTool/annotations/Annotation.cpp	/^std::string Annotation::getName() {$/;"	f	class:Annotation
getName	tools/UTNaoTool/annotations/EllipseSelection.h	/^        virtual std::string getName(){$/;"	f	class:EllipseSelection
getName	tools/UTNaoTool/annotations/PolygonSelection.h	/^        virtual std::string getName(){$/;"	f	class:PolygonSelection
getName	tools/UTNaoTool/annotations/RectangleSelection.h	/^        virtual std::string getName(){$/;"	f	class:RectangleSelection
getNearestCircleIntersection	core/math/Geometry.cpp	/^Point2D LineSegment::getNearestCircleIntersection(Point2D center, float radius, Point2D near) {$/;"	f	class:LineSegment
getNearestLinePoint	build/include/tool/VisionWindow_GetSet.cpp	/^Point2D VisionWindow::getNearestLinePoint(ImageWidget* image, Sample s) {$/;"	f	class:VisionWindow
getNearestLinePoint	tools/UTNaoTool/VisionWindow_GetSet.cpp	/^Point2D VisionWindow::getNearestLinePoint(ImageWidget* image, Sample s) {$/;"	f	class:VisionWindow
getNode	core/python/state_machine.py	/^  def getNode(self, task):$/;"	m	class:StateMachine
getNormalVector	build/include/tool/UTOpenGL/BasicGL.cpp	/^Vector3f BasicGL::getNormalVector(Vector3f v1, Vector3f v2, Vector3f v3) {$/;"	f	class:BasicGL
getNormalVector	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^Vector3f BasicGL::getNormalVector(Vector3f v1, Vector3f v2, Vector3f v3) {$/;"	f	class:BasicGL
getNumBytes	data/scripts/wireless-monitor.py	/^  def getNumBytes(self):$/;"	m	class:WirelessTester
getNumProcs	bin/compile	/^def getNumProcs():$/;"	f
getNumProcs	build/compile	/^def getNumProcs():$/;"	f
getNumberOfEntries	core/common/RingBuffer.h	/^    int getNumberOfEntries() const$/;"	f	class:RingBuffer
getNumberOfEntries	core/common/RingBufferWithSum.h	/^    inline int getNumberOfEntries() const$/;"	f	class:RingBufferWithSum
getNumberOfEntries	core/common/RingQueue.h	/^    int getNumberOfEntries() const$/;"	f	class:RingQueue
getNumberOfEntries	core/common/RingQueueWithSum.h	/^    int getNumberOfEntries() const$/;"	f	class:RingQueueWithSum
getObj	core/memory/WorldObjectBlock.h	/^  WorldObject getObj(unsigned int ind) {$/;"	f	struct:WorldObjectBlock
getObjPtr	core/memory/WorldObjectBlock.h	/^  WorldObject* getObjPtr(unsigned int ind) {$/;"	f	struct:WorldObjectBlock
getObject	build/include/tool/simulation/GoalieSimulation.cpp	/^#define getObject(/;"	d	file:
getObject	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^#define getObject(/;"	d	file:
getObject	build/include/tool/simulation/LocalizationSimulation.cpp	/^#define getObject(/;"	d	file:
getObject	build/include/tool/simulation/ObservationGenerator.cpp	/^#define getObject(/;"	d	file:
getObject	build/include/tool/simulation/PhysicsSimulator.cpp	/^#define getObject(/;"	d	file:
getObject	build/include/tool/simulation/RobotMovementSimulator.cpp	/^#define getObject(/;"	d	file:
getObject	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^#define getObject(/;"	d	file:
getObject	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^#define getObject(/;"	d	file:
getObject	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^#define getObject(/;"	d	file:
getObject	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^#define getObject(/;"	d	file:
getObject	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^#define getObject(/;"	d	file:
getObject	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^#define getObject(/;"	d	file:
getOffset	build/include/tool/annotations/Selection.h	/^        Point getOffset() {$/;"	f	class:Selection
getOffset	build/include/tool/annotations/Selection.h	/^        Point getOffset(int frame) {$/;"	f	class:Selection
getOffset	core/sensor/SensorModule.cpp	/^float SensorModule::getOffset(float arr[NUM_CALIBRATION_READINGS]) {$/;"	f	class:SensorModule
getOffset	tools/UTNaoTool/annotations/Selection.h	/^        Point getOffset() {$/;"	f	class:Selection
getOffset	tools/UTNaoTool/annotations/Selection.h	/^        Point getOffset(int frame) {$/;"	f	class:Selection
getOpMode	lib/lua/src/lopcodes.h	/^#define getOpMode(/;"	d
getOrAddBlockByName	core/memory/Memory.h	/^  bool getOrAddBlockByName(T *&ptr, const std::string &name, MemoryOwner::Owner owner=MemoryOwner::UNKNOWN) {$/;"	f	class:Memory
getOrAddMemoryBlock	core/Module.h	/^  void getOrAddMemoryBlock(T *&ptr, const std::string &name) {$/;"	f	class:Module
getOrthogonalLine	core/math/Geometry.cpp	/^Line2D Line2D::getOrthogonalLine( Point2D p ) const$/;"	f	class:Line2D
getParameters	build/include/tool/UTNaoTool.cpp	/^int getParameters(int argc, char **argv) {$/;"	f
getParameters	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^ICMeasures IntrinsicCalibrator::getParameters(vector<Point2f> points) {$/;"	f	class:IntrinsicCalibrator
getParameters	core/math/GaussNewtonOptimizer.h	/^  const std::vector<float>& getParameters() const$/;"	f	class:GaussNewtonOptimizer
getParameters	tools/UTNaoTool/UTNaoTool.cpp	/^int getParameters(int argc, char **argv) {$/;"	f
getParameters	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^ICMeasures IntrinsicCalibrator::getParameters(vector<Point2f> points) {$/;"	f	class:IntrinsicCalibrator
getParams	build/include/tool/CameraWindow.cpp	/^void CameraWindow::getParams() {$/;"	f	class:CameraWindow
getParams	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::getParams() {$/;"	f	class:CameraWindow
getParticles	particle_filters/RMCL_particle_filter.hpp	/^    std::vector<Particle> getParticles()$/;"	f	class:RMCLParticleFilter
getPendulumModel	core/motion/rswalk2014/BodyModel.hpp	/^      PendulumModel getPendulumModel() {$/;"	f	class:BodyModel
getPixel	build/include/tool/ImageWidget.h	/^   inline QRgb getPixel(int x, int y) {$/;"	f	class:ImageWidget
getPixel	tools/UTNaoTool/ImageWidget.h	/^   inline QRgb getPixel(int x, int y) {$/;"	f	class:ImageWidget
getPlayPtr	core/memory/BehaviorParamBlock.h	/^  SetPlay* getPlayPtr(int i) {$/;"	f	struct:SetPlayStrategy
getPlayerBeliefMemoryCaches	build/include/tool/simulation/Simulation.h	/^    virtual std::vector<MemoryCache> getPlayerBeliefMemoryCaches() {$/;"	f	class:Simulation
getPlayerBeliefMemoryCaches	tools/UTNaoTool/simulation/Simulation.h	/^    virtual std::vector<MemoryCache> getPlayerBeliefMemoryCaches() {$/;"	f	class:Simulation
getPlayerGtMemoryCaches	build/include/tool/simulation/Simulation.h	/^    virtual std::vector<MemoryCache> getPlayerGtMemoryCaches() { $/;"	f	class:Simulation
getPlayerGtMemoryCaches	tools/UTNaoTool/simulation/Simulation.h	/^    virtual std::vector<MemoryCache> getPlayerGtMemoryCaches() { $/;"	f	class:Simulation
getPointFromPolar	core/math/Geometry.cpp	/^Point2D Point2D::getPointFromPolar( float mag, AngRad ang )$/;"	f	class:Point2D
getPointOnLineClosestTo	core/math/Geometry.cpp	/^Point2D Line2D::getPointOnLineClosestTo( Point2D p ) const$/;"	f	class:Line2D
getPointOnLineFraction	core/math/Geometry.cpp	/^Point2D Point2D::getPointOnLineFraction( Point2D &p,$/;"	f	class:Point2D
getPointOnSegmentClosestTo	core/math/Geometry.cpp	/^Point2D LineSegment::getPointOnSegmentClosestTo(Point2D p) const {$/;"	f	class:LineSegment
getPointOnSegmentClosestTo	core/python/geometry.py	/^  def getPointOnSegmentClosestTo(self, point):$/;"	m	class:LineSegment
getPolygon	build/include/tool/annotations/PolygonSelection.h	/^        void getPolygon() {$/;"	f	class:PolygonSelection
getPolygon	tools/UTNaoTool/annotations/PolygonSelection.h	/^        void getPolygon() {$/;"	f	class:PolygonSelection
getPosOutside	core/math/Geometry.cpp	/^Point2D Rectangle::getPosOutside() const$/;"	f	class:Rectangle
getPose	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^Pose Kinematics::getPose() {$/;"	f	class:Kinematics
getPose2D	core/InterpreterModule.cpp	/^Pose2D InterpreterModule::getPose2D(Pose2D *arr,int ind) {$/;"	f	class:InterpreterModule
getPose3D	core/InterpreterModule.cpp	/^Pose3D InterpreterModule::getPose3D(Pose3D *arr,int ind) {$/;"	f	class:InterpreterModule
getPose3DPtr	core/InterpreterModule.cpp	/^Pose3D* InterpreterModule::getPose3DPtr(Pose3D *arr,int ind) {$/;"	f	class:InterpreterModule
getPoseJoint	core/python/util.py	/^def getPoseJoint(joint, pose, reversed = False, reverseRolls = False):$/;"	f
getPressureL	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getPressureL() {$/;"	f	class:BodyModel
getPressureR	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getPressureR() {$/;"	f	class:BodyModel
getProgress	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^ICMeasures IntrinsicCalibrator::getProgress() {$/;"	f	class:IntrinsicCalibrator
getProgress	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^ICMeasures IntrinsicCalibrator::getProgress() {$/;"	f	class:IntrinsicCalibrator
getRadius	core/math/Geometry.cpp	/^float Circle::getRadius() const$/;"	f	class:Circle
getRawBottomImages	core/memory/Log.cpp	/^std::vector<unsigned char*> Log::getRawBottomImages() {$/;"	f	class:Log
getRawRoll	core/sensor/InertialFilter.h	/^  float getRawRoll() { return rawRoll; };$/;"	f	class:InertialFilter
getRawTilt	core/sensor/InertialFilter.h	/^  float getRawTilt() { return rawTilt; };$/;"	f	class:InertialFilter
getRawTopImages	core/memory/Log.cpp	/^std::vector<unsigned char*> Log::getRawTopImages() {$/;"	f	class:Log
getRealStepFrequency	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getRealStepFrequency() {$/;"	f	class:BodyModel
getRight	core/math/Geometry.cpp	/^float Rectangle::getRight() const$/;"	f	class:Rectangle
getRight	core/math/Polygon.cpp	/^int Polygon::getRight() {$/;"	f	class:Polygon
getRobotConfig	build/include/tool/TeamConfigWindow.cpp	/^RobotConfig TeamConfigWindow::getRobotConfig(int self) {$/;"	f	class:TeamConfigWindow
getRobotConfig	tools/UTNaoTool/TeamConfigWindow.cpp	/^RobotConfig TeamConfigWindow::getRobotConfig(int self) {$/;"	f	class:TeamConfigWindow
getRobotId	core/vision/VisionModule.cpp	/^int VisionModule::getRobotId() {$/;"	f	class:VisionModule
getRolePositionConfigPtr	core/memory/BehaviorParamBlock.h	/^  RolePositionConfig* getRolePositionConfigPtr(int i) {$/;"	f	struct:RoleStrategy
getRoll	core/sensor/InertialFilter.h	/^  float getRoll() { return filtRoll; };$/;"	f	class:InertialFilter
getRollVel	core/sensor/InertialFilter.h	/^  float getRollVel() { return filtRollVel; };$/;"	f	class:InertialFilter
getRow	core/common/NMatrix.cpp	/^NMatrix NMatrix::getRow(int index)$/;"	f	class:NMatrix
getS	lib/lua/src/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getSagittalAcceleration	core/motion/rswalk2014/BodyModel.hpp	/^      inline float getSagittalAcceleration() {$/;"	f	class:BodyModel
getSampleCount	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^int IntrinsicCalibrator::getSampleCount() {$/;"	f	class:IntrinsicCalibrator
getSampleCount	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^int IntrinsicCalibrator::getSampleCount() {$/;"	f	class:IntrinsicCalibrator
getSampleErrorCameraFrame	build/include/tool/calibration/ExtrinsicCalibrator.cpp	/^float ExtrinsicCalibrator::getSampleErrorCameraFrame(const Sample& sample, const RobotCalibration& cal) const {$/;"	f	class:ExtrinsicCalibrator
getSampleErrorCameraFrame	build/include/tool/calibration/ExtrinsicCalibrator.cpp	/^float ExtrinsicCalibrator::getSampleErrorCameraFrame(const vector<Sample>& samples, const RobotCalibration& cal) const {$/;"	f	class:ExtrinsicCalibrator
getSampleErrorCameraFrame	tools/UTNaoTool/calibration/ExtrinsicCalibrator.cpp	/^float ExtrinsicCalibrator::getSampleErrorCameraFrame(const Sample& sample, const RobotCalibration& cal) const {$/;"	f	class:ExtrinsicCalibrator
getSampleErrorCameraFrame	tools/UTNaoTool/calibration/ExtrinsicCalibrator.cpp	/^float ExtrinsicCalibrator::getSampleErrorCameraFrame(const vector<Sample>& samples, const RobotCalibration& cal) const {$/;"	f	class:ExtrinsicCalibrator
getSampleErrorGlobalFrame	build/include/tool/calibration/ExtrinsicCalibrator.cpp	/^float ExtrinsicCalibrator::getSampleErrorGlobalFrame(const Sample& sample, const RobotCalibration& cal) const{$/;"	f	class:ExtrinsicCalibrator
getSampleErrorGlobalFrame	tools/UTNaoTool/calibration/ExtrinsicCalibrator.cpp	/^float ExtrinsicCalibrator::getSampleErrorGlobalFrame(const Sample& sample, const RobotCalibration& cal) const{$/;"	f	class:ExtrinsicCalibrator
getSamples	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^std::vector<Sample> ExtrinsicCalibrationWidget::getSamples() const {$/;"	f	class:ExtrinsicCalibrationWidget
getSamples	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^std::vector<Sample> ExtrinsicCalibrationWidget::getSamples() const {$/;"	f	class:ExtrinsicCalibrationWidget
getSegImg	core/vision/ImageProcessor.cpp	/^unsigned char* ImageProcessor::getSegImg()$/;"	f	class:ImageProcessor
getSegImgBottom	core/memory/RobotVisionBlock.h	/^  inline const unsigned char* getSegImgBottom() const { return segImgBottom.get(); }$/;"	f	struct:RobotVisionBlock
getSegImgBottom	core/memory/RobotVisionBlock.h	/^  inline unsigned char* getSegImgBottom() { return segImgBottom.get(); }$/;"	f	struct:RobotVisionBlock
getSegImgTop	core/memory/RobotVisionBlock.h	/^  inline const unsigned char* getSegImgTop() const { return segImgTop.get(); }$/;"	f	struct:RobotVisionBlock
getSegImgTop	core/memory/RobotVisionBlock.h	/^  inline unsigned char* getSegImgTop() { return segImgTop.get(); }$/;"	f	struct:RobotVisionBlock
getSegPixelValueAt	core/vision/Macros.h	/^#define getSegPixelValueAt(/;"	d
getSegmentIntersection	core/math/Geometry.cpp	/^Point2D LineSegment::getSegmentIntersection(Line2D line) const {$/;"	f	class:LineSegment
getSelection	build/include/tool/AnnotationWidget.h	/^        Selection* getSelection() {$/;"	f	class:SelectionListWidgetItem
getSelection	tools/UTNaoTool/AnnotationWidget.h	/^        Selection* getSelection() {$/;"	f	class:SelectionListWidgetItem
getSelectionEnabled	build/include/tool/ImageWidget.cpp	/^bool ImageWidget::getSelectionEnabled() {$/;"	f	class:ImageWidget
getSelectionEnabled	tools/UTNaoTool/ImageWidget.cpp	/^bool ImageWidget::getSelectionEnabled() {$/;"	f	class:ImageWidget
getSelectionType	build/include/tool/annotations/EllipseSelection.h	/^        virtual SelectionType getSelectionType(){$/;"	f	class:EllipseSelection
getSelectionType	build/include/tool/annotations/PolygonSelection.h	/^        virtual SelectionType getSelectionType(){$/;"	f	class:PolygonSelection
getSelectionType	build/include/tool/annotations/RectangleSelection.h	/^        virtual SelectionType getSelectionType(){$/;"	f	class:RectangleSelection
getSelectionType	tools/UTNaoTool/annotations/EllipseSelection.h	/^        virtual SelectionType getSelectionType(){$/;"	f	class:EllipseSelection
getSelectionType	tools/UTNaoTool/annotations/PolygonSelection.h	/^        virtual SelectionType getSelectionType(){$/;"	f	class:PolygonSelection
getSelectionType	tools/UTNaoTool/annotations/RectangleSelection.h	/^        virtual SelectionType getSelectionType(){$/;"	f	class:RectangleSelection
getSelections	build/include/tool/AnnotationWidget.cpp	/^std::vector<Selection*> AnnotationWidget::getSelections() {$/;"	f	class:AnnotationWidget
getSelections	build/include/tool/annotations/Annotation.cpp	/^const std::vector<Selection*> Annotation::getSelections() const {$/;"	f	class:Annotation
getSelections	tools/UTNaoTool/AnnotationWidget.cpp	/^std::vector<Selection*> AnnotationWidget::getSelections() {$/;"	f	class:AnnotationWidget
getSelections	tools/UTNaoTool/annotations/Annotation.cpp	/^const std::vector<Selection*> Annotation::getSelections() const {$/;"	f	class:Annotation
getSelf	build/include/tool/simulation/ObservationGenerator.cpp	/^#define getSelf(/;"	d	file:
getSelf	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^#define getSelf(/;"	d	file:
getSensorString	core/common/RobotInfo.cpp	/^const char* getSensorString(Sensor s) {$/;"	f
getSideLean	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^float CKF::getSideLean(){$/;"	f	class:CKF
getSignedAngleToLine	core/math/Geometry.cpp	/^AngRad LineSegment::getSignedAngleToLine( Line2D line ) const {$/;"	f	class:LineSegment
getSimInfo	build/include/tool/simulation/BehaviorSimulation.cpp	/^std::string BehaviorSimulation::getSimInfo(){$/;"	f	class:BehaviorSimulation
getSimInfo	build/include/tool/simulation/LocalizationSimulation.cpp	/^string LocalizationSimulation::getSimInfo() {$/;"	f	class:LocalizationSimulation
getSimInfo	build/include/tool/simulation/Simulation.h	/^    virtual std::string getSimInfo() { return std::string(); }$/;"	f	class:Simulation
getSimInfo	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^std::string BehaviorSimulation::getSimInfo(){$/;"	f	class:BehaviorSimulation
getSimInfo	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^string LocalizationSimulation::getSimInfo() {$/;"	f	class:LocalizationSimulation
getSimInfo	tools/UTNaoTool/simulation/Simulation.h	/^    virtual std::string getSimInfo() { return std::string(); }$/;"	f	class:Simulation
getSin	core/math/Pose2D.h	/^  inline float getSin() const {return sinf(rotation);}$/;"	f	class:Pose2D
getSize	core/math/Range.h	/^    T getSize() const {return max - min;}$/;"	f	class:Range
getSlope	core/math/Geometry.cpp	/^float Line2D::getSlope() const$/;"	f	class:Line2D
getSourceName	build/luaswig/generateSwig.py	/^def getSourceName(line):$/;"	f
getSourceNames	build/luaswig/generateSwig.py	/^def getSourceNames(inFile):$/;"	f
getSquaredMagnitude	core/math/Geometry.cpp	/^float Point2D::getSquaredMagnitude() const {$/;"	f	class:Point2D
getState	core/opponents/UKF4.cpp	/^float UKF4::getState(int stateID){$/;"	f	class:UKF4
getStateInfoPtr	core/motion/KickParameters.h	/^  KickStateInfo* getStateInfoPtr(KickState::State state) {$/;"	f	struct:KickParameters
getStatusCallback	build/include/tool/FilesWindow.cpp	/^ProcessExecutor::Callback FilesWindow::getStatusCallback(QString message) {$/;"	f	class:FilesWindow
getStatusCallback	tools/UTNaoTool/FilesWindow.cpp	/^ProcessExecutor::Callback FilesWindow::getStatusCallback(QString message) {$/;"	f	class:FilesWindow
getString	core/InterpreterModule.cpp	/^std::string InterpreterModule::getString(std::string *arr, int ind) {$/;"	f	class:InterpreterModule
getSum	core/common/RingBufferWithSum.h	/^    C getSum()$/;"	f	class:RingBufferWithSum
getSum	core/common/RingQueueWithSum.h	/^    V getSum() const {return sum;}$/;"	f	class:RingQueueWithSum
getSystemTime	core/common/RobotInfo.cpp	/^double getSystemTime() {$/;"	f
getSystemTime	core/imageCapture/ImageCapture.cpp	/^double ImageCapture::getSystemTime() {$/;"	f	class:ImageCapture
getSystemTime	interfaces/nao/src/naointerface.cpp	/^double naointerface::getSystemTime() {$/;"	f	class:naointerface
getTeamColor	core/vision/ImageProcessor.cpp	/^int ImageProcessor::getTeamColor()$/;"	f	class:ImageProcessor
getTeamSignAndSelf	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::getTeamSignAndSelf(int i, int &teamsign, int &self) {$/;"	f	class:BehaviorSimulation
getTeamSignAndSelf	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::getTeamSignAndSelf(int i, int &teamsign, int &self) {$/;"	f	class:BehaviorSimulation
getTextDebug	build/include/tool/simulation/BehaviorSimulation.cpp	/^std::vector<std::string> BehaviorSimulation::getTextDebug(int index){$/;"	f	class:BehaviorSimulation
getTextDebug	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^vector<string> IBSim::getTextDebug(int player) {$/;"	f	class:IBSim
getTextDebug	build/include/tool/simulation/LocalizationSimulation.cpp	/^vector<string> LocalizationSimulation::getTextDebug(int player) {$/;"	f	class:LocalizationSimulation
getTextDebug	build/include/tool/simulation/SimulatedPlayer.cpp	/^std::vector<std::string> SimulatedPlayer::getTextDebug(){$/;"	f	class:SimulatedPlayer
getTextDebug	build/include/tool/simulation/Simulation.h	/^    virtual std::vector<std::string> getTextDebug(int player = 0) { return std::vector<std::string>(); }$/;"	f	class:Simulation
getTextDebug	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^std::vector<std::string> BehaviorSimulation::getTextDebug(int index){$/;"	f	class:BehaviorSimulation
getTextDebug	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^vector<string> IBSim::getTextDebug(int player) {$/;"	f	class:IBSim
getTextDebug	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^vector<string> LocalizationSimulation::getTextDebug(int player) {$/;"	f	class:LocalizationSimulation
getTextDebug	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^std::vector<std::string> SimulatedPlayer::getTextDebug(){$/;"	f	class:SimulatedPlayer
getTextDebug	tools/UTNaoTool/simulation/Simulation.h	/^    virtual std::vector<std::string> getTextDebug(int player = 0) { return std::vector<std::string>(); }$/;"	f	class:Simulation
getTilt	core/sensor/InertialFilter.h	/^  float getTilt() { return filtTilt; };$/;"	f	class:InertialFilter
getTiltVel	core/sensor/InertialFilter.h	/^  float getTiltVel() { return filtTiltVel; };$/;"	f	class:InertialFilter
getTime	core/memory/Lock.cpp	/^boost::system_time Lock::getTime(long wait_time_in_ms) {$/;"	f	class:Lock
getTime	core/python/state_machine.py	/^  def getTime(self):$/;"	m	class:Event
getTime	core/python/task.py	/^  def getTime(self):$/;"	m	class:BaseTask
getTimeInState	core/motion/SpecialMotionModule.cpp	/^float SpecialMotionModule::getTimeInState() {$/;"	f	class:SpecialMotionModule
getTimeStamp	core/imageCapture/DummyCamera.h	/^  unsigned getTimeStamp() const {return timeStamp;}$/;"	f	class:DummyCamera
getTimeStamp	core/imageCapture/NaoCamera.cpp	/^unsigned int NaoCamera::getTimeStamp() const {$/;"	f	class:NaoCamera
getTop	core/math/Geometry.cpp	/^float Rectangle::getTop() const$/;"	f	class:Rectangle
getTop	core/math/Polygon.cpp	/^int Polygon::getTop() {$/;"	f	class:Polygon
getTopExclusionArray	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^const int16_t *Pose::getTopExclusionArray() const {$/;"	f	class:Pose
getTopExclusionArray	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^int16_t *Pose::getTopExclusionArray() {$/;"	f	class:Pose
getTopLeft	build/include/tool/annotations/RectangleSelection.h	/^        Point getTopLeft() {$/;"	f	class:RectangleSelection
getTopLeft	core/math/Geometry.cpp	/^Point2D Rectangle::getTopLeft() const$/;"	f	class:Rectangle
getTopLeft	tools/UTNaoTool/annotations/RectangleSelection.h	/^        Point getTopLeft() {$/;"	f	class:RectangleSelection
getTopParams	core/memory/Log.cpp	/^std::vector<ImageParams> Log::getTopParams() {$/;"	f	class:Log
getTopRight	core/math/Geometry.cpp	/^Point2D Rectangle::getTopRight() const$/;"	f	class:Rectangle
getTopSegPixelValueAt	core/vision/Macros.h	/^#define getTopSegPixelValueAt(/;"	d
getTorsoMatrix	build/include/tool/VisionWindow_GetSet.cpp	/^Pose3D VisionWindow::getTorsoMatrix() {$/;"	f	class:VisionWindow
getTorsoMatrix	tools/UTNaoTool/VisionWindow_GetSet.cpp	/^Pose3D VisionWindow::getTorsoMatrix() {$/;"	f	class:VisionWindow
getTrueFrontHeight	build/include/tool/VisionWindow_GetSet.cpp	/^float VisionWindow::getTrueFrontHeight() const {$/;"	f	class:VisionWindow
getTrueFrontHeight	tools/UTNaoTool/VisionWindow_GetSet.cpp	/^float VisionWindow::getTrueFrontHeight() const {$/;"	f	class:VisionWindow
getType	build/include/tool/ImageWidget.cpp	/^SelectionType ImageWidget::getType() {$/;"	f	class:ImageWidget
getType	tools/UTNaoTool/ImageWidget.cpp	/^SelectionType ImageWidget::getType() {$/;"	f	class:ImageWidget
getUchar	core/InterpreterModule.cpp	/^unsigned char InterpreterModule::getUchar(unsigned char *arr, int ind) {$/;"	f	class:InterpreterModule
getUpSide	build/include/tool/MotionSimulation.h	/^  int getUpSide;$/;"	m	class:MotionSimulation
getUpSide	core/motion/GetupModule.h	/^  Getup::GetupType getUpSide;$/;"	m	class:GetupModule
getUpSide	tools/UTNaoTool/MotionSimulation.h	/^  int getUpSide;$/;"	m	class:MotionSimulation
getUploadList	build/include/tool/TeamConfigWindow.cpp	/^QStringList TeamConfigWindow::getUploadList() {$/;"	f	class:TeamConfigWindow
getUploadList	tools/UTNaoTool/TeamConfigWindow.cpp	/^QStringList TeamConfigWindow::getUploadList() {$/;"	f	class:TeamConfigWindow
getUsableKick	core/memory/BehaviorParamBlock.h	/^  bool getUsableKick(int i){return usableKicks[i];};$/;"	f	struct:CornerKickStrategy
getUsableKick	core/memory/BehaviorParamBlock.h	/^  bool getUsableKick(int i){return usableKicks[i];};$/;"	f	struct:KickStrategy
getValidKickRegion	core/memory/BehaviorBlock.h	/^  bool getValidKickRegion(unsigned int x, unsigned int y) {$/;"	f	struct:BehaviorBlock
getValue	core/common/ExponentialFilter.h	/^  float getValue() {$/;"	f	class:ExponentialFilter
getValue	core/memory/BehaviorParamBlock.h	/^  static float getValue(bool cluster, float origVal, float clusterVal) {$/;"	f	struct:ClusterKickStrategy
getValue	core/memory/SensorBlock.h	/^  float getValue(int index) const { return values_[index]; };$/;"	f	struct:SensorBlock
getVar	core/motion/rswalk2014/types/AbsCoord.hpp	/^   float getVar(int m, int n) const {$/;"	f	struct:AbsCoord
getVar	particle_filters/RMCL_particle_filter.hpp	/^    double getVar( int length , int k , double **means )$/;"	f	class:RMCLParticleFilter
getVelocityRequest	build/include/tool/simulation/RobotMovementSimulator.cpp	/^Pose2D RobotMovementSimulator::getVelocityRequest() {$/;"	f	class:RobotMovementSimulator
getVelocityRequest	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^Pose2D RobotMovementSimulator::getVelocityRequest() {$/;"	f	class:RobotMovementSimulator
getVertices	build/include/tool/annotations/PolygonSelection.h	/^        std::vector<Point> getVertices() {$/;"	f	class:PolygonSelection
getVertices	tools/UTNaoTool/annotations/PolygonSelection.h	/^        std::vector<Point> getVertices() {$/;"	f	class:PolygonSelection
getViewBox	build/include/tool/ImageWidget.cpp	/^QRect ImageWidget::getViewBox(){$/;"	f	class:ImageWidget
getViewBox	tools/UTNaoTool/ImageWidget.cpp	/^QRect ImageWidget::getViewBox(){$/;"	f	class:ImageWidget
getVirtualTime	core/communications/CommunicationModule.cpp	/^uint32_t CommunicationModule::getVirtualTime() {$/;"	f	class:CommunicationModule
getVisiblePortion	core/math/Geometry.cpp	/^LineSegment LineSegment::getVisiblePortion(Point2D origin, AngRad orientation, AngRad fov) {$/;"	f	class:LineSegment
getWalkCycle	core/motion/rswalk2014/BodyModel.hpp	/^      WalkCycle getWalkCycle() {$/;"	f	class:BodyModel
getWalkInfo	interfaces/nao/src/almotionwrapper.cpp	/^void ALMotionWrapper::getWalkInfo(WalkInfoBlock *walk_info) {$/;"	f	class:ALMotionWrapper
getWidth	core/math/Geometry.cpp	/^float Rectangle::getWidth() const$/;"	f	class:Rectangle
getWorldDistanceByHeight	core/vision/CameraMatrix.cpp	/^float CameraMatrix::getWorldDistanceByHeight(float cameraHeight, float worldHeight) const {$/;"	f	class:CameraMatrix
getWorldDistanceByWidth	core/vision/CameraMatrix.cpp	/^float CameraMatrix::getWorldDistanceByWidth(float cameraWidth, float worldWidth) const {$/;"	f	class:CameraMatrix
getWorldHeight	core/vision/CameraMatrix.cpp	/^float CameraMatrix::getWorldHeight(Coordinates top, Coordinates bottom) const {$/;"	f	class:CameraMatrix
getWorldPosition	core/vision/CameraMatrix.cpp	/^Position CameraMatrix::getWorldPosition(Coordinates c, float height) const {$/;"	f	class:CameraMatrix
getWorldPosition	core/vision/CameraMatrix.cpp	/^Position CameraMatrix::getWorldPosition(int imageX, int imageY, float height) const {$/;"	f	class:CameraMatrix
getWorldPositionByDirectDistance	core/vision/CameraMatrix.cpp	/^Position CameraMatrix::getWorldPositionByDirectDistance(Coordinates c, float distance) const {$/;"	f	class:CameraMatrix
getWorldPositionByDirectDistance	core/vision/CameraMatrix.cpp	/^Position CameraMatrix::getWorldPositionByDirectDistance(int imageX, int imageY, float distance) const {$/;"	f	class:CameraMatrix
getWorldPositionByGroundDistance	core/vision/CameraMatrix.cpp	/^Position CameraMatrix::getWorldPositionByGroundDistance(Coordinates c, float distance) const {$/;"	f	class:CameraMatrix
getWorldPositionByGroundDistance	core/vision/CameraMatrix.cpp	/^Position CameraMatrix::getWorldPositionByGroundDistance(int imageX, int imageY, float distance) const {$/;"	f	class:CameraMatrix
getX	core/math/Geometry.cpp	/^float Point2D::getX() const$/;"	f	class:Point2D
getX	core/math/Geometry.cpp	/^float Point3D::getX() const$/;"	f	class:Point3D
getXAngle	core/math/RotationMatrix.cpp	/^float RotationMatrix::getXAngle() const$/;"	f	class:RotationMatrix
getXGivenY	core/math/Geometry.cpp	/^float Line2D::getXGivenY( float y ) const$/;"	f	class:Line2D
getXGivenY	core/python/geometry.py	/^  def getXGivenY(self, y):$/;"	m	class:Line2D
getXIntercept	core/math/Geometry.cpp	/^float Line2D::getXIntercept() const$/;"	f	class:Line2D
getY	core/math/Geometry.cpp	/^float Point2D::getY() const$/;"	f	class:Point2D
getY	core/math/Geometry.cpp	/^float Point3D::getY() const$/;"	f	class:Point3D
getYAngle	core/math/RotationMatrix.cpp	/^float RotationMatrix::getYAngle() const$/;"	f	class:RotationMatrix
getYGivenX	core/math/Geometry.cpp	/^float Line2D::getYGivenX( float x ) const$/;"	f	class:Line2D
getYGivenX	core/python/geometry.py	/^  def getYGivenX(self, x):$/;"	m	class:Line2D
getYIntercept	core/math/Geometry.cpp	/^float Line2D::getYIntercept() const$/;"	f	class:Line2D
getZ	core/math/Geometry.cpp	/^float Point3D::getZ() const$/;"	f	class:Point3D
getZAngle	core/math/RotationMatrix.cpp	/^float RotationMatrix::getZAngle() const$/;"	f	class:RotationMatrix
get_aenv_nan	lib/alglib/ap.cpp	/^double alglib::get_aenv_nan()$/;"	f	class:alglib
get_aenv_neginf	lib/alglib/ap.cpp	/^double alglib::get_aenv_neginf()$/;"	f	class:alglib
get_aenv_posinf	lib/alglib/ap.cpp	/^double alglib::get_aenv_posinf()$/;"	f	class:alglib
get_blob_number	core/vision/Union_find.h	/^		int get_blob_number(){return blob_number;}$/;"	f	class:MergeBlob
get_bottom_params_	core/memory/CameraBlock.h	/^  bool get_bottom_params_;$/;"	m	struct:CameraBlock
get_compTM	lib/lua/src/lvm.c	/^static const TValue *get_compTM (lua_State *L, Table *mt1, Table *mt2,$/;"	f	file:
get_crc_table	lib/zlib/crc32.c	/^const unsigned long FAR * ZEXPORT get_crc_table()$/;"	f
get_crc_table	lib/zlib/zconf.h	/^#  define get_crc_table /;"	d
get_evaluations	tools/behaviorSim/cma.py	/^    def get_evaluations(self):$/;"	m	class:NoiseHandler
get_mirror	tools/behaviorSim/cma.py	/^    def get_mirror(self, x):$/;"	m	class:CMAEvolutionStrategy
get_mu	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateVector get_mu(){ return mu; }$/;"	f	class:ExtendedKalmanFilter
get_mu	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  StateVector get_mu(){ return mu; }$/;"	f	class:LinearKalmanFilter
get_prompt	lib/lua/src/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
get_sigma_value	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  double get_sigma_value( int index ){ return sigma(index); }$/;"	f	class:ExtendedKalmanFilter
get_sigma_value	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  double get_sigma_value( int index ){ return sigma(index); }$/;"	f	class:LinearKalmanFilter
get_top_params_	core/memory/CameraBlock.h	/^  bool get_top_params_;$/;"	m	struct:CameraBlock
getargs	lib/lua/src/lua.c	/^static int getargs (lua_State *L, char **argv, int n) {$/;"	f	file:
getavg	core/python/UTdebug.py	/^  def getavg(self):$/;"	m	class:Timer
getbinhandler	lib/lua/doc/manual.html	/^     function getbinhandler (op1, op2, event)$/;"	f
getbinopr	lib/lua/src/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	lib/lua/src/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getcode	lib/lua/src/lcode.h	/^#define getcode(/;"	d
getcomphandler	lib/lua/doc/manual.html	/^     function getcomphandler (op1, op2, event)$/;"	f
getcontent	lib/alglib/ap.cpp	/^ alglib::complex* alglib::complex_1d_array::getcontent()$/;"	f	class:alglib::complex_1d_array
getcontent	lib/alglib/ap.cpp	/^ae_bool* alglib::boolean_1d_array::getcontent()$/;"	f	class:alglib::boolean_1d_array
getcontent	lib/alglib/ap.cpp	/^alglib::ae_int_t* alglib::integer_1d_array::getcontent()$/;"	f	class:alglib::integer_1d_array
getcontent	lib/alglib/ap.cpp	/^const ae_bool* alglib::boolean_1d_array::getcontent() const$/;"	f	class:alglib::boolean_1d_array
getcontent	lib/alglib/ap.cpp	/^const alglib::ae_int_t* alglib::integer_1d_array::getcontent() const$/;"	f	class:alglib::integer_1d_array
getcontent	lib/alglib/ap.cpp	/^const alglib::complex* alglib::complex_1d_array::getcontent() const$/;"	f	class:alglib::complex_1d_array
getcontent	lib/alglib/ap.cpp	/^const double* alglib::real_1d_array::getcontent() const$/;"	f	class:alglib::real_1d_array
getcontent	lib/alglib/ap.cpp	/^double* alglib::real_1d_array::getcontent()$/;"	f	class:alglib::real_1d_array
getcurrenv	lib/lua/src/lapi.c	/^static Table *getcurrenv (lua_State *L) {$/;"	f	file:
getdistance	core/localization/LocalizationModule.cpp	/^double LocalizationModule::getdistance( double x , double y , double bx , double by )$/;"	f	class:LocalizationModule
getdistance	particle_filters/MCL_main.cpp	/^double getdistance( double x , double y , double bx , double by ){ return sqrt( (x - bx)*(x - bx) + (y - by)*(y - by) );}$/;"	f
getdistance	particle_filters/MCL_particle_filter.hpp	/^    double getdistance( double x , double y , double bx , double by )$/;"	f	class:MCLParticleFilter
getdistance	particle_filters/RMCL_particle_filter.hpp	/^    double getdistance( double x , double y , double bx , double by )$/;"	f	class:RMCLParticleFilter
getdistance	particle_filters/main.cpp	/^double getdistance( double x , double y , double bx , double by ){ return sqrt( (x - bx)*(x - bx) + (y - by)*(y - by) );}$/;"	f
getfield	lib/lua/src/loslib.c	/^static int getfield (lua_State *L, const char *key, int d) {$/;"	f	file:
getfreepos	lib/lua/src/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfunc	lib/lua/src/lbaselib.c	/^static void getfunc (lua_State *L, int opt) {$/;"	f	file:
getfuncname	lib/lua/src/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
gethooktable	lib/lua/src/ldblib.c	/^static void gethooktable (lua_State *L) {$/;"	f	file:
getiofile	lib/lua/src/liolib.c	/^static FILE *getiofile (lua_State *L, int findex) {$/;"	f	file:
getjump	lib/lua/src/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	lib/lua/src/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getline	lib/lua/src/ldebug.h	/^#define getline(/;"	d
getlocvar	lib/lua/src/lparser.c	/^#define getlocvar(/;"	d	file:
getluaproto	lib/lua/src/ldebug.c	/^static Proto *getluaproto (CallInfo *ci) {$/;"	f	file:
getm	core/common/NMatrix.h	/^inline	 int		NMatrix::getm() const { return M; }$/;"	f	class:NMatrix
getn	core/common/NMatrix.h	/^inline	 int		NMatrix::getn() const { return N; }$/;"	f	class:NMatrix
getn	lib/lua/src/ltablib.c	/^static int getn (lua_State *L) {$/;"	f	file:
getobjname	lib/lua/src/ldebug.c	/^static const char *getobjname (lua_State *L, CallInfo *ci, int stackpos,$/;"	f	file:
getopt	install/setup_robot	/^import os, getopt, re$/;"	i
getpass	core/python/core.py	/^import getpass$/;"	i
getpass	install/install	/^import pexpect, getpass$/;"	i
getpass	install/install_lab	/^import pexpect, getpass$/;"	i
getsizes	lib/lua/src/lauxlib.c	/^static void getsizes (lua_State *L) {$/;"	f	file:
getstr	lib/lua/src/lobject.h	/^#define getstr(/;"	d
getstride	lib/alglib/ap.cpp	/^alglib::ae_int_t alglib::ae_matrix_wrapper::getstride() const$/;"	f	class:alglib::ae_matrix_wrapper
gettable_event	lib/lua/doc/manual.html	/^     function gettable_event (table, key)$/;"	f
gettheta	core/localization/LocalizationModule.cpp	/^double LocalizationModule::gettheta( double x , double y , double ori , double bx , double by )$/;"	f	class:LocalizationModule
gettheta	particle_filters/MCL_main.cpp	/^double gettheta( double x , double y , double ori , double bx , double by )$/;"	f
gettheta	particle_filters/MCL_particle_filter.hpp	/^    double gettheta( double x , double y , double ori , double bx , double by )$/;"	f	class:MCLParticleFilter
gettheta	particle_filters/RMCL_particle_filter.hpp	/^    double gettheta( double x , double y , double ori , double bx , double by )$/;"	f	class:RMCLParticleFilter
gettheta	particle_filters/main.cpp	/^double gettheta( double x , double y , double ori , double bx , double by )$/;"	f
getthread	lib/lua/src/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
gettingUp	core/python/util.py	/^def gettingUp():$/;"	f
getting_up_side_	core/memory/OdometryBlock.h	/^  Getup::GetupType getting_up_side_;$/;"	m	struct:OdometryBlock
getunopr	lib/lua/src/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getupSeconds	build/include/tool/simulation/SimulatedPlayer.h	/^  float getupSeconds;$/;"	m	class:SimulatedPlayer
getupSeconds	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float getupSeconds;$/;"	m	class:SimulatedPlayer
getupTimeLength	build/include/tool/simulation/SimulatedPlayer.h	/^  float getupTimeLength;$/;"	m	class:SimulatedPlayer
getupTimeLength	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float getupTimeLength;$/;"	m	class:SimulatedPlayer
getup_	core/MotionCore.h	/^  GetupModule *getup_;$/;"	m	class:MotionCore
getup_from_keeper_dive_	core/memory/WalkRequestBlock.h	/^  bool getup_from_keeper_dive_;$/;"	m	struct:WalkRequestBlock
getuser	bin/common.py	/^  from getpass import getuser$/;"	i
getx	core/common/NMatrix.h	/^inline	 float*	NMatrix::getx() const { return X; }$/;"	f	class:NMatrix
gf2_matrix_square	lib/zlib/crc32.c	/^local void gf2_matrix_square(square, mat)$/;"	f
gf2_matrix_times	lib/zlib/crc32.c	/^local unsigned long gf2_matrix_times(mat, vec)$/;"	f
gfasttm	lib/lua/src/ltm.h	/^#define gfasttm(/;"	d
gfind_nodef	lib/lua/src/lstrlib.c	/^static int gfind_nodef (lua_State *L) {$/;"	f	file:
gkey	lib/lua/src/ltable.h	/^#define gkey(/;"	d
gkqgenerategaussjacobi	lib/alglib/integration.cpp	/^void gkqgenerategaussjacobi(ae_int_t n,$/;"	f	namespace:alglib_impl
gkqgenerategaussjacobi	lib/alglib/integration.cpp	/^void gkqgenerategaussjacobi(const ae_int_t n, const double alpha, const double beta, ae_int_t &info, real_1d_array &x, real_1d_array &wkronrod, real_1d_array &wgauss)$/;"	f	namespace:alglib
gkqgenerategausslegendre	lib/alglib/integration.cpp	/^void gkqgenerategausslegendre(ae_int_t n,$/;"	f	namespace:alglib_impl
gkqgenerategausslegendre	lib/alglib/integration.cpp	/^void gkqgenerategausslegendre(const ae_int_t n, ae_int_t &info, real_1d_array &x, real_1d_array &wkronrod, real_1d_array &wgauss)$/;"	f	namespace:alglib
gkqgeneraterec	lib/alglib/integration.cpp	/^void gkqgeneraterec(\/* Real    *\/ ae_vector* alpha,$/;"	f	namespace:alglib_impl
gkqgeneraterec	lib/alglib/integration.cpp	/^void gkqgeneraterec(const real_1d_array &alpha, const real_1d_array &beta, const double mu0, const ae_int_t n, ae_int_t &info, real_1d_array &x, real_1d_array &wkronrod, real_1d_array &wgauss)$/;"	f	namespace:alglib
gkqlegendrecalc	lib/alglib/integration.cpp	/^void gkqlegendrecalc(ae_int_t n,$/;"	f	namespace:alglib_impl
gkqlegendrecalc	lib/alglib/integration.cpp	/^void gkqlegendrecalc(const ae_int_t n, ae_int_t &info, real_1d_array &x, real_1d_array &wkronrod, real_1d_array &wgauss)$/;"	f	namespace:alglib
gkqlegendretbl	lib/alglib/integration.cpp	/^void gkqlegendretbl(ae_int_t n,$/;"	f	namespace:alglib_impl
gkqlegendretbl	lib/alglib/integration.cpp	/^void gkqlegendretbl(const ae_int_t n, real_1d_array &x, real_1d_array &wkronrod, real_1d_array &wgauss, double &eps)$/;"	f	namespace:alglib
glob	bin/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
glob	build/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
globalL	lib/lua/src/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
globalTime	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float globalTime;$/;"	m	class:Walk2014Generator
globalToDrawingFrame	build/include/tool/MotionGLWidget.cpp	/^Pose3D MotionGLWidget::globalToDrawingFrame(Pose2D a){$/;"	f	class:MotionGLWidget
globalToDrawingFrame	build/include/tool/MotionGLWidget.cpp	/^Pose3D MotionGLWidget::globalToDrawingFrame(Pose3D a){$/;"	f	class:MotionGLWidget
globalToDrawingFrame	build/include/tool/MotionGLWidget.cpp	/^Pose3D MotionGLWidget::globalToDrawingFrame(Vector2<float> a){$/;"	f	class:MotionGLWidget
globalToDrawingFrame	tools/UTNaoTool/MotionGLWidget.cpp	/^Pose3D MotionGLWidget::globalToDrawingFrame(Pose2D a){$/;"	f	class:MotionGLWidget
globalToDrawingFrame	tools/UTNaoTool/MotionGLWidget.cpp	/^Pose3D MotionGLWidget::globalToDrawingFrame(Pose3D a){$/;"	f	class:MotionGLWidget
globalToDrawingFrame	tools/UTNaoTool/MotionGLWidget.cpp	/^Pose3D MotionGLWidget::globalToDrawingFrame(Vector2<float> a){$/;"	f	class:MotionGLWidget
globalToRelative	core/math/Geometry.cpp	/^LineSegment LineSegment::globalToRelative(Point2D origin, AngRad ang) {$/;"	f	class:LineSegment
globalToRelative	core/math/Geometry.cpp	/^Point2D Point2D::globalToRelative( Point2D origin, AngRad ang )$/;"	f	class:Point2D
globalToRelative	core/math/Pose2D.h	/^  Pose2D globalToRelative(const Pose2D &new_origin) const{$/;"	f	class:Pose2D
globalToRelative	core/math/Pose3D.h	/^  Pose3D globalToRelative(const Pose2D &origin){$/;"	f	class:Pose3D
globalToRelative	core/math/Pose3D.h	/^  Pose3D globalToRelative(const Pose3D &origin){$/;"	f	class:Pose3D
globalToRelative	core/math/Vector2.h	/^  Vector2<V> globalToRelative(Vector2<V> new_origin, float new_rot){$/;"	f	class:Vector2
globalToRelative	core/python/geometry.py	/^  def globalToRelative(self, origin, ang):$/;"	m	class:Point2D
global_State	lib/lua/src/lstate.h	/^typedef struct global_State {$/;"	s
global_State	lib/lua/src/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
global_frame_offset_	core/memory/WalkEngineBlock.h	/^  Pose2D global_frame_offset_;$/;"	m	struct:WalkEngineBlock
global_index_	core/memory/RobotStateBlock.h	/^  int global_index_; \/\/ Normally WO_SELF, except when we're simulating opponents$/;"	m	struct:RobotStateBlock
global_last_torso_	core/memory/WalkEngineBlock.h	/^  Pose2D global_last_torso_;$/;"	m	struct:WalkEngineBlock
global_to_odometry_frame_offset_	core/memory/WalkEngineBlock.h	/^  Pose2D global_to_odometry_frame_offset_;$/;"	m	struct:WalkEngineBlock
gmatch	lib/lua/src/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	lib/lua/src/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gnext	lib/lua/src/ltable.h	/^#define gnext(/;"	d
gnode	lib/lua/src/ltable.h	/^#define gnode(/;"	d
gnorm	lib/alglib/optimization.h	/^    double gnorm;$/;"	m	struct:alglib_impl::__anon79
goal_x_max	core/vision/ImageProcessor.h	/^    int goal_x_max;$/;"	m	class:ImageProcessor
goal_x_min	core/vision/ImageProcessor.h	/^    int goal_x_min;$/;"	m	class:ImageProcessor
goal_y_max	core/vision/ImageProcessor.h	/^    int goal_y_max;$/;"	m	class:ImageProcessor
goal_y_min	core/vision/ImageProcessor.h	/^    int goal_y_min;$/;"	m	class:ImageProcessor
goalieFallSplit	core/python/cfgpose.py	/^goalieFallSplit = dict()$/;"	v
goalieSquat5	core/python/cfgpose.py	/^goalieSquat5 = dict() $/;"	v
goalieSquat51	core/python/cfgpose.py	/^goalieSquat51 = dict()$/;"	v
goalieSquatFall	core/python/cfgpose.py	/^goalieSquatFall = dict()$/;"	v
goalieSquatGetup1	core/python/cfgpose.py	/^goalieSquatGetup1 = dict()$/;"	v
goalieSquatGetup10	core/python/cfgpose.py	/^goalieSquatGetup10 = dict() $/;"	v
goalieSquatGetup11	core/python/cfgpose.py	/^goalieSquatGetup11 = dict() $/;"	v
goalieSquatGetup12	core/python/cfgpose.py	/^goalieSquatGetup12 = dict()$/;"	v
goalieSquatGetup13	core/python/cfgpose.py	/^goalieSquatGetup13 = dict()$/;"	v
goalieSquatGetup14	core/python/cfgpose.py	/^goalieSquatGetup14 = dict() $/;"	v
goalieSquatGetup15	core/python/cfgpose.py	/^goalieSquatGetup15 = dict() $/;"	v
goalieSquatGetup16	core/python/cfgpose.py	/^goalieSquatGetup16 = dict()$/;"	v
goalieSquatGetup2	core/python/cfgpose.py	/^goalieSquatGetup2 = dict()$/;"	v
goalieSquatGetup3	core/python/cfgpose.py	/^goalieSquatGetup3 = dict()$/;"	v
goalieSquatGetup4	core/python/cfgpose.py	/^goalieSquatGetup4 = dict()$/;"	v
goalieSquatGetup5	core/python/cfgpose.py	/^goalieSquatGetup5 = dict()$/;"	v
goalieSquatGetup6	core/python/cfgpose.py	/^goalieSquatGetup6 = dict()$/;"	v
goalieSquatGetup7	core/python/cfgpose.py	/^goalieSquatGetup7 = dict()$/;"	v
goalieSquatGetup8	core/python/cfgpose.py	/^goalieSquatGetup8 = dict() $/;"	v
goalieSquatGetup9	core/python/cfgpose.py	/^goalieSquatGetup9 = dict() $/;"	v
goalieSquatPart1	core/python/cfgpose.py	/^goalieSquatPart1 = dict()$/;"	v
goalieSquatPart2	core/python/cfgpose.py	/^goalieSquatPart2 = dict()$/;"	v
goalieSquatPart3	core/python/cfgpose.py	/^goalieSquatPart3 = dict()$/;"	v
goalieSquatPart4	core/python/cfgpose.py	/^goalieSquatPart4 = dict()$/;"	v
goalieSquatRise	core/python/cfgpose.py	/^goalieSquatRise = dict()$/;"	v
goalstats	build/include/tool/AnalysisWidget.h	/^  goalstats(){falsePosts = truePosts = missingPosts = 0; }$/;"	f	struct:goalstats
goalstats	build/include/tool/AnalysisWidget.h	/^struct goalstats {$/;"	s
goalstats	tools/UTNaoTool/AnalysisWidget.h	/^  goalstats(){falsePosts = truePosts = missingPosts = 0; }$/;"	f	struct:goalstats
goalstats	tools/UTNaoTool/AnalysisWidget.h	/^struct goalstats {$/;"	s
goelieBlocking	core/python/cfgpose.py	/^goelieBlocking = dict()$/;"	v
goldsteinprice	tools/behaviorSim/cma.py	/^    def goldsteinprice(self, x):$/;"	m	class:FitnessFunctions
good	core/memory/LogReader.cpp	/^bool LogReader::good() {$/;"	f	class:LogReader
good	lib/yaml-cpp/src/emitter.cpp	/^	bool Emitter::good() const$/;"	f	class:YAML::Emitter
good	lib/yaml-cpp/src/emitterstate.h	/^		bool good() const { return m_isGood; }$/;"	f	class:YAML::EmitterState
good_length	lib/zlib/deflate.c	/^   ush good_length; \/* reduce lazy search above this match length *\/$/;"	m	struct:config_s	file:
good_match	lib/zlib/deflate.h	/^    uInt good_match;$/;"	m	struct:internal_state
gotoSnapshot	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::gotoSnapshot(int index) {$/;"	f	class:UTMainWnd
gotoSnapshot	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::gotoSnapshot(int index) {$/;"	f	class:UTMainWnd
gqgenerategausshermite	lib/alglib/integration.cpp	/^void gqgenerategausshermite(ae_int_t n,$/;"	f	namespace:alglib_impl
gqgenerategausshermite	lib/alglib/integration.cpp	/^void gqgenerategausshermite(const ae_int_t n, ae_int_t &info, real_1d_array &x, real_1d_array &w)$/;"	f	namespace:alglib
gqgenerategaussjacobi	lib/alglib/integration.cpp	/^void gqgenerategaussjacobi(ae_int_t n,$/;"	f	namespace:alglib_impl
gqgenerategaussjacobi	lib/alglib/integration.cpp	/^void gqgenerategaussjacobi(const ae_int_t n, const double alpha, const double beta, ae_int_t &info, real_1d_array &x, real_1d_array &w)$/;"	f	namespace:alglib
gqgenerategausslaguerre	lib/alglib/integration.cpp	/^void gqgenerategausslaguerre(ae_int_t n,$/;"	f	namespace:alglib_impl
gqgenerategausslaguerre	lib/alglib/integration.cpp	/^void gqgenerategausslaguerre(const ae_int_t n, const double alpha, ae_int_t &info, real_1d_array &x, real_1d_array &w)$/;"	f	namespace:alglib
gqgenerategausslegendre	lib/alglib/integration.cpp	/^void gqgenerategausslegendre(ae_int_t n,$/;"	f	namespace:alglib_impl
gqgenerategausslegendre	lib/alglib/integration.cpp	/^void gqgenerategausslegendre(const ae_int_t n, ae_int_t &info, real_1d_array &x, real_1d_array &w)$/;"	f	namespace:alglib
gqgenerategausslobattorec	lib/alglib/integration.cpp	/^void gqgenerategausslobattorec(\/* Real    *\/ ae_vector* alpha,$/;"	f	namespace:alglib_impl
gqgenerategausslobattorec	lib/alglib/integration.cpp	/^void gqgenerategausslobattorec(const real_1d_array &alpha, const real_1d_array &beta, const double mu0, const double a, const double b, const ae_int_t n, ae_int_t &info, real_1d_array &x, real_1d_array &w)$/;"	f	namespace:alglib
gqgenerategaussradaurec	lib/alglib/integration.cpp	/^void gqgenerategaussradaurec(\/* Real    *\/ ae_vector* alpha,$/;"	f	namespace:alglib_impl
gqgenerategaussradaurec	lib/alglib/integration.cpp	/^void gqgenerategaussradaurec(const real_1d_array &alpha, const real_1d_array &beta, const double mu0, const double a, const ae_int_t n, ae_int_t &info, real_1d_array &x, real_1d_array &w)$/;"	f	namespace:alglib
gqgeneraterec	lib/alglib/integration.cpp	/^void gqgeneraterec(\/* Real    *\/ ae_vector* alpha,$/;"	f	namespace:alglib_impl
gqgeneraterec	lib/alglib/integration.cpp	/^void gqgeneraterec(const real_1d_array &alpha, const real_1d_array &beta, const double mu0, const ae_int_t n, ae_int_t &info, real_1d_array &x, real_1d_array &w)$/;"	f	namespace:alglib
gradient	core/vision/structures/HorizonLine.h	/^  float gradient;$/;"	m	struct:HorizonLine
graphCOMs	tools/plotCOM.py	/^def graphCOMs(ind,coms):$/;"	f
graph_	build/include/tool/MotionSimulation.h	/^  GraphableBlock *graph_;$/;"	m	class:MotionSimulation
graph_	tools/UTNaoTool/MotionSimulation.h	/^  GraphableBlock *graph_;$/;"	m	class:MotionSimulation
grav	kalman_filters/src/ekf_test.cpp	/^double grav = 9.81;$/;"	v
gray	lib/lua/src/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State
gray2black	lib/lua/src/lgc.h	/^#define gray2black(/;"	d
grayThreshold	vision_testing/src/vision_testing.cpp	/^void grayThreshold(unsigned char min_val, unsigned char max_val, unsigned char* img, unsigned char* thresholded, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
grayagain	lib/lua/src/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State
green	core/motion/rswalk2014/types/ActionCommand.hpp	/^      bool green;$/;"	m	struct:ActionCommand::rgb
greenBelowPct	core/vision/structures/GoalPostCandidate.h	/^  float greenBelowPct;$/;"	m	struct:GoalPostCandidate
greenWhitePercent	core/vision/structures/RobotCandidate.h	/^  float jerseyColorPercent, greenWhitePercent, whitePercent, correctPercent;$/;"	m	struct:RobotCandidate
grid	tools/behaviorSim/cma.py	/^                 axis, title, text$/;"	i
grid	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
griewank	tools/behaviorSim/cma.py	/^    def griewank(self, x):$/;"	m	class:FitnessFunctions
groin_	core/memory/WalkEngineBlock.h	/^  float groin_;$/;"	m	struct:WalkEngineBlock
ground	data/ballfit.py	/^    ground = readGroundTruth(f)$/;"	v
ground	data/goalfit.py	/^    ground = readGroundTruth(f)$/;"	v
groundDistance	core/vision/CameraMatrix.cpp	/^float CameraMatrix::groundDistance(const Position& p) const {$/;"	f	class:CameraMatrix
groundDistance	core/vision/structures/BallCandidate.h	/^  float groundDistance;$/;"	m	struct:BallCandidate
grounds	data/ballfit.py	/^grounds = []$/;"	v
grounds	data/ballfit.py	/^grounds = numpy.array(grounds)$/;"	v
grounds	data/goalfit.py	/^grounds = []$/;"	v
grounds	data/goalfit.py	/^grounds = numpy.array(grounds)$/;"	v
groupChecks	build/include/tool/LogSelectWindow.h	/^    QCheckBox** groupChecks;$/;"	m	class:LogSelectWindow
groupChecks	tools/UTNaoTool/LogSelectWindow.h	/^    QCheckBox** groupChecks;$/;"	m	class:LogSelectWindow
groupLabels	build/include/tool/LogSelectWindow.h	/^    QLabel** groupLabels;$/;"	m	class:LogSelectWindow
groupLabels	tools/UTNaoTool/LogSelectWindow.h	/^    QLabel** groupLabels;$/;"	m	class:LogSelectWindow
growCI	lib/lua/src/ldo.c	/^static CallInfo *growCI (lua_State *L) {$/;"	f	file:
gt	lib/lua/src/lstate.h	/^#define gt(/;"	d
gtObjects_	build/include/tool/simulation/RobotMovementSimulator.h	/^    WorldObjectBlock* gtObjects_;$/;"	m	class:RobotMovementSimulator
gtObjects_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    WorldObjectBlock* gtObjects_;$/;"	m	class:RobotMovementSimulator
gt_object_	build/include/tool/simulation/ObservationGenerator.h	/^    WorldObjectBlock *gt_object_, *obs_object_;$/;"	m	class:ObservationGenerator
gt_object_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    WorldObjectBlock *gt_object_, *obs_object_;$/;"	m	class:ObservationGenerator
gtcache_	build/include/tool/UTOpenGL/GLDrawer.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:GLDrawer
gtcache_	build/include/tool/simulation/CommunicationGenerator.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:CommunicationGenerator
gtcache_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:IsolatedBehaviorSimulation
gtcache_	build/include/tool/simulation/LocalizationSimulation.h	/^    MemoryCache gtcache_;$/;"	m	class:LocalizationSimulation
gtcache_	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:GLDrawer
gtcache_	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:CommunicationGenerator
gtcache_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    MemoryCache gtcache_, bcache_;$/;"	m	class:IsolatedBehaviorSimulation
gtcache_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    MemoryCache gtcache_;$/;"	m	class:LocalizationSimulation
gtconfig	core/common/FieldConfiguration.h	/^    FieldConfiguration gtconfig, bconfig;$/;"	m	class:BeliefConfiguration
gtframe	build/include/tool/simulation/CommunicationGenerator.cpp	/^#define gtframe(/;"	d	file:
gtframe	tools/UTNaoTool/simulation/CommunicationGenerator.cpp	/^#define gtframe(/;"	d	file:
gtkPath	bin/behaviorSim	/^    gtkPath = ''$/;"	v
gtkPath	bin/behaviorSim	/^    gtkPath = '\/usr\/lib32\/i386-linux-gnu\/gtk-2.0'$/;"	v
gtkPath	bin/tool	/^    gtkPath = '%s\/naoqi\/link_libs\/gtk-2.0' % home$/;"	v
gtkPath	bin/tool	/^    gtkPath = ''$/;"	v
gval	lib/lua/src/ltable.h	/^#define gval(/;"	d
gyroX	core/common/RobotInfo.h	/^  gyroX,$/;"	e	enum:Sensor
gyroY	core/common/RobotInfo.h	/^  gyroY,$/;"	e	enum:Sensor
gyroZ	core/common/RobotInfo.h	/^  gyroZ,$/;"	e	enum:Sensor
gyro_scale	core/sensor/InertialFilter.h	/^  float gyro_scale;  \/\/ (deg\/sec)$/;"	m	class:InertialFilter
gyro_var	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^static const float gyro_var = SQUARE(DEG2RAD(1.f));  $/;"	v	file:
gzFile	lib/zlib/zconf.h	/^#  define gzFile /;"	d
gzFile	lib/zlib/zlib.h	/^typedef voidp gzFile;       \/* opaque gzip file descriptor *\/$/;"	t
gz_avail	lib/zlib/gzread.c	/^local int gz_avail(state)$/;"	f
gz_comp	lib/zlib/gzwrite.c	/^local int gz_comp(state, flush)$/;"	f
gz_compress	lib/zlib/minigzip.c	/^void gz_compress(in, out)$/;"	f
gz_compress_mmap	lib/zlib/minigzip.c	/^int gz_compress_mmap(in, out)$/;"	f
gz_decomp	lib/zlib/gzread.c	/^local int gz_decomp(state)$/;"	f
gz_error	lib/zlib/gzlib.c	/^void ZLIB_INTERNAL gz_error(state, err, msg)$/;"	f
gz_error	lib/zlib/zconf.h	/^#  define gz_error /;"	d
gz_head	lib/zlib/gzread.c	/^local int gz_head(state)$/;"	f
gz_header	lib/zlib/zconf.h	/^#  define gz_header /;"	d
gz_header	lib/zlib/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	lib/zlib/zconf.h	/^#  define gz_header_s /;"	d
gz_header_s	lib/zlib/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	lib/zlib/zconf.h	/^#  define gz_headerp /;"	d
gz_headerp	lib/zlib/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
gz_init	lib/zlib/gzwrite.c	/^local int gz_init(state)$/;"	f
gz_intmax	lib/zlib/gzlib.c	/^unsigned ZLIB_INTERNAL gz_intmax()$/;"	f
gz_intmax	lib/zlib/zconf.h	/^#  define gz_intmax /;"	d
gz_load	lib/zlib/gzread.c	/^local int gz_load(state, buf, len, have)$/;"	f
gz_make	lib/zlib/gzread.c	/^local int gz_make(state)$/;"	f
gz_next4	lib/zlib/gzread.c	/^local int gz_next4(state, ret)$/;"	f
gz_open	lib/zlib/gzlib.c	/^local gzFile gz_open(path, fd, mode)$/;"	f
gz_reset	lib/zlib/gzlib.c	/^local void gz_reset(state)$/;"	f
gz_skip	lib/zlib/gzread.c	/^local int gz_skip(state, len)$/;"	f
gz_state	lib/zlib/gzguts.h	/^} gz_state;$/;"	t	typeref:struct:__anon135
gz_statep	lib/zlib/gzguts.h	/^typedef gz_state FAR *gz_statep;$/;"	t
gz_strwinerror	lib/zlib/gzlib.c	/^char ZLIB_INTERNAL *gz_strwinerror (error)$/;"	f
gz_strwinerror	lib/zlib/zconf.h	/^#  define gz_strwinerror /;"	d
gz_uncompress	lib/zlib/minigzip.c	/^void gz_uncompress(in, out)$/;"	f
gz_zero	lib/zlib/gzwrite.c	/^local int gz_zero(state, len)$/;"	f
gzbuffer	lib/zlib/gzlib.c	/^int ZEXPORT gzbuffer(file, size)$/;"	f
gzbuffer	lib/zlib/zconf.h	/^#  define gzbuffer /;"	d
gzclearerr	lib/zlib/gzlib.c	/^void ZEXPORT gzclearerr(file)$/;"	f
gzclearerr	lib/zlib/zconf.h	/^#  define gzclearerr /;"	d
gzclose	lib/zlib/gzclose.c	/^int ZEXPORT gzclose(file)$/;"	f
gzclose	lib/zlib/zconf.h	/^#  define gzclose /;"	d
gzclose_r	lib/zlib/gzread.c	/^int ZEXPORT gzclose_r(file)$/;"	f
gzclose_r	lib/zlib/zconf.h	/^#  define gzclose_r /;"	d
gzclose_w	lib/zlib/gzwrite.c	/^int ZEXPORT gzclose_w(file)$/;"	f
gzclose_w	lib/zlib/zconf.h	/^#  define gzclose_w /;"	d
gzdirect	lib/zlib/gzread.c	/^int ZEXPORT gzdirect(file)$/;"	f
gzdirect	lib/zlib/zconf.h	/^#  define gzdirect /;"	d
gzdopen	lib/zlib/gzlib.c	/^gzFile ZEXPORT gzdopen(fd, mode)$/;"	f
gzdopen	lib/zlib/zconf.h	/^#  define gzdopen /;"	d
gzeof	lib/zlib/gzlib.c	/^int ZEXPORT gzeof(file)$/;"	f
gzeof	lib/zlib/zconf.h	/^#  define gzeof /;"	d
gzerror	lib/zlib/gzlib.c	/^const char * ZEXPORT gzerror(file, errnum)$/;"	f
gzerror	lib/zlib/zconf.h	/^#  define gzerror /;"	d
gzflush	lib/zlib/gzwrite.c	/^int ZEXPORT gzflush(file, flush)$/;"	f
gzflush	lib/zlib/zconf.h	/^#  define gzflush /;"	d
gzgetc	lib/zlib/gzread.c	/^int ZEXPORT gzgetc(file)$/;"	f
gzgetc	lib/zlib/zconf.h	/^#  define gzgetc /;"	d
gzgets	lib/zlib/gzread.c	/^char * ZEXPORT gzgets(file, buf, len)$/;"	f
gzgets	lib/zlib/zconf.h	/^#  define gzgets /;"	d
gzhead	lib/zlib/deflate.h	/^    gz_headerp  gzhead;  \/* gzip header information to write *\/$/;"	m	struct:internal_state
gzindex	lib/zlib/deflate.h	/^    uInt   gzindex;      \/* where in extra, name, or comment *\/$/;"	m	struct:internal_state
gzoffset	lib/zlib/gzlib.c	/^z_off_t ZEXPORT gzoffset(file)$/;"	f
gzoffset	lib/zlib/zconf.h	/^#  define gzoffset /;"	d
gzoffset	lib/zlib/zlib.h	/^#  define gzoffset /;"	d
gzoffset64	lib/zlib/gzlib.c	/^z_off64_t ZEXPORT gzoffset64(file)$/;"	f
gzoffset64	lib/zlib/zconf.h	/^#  define gzoffset64 /;"	d
gzopen	lib/zlib/gzlib.c	/^gzFile ZEXPORT gzopen(path, mode)$/;"	f
gzopen	lib/zlib/zconf.h	/^#  define gzopen /;"	d
gzopen	lib/zlib/zlib.h	/^#  define gzopen /;"	d
gzopen64	lib/zlib/gzlib.c	/^gzFile ZEXPORT gzopen64(path, mode)$/;"	f
gzopen64	lib/zlib/zconf.h	/^#  define gzopen64 /;"	d
gzprintf	lib/zlib/gzwrite.c	/^int ZEXPORTVA gzprintf (file, format, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10,$/;"	f
gzprintf	lib/zlib/gzwrite.c	/^int ZEXPORTVA gzprintf (gzFile file, const char *format, ...)$/;"	f
gzprintf	lib/zlib/zconf.h	/^#  define gzprintf /;"	d
gzputc	lib/zlib/gzwrite.c	/^int ZEXPORT gzputc(file, c)$/;"	f
gzputc	lib/zlib/zconf.h	/^#  define gzputc /;"	d
gzputs	lib/zlib/gzwrite.c	/^int ZEXPORT gzputs(file, str)$/;"	f
gzputs	lib/zlib/zconf.h	/^#  define gzputs /;"	d
gzread	lib/zlib/gzread.c	/^int ZEXPORT gzread(file, buf, len)$/;"	f
gzread	lib/zlib/zconf.h	/^#  define gzread /;"	d
gzrewind	lib/zlib/gzlib.c	/^int ZEXPORT gzrewind(file)$/;"	f
gzrewind	lib/zlib/zconf.h	/^#  define gzrewind /;"	d
gzseek	lib/zlib/gzlib.c	/^z_off_t ZEXPORT gzseek(file, offset, whence)$/;"	f
gzseek	lib/zlib/zconf.h	/^#  define gzseek /;"	d
gzseek	lib/zlib/zlib.h	/^#  define gzseek /;"	d
gzseek64	lib/zlib/gzlib.c	/^z_off64_t ZEXPORT gzseek64(file, offset, whence)$/;"	f
gzseek64	lib/zlib/zconf.h	/^#  define gzseek64 /;"	d
gzsetparams	lib/zlib/gzwrite.c	/^int ZEXPORT gzsetparams(file, level, strategy)$/;"	f
gzsetparams	lib/zlib/zconf.h	/^#  define gzsetparams /;"	d
gztell	lib/zlib/gzlib.c	/^z_off_t ZEXPORT gztell(file)$/;"	f
gztell	lib/zlib/zconf.h	/^#  define gztell /;"	d
gztell	lib/zlib/zlib.h	/^#  define gztell /;"	d
gztell64	lib/zlib/gzlib.c	/^z_off64_t ZEXPORT gztell64(file)$/;"	f
gztell64	lib/zlib/zconf.h	/^#  define gztell64 /;"	d
gzungetc	lib/zlib/gzread.c	/^int ZEXPORT gzungetc(c, file)$/;"	f
gzungetc	lib/zlib/zconf.h	/^#  define gzungetc /;"	d
gzwrite	lib/zlib/gzwrite.c	/^int ZEXPORT gzwrite(file, buf, len)$/;"	f
gzwrite	lib/zlib/zconf.h	/^#  define gzwrite /;"	d
h	core/localization/LocalizationModule.cpp	/^KF::MeasurementVector LocalizationModule::h(KF::StateVector x)$/;"	f	class:LocalizationModule
h	core/motion/rswalk2014/PendulumModel.cpp	/^const float PendulumModel::h = 300.0f;$/;"	m	class:PendulumModel	file:
h	core/motion/rswalk2014/PendulumModel.hpp	/^   static const float h;$/;"	m	struct:PendulumModel
h	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  MeasurementFunction h;$/;"	m	class:ExtendedKalmanFilter
h	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  MeasurementFunction h;$/;"	m	class:SRUnscentedKalmanFilter
h	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  MeasurementFunction h;$/;"	m	class:UnscentedKalmanFilter
h	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  MeasurementFunction h;$/;"	m	class:UnscentedKalmanFilter
h	kalman_filters/src/ekf_test.cpp	/^KF::MeasurementVector h(KF::StateVector x)$/;"	f
h	kalman_filters/src/ukf_test.cpp	/^KF::MeasurementVector h(KF::StateVector x)$/;"	f
h	lib/alglib/diffequations.h	/^    double h;$/;"	m	struct:alglib_impl::__anon51
h	lib/alglib/interpolation.h	/^    ae_matrix h;$/;"	m	struct:alglib_impl::__anon63
h	lib/alglib/interpolation.h	/^    real_2d_array h;$/;"	m	class:alglib::lsfitstate
h	lib/alglib/optimization.h	/^    ae_matrix h;$/;"	m	struct:alglib_impl::__anon73
h	lib/alglib/optimization.h	/^    real_2d_array h;$/;"	m	class:alglib::minlmstate
h	lib/lua/src/lparser.h	/^  Table *h;  \/* table to find (and reuse) elements in `k' *\/$/;"	m	struct:FuncState
h	lib/lua/src/lstate.h	/^  struct Table h;$/;"	m	union:GCObject	typeref:struct:GCObject::Table
h	vision_testing/src/vision_testing.cpp	/^  unsigned char h;$/;"	m	class:HSV	file:
halfTimer	build/include/tool/simulation/BehaviorSimulation.h	/^    float halfTimer;$/;"	m	class:BehaviorSimulation
halfTimer	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    float halfTimer;$/;"	m	class:BehaviorSimulation
handle	core/python/init.py	/^def handle():$/;"	f
handle	lib/yaml-cpp/src/tag.h	/^		std::string handle, value;$/;"	m	struct:YAML::Tag
handleCalibration	core/sensor/SensorModule.cpp	/^void SensorModule::handleCalibration() {$/;"	f	class:SensorModule
handleCameraParamsMessage	core/communications/CommunicationModule.cpp	/^void CommunicationModule::handleCameraParamsMessage(CameraParams &params, char *msg) {$/;"	f	class:CommunicationModule
handleClick	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::handleClick(int x, int y, int button) {$/;"	f	class:AnnotationWidget
handleClick	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::handleClick(int x, int y, int button) {$/;"	f	class:IntrinsicCalibrationWidget
handleClick	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::handleClick(int x, int y, int button) {$/;"	f	class:AnnotationWidget
handleClick	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::handleClick(int x, int y, int button) {$/;"	f	class:IntrinsicCalibrationWidget
handleColorTableGenerated	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::handleColorTableGenerated(){$/;"	f	class:AnalysisWidget
handleColorTableGenerated	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::handleColorTableGenerated(){$/;"	f	class:AnalysisWidget
handleCustomInterfaces	bin/compile	/^def handleCustomInterfaces(interfaces,options):$/;"	f
handleCustomInterfaces	build/compile	/^def handleCustomInterfaces(interfaces,options):$/;"	f
handleExit	interfaces/shared_motion/main.cpp	/^void handleExit() {$/;"	f
handleExit	interfaces/shared_vision/main.cpp	/^void handleExit() {$/;"	f
handleItemSelectionChanged	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::handleItemSelectionChanged() {$/;"	f	class:LogEditorWindow
handleItemSelectionChanged	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::handleItemSelectionChanged() {$/;"	f	class:LogEditorWindow
handleLoggingBlocksMessage	core/communications/CommunicationModule.cpp	/^void CommunicationModule::handleLoggingBlocksMessage(char *msg) {$/;"	f	class:CommunicationModule
handleNewLogFrame	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::handleNewLogFrame(int frame) {$/;"	f	class:AnalysisWidget
handleNewLogFrame	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::handleNewLogFrame(int frame){$/;"	f	class:AnnotationWidget
handleNewLogFrame	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::handleNewLogFrame(int frame){$/;"	f	class:ExtrinsicCalibrationWidget
handleNewLogFrame	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::handleNewLogFrame(int frame){$/;"	f	class:IntrinsicCalibrationWidget
handleNewLogFrame	build/include/tool/VisionWindow.cpp	/^void VisionWindow::handleNewLogFrame(int frame){$/;"	f	class:VisionWindow
handleNewLogFrame	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::handleNewLogFrame(int frame) {$/;"	f	class:AnalysisWidget
handleNewLogFrame	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::handleNewLogFrame(int frame){$/;"	f	class:AnnotationWidget
handleNewLogFrame	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::handleNewLogFrame(int frame){$/;"	f	class:ExtrinsicCalibrationWidget
handleNewLogFrame	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::handleNewLogFrame(int frame){$/;"	f	class:IntrinsicCalibrationWidget
handleNewLogFrame	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::handleNewLogFrame(int frame){$/;"	f	class:VisionWindow
handleNewLogLoaded	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::handleNewLogLoaded(Log* log){$/;"	f	class:AnalysisWidget
handleNewLogLoaded	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::handleNewLogLoaded(Log* log){$/;"	f	class:AnnotationWidget
handleNewLogLoaded	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::handleNewLogLoaded(Log* log){$/;"	f	class:ClassificationWidget
handleNewLogLoaded	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::handleNewLogLoaded(Log* log){$/;"	f	class:ExtrinsicCalibrationWidget
handleNewLogLoaded	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::handleNewLogLoaded(Log* log){$/;"	f	class:IntrinsicCalibrationWidget
handleNewLogLoaded	build/include/tool/VisionWindow.cpp	/^void VisionWindow::handleNewLogLoaded(Log* log){$/;"	f	class:VisionWindow
handleNewLogLoaded	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::handleNewLogLoaded(Log* log){$/;"	f	class:AnalysisWidget
handleNewLogLoaded	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::handleNewLogLoaded(Log* log){$/;"	f	class:AnnotationWidget
handleNewLogLoaded	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::handleNewLogLoaded(Log* log){$/;"	f	class:ClassificationWidget
handleNewLogLoaded	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::handleNewLogLoaded(Log* log){$/;"	f	class:ExtrinsicCalibrationWidget
handleNewLogLoaded	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::handleNewLogLoaded(Log* log){$/;"	f	class:IntrinsicCalibrationWidget
handleNewLogLoaded	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::handleNewLogLoaded(Log* log){$/;"	f	class:VisionWindow
handleNewStreamFrame	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::handleNewStreamFrame() {$/;"	f	class:ExtrinsicCalibrationWidget
handleNewStreamFrame	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::handleNewStreamFrame() {$/;"	f	class:IntrinsicCalibrationWidget
handleNewStreamFrame	build/include/tool/VisionWindow.cpp	/^void VisionWindow::handleNewStreamFrame() {$/;"	f	class:VisionWindow
handleNewStreamFrame	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::handleNewStreamFrame() {$/;"	f	class:ExtrinsicCalibrationWidget
handleNewStreamFrame	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::handleNewStreamFrame() {$/;"	f	class:IntrinsicCalibrationWidget
handleNewStreamFrame	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::handleNewStreamFrame() {$/;"	f	class:VisionWindow
handleRunningCore	build/include/tool/VisionWindow.cpp	/^void VisionWindow::handleRunningCore() {$/;"	f	class:VisionWindow
handleRunningCore	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::handleRunningCore() {$/;"	f	class:VisionWindow
handleSignal	interfaces/shared_motion/main.cpp	/^void handleSignal(int sig) {$/;"	f
handleSignal	interfaces/shared_vision/main.cpp	/^void handleSignal(int sig) {$/;"	f
handleStepIntoKick	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::handleStepIntoKick() {$/;"	f	class:RSWalkModule2014
handleStreamFrame	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::handleStreamFrame() {$/;"	f	class:UTMainWnd
handleStreamFrame	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::handleStreamFrame() {$/;"	f	class:UTMainWnd
handleStreaming	build/include/tool/WorldWindow.cpp	/^void WorldWindow::handleStreaming(bool streaming) {$/;"	f	class:WorldWindow
handleStreaming	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::handleStreaming(bool streaming) {$/;"	f	class:WorldWindow
handleUpdatedCalibrations	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::handleUpdatedCalibrations() {$/;"	f	class:ExtrinsicCalibrationWidget
handleUpdatedCalibrations	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::handleUpdatedCalibrations() {$/;"	f	class:ExtrinsicCalibrationWidget
handle_luainit	lib/lua/src/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_script	lib/lua/src/lua.c	/^static int handle_script (lua_State *L, char **argv, int n) {$/;"	f	file:
handler	interfaces/sim_spark/main.cpp	/^extern "C" void handler(int sig)$/;"	f
happycat	tools/behaviorSim/cma.py	/^    def happycat(self, x, alpha=1.\/8):$/;"	m	class:FitnessFunctions
hardness	core/common/RobotInfo.h	/^	int hardness[NUM_JOINTS];$/;"	m	struct:JointRequest
has	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
hasEnded	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^bool WalkEnginePreProcessor::DribbleEngine::hasEnded() {$/;"	f	class:WalkEnginePreProcessor::DribbleEngine
hasEnded	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^bool WalkEnginePreProcessor::LineUpEngine::hasEnded(ActionCommand::All* request, float ballX, float ballY) {$/;"	f	class:WalkEnginePreProcessor::LineUpEngine
hasFile	lib/yaml-cpp/util/parse.cpp	/^	bool hasFile;$/;"	m	struct:Params	file:
hasOffsets	build/include/tool/annotations/Selection.h	/^        bool hasOffsets() {$/;"	f	class:Selection
hasOffsets	tools/UTNaoTool/annotations/Selection.h	/^        bool hasOffsets() {$/;"	f	class:Selection
hasStarted	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^         bool hasStarted;$/;"	m	class:WalkEnginePreProcessor::LineUpEngine
hasUndo	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^bool AnnotationAnalyzer::hasUndo() {$/;"	f	class:AnnotationAnalyzer
hasUndo	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^bool AnnotationAnalyzer::hasUndo() {$/;"	f	class:AnnotationAnalyzer
hasUpdate	core/memory/DelayedLocalizationBlock.h	/^  bool hasUpdate;$/;"	m	struct:DelayedLocalizationBlock
hasWalked	core/motion/rswalk2014/RSWalkModule2014.h	/^	bool hasWalked = false;$/;"	m	class:RSWalkModule2014
has_bounds	tools/behaviorSim/cma.py	/^    def has_bounds(self):$/;"	m	class:BoundPenalty
has_truth_	core/memory/SimTruthDataBlock.h	/^  bool has_truth_;$/;"	m	struct:SimTruthDataBlock
hasbndl	lib/alglib/optimization.h	/^    ae_vector hasbndl;$/;"	m	struct:alglib_impl::__anon79
hasbndu	lib/alglib/optimization.h	/^    ae_vector hasbndu;$/;"	m	struct:alglib_impl::__anon79
hasf	lib/alglib/optimization.h	/^    ae_bool hasf;$/;"	m	struct:alglib_impl::__anon73
hasfi	lib/alglib/optimization.h	/^    ae_bool hasfi;$/;"	m	struct:alglib_impl::__anon73
hasg	lib/alglib/optimization.h	/^    ae_bool hasg;$/;"	m	struct:alglib_impl::__anon73
hash	lib/lua/src/lobject.h	/^    unsigned int hash;$/;"	m	struct:TString::__anon88
hash	lib/lua/src/lstate.h	/^  GCObject **hash;$/;"	m	struct:stringtable
hash_bits	lib/zlib/deflate.h	/^    uInt  hash_bits;      \/* log2(hash_size) *\/$/;"	m	struct:internal_state
hash_mask	lib/zlib/deflate.h	/^    uInt  hash_mask;      \/* hash_size-1 *\/$/;"	m	struct:internal_state
hash_shift	lib/zlib/deflate.h	/^    uInt  hash_shift;$/;"	m	struct:internal_state
hash_size	lib/zlib/deflate.h	/^    uInt  hash_size;      \/* number of elements in hash table *\/$/;"	m	struct:internal_state
hashboolean	lib/lua/src/ltable.c	/^#define hashboolean(/;"	d	file:
hashlib	core/python/UTdebug.py	/^import logging; logging.disable(logging.ERROR) # kill hashlib errors from random$/;"	i
hashmod	lib/lua/src/ltable.c	/^#define hashmod(/;"	d	file:
hashnum	lib/lua/src/ltable.c	/^static Node *hashnum (const Table *t, lua_Number n) {$/;"	f	file:
hashpointer	lib/lua/src/ltable.c	/^#define hashpointer(/;"	d	file:
hashpow2	lib/lua/src/ltable.c	/^#define hashpow2(/;"	d	file:
hashstr	lib/lua/src/ltable.c	/^#define hashstr(/;"	d	file:
hasjumps	lib/lua/src/lcode.c	/^#define hasjumps(/;"	d	file:
hasmultret	lib/lua/src/lparser.c	/^#define hasmultret(/;"	d	file:
have	lib/zlib/gzguts.h	/^    unsigned have;          \/* amount of output data unused at next *\/$/;"	m	struct:__anon135
have	lib/zlib/inflate.h	/^    unsigned have;              \/* number of code lengths in lens[] *\/$/;"	m	struct:inflate_state
have_lock	core/python/behaviors/walk_to_center.py	/^have_lock = False$/;"	v
have_lock	core/python/behaviors/walk_to_center_2.py	/^have_lock = False$/;"	v
havebndl	lib/alglib/optimization.h	/^    ae_vector havebndl;$/;"	m	struct:alglib_impl::__anon71
havebndl	lib/alglib/optimization.h	/^    ae_vector havebndl;$/;"	m	struct:alglib_impl::__anon73
havebndu	lib/alglib/optimization.h	/^    ae_vector havebndu;$/;"	m	struct:alglib_impl::__anon71
havebndu	lib/alglib/optimization.h	/^    ae_vector havebndu;$/;"	m	struct:alglib_impl::__anon73
havedict	lib/zlib/inflate.h	/^    int havedict;               \/* true if dictionary provided *\/$/;"	m	struct:inflate_state
havex	lib/alglib/optimization.h	/^    ae_bool havex;$/;"	m	struct:alglib_impl::__anon71
hcrc	lib/zlib/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s
head	core/common/RobotInfo.h	/^		head,$/;"	e	enum:BodyPart::Part
head	core/common/RobotInfo.h	/^    head,$/;"	e	enum:BodyFrame::Part
head	core/motion/rswalk2014/types/ActionCommand.hpp	/^      Head head;$/;"	m	struct:ActionCommand::All
head	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
head	core/python/pose.py	/^import head$/;"	i
head	lib/zlib/deflate.h	/^    Posf *head; \/* Heads of the hash chains or NIL. *\/$/;"	m	struct:internal_state
head	lib/zlib/inflate.h	/^    gz_headerp head;            \/* where to save gzip header information *\/$/;"	m	struct:inflate_state
headAll	core/lights/LEDModule.cpp	/^void LEDModule::headAll() {$/;"	f	class:LEDModule
headCircle	core/lights/LEDModule.cpp	/^void LEDModule::headCircle() {$/;"	f	class:LEDModule
headFront	core/common/RobotInfo.h	/^  headFront,$/;"	e	enum:Sensor
headFront	core/lights/LEDModule.cpp	/^void LEDModule::headFront() {$/;"	f	class:LEDModule
headGenerator	core/motion/rswalk2014/DistributedGenerator.hpp	/^      Generator* headGenerator;$/;"	m	class:DistributedGenerator
headLeft	core/lights/LEDModule.cpp	/^void LEDModule::headLeft() {$/;"	f	class:LEDModule
headMiddle	core/common/RobotInfo.h	/^  headMiddle,$/;"	e	enum:Sensor
headMiddle	core/lights/LEDModule.cpp	/^void LEDModule::headMiddle() {$/;"	f	class:LEDModule
headOff	core/lights/LEDModule.cpp	/^void LEDModule::headOff() {$/;"	f	class:LEDModule
headPanOffset	core/common/RobotDimensions.h	/^    headPanOffset,$/;"	e	enum:RobotDimensions::__anon8
headRear	core/common/RobotInfo.h	/^  headRear,$/;"	e	enum:Sensor
headRear	core/lights/LEDModule.cpp	/^void LEDModule::headRear() {$/;"	f	class:LEDModule
headRight	core/lights/LEDModule.cpp	/^void LEDModule::headRight() {$/;"	f	class:LEDModule
headRollFactorBottomCamera	core/common/RobotDimensions.h	/^    headRollFactorBottomCamera,$/;"	e	enum:RobotDimensions::__anon8
headRollFactorTopCamera	core/common/RobotDimensions.h	/^    headRollFactorTopCamera,$/;"	e	enum:RobotDimensions::__anon8
headTiltFactorBottomCamera	core/common/RobotDimensions.h	/^    headTiltFactorBottomCamera,$/;"	e	enum:RobotDimensions::__anon8
headTiltFactorTopCamera	core/common/RobotDimensions.h	/^    headTiltFactorTopCamera,$/;"	e	enum:RobotDimensions::__anon8
headTiltOffset	core/common/RobotDimensions.h	/^    headTiltOffset,$/;"	e	enum:RobotDimensions::__anon8
head_pan_offset_	core/common/Calibration.h	/^  float head_pan_offset_;$/;"	m	class:Calibration
head_pitch_angle_change_	core/memory/JointCommandBlock.h	/^  bool head_pitch_angle_change_;$/;"	m	struct:JointCommandBlock
head_pitch_angle_time_	core/memory/JointCommandBlock.h	/^  float head_pitch_angle_time_;$/;"	m	struct:JointCommandBlock
head_pitch_commands_	interfaces/nao/src/dcmwrapper.h	/^  AL::ALValue head_pitch_commands_;$/;"	m	class:DCMWrapper
head_pitch_joint_names_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue head_pitch_joint_names_;$/;"	m	class:ALMotionWrapper
head_pitch_name_	interfaces/nao/src/dcmwrapper.cpp	/^const std::string DCMWrapper::head_pitch_name_ = "headPitch";$/;"	m	class:DCMWrapper	file:
head_pitch_name_	interfaces/nao/src/dcmwrapper.h	/^  static const std::string head_pitch_name_;$/;"	m	class:DCMWrapper
head_position_commands_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue head_position_commands_;$/;"	m	class:ALMotionWrapper
head_position_time_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue head_position_time_;$/;"	m	class:ALMotionWrapper
head_tilt_offset_	core/common/Calibration.h	/^  float head_tilt_offset_;$/;"	m	class:Calibration
head_version_	core/memory/RobotStateBlock.h	/^  int head_version_, body_version_;$/;"	m	struct:RobotStateBlock
head_yaw_angle_change_	core/memory/JointCommandBlock.h	/^  bool head_yaw_angle_change_;$/;"	m	struct:JointCommandBlock
head_yaw_angle_time_	core/memory/JointCommandBlock.h	/^  float head_yaw_angle_time_;$/;"	m	struct:JointCommandBlock
head_yaw_commands_	interfaces/nao/src/dcmwrapper.h	/^  AL::ALValue head_yaw_commands_;$/;"	m	class:DCMWrapper
head_yaw_joint_names_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue head_yaw_joint_names_;$/;"	m	class:ALMotionWrapper
head_yaw_name_	interfaces/nao/src/dcmwrapper.cpp	/^const std::string DCMWrapper::head_yaw_name_ = "headYaw";$/;"	m	class:DCMWrapper	file:
head_yaw_name_	interfaces/nao/src/dcmwrapper.h	/^  static const std::string head_yaw_name_;$/;"	m	class:DCMWrapper
header	core/communications/RoboCupGameControlData.h	/^  char header[4];               \/\/ header to identify the structure$/;"	m	struct:RoboCupGameControlData
header	core/communications/RoboCupGameControlData.h	/^  char header[4];$/;"	m	struct:RoboCupGameControlReturnData
header	core/communications/SPLCoachMessage.h	/^  char header[4];        \/\/ "SPLC"$/;"	m	struct:SPLCoachMessage
header	core/communications/SPLStandardMessage.h	/^  char header[4];        \/\/ "SPL "$/;"	m	struct:SPLStandardMessage
header	core/memory/MemoryBlock.h	/^  MemoryBlockHeader header;$/;"	m	class:MemoryBlock
heading	core/motion/rswalk2014/types/RRCoord.hpp	/^   const float heading() const {$/;"	f	struct:RRCoord
heading	core/motion/rswalk2014/types/RRCoord.hpp	/^   float &heading() {$/;"	f	struct:RRCoord
heap	lib/alglib/integration.h	/^    ae_matrix heap;$/;"	m	struct:alglib_impl::__anon54
heap	lib/zlib/deflate.h	/^    int heap[2*L_CODES+1];      \/* heap used to build the Huffman trees *\/$/;"	m	struct:internal_state
heap_len	lib/zlib/deflate.h	/^    int heap_len;               \/* number of elements in the heap *\/$/;"	m	struct:internal_state
heap_max	lib/zlib/deflate.h	/^    int heap_max;               \/* element of largest frequency *\/$/;"	m	struct:internal_state
heapsize	lib/alglib/integration.h	/^    ae_int_t heapsize;$/;"	m	struct:alglib_impl::__anon54
heapsortdpoints	lib/alglib/interpolation.cpp	/^void heapsortdpoints(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
heapused	lib/alglib/integration.h	/^    ae_int_t heapused;$/;"	m	struct:alglib_impl::__anon54
heapwidth	lib/alglib/integration.h	/^    ae_int_t heapwidth;$/;"	m	struct:alglib_impl::__anon54
heavy	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
height	build/include/tool/annotations/EllipseSelection.h	/^        int height() {$/;"	f	class:EllipseSelection
height	core/common/FieldConfiguration.h	/^    float height;$/;"	m	class:ObjectConfiguration
height	core/common/RobotInfo.h	/^  int height;$/;"	m	struct:ImageParams
height	core/common/WorldObject.h	/^  float height; \/\/\/< The hight of the object from the field floor.$/;"	m	class:WorldObject
height	core/motion/rswalk2014/types/BBox.hpp	/^   int height() const$/;"	f	struct:BBox
height	core/vision/structures/BallCandidate.h	/^  float height;$/;"	m	struct:BallCandidate
height	core/vision/structures/FocusArea.h	/^  int width, height, cx, cy, area;$/;"	m	struct:FocusArea
height	core/vision/structures/RobotCandidate.h	/^  float width, height;$/;"	m	struct:RobotCandidate
height	tools/UTNaoTool/annotations/EllipseSelection.h	/^        int height() {$/;"	f	class:EllipseSelection
heightDistance	core/vision/structures/RobotCandidate.h	/^  float widthDistance, heightDistance, kinematicsDistance;$/;"	m	struct:RobotCandidate
heightFunc	data/goalfit.py	/^heightFunc = lambda x: ah * (x ** bh)$/;"	v
height_	build/include/tool/ImageWidget.h	/^    int width_, height_;$/;"	m	class:ImageWidget
height_	build/include/tool/annotations/EllipseSelection.h	/^        int top_, left_, width_, height_;$/;"	m	class:EllipseSelection
height_	tools/UTNaoTool/ImageWidget.h	/^    int width_, height_;$/;"	m	class:ImageWidget
height_	tools/UTNaoTool/annotations/EllipseSelection.h	/^        int top_, left_, width_, height_;$/;"	m	class:EllipseSelection
heights	data/goalfit.py	/^heights = []$/;"	v
heights	data/goalfit.py	/^heights = numpy.array(heights)$/;"	v
hello	lib/zlib/example.c	/^const char hello[] = "hello, hello!";$/;"	v
helpStrings	install/copy_wpa.py	/^  helpStrings = ['-h','--help']$/;"	v
hermitecalculate	lib/alglib/specialfunctions.cpp	/^double hermitecalculate(ae_int_t n, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
hermitecalculate	lib/alglib/specialfunctions.cpp	/^double hermitecalculate(const ae_int_t n, const double x)$/;"	f	namespace:alglib
hermitecoefficients	lib/alglib/specialfunctions.cpp	/^void hermitecoefficients(ae_int_t n,$/;"	f	namespace:alglib_impl
hermitecoefficients	lib/alglib/specialfunctions.cpp	/^void hermitecoefficients(const ae_int_t n, real_1d_array &c)$/;"	f	namespace:alglib
hermitesum	lib/alglib/specialfunctions.cpp	/^double hermitesum(\/* Real    *\/ ae_vector* c,$/;"	f	namespace:alglib_impl
hermitesum	lib/alglib/specialfunctions.cpp	/^double hermitesum(const real_1d_array &c, const ae_int_t n, const double x)$/;"	f	namespace:alglib
hermitianmatrixvectormultiply	lib/alglib/alglibinternal.cpp	/^void hermitianmatrixvectormultiply(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hermitianrank2update	lib/alglib/alglibinternal.cpp	/^void hermitianrank2update(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hflip_	core/imageCapture/NaoCamera.h	/^    bool vflip_, hflip_;$/;"	m	class:NaoCamera
high_water	lib/zlib/deflate.h	/^    ulg high_water;$/;"	m	struct:internal_state
hipAngles	core/motion/rswalk2014/Walk2014Generator.cpp	/^Walk2014Generator::Hpr Walk2014Generator::hipAngles(float Hyp, float Hp,$/;"	f	class:Walk2014Generator
hipOffsetY	core/common/RobotDimensions.h	/^    hipOffsetY,$/;"	e	enum:RobotDimensions::__anon8
hipOffsetZ	core/common/RobotDimensions.h	/^    hipOffsetZ,$/;"	e	enum:RobotDimensions::__anon8
hip_roll_offset_amount_	core/motion/WalkEngineParameters.h	/^  float hip_roll_offset_amount_;$/;"	m	struct:WalkEngineParameters
hip_roll_offset_fall_frac_	core/motion/WalkEngineParameters.h	/^  float hip_roll_offset_fall_frac_;$/;"	m	struct:WalkEngineParameters
hip_roll_offset_rise_frac_	core/motion/WalkEngineParameters.h	/^  float hip_roll_offset_rise_frac_;$/;"	m	struct:WalkEngineParameters
hip_roll_offset_start_frac_	core/motion/WalkEngineParameters.h	/^  float hip_roll_offset_start_frac_;$/;"	m	struct:WalkEngineParameters
hip_roll_offset_stop_frac_	core/motion/WalkEngineParameters.h	/^  float hip_roll_offset_stop_frac_;$/;"	m	struct:WalkEngineParameters
hiph	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float hiph;                                             \/\/ variable vertical distance ground to hip in meters$/;"	m	class:Walk2014Generator
hiph0	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float hiph0;                                            \/\/ some initial hiph$/;"	m	class:Walk2014Generator
hmatrixevd	lib/alglib/linalg.cpp	/^ae_bool hmatrixevd(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hmatrixevd	lib/alglib/linalg.cpp	/^bool hmatrixevd(const complex_2d_array &a, const ae_int_t n, const ae_int_t zneeded, const bool isupper, real_1d_array &d, complex_2d_array &z)$/;"	f	namespace:alglib
hmatrixevdi	lib/alglib/linalg.cpp	/^ae_bool hmatrixevdi(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hmatrixevdi	lib/alglib/linalg.cpp	/^bool hmatrixevdi(const complex_2d_array &a, const ae_int_t n, const ae_int_t zneeded, const bool isupper, const ae_int_t i1, const ae_int_t i2, real_1d_array &w, complex_2d_array &z)$/;"	f	namespace:alglib
hmatrixevdr	lib/alglib/linalg.cpp	/^ae_bool hmatrixevdr(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hmatrixevdr	lib/alglib/linalg.cpp	/^bool hmatrixevdr(const complex_2d_array &a, const ae_int_t n, const ae_int_t zneeded, const bool isupper, const double b1, const double b2, ae_int_t &m, real_1d_array &w, complex_2d_array &z)$/;"	f	namespace:alglib
hmatrixrndcond	lib/alglib/linalg.cpp	/^void hmatrixrndcond(ae_int_t n,$/;"	f	namespace:alglib_impl
hmatrixrndcond	lib/alglib/linalg.cpp	/^void hmatrixrndcond(const ae_int_t n, const double c, complex_2d_array &a)$/;"	f	namespace:alglib
hmatrixrndmultiply	lib/alglib/linalg.cpp	/^void hmatrixrndmultiply(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hmatrixrndmultiply	lib/alglib/linalg.cpp	/^void hmatrixrndmultiply(complex_2d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
hmatrixtd	lib/alglib/linalg.cpp	/^void hmatrixtd(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hmatrixtd	lib/alglib/linalg.cpp	/^void hmatrixtd(complex_2d_array &a, const ae_int_t n, const bool isupper, complex_1d_array &tau, real_1d_array &d, real_1d_array &e)$/;"	f	namespace:alglib
hmatrixtdunpackq	lib/alglib/linalg.cpp	/^void hmatrixtdunpackq(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hmatrixtdunpackq	lib/alglib/linalg.cpp	/^void hmatrixtdunpackq(const complex_2d_array &a, const ae_int_t n, const bool isupper, const complex_1d_array &tau, complex_2d_array &q)$/;"	f	namespace:alglib
hold	lib/zlib/inflate.h	/^    unsigned long hold;         \/* input bit accumulator *\/$/;"	m	struct:inflate_state
hold	tools/behaviorSim/cma.py	/^                 axis, title, text$/;"	i
hold	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
home	bin/tool	/^  home = os.environ['NAO_HOME']$/;"	v
hook	lib/lua/src/lstate.h	/^  lua_Hook hook;$/;"	m	struct:lua_State
hook	lib/lua/test/trace-calls.lua	/^local function hook(event)$/;"	f
hookcount	lib/lua/src/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State
hookf	lib/lua/src/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookmask	lib/lua/src/lstate.h	/^  lu_byte hookmask;$/;"	m	struct:lua_State
horizon	core/memory/RobotVisionBlock.h	/^  HorizonLine horizon;$/;"	m	struct:RobotVisionBlock
horizon	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      std::pair<int, int> horizon;$/;"	m	class:Pose
horizon_	core/vision/Classifier.h	/^  HorizonLine horizon_;$/;"	m	class:Classifier
horizontal	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   horizontal,$/;"	e	enum:orientation_t
horzAngleLimit	core/vision/structures/VisionParams.h	/^    float horzAngleLimit[NUM_COLORS];$/;"	m	struct:VisionParams
horzPosLimit	core/vision/structures/VisionParams.h	/^    int horzPosLimit[NUM_COLORS];$/;"	m	struct:VisionParams
horzSeparation	core/vision/structures/VisionParams.h	/^    int horzSeparation[NUM_COLORS];$/;"	m	struct:VisionParams
horzValA	core/vision/structures/VisionParams.h	/^    int horzValA[NUM_COLORS];$/;"	m	struct:VisionParams
horzValB	core/vision/structures/VisionParams.h	/^    int horzValB[NUM_COLORS];$/;"	m	struct:VisionParams
horzValThreshold	core/vision/structures/VisionParams.h	/^    int horzValThreshold[NUM_COLORS];$/;"	m	struct:VisionParams
horzWidthLimit	core/vision/structures/VisionParams.h	/^    float horzWidthLimit[NUM_COLORS];$/;"	m	struct:VisionParams
horzcat	core/common/NMatrix.cpp	/^NMatrix horzcat(NMatrix a, NMatrix b)$/;"	f
how	lib/zlib/gzguts.h	/^    int how;                \/* 0: get header, 1: copy, 2: decompress *\/$/;"	m	struct:__anon135
hpdmatrixcholesky	lib/alglib/linalg.cpp	/^ae_bool hpdmatrixcholesky(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hpdmatrixcholesky	lib/alglib/linalg.cpp	/^bool hpdmatrixcholesky(complex_2d_array &a, const ae_int_t n, const bool isupper)$/;"	f	namespace:alglib
hpdmatrixcholeskyinverse	lib/alglib/linalg.cpp	/^void hpdmatrixcholeskyinverse(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hpdmatrixcholeskyinverse	lib/alglib/linalg.cpp	/^void hpdmatrixcholeskyinverse(complex_2d_array &a, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
hpdmatrixcholeskyinverse	lib/alglib/linalg.cpp	/^void hpdmatrixcholeskyinverse(complex_2d_array &a, const ae_int_t n, const bool isupper, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
hpdmatrixcholeskyrcond	lib/alglib/linalg.cpp	/^double hpdmatrixcholeskyrcond(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hpdmatrixcholeskyrcond	lib/alglib/linalg.cpp	/^double hpdmatrixcholeskyrcond(const complex_2d_array &a, const ae_int_t n, const bool isupper)$/;"	f	namespace:alglib
hpdmatrixcholeskysolve	lib/alglib/solvers.cpp	/^void hpdmatrixcholeskysolve(\/* Complex *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
hpdmatrixcholeskysolve	lib/alglib/solvers.cpp	/^void hpdmatrixcholeskysolve(const complex_2d_array &cha, const ae_int_t n, const bool isupper, const complex_1d_array &b, ae_int_t &info, densesolverreport &rep, complex_1d_array &x)$/;"	f	namespace:alglib
hpdmatrixcholeskysolvem	lib/alglib/solvers.cpp	/^void hpdmatrixcholeskysolvem(\/* Complex *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
hpdmatrixcholeskysolvem	lib/alglib/solvers.cpp	/^void hpdmatrixcholeskysolvem(const complex_2d_array &cha, const ae_int_t n, const bool isupper, const complex_2d_array &b, const ae_int_t m, ae_int_t &info, densesolverreport &rep, complex_2d_array &x)$/;"	f	namespace:alglib
hpdmatrixinverse	lib/alglib/linalg.cpp	/^void hpdmatrixinverse(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hpdmatrixinverse	lib/alglib/linalg.cpp	/^void hpdmatrixinverse(complex_2d_array &a, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
hpdmatrixinverse	lib/alglib/linalg.cpp	/^void hpdmatrixinverse(complex_2d_array &a, const ae_int_t n, const bool isupper, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
hpdmatrixrcond	lib/alglib/linalg.cpp	/^double hpdmatrixrcond(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hpdmatrixrcond	lib/alglib/linalg.cpp	/^double hpdmatrixrcond(const complex_2d_array &a, const ae_int_t n, const bool isupper)$/;"	f	namespace:alglib
hpdmatrixrndcond	lib/alglib/linalg.cpp	/^void hpdmatrixrndcond(ae_int_t n,$/;"	f	namespace:alglib_impl
hpdmatrixrndcond	lib/alglib/linalg.cpp	/^void hpdmatrixrndcond(const ae_int_t n, const double c, complex_2d_array &a)$/;"	f	namespace:alglib
hpdmatrixsolve	lib/alglib/solvers.cpp	/^void hpdmatrixsolve(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hpdmatrixsolve	lib/alglib/solvers.cpp	/^void hpdmatrixsolve(const complex_2d_array &a, const ae_int_t n, const bool isupper, const complex_1d_array &b, ae_int_t &info, densesolverreport &rep, complex_1d_array &x)$/;"	f	namespace:alglib
hpdmatrixsolvem	lib/alglib/solvers.cpp	/^void hpdmatrixsolvem(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
hpdmatrixsolvem	lib/alglib/solvers.cpp	/^void hpdmatrixsolvem(const complex_2d_array &a, const ae_int_t n, const bool isupper, const complex_2d_array &b, const ae_int_t m, ae_int_t &info, densesolverreport &rep, complex_2d_array &x)$/;"	f	namespace:alglib
hqrnd_hqrndintegerbase	lib/alglib/alglibmisc.cpp	/^static ae_int_t hqrnd_hqrndintegerbase(hqrndstate* state,$/;"	f	namespace:alglib_impl
hqrnd_hqrndm1	lib/alglib/alglibmisc.cpp	/^static ae_int_t hqrnd_hqrndm1 = 2147483563;$/;"	m	namespace:alglib_impl	file:
hqrnd_hqrndm2	lib/alglib/alglibmisc.cpp	/^static ae_int_t hqrnd_hqrndm2 = 2147483399;$/;"	m	namespace:alglib_impl	file:
hqrnd_hqrndmagic	lib/alglib/alglibmisc.cpp	/^static ae_int_t hqrnd_hqrndmagic = 1634357784;$/;"	m	namespace:alglib_impl	file:
hqrnd_hqrndmax	lib/alglib/alglibmisc.cpp	/^static ae_int_t hqrnd_hqrndmax = 2147483563;$/;"	m	namespace:alglib_impl	file:
hqrndexponential	lib/alglib/alglibmisc.cpp	/^double hqrndexponential(const hqrndstate &state, const double lambdav)$/;"	f	namespace:alglib
hqrndexponential	lib/alglib/alglibmisc.cpp	/^double hqrndexponential(hqrndstate* state,$/;"	f	namespace:alglib_impl
hqrndnormal	lib/alglib/alglibmisc.cpp	/^double hqrndnormal(const hqrndstate &state)$/;"	f	namespace:alglib
hqrndnormal	lib/alglib/alglibmisc.cpp	/^double hqrndnormal(hqrndstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
hqrndnormal2	lib/alglib/alglibmisc.cpp	/^void hqrndnormal2(const hqrndstate &state, double &x1, double &x2)$/;"	f	namespace:alglib
hqrndnormal2	lib/alglib/alglibmisc.cpp	/^void hqrndnormal2(hqrndstate* state,$/;"	f	namespace:alglib_impl
hqrndrandomize	lib/alglib/alglibmisc.cpp	/^void hqrndrandomize(hqrndstate &state)$/;"	f	namespace:alglib
hqrndrandomize	lib/alglib/alglibmisc.cpp	/^void hqrndrandomize(hqrndstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
hqrndseed	lib/alglib/alglibmisc.cpp	/^void hqrndseed(ae_int_t s1,$/;"	f	namespace:alglib_impl
hqrndseed	lib/alglib/alglibmisc.cpp	/^void hqrndseed(const ae_int_t s1, const ae_int_t s2, hqrndstate &state)$/;"	f	namespace:alglib
hqrndstate	lib/alglib/alglibmisc.cpp	/^hqrndstate::hqrndstate() : _hqrndstate_owner() $/;"	f	class:alglib::hqrndstate
hqrndstate	lib/alglib/alglibmisc.cpp	/^hqrndstate::hqrndstate(const hqrndstate &rhs):_hqrndstate_owner(rhs) $/;"	f	class:alglib::hqrndstate
hqrndstate	lib/alglib/alglibmisc.h	/^class hqrndstate : public _hqrndstate_owner$/;"	c	namespace:alglib
hqrndstate	lib/alglib/alglibmisc.h	/^} hqrndstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon24
hqrnduniformi	lib/alglib/alglibmisc.cpp	/^ae_int_t hqrnduniformi(const hqrndstate &state, const ae_int_t n)$/;"	f	namespace:alglib
hqrnduniformi	lib/alglib/alglibmisc.cpp	/^ae_int_t hqrnduniformi(hqrndstate* state, ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
hqrnduniformr	lib/alglib/alglibmisc.cpp	/^double hqrnduniformr(const hqrndstate &state)$/;"	f	namespace:alglib
hqrnduniformr	lib/alglib/alglibmisc.cpp	/^double hqrnduniformr(hqrndstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
hqrndunit2	lib/alglib/alglibmisc.cpp	/^void hqrndunit2(const hqrndstate &state, double &x, double &y)$/;"	f	namespace:alglib
hqrndunit2	lib/alglib/alglibmisc.cpp	/^void hqrndunit2(hqrndstate* state, double* x, double* y, ae_state *_state)$/;"	f	namespace:alglib_impl
hs	data/goalfit.py	/^hs = range(int(heights[0])+1,int(heights[-1])-1,-1)$/;"	v
hsschur_aux2x2schur	lib/alglib/alglibinternal.cpp	/^static void hsschur_aux2x2schur(double* a,$/;"	f	namespace:alglib_impl
hsschur_extschursign	lib/alglib/alglibinternal.cpp	/^static double hsschur_extschursign(double a, double b, ae_state *_state)$/;"	f	namespace:alglib_impl
hsschur_extschursigntoone	lib/alglib/alglibinternal.cpp	/^static ae_int_t hsschur_extschursigntoone(double b, ae_state *_state)$/;"	f	namespace:alglib_impl
hsschur_internalauxschur	lib/alglib/alglibinternal.cpp	/^static void hsschur_internalauxschur(ae_bool wantt,$/;"	f	namespace:alglib_impl
hsvCluster	vision_testing/src/vision_testing.cpp	/^void hsvCluster(unsigned char* img_hsv, unsigned char* full_clusters, unsigned char* clusters, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
hvalue	lib/lua/src/lobject.h	/^#define hvalue(/;"	d
hyperbolicsinecosineintegrals	lib/alglib/specialfunctions.cpp	/^void hyperbolicsinecosineintegrals(const double x, double &shi, double &chi)$/;"	f	namespace:alglib
hyperbolicsinecosineintegrals	lib/alglib/specialfunctions.cpp	/^void hyperbolicsinecosineintegrals(double x,$/;"	f	namespace:alglib_impl
hyperelli	tools/behaviorSim/cma.py	/^    def hyperelli(self, x):$/;"	m	class:FitnessFunctions
hypergeometric	interfaces/sim_spark/Random.h	/^   int hypergeometric( int n, int N, int K )            \/\/ Hypergeometric$/;"	f	class:Random
i2c_msg	core/imageCapture/i2c-dev.h	/^struct i2c_msg {$/;"	s
i2c_rdwr_ioctl_data	core/imageCapture/i2c-dev.h	/^struct i2c_rdwr_ioctl_data {$/;"	s
i2c_smbus_access	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_access(int file, char read_write, __u8 command, $/;"	f
i2c_smbus_block_process_call	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_block_process_call(int file, __u8 command,$/;"	f
i2c_smbus_data	core/imageCapture/i2c-dev.h	/^union i2c_smbus_data {$/;"	u
i2c_smbus_ioctl_data	core/imageCapture/i2c-dev.h	/^struct i2c_smbus_ioctl_data {$/;"	s
i2c_smbus_process_call	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_process_call(int file, __u8 command, __u16 value)$/;"	f
i2c_smbus_read_block_data	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_read_block_data(int file, __u8 command, $/;"	f
i2c_smbus_read_byte	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_read_byte(int file)$/;"	f
i2c_smbus_read_byte_data	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_read_byte_data(int file, __u8 command)$/;"	f
i2c_smbus_read_i2c_block_data	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_read_i2c_block_data(int file, __u8 command,$/;"	f
i2c_smbus_read_word_data	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_read_word_data(int file, __u8 command)$/;"	f
i2c_smbus_write_block_data	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_write_block_data(int file, __u8 command, $/;"	f
i2c_smbus_write_byte	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_write_byte(int file, __u8 value)$/;"	f
i2c_smbus_write_byte_data	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_write_byte_data(int file, __u8 command, $/;"	f
i2c_smbus_write_i2c_block_data	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_write_i2c_block_data(int file, __u8 command,$/;"	f
i2c_smbus_write_quick	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_write_quick(int file, __u8 value)$/;"	f
i2c_smbus_write_word_data	core/imageCapture/i2c-dev.h	/^static inline __s32 i2c_smbus_write_word_data(int file, __u8 command, $/;"	f
iABC	lib/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iABx	lib/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAsBx	lib/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iFile	build/luaswig/generateSwig.py	/^    iFile = args[1]$/;"	v
i_ci	lib/lua/src/lua.h	/^  int i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug
i_key	lib/lua/src/lobject.h	/^  TKey i_key;$/;"	m	struct:Node
i_val	lib/lua/src/lobject.h	/^  TValue i_val;$/;"	m	struct:Node
ia	lib/alglib/ap.h	/^    ae_vector ia;$/;"	m	struct:alglib_impl::rcommstate
ia0	lib/alglib/alglibinternal.h	/^    ae_vector ia0;$/;"	m	struct:alglib_impl::__anon20
ia1	lib/alglib/alglibinternal.h	/^    ae_vector ia1;$/;"	m	struct:alglib_impl::__anon20
ia2	lib/alglib/alglibinternal.h	/^    ae_vector ia2;$/;"	m	struct:alglib_impl::__anon20
ia3	lib/alglib/alglibinternal.h	/^    ae_vector ia3;$/;"	m	struct:alglib_impl::__anon20
ibetaf_incompletebetafe	lib/alglib/specialfunctions.cpp	/^static double ibetaf_incompletebetafe(double a,$/;"	f	namespace:alglib_impl
ibetaf_incompletebetafe2	lib/alglib/specialfunctions.cpp	/^static double ibetaf_incompletebetafe2(double a,$/;"	f	namespace:alglib_impl
ibetaf_incompletebetaps	lib/alglib/specialfunctions.cpp	/^static double ibetaf_incompletebetaps(double a,$/;"	f	namespace:alglib_impl
iceil	lib/alglib/ap.cpp	/^int alglib::iceil(double x)$/;"	f	class:alglib
id	core/vision/structures/FieldLine.h	/^  int id;$/;"	m	struct:FieldLine
id_	core/common/Profiling.h	/^    int id_, pauseId_;$/;"	m	class:Timer
ideal_ball_side_left_swing_	core/motion/KickParameters.h	/^  float ideal_ball_side_left_swing_;$/;"	m	struct:KickParameters
ideal_ball_side_right_swing_	core/motion/KickParameters.h	/^  float ideal_ball_side_right_swing_;$/;"	m	struct:KickParameters
identifiedIndex	core/vision/structures/FieldLine.h	/^  int identifiedIndex;$/;"	m	struct:FieldLine
idfun	bin/compile	/^    def idfun(x): return x$/;"	f	function:makeUnique
idfun	bin/copy_robot	/^    def idfun(x): return x$/;"	f	function:makeUnique
idfun	build/compile	/^    def idfun(x): return x$/;"	f	function:makeUnique
idfun	build/copy_robot	/^    def idfun(x): return x$/;"	f	function:makeUnique
idwbuildmodifiedshepard	lib/alglib/interpolation.cpp	/^void idwbuildmodifiedshepard(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
idwbuildmodifiedshepard	lib/alglib/interpolation.cpp	/^void idwbuildmodifiedshepard(const real_2d_array &xy, const ae_int_t n, const ae_int_t nx, const ae_int_t d, const ae_int_t nq, const ae_int_t nw, idwinterpolant &z)$/;"	f	namespace:alglib
idwbuildmodifiedshepardr	lib/alglib/interpolation.cpp	/^void idwbuildmodifiedshepardr(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
idwbuildmodifiedshepardr	lib/alglib/interpolation.cpp	/^void idwbuildmodifiedshepardr(const real_2d_array &xy, const ae_int_t n, const ae_int_t nx, const double r, idwinterpolant &z)$/;"	f	namespace:alglib
idwbuildnoisy	lib/alglib/interpolation.cpp	/^void idwbuildnoisy(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
idwbuildnoisy	lib/alglib/interpolation.cpp	/^void idwbuildnoisy(const real_2d_array &xy, const ae_int_t n, const ae_int_t nx, const ae_int_t d, const ae_int_t nq, const ae_int_t nw, idwinterpolant &z)$/;"	f	namespace:alglib
idwcalc	lib/alglib/interpolation.cpp	/^double idwcalc(const idwinterpolant &z, const real_1d_array &x)$/;"	f	namespace:alglib
idwcalc	lib/alglib/interpolation.cpp	/^double idwcalc(idwinterpolant* z,$/;"	f	namespace:alglib_impl
idwint_idwcalcq	lib/alglib/interpolation.cpp	/^static double idwint_idwcalcq(idwinterpolant* z,$/;"	f	namespace:alglib_impl
idwint_idwinit1	lib/alglib/interpolation.cpp	/^static void idwint_idwinit1(ae_int_t n,$/;"	f	namespace:alglib_impl
idwint_idwinternalsolver	lib/alglib/interpolation.cpp	/^static void idwint_idwinternalsolver(\/* Real    *\/ ae_vector* y,$/;"	f	namespace:alglib_impl
idwint_idwkmin	lib/alglib/interpolation.cpp	/^static ae_int_t idwint_idwkmin = 5;$/;"	m	namespace:alglib_impl	file:
idwint_idwqfactor	lib/alglib/interpolation.cpp	/^static double idwint_idwqfactor = 1.5;$/;"	m	namespace:alglib_impl	file:
idwinterpolant	lib/alglib/interpolation.cpp	/^idwinterpolant::idwinterpolant() : _idwinterpolant_owner() $/;"	f	class:alglib::idwinterpolant
idwinterpolant	lib/alglib/interpolation.cpp	/^idwinterpolant::idwinterpolant(const idwinterpolant &rhs):_idwinterpolant_owner(rhs) $/;"	f	class:alglib::idwinterpolant
idwinterpolant	lib/alglib/interpolation.h	/^class idwinterpolant : public _idwinterpolant_owner$/;"	c	namespace:alglib
idwinterpolant	lib/alglib/interpolation.h	/^} idwinterpolant;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon56
idx	core/vision/utils.h	/^inline unsigned int idx(unsigned int x, unsigned int y)$/;"	f
idx	lib/alglib/alglibmisc.h	/^    ae_vector idx;$/;"	m	struct:alglib_impl::__anon25
idx	vision_testing/src/vision_testing.cpp	/^inline unsigned int idx(unsigned int x, unsigned int y)$/;"	f
idxbuf	lib/alglib/dataanalysis.h	/^    ae_vector idxbuf;$/;"	m	struct:alglib_impl::__anon41
idxmap	build/include/tool/StateWindow.h	/^    int idxmap[NumItems];$/;"	m	class:StateWindow
idxmap	tools/UTNaoTool/StateWindow.h	/^    int idxmap[NumItems];$/;"	m	class:StateWindow
if_seen_history	core/python/behaviors/keeper_2.py	/^if_seen_history = [0]*if_seen_history_constant$/;"	v
if_seen_history	core/python/behaviors/win.py	/^if_seen_history = [0]*if_seen_history_constant$/;"	v
if_seen_history_constant	core/python/behaviors/keeper_2.py	/^if_seen_history_constant =9$/;"	v
if_seen_history_constant	core/python/behaviors/win.py	/^if_seen_history_constant =9$/;"	v
if_seen_history_counter	core/python/behaviors/keeper_2.py	/^if_seen_history_counter = 0$/;"	v
if_seen_history_counter	core/python/behaviors/win.py	/^if_seen_history_counter = 0$/;"	v
ifloor	lib/alglib/ap.cpp	/^int alglib::ifloor(double x)$/;"	f	class:alglib
ifstat	lib/lua/src/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
ignoreBehindAngleForSlowKick	core/memory/BehaviorParamBlock.h	/^  float ignoreBehindAngleForSlowKick;$/;"	m	struct:KickStrategy
ignore_after_switch_interval_	core/sonar/SonarModule.h	/^  float ignore_after_switch_interval_;$/;"	m	class:SonarModule
ignore_comms_	core/memory/RobotStateBlock.h	/^  bool ignore_comms_;$/;"	m	struct:RobotStateBlock
image	core/memory/MemoryCache.h	/^    ImageBlock* image;$/;"	m	class:MemoryCache
image	core/python/memory.py	/^  def image(): return core.pythonC.image_$/;"	f	function:init
image	core/vision/VisionBlocks.h	/^    ImageBlock*& image;$/;"	m	class:VisionBlocks
imageCenterX	core/common/WorldObject.h	/^  int imageCenterX; \/\/\/< The object's center x in the frame image.$/;"	m	class:WorldObject
imageCenterY	core/common/WorldObject.h	/^  int imageCenterY; \/\/\/< The object's center y in the frame image.$/;"	m	class:WorldObject
imageCoords	core/motion/rswalk2014/types/PostInfo.hpp	/^   BBox imageCoords;$/;"	m	struct:PostInfo
imagePoints_	build/include/tool/calibration/IntrinsicCalibrator.h	/^    std::vector<std::vector<cv::Point2f> > imagePoints_;$/;"	m	class:IntrinsicCalibrator
imagePoints_	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^    std::vector<std::vector<cv::Point2f> > imagePoints_;$/;"	m	class:IntrinsicCalibrator
imageSelected	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      Image imageSelected;$/;"	m	class:color_classifier::ClassificationWindow
imageSize	build/include/tool/calibration/CalibratorSettings.h	/^    cv::Size imageSize;$/;"	m	class:CalibratorSettings
imageSize	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^      unsigned int imageSize;$/;"	m	class:RSCamera
imageSize	tools/UTNaoTool/calibration/CalibratorSettings.h	/^    cv::Size imageSize;$/;"	m	class:CalibratorSettings
imageToRobotRelative	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^RRCoord Pose::imageToRobotRelative(Point p, int h) const$/;"	f	class:Pose
imageToRobotRelative	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^RRCoord Pose::imageToRobotRelative(int x, int y, int h) const$/;"	f	class:Pose
imageToRobotXY	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^Point Pose::imageToRobotXY(const Point &image, int h) const$/;"	f	class:Pose
image_	core/InterpreterModule.h	/^    ImageBlock *image_;$/;"	m	class:InterpreterModule
image_	core/imageCapture/ImageCapture.h	/^  ImageBlock *image_;$/;"	m	class:ImageCapture
image_	core/memory/SimImageBlock.h	/^  char image_[SIM_IMAGE_SIZE];$/;"	m	struct:SimImageBlock
image_	core/vision/VisionModule.h	/^  ImageBlock *image_;$/;"	m	class:VisionModule
image_block_	build/include/tool/CameraWindow.h	/^    ImageBlock *image_block_;$/;"	m	class:CameraWindow
image_block_	build/include/tool/VisionWindow.h	/^  ImageBlock* image_block_;$/;"	m	class:VisionWindow
image_block_	tools/UTNaoTool/CameraWindow.h	/^    ImageBlock *image_block_;$/;"	m	class:CameraWindow
image_block_	tools/UTNaoTool/VisionWindow.h	/^  ImageBlock* image_block_;$/;"	m	class:VisionWindow
image_capture_	core/VisionCore.h	/^  ImageCapture *image_capture_;$/;"	m	class:VisionCore
image_height	core/vision/Union_find.h	/^		int image_height;$/;"	m	class:MergeBlob
image_length	core/vision/Union_find.h	/^		int image_length;$/;"	m	class:MergeBlob
image_thread_	core/imageCapture/ImageCapture.h	/^  pthread_t image_thread_;$/;"	m	class:ImageCapture
images	tools/color_classifier/include/color_classifier/main_window.hpp	/^      std::vector<sensor_msgs::ImageConstPtr> images;$/;"	m	class:color_classifier::MainWindow
images_	build/include/tool/annotations/AnnotationAnalyzer.h	/^        ImageList images_;$/;"	m	class:AnnotationAnalyzer
images_	build/include/tool/calibration/IntrinsicCalibrator.h	/^    std::vector<cv::Mat> images_;$/;"	m	class:IntrinsicCalibrator
images_	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^        ImageList images_;$/;"	m	class:AnnotationAnalyzer
images_	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^    std::vector<cv::Mat> images_;$/;"	m	class:IntrinsicCalibrator
img	tools/color_classifier/include/color_classifier/ImageWidget.hpp	/^    QImage* img;$/;"	m	class:color_classifier::ImageWidget
img_	build/include/tool/ImageWidget.h	/^    QImage* img_;$/;"	m	class:ImageWidget
img_	core/vision/Classifier.h	/^  unsigned char* img_;$/;"	m	class:Classifier
img_	tools/UTNaoTool/ImageWidget.h	/^    QImage* img_;$/;"	m	class:ImageWidget
img_bottom_	core/memory/ImageBlock.h	/^  boost::interprocess::offset_ptr<unsigned char> img_bottom_;$/;"	m	struct:ImageBlock
img_bottom_local_	core/memory/ImageBlock.h	/^  unsigned char *img_top_local_, *img_bottom_local_;$/;"	m	struct:ImageBlock
img_top_	core/memory/ImageBlock.h	/^  boost::interprocess::offset_ptr<unsigned char> img_top_;$/;"	m	struct:ImageBlock
img_top_local_	core/memory/ImageBlock.h	/^  unsigned char *img_top_local_, *img_bottom_local_;$/;"	m	struct:ImageBlock
immediate_target_angle_	core/memory/SimEffectorBlock.h	/^  double immediate_target_angle_;$/;"	m	struct:SimEffector
imported	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
importlib	core/python/primary_bvr.py	/^  import importlib$/;"	i
in	lib/zlib/gzguts.h	/^    unsigned char *in;      \/* input buffer *\/$/;"	m	struct:__anon135
in	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
in	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
inFile	build/luaswig/generateSwig.py	/^    inFile = args[0]$/;"	v
inLiveMode	build/include/tool/WorldWindow.cpp	/^bool WorldWindow::inLiveMode() {$/;"	f	class:WorldWindow
inLiveMode	tools/UTNaoTool/WorldWindow.cpp	/^bool WorldWindow::inLiveMode() {$/;"	f	class:WorldWindow
inParam	interfaces/nao/tests/naointerfaceTest.py	/^inParam = ["test", 1, 45, [123, 456, "789"]]$/;"	v
inSignal	core/python/state_machine.py	/^  def inSignal(self):$/;"	m	class:Node
inSimMode	build/include/tool/WorldWindow.cpp	/^bool WorldWindow::inSimMode() {$/;"	f	class:WorldWindow
inSimMode	tools/UTNaoTool/WorldWindow.cpp	/^bool WorldWindow::inSimMode() {$/;"	f	class:WorldWindow
inState	core/python/state_machine.py	/^  def inState(self, *states):$/;"	m	class:SimpleStateMachine
in_func	lib/zlib/zconf.h	/^#  define in_func /;"	d
in_func	lib/zlib/zlib.h	/^typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));$/;"	t
in_sock_	core/communications/UDPWrapper.h	/^  udp::socket in_sock_;$/;"	m	class:UDPWrapper
inbound	core/communications/UDPWrapper.cpp	/^#define inbound(/;"	d	file:
inc_ci	lib/lua/src/ldo.c	/^#define inc_ci(/;"	d	file:
inclinenumber	lib/lua/src/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
includedir	lib/zlib/Makefile	/^includedir =${prefix}\/include$/;"	m
incomplete	lib/lua/src/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
incompletebeta	lib/alglib/specialfunctions.cpp	/^double incompletebeta(const double a, const double b, const double x)$/;"	f	namespace:alglib
incompletebeta	lib/alglib/specialfunctions.cpp	/^double incompletebeta(double a, double b, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
incompleteellipticintegrale	lib/alglib/specialfunctions.cpp	/^double incompleteellipticintegrale(const double phi, const double m)$/;"	f	namespace:alglib
incompleteellipticintegrale	lib/alglib/specialfunctions.cpp	/^double incompleteellipticintegrale(double phi, double m, ae_state *_state)$/;"	f	namespace:alglib_impl
incompleteellipticintegralk	lib/alglib/specialfunctions.cpp	/^double incompleteellipticintegralk(const double phi, const double m)$/;"	f	namespace:alglib
incompleteellipticintegralk	lib/alglib/specialfunctions.cpp	/^double incompleteellipticintegralk(double phi, double m, ae_state *_state)$/;"	f	namespace:alglib_impl
incompletegamma	lib/alglib/specialfunctions.cpp	/^double incompletegamma(const double a, const double x)$/;"	f	namespace:alglib
incompletegamma	lib/alglib/specialfunctions.cpp	/^double incompletegamma(double a, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
incompletegammac	lib/alglib/specialfunctions.cpp	/^double incompletegammac(const double a, const double x)$/;"	f	namespace:alglib
incompletegammac	lib/alglib/specialfunctions.cpp	/^double incompletegammac(double a, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
incrWalkRequest	build/include/tool/MotionSimulation.cpp	/^void MotionSimulation::incrWalkRequest(bool walk, float x, float y, float rot){$/;"	f	class:MotionSimulation
incrWalkRequest	tools/UTNaoTool/MotionSimulation.cpp	/^void MotionSimulation::incrWalkRequest(bool walk, float x, float y, float rot){$/;"	f	class:MotionSimulation
incr_top	lib/lua/src/ldo.h	/^#define incr_top(/;"	d
incrementIndex	core/common/RingQueue.h	/^    void incrementIndex(int &index){$/;"	f	class:RingQueue
incrementIndex	core/common/RingQueueWithSum.h	/^    void incrementIndex(int &index){$/;"	f	class:RingQueueWithSum
incrementVirtualTime	core/communications/CommunicationModule.cpp	/^void CommunicationModule::incrementVirtualTime() {$/;"	f	class:CommunicationModule
ind	tools/behaviorSim/runJob.py	/^ind = jobNum \/ numEvals$/;"	v
ind	tools/plotCOM.py	/^      ind = i$/;"	v
ind	tools/plotCOM.py	/^  ind = 1$/;"	v
indent	lib/yaml-cpp/src/emitterstate.h	/^			int indent;$/;"	m	struct:YAML::EmitterState::Group
indent	lib/yaml-cpp/src/scanscalar.h	/^		int indent;                     \/\/ what level of indentation should be eaten and ignored?$/;"	m	struct:YAML::ScanScalarParams
index	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^    int index;$/;"	m	class:CalibrationItem	file:
index	core/vision/structures/BallCandidate.h	/^  unsigned int index;$/;"	m	struct:BallCandidate
index	lib/lua/doc/contents.html	/^<H2><A NAME="index">Index<\/A><\/H2>$/;"	a
index	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^    int index;$/;"	m	class:CalibrationItem	file:
index2adr	lib/lua/src/lapi.c	/^static TValue *index2adr (lua_State *L, int idx) {$/;"	f	file:
index_	build/include/tool/simulation/SimulatedPlayer.cpp	/^#define index_ /;"	d	file:
index_	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^#define index_ /;"	d	file:
indexupvalue	lib/lua/src/lparser.c	/^static int indexupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
indices	tools/behaviorSim/cma.py	/^    def indices(self, fit):$/;"	m	class:NoiseHandler
inertial_filter_	core/sensor/SensorModule.h	/^  InertialFilter inertial_filter_;$/;"	m	class:SensorModule
inertial_offsets_	core/memory/SensorCalibrationBlock.h	/^  float inertial_offsets_[6];$/;"	m	struct:SensorCalibrationBlock
inf	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
inf	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
inflate	lib/zlib/inflate.c	/^int ZEXPORT inflate(strm, flush)$/;"	f
inflate	lib/zlib/zconf.h	/^#  define inflate /;"	d
inflateBack	lib/zlib/infback.c	/^int ZEXPORT inflateBack(strm, in, in_desc, out, out_desc)$/;"	f
inflateBack	lib/zlib/zconf.h	/^#  define inflateBack /;"	d
inflateBackEnd	lib/zlib/infback.c	/^int ZEXPORT inflateBackEnd(strm)$/;"	f
inflateBackEnd	lib/zlib/zconf.h	/^#  define inflateBackEnd /;"	d
inflateBackInit	lib/zlib/zlib.h	/^#define inflateBackInit(/;"	d
inflateBackInit_	lib/zlib/infback.c	/^int ZEXPORT inflateBackInit_(strm, windowBits, window, version, stream_size)$/;"	f
inflateBackInit_	lib/zlib/zconf.h	/^#  define inflateBackInit_ /;"	d
inflateCopy	lib/zlib/inflate.c	/^int ZEXPORT inflateCopy(dest, source)$/;"	f
inflateCopy	lib/zlib/zconf.h	/^#  define inflateCopy /;"	d
inflateEnd	lib/zlib/inflate.c	/^int ZEXPORT inflateEnd(strm)$/;"	f
inflateEnd	lib/zlib/zconf.h	/^#  define inflateEnd /;"	d
inflateGetHeader	lib/zlib/inflate.c	/^int ZEXPORT inflateGetHeader(strm, head)$/;"	f
inflateGetHeader	lib/zlib/zconf.h	/^#  define inflateGetHeader /;"	d
inflateInit	lib/zlib/zlib.h	/^#define inflateInit(/;"	d
inflateInit2	lib/zlib/zlib.h	/^#define inflateInit2(/;"	d
inflateInit2_	lib/zlib/inflate.c	/^int ZEXPORT inflateInit2_(strm, windowBits, version, stream_size)$/;"	f
inflateInit2_	lib/zlib/zconf.h	/^#  define inflateInit2_ /;"	d
inflateInit_	lib/zlib/inflate.c	/^int ZEXPORT inflateInit_(strm, version, stream_size)$/;"	f
inflateInit_	lib/zlib/zconf.h	/^#  define inflateInit_ /;"	d
inflateMark	lib/zlib/inflate.c	/^long ZEXPORT inflateMark(strm)$/;"	f
inflateMark	lib/zlib/zconf.h	/^#  define inflateMark /;"	d
inflatePrime	lib/zlib/inflate.c	/^int ZEXPORT inflatePrime(strm, bits, value)$/;"	f
inflatePrime	lib/zlib/zconf.h	/^#  define inflatePrime /;"	d
inflateReset	lib/zlib/inflate.c	/^int ZEXPORT inflateReset(strm)$/;"	f
inflateReset	lib/zlib/zconf.h	/^#  define inflateReset /;"	d
inflateReset2	lib/zlib/inflate.c	/^int ZEXPORT inflateReset2(strm, windowBits)$/;"	f
inflateReset2	lib/zlib/zconf.h	/^#  define inflateReset2 /;"	d
inflateSetDictionary	lib/zlib/inflate.c	/^int ZEXPORT inflateSetDictionary(strm, dictionary, dictLength)$/;"	f
inflateSetDictionary	lib/zlib/zconf.h	/^#  define inflateSetDictionary /;"	d
inflateSync	lib/zlib/inflate.c	/^int ZEXPORT inflateSync(strm)$/;"	f
inflateSync	lib/zlib/zconf.h	/^#  define inflateSync /;"	d
inflateSyncPoint	lib/zlib/inflate.c	/^int ZEXPORT inflateSyncPoint(strm)$/;"	f
inflateSyncPoint	lib/zlib/zconf.h	/^#  define inflateSyncPoint /;"	d
inflateUndermine	lib/zlib/inflate.c	/^int ZEXPORT inflateUndermine(strm, subvert)$/;"	f
inflateUndermine	lib/zlib/zconf.h	/^#  define inflateUndermine /;"	d
inflate_copyright	lib/zlib/inftrees.c	/^const char inflate_copyright[] =$/;"	v
inflate_copyright	lib/zlib/zconf.h	/^#  define inflate_copyright /;"	d
inflate_fast	lib/zlib/inffast.c	/^void ZLIB_INTERNAL inflate_fast(strm, start)$/;"	f
inflate_fast	lib/zlib/zconf.h	/^#  define inflate_fast /;"	d
inflate_mode	lib/zlib/inflate.h	/^} inflate_mode;$/;"	t	typeref:enum:__anon136
inflate_state	lib/zlib/inflate.h	/^struct inflate_state {$/;"	s
inflate_table	lib/zlib/inftrees.c	/^int ZLIB_INTERNAL inflate_table(type, lens, codes, table, bits, work)$/;"	f
inflate_table	lib/zlib/zconf.h	/^#  define inflate_table /;"	d
info	lib/alglib/alglibinternal.h	/^    ae_int_t info;$/;"	m	struct:alglib_impl::__anon22
info	lib/alglib/integration.h	/^    ae_int_t info;$/;"	m	struct:alglib_impl::__anon54
info	lib/lua/src/lparser.h	/^    struct { int info, aux; } s;$/;"	m	struct:expdesc::__anon96::__anon97
info	lib/lua/src/lparser.h	/^  lu_byte info;$/;"	m	struct:upvaldesc
info_tailcall	lib/lua/src/ldebug.c	/^static void info_tailcall (lua_Debug *ar) {$/;"	f	file:
infoc	lib/alglib/alglibinternal.h	/^    ae_int_t infoc;$/;"	m	struct:alglib_impl::__anon21
infoc	lib/alglib/dataanalysis.h	/^    ae_int_t infoc;$/;"	m	struct:alglib_impl::__anon46
init	build/include/tool/AnnotationWidget.h	/^        void init(Annotation* annotation){$/;"	f	class:AnnotationListWidgetItem
init	build/include/tool/AnnotationWidget.h	/^        void init(Selection* selection){$/;"	f	class:SelectionListWidgetItem
init	build/include/tool/KeyframeWidget.cpp	/^void KeyframeItem::init(int row) {$/;"	f	class:KeyframeItem
init	build/include/tool/LogEditorWindow.h	/^    void init(std::string directory, int frame){$/;"	f	class:FrameListWidgetItem
init	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::init() {$/;"	f	class:MotionGLWidget
init	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::init() {$/;"	f	class:WorldGLWidget
init	build/include/tool/annotations/RectangleSelection.h	/^        void init(Point tl, Point br) {$/;"	f	class:RectangleSelection
init	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::init(vector<LocSimAgent::Type> types) {$/;"	f	class:LocalizationSimulation
init	core/Module.cpp	/^void Module::init(Memory *memory, TextLogger* tl) {$/;"	f	class:Module
init	core/MotionCore.cpp	/^void MotionCore::init() {$/;"	f	class:MotionCore
init	core/VisionCore.cpp	/^void VisionCore::init(int team_num, int player_num) {$/;"	f	class:VisionCore
init	core/common/RingBuffer.h	/^    void init () {current = n - 1; numberOfEntries = 0;}$/;"	f	class:RingBuffer
init	core/common/RingBufferWithSum.h	/^    void init () {current = n - 1; numberOfEntries = 0; sum = C();}$/;"	f	class:RingBufferWithSum
init	core/common/RingQueue.h	/^    void init () {frontIndex = 0; backIndex = 0; numberOfEntries = 0;}$/;"	f	class:RingQueue
init	core/common/RingQueueWithSum.h	/^    void init () {frontIndex = 0; backIndex = 0; numberOfEntries = 0; sum = V();}$/;"	f	class:RingQueueWithSum
init	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::init() {$/;"	f	class:NaoCamera
init	core/localization/ParticleFilter.cpp	/^void ParticleFilter::init(Point2D loc, float orientation) {$/;"	f	class:ParticleFilter
init	core/memory/WorldObjectBlock.h	/^  void init(int = 0) {$/;"	f	struct:WorldObjectBlock
init	core/motion/rswalk2014/utils/Logger.cpp	/^void Logger::init(std::string logLevel_, bool motion_) {$/;"	f	class:Logger
init	core/motion/rswalk2014/utils/Logger.cpp	/^void Logger::init(std::string logPath_, std::string logLevel_, bool motion_) {$/;"	f	class:Logger
init	core/opponents/UKF4.cpp	/^void UKF4::init()$/;"	f	class:UKF4
init	core/python/core.py	/^def init():$/;"	f
init	core/python/init.py	/^def init():$/;"	f
init	core/python/mem_objects.py	/^def init():$/;"	f
init	core/python/memory.py	/^def init():$/;"	f
init	core/sensor/InertialFilter.cpp	/^void InertialFilter::init(bool in_simulation) {$/;"	f	class:InertialFilter
init	core/vision/BeaconDetector.h	/^  void init(TextLogger* tl){ textlogger = tl; }$/;"	f	class:BeaconDetector
init	core/vision/Classifier.h	/^  void init(TextLogger* tl){textlogger = tl;};$/;"	f	class:Classifier
init	core/vision/ImageProcessor.cpp	/^void ImageProcessor::init(TextLogger* tl)$/;"	f	class:ImageProcessor
init	core/vision/structures/FocusArea.h	/^  void init() {$/;"	f	struct:FocusArea
init	core/vision/structures/VisionParams.h	/^    void init() {$/;"	f	struct:VisionParams
init	interfaces/nao/src/AudioWrapper.cpp	/^void AudioWrapper::init() {$/;"	f	class:AudioWrapper
init	interfaces/nao/src/almotionwrapper.cpp	/^void ALMotionWrapper::init() {$/;"	f	class:ALMotionWrapper
init	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::init() {$/;"	f	class:DCMWrapper
init	lib/lua/src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon98	file:
init	particle_filters/RMCL_particle_filter.hpp	/^    void init(Point2D loc, float orientation)$/;"	f	class:RMCLParticleFilter
init	tools/UTNaoTool/AnnotationWidget.h	/^        void init(Annotation* annotation){$/;"	f	class:AnnotationListWidgetItem
init	tools/UTNaoTool/AnnotationWidget.h	/^        void init(Selection* selection){$/;"	f	class:SelectionListWidgetItem
init	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeItem::init(int row) {$/;"	f	class:KeyframeItem
init	tools/UTNaoTool/LogEditorWindow.h	/^    void init(std::string directory, int frame){$/;"	f	class:FrameListWidgetItem
init	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::init() {$/;"	f	class:MotionGLWidget
init	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::init() {$/;"	f	class:WorldGLWidget
init	tools/UTNaoTool/annotations/RectangleSelection.h	/^        void init(Point tl, Point br) {$/;"	f	class:RectangleSelection
init	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::init(vector<LocSimAgent::Type> types) {$/;"	f	class:LocalizationSimulation
init	tools/behaviorSim/cma.py	/^    def init(self, dict_or_str, val=None, warn=True):$/;"	m	class:Options
initAccelX	core/memory/KickRequestBlock.h	/^  void initAccelX() {$/;"	f	struct:KickRequestBlock
initAccelY	core/memory/KickRequestBlock.h	/^  void initAccelY() {$/;"	f	struct:KickRequestBlock
initAlias	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::initAlias(const std::string &name, const std::string &deviceSuffix, int jointIndStart, int numJoints) {$/;"	f	class:DCMWrapper
initAliases	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::initAliases() {$/;"	f	class:DCMWrapper
initCommands	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::initCommands(AL::ALValue &commands, const std::string &commandType, int numJoints)$/;"	f	class:DCMWrapper
initFastAccess	interfaces/nao/src/naointerface.cpp	/^void naointerface::initFastAccess() {$/;"	f	class:naointerface
initFromMemory	core/InterpreterModule.h	/^    virtual void initFromMemory() { }$/;"	f	class:InterpreterModule
initFromMemory	core/audio/AudioModule.cpp	/^void AudioModule::initFromMemory() {$/;"	f	class:AudioModule
initFromMemory	core/localization/LocalizationModule.cpp	/^void LocalizationModule::initFromMemory() {$/;"	f	class:LocalizationModule
initFromMemory	core/python/PythonModule.cpp	/^void PythonModule::initFromMemory() {$/;"	f	class:PythonModule
initFromWorld	core/localization/LocalizationModule.cpp	/^void LocalizationModule::initFromWorld() {$/;"	f	class:LocalizationModule
initGetup	core/motion/GetupModule.cpp	/^void GetupModule::initGetup() {$/;"	f	class:GetupModule
initHands	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::initHands() {$/;"	f	class:DCMWrapper
initLEDCommands	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::initLEDCommands() {$/;"	f	class:DCMWrapper
initLocalization	build/include/tool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::initLocalization() {$/;"	f	class:SimulatedPlayer
initLocalization	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::initLocalization() {$/;"	f	class:SimulatedPlayer
initMatrices	core/sensor/initInertialFilter.cpp	/^void InertialFilter::initMatrices(bool in_simulation) {$/;"	f	class:InertialFilter
initMemory	core/MotionCore.cpp	/^void MotionCore::initMemory() {$/;"	f	class:MotionCore
initMemory	core/VisionCore.cpp	/^void VisionCore::initMemory() {$/;"	f	class:VisionCore
initMemory	core/python/init.py	/^def initMemory():$/;"	f
initMemory	interfaces/nao/src/naointerface.cpp	/^void naointerface::initMemory() {$/;"	f	class:naointerface
initModes	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::initModes() {$/;"	f	class:DCMWrapper
initModules	core/MotionCore.cpp	/^void MotionCore::initModules() {$/;"	f	class:MotionCore
initModules	core/VisionCore.cpp	/^void VisionCore::initModules(LocalizationMethod::Type locMethod) {$/;"	f	class:VisionCore
initMotionSim	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::initMotionSim(bool kick){$/;"	f	class:MotionGLWidget
initMotionSim	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::initMotionSim(bool kick){$/;"	f	class:MotionGLWidget
initNonMemory	core/python/init.py	/^def initNonMemory(initLoc=True):$/;"	f
initOpenVideoDevice	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::initOpenVideoDevice() {$/;"	f	class:NaoCamera
initQueueAllBuffers	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::initQueueAllBuffers() {$/;"	f	class:NaoCamera
initRequestAndMapBuffers	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::initRequestAndMapBuffers() {$/;"	f	class:NaoCamera
initSetFrameRate	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::initSetFrameRate() {$/;"	f	class:NaoCamera
initSetImageFormat	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::initSetImageFormat() {$/;"	f	class:NaoCamera
initSonar	core/sonar/SonarModule.cpp	/^void SonarModule::initSonar() {$/;"	f	class:SonarModule
initSonar	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::initSonar() {$/;"	f	class:DCMWrapper
initSonar	interfaces/nao/src/naointerface.cpp	/^void naointerface::initSonar(){$/;"	f	class:naointerface
initSonarCommands	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::initSonarCommands() {$/;"	f	class:DCMWrapper
initSpecificModule	core/Module.h	/^  virtual void initSpecificModule() {};$/;"	f	class:Module
initSpecificModule	core/audio/AudioModule.cpp	/^void AudioModule::initSpecificModule() {$/;"	f	class:AudioModule
initSpecificModule	core/communications/CommunicationModule.cpp	/^void CommunicationModule::initSpecificModule() {$/;"	f	class:CommunicationModule
initSpecificModule	core/localization/LocalizationModule.cpp	/^void LocalizationModule::initSpecificModule() {$/;"	f	class:LocalizationModule
initSpecificModule	core/motion/KickModule.cpp	/^void KickModule::initSpecificModule() {$/;"	f	class:KickModule
initSpecificModule	core/motion/MotionModule.cpp	/^void MotionModule::initSpecificModule() {$/;"	f	class:MotionModule
initSpecificModule	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::initSpecificModule() {$/;"	f	class:SpecialMotionModule
initSpecificModule	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::initSpecificModule() {$/;"	f	class:RSWalkModule2014
initSpecificModule	core/opponents/OppModule.cpp	/^void OppModule::initSpecificModule(){$/;"	f	class:OppModule
initSpecificModule	core/python/PythonModule.cpp	/^void PythonModule::initSpecificModule() {$/;"	f	class:PythonModule
initSpecificModule	core/sensor/SensorModule.cpp	/^void SensorModule::initSpecificModule() {$/;"	f	class:SensorModule
initSpecificModule	core/sonar/SonarModule.cpp	/^void SonarModule::initSpecificModule() {$/;"	f	class:SonarModule
initSpecificModule	core/vision/VisionModule.cpp	/^void VisionModule::initSpecificModule() {$/;"	f	class:VisionModule
initUDP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::initUDP() {$/;"	f	class:CommunicationModule
initVision	core/imageCapture/ImageCapture.cpp	/^void ImageCapture::initVision() {$/;"	f	class:ImageCapture
initWalk	core/python/cfgwalk.py	/^def initWalk():$/;"	f
initWalkEngine	core/MotionCore.cpp	/^void MotionCore::initWalkEngine() {$/;"	f	class:MotionCore
initXboxJoystick	build/include/tool/joystickxbox.cpp	/^int initXboxJoystick() {$/;"	f
initXboxJoystick	tools/UTNaoTool/joystickxbox.cpp	/^int initXboxJoystick() {$/;"	f
init_	interfaces/sim_spark/RobotBehavior.h	/^  bool init_;$/;"	m	class:RobotBehavior
init_beam_	interfaces/sim_spark/RobotBehavior.h	/^  bool init_beam_;$/;"	m	class:RobotBehavior
init_block	lib/zlib/trees.c	/^local void init_block(s)$/;"	f
init_exp	lib/lua/src/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_sd_vel	core/opponents/UKF4.h	/^  float init_sd_vel;$/;"	m	struct:SmallUKF4Params
init_sd_x	core/opponents/UKF4.h	/^  float init_sd_x;$/;"	m	struct:SmallUKF4Params
init_sd_y	core/opponents/UKF4.h	/^  float init_sd_y;$/;"	m	struct:SmallUKF4Params
initial_	core/motion/KickModule.h	/^    Keyframe* initial_;$/;"	m	class:KickModule
initialise	core/motion/rswalk2014/Walk2014Generator.cpp	/^void Walk2014Generator::initialise() {$/;"	f	class:Walk2014Generator
initialised	core/motion/rswalk2014/utils/Logger.cpp	/^bool Logger::initialised = false;$/;"	m	class:Logger	file:
initialised	core/motion/rswalk2014/utils/Logger.hpp	/^      static bool initialised;$/;"	m	class:Logger
initialize	tools/behaviorSim/cma.py	/^    def initialize(self):$/;"	m	class:AII
initialize	tools/behaviorSim/cma.py	/^    def initialize(self):$/;"	m	class:OOOptimizer
initialize	tools/behaviorSim/cma.py	/^    def initialize(self, modulo=None):$/;"	m	class:CMADataLogger
initialize	tools/behaviorSim/cma.py	/^    def initialize(self, modulo=None):$/;"	m	class:DEAPCMADataLogger
initializeItems	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::initializeItems() {$/;"	f	class:ExtrinsicCalibrationWidget
initializeItems	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::initializeItems() {$/;"	f	class:ExtrinsicCalibrationWidget
initialized	core/imageCapture/NaoCamera.h	/^  bool initialized;$/;"	m	class:NaoCamera
initialized	core/math/Spline3D.h	/^  bool initialized;$/;"	m	class:Spline3D
initialized_	build/include/tool/VisionWindow.h	/^  bool initialized_;$/;"	m	class:VisionWindow
initialized_	core/vision/Classifier.h	/^  bool initialized_;$/;"	m	class:Classifier
initialized_	interfaces/nao/src/dcmwrapper.h	/^  bool initialized_;$/;"	m	class:DCMWrapper
initialized_	tools/UTNaoTool/VisionWindow.h	/^  bool initialized_;$/;"	m	class:VisionWindow
innerepsf	lib/alglib/optimization.h	/^    double innerepsf;$/;"	m	struct:alglib_impl::__anon79
innerepsg	lib/alglib/optimization.h	/^    double innerepsg;$/;"	m	struct:alglib_impl::__anon79
innerepsx	lib/alglib/optimization.h	/^    double innerepsx;$/;"	m	struct:alglib_impl::__anon79
inneriterationscount	lib/alglib/optimization.h	/^    ae_int_t &inneriterationscount;$/;"	m	class:alglib::minbleicreport
inneriterationscount	lib/alglib/optimization.h	/^    ae_int_t &inneriterationscount;$/;"	m	class:alglib::minqpreport
inneriterationscount	lib/alglib/optimization.h	/^    ae_int_t inneriterationscount;$/;"	m	struct:alglib_impl::__anon72
inneriterationscount	lib/alglib/optimization.h	/^    ae_int_t inneriterationscount;$/;"	m	struct:alglib_impl::__anon80
innerresetneeded	lib/alglib/optimization.h	/^    ae_bool innerresetneeded;$/;"	m	struct:alglib_impl::__anon77
inplacetranspose	lib/alglib/alglibinternal.cpp	/^void inplacetranspose(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
ins_h	lib/zlib/deflate.h	/^    uInt  ins_h;          \/* hash index of string to be inserted *\/$/;"	m	struct:internal_state
insert	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::insert(){$/;"	f	class:AnnotationWidget
insert	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::insert(){$/;"	f	class:AnnotationWidget
insert	tools/behaviorSim/cma.py	/^    def insert(self, x, datadict):$/;"	m	class:SolutionDictOld
insertParam	tools/behaviorSim/runCMAES.py	/^def insertParam(keys,v,dest):$/;"	f
insidePostBuffer	core/memory/BehaviorParamBlock.h	/^  float insidePostBuffer;$/;"	m	struct:KickStrategy
inside_side_dist_from_stance_left_swing_	core/motion/KickParameters.h	/^  float inside_side_dist_from_stance_left_swing_;$/;"	m	struct:KickParameters
inside_side_dist_from_stance_right_swing_	core/motion/KickParameters.h	/^  float inside_side_dist_from_stance_right_swing_;$/;"	m	struct:KickParameters
inspect	build/core/generate_block_operations.py	/^import inspect, os, sys$/;"	i
inst	build/include/tool/LogSelectWindow.cpp	/^LogSelectWindow* LogSelectWindow::inst() { return instance_; }$/;"	f	class:LogSelectWindow
inst	build/include/tool/UTMainWnd.h	/^  static UTMainWnd* inst() { return instance_; }$/;"	f	class:UTMainWnd
inst	core/common/Random.cpp	/^const Random& Random::inst() { return inst_; }$/;"	f	class:Random
inst	tools/UTNaoTool/LogSelectWindow.cpp	/^LogSelectWindow* LogSelectWindow::inst() { return instance_; }$/;"	f	class:LogSelectWindow
inst	tools/UTNaoTool/UTMainWnd.h	/^  static UTMainWnd* inst() { return instance_; }$/;"	f	class:UTMainWnd
inst_	core/MotionCore.cpp	/^MotionCore *MotionCore::inst_ = NULL;$/;"	m	class:MotionCore	file:
inst_	core/MotionCore.h	/^  static MotionCore *inst_;$/;"	m	class:MotionCore
inst_	core/VisionCore.cpp	/^VisionCore *VisionCore::inst_ = NULL;$/;"	m	class:VisionCore	file:
inst_	core/VisionCore.h	/^  static VisionCore *inst_;$/;"	m	class:VisionCore
inst_	core/common/Random.cpp	/^Random Random::inst_ = Random();$/;"	m	class:Random	file:
inst_	core/common/Random.h	/^    static Random inst_;$/;"	m	class:Random
instability_	core/memory/WalkInfoBlock.h	/^  float instability_;$/;"	m	struct:WalkInfoBlock
instable_	core/memory/WalkInfoBlock.h	/^  bool instable_;$/;"	m	struct:WalkInfoBlock
installAll	install/install_naoqi	/^def installAll():$/;"	f
installCross	install/install_naoqi	/^def installCross():$/;"	f
installIncludes	install/install_naoqi	/^def installIncludes():$/;"	f
installLinkLibs	install/install_naoqi	/^def installLinkLibs():$/;"	f
installQiBuild	install/install_naoqi	/^def installQiBuild():$/;"	f
installSDK	install/install_naoqi	/^def installSDK():$/;"	f
install_numpy_prebuilt	install/install_python	/^install_numpy_prebuilt() {$/;"	f
install_numpy_source	install/install_python	/^install_numpy_source() {$/;"	f
install_python_core_prebuilt	install/install_python	/^install_python_core_prebuilt() {$/;"	f
install_python_core_source	install/install_python	/^install_python_core_source() {$/;"	f
install_scipy_prebuilt	install/install_python	/^install_scipy_prebuilt() {$/;"	f
install_scipy_source	install/install_python	/^install_scipy_source() {$/;"	f
instance	core/motion/rswalk2014/utils/Logger.cpp	/^Logger *Logger::instance() {$/;"	f	class:Logger
instance	core/motion/rswalk2014/utils/speech.hpp	/^      static Speech& instance() {$/;"	f	class:Speech
instance_	build/include/tool/LogSelectWindow.cpp	/^LogSelectWindow* LogSelectWindow::instance_ = NULL;$/;"	m	class:LogSelectWindow	file:
instance_	build/include/tool/LogSelectWindow.h	/^    static LogSelectWindow* instance_;$/;"	m	class:LogSelectWindow
instance_	build/include/tool/UTMainWnd.cpp	/^UTMainWnd* UTMainWnd::instance_ = NULL;$/;"	m	class:UTMainWnd	file:
instance_	build/include/tool/UTMainWnd.h	/^  static UTMainWnd* instance_;$/;"	m	class:UTMainWnd
instance_	tools/UTNaoTool/LogSelectWindow.cpp	/^LogSelectWindow* LogSelectWindow::instance_ = NULL;$/;"	m	class:LogSelectWindow	file:
instance_	tools/UTNaoTool/LogSelectWindow.h	/^    static LogSelectWindow* instance_;$/;"	m	class:LogSelectWindow
instance_	tools/UTNaoTool/UTMainWnd.cpp	/^UTMainWnd* UTMainWnd::instance_ = NULL;$/;"	m	class:UTMainWnd	file:
instance_	tools/UTNaoTool/UTMainWnd.h	/^  static UTMainWnd* instance_;$/;"	m	class:UTMainWnd
intToString	core/memory/Memory.cpp	/^std::string intToString(int i) {$/;"	f
integer_1d_array	lib/alglib/ap.cpp	/^alglib::integer_1d_array::integer_1d_array()  $/;"	f	class:alglib::integer_1d_array
integer_1d_array	lib/alglib/ap.cpp	/^alglib::integer_1d_array::integer_1d_array(alglib_impl::ae_vector *p)  $/;"	f	class:alglib::integer_1d_array
integer_1d_array	lib/alglib/ap.cpp	/^alglib::integer_1d_array::integer_1d_array(const char *s)  $/;"	f	class:alglib::integer_1d_array
integer_1d_array	lib/alglib/ap.h	/^class integer_1d_array : public ae_vector_wrapper$/;"	c	namespace:alglib
integer_2d_array	lib/alglib/ap.cpp	/^alglib::integer_2d_array::integer_2d_array()  $/;"	f	class:alglib::integer_2d_array
integer_2d_array	lib/alglib/ap.cpp	/^alglib::integer_2d_array::integer_2d_array(alglib_impl::ae_matrix *p)  $/;"	f	class:alglib::integer_2d_array
integer_2d_array	lib/alglib/ap.cpp	/^alglib::integer_2d_array::integer_2d_array(const char *s)  $/;"	f	class:alglib::integer_2d_array
integer_2d_array	lib/alglib/ap.h	/^class integer_2d_array : public ae_matrix_wrapper$/;"	c	namespace:alglib
intention	core/communications/SPLStandardMessage.h	/^  int8_t intention;$/;"	m	struct:SPLStandardMessage
interestPts	tools/testStepSide.py	/^interestPts = [(-0.5,True),(0,True),(0.5,True),(-0.5,False),(0,False),(0.5,False)]$/;"	v
interfaces	bin/copy_robot	/^  interfaces = []$/;"	v
interfaces	bin/copy_robot	/^  interfaces = makeUnique(interfaces)$/;"	v
interfaces	build/copy_robot	/^  interfaces = []$/;"	v
interfaces	build/copy_robot	/^  interfaces = makeUnique(interfaces)$/;"	v
internal_state	lib/zlib/deflate.h	/^typedef struct internal_state {$/;"	s
internal_state	lib/zlib/zconf.h	/^#  define internal_state /;"	d
internal_state	lib/zlib/zlib.h	/^    struct internal_state {int dummy;};$/;"	s
internal_state	lib/zlib/zutil.c	/^struct internal_state      {int dummy;}; \/* for buggy compilers *\/$/;"	s	file:
internalrep	lib/alglib/optimization.h	/^    minlbfgsreport internalrep;$/;"	m	struct:alglib_impl::__anon73
internalschurdecomposition	lib/alglib/alglibinternal.cpp	/^void internalschurdecomposition(\/* Real    *\/ ae_matrix* h,$/;"	f	namespace:alglib_impl
internalstate	lib/alglib/integration.h	/^    autogkinternalstate internalstate;$/;"	m	struct:alglib_impl::__anon55
internalstate	lib/alglib/optimization.h	/^    minlbfgsstate internalstate;$/;"	m	struct:alglib_impl::__anon73
interp_zmp_forward_	core/motion/WalkEngineParameters.h	/^  bool interp_zmp_forward_;$/;"	m	struct:WalkEngineParameters
interp_zmp_side_amount_	core/motion/WalkEngineParameters.h	/^  float interp_zmp_side_amount_;$/;"	m	struct:WalkEngineParameters
interpolate	core/motion/rswalk2014/ActionGenerator.cpp	/^void ActionGenerator::interpolate(JointValues newJoint, int duration) {$/;"	f	class:ActionGenerator
interpolateSmooth	core/motion/rswalk2014/Walk2014Generator.cpp	/^float Walk2014Generator::interpolateSmooth(float start, float end, float tCurrent, float tEnd) {$/;"	f	class:Walk2014Generator
interpreter	build/include/tool/UTMainWnd.h	/^  static InterpreterModule* interpreter() { return instance_->visionCore_->interpreter_; }$/;"	f	class:UTMainWnd
interpreter	tools/UTNaoTool/UTMainWnd.h	/^  static InterpreterModule* interpreter() { return instance_->visionCore_->interpreter_; }$/;"	f	class:UTMainWnd
interpreter_	core/VisionCore.h	/^  InterpreterModule* interpreter_;$/;"	m	class:VisionCore
interpreter_restart_requested_	core/communications/CommunicationModule.h	/^  static bool *interpreter_restart_requested_;$/;"	m	class:CommunicationModule
intersectionLocation	core/common/Bowdoin14Field.h	/^const Point2D intersectionLocation[] = {$/;"	v
intersectionLocation	core/common/Field.h	/^const Point2D intersectionLocation[] = {$/;"	v
intersectionLocation	core/common/RC2013Field.h	/^const Point2D intersectionLocation[] = {$/;"	v
intersectionLocation	core/common/UTField.h	/^const Point2D intersectionLocation[] = {$/;"	v
intersects	core/python/geometry.py	/^  def intersects(self, other):$/;"	m	class:LineSegment
interval	core/common/ToolPacket.h	/^  float interval;$/;"	m	struct:ToolPacket
interval_	core/common/Profiling.h	/^    int interval_, iterations_;$/;"	m	class:Timer
intf	lib/zlib/zconf.h	/^#  define intf /;"	d
intf	lib/zlib/zconf.h	/^typedef int   FAR intf;$/;"	t
into_bounds	tools/behaviorSim/cma.py	/^    def into_bounds(self, y, bounds=None, copy_never=False, copy_always=False):$/;"	m	class:GenoPheno
invalid	core/vision/structures/Blob.h	/^  bool invalid;$/;"	m	struct:Blob
invalid	core/vision/structures/GoalPostCandidate.h	/^  bool invalid;$/;"	m	struct:GoalPostCandidate
invbinomialdistribution	lib/alglib/specialfunctions.cpp	/^double invbinomialdistribution(ae_int_t k,$/;"	f	namespace:alglib_impl
invbinomialdistribution	lib/alglib/specialfunctions.cpp	/^double invbinomialdistribution(const ae_int_t k, const ae_int_t n, const double y)$/;"	f	namespace:alglib
invchisquaredistribution	lib/alglib/specialfunctions.cpp	/^double invchisquaredistribution(const double v, const double y)$/;"	f	namespace:alglib
invchisquaredistribution	lib/alglib/specialfunctions.cpp	/^double invchisquaredistribution(double v, double y, ae_state *_state)$/;"	f	namespace:alglib_impl
inverf	lib/alglib/specialfunctions.cpp	/^double inverf(const double e)$/;"	f	namespace:alglib
inverf	lib/alglib/specialfunctions.cpp	/^double inverf(double e, ae_state *_state)$/;"	f	namespace:alglib_impl
inverse	core/math/YaMatrix.h	/^  YaMatrix<V> inverse() const$/;"	f	class:YaMatrix
invert	core/math/Matrix2x2.h	/^  Matrix2x2<V> invert() const$/;"	f	class:Matrix2x2
invert	core/math/Matrix3x3.h	/^  Matrix3x3<V> invert() const$/;"	f	class:Matrix3x3
invert	core/math/Pose2D.h	/^  Pose2D invert() const$/;"	f	class:Pose2D
invert	core/math/Pose3D.h	/^  Pose3D invert() const$/;"	f	class:Pose3D
invert	core/math/RotationMatrix.h	/^  RotationMatrix invert() const$/;"	f	class:RotationMatrix
invertjump	lib/lua/src/lcode.c	/^static void invertjump (FuncState *fs, expdesc *e) {$/;"	f	file:
invfdistribution	lib/alglib/specialfunctions.cpp	/^double invfdistribution(ae_int_t a,$/;"	f	namespace:alglib_impl
invfdistribution	lib/alglib/specialfunctions.cpp	/^double invfdistribution(const ae_int_t a, const ae_int_t b, const double y)$/;"	f	namespace:alglib
invincompletebeta	lib/alglib/specialfunctions.cpp	/^double invincompletebeta(const double a, const double b, const double y)$/;"	f	namespace:alglib
invincompletebeta	lib/alglib/specialfunctions.cpp	/^double invincompletebeta(double a, double b, double y, ae_state *_state)$/;"	f	namespace:alglib_impl
invincompletegammac	lib/alglib/specialfunctions.cpp	/^double invincompletegammac(const double a, const double y0)$/;"	f	namespace:alglib
invincompletegammac	lib/alglib/specialfunctions.cpp	/^double invincompletegammac(double a, double y0, ae_state *_state)$/;"	f	namespace:alglib_impl
invnormaldistribution	lib/alglib/specialfunctions.cpp	/^double invnormaldistribution(const double y0)$/;"	f	namespace:alglib
invnormaldistribution	lib/alglib/specialfunctions.cpp	/^double invnormaldistribution(double y0, ae_state *_state)$/;"	f	namespace:alglib_impl
invpoissondistribution	lib/alglib/specialfunctions.cpp	/^double invpoissondistribution(ae_int_t k, double y, ae_state *_state)$/;"	f	namespace:alglib_impl
invpoissondistribution	lib/alglib/specialfunctions.cpp	/^double invpoissondistribution(const ae_int_t k, const double y)$/;"	f	namespace:alglib
invstudenttdistribution	lib/alglib/specialfunctions.cpp	/^double invstudenttdistribution(ae_int_t k, double p, ae_state *_state)$/;"	f	namespace:alglib_impl
invstudenttdistribution	lib/alglib/specialfunctions.cpp	/^double invstudenttdistribution(const ae_int_t k, const double p)$/;"	f	namespace:alglib
io	core/sensor/offline/genInertialFilterMatrices.py	/^import scipy.io$/;"	i
io_close	lib/lua/src/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	lib/lua/src/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	lib/lua/src/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_gc	lib/lua/src/liolib.c	/^static int io_gc (lua_State *L) {$/;"	f	file:
io_input	lib/lua/src/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	lib/lua/src/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	lib/lua/src/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	lib/lua/src/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	lib/lua/src/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	lib/lua/src/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	lib/lua/src/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	lib/lua/src/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	lib/lua/src/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_service	core/communications/CommunicationModule.h	/^  boost::asio::io_service io_service;$/;"	m	class:CommunicationModule
io_service_	core/communications/UDPWrapper.h	/^  boost::asio::io_service io_service_;$/;"	m	class:UDPWrapper
io_tmpfile	lib/lua/src/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_tostring	lib/lua/src/liolib.c	/^static int io_tostring (lua_State *L) {$/;"	f	file:
io_type	lib/lua/src/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	lib/lua/src/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
ioff	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
iolib	lib/lua/src/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ion	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
ip	bin/copy_robot	/^    ip = baseIP % ip$/;"	v
ip	bin/copy_robot	/^    ip = os.getenv('CURRENT_ROBOT')$/;"	v
ip	build/copy_robot	/^    ip = baseIP % ip$/;"	v
ip	build/copy_robot	/^    ip = os.getenv('CURRENT_ROBOT')$/;"	v
ip	install/fix_autoload.py	/^ip = sys.argv[1]$/;"	v
ipSplit	bin/copy_robot	/^  ipSplit = ip.rpartition('.')$/;"	v
ipSplit	build/copy_robot	/^  ipSplit = ip.rpartition('.')$/;"	v
ipairsaux	lib/lua/src/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
iparams_	build/include/tool/annotations/AnnotationAnalyzer.h	/^        std::vector<ImageParams> iparams_;$/;"	m	class:AnnotationAnalyzer
iparams_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    ImageParams iparams_;$/;"	m	class:IsolatedBehaviorSimulation
iparams_	build/include/tool/simulation/LocalizationSimulation.h	/^    ImageParams iparams_;$/;"	m	class:LocalizationSimulation
iparams_	build/include/tool/simulation/ObservationGenerator.h	/^    ImageParams iparams_;$/;"	m	class:ObservationGenerator
iparams_	build/include/tool/simulation/SimulatedPlayer.h	/^  ImageParams iparams_;$/;"	m	class:SimulatedPlayer
iparams_	core/imageCapture/NaoCamera.h	/^  const ImageParams& iparams_;$/;"	m	class:NaoCamera
iparams_	core/vision/CameraMatrix.h	/^    const ImageParams& iparams_;$/;"	m	class:CameraMatrix
iparams_	core/vision/Classifier.h	/^  const ImageParams& iparams_;$/;"	m	class:Classifier
iparams_	core/vision/ImageProcessor.h	/^    const ImageParams& iparams_;$/;"	m	class:ImageProcessor
iparams_	core/vision/ObjectDetector.h	/^    const ImageParams& iparams_;$/;"	m	class:ObjectDetector
iparams_	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^        std::vector<ImageParams> iparams_;$/;"	m	class:AnnotationAnalyzer
iparams_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    ImageParams iparams_;$/;"	m	class:IsolatedBehaviorSimulation
iparams_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    ImageParams iparams_;$/;"	m	class:LocalizationSimulation
iparams_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    ImageParams iparams_;$/;"	m	class:ObservationGenerator
iparams_	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  ImageParams iparams_;$/;"	m	class:SimulatedPlayer
ipboxes_	build/include/tool/TeamConfigWindow.h	/^    std::map<int, QLineEdit*> ipboxes_;$/;"	m	class:TeamConfigWindow
ipboxes_	tools/UTNaoTool/TeamConfigWindow.h	/^    std::map<int, QLineEdit*> ipboxes_;$/;"	m	class:TeamConfigWindow
ipython	tools/behaviorSim/cma.py	/^    import matplotlib.pylab as pylab  # also: use ipython -pylab$/;"	i
irg	tools/behaviorSim/cma.py	/^def irg(ar):$/;"	f
is	tools/behaviorSim/cma.py	/^            self.B = np.eye(N) # identity(N), do not from matlib import *, as eye is a matrix there$/;"	i
is	tools/behaviorSim/cma.py	/^    print('  Could not import matplotlib.pylab, therefore ``cma.plot()`` etc. is not available')$/;"	i
is	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
isAbovePoint	core/vision/structures/HorizonLine.h	/^  inline bool isAbovePoint(int imageX, int imageY) { return imageY > imageX * gradient + offset; }$/;"	f	struct:HorizonLine
isActive	core/motion/rswalk2014/ActionGenerator.cpp	/^bool ActionGenerator::isActive() {$/;"	f	class:ActionGenerator
isActive	core/motion/rswalk2014/ClippedGenerator.cpp	/^bool ClippedGenerator::isActive() {$/;"	f	class:ClippedGenerator
isActive	core/motion/rswalk2014/DeadGenerator.cpp	/^bool DeadGenerator::isActive() {$/;"	f	class:DeadGenerator
isActive	core/motion/rswalk2014/DistributedGenerator.cpp	/^bool DistributedGenerator::isActive() {$/;"	f	class:DistributedGenerator
isActive	core/motion/rswalk2014/HeadGenerator.cpp	/^bool HeadGenerator::isActive() {$/;"	f	class:HeadGenerator
isActive	core/motion/rswalk2014/NullGenerator.cpp	/^bool NullGenerator::isActive() {$/;"	f	class:NullGenerator
isActive	core/motion/rswalk2014/RefPickupGenerator.cpp	/^bool RefPickupGenerator::isActive() {$/;"	f	class:RefPickupGenerator
isActive	core/motion/rswalk2014/StandGenerator.cpp	/^bool StandGenerator::isActive() {$/;"	f	class:StandGenerator
isActive	core/motion/rswalk2014/Walk2014Generator.cpp	/^bool Walk2014Generator::isActive() {$/;"	f	class:Walk2014Generator
isActive	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^bool WalkEnginePreProcessor::isActive() {$/;"	f	class:WalkEnginePreProcessor
isActive	core/opponents/UKF4.h	/^  bool isActive;$/;"	m	class:UKF4
isAmbiguous	core/common/WorldObject.cpp	/^bool WorldObject::isAmbiguous() const {$/;"	f	class:WorldObject
isAngInInterval	core/math/Geometry.cpp	/^bool isAngInInterval( AngRad ang, AngRad angMin, AngRad angMax )$/;"	f
isAngle_	core/common/RobotDimensions.cpp	/^bool RobotDimensions::isAngle_[RobotDimensions::NUM_DIMENSIONS];$/;"	m	class:RobotDimensions	file:
isAngle_	core/common/RobotDimensions.h	/^  static bool isAngle_[NUM_DIMENSIONS];$/;"	m	class:RobotDimensions
isAtStiffness	core/python/commands.py	/^def isAtStiffness(cfg):$/;"	f
isBall	core/common/WorldObject.cpp	/^bool WorldObject::isBall() const {$/;"	f	class:WorldObject
isBeacon	core/common/WorldObject.cpp	/^bool WorldObject::isBeacon() const {$/;"	f	class:WorldObject
isBehind	core/math/Geometry.cpp	/^bool Point2D::isBehind( const Point2D &p ) const$/;"	f	class:Point2D
isBehind	core/math/Geometry.cpp	/^bool Point2D::isBehind( const float &yy ) const$/;"	f	class:Point2D
isBetween	core/python/geometry.py	/^  def isBetween(self, a, b):$/;"	m	class:Point2D
isBetweenSteps	core/motion/rswalk2014/BodyModel.hpp	/^      bool isBetweenSteps;$/;"	m	class:BodyModel
isBetweenTwoPoints	core/math/Geometry.cpp	/^bool Point2D::isBetweenTwoPoints( const Point2D &p1, $/;"	f	class:Point2D
isBetweenX	core/math/Geometry.cpp	/^bool Point2D::isBetweenX( const Point2D &p1, const Point2D &p2 ) const$/;"	f	class:Point2D
isBetweenX	core/math/Geometry.cpp	/^bool Point2D::isBetweenX( const float &x1, const float &x2 ) const$/;"	f	class:Point2D
isBetweenY	core/math/Geometry.cpp	/^bool Point2D::isBetweenY( const Point2D &p1, const Point2D &p2 ) const$/;"	f	class:Point2D
isBetweenY	core/math/Geometry.cpp	/^bool Point2D::isBetweenY( const float &y1, const float &y2 ) const$/;"	f	class:Point2D
isCenterCircle	core/common/WorldObject.cpp	/^bool WorldObject::isCenterCircle() const {$/;"	f	class:WorldObject
isCircle	core/vision/structures/FieldLine.h	/^  bool isCircle;$/;"	m	struct:FieldLine
isCollecting_	build/include/tool/IntrinsicCalibrationWidget.h	/^    bool isCollecting_, paused_;$/;"	m	class:IntrinsicCalibrationWidget
isCollecting_	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^    bool isCollecting_, paused_;$/;"	m	class:IntrinsicCalibrationWidget
isConnected	core/communications/ThreadedUDPSocket.h	/^  bool isConnected;$/;"	m	class:ThreadedUDPSocket
isCross	core/vision/structures/FieldLine.h	/^  bool isCross;$/;"	m	struct:FieldLine
isCurve	core/vision/structures/FieldLine.h	/^  bool isCurve;$/;"	m	struct:FieldLine
isDefault	lib/yaml-cpp/src/directives.h	/^		bool isDefault;$/;"	m	struct:YAML::Version
isDoingSpecialMotion	core/motion/SpecialMotionModule.h	/^  bool isDoingSpecialMotion() { return (state != INITIAL) && (state != FINISHED); };$/;"	f	class:SpecialMotionModule
isDoubleSupportPhase	core/motion/rswalk2014/WalkCycle.cpp	/^bool WalkCycle::isDoubleSupportPhase() {$/;"	f	class:WalkCycle
isDragging_	build/include/tool/ImageWidget.h	/^    bool isDragging_, isSelecting_, isSelectionEnabled_;$/;"	m	class:ImageWidget
isDragging_	tools/UTNaoTool/ImageWidget.h	/^    bool isDragging_, isSelecting_, isSelectionEnabled_;$/;"	m	class:ImageWidget
isEnd	data/ballfit.py	/^def isEnd(line):$/;"	f
isEnd	data/goalfit.py	/^def isEnd(line):$/;"	f
isFast	core/motion/rswalk2014/Walk2014Generator.hpp	/^   bool isFast;$/;"	m	class:Walk2014Generator
isFast	core/motion/rswalk2014/types/ActionCommand.hpp	/^      bool isFast;$/;"	m	struct:ActionCommand::Body
isFirstFrameInState	core/python/state_machine.py	/^  def isFirstFrameInState(self):$/;"	m	class:SimpleStateMachine
isFirstHalf	core/memory/GameStateBlock.h	/^  int isFirstHalf;   $/;"	m	struct:GameStateBlock
isFootOnGround	core/motion/rswalk2014/BodyModel.cpp	/^bool BodyModel::isFootOnGround(const SensorValues &sensors) {$/;"	f	class:BodyModel
isFromLog	core/memory/ImageBlock.h	/^  bool isFromLog() {$/;"	f	struct:ImageBlock
isGettingUp	core/motion/GetupModule.h	/^  bool isGettingUp() {return isDoingSpecialMotion();}$/;"	f	class:GetupModule
isGoal	core/common/WorldObject.cpp	/^bool WorldObject::isGoal() const {$/;"	f	class:WorldObject
isGoalCenter	core/common/WorldObject.cpp	/^bool WorldObject::isGoalCenter() const {$/;"	f	class:WorldObject
isGoalPost	core/common/WorldObject.cpp	/^bool WorldObject::isGoalPost() const {$/;"	f	class:WorldObject
isGoodSample	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^bool IntrinsicCalibrator::isGoodSample(ICMeasures params) {$/;"	f	class:IntrinsicCalibrator
isGoodSample	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^bool IntrinsicCalibrator::isGoodSample(ICMeasures params) {$/;"	f	class:IntrinsicCalibrator
isGyroXCalibrated	core/motion/rswalk2014/BodyModel.hpp	/^      bool isGyroXCalibrated;$/;"	m	class:BodyModel
isGyroYCalibrated	core/motion/rswalk2014/BodyModel.hpp	/^      bool isGyroYCalibrated;$/;"	m	class:BodyModel
isHorizontal	core/vision/structures/FieldLine.h	/^  bool isHorizontal;$/;"	m	struct:FieldLine
isHorizontalLine	core/common/WorldObject.cpp	/^bool WorldObject::isHorizontalLine() const {$/;"	f	class:WorldObject
isImageLoaded	core/vision/ImageProcessor.cpp	/^bool ImageProcessor::isImageLoaded()$/;"	f	class:ImageProcessor
isInBetween	core/math/Geometry.cpp	/^bool Line2D::isInBetween( Point2D p, Point2D p1, Point2D p2) const$/;"	f	class:Line2D
isInCluster	core/memory/BehaviorBlock.h	/^  bool isInCluster;$/;"	m	struct:BehaviorBlock
isInFlags	core/vision/enums/Colors.h	/^#define isInFlags(/;"	d
isInFrame	build/include/tool/annotations/Annotation.cpp	/^bool Annotation::isInFrame(int frame){$/;"	f	class:Annotation
isInFrame	tools/UTNaoTool/annotations/Annotation.cpp	/^bool Annotation::isInFrame(int frame){$/;"	f	class:Annotation
isInFrontOf	core/math/Geometry.cpp	/^bool Point2D::isInFrontOf( const Point2D &p ) const$/;"	f	class:Point2D
isInFrontOf	core/math/Geometry.cpp	/^bool Point2D::isInFrontOf( const float &yy ) const$/;"	f	class:Point2D
isInf	core/math/YaMatrix.h	/^bool isInf(const YaMatrix<T>& value)$/;"	f
isInitialized	core/math/Spline3D.h	/^  bool isInitialized() const {return initialized;}$/;"	f	class:Spline3D
isInside	core/math/Geometry.cpp	/^bool Circle::isInside( const Point2D& pCenter ) const$/;"	f	class:Circle
isInside	core/math/Geometry.cpp	/^bool Rectangle::isInside( Point2D p ) const$/;"	f	class:Rectangle
isInside	core/math/Range.h	/^    bool isInside(T t) const$/;"	f	class:Range
isIntersection	core/common/WorldObject.cpp	/^bool WorldObject::isIntersection() const {$/;"	f	class:WorldObject
isKickOffShot	core/memory/BehaviorBlock.h	/^  bool isKickOffShot;$/;"	m	struct:BehaviorBlock
isKicking	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^      bool isKicking;$/;"	m	class:WalkEnginePreProcessor
isKnownLine	core/common/WorldObject.cpp	/^bool WorldObject::isKnownLine() const {$/;"	f	class:WorldObject
isKnownPenaltyCross	core/common/WorldObject.cpp	/^bool WorldObject::isKnownPenaltyCross() const {$/;"	f	class:WorldObject
isL	core/common/WorldObject.cpp	/^bool WorldObject::isL() const {$/;"	f	class:WorldObject
isLandmark	core/common/WorldObject.cpp	/^bool WorldObject::isLandmark() const {$/;"	f	class:WorldObject
isLeftLegHot	core/motion/rswalk2014/BodyModel.hpp	/^      bool isLeftLegHot;$/;"	m	class:BodyModel
isLeftOf	core/math/Geometry.cpp	/^bool Point2D::isLeftOf( const Point2D &p ) const$/;"	f	class:Point2D
isLeftOf	core/math/Geometry.cpp	/^bool Point2D::isLeftOf( const float &xx ) const$/;"	f	class:Point2D
isLeftPhase	core/motion/rswalk2014/BodyModel.hpp	/^      bool isLeftPhase;$/;"	m	class:BodyModel
isLfunction	lib/lua/src/lobject.h	/^#define isLfunction(/;"	d
isLine	core/common/WorldObject.cpp	/^bool WorldObject::isLine() const {$/;"	f	class:WorldObject
isLine	core/vision/structures/LineStackRet.h	/^  bool isLine;$/;"	m	struct:LineStackRet
isLineUpRequired	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^bool isLineUpRequired(Body::ActionType actionType) {$/;"	f
isLinedUp	core/motion/rswalk2014/ClippedGenerator.cpp	/^bool ClippedGenerator::isLinedUp(){return ((DistributedGenerator*)generator)->isLinedUp();}$/;"	f	class:ClippedGenerator
isLinedUp	core/motion/rswalk2014/DistributedGenerator.cpp	/^bool DistributedGenerator::isLinedUp(){return ((WalkEnginePreProcessor*)bodyGenerators[Body::WALK])->isLinedUp();}$/;"	f	class:DistributedGenerator
isLinedUp	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^bool WalkEnginePreProcessor::isLinedUp() {return linedUp;}$/;"	f	class:WalkEnginePreProcessor
isLua	lib/lua/src/lstate.h	/^#define isLua(/;"	d
isMap	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^      bool isMap() const {return pPrevKeyNode != &sequenceMarker;}$/;"	f	struct:YAML::GraphBuilderAdapter::ContainerFrame
isMemorySatisfied	core/Module.h	/^  bool isMemorySatisfied() { return memory_satisfied_; };$/;"	f	class:Module
isMotionDoneExecuting	core/motion/SpecialMotionModule.h	/^  bool isMotionDoneExecuting() {return getTimeInState() > motionSeqList[currMotion].back().time;}$/;"	f	class:SpecialMotionModule
isNaN	core/math/MVTools.cpp	/^bool isNaN(float value)$/;"	f	namespace:MVTools
isNaN	core/math/YaMatrix.h	/^bool isNaN(const YaMatrix<T>& value)$/;"	f
isNearInf	core/math/MVTools.cpp	/^bool isNearInf(float value)$/;"	f	namespace:MVTools
isNearInf	core/math/MVTools.cpp	/^bool isNearInf(int value)$/;"	f	namespace:MVTools
isNearNegInf	core/math/MVTools.cpp	/^bool isNearNegInf(float value)$/;"	f	namespace:MVTools
isNearNegInf	core/math/MVTools.cpp	/^bool isNearNegInf(int value)$/;"	f	namespace:MVTools
isNearNegZero	core/math/MVTools.cpp	/^bool isNearNegZero(float value)$/;"	f	namespace:MVTools
isNearNegZero	core/math/MVTools.cpp	/^bool isNearNegZero(int value)$/;"	f	namespace:MVTools
isNearPosInf	core/math/MVTools.cpp	/^bool isNearPosInf(float value)$/;"	f	namespace:MVTools
isNearPosInf	core/math/MVTools.cpp	/^bool isNearPosInf(int value)$/;"	f	namespace:MVTools
isNearPosZero	core/math/MVTools.cpp	/^bool isNearPosZero(float value)$/;"	f	namespace:MVTools
isNearPosZero	core/math/MVTools.cpp	/^bool isNearPosZero(int value)$/;"	f	namespace:MVTools
isNearZero	core/math/MVTools.cpp	/^bool isNearZero(float value)$/;"	f	namespace:MVTools
isNearZero	core/math/MVTools.cpp	/^bool isNearZero(int value)$/;"	f	namespace:MVTools
isOnFront	core/motion/rswalk2014/BodyModel.hpp	/^      bool isOnFront;$/;"	m	class:BodyModel
isOnFrontOfFoot	core/motion/rswalk2014/BodyModel.cpp	/^bool BodyModel::isOnFrontOfFoot(const SensorValues &sensors) {$/;"	f	class:BodyModel
isOpen	core/memory/Logger.cpp	/^bool Logger::isOpen() {$/;"	f	class:Logger
isOppGoal	core/common/WorldObject.cpp	/^bool WorldObject::isOppGoal() const {$/;"	f	class:WorldObject
isOpponent	core/common/WorldObject.cpp	/^bool WorldObject::isOpponent() const {$/;"	f	class:WorldObject
isOwnGoal	core/common/WorldObject.cpp	/^bool WorldObject::isOwnGoal() const {$/;"	f	class:WorldObject
isParallelTo	core/math/Geometry.cpp	/^bool Line2D::isParallelTo(Line2D other) const$/;"	f	class:Line2D
isParallelTo	core/python/geometry.py	/^  def isParallelTo(self, line):$/;"	m	class:Line2D
isPaused	core/motion/rswalk2014/BodyModel.hpp	/^      bool isPaused;$/;"	m	class:BodyModel
isPenaltyKick	core/memory/GameStateBlock.h	/^  bool isPenaltyKick;$/;"	m	struct:GameStateBlock
isPenaltySideline	core/common/WorldObject.cpp	/^bool WorldObject::isPenaltySideline() const {$/;"	f	class:WorldObject
isRawImageLoaded	core/vision/ImageProcessor.cpp	/^bool ImageProcessor::isRawImageLoaded()$/;"	f	class:ImageProcessor
isRelative	core/motion/rswalk2014/types/ActionCommand.hpp	/^      bool isRelative; \/\/ TRUE to add to current head angles [DEFAULT]$/;"	m	struct:ActionCommand::Head
isRightLegHot	core/motion/rswalk2014/BodyModel.hpp	/^      bool isRightLegHot;$/;"	m	class:BodyModel
isRightOf	core/math/Geometry.cpp	/^bool Point2D::isRightOf( const Point2D &p ) const$/;"	f	class:Point2D
isRightOf	core/math/Geometry.cpp	/^bool Point2D::isRightOf( const float &xx ) const$/;"	f	class:Point2D
isRobotTimeSet	build/include/tool/FilesWindow.h	/^    bool isRobotTimeSet;$/;"	m	class:FilesWindow
isRobotTimeSet	tools/UTNaoTool/FilesWindow.h	/^    bool isRobotTimeSet;$/;"	m	class:FilesWindow
isSample	build/include/tool/annotations/Annotation.cpp	/^bool Annotation::isSample() {$/;"	f	class:Annotation
isSample	tools/UTNaoTool/annotations/Annotation.cpp	/^bool Annotation::isSample() {$/;"	f	class:Annotation
isSample_	build/include/tool/annotations/Annotation.h	/^        bool isSample_;$/;"	m	class:Annotation
isSample_	tools/UTNaoTool/annotations/Annotation.h	/^        bool isSample_;$/;"	m	class:Annotation
isSelecting_	build/include/tool/ImageWidget.h	/^    bool isDragging_, isSelecting_, isSelectionEnabled_;$/;"	m	class:ImageWidget
isSelecting_	tools/UTNaoTool/ImageWidget.h	/^    bool isDragging_, isSelecting_, isSelectionEnabled_;$/;"	m	class:ImageWidget
isSelectionEnabled_	build/include/tool/ImageWidget.h	/^    bool isDragging_, isSelecting_, isSelectionEnabled_;$/;"	m	class:ImageWidget
isSelectionEnabled_	tools/UTNaoTool/ImageWidget.h	/^    bool isDragging_, isSelecting_, isSelectionEnabled_;$/;"	m	class:ImageWidget
isStanding	core/motion/rswalk2014/ClippedGenerator.cpp	/^bool ClippedGenerator::isStanding() { return ((DistributedGenerator*)generator)->isStanding();$/;"	f	class:ClippedGenerator
isStanding	core/motion/rswalk2014/DistributedGenerator.cpp	/^bool DistributedGenerator::isStanding(){$/;"	f	class:DistributedGenerator
isStanding	core/motion/rswalk2014/Walk2014Generator.cpp	/^bool Walk2014Generator::isStanding() {$/;"	f	class:Walk2014Generator
isStanding	core/python/util.py	/^def isStanding():$/;"	f
isStandingStraight	core/memory/WalkRequestBlock.h	/^  bool isStandingStraight() const { return motion_ == STAND_STRAIGHT; }$/;"	f	struct:WalkRequestBlock
isStopped	core/motion/rswalk2014/BodyModel.hpp	/^      bool isStopped;$/;"	m	class:BodyModel
isStopping	core/motion/rswalk2014/DistributedGenerator.hpp	/^      bool isStopping;$/;"	m	class:DistributedGenerator
isStreaming	build/include/tool/UTMainWnd.h	/^  bool isStreaming() { return isStreaming_; }$/;"	f	class:UTMainWnd
isStreaming	tools/UTNaoTool/UTMainWnd.h	/^  bool isStreaming() { return isStreaming_; }$/;"	f	class:UTMainWnd
isStreaming_	build/include/tool/UTMainWnd.h	/^  bool isStreaming_;$/;"	m	class:UTMainWnd
isStreaming_	tools/UTNaoTool/UTMainWnd.h	/^  bool isStreaming_;$/;"	m	class:UTMainWnd
isT	core/common/WorldObject.cpp	/^bool WorldObject::isT() const {$/;"	f	class:WorldObject
isTeammate	core/common/WorldObject.cpp	/^bool WorldObject::isTeammate() const {$/;"	f	class:WorldObject
isToolCore	core/VisionCore.cpp	/^bool VisionCore::isToolCore() {$/;"	f	class:VisionCore
isUnique	core/common/WorldObject.cpp	/^bool WorldObject::isUnique() const {$/;"	f	class:WorldObject
isUnknown	core/common/WorldObject.cpp	/^bool WorldObject::isUnknown() const {$/;"	f	class:WorldObject
isUnknownGoal	core/common/WorldObject.cpp	/^bool WorldObject::isUnknownGoal() const {$/;"	f	class:WorldObject
isUnknownGoalCenter	core/common/WorldObject.cpp	/^bool WorldObject::isUnknownGoalCenter() const {$/;"	f	class:WorldObject
isUnknownIntersection	core/common/WorldObject.cpp	/^bool WorldObject::isUnknownIntersection() const {$/;"	f	class:WorldObject
isUnknownL	core/common/WorldObject.cpp	/^bool WorldObject::isUnknownL() const {$/;"	f	class:WorldObject
isUnknownLine	core/common/WorldObject.cpp	/^bool WorldObject::isUnknownLine() const {$/;"	f	class:WorldObject
isUnknownPenaltyCross	core/common/WorldObject.cpp	/^bool WorldObject::isUnknownPenaltyCross() const {$/;"	f	class:WorldObject
isUnknownPost	core/common/WorldObject.cpp	/^bool WorldObject::isUnknownPost() const {$/;"	f	class:WorldObject
isUnknownT	core/common/WorldObject.cpp	/^bool WorldObject::isUnknownT() const {$/;"	f	class:WorldObject
isValid	core/kinematics/TorsoMatrix.h	/^  bool isValid; \/**< Matrix is only valid if robot is on ground. *\/$/;"	m	class:TorsoMatrix
isValid	core/vision/structures/VisionPoint.h	/^  bool isValid;$/;"	m	struct:VisionPoint
isValueValid	core/motion/SpecialMotionModule.cpp	/^bool SpecialMotionModule::isValueValid(float val) {$/;"	f	class:SpecialMotionModule
isVertical	core/vision/structures/FieldLine.h	/^  bool isVertical;$/;"	m	struct:FieldLine
isVerticalLine	core/common/WorldObject.cpp	/^bool WorldObject::isVerticalLine() const {$/;"	f	class:WorldObject
isVisible	build/include/tool/simulation/ObservationGenerator.cpp	/^#define isVisible(/;"	d	file:
isVisible	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^#define isVisible(/;"	d	file:
isVoidNum	core/motion/SpecialMotionModule.cpp	/^bool SpecialMotionModule::isVoidNum(float val) {$/;"	f	class:SpecialMotionModule
isWalkActive	core/motion/rswalk2014/ClippedGenerator.cpp	/^bool ClippedGenerator::isWalkActive() {return ((DistributedGenerator*)generator)->walkIsActive();}$/;"	f	class:ClippedGenerator
is_calculated_	core/memory/BodyModelBlock.h	/^  bool is_calculated_;$/;"	m	struct:BodyModelBlock
is_calibrated_	core/memory/SensorCalibrationBlock.h	/^  bool is_calibrated_;$/;"	m	struct:SensorCalibrationBlock
is_copy_	core/memory/PrivateMemory.h	/^  bool is_copy_;$/;"	m	class:PrivateMemory
is_hermitian_rec_diag_stat	lib/alglib/ap.cpp	/^static void is_hermitian_rec_diag_stat(x_matrix *a, ae_int_t offset, ae_int_t len, ae_bool *nonfinite, double *mx, double *err, ae_state *_state)$/;"	f	namespace:alglib_impl
is_hermitian_rec_off_stat	lib/alglib/ap.cpp	/^static void is_hermitian_rec_off_stat(x_matrix *a, ae_int_t offset0, ae_int_t offset1, ae_int_t len0, ae_int_t len1, ae_bool *nonfinite, double *mx, double *err, ae_state *_state)$/;"	f	namespace:alglib_impl
is_index_type	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^	struct is_index_type: public is_index_type_with_check<T, false> {};$/;"	s	namespace:YAML
is_index_type_with_check	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^	struct is_index_type_with_check {$/;"	s	namespace:YAML
is_index_type_with_check	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^	template <> struct is_index_type_with_check<std::size_t, false> { enum { value = true }; };$/;"	s	namespace:YAML
is_left_foot_	core/memory/WalkEngineBlock.h	/^    bool is_left_foot_;$/;"	m	struct:WalkEngineBlock::Step
is_logging_	core/VisionCore.h	/^  bool disable_log_, is_logging_;$/;"	m	class:VisionCore
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	struct is_numeric { enum { value = false }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <__int64> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <char> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <double> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <float> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <int> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <long double> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <long int> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <long long> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <short int> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned __int64> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned char> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned int> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned long int> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned long long> { enum { value = true }; };$/;"	s	namespace:YAML
is_numeric	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned short int> { enum { value = true }; };$/;"	s	namespace:YAML
is_ok_	core/InterpreterModule.h	/^    bool is_ok_;$/;"	m	class:InterpreterModule
is_penalised_	core/memory/WalkRequestBlock.h	/^  bool is_penalised_;$/;"	m	struct:WalkRequestBlock
is_same_type	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^	struct is_same_type {$/;"	s	namespace:YAML
is_same_type	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^	struct is_same_type<T, T> {$/;"	s	namespace:YAML
is_scalar_convertible	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	struct is_scalar_convertible { enum { value = is_numeric<T>::value }; };$/;"	s	namespace:YAML
is_scalar_convertible	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	template<> struct is_scalar_convertible<_Null> { enum { value = true }; };$/;"	s	namespace:YAML
is_scalar_convertible	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	template<> struct is_scalar_convertible<bool> { enum { value = true }; };$/;"	s	namespace:YAML
is_scalar_convertible	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	template<> struct is_scalar_convertible<std::string> { enum { value = true }; };$/;"	s	namespace:YAML
is_stance_left_	core/memory/WalkInfoBlock.h	/^  bool is_stance_left_;$/;"	m	struct:WalkInfoBlock
is_stand_	core/memory/WalkEngineBlock.h	/^    bool is_stand_;$/;"	m	struct:WalkEngineBlock::Step
is_symmetric_rec_diag_stat	lib/alglib/ap.cpp	/^static void is_symmetric_rec_diag_stat(x_matrix *a, ae_int_t offset, ae_int_t len, ae_bool *nonfinite, double *mx, double *err, ae_state *_state)$/;"	f	namespace:alglib_impl
is_symmetric_rec_off_stat	lib/alglib/ap.cpp	/^static void is_symmetric_rec_off_stat(x_matrix *a, ae_int_t offset0, ae_int_t offset1, ae_int_t len0, ae_int_t len1, ae_bool *nonfinite, double *mx, double *err, ae_state *_state)$/;"	f	namespace:alglib_impl
is_vararg	lib/lua/src/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto
isblack	lib/lua/src/lgc.h	/^#define isblack(/;"	d
isbreakable	lib/lua/src/lparser.c	/^  lu_byte isbreakable;  \/* true if `block' is a loop *\/$/;"	m	struct:BlockCnt	file:
iscfunction	lib/lua/src/lobject.h	/^#define iscfunction(/;"	d
iscleared	lib/lua/src/lgc.c	/^static int iscleared (const TValue *o, int iskey) {$/;"	f	file:
iscollectable	lib/lua/src/lobject.h	/^#define iscollectable(/;"	d
isdead	lib/lua/src/lgc.h	/^#define isdead(/;"	d
isempty	lib/alglib/ap.cpp	/^bool alglib::ae_matrix_wrapper::isempty() const$/;"	f	class:alglib::ae_matrix_wrapper
isfinalized	lib/lua/src/lgc.c	/^#define isfinalized(/;"	d	file:
isfinitecvector	lib/alglib/alglibinternal.cpp	/^ae_bool isfinitecvector(\/* Complex *\/ ae_vector* z,$/;"	f	namespace:alglib_impl
isfinitertrmatrix	lib/alglib/alglibinternal.cpp	/^ae_bool isfinitertrmatrix(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
isfinitevector	lib/alglib/alglibinternal.cpp	/^ae_bool isfinitevector(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
isgray	lib/lua/src/lgc.h	/^#define isgray(/;"	d
isinstack	lib/lua/src/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isinteractive	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
isnumeral	lib/lua/src/lcode.c	/^static int isnumeral(expdesc *e) {$/;"	f	file:
issoftmax	lib/alglib/dataanalysis.h	/^    ae_bool issoftmax;$/;"	m	struct:alglib_impl::__anon50
iswhite	lib/lua/src/lgc.h	/^#define iswhite(/;"	d
item	build/include/tool/KeyframeWidget.h	/^    QListWidgetItem* item() { return item_; }$/;"	f	class:KeyframeItem
item	tools/UTNaoTool/KeyframeWidget.h	/^    QListWidgetItem* item() { return item_; }$/;"	f	class:KeyframeItem
item_	build/include/tool/KeyframeWidget.h	/^    QListWidgetItem* item_;$/;"	m	class:KeyframeItem
item_	tools/UTNaoTool/KeyframeWidget.h	/^    QListWidgetItem* item_;$/;"	m	class:KeyframeItem
iterate	core/math/GaussNewtonOptimizer.h	/^  float iterate()$/;"	f	class:GaussNewtonOptimizer
iterations	core/python/state_machine.py	/^  def iterations(self):$/;"	m	class:Node
iterations_	core/common/Profiling.h	/^    int interval_, iterations_;$/;"	m	class:Timer
iterationscount	lib/alglib/interpolation.h	/^    ae_int_t &iterationscount;$/;"	m	class:alglib::lsfitreport
iterationscount	lib/alglib/interpolation.h	/^    ae_int_t iterationscount;$/;"	m	struct:alglib_impl::__anon62
iterationscount	lib/alglib/optimization.h	/^    ae_int_t &iterationscount;$/;"	m	class:alglib::minasareport
iterationscount	lib/alglib/optimization.h	/^    ae_int_t &iterationscount;$/;"	m	class:alglib::mincgreport
iterationscount	lib/alglib/optimization.h	/^    ae_int_t &iterationscount;$/;"	m	class:alglib::minlbfgsreport
iterationscount	lib/alglib/optimization.h	/^    ae_int_t &iterationscount;$/;"	m	class:alglib::minlmreport
iterationscount	lib/alglib/optimization.h	/^    ae_int_t iterationscount;$/;"	m	struct:alglib_impl::__anon70
iterationscount	lib/alglib/optimization.h	/^    ae_int_t iterationscount;$/;"	m	struct:alglib_impl::__anon74
iterationscount	lib/alglib/optimization.h	/^    ae_int_t iterationscount;$/;"	m	struct:alglib_impl::__anon76
iterationscount	lib/alglib/optimization.h	/^    ae_int_t iterationscount;$/;"	m	struct:alglib_impl::__anon78
iterationscount	lib/alglib/solvers.h	/^    ae_int_t &iterationscount;$/;"	m	class:alglib::nleqreport
iterationscount	lib/alglib/solvers.h	/^    ae_int_t iterationscount;$/;"	m	struct:alglib_impl::__anon84
itmp0	lib/alglib/optimization.h	/^    ae_vector itmp0;$/;"	m	struct:alglib_impl::__anon71
itsleft	lib/alglib/optimization.h	/^    ae_int_t itsleft;$/;"	m	struct:alglib_impl::__anon79
ivectorsetlengthatleast	lib/alglib/alglibinternal.cpp	/^void ivectorsetlengthatleast(\/* Integer *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
j	lib/alglib/optimization.h	/^    ae_matrix j;$/;"	m	struct:alglib_impl::__anon73
j	lib/alglib/optimization.h	/^    real_2d_array j;$/;"	m	class:alglib::minlmstate
j	lib/alglib/solvers.h	/^    ae_matrix j;$/;"	m	struct:alglib_impl::__anon83
j	lib/alglib/solvers.h	/^    real_2d_array j;$/;"	m	class:alglib::nleqstate
jacobianellipticfunctions	lib/alglib/specialfunctions.cpp	/^void jacobianellipticfunctions(const double u, const double m, double &sn, double &cn, double &dn, double &ph)$/;"	f	namespace:alglib
jacobianellipticfunctions	lib/alglib/specialfunctions.cpp	/^void jacobianellipticfunctions(double u,$/;"	f	namespace:alglib_impl
jarquebera_jarqueberaapprox	lib/alglib/statistics.cpp	/^static double jarquebera_jarqueberaapprox(ae_int_t n,$/;"	f	namespace:alglib_impl
jarquebera_jarqueberastatistic	lib/alglib/statistics.cpp	/^static void jarquebera_jarqueberastatistic(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
jarquebera_jbcheb	lib/alglib/statistics.cpp	/^static void jarquebera_jbcheb(double x,$/;"	f	namespace:alglib_impl
jarquebera_jbtbl10	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl10(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl100	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl11	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl11(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl12	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl13	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl130	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl130(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl14	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl1401	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl1401(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl15	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl16	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl16(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl17	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl17(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl18	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl18(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl19	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl19(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl20	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl20(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl200	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl200(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl30	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl301	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl301(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl5	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl5(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl50	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl50(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl501	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl501(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl6	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl6(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl65	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl65(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl7	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl7(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl701	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl701(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl8	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl8(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarquebera_jbtbl9	lib/alglib/statistics.cpp	/^static double jarquebera_jbtbl9(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
jarqueberatest	lib/alglib/statistics.cpp	/^void jarqueberatest(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
jarqueberatest	lib/alglib/statistics.cpp	/^void jarqueberatest(const real_1d_array &x, const ae_int_t n, double &p)$/;"	f	namespace:alglib
jcalibrator_	build/include/tool/VisionWindow.h	/^  JointCalibrator* jcalibrator_;$/;"	m	class:VisionWindow
jcalibrator_	tools/UTNaoTool/VisionWindow.h	/^  JointCalibrator* jcalibrator_;$/;"	m	class:VisionWindow
jerseyColorPercent	core/vision/structures/RobotCandidate.h	/^  float jerseyColorPercent, greenWhitePercent, whitePercent, correctPercent;$/;"	m	struct:RobotCandidate
jobNum	tools/behaviorSim/runJob.py	/^jobNum = int(sys.argv[2])$/;"	v
joint	core/memory/MemoryCache.h	/^    JointBlock* joint;$/;"	m	class:MemoryCache
joint	core/vision/VisionBlocks.h	/^    JointBlock*& joint;$/;"	m	class:VisionBlocks
jointAngles	core/vision/structures/Sample.h	/^      float jointAngles[NUM_JOINTS];$/;"	m	struct:Sample
jointChanges	build/include/tool/JointsWindow.h	/^  QLabel* jointChanges;$/;"	m	class:JointsWindow
jointChanges	tools/UTNaoTool/JointsWindow.h	/^  QLabel* jointChanges;$/;"	m	class:JointsWindow
jointCodes	core/motion/rswalk2014/utils/body.hpp	/^   const JointCode jointCodes[] = {$/;"	m	namespace:RSJoints
jointLabels	build/include/tool/JointsWindow.h	/^  QLabel* jointLabels;$/;"	m	class:JointsWindow
jointLabels	tools/UTNaoTool/JointsWindow.h	/^  QLabel* jointLabels;$/;"	m	class:JointsWindow
jointMap	build/include/tool/calibration/JointCalibrator.cpp	/^const vector<int>& JointCalibrator::jointMap() const {$/;"	f	class:JointCalibrator
jointMap	build/include/tool/calibration/JointCalibrator.cpp	/^vector<int>& JointCalibrator::jointMap() {$/;"	f	class:JointCalibrator
jointMap	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^const vector<int>& JointCalibrator::jointMap() const {$/;"	f	class:JointCalibrator
jointMap	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^vector<int>& JointCalibrator::jointMap() {$/;"	f	class:JointCalibrator
jointMapping	core/motion/SpecialMotionParser.cpp	/^int jointMapping[NUM_JOINTS] = {$/;"	v
jointMotions	core/motion/SpecialMotionParser.h	/^     float jointMotions[NUM_JOINTS];$/;"	m	class:SpecialMotion
jointName1	core/motion/SpecialMotionParser.cpp	/^string jointName1[NUM_JOINTS]= {$/;"	v
jointNames	build/include/tool/JointsWindow.h	/^  QString jointNames[NUM_JOINTS+3];$/;"	m	class:JointsWindow
jointNames	core/motion/rswalk2014/utils/body.hpp	/^   const std::string jointNames[] = {$/;"	m	namespace:RSJoints
jointNames	tools/UTNaoTool/JointsWindow.h	/^  QString jointNames[NUM_JOINTS+3];$/;"	m	class:JointsWindow
jointTemps	build/include/tool/JointsWindow.h	/^  QLabel* jointTemps;$/;"	m	class:JointsWindow
jointTemps	tools/UTNaoTool/JointsWindow.h	/^  QLabel* jointTemps;$/;"	m	class:JointsWindow
jointValues	build/include/tool/JointsWindow.h	/^  QLabel* jointValues;$/;"	m	class:JointsWindow
jointValues	tools/UTNaoTool/JointsWindow.h	/^  QLabel* jointValues;$/;"	m	class:JointsWindow
jointValues_	core/common/RobotCalibration.h	/^    float jointValues_[NUM_JOINTS];$/;"	m	class:RobotCalibration
joint_	build/include/tool/simulation/ObservationGenerator.h	/^    JointBlock* joint_;$/;"	m	class:ObservationGenerator
joint_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    JointBlock* joint_;$/;"	m	class:ObservationGenerator
joint_angles	core/python/behaviors/custom_kick.py	/^from memory import sensors, walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles, vision_frame_info$/;"	i
joint_angles	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
joint_angles	core/python/memory.py	/^  def joint_angles(): return core.pythonC.joint_angles_$/;"	f	function:init
joint_angles	core/python/pose.py	/^from memory import walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles$/;"	i
joint_angles_	build/include/tool/MotionSimulation.h	/^  JointBlock *joint_angles_;$/;"	m	class:MotionSimulation
joint_angles_	core/InterpreterModule.h	/^    JointBlock *joint_angles_;$/;"	m	class:InterpreterModule
joint_angles_	core/motion/MotionModule.h	/^  JointBlock *joint_angles_;$/;"	m	class:MotionModule
joint_angles_	core/motion/SpecialMotionModule.h	/^  JointBlock *joint_angles_;$/;"	m	class:SpecialMotionModule
joint_angles_	core/vision/VisionModule.h	/^  JointBlock *joint_angles_;$/;"	m	class:VisionModule
joint_angles_	tools/UTNaoTool/MotionSimulation.h	/^  JointBlock *joint_angles_;$/;"	m	class:MotionSimulation
joint_block_	build/include/tool/VisionWindow.h	/^  JointBlock* joint_block_;$/;"	m	class:VisionWindow
joint_block_	tools/UTNaoTool/VisionWindow.h	/^  JointBlock* joint_block_;$/;"	m	class:VisionWindow
joint_command	core/memory/MemoryCache.h	/^    JointCommandBlock* joint_command;$/;"	m	class:MemoryCache
joint_commands	core/python/behaviors/custom_kick.py	/^from memory import sensors, walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles, vision_frame_info$/;"	i
joint_commands	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
joint_commands	core/python/memory.py	/^  def joint_commands(): return core.pythonC.joint_commands_$/;"	f	function:init
joint_commands	core/python/pose.py	/^from memory import walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles$/;"	i
joint_commands_	build/include/tool/MotionGLWidget.h	/^  JointCommandBlock* joint_commands_;$/;"	m	class:MotionGLWidget
joint_commands_	core/InterpreterModule.h	/^    JointCommandBlock *joint_commands_;$/;"	m	class:InterpreterModule
joint_commands_	tools/UTNaoTool/MotionGLWidget.h	/^  JointCommandBlock* joint_commands_;$/;"	m	class:MotionGLWidget
joint_stiffness_	core/InterpreterModule.h	/^    std::vector<float> joint_values_, sensor_values_, joint_stiffness_;$/;"	m	class:InterpreterModule
joint_temperatures_	core/memory/SensorBlock.h	/^  float joint_temperatures_[NUM_JOINTS];$/;"	m	struct:SensorBlock
joint_time	core/motion/KickParameters.h	/^  float joint_time;$/;"	m	struct:KickStateInfo
joint_values_	build/include/tool/MotionGLWidget.h	/^  JointBlock* joint_values_;$/;"	m	class:MotionGLWidget
joint_values_	core/InterpreterModule.h	/^    std::vector<float> joint_values_, sensor_values_, joint_stiffness_;$/;"	m	class:InterpreterModule
joint_values_	tools/UTNaoTool/MotionGLWidget.h	/^  JointBlock* joint_values_;$/;"	m	class:MotionGLWidget
joints	build/include/tool/calibration/JointDataset.h	/^    std::vector<float> joints;$/;"	m	class:JointMeasurement
joints	core/common/Keyframe.h	/^    std::array<float,NUM_JOINTS> joints;$/;"	m	class:Keyframe
joints	core/motion/rswalk2014/ActionGenerator.hpp	/^      std::vector<JointValues> joints;$/;"	m	class:ActionGenerator
joints	core/motion/rswalk2014/types/SensorValues.hpp	/^   JointValues joints;$/;"	m	struct:SensorValues
joints	tools/UTNaoTool/calibration/JointDataset.h	/^    std::vector<float> joints;$/;"	m	class:JointMeasurement
jointsWnd_	build/include/tool/UTMainWnd.h	/^  JointsWindow* jointsWnd_;$/;"	m	class:UTMainWnd
jointsWnd_	tools/UTNaoTool/UTMainWnd.h	/^  JointsWindow* jointsWnd_;$/;"	m	class:UTMainWnd
joints_	core/kinematics/KinematicsModule.h	/^  JointBlock* joints_;$/;"	m	class:KinematicsModule
joints_	core/motion/rswalk2014/RSWalkModule2014.h	/^        JointBlock *joints_;$/;"	m	class:RSWalkModule2014
joy_fd	build/include/tool/joystickxbox.cpp	/^int joy_fd, *axis=NULL, num_of_axis=0, num_of_buttons=0;$/;"	v
joy_fd	tools/UTNaoTool/joystickxbox.cpp	/^int joy_fd, *axis=NULL, num_of_axis=0, num_of_buttons=0;$/;"	v
jpc	lib/lua/src/lparser.h	/^  int jpc;  \/* list of pending jumps to `pc' *\/$/;"	m	struct:FuncState
js	build/include/tool/joystickxbox.cpp	/^struct js_event js;$/;"	v	typeref:struct:js_event
js	tools/UTNaoTool/joystickxbox.cpp	/^struct js_event js;$/;"	v	typeref:struct:js_event
json	tools/behaviorSim/runCMAES.py	/^import json, sys, os, shutil, subprocess, re, time$/;"	i
judgeCluster	particle_filters/RMCL_particle_filter.hpp	/^    int judgeCluster( int index , int k , double **means)$/;"	f	class:RMCLParticleFilter
jumponcond	lib/lua/src/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
k	lib/alglib/interpolation.h	/^    ae_int_t k;$/;"	m	struct:alglib_impl::__anon58
k	lib/alglib/interpolation.h	/^    ae_int_t k;$/;"	m	struct:alglib_impl::__anon63
k	lib/alglib/interpolation.h	/^    ae_int_t k;$/;"	m	struct:alglib_impl::__anon66
k	lib/alglib/optimization.h	/^    ae_int_t k;$/;"	m	struct:alglib_impl::__anon69
k	lib/alglib/optimization.h	/^    ae_int_t k;$/;"	m	struct:alglib_impl::__anon75
k	lib/alglib/optimization.h	/^    ae_int_t k;$/;"	m	struct:alglib_impl::__anon77
k	lib/alglib/solvers.h	/^    ae_int_t &k;$/;"	m	class:alglib::densesolverlsreport
k	lib/alglib/solvers.h	/^    ae_int_t k;$/;"	m	struct:alglib_impl::__anon82
k	lib/lua/src/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto
k	lib/lua/src/lparser.h	/^  expkind k;$/;"	m	struct:expdesc
k	lib/lua/src/lparser.h	/^  lu_byte k;$/;"	m	struct:upvaldesc
k	tools/testStepSide.py	/^k = math.sqrt(abs(g \/ 185))$/;"	v
k1	core/common/RobotCalibration.h	/^      k1, k2, k3,$/;"	m	class:RobotCalibration
k1_	core/memory/SimEffectorBlock.h	/^  double k1_, k2_, k3_;$/;"	m	struct:SimEffector
k2	core/common/RobotCalibration.h	/^      k1, k2, k3,$/;"	m	class:RobotCalibration
k2_	core/memory/SimEffectorBlock.h	/^  double k1_, k2_, k3_;$/;"	m	struct:SimEffector
k3	core/common/RobotCalibration.h	/^      k1, k2, k3,$/;"	m	class:RobotCalibration
k3_	core/memory/SimEffectorBlock.h	/^  double k1_, k2_, k3_;$/;"	m	struct:SimEffector
kCameraAutoWhiteBalance	core/common/RobotInfo.h	/^  int kCameraAutoWhiteBalance;$/;"	m	struct:CameraParams
kCameraBacklightCompensation	core/common/RobotInfo.h	/^  int kCameraBacklightCompensation;$/;"	m	struct:CameraParams
kCameraBrightness	core/common/RobotInfo.h	/^  int kCameraBrightness;$/;"	m	struct:CameraParams
kCameraContrast	core/common/RobotInfo.h	/^  int kCameraContrast;$/;"	m	struct:CameraParams
kCameraExposure	core/common/RobotInfo.h	/^  int kCameraExposure;$/;"	m	struct:CameraParams
kCameraExposureAuto	core/common/RobotInfo.h	/^  int kCameraExposureAuto;$/;"	m	struct:CameraParams
kCameraGain	core/common/RobotInfo.h	/^  int kCameraGain;$/;"	m	struct:CameraParams
kCameraHue	core/common/RobotInfo.h	/^  int kCameraHue;$/;"	m	struct:CameraParams
kCameraSaturation	core/common/RobotInfo.h	/^  int kCameraSaturation;$/;"	m	struct:CameraParams
kCameraSharpness	core/common/RobotInfo.h	/^  int kCameraSharpness;$/;"	m	struct:CameraParams
kDistance	core/motion/rswalk2014/types/PostInfo.hpp	/^   float kDistance;$/;"	m	struct:PostInfo
kappa	core/opponents/UKF4.h	/^  float kappa;$/;"	m	struct:SmallUKF4Params
kcur	lib/alglib/alglibmisc.h	/^    ae_int_t kcur;$/;"	m	struct:alglib_impl::__anon25
kdtree	lib/alglib/alglibmisc.cpp	/^kdtree::kdtree() : _kdtree_owner() $/;"	f	class:alglib::kdtree
kdtree	lib/alglib/alglibmisc.cpp	/^kdtree::kdtree(const kdtree &rhs):_kdtree_owner(rhs) $/;"	f	class:alglib::kdtree
kdtree	lib/alglib/alglibmisc.h	/^class kdtree : public _kdtree_owner$/;"	c	namespace:alglib
kdtree	lib/alglib/alglibmisc.h	/^} kdtree;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon25
kdtreebuild	lib/alglib/alglibmisc.cpp	/^void kdtreebuild(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
kdtreebuild	lib/alglib/alglibmisc.cpp	/^void kdtreebuild(const real_2d_array &xy, const ae_int_t n, const ae_int_t nx, const ae_int_t ny, const ae_int_t normtype, kdtree &kdt)$/;"	f	namespace:alglib
kdtreebuild	lib/alglib/alglibmisc.cpp	/^void kdtreebuild(const real_2d_array &xy, const ae_int_t nx, const ae_int_t ny, const ae_int_t normtype, kdtree &kdt)$/;"	f	namespace:alglib
kdtreebuildtagged	lib/alglib/alglibmisc.cpp	/^void kdtreebuildtagged(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
kdtreebuildtagged	lib/alglib/alglibmisc.cpp	/^void kdtreebuildtagged(const real_2d_array &xy, const integer_1d_array &tags, const ae_int_t n, const ae_int_t nx, const ae_int_t ny, const ae_int_t normtype, kdtree &kdt)$/;"	f	namespace:alglib
kdtreebuildtagged	lib/alglib/alglibmisc.cpp	/^void kdtreebuildtagged(const real_2d_array &xy, const integer_1d_array &tags, const ae_int_t nx, const ae_int_t ny, const ae_int_t normtype, kdtree &kdt)$/;"	f	namespace:alglib
kdtreequeryaknn	lib/alglib/alglibmisc.cpp	/^ae_int_t kdtreequeryaknn(const kdtree &kdt, const real_1d_array &x, const ae_int_t k, const bool selfmatch, const double eps)$/;"	f	namespace:alglib
kdtreequeryaknn	lib/alglib/alglibmisc.cpp	/^ae_int_t kdtreequeryaknn(const kdtree &kdt, const real_1d_array &x, const ae_int_t k, const double eps)$/;"	f	namespace:alglib
kdtreequeryaknn	lib/alglib/alglibmisc.cpp	/^ae_int_t kdtreequeryaknn(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryknn	lib/alglib/alglibmisc.cpp	/^ae_int_t kdtreequeryknn(const kdtree &kdt, const real_1d_array &x, const ae_int_t k)$/;"	f	namespace:alglib
kdtreequeryknn	lib/alglib/alglibmisc.cpp	/^ae_int_t kdtreequeryknn(const kdtree &kdt, const real_1d_array &x, const ae_int_t k, const bool selfmatch)$/;"	f	namespace:alglib
kdtreequeryknn	lib/alglib/alglibmisc.cpp	/^ae_int_t kdtreequeryknn(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryresultsdistances	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsdistances(const kdtree &kdt, real_1d_array &r)$/;"	f	namespace:alglib
kdtreequeryresultsdistances	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsdistances(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryresultsdistancesi	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsdistancesi(const kdtree &kdt, real_1d_array &r)$/;"	f	namespace:alglib
kdtreequeryresultsdistancesi	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsdistancesi(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryresultstags	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultstags(const kdtree &kdt, integer_1d_array &tags)$/;"	f	namespace:alglib
kdtreequeryresultstags	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultstags(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryresultstagsi	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultstagsi(const kdtree &kdt, integer_1d_array &tags)$/;"	f	namespace:alglib
kdtreequeryresultstagsi	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultstagsi(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryresultsx	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsx(const kdtree &kdt, real_2d_array &x)$/;"	f	namespace:alglib
kdtreequeryresultsx	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsx(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryresultsxi	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsxi(const kdtree &kdt, real_2d_array &x)$/;"	f	namespace:alglib
kdtreequeryresultsxi	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsxi(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryresultsxy	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsxy(const kdtree &kdt, real_2d_array &xy)$/;"	f	namespace:alglib
kdtreequeryresultsxy	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsxy(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryresultsxyi	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsxyi(const kdtree &kdt, real_2d_array &xy)$/;"	f	namespace:alglib
kdtreequeryresultsxyi	lib/alglib/alglibmisc.cpp	/^void kdtreequeryresultsxyi(kdtree* kdt,$/;"	f	namespace:alglib_impl
kdtreequeryrnn	lib/alglib/alglibmisc.cpp	/^ae_int_t kdtreequeryrnn(const kdtree &kdt, const real_1d_array &x, const double r)$/;"	f	namespace:alglib
kdtreequeryrnn	lib/alglib/alglibmisc.cpp	/^ae_int_t kdtreequeryrnn(const kdtree &kdt, const real_1d_array &x, const double r, const bool selfmatch)$/;"	f	namespace:alglib
kdtreequeryrnn	lib/alglib/alglibmisc.cpp	/^ae_int_t kdtreequeryrnn(kdtree* kdt,$/;"	f	namespace:alglib_impl
keep_arms_out_	core/memory/WalkRequestBlock.h	/^  bool keep_arms_out_;$/;"	m	struct:WalkRequestBlock
keeperClearing	core/memory/BehaviorBlock.h	/^  bool keeperClearing;$/;"	m	struct:BehaviorBlock
keeperDiving	core/memory/BehaviorBlock.h	/^  int keeperDiving;$/;"	m	struct:BehaviorBlock
keeperRelBallPos	core/memory/BehaviorBlock.h	/^  Point2D keeperRelBallPos;$/;"	m	struct:BehaviorBlock
keeperRelBallVel	core/memory/BehaviorBlock.h	/^  Point2D keeperRelBallVel;$/;"	m	struct:BehaviorBlock
keeperSave1	core/python/cfgpose.py	/^keeperSave1 = dict()$/;"	v
keeperSave2	core/python/cfgpose.py	/^keeperSave2 = dict()$/;"	v
keeperSave3	core/python/cfgpose.py	/^keeperSave3 = dict()$/;"	v
keeperSaveArmBack	core/python/cfgpose.py	/^keeperSaveArmBack = dict()$/;"	v
keeperSaveArmBack2	core/python/cfgpose.py	/^keeperSaveArmBack2 = dict()$/;"	v
keeperSaveArmForward	core/python/cfgpose.py	/^keeperSaveArmForward = dict()$/;"	v
keeperSaveArmForward2	core/python/cfgpose.py	/^keeperSaveArmForward2 = dict()$/;"	v
keeperSaveArmOut	core/python/cfgpose.py	/^keeperSaveArmOut = dict()$/;"	v
key	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		T key;$/;"	m	class:YAML::TypedKeyNotFound
key	tools/behaviorSim/cma.py	/^    def key(self, x):$/;"	m	class:SolutionDict
key	tools/behaviorSim/cma.py	/^    def key(self, x):$/;"	m	class:SolutionDictOld
key2tval	lib/lua/src/ltable.h	/^#define key2tval(/;"	d
keyPressEvent	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::keyPressEvent(QKeyEvent *event) {$/;"	f	class:LogEditorWindow
keyPressEvent	build/include/tool/LogWindow.cpp	/^void LogWindow::keyPressEvent(QKeyEvent *event) {$/;"	f	class:LogWindow
keyPressEvent	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::keyPressEvent(QKeyEvent *event) {$/;"	f	class:MotionGLWidget
keyPressEvent	build/include/tool/PlotWindow.cpp	/^void PlotWindow::keyPressEvent(QKeyEvent *event) {$/;"	f	class:PlotWindow
keyPressEvent	build/include/tool/RobotControllerWidget.cpp	/^void RobotControllerWidget::keyPressEvent(QKeyEvent* kevent) {$/;"	f	class:RobotControllerWidget
keyPressEvent	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::keyPressEvent(QKeyEvent* kevent) {$/;"	f	class:WorldGLWidget
keyPressEvent	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::keyPressEvent(QKeyEvent *event) {$/;"	f	class:LogEditorWindow
keyPressEvent	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::keyPressEvent(QKeyEvent *event) {$/;"	f	class:LogWindow
keyPressEvent	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::keyPressEvent(QKeyEvent *event) {$/;"	f	class:MotionGLWidget
keyPressEvent	tools/UTNaoTool/PlotWindow.cpp	/^void PlotWindow::keyPressEvent(QKeyEvent *event) {$/;"	f	class:PlotWindow
keyPressEvent	tools/UTNaoTool/RobotControllerWidget.cpp	/^void RobotControllerWidget::keyPressEvent(QKeyEvent* kevent) {$/;"	f	class:RobotControllerWidget
keyPressEvent	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::keyPressEvent(QKeyEvent* kevent) {$/;"	f	class:WorldGLWidget
keyReleaseEvent	build/include/tool/RobotControllerWidget.cpp	/^void RobotControllerWidget::keyReleaseEvent(QKeyEvent* kevent) {$/;"	f	class:RobotControllerWidget
keyReleaseEvent	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::keyReleaseEvent(QKeyEvent* kevent) {$/;"	f	class:WorldGLWidget
keyReleaseEvent	tools/UTNaoTool/RobotControllerWidget.cpp	/^void RobotControllerWidget::keyReleaseEvent(QKeyEvent* kevent) {$/;"	f	class:RobotControllerWidget
keyReleaseEvent	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::keyReleaseEvent(QKeyEvent* kevent) {$/;"	f	class:WorldGLWidget
key_names_with_annotation	tools/behaviorSim/cma.py	/^    key_names_with_annotation = ('std', 'xmean')$/;"	v	class:DEAPCMADataLogger
keyframe	build/include/tool/KeyframeWidget.h	/^    const Keyframe& keyframe() { return keyframe_; }$/;"	f	class:KeyframeItem
keyframe	tools/UTNaoTool/KeyframeWidget.h	/^    const Keyframe& keyframe() { return keyframe_; }$/;"	f	class:KeyframeItem
keyframeTimer_	build/include/tool/KeyframeWidget.h	/^    QTimer* keyframeTimer_;$/;"	m	class:KeyframeWidget
keyframeTimer_	tools/UTNaoTool/KeyframeWidget.h	/^    QTimer* keyframeTimer_;$/;"	m	class:KeyframeWidget
keyframe_	build/include/tool/KeyframeWidget.h	/^    Keyframe keyframe_;$/;"	m	class:KeyframeItem
keyframe_	core/motion/KickModule.h	/^    int keyframe_;$/;"	m	class:KickModule
keyframe_	tools/UTNaoTool/KeyframeWidget.h	/^    Keyframe keyframe_;$/;"	m	class:KeyframeItem
keyframes	core/common/Keyframe.h	/^    std::vector<Keyframe> keyframes;$/;"	m	class:KeyframeSequence
kfConfig	build/include/tool/ToolConfig.h	/^    KeyframeConfig kfConfig;$/;"	m	class:ToolConfig
kfConfig	tools/UTNaoTool/ToolConfig.h	/^    KeyframeConfig kfConfig;$/;"	m	class:ToolConfig
kfconfig_	build/include/tool/KeyframeWidget.h	/^    KeyframeConfig kfconfig_;$/;"	m	class:KeyframeWidget
kfconfig_	tools/UTNaoTool/KeyframeWidget.h	/^    KeyframeConfig kfconfig_;$/;"	m	class:KeyframeWidget
kick	core/python/behaviors/win.py	/^  kick=5$/;"	v	class:AttackingStates
kick2_x_	core/memory/KickModuleBlock.h	/^  float kick2_x_;$/;"	m	struct:KickModuleBlock
kick2_y_	core/memory/KickModuleBlock.h	/^  float kick2_y_;$/;"	m	struct:KickModuleBlock
kickAimPose	core/python/cfgpose.py	/^kickAimPose = dict()$/;"	v
kickBall	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::kickBall(){$/;"	f	class:BehaviorSimulation
kickBall	build/include/tool/simulation/GoalieSimulation.cpp	/^void GoalieSimulation::kickBall() {$/;"	f	class:GoalieSimulation
kickBall	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::kickBall(){$/;"	f	class:BehaviorSimulation
kickBall	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^void GoalieSimulation::kickBall() {$/;"	f	class:GoalieSimulation
kickChoice	core/memory/BehaviorBlock.h	/^  int kickChoice;$/;"	m	struct:BehaviorBlock
kickChoice	core/memory/BehaviorBlock.h	/^  int kickChoice;$/;"	m	struct:PassInfo
kickDirection	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float kickDirection;$/;"	m	struct:ActionCommand::Body
kickDistance	core/memory/BehaviorBlock.h	/^  float kickDistance;$/;"	m	struct:BehaviorBlock
kickErrorFactor	build/include/tool/simulation/SimulatedPlayer.h	/^  float kickErrorFactor;$/;"	m	class:SimulatedPlayer
kickErrorFactor	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float kickErrorFactor;$/;"	m	class:SimulatedPlayer
kickEvaluations	core/memory/BehaviorBlock.h	/^  KickEvaluation kickEvaluations[NUM_KICKS];$/;"	m	struct:BehaviorBlock
kickFullTime	build/include/tool/simulation/SimulatedPlayer.h	/^  float kickFullTime;$/;"	m	class:SimulatedPlayer
kickFullTime	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float kickFullTime;$/;"	m	class:SimulatedPlayer
kickGridSize	build/include/tool/UTOpenGL/GLDrawer.h	/^    int kickGridSize;$/;"	m	class:GLDrawer
kickGridSize	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    int kickGridSize;$/;"	m	class:GLDrawer
kickHeading	core/memory/BehaviorBlock.h	/^  float kickHeading;$/;"	m	struct:BehaviorBlock
kickHeading	core/memory/OdometryBlock.h	/^  float kickHeading;$/;"	m	struct:OdometryBlock
kickHitSeconds	build/include/tool/simulation/SimulatedPlayer.h	/^  float kickHitSeconds;$/;"	m	class:SimulatedPlayer
kickHitSeconds	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float kickHitSeconds;$/;"	m	class:SimulatedPlayer
kickHitTime	build/include/tool/simulation/SimulatedPlayer.h	/^  float kickHitTime;$/;"	m	class:SimulatedPlayer
kickHitTime	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float kickHitTime;$/;"	m	class:SimulatedPlayer
kickNames	core/common/Kicks.h	/^const std::string kickNames[] = { $/;"	v
kickOffTeam	core/communications/RoboCupGameControlData.h	/^  uint8_t kickOffTeam;          \/\/ the team number of the next team to kick off or DROPBALL$/;"	m	struct:RoboCupGameControlData
kickPhase	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float kickPhase;$/;"	m	class:Walk2014Generator
kickRank	core/memory/BehaviorBlock.h	/^  float kickRank;$/;"	m	struct:BehaviorBlock
kickSeconds	build/include/tool/simulation/SimulatedPlayer.h	/^  float kickSeconds;$/;"	m	class:SimulatedPlayer
kickSeconds	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float kickSeconds;$/;"	m	class:SimulatedPlayer
kickSpec_	core/memory/KickEngineBlock.h	/^  Kick_Spec kickSpec_; \/\/ middle, inside, or outside?$/;"	m	struct:KickEngineBlock
kickStateNames	core/memory/KickEngineBlock.h	/^const std::string kickStateNames[] = {$/;"	v
kickT	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float kickT;$/;"	m	class:Walk2014Generator
kickTestUsingCluster	core/memory/BehaviorBlock.h	/^  bool kickTestUsingCluster;$/;"	m	struct:BehaviorBlock
kickType	core/memory/BehaviorParamBlock.h	/^  kicks kickType;$/;"	m	struct:SetPlay
kickTypeNames	core/memory/KickRequestBlock.h	/^const std::string kickTypeNames[] = {$/;"	v
kickVelocity	core/memory/OdometryBlock.h	/^  float kickVelocity;$/;"	m	struct:OdometryBlock
kick_	core/MotionCore.h	/^  KickModule *kick_;$/;"	m	class:MotionCore
kick_aborted_	core/memory/KickRequestBlock.h	/^  bool kick_aborted_;$/;"	m	struct:KickRequestBlock
kick_angle_	core/motion/rswalk2014/RSWalkModule2014.h	/^        float kick_angle_;$/;"	m	class:RSWalkModule2014
kick_distance_	core/memory/WalkRequestBlock.h	/^  float kick_distance_;$/;"	m	struct:WalkRequestBlock
kick_distance_	core/motion/rswalk2014/RSWalkModule2014.h	/^        float kick_distance_;$/;"	m	class:RSWalkModule2014
kick_engine_	build/include/tool/MotionGLWidget.h	/^  KickEngineBlock* kick_engine_;$/;"	m	class:MotionGLWidget
kick_engine_	tools/UTNaoTool/MotionGLWidget.h	/^  KickEngineBlock* kick_engine_;$/;"	m	class:MotionGLWidget
kick_engine_mem_	build/include/tool/MotionSimulation.h	/^  KickEngineBlock *kick_engine_mem_;$/;"	m	class:MotionSimulation
kick_engine_mem_	tools/UTNaoTool/MotionSimulation.h	/^  KickEngineBlock *kick_engine_mem_;$/;"	m	class:MotionSimulation
kick_foot	core/motion/rswalk2014/RSWalkModule2014.h	/^	ActionCommand::Body::Foot kick_foot;$/;"	m	class:RSWalkModule2014
kick_heading_	core/memory/WalkRequestBlock.h	/^  float kick_heading_;$/;"	m	struct:WalkRequestBlock
kick_height_	core/motion/KickParameters.h	/^  float kick_height_;$/;"	m	struct:KickParameters
kick_joint_time_	core/memory/KickEngineBlock.h	/^  float kick_joint_time_;$/;"	m	struct:KickEngineBlock
kick_leg_	core/memory/KickRequestBlock.h	/^  Kick::Leg kick_leg_;$/;"	m	struct:KickRequestBlock
kick_module_	build/include/tool/MotionGLWidget.h	/^  KickModuleBlock* kick_module_;$/;"	m	class:MotionGLWidget
kick_module_	tools/UTNaoTool/MotionGLWidget.h	/^  KickModuleBlock* kick_module_;$/;"	m	class:MotionGLWidget
kick_module_mem_	build/include/tool/MotionSimulation.h	/^  KickModuleBlock *kick_module_mem_;$/;"	m	class:MotionSimulation
kick_module_mem_	tools/UTNaoTool/MotionSimulation.h	/^  KickModuleBlock *kick_module_mem_;$/;"	m	class:MotionSimulation
kick_params	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
kick_params	core/python/memory.py	/^  def kick_params(): return core.pythonC.kick_params_$/;"	f	function:init
kick_params_	build/include/tool/MotionGLWidget.h	/^  KickParamBlock* kick_params_;$/;"	m	class:MotionGLWidget
kick_params_	build/include/tool/MotionSimulation.h	/^  KickParamBlock* kick_params_;$/;"	m	class:MotionSimulation
kick_params_	core/InterpreterModule.h	/^    KickParamBlock *kick_params_;$/;"	m	class:InterpreterModule
kick_params_	core/MotionCore.h	/^  KickParamBlock* kick_params_;$/;"	m	class:MotionCore
kick_params_	tools/UTNaoTool/MotionGLWidget.h	/^  KickParamBlock* kick_params_;$/;"	m	class:MotionGLWidget
kick_params_	tools/UTNaoTool/MotionSimulation.h	/^  KickParamBlock* kick_params_;$/;"	m	class:MotionSimulation
kick_request	core/memory/MemoryCache.h	/^    KickRequestBlock* kick_request;$/;"	m	class:MemoryCache
kick_request	core/python/behaviors/custom_kick.py	/^from memory import sensors, walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles, vision_frame_info$/;"	i
kick_request	core/python/memory.py	/^  def kick_request(): return core.pythonC.kick_request_$/;"	f	function:init
kick_request	core/python/pose.py	/^from memory import walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles$/;"	i
kick_request_	build/include/tool/MotionGLWidget.h	/^  KickRequestBlock* kick_request_;$/;"	m	class:MotionGLWidget
kick_request_	build/include/tool/MotionSimulation.h	/^  KickRequestBlock *kick_request_;$/;"	m	class:MotionSimulation
kick_request_	core/InterpreterModule.h	/^    KickRequestBlock *kick_request_;$/;"	m	class:InterpreterModule
kick_request_	core/MotionCore.h	/^  KickRequestBlock* kick_request_;$/;"	m	class:MotionCore
kick_request_	core/motion/SpecialMotionModule.h	/^  KickRequestBlock *kick_request_;$/;"	m	class:SpecialMotionModule
kick_request_	core/motion/rswalk2014/RSWalkModule2014.h	/^        KickRequestBlock *kick_request_;$/;"	m	class:RSWalkModule2014
kick_request_	tools/UTNaoTool/MotionGLWidget.h	/^  KickRequestBlock* kick_request_;$/;"	m	class:MotionGLWidget
kick_request_	tools/UTNaoTool/MotionSimulation.h	/^  KickRequestBlock *kick_request_;$/;"	m	class:MotionSimulation
kick_running_	core/memory/KickRequestBlock.h	/^  bool kick_running_;$/;"	m	struct:KickRequestBlock
kick_sent	core/python/behaviors/win.py	/^kick_sent = False$/;"	v
kick_stance_spline_	build/include/tool/MotionGLWidget.h	/^  Spline3D kick_stance_spline_;$/;"	m	class:MotionGLWidget
kick_stance_spline_	tools/UTNaoTool/MotionGLWidget.h	/^  Spline3D kick_stance_spline_;$/;"	m	class:MotionGLWidget
kick_stance_spline_pts_	build/include/tool/MotionGLWidget.h	/^  std::vector<Vector3<float> > kick_stance_spline_pts_;$/;"	m	class:MotionGLWidget
kick_stance_spline_pts_	tools/UTNaoTool/MotionGLWidget.h	/^  std::vector<Vector3<float> > kick_stance_spline_pts_;$/;"	m	class:MotionGLWidget
kick_start_time	core/python/behaviors/win.py	/^kick_start_time = 0$/;"	v
kick_start_time_	core/memory/KickModuleBlock.h	/^  float kick_start_time_;$/;"	m	struct:KickModuleBlock
kick_step_	core/memory/WalkRequestBlock.h	/^  Pose2D kick_step_;$/;"	m	struct:WalkRequestBlock
kick_step_ref_x_	core/memory/WalkRequestBlock.h	/^  float kick_step_ref_x_;$/;"	m	struct:WalkRequestBlock
kick_swing_spline_	build/include/tool/MotionGLWidget.h	/^  Spline3D kick_swing_spline_;$/;"	m	class:MotionGLWidget
kick_swing_spline_	tools/UTNaoTool/MotionGLWidget.h	/^  Spline3D kick_swing_spline_;$/;"	m	class:MotionGLWidget
kick_swing_spline_pts_	build/include/tool/MotionGLWidget.h	/^  std::vector<Vector3<float> > kick_swing_spline_pts_;$/;"	m	class:MotionGLWidget
kick_swing_spline_pts_	tools/UTNaoTool/MotionGLWidget.h	/^  std::vector<Vector3<float> > kick_swing_spline_pts_;$/;"	m	class:MotionGLWidget
kick_time_	core/memory/KickEngineBlock.h	/^  float kick_time_;$/;"	m	struct:KickEngineBlock
kick_time_	core/motion/KickParameters.h	/^  float kick_time_;$/;"	m	struct:KickParameters
kick_type_	core/memory/KickModuleBlock.h	/^  Kick::Type kick_type_;$/;"	m	struct:KickModuleBlock
kick_type_	core/memory/KickRequestBlock.h	/^  Kick::Type kick_type_;$/;"	m	struct:KickRequestBlock
kick_with_left_	core/memory/WalkRequestBlock.h	/^  bool kick_with_left_;$/;"	m	struct:WalkRequestBlock
kickoffArea	core/memory/BehaviorParamBlock.h	/^  FieldAreaRoleConfig kickoffArea;$/;"	m	struct:RoleStrategy
kicks	core/common/Kicks.h	/^enum kicks {$/;"	g
kidnapped	core/python/behaviors/walk_to_center.py	/^    def kidnapped(self):$/;"	m	class:Playing.WalkToCenter
kidnapped	core/python/behaviors/walk_to_center_2.py	/^    def kidnapped(self):$/;"	m	class:Playing.WalkToCenter
kill	core/python/UTdebug.py	/^import logging; logging.disable(logging.ERROR) # kill hashlib errors from random$/;"	i
kinematics	core/motion/rswalk2014/BodyModel.hpp	/^      Kinematics *kinematics;$/;"	m	class:BodyModel
kinematics	core/motion/rswalk2014/RSWalkModule2014.h	/^	Kinematics kinematics;$/;"	m	class:RSWalkModule2014
kinematicsDistance	core/vision/structures/RobotCandidate.h	/^  float widthDistance, heightDistance, kinematicsDistance;$/;"	m	struct:RobotCandidate
kinematics_	core/MotionCore.h	/^  KinematicsModule *kinematics_;$/;"	m	class:MotionCore
kmeans	particle_filters/RMCL_particle_filter.hpp	/^    ParticleVector kmeans( double ratio )$/;"	f	class:RMCLParticleFilter
kmeans_selectcenterpp	lib/alglib/dataanalysis.cpp	/^static ae_bool kmeans_selectcenterpp(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
kmeansgenerate	lib/alglib/dataanalysis.cpp	/^void kmeansgenerate(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
kmeansgenerate	lib/alglib/dataanalysis.cpp	/^void kmeansgenerate(const real_2d_array &xy, const ae_int_t npoints, const ae_int_t nvars, const ae_int_t k, const ae_int_t restarts, ae_int_t &info, real_2d_array &c, integer_1d_array &xyc)$/;"	f	namespace:alglib
kname	lib/lua/src/ldebug.c	/^static const char *kname (Proto *p, int c) {$/;"	f	file:
kneePitchL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float kneePitchL, kneePitchR, lastKneePitch;$/;"	m	class:Walk2014Generator
kneePitchR	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float kneePitchL, kneePitchR, lastKneePitch;$/;"	m	class:Walk2014Generator
kneeded	lib/alglib/alglibmisc.h	/^    ae_int_t kneeded;$/;"	m	struct:alglib_impl::__anon25
kpressed_	build/include/tool/WorldGLWidget.h	/^    std::set<int> kpressed_, mdragged_;$/;"	m	class:WorldGLWidget
kpressed_	tools/UTNaoTool/WorldGLWidget.h	/^    std::set<int> kpressed_, mdragged_;$/;"	m	class:WorldGLWidget
kwDistanceDiscrepancy	core/vision/structures/BallCandidate.h	/^  float kwDistanceDiscrepancy;$/;"	m	struct:BallCandidate
l	lib/lua/src/lobject.h	/^    } l;$/;"	m	union:UpVal::__anon90	typeref:struct:UpVal::__anon90::__anon91
l	lib/lua/src/lobject.h	/^  LClosure l;$/;"	m	union:Closure
l	lib/lua/src/lstate.c	/^  lua_State l;$/;"	m	struct:LG	file:
l10Bot	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float l10Bot = d1Bot * sin(a1Bot);$/;"	v	file:
l10Top	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float l10Top = d1Top * sin(a1Top);$/;"	v	file:
l_G	lib/lua/src/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State
l_alloc	lib/lua/src/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_ankle_pitch_after_	core/motion/KickParameters.h	/^  float l_ankle_pitch_after_;$/;"	m	struct:KickParameters
l_ankle_pitch_before_	core/motion/KickParameters.h	/^  float l_ankle_pitch_before_;$/;"	m	struct:KickParameters
l_ankle_roll_after_	core/motion/KickParameters.h	/^  float l_ankle_roll_after_;$/;"	m	struct:KickParameters
l_ankle_roll_before_	core/motion/KickParameters.h	/^  float l_ankle_roll_before_;$/;"	m	struct:KickParameters
l_buf	lib/zlib/deflate.h	/^    uchf *l_buf;          \/* buffer for literals or lengths *\/$/;"	m	struct:internal_state
l_d	lib/lua/src/luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast
l_desc	lib/zlib/deflate.h	/^    struct tree_desc_s l_desc;               \/* desc. for literal tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::tree_desc_s
l_gt	lib/lua/src/lstate.h	/^  TValue l_gt;  \/* table of globals *\/$/;"	m	struct:lua_State
l_hip_pitch_after_	core/motion/KickParameters.h	/^  float l_hip_pitch_after_;$/;"	m	struct:KickParameters
l_hip_pitch_before_	core/motion/KickParameters.h	/^  float l_hip_pitch_before_;$/;"	m	struct:KickParameters
l_hip_roll_after_	core/motion/KickParameters.h	/^  float l_hip_roll_after_;$/;"	m	struct:KickParameters
l_hip_roll_before_	core/motion/KickParameters.h	/^  float l_hip_roll_before_;$/;"	m	struct:KickParameters
l_isfalse	lib/lua/src/lobject.h	/^#define l_isfalse(/;"	d
l_knee_pitch_after_	core/motion/KickParameters.h	/^  float l_knee_pitch_after_;$/;"	m	struct:KickParameters
l_knee_pitch_before_	core/motion/KickParameters.h	/^  float l_knee_pitch_before_;$/;"	m	struct:KickParameters
l_l	lib/lua/src/luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast
l_mem	lib/lua/src/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_message	lib/lua/src/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_registry	lib/lua/src/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State
l_setbit	lib/lua/src/lgc.h	/^#define l_setbit(/;"	d
l_strcmp	lib/lua/src/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
l_uacNumber	lib/lua/src/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
labels	build/include/tool/StateWindow.h	/^    QLabel* labels;$/;"	m	class:StateWindow
labels	tools/UTNaoTool/StateWindow.h	/^    QLabel* labels;$/;"	m	class:StateWindow
laction	lib/lua/src/lua.c	/^static void laction (int i) {$/;"	f	file:
laguerrecalculate	lib/alglib/specialfunctions.cpp	/^double laguerrecalculate(ae_int_t n, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
laguerrecalculate	lib/alglib/specialfunctions.cpp	/^double laguerrecalculate(const ae_int_t n, const double x)$/;"	f	namespace:alglib
laguerrecoefficients	lib/alglib/specialfunctions.cpp	/^void laguerrecoefficients(ae_int_t n,$/;"	f	namespace:alglib_impl
laguerrecoefficients	lib/alglib/specialfunctions.cpp	/^void laguerrecoefficients(const ae_int_t n, real_1d_array &c)$/;"	f	namespace:alglib
laguerresum	lib/alglib/specialfunctions.cpp	/^double laguerresum(\/* Real    *\/ ae_vector* c,$/;"	f	namespace:alglib_impl
laguerresum	lib/alglib/specialfunctions.cpp	/^double laguerresum(const real_1d_array &c, const ae_int_t n, const double x)$/;"	f	namespace:alglib
lambda	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  double lambda;$/;"	m	class:UnscentedKalmanFilter
lambda	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  double lambda;$/;"	m	class:UnscentedKalmanFilter
lambdav	lib/alglib/optimization.h	/^    double lambdav;$/;"	m	struct:alglib_impl::__anon73
landmarkLocation	core/common/Bowdoin14Field.h	/^const Point2D landmarkLocation[] = {$/;"	v
landmarkLocation	core/common/Field.h	/^const Point2D landmarkLocation[] = {$/;"	v
landmarkLocation	core/common/RC2013Field.h	/^const Point2D landmarkLocation[] = {$/;"	v
landmarkLocation	core/common/UTField.h	/^const Point2D landmarkLocation[] = {$/;"	v
lannotations_	build/include/tool/annotations/AnnotationGroup.h	/^        std::vector<LocalizationAnnotation*> lannotations_;$/;"	m	class:AnnotationGroup
lannotations_	tools/UTNaoTool/annotations/AnnotationGroup.h	/^        std::vector<LocalizationAnnotation*> lannotations_;$/;"	m	class:AnnotationGroup
lapi_c	lib/lua/src/lapi.c	/^#define lapi_c$/;"	d	file:
lapi_h	lib/lua/src/lapi.h	/^#define lapi_h$/;"	d
laplace	interfaces/sim_spark/Random.h	/^   float laplace( float a = 0., float b = 1. )   \/\/ Laplace$/;"	f	class:Random
largeGapHeading	core/memory/BehaviorBlock.h	/^  float smallGapHeading, largeGapHeading;$/;"	m	struct:BehaviorBlock
last	core/sensor/ButtonModule.h	/^    float last;$/;"	m	struct:ButtonModule::ButtonInfo
last	lib/zlib/inflate.h	/^    int last;                   \/* true if processing last block *\/$/;"	m	struct:inflate_state
lastForward	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float lastForward;                                      \/\/ previous forward value accepted$/;"	m	class:Walk2014Generator
lastFrameUpdated	core/opponents/UKF4.h	/^  int lastFrameUpdated;$/;"	m	class:UKF4
lastInnov2	core/opponents/UKF4.h	/^  float lastInnov2;$/;"	m	class:UKF4
lastIsLeftPhase	core/motion/rswalk2014/BodyModel.hpp	/^      bool lastIsLeftPhase;$/;"	m	class:BodyModel
lastKeyframe_	build/include/tool/MotionGLWidget.h	/^  Keyframe lastKeyframe_;$/;"	m	class:MotionGLWidget
lastKeyframe_	tools/UTNaoTool/MotionGLWidget.h	/^  Keyframe lastKeyframe_;$/;"	m	class:MotionGLWidget
lastKick	build/include/tool/simulation/BehaviorSimulation.h	/^    int lastKick;$/;"	m	class:BehaviorSimulation
lastKick	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    int lastKick;$/;"	m	class:BehaviorSimulation
lastKickForward	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float lastKickForward;$/;"	m	class:Walk2014Generator
lastKickTime	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float lastKickTime;$/;"	m	class:Walk2014Generator
lastKickX	build/include/tool/simulation/BehaviorSimulation.h	/^    float lastKickX;$/;"	m	class:BehaviorSimulation
lastKickX	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    float lastKickX;$/;"	m	class:BehaviorSimulation
lastKneePitch	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float kneePitchL, kneePitchR, lastKneePitch;$/;"	m	class:Walk2014Generator
lastLeft	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float left, lastLeft;                                   \/\/ Omnidirectional walk left\/right$/;"	m	class:Walk2014Generator
lastOutBy	core/memory/GameStateBlock.h	/^  int lastOutBy;           $/;"	m	struct:GameStateBlock
lastPendulumModel	core/motion/rswalk2014/BodyModel.hpp	/^      PendulumModel lastPendulumModel;$/;"	m	class:BodyModel
lastPoint	build/include/tool/simulation/SimulationPath.h	/^    const Point2D& lastPoint() { return last_; }$/;"	f	class:SimulationPath
lastPoint	tools/UTNaoTool/simulation/SimulationPath.h	/^    const Point2D& lastPoint() { return last_; }$/;"	f	class:SimulationPath
lastSearchTurnTime	core/memory/BehaviorBlock.h	/^  float lastSearchTurnTime;$/;"	m	struct:BehaviorBlock
lastSide	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float lastSide;$/;"	m	class:Walk2014Generator
lastState	core/python/primary_bvr.py	/^lastState = None$/;"	v
lastStateChangeFromButton	core/memory/GameStateBlock.h	/^  bool lastStateChangeFromButton;$/;"	m	struct:GameStateBlock
lastStateEstimates	core/opponents/UKF4.h	/^  NMatrix lastStateEstimates;$/;"	m	class:UKF4
lastStateStandardDeviations	core/opponents/UKF4.h	/^  NMatrix lastStateStandardDeviations;$/;"	m	class:UKF4
lastStepFrequencyDifferences	core/motion/rswalk2014/BodyModel.hpp	/^      std::list<float> lastStepFrequencyDifferences;$/;"	m	class:BodyModel
lastTimeLeftPenalized	core/memory/GameStateBlock.h	/^  float lastTimeLeftPenalized;$/;"	m	struct:GameStateBlock
lastTurn	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float turn, lastTurn;                                             \/\/ Omnidirectional walk CW \/ CCW$/;"	m	class:Walk2014Generator
lastZMPL	core/motion/rswalk2014/BodyModel.hpp	/^      float lastZMPL;$/;"	m	class:BodyModel
last_	build/include/tool/simulation/SimulationPath.h	/^    Point2D last_;$/;"	m	class:SimulationPath
last_	tools/UTNaoTool/simulation/SimulationPath.h	/^    Point2D last_;$/;"	m	class:SimulationPath
last_PID_angular_velocity_0	core/python/behaviors/pid_distance_angle.py	/^last_PID_angular_velocity_0 = 0$/;"	v
last_PID_angular_velocity_1	core/python/behaviors/pid_distance_angle.py	/^last_PID_angular_velocity_1 = 0$/;"	v
last_PID_angular_velocity_2	core/python/behaviors/pid_distance_angle.py	/^last_PID_angular_velocity_2 = 0$/;"	v
last_PID_walk_velocity_0	core/python/behaviors/pid_distance_angle.py	/^last_PID_walk_velocity_0 = 0$/;"	v
last_PID_walk_velocity_1	core/python/behaviors/pid_distance_angle.py	/^last_PID_walk_velocity_1 = 0$/;"	v
last_PID_walk_velocity_2	core/python/behaviors/pid_distance_angle.py	/^last_PID_walk_velocity_2 = 0$/;"	v
last_action	lib/alglib/ap.h	/^    ae_int64_t     last_action;$/;"	m	struct:alglib_impl::__anon32
last_action	lib/alglib/ap.h	/^    ae_int64_t     last_action;$/;"	m	struct:alglib_impl::__anon33
last_action	lib/alglib/ap.h	/^    ae_int64_t     last_action;$/;"	m	struct:alglib_impl::__anon34
last_av_px	core/python/behaviors/keeper_2.py	/^last_av_px = [0]*last_inf_constant$/;"	v
last_av_px	core/python/behaviors/win.py	/^last_av_px = [0]*last_inf_constant$/;"	v
last_ball_heading	core/python/behaviors/head_tracking.py	/^last_ball_heading = 0$/;"	v
last_ball_heading	core/python/behaviors/pid_distance_angle.py	/^last_ball_heading = 0$/;"	v
last_ball_seen_time	core/python/behaviors/win.py	/^last_ball_seen_time = 0$/;"	v
last_ball_time	core/python/behaviors/head_tracking.py	/^last_ball_time = 0$/;"	v
last_ball_time	core/python/behaviors/pid_distance_angle.py	/^last_ball_time = 0$/;"	v
last_bearing	core/python/behaviors/keeper_2.py	/^last_bearing = [0]*last_inf_constant$/;"	v
last_bearing	core/python/behaviors/win.py	/^last_bearing = [0]*last_inf_constant$/;"	v
last_block	lib/alglib/ap.h	/^    ae_dyn_block last_block;$/;"	m	struct:alglib_impl::__anon35
last_calibration_write	core/motion/rswalk2014/RSWalkModule2014.h	/^	double last_calibration_write = -1.0;$/;"	m	class:RSWalkModule2014
last_carrot	core/python/behaviors/head_tracking.py	/^last_carrot = 0$/;"	v
last_carrot	core/python/behaviors/pid_distance_angle.py	/^last_carrot = 0$/;"	v
last_direction_change_time	core/python/behaviors/stamp_in_circles.py	/^last_direction_change_time = 0.$/;"	v
last_direction_change_time	core/python/behaviors/walk_to_center.py	/^last_direction_change_time = 0.$/;"	v
last_direction_change_time	core/python/behaviors/walk_to_center_2.py	/^last_direction_change_time = 0.$/;"	v
last_distance	core/python/behaviors/keeper_2.py	/^last_distance = [0]*last_inf_constant$/;"	v
last_distance	core/python/behaviors/win.py	/^last_distance = [0]*last_inf_constant$/;"	v
last_eob_len	lib/zlib/deflate.h	/^    int last_eob_len;   \/* bit length of EOB code for last block *\/$/;"	m	struct:internal_state
last_error	lib/alglib/ap.h	/^    ae_error_type volatile last_error;$/;"	m	struct:alglib_impl::__anon35
last_flush	lib/zlib/deflate.h	/^    int   last_flush;    \/* value of flush param for previous deflate call *\/$/;"	m	struct:internal_state
last_frame_processed_	core/MotionCore.h	/^  unsigned int last_frame_processed_;$/;"	m	class:MotionCore
last_frame_processed_	core/VisionCore.h	/^  unsigned last_frame_processed_;$/;"	m	class:VisionCore
last_frame_time	core/python/behaviors/walk_to_center.py	/^last_frame_time = 0$/;"	v
last_frame_time	core/python/behaviors/walk_to_center_2.py	/^last_frame_time = 0$/;"	v
last_gyroX	core/motion/rswalk2014/RSWalkModule2014.h	/^	double last_gyroX;$/;"	m	class:RSWalkModule2014
last_gyroX_time	core/motion/rswalk2014/RSWalkModule2014.h	/^	float last_gyroX_time;$/;"	m	class:RSWalkModule2014
last_gyroY	core/motion/rswalk2014/RSWalkModule2014.h	/^	double last_gyroY;$/;"	m	class:RSWalkModule2014
last_gyroY_time	core/motion/rswalk2014/RSWalkModule2014.h	/^	float last_gyroY_time;$/;"	m	class:RSWalkModule2014
last_head_pan	core/python/behaviors/Movement.py	/^last_head_pan = 1$/;"	v
last_head_pan	core/python/behaviors/keeper_2.py	/^last_head_pan = 1.2$/;"	v
last_head_pan	core/python/behaviors/win.py	/^last_head_pan = 1.2$/;"	v
last_head_time	core/python/behaviors/Movement.py	/^last_head_time = 0$/;"	v
last_head_time	core/python/behaviors/keeper_2.py	/^last_head_time = 0$/;"	v
last_head_time	core/python/behaviors/walk_to_center.py	/^last_head_time = 0$/;"	v
last_head_time	core/python/behaviors/walk_to_center_2.py	/^last_head_time = 0$/;"	v
last_head_time	core/python/behaviors/win.py	/^last_head_time = 0$/;"	v
last_inf_constant	core/python/behaviors/keeper_2.py	/^last_inf_constant = 2$/;"	v
last_inf_constant	core/python/behaviors/win.py	/^last_inf_constant = 2$/;"	v
last_keeper_direction	core/python/behaviors/Movement.py	/^last_keeper_direction = 1$/;"	v
last_lit	lib/zlib/deflate.h	/^    uInt last_lit;      \/* running index in l_buf *\/$/;"	m	struct:internal_state
last_memory_	build/include/tool/VisionWindow.h	/^  Memory* last_memory_;$/;"	m	class:VisionWindow
last_memory_	tools/UTNaoTool/VisionWindow.h	/^  Memory* last_memory_;$/;"	m	class:VisionWindow
last_mode_change_time	core/python/behaviors/win.py	/^last_mode_change_time = 0$/;"	v
last_odometry_update_	core/MotionCore.h	/^  unsigned int last_odometry_update_;$/;"	m	class:MotionCore
last_read_time_	core/sonar/SonarModule.h	/^  float last_read_time_;$/;"	m	class:SonarModule
last_send_time_	core/sonar/SonarModule.h	/^  float last_send_time_;$/;"	m	class:SonarModule
last_speech_frame_	core/memory/SpeechBlock.h	/^  unsigned last_speech_frame_;$/;"	m	struct:SpeechBlock
last_stand_frame_	core/MotionCore.h	/^  unsigned int last_stand_frame_;$/;"	m	class:MotionCore
last_state_counter	core/python/behaviors/keeper_2.py	/^last_state_counter = 0$/;"	v
last_state_counter	core/python/behaviors/win.py	/^last_state_counter = 0$/;"	v
last_switch_time_	core/sonar/SonarModule.h	/^  float last_switch_time_;$/;"	m	class:SonarModule
last_temperature_check_time_	core/sensor/SensorModule.h	/^  double last_temperature_check_time_;$/;"	m	class:SensorModule
last_walk_or_stand_	core/motion/rswalk2014/RSWalkModule2014.h	/^        float last_walk_or_stand_;$/;"	m	class:RSWalkModule2014
last_x	core/python/behaviors/keeper_2.py	/^last_x = [0]*last_inf_constant$/;"	v
last_x	core/python/behaviors/win.py	/^last_x = [0]*last_inf_constant$/;"	v
last_xv	core/python/behaviors/keeper_2.py	/^last_xv = [0]*last_inf_constant$/;"	v
last_xv	core/python/behaviors/win.py	/^last_xv = [0]*last_inf_constant$/;"	v
last_y	core/python/behaviors/keeper_2.py	/^last_y = [0]*last_inf_constant$/;"	v
last_y	core/python/behaviors/win.py	/^last_y = [0]*last_inf_constant$/;"	v
last_yv	core/python/behaviors/keeper_2.py	/^last_yv = [0]*last_inf_constant$/;"	v
last_yv	core/python/behaviors/win.py	/^last_yv = [0]*last_inf_constant$/;"	v
lastfree	lib/lua/src/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table
lastg	lib/alglib/optimization.h	/^    ae_vector lastg;$/;"	m	struct:alglib_impl::__anon79
lastline	lib/lua/src/llex.h	/^  int lastline;  \/* line of last token `consumed' *\/$/;"	m	struct:LexState
lastlinedefined	lib/lua/src/lobject.h	/^  int lastlinedefined;$/;"	m	struct:Proto
lastlinedefined	lib/lua/src/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lastlistfield	lib/lua/src/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
lastscaledstep	lib/alglib/optimization.h	/^    double lastscaledstep;$/;"	m	struct:alglib_impl::__anon77
laststep	lib/alglib/optimization.h	/^    double laststep;$/;"	m	struct:alglib_impl::__anon75
laststep	lib/alglib/optimization.h	/^    double laststep;$/;"	m	struct:alglib_impl::__anon77
lasttarget	lib/lua/src/lparser.h	/^  int lasttarget;   \/* `pc' of last `jump target' *\/$/;"	m	struct:FuncState
launch	bin/nao_start	/^def launch(cmd):$/;"	f
lauxlib_c	lib/lua/src/lauxlib.c	/^#define lauxlib_c$/;"	d	file:
lauxlib_h	lib/lua/src/lauxlib.h	/^#define lauxlib_h$/;"	d
layerScanState	core/memory/BehaviorBlock.h	/^  int layerScanState;$/;"	m	struct:BehaviorBlock
layerScanTime	core/memory/BehaviorBlock.h	/^  float layerScanTime;$/;"	m	struct:BehaviorBlock
layout	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^    QLayout* layout;$/;"	m	class:CalibrationItem	file:
layout	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^    QLayout* layout;$/;"	m	class:CalibrationItem	file:
lbCount	core/vision/structures/LineStackRet.h	/^  uint16_t lbCount;   \/\/ Counts number of blobs in this line$/;"	m	struct:LineStackRet
lbIndex	core/vision/structures/LineStackRet.h	/^  uint16_t lbIndex[MAX_BLOBS_PER_LINE];     \/\/ Stores the blob index of all blobs used to form the line. $/;"	m	struct:LineStackRet
lbIndex	core/vision/structures/VisionPoint.h	/^  uint16_t lbIndex;$/;"	m	struct:VisionPoint
lbaselib_c	lib/lua/src/lbaselib.c	/^#define lbaselib_c$/;"	d	file:
lcode_c	lib/lua/src/lcode.c	/^#define lcode_c$/;"	d	file:
lcode_h	lib/lua/src/lcode.h	/^#define lcode_h$/;"	d
lconfig_h	lib/lua/src/luaconf.h	/^#define lconfig_h$/;"	d
ldAdditional	bin/behaviorSim	/^    ldAdditional = ''$/;"	v
ldAdditional	bin/behaviorSim	/^    ldAdditional = ':\/usr\/lib32:\/usr\/lib32\/i386-linux-gnu'$/;"	v
ldAdditional	bin/tool	/^    ldAdditional = ''$/;"	v
ldAdditional	bin/tool	/^    ldAdditional = ':%s\/naoqi\/link_libs:%s\/build\/pythonswig' % (home,home)$/;"	v
ldblib_c	lib/lua/src/ldblib.c	/^#define ldblib_c$/;"	d	file:
ldebug_c	lib/lua/src/ldebug.c	/^#define ldebug_c$/;"	d	file:
ldebug_h	lib/lua/src/ldebug.h	/^#define ldebug_h$/;"	d
ldo_c	lib/lua/src/ldo.c	/^#define ldo_c$/;"	d	file:
ldo_h	lib/lua/src/ldo.h	/^#define ldo_h$/;"	d
ldump_c	lib/lua/src/ldump.c	/^#define ldump_c$/;"	d	file:
le_event	lib/lua/doc/manual.html	/^     function le_event (op1, op2)$/;"	f
leadingSpaces	lib/yaml-cpp/src/scanscalar.h	/^		bool leadingSpaces;$/;"	m	struct:YAML::ScanScalarParams
leaveblock	lib/lua/src/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	lib/lua/src/lparser.c	/^#define leavelevel(/;"	d	file:
ledNames	core/motion/rswalk2014/utils/body.hpp	/^   const std::string ledNames[NUMBER_OF_LEDS] = {$/;"	m	namespace:LEDs
led_commands_	interfaces/nao/src/dcmwrapper.h	/^  AL::ALValue led_commands_;$/;"	m	class:DCMWrapper
led_commands_	interfaces/nao/src/naointerface.h	/^    LEDBlock* led_commands_;$/;"	m	class:naointerface
leds	core/motion/rswalk2014/types/ActionCommand.hpp	/^      LED leds;$/;"	m	struct:ActionCommand::All
ledsC	core/python/lights.py	/^ledsC = core.ledsC$/;"	v
leds_	core/VisionCore.h	/^  LEDModule *leds_;$/;"	m	class:VisionCore
leds_	core/lights/LEDModule.h	/^  LEDBlock *leds_;$/;"	m	class:LEDModule
left	build/include/tool/calibration/JointCalibrator.cpp	/^bool& JointCalibrator::left() {$/;"	f	class:JointCalibrator
left	build/include/tool/calibration/JointCalibrator.cpp	/^const bool& JointCalibrator::left() const {$/;"	f	class:JointCalibrator
left	build/include/tool/calibration/JointDataset.h	/^    bool left; $/;"	m	class:JointMeasurement
left	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float left, lastLeft;                                   \/\/ Omnidirectional walk left\/right$/;"	m	class:Walk2014Generator
left	core/motion/rswalk2014/types/ActionCommand.hpp	/^      int left;  \/\/ How far to the left (negative for rightwards) (mm)$/;"	m	struct:ActionCommand::Body
left	core/motion/rswalk2014/types/Odometry.hpp	/^   float left;$/;"	m	struct:Odometry
left	core/python/behaviors/win.py	/^  left=2$/;"	v	class:EnemyGoalStates
left	core/vision/structures/HorizonLine.h	/^  Coordinates left, right;$/;"	m	struct:HorizonLine
left	lib/lua/src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon94	file:
left	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^bool& JointCalibrator::left() {$/;"	f	class:JointCalibrator
left	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^const bool& JointCalibrator::left() const {$/;"	f	class:JointCalibrator
left	tools/UTNaoTool/calibration/JointDataset.h	/^    bool left; $/;"	m	class:JointMeasurement
left	tools/testStep.py	/^left = []$/;"	v
left	tools/testStep.py	/^left = [step_size * y for y in left]$/;"	v
left	tools/testStepSide.py	/^left = []$/;"	v
leftAngle	core/motion/rswalk2014/Walk2014Generator.cpp	/^float Walk2014Generator::leftAngle()$/;"	f	class:Walk2014Generator
leftBearing	core/memory/BehaviorBlock.h	/^  float leftBearing;$/;"	m	struct:KickEvaluation
leftEar	core/motion/rswalk2014/types/ActionCommand.hpp	/^      uint16_t leftEar; \/\/ Number of left ear segments lit [10-bit field]$/;"	m	struct:ActionCommand::LED
leftEdgeWidth	core/vision/structures/GoalPostCandidate.h	/^  int leftEdgeWidth;    \/\/ Width of the edge in pixels$/;"	m	struct:GoalPostCandidate
leftEye	core/motion/rswalk2014/types/ActionCommand.hpp	/^      rgb leftEye;     \/\/ Colour of left eye (default: white)$/;"	m	struct:ActionCommand::LED
leftFoot	core/lights/LEDModule.cpp	/^void LEDModule::leftFoot(float r, float g, float b) {$/;"	f	class:LEDModule
leftFoot	core/motion/rswalk2014/types/ActionCommand.hpp	/^      rgb leftFoot;    \/\/ Colour of left foot (default: off)$/;"	m	struct:ActionCommand::LED
leftKickHeading	core/memory/BehaviorBlock.h	/^  float leftKickHeading, rightKickHeading;$/;"	m	struct:BehaviorBlock
leftL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float leftL;                                            \/\/ sideways step in meters for left  foot$/;"	m	class:Walk2014Generator
leftPhase	core/motion/rswalk2014/WalkCycle.hpp	/^      bool leftPhase;$/;"	m	class:WalkCycle
leftPoint	core/memory/BehaviorBlock.h	/^  Point2D leftPoint;$/;"	m	struct:KickEvaluation
leftPost	core/vision/structures/GoalCandidate.h	/^  GoalPostCandidate leftPost;$/;"	m	struct:GoalCandidate
leftR	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float leftR;                                            \/\/ sideways step in meters for right foot$/;"	m	class:Walk2014Generator
leftValid	core/memory/BehaviorBlock.h	/^  int leftValid;$/;"	m	struct:KickEvaluation
left_	build/include/tool/annotations/EllipseSelection.h	/^        int top_, left_, width_, height_;$/;"	m	class:EllipseSelection
left_	core/math/Polygon.h	/^        int left_, right_, top_, bottom_;$/;"	m	class:Polygon
left_	tools/UTNaoTool/annotations/EllipseSelection.h	/^        int top_, left_, width_, height_;$/;"	m	class:EllipseSelection
left_ankle	core/common/RobotInfo.h	/^    left_ankle,$/;"	e	enum:BodyFrame::Part
left_ankle	core/common/RobotInfo.h	/^    left_ankle,$/;"	e	enum:BodyPart::Part
left_back	core/motion/rswalk2014/RSWalkModule2014.cpp	/^    left_back,$/;"	e	enum:FootSensorRegion	file:
left_bicep	core/common/RobotInfo.h	/^    left_bicep,$/;"	e	enum:BodyPart::Part
left_bottom_foot	core/common/RobotInfo.h	/^    left_bottom_foot, \/\/ translated (used for pose)$/;"	e	enum:BodyPart::Part
left_buf_	core/sonar/SonarModule.h	/^  RingBufferWithSum<float, 5> left_buf_;$/;"	m	class:SonarModule
left_bumper_	core/sensor/ButtonModule.h	/^  ButtonInfo left_bumper_;$/;"	m	class:ButtonModule
left_distance_	core/memory/ProcessedSonarBlock.h	/^  float left_distance_;$/;"	m	struct:ProcessedSonarBlock
left_elbow	core/common/RobotInfo.h	/^    left_elbow,$/;"	e	enum:BodyFrame::Part
left_elbow	core/common/RobotInfo.h	/^    left_elbow,$/;"	e	enum:BodyPart::Part
left_foot	core/common/RobotInfo.h	/^    left_foot, \/\/ rotated at ankle (used for weight)$/;"	e	enum:BodyPart::Part
left_foot	core/common/RobotInfo.h	/^    left_foot,$/;"	e	enum:BodyFrame::Part
left_foot_body_tilt_roll_	core/memory/BodyModelBlock.h	/^  TiltRoll left_foot_body_tilt_roll_;$/;"	m	struct:BodyModelBlock
left_foot_front_left	core/common/RobotInfo.h	/^    left_foot_front_left,$/;"	e	enum:BodyFrame::Part
left_foot_front_right	core/common/RobotInfo.h	/^    left_foot_front_right,$/;"	e	enum:BodyFrame::Part
left_foot_rear_left	core/common/RobotInfo.h	/^    left_foot_rear_left,$/;"	e	enum:BodyFrame::Part
left_foot_rear_right	core/common/RobotInfo.h	/^    left_foot_rear_right,$/;"	e	enum:BodyFrame::Part
left_foot_zmp_offset_	core/motion/WalkEngineParameters.h	/^  Vector2<float> left_foot_zmp_offset_;$/;"	m	struct:WalkEngineParameters
left_forearm	core/common/RobotInfo.h	/^    left_forearm,$/;"	e	enum:BodyPart::Part
left_front	core/motion/rswalk2014/RSWalkModule2014.cpp	/^    left_front,$/;"	e	enum:FootSensorRegion	file:
left_hand	core/common/RobotInfo.h	/^    left_hand,$/;"	e	enum:BodyPart::Part
left_hip	core/common/RobotInfo.h	/^    left_hip,$/;"	e	enum:BodyFrame::Part
left_hip	core/common/RobotInfo.h	/^    left_hip,$/;"	e	enum:BodyPart::Part
left_knee	core/common/RobotInfo.h	/^    left_knee,$/;"	e	enum:BodyFrame::Part
left_left	core/motion/rswalk2014/RSWalkModule2014.cpp	/^    left_left,$/;"	e	enum:FootSensorRegion	file:
left_pelvis	core/common/RobotInfo.h	/^    left_pelvis,$/;"	e	enum:BodyPart::Part
left_right	core/motion/rswalk2014/RSWalkModule2014.cpp	/^    left_right,$/;"	e	enum:FootSensorRegion	file:
left_shoulder	core/common/RobotInfo.h	/^    left_shoulder,$/;"	e	enum:BodyFrame::Part
left_shoulder	core/common/RobotInfo.h	/^    left_shoulder,$/;"	e	enum:BodyPart::Part
left_swing	tools/testStepSide.py	/^  left_swing = not(left_swing)$/;"	v
left_swing	tools/testStepSide.py	/^left_swing = True$/;"	v
left_thigh	core/common/RobotInfo.h	/^    left_thigh,$/;"	e	enum:BodyPart::Part
left_tibia	core/common/RobotInfo.h	/^    left_tibia,$/;"	e	enum:BodyPart::Part
left_wrist	core/common/RobotInfo.h	/^    left_wrist,$/;"	e	enum:BodyFrame::Part
legNames	core/memory/KickRequestBlock.h	/^const std::string legNames[] = {$/;"	v
leg_	core/memory/KickEngineBlock.h	/^  Kick::Leg leg_; \/\/what leg are we kicking with?$/;"	m	struct:KickEngineBlock
leg_joint_names_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue leg_joint_names_;$/;"	m	class:ALMotionWrapper
legend_	build/include/tool/PlotWindow.h	/^  QwtLegend *legend_;$/;"	m	class:PlotWindow
legend_	tools/UTNaoTool/PlotWindow.h	/^  QwtLegend *legend_;$/;"	m	class:PlotWindow
legendrecalculate	lib/alglib/specialfunctions.cpp	/^double legendrecalculate(ae_int_t n, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
legendrecalculate	lib/alglib/specialfunctions.cpp	/^double legendrecalculate(const ae_int_t n, const double x)$/;"	f	namespace:alglib
legendrecoefficients	lib/alglib/specialfunctions.cpp	/^void legendrecoefficients(ae_int_t n,$/;"	f	namespace:alglib_impl
legendrecoefficients	lib/alglib/specialfunctions.cpp	/^void legendrecoefficients(const ae_int_t n, real_1d_array &c)$/;"	f	namespace:alglib
legendresum	lib/alglib/specialfunctions.cpp	/^double legendresum(\/* Real    *\/ ae_vector* c,$/;"	f	namespace:alglib_impl
legendresum	lib/alglib/specialfunctions.cpp	/^double legendresum(const real_1d_array &c, const ae_int_t n, const double x)$/;"	f	namespace:alglib
len	core/imageCapture/i2c-dev.h	/^	short len;		\/* msg length				*\/$/;"	m	struct:i2c_msg
len	kalman_filters/src/ekf_test.cpp	/^double len = 1.0;$/;"	v
len	lib/lua/src/lobject.h	/^    size_t len;$/;"	m	struct:TString::__anon88
len	lib/lua/src/lobject.h	/^    size_t len;$/;"	m	struct:Udata::__anon89
len	lib/lua/src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon98	file:
len	lib/zlib/deflate.h	/^        ush  len;        \/* length of bit string *\/$/;"	m	union:ct_data_s::__anon134
len_event	lib/lua/doc/manual.html	/^     function len_event (op)$/;"	f
lenbits	lib/zlib/inflate.h	/^    unsigned lenbits;           \/* index bits for lencode *\/$/;"	m	struct:inflate_state
lencode	lib/zlib/inflate.h	/^    code const FAR *lencode;    \/* starting table for length\/literal codes *\/$/;"	m	struct:inflate_state
lenfix	lib/zlib/inffixed.h	/^    static const code lenfix[512] = {$/;"	v
length	core/communications/ThreadedUDPSocket.h	/^  int sock, length;$/;"	m	class:ThreadedUDPSocket
length	core/math/Geometry.cpp	/^float LineSegment::length() const {$/;"	f	class:LineSegment
length	core/python/geometry.py	/^  def length(self):$/;"	m	class:LineSegment
length	core/vision/structures/FieldLine.h	/^  int length;$/;"	m	struct:FieldLine
length	lib/alglib/ap.cpp	/^alglib::ae_int_t alglib::ae_vector_wrapper::length() const$/;"	f	class:alglib::ae_vector_wrapper
length	lib/zlib/inflate.h	/^    unsigned length;            \/* literal or length of data to copy *\/$/;"	m	struct:inflate_state
lengthBetweenLegs	core/common/RobotDimensions.h	/^    lengthBetweenLegs,$/;"	e	enum:RobotDimensions::__anon8
lens	lib/zlib/inflate.h	/^    unsigned short lens[320];   \/* temporary storage for code lengths *\/$/;"	m	struct:inflate_state
lessequal	lib/lua/src/lvm.c	/^static int lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	file:
level	lib/lua/src/lstrlib.c	/^  int level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
level	lib/zlib/deflate.h	/^    int level;    \/* compression level (1..9) *\/$/;"	m	struct:internal_state
level	lib/zlib/gzguts.h	/^    int level;              \/* compression level *\/$/;"	m	struct:__anon135
lfunc_c	lib/lua/src/lfunc.c	/^#define lfunc_c$/;"	d	file:
lfunc_h	lib/lua/src/lfunc.h	/^#define lfunc_h$/;"	d
lgc_c	lib/lua/src/lgc.c	/^#define lgc_c$/;"	d	file:
lgc_h	lib/lua/src/lgc.h	/^#define lgc_h$/;"	d
libdir	lib/zlib/Makefile	/^libdir =${exec_prefix}\/lib$/;"	m
libsize	lib/lua/src/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
lift_start_time_	core/motion/WalkEngineParameters.h	/^  float lift_start_time_;$/;"	m	struct:WalkEngineParameters
lift_stop_time_	core/motion/WalkEngineParameters.h	/^  float lift_stop_time_;$/;"	m	struct:WalkEngineParameters
lights	core/python/init.py	/^import lights$/;"	i
lightsOff	core/lights/LEDModule.cpp	/^void LEDModule::lightsOff() {$/;"	f	class:LEDModule
lightsOn	core/lights/LEDModule.cpp	/^void LEDModule::lightsOn() {$/;"	f	class:LEDModule
likelihood	tools/behaviorSim/cma.py	/^    def likelihood(x, m=None, Cinv=None, sigma=1, detC=None):$/;"	m	class:Misc
limit	core/math/Range.h	/^    Range<T> limit(const Range<T>& r) const {return Range<T>(limit(r.min),limit(r.max));} \/\/sets the limit of a Range$/;"	f	class:Range
limit	core/math/Range.h	/^    T limit(T t) const {return t < min ? min : t > max ? max : t;} \/\/sets a limit for a Range$/;"	f	class:Range
limitJointRadians	core/motion/rswalk2014/utils/body.hpp	/^   static inline float limitJointRadians(JointCode joint, const float &angle) {$/;"	f	namespace:RSJoints
limp	core/motion/rswalk2014/Walk2014Generator.hpp	/^   Timer limp;$/;"	m	class:Walk2014Generator
linalg	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
lincon	tools/behaviorSim/cma.py	/^    def lincon(self, x, theta=0.01):$/;"	m	class:FitnessFunctions
line	build/luaswig/generateSwig.py	/^    line = args[0]$/;"	v
line	lib/yaml-cpp/include/yaml-cpp/mark.h	/^		int line, column;$/;"	m	struct:YAML::Mark
line	lib/yaml-cpp/src/stream.h	/^		int line() const { return m_mark.line; }$/;"	f	class:YAML::Stream
lineLoc	core/common/WorldObject.h	/^  LineSegment lineLoc;$/;"	m	class:WorldObject
lineLocationEnds	core/common/Bowdoin14Field.h	/^const Point2D lineLocationEnds[] = {$/;"	v
lineLocationEnds	core/common/Field.h	/^const Point2D lineLocationEnds[] = {$/;"	v
lineLocationEnds	core/common/RC2013Field.h	/^const Point2D lineLocationEnds[] = {$/;"	v
lineLocationEnds	core/common/UTField.h	/^const Point2D lineLocationEnds[] = {$/;"	v
lineLocationStarts	core/common/Bowdoin14Field.h	/^const Point2D lineLocationStarts[] = {$/;"	v
lineLocationStarts	core/common/Field.h	/^const Point2D lineLocationStarts[] = {$/;"	v
lineLocationStarts	core/common/RC2013Field.h	/^const Point2D lineLocationStarts[] = {$/;"	v
lineLocationStarts	core/common/UTField.h	/^const Point2D lineLocationStarts[] = {$/;"	v
lineUpEngine	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^      LineUpEngine* lineUpEngine;$/;"	m	class:WalkEnginePreProcessor
lineWidth_	build/include/tool/UTOpenGL/BasicGL.h	/^  float lineWidth_;$/;"	m	class:BasicGL
lineWidth_	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^  float lineWidth_;$/;"	m	class:BasicGL
linear	tools/behaviorSim/cma.py	/^    def linear(self, x):$/;"	m	class:FitnessFunctions
linear2MeasurementUpdate	core/opponents/UKF4.cpp	/^ukf4UpdateResult UKF4::linear2MeasurementUpdate(float Y1,float Y2, float SR11, float SR12, float SR22, int index1, int index2)$/;"	f	class:UKF4
linearStep	core/motion/rswalk2014/Walk2014Generator.cpp	/^float Walk2014Generator::linearStep(float time, float period) {$/;"	f	class:Walk2014Generator
lineard	tools/behaviorSim/cma.py	/^    def lineard(self, x):$/;"	m	class:FitnessFunctions
linearmodel	lib/alglib/dataanalysis.cpp	/^linearmodel::linearmodel() : _linearmodel_owner() $/;"	f	class:alglib::linearmodel
linearmodel	lib/alglib/dataanalysis.cpp	/^linearmodel::linearmodel(const linearmodel &rhs):_linearmodel_owner(rhs) $/;"	f	class:alglib::linearmodel
linearmodel	lib/alglib/dataanalysis.h	/^class linearmodel : public _linearmodel_owner$/;"	c	namespace:alglib
linearmodel	lib/alglib/dataanalysis.h	/^} linearmodel;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon42
linedUp	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^      bool linedUp;$/;"	m	class:WalkEnginePreProcessor
linedefined	lib/lua/src/lobject.h	/^  int linedefined;$/;"	m	struct:Proto
linedefined	lib/lua/src/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lineinfo	lib/lua/src/lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines *\/$/;"	m	struct:Proto
linenumber	lib/lua/src/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState
lines	tools/testStepSide.py	/^  lines = [-0.5,-0.5 + fraction_still,-0.5+fraction_still + fraction_moving,0.5]$/;"	v
linit_c	lib/lua/src/linit.c	/^#define linit_c$/;"	d	file:
linmin_armijofactor	lib/alglib/alglibinternal.cpp	/^static double linmin_armijofactor = 1.3;$/;"	m	namespace:alglib_impl	file:
linmin_defstpmax	lib/alglib/alglibinternal.cpp	/^static double linmin_defstpmax = 1.0E+50;$/;"	m	namespace:alglib_impl	file:
linmin_ftol	lib/alglib/alglibinternal.cpp	/^static double linmin_ftol = 0.001;$/;"	m	namespace:alglib_impl	file:
linmin_gtol	lib/alglib/alglibinternal.cpp	/^static double linmin_gtol = 0.3;$/;"	m	namespace:alglib_impl	file:
linmin_maxfev	lib/alglib/alglibinternal.cpp	/^static ae_int_t linmin_maxfev = 20;$/;"	m	namespace:alglib_impl	file:
linmin_mcstep	lib/alglib/alglibinternal.cpp	/^static void linmin_mcstep(double* stx,$/;"	f	namespace:alglib_impl
linmin_stpmin	lib/alglib/alglibinternal.cpp	/^static double linmin_stpmin = 1.0E-50;$/;"	m	namespace:alglib_impl	file:
linmin_xtol	lib/alglib/alglibinternal.cpp	/^static double linmin_xtol = 100*ae_machineepsilon;$/;"	m	namespace:alglib_impl	file:
linminnormalized	lib/alglib/alglibinternal.cpp	/^void linminnormalized(\/* Real    *\/ ae_vector* d,$/;"	f	namespace:alglib_impl
linminstate	lib/alglib/alglibinternal.h	/^} linminstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon21
linreg_lrinternal	lib/alglib/dataanalysis.cpp	/^static void linreg_lrinternal(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
linreg_lrvnum	lib/alglib/dataanalysis.cpp	/^static ae_int_t linreg_lrvnum = 5;$/;"	m	namespace:alglib_impl	file:
liolib_c	lib/lua/src/liolib.c	/^#define liolib_c$/;"	d	file:
list_	build/include/tool/KeyframeWidget.h	/^    QListWidget* list_;$/;"	m	class:KeyframeItem
list_	tools/UTNaoTool/KeyframeWidget.h	/^    QListWidget* list_;$/;"	m	class:KeyframeItem
listenCoachUDP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::listenCoachUDP(void* arg ) {$/;"	f	class:CommunicationModule
listenForLoggingStatus	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::listenForLoggingStatus() {$/;"	f	class:LogSelectWindow
listenForLoggingStatus	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::listenForLoggingStatus() {$/;"	f	class:LogSelectWindow
listenGameControllerUDP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::listenGameControllerUDP(void* arg ) {$/;"	f	class:CommunicationModule
listenTeamUDP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::listenTeamUDP(void* arg ) {$/;"	f	class:CommunicationModule
listenToolUDP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::listenToolUDP(void* arg ) {$/;"	f	class:CommunicationModule
listenUDP	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::listenUDP(void* arg) {$/;"	f	class:LogSelectWindow
listenUDP	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::listenUDP(void* arg) {$/;"	f	class:LogSelectWindow
listen_thread_	core/communications/UDPWrapper.h	/^  std::thread* listen_thread_;$/;"	m	class:UDPWrapper
listfield	lib/lua/src/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
listing	lib/lua/src/luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	file:
lit_bufsize	lib/zlib/deflate.h	/^    uInt  lit_bufsize;$/;"	m	struct:internal_state
liveTeamColor	build/include/tool/UTOpenGL/GLDrawer.h	/^    int liveTeamColor;$/;"	m	class:GLDrawer
liveTeamColor	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    int liveTeamColor;$/;"	m	class:GLDrawer
liveTeamNum	build/include/tool/UTOpenGL/GLDrawer.h	/^    int liveTeamNum;$/;"	m	class:GLDrawer
liveTeamNum	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    int liveTeamNum;$/;"	m	class:GLDrawer
liveTimer_	build/include/tool/WorldWindow.h	/^    QTimer* playTimer_, liveTimer_;$/;"	m	class:WorldWindow
liveTimer_	tools/UTNaoTool/WorldWindow.h	/^    QTimer* playTimer_, liveTimer_;$/;"	m	class:WorldWindow
livecache_	build/include/tool/WorldWindow.h	/^    MemoryCache livecache_;$/;"	m	class:WorldWindow
livecache_	tools/UTNaoTool/WorldWindow.h	/^    MemoryCache livecache_;$/;"	m	class:WorldWindow
livecore_	build/include/tool/WorldWindow.h	/^    VisionCore* livecore_;$/;"	m	class:WorldWindow
livecore_	tools/UTNaoTool/WorldWindow.h	/^    VisionCore* livecore_;$/;"	m	class:WorldWindow
livetimer_	build/include/tool/WorldWindow.h	/^    QTimer* livetimer_;$/;"	m	class:WorldWindow
livetimer_	tools/UTNaoTool/WorldWindow.h	/^    QTimer* livetimer_;$/;"	m	class:WorldWindow
ljointMap	build/include/tool/calibration/JointCalibrator.cpp	/^std::vector<int> ljointMap = {$/;"	v
ljointMap	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^std::vector<int> ljointMap = {$/;"	v
ll_funcs	lib/lua/src/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_load	lib/lua/src/loadlib.c	/^static void *ll_load (lua_State *L, const char *path) {$/;"	f	file:
ll_loadfunc	lib/lua/src/loadlib.c	/^static int ll_loadfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
ll_loadlib	lib/lua/src/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	lib/lua/src/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_register	lib/lua/src/loadlib.c	/^static void **ll_register (lua_State *L, const char *path) {$/;"	f	file:
ll_require	lib/lua/src/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_seeall	lib/lua/src/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
ll_sym	lib/lua/src/loadlib.c	/^static lua_CFunction ll_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
ll_unloadlib	lib/lua/src/loadlib.c	/^static void ll_unloadlib (void *lib) {$/;"	f	file:
llex	lib/lua/src/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	lib/lua/src/llex.c	/^#define llex_c$/;"	d	file:
llex_h	lib/lua/src/llex.h	/^#define llex_h$/;"	d
llimits_h	lib/lua/src/llimits.h	/^#define llimits_h$/;"	d
llog	core/motion/rswalk2014/utils/Logger.hpp	/^#define llog(/;"	d
lm_init	lib/zlib/deflate.c	/^local void lm_init (s)$/;"	f
lmathlib_c	lib/lua/src/lmathlib.c	/^#define lmathlib_c$/;"	d	file:
lmem_c	lib/lua/src/lmem.c	/^#define lmem_c$/;"	d	file:
lmem_h	lib/lua/src/lmem.h	/^#define lmem_h$/;"	d
lmemfind	lib/lua/src/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lmmatrix	lib/alglib/optimization.h	/^    ae_matrix lmmatrix;$/;"	m	struct:alglib_impl::__anon79
lmod	lib/lua/src/lobject.h	/^#define lmod(/;"	d
lmode	build/include/tool/simulation/BehaviorSimulation.h	/^    bool lmode() { return lmode_; }$/;"	f	class:BehaviorSimulation
lmode	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    bool lmode() { return lmode_; }$/;"	f	class:IsolatedBehaviorSimulation
lmode	build/include/tool/simulation/Simulation.h	/^    virtual bool lmode() { return true; }$/;"	f	class:Simulation
lmode	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    bool lmode() { return lmode_; }$/;"	f	class:BehaviorSimulation
lmode	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    bool lmode() { return lmode_; }$/;"	f	class:IsolatedBehaviorSimulation
lmode	tools/UTNaoTool/simulation/Simulation.h	/^    virtual bool lmode() { return true; }$/;"	f	class:Simulation
lmode_	build/include/tool/simulation/BehaviorSimulation.h	/^    bool lmode_;$/;"	m	class:BehaviorSimulation
lmode_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    bool lmode_;$/;"	m	class:IsolatedBehaviorSimulation
lmode_	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    bool lmode_;$/;"	m	class:BehaviorSimulation
lmode_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    bool lmode_;$/;"	m	class:IsolatedBehaviorSimulation
lngamma	lib/alglib/specialfunctions.cpp	/^double lngamma(const double x, double &sgngam)$/;"	f	namespace:alglib
lngamma	lib/alglib/specialfunctions.cpp	/^double lngamma(double x, double* sgngam, ae_state *_state)$/;"	f	namespace:alglib_impl
load	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::load(){$/;"	f	class:ExtrinsicCalibrationWidget
load	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::load() {$/;"	f	class:KeyframeWidget
load	build/include/tool/annotations/AnnotationGroup.cpp	/^bool AnnotationGroup::load(Log* log) {$/;"	f	class:AnnotationGroup
load	core/common/YamlConfig.h	/^    bool load(std::string file) { return loadFromFile(file); }$/;"	f	class:YamlConfig
load	core/python/primary_bvr.py	/^def load(bvr):$/;"	f
load	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::load(){$/;"	f	class:ExtrinsicCalibrationWidget
load	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::load() {$/;"	f	class:KeyframeWidget
load	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^bool AnnotationGroup::load(Log* log) {$/;"	f	class:AnnotationGroup
load	tools/behaviorSim/cma.py	/^    def load(self, filenameprefix=None):$/;"	m	class:CMADataLogger
load	tools/behaviorSim/cma.py	/^    def load(self, filenameprefix=None):$/;"	m	class:DEAPCMADataLogger
load	tools/behaviorSim/cma.py	/^    def load(self, name=None):$/;"	m	class:Sections
loadBehaviors	build/include/tool/FilesWindow.cpp	/^void FilesWindow::loadBehaviors() {$/;"	f	class:FilesWindow
loadBehaviors	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::loadBehaviors() {$/;"	f	class:FilesWindow
loadCOMs	tools/plotCOM.py	/^def loadCOMs(filename):$/;"	f
loadCalibration	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::loadCalibration(const RobotCalibration& cal, bool includePose) {$/;"	f	class:ExtrinsicCalibrationWidget
loadCalibration	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::loadCalibration(std::string file) {$/;"	f	class:ExtrinsicCalibrationWidget
loadCalibration	core/MotionCore.cpp	/^void MotionCore::loadCalibration() {$/;"	f	class:MotionCore
loadCalibration	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::loadCalibration(const RobotCalibration& cal, bool includePose) {$/;"	f	class:ExtrinsicCalibrationWidget
loadCalibration	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::loadCalibration(std::string file) {$/;"	f	class:ExtrinsicCalibrationWidget
loadChoices	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::loadChoices(Annotation* annotation) {$/;"	f	class:AnnotationWidget
loadChoices	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::loadChoices(Annotation* annotation) {$/;"	f	class:AnnotationWidget
loadColorTable	core/vision/VisionModule.cpp	/^bool VisionModule::loadColorTable(Camera::Type camera, std::string fileName, bool fullPath) {$/;"	f	class:VisionModule
loadColorTables	core/vision/VisionModule.cpp	/^bool VisionModule::loadColorTables() {$/;"	f	class:VisionModule
loadConfig	build/include/tool/FilesWindow.cpp	/^void FilesWindow::loadConfig(const ToolConfig& config) {$/;"	f	class:FilesWindow
loadConfig	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::loadConfig(const ToolConfig& config) {$/;"	f	class:KeyframeWidget
loadConfig	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::loadConfig(const ToolConfig& config) {$/;"	f	class:LogSelectWindow
loadConfig	build/include/tool/LogWindow.cpp	/^void LogWindow::loadConfig(const ToolConfig& config) {$/;"	f	class:LogWindow
loadConfig	build/include/tool/MotionWindow.h	/^    void loadConfig(const ToolConfig& config) { }$/;"	f	class:MotionWindow
loadConfig	build/include/tool/RobotControllerWidget.cpp	/^void RobotControllerWidget::loadConfig(const ToolConfig& config) {$/;"	f	class:RobotControllerWidget
loadConfig	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::loadConfig() {$/;"	f	class:UTMainWnd
loadConfig	build/include/tool/WorldWindow.cpp	/^void WorldWindow::loadConfig(const ToolConfig& config) {$/;"	f	class:WorldWindow
loadConfig	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::loadConfig() {$/;"	f	class:IBSim
loadConfig	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::loadConfig(const ToolConfig& config) {$/;"	f	class:FilesWindow
loadConfig	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::loadConfig(const ToolConfig& config) {$/;"	f	class:KeyframeWidget
loadConfig	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::loadConfig(const ToolConfig& config) {$/;"	f	class:LogSelectWindow
loadConfig	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::loadConfig(const ToolConfig& config) {$/;"	f	class:LogWindow
loadConfig	tools/UTNaoTool/MotionWindow.h	/^    void loadConfig(const ToolConfig& config) { }$/;"	f	class:MotionWindow
loadConfig	tools/UTNaoTool/RobotControllerWidget.cpp	/^void RobotControllerWidget::loadConfig(const ToolConfig& config) {$/;"	f	class:RobotControllerWidget
loadConfig	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::loadConfig() {$/;"	f	class:UTMainWnd
loadConfig	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::loadConfig(const ToolConfig& config) {$/;"	f	class:WorldWindow
loadConfig	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::loadConfig() {$/;"	f	class:IBSim
loadFromFile	core/common/Serializable.cpp	/^bool Serializable::loadFromFile(std::string file){$/;"	f	class:Serializable
loadFromFile	core/common/YamlConfig.cpp	/^bool YamlConfig::loadFromFile(std::string file){$/;"	f	class:YamlConfig
loadInt	build/include/tool/UTMainWnd.cpp	/^int UTMainWnd::loadInt(QTextStream &t, bool &ok) {$/;"	f	class:UTMainWnd
loadInt	tools/UTNaoTool/UTMainWnd.cpp	/^int UTMainWnd::loadInt(QTextStream &t, bool &ok) {$/;"	f	class:UTMainWnd
loadLog	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::loadLog(QListWidgetItem* item){$/;"	f	class:LogEditorWindow
loadLog	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::loadLog(const char *directory) {$/;"	f	class:UTMainWnd
loadLog	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::loadLog(std::string directory) {$/;"	f	class:UTMainWnd
loadLog	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::loadLog(QListWidgetItem* item){$/;"	f	class:LogEditorWindow
loadLog	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::loadLog(const char *directory) {$/;"	f	class:UTMainWnd
loadLog	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::loadLog(std::string directory) {$/;"	f	class:UTMainWnd
loadLogs	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::loadLogs() {$/;"	f	class:LogEditorWindow
loadLogs	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::loadLogs() {$/;"	f	class:LogEditorWindow
loadMotionFiles	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::loadMotionFiles() {$/;"	f	class:SpecialMotionModule
loadParams	core/localization/LocalizationModule.cpp	/^void LocalizationModule::loadParams(LocalizationParams params) {$/;"	f	class:LocalizationModule
loadSelections	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::loadSelections(Annotation* annotation){$/;"	f	class:AnnotationWidget
loadSelections	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::loadSelections(Annotation* annotation){$/;"	f	class:AnnotationWidget
loadState	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::loadState(char* fileName) {$/;"	f	class:WorldGLWidget
loadState	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::loadState(char* fileName) {$/;"	f	class:WorldGLWidget
loadTextFile	build/include/tool/LogWindow.cpp	/^void LogWindow::loadTextFile(const char* path){$/;"	f	class:LogWindow
loadTextFile	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::loadTextFile(const char* path){$/;"	f	class:LogWindow
loadWeirdNaoFormat	vision_testing/src/vision_testing.cpp	/^bool loadWeirdNaoFormat(const char* filename, Mat& ycrcb, unsigned int width = 320, unsigned int height = 240)$/;"	f
loadYUV	vision_testing/src/vision_testing.cpp	/^bool loadYUV(const char* filename, Mat& bgr, int width = 320, int height = 240)$/;"	f
load_aux	lib/lua/src/lbaselib.c	/^static int load_aux (lua_State *L, int status) {$/;"	f	file:
loaded_	core/memory/ImageBlock.h	/^  bool loaded_;$/;"	m	struct:ImageBlock
loaded_	core/memory/RobotVisionBlock.h	/^  bool loaded_;$/;"	m	struct:RobotVisionBlock
loaded_group_	build/include/tool/LogEditorWindow.h	/^    AnnotationGroup *new_group_, *loaded_group_;$/;"	m	class:LogEditorWindow
loaded_group_	tools/UTNaoTool/LogEditorWindow.h	/^    AnnotationGroup *new_group_, *loaded_group_;$/;"	m	class:LogEditorWindow
loaded_logs_	build/include/tool/LogEditorWindow.h	/^    std::map<std::string, Log* > loaded_logs_;$/;"	m	class:LogEditorWindow
loaded_logs_	tools/UTNaoTool/LogEditorWindow.h	/^    std::map<std::string, Log* > loaded_logs_;$/;"	m	class:LogEditorWindow
loader_C	lib/lua/src/loadlib.c	/^static int loader_C (lua_State *L) {$/;"	f	file:
loader_Croot	lib/lua/src/loadlib.c	/^static int loader_Croot (lua_State *L) {$/;"	f	file:
loader_Lua	lib/lua/src/loadlib.c	/^static int loader_Lua (lua_State *L) {$/;"	f	file:
loader_preload	lib/lua/src/loadlib.c	/^static int loader_preload (lua_State *L) {$/;"	f	file:
loaderror	lib/lua/src/loadlib.c	/^static void loaderror (lua_State *L, const char *filename) {$/;"	f	file:
loaders	lib/lua/src/loadlib.c	/^static const lua_CFunction loaders[] =$/;"	v	file:
loading_	build/include/tool/ConfigWidget.h	/^    bool loading_;$/;"	m	class:ConfigWidget
loading_	build/include/tool/ConfigWindow.h	/^    bool loading_;$/;"	m	class:ConfigWindow
loading_	build/include/tool/UTMainWnd.h	/^  bool loading_;$/;"	m	class:UTMainWnd
loading_	tools/UTNaoTool/ConfigWidget.h	/^    bool loading_;$/;"	m	class:ConfigWidget
loading_	tools/UTNaoTool/ConfigWindow.h	/^    bool loading_;$/;"	m	class:ConfigWindow
loading_	tools/UTNaoTool/UTMainWnd.h	/^  bool loading_;$/;"	m	class:UTMainWnd
loadlib_c	lib/lua/src/loadlib.c	/^#define loadlib_c$/;"	d	file:
loadline	lib/lua/src/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	lib/lua/src/lobject.c	/^#define lobject_c$/;"	d	file:
lobject_h	lib/lua/src/lobject.h	/^#define lobject_h$/;"	d
loc	core/common/FieldConfiguration.h	/^    Point2D loc;$/;"	m	class:ObjectConfiguration
loc	core/common/WorldObject.h	/^  Point2D loc; \/\/\/< The object's location in global field coordinates.$/;"	m	class:WorldObject
loc	core/memory/OpponentBlock.h	/^  Point2D loc, sd, vel;$/;"	m	struct:OpponentModel
loc	core/vision/structures/GoalPoint.h	/^  Point2D loc;$/;"	m	struct:GoalPoint
locAndVis	build/include/tool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
locAndVis	tools/UTNaoTool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
locGroupToggled	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::locGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
locGroupToggled	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::locGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
locLog	core/memory/TextLogger.h	/^#define locLog(/;"	d
locMode	build/include/tool/simulation/SimulatedPlayer.h	/^  bool locMode;$/;"	m	class:SimulatedPlayer
locMode	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  bool locMode;$/;"	m	class:SimulatedPlayer
locModels	core/memory/OpponentBlock.h	/^    locModels[MAX_OPP_MODELS_IN_MEM], \/\/ Models used by localization (in cm)$/;"	m	struct:OpponentBlock
locOnly	build/include/tool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
locOnly	build/include/tool/UTNaoTool.cpp	/^  bool locOnly = false;$/;"	m	namespace:__anon4	file:
locOnly	tools/UTNaoTool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
locOnly	tools/UTNaoTool/UTNaoTool.cpp	/^  bool locOnly = false;$/;"	m	namespace:__anon142	file:
locSim	build/include/tool/UTNaoTool.cpp	/^  bool locSim = false;$/;"	m	namespace:__anon4	file:
locSim	tools/UTNaoTool/UTNaoTool.cpp	/^  bool locSim = false;$/;"	m	namespace:__anon142	file:
locSimPathfile	build/include/tool/WorldConfig.h	/^    std::string locSimPathfile;$/;"	m	class:WorldConfig
locSimPathfile	tools/UTNaoTool/WorldConfig.h	/^    std::string locSimPathfile;$/;"	m	class:WorldConfig
local	lib/zlib/adler32.c	/^#define local /;"	d	file:
local	lib/zlib/crc32.c	/^#define local /;"	d	file:
local	lib/zlib/gzguts.h	/^#  define local /;"	d
local	lib/zlib/minigzip.c	/^#  define local /;"	d	file:
local	lib/zlib/minigzip.c	/^#  define local$/;"	d	file:
local	lib/zlib/zutil.h	/^#  define local /;"	d
local a 	lib/lua/test/factorial.lua	/^      local a = function (f) return f(f) end$/;"	f
local f	lib/lua/test/env.lua	/^local f=function (t,i) return os.getenv(i) end$/;"	f
local f	lib/lua/test/readonly.lua	/^local f=function (t,i) error("cannot redefine global variable `"..i.."'",2) end$/;"	f
local log	lib/lua/test/trace-globals.lua	/^ local log=function (name,old,new)$/;"	f
local set	lib/lua/test/trace-globals.lua	/^ local set=function (t,name,value)$/;"	f
local tostring	lib/lua/test/trace-globals.lua	/^ local tostring=function(a)$/;"	f
localConfig	build/include/tool/TeamConfigWindow.h	/^  FILE* localConfig;$/;"	m	class:TeamConfigWindow
localConfig	tools/UTNaoTool/TeamConfigWindow.h	/^  FILE* localConfig;$/;"	m	class:TeamConfigWindow
localfunc	lib/lua/src/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localizationGL	build/include/tool/UTOpenGL/GLDrawer.h	/^    LocalizationGL localizationGL;$/;"	m	class:GLDrawer
localizationGL	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    LocalizationGL localizationGL;$/;"	m	class:GLDrawer
localization_	core/InterpreterModule.h	/^    LocalizationBlock *localization_;$/;"	m	class:InterpreterModule
localization_	core/VisionCore.h	/^  LocalizationModule *localization_;$/;"	m	class:VisionCore
localization_	core/communications/CommunicationModule.h	/^  LocalizationBlock *localization_;$/;"	m	class:CommunicationModule
localization_mem	core/memory/MemoryCache.h	/^    LocalizationBlock* localization_mem;$/;"	m	class:MemoryCache
localization_mem	core/python/memory.py	/^  def localization_mem(): return core.pythonC.localization_$/;"	f	function:init
localstat	lib/lua/src/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
locationChanged	build/include/tool/FilesWindow.cpp	/^void FilesWindow::locationChanged(int index){$/;"	f	class:FilesWindow
locationChanged	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::locationChanged(int index){$/;"	f	class:FilesWindow
lock	core/memory/Lock.cpp	/^void Lock::lock(){$/;"	f	class:Lock
lock	interfaces/shared_motion/main.cpp	/^Lock *lock = NULL;$/;"	v
lock_	core/memory/Lock.h	/^  boost::interprocess::scoped_lock<boost::interprocess::named_mutex> *lock_;$/;"	m	class:Lock
locvars	lib/lua/src/lobject.h	/^  struct LocVar *locvars;  \/* information about local variables *\/$/;"	m	struct:Proto	typeref:struct:Proto::LocVar
log	core/localization/Logging.h	/^#define log(/;"	d
log	core/memory/TextLogger.cpp	/^void TextLogger::log(int logLevel, int moduleType, const char* format, ...) {$/;"	f	class:TextLogger
log	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> log (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
log	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> log (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
log	core/python/UTdebug.py	/^def log(loglevel, *args):$/;"	f
log	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
logButton	build/include/tool/LogSelectWindow.h	/^    QPushButton* logButton;$/;"	m	class:LogSelectWindow
logButton	tools/UTNaoTool/LogSelectWindow.h	/^    QPushButton* logButton;$/;"	m	class:LogSelectWindow
logEditorWnd_	build/include/tool/UTMainWnd.h	/^  LogEditorWindow* logEditorWnd_;$/;"	m	class:UTMainWnd
logEditorWnd_	tools/UTNaoTool/UTMainWnd.h	/^  LogEditorWindow* logEditorWnd_;$/;"	m	class:UTMainWnd
logEnd	build/include/tool/ToolConfig.h	/^    int logStart, logEnd, logStep;$/;"	m	class:ToolConfig
logEnd	tools/UTNaoTool/ToolConfig.h	/^    int logStart, logEnd, logStep;$/;"	m	class:ToolConfig
logFile	build/include/tool/ToolConfig.h	/^    std::string logFile;$/;"	m	class:ToolConfig
logFile	build/include/tool/UTNaoTool.cpp	/^  std::string logFile;$/;"	m	namespace:__anon4	file:
logFile	tools/UTNaoTool/ToolConfig.h	/^    std::string logFile;$/;"	m	class:ToolConfig
logFile	tools/UTNaoTool/UTNaoTool.cpp	/^  std::string logFile;$/;"	m	namespace:__anon142	file:
logFrame	build/include/tool/ToolConfig.h	/^    int logFrame;$/;"	m	class:ToolConfig
logFrame	tools/UTNaoTool/ToolConfig.h	/^    int logFrame;$/;"	m	class:ToolConfig
logFromLocalization	core/memory/TextLogger.cpp	/^void TextLogger::logFromLocalization(int logLevel, const char* format, ...) {$/;"	f	class:TextLogger
logFromOpp	core/memory/TextLogger.cpp	/^void TextLogger::logFromOpp(int logLevel, const char* format, ...) {$/;"	f	class:TextLogger
logFromVision	core/memory/TextLogger.cpp	/^void TextLogger::logFromVision(int logLevel, const char* format, ...) {$/;"	f	class:TextLogger
logLevel	core/motion/rswalk2014/utils/Logger.cpp	/^enum LogLevel Logger::logLevel;$/;"	m	class:Logger	typeref:enum:Logger::	file:
logLevel	core/motion/rswalk2014/utils/Logger.hpp	/^      static enum LogLevel logLevel;$/;"	m	class:Logger	typeref:enum:Logger::LogLevel
logLevelHigh	build/include/tool/ToolConfig.h	/^    int logLevelHigh;$/;"	m	class:ToolConfig
logLevelHigh	tools/UTNaoTool/ToolConfig.h	/^    int logLevelHigh;$/;"	m	class:ToolConfig
logLevelLow	build/include/tool/ToolConfig.h	/^    int logLevelLow;$/;"	m	class:ToolConfig
logLevelLow	tools/UTNaoTool/ToolConfig.h	/^    int logLevelLow;$/;"	m	class:ToolConfig
logMemory	core/VisionCore.cpp	/^void VisionCore::logMemory() {$/;"	f	class:VisionCore
logModeOff	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::logModeOff(bool force) {$/;"	f	class:LogSelectWindow
logModeOff	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::logModeOff(bool force) {$/;"	f	class:LogSelectWindow
logModeOn	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::logModeOn() {$/;"	f	class:LogSelectWindow
logModeOn	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::logModeOn() {$/;"	f	class:LogSelectWindow
logPath	build/include/tool/FilesWindow.h	/^    QString logPath;$/;"	m	class:FilesWindow
logPath	core/motion/rswalk2014/utils/Logger.cpp	/^std::string Logger::logPath;$/;"	m	class:Logger	file:
logPath	core/motion/rswalk2014/utils/Logger.hpp	/^      static std::string logPath;$/;"	m	class:Logger
logPath	tools/UTNaoTool/FilesWindow.h	/^    QString logPath;$/;"	m	class:FilesWindow
logSelectWnd_	build/include/tool/UTMainWnd.h	/^  LogSelectWindow* logSelectWnd_;$/;"	m	class:UTMainWnd
logSelectWnd_	tools/UTNaoTool/UTMainWnd.h	/^  LogSelectWindow* logSelectWnd_;$/;"	m	class:UTMainWnd
logStart	build/include/tool/ToolConfig.h	/^    int logStart, logEnd, logStep;$/;"	m	class:ToolConfig
logStart	tools/UTNaoTool/ToolConfig.h	/^    int logStart, logEnd, logStep;$/;"	m	class:ToolConfig
logStatuses_	build/include/tool/TeamConfigWindow.h	/^    std::map<int, QLabel*> logStatuses_;$/;"	m	class:TeamConfigWindow
logStatuses_	tools/UTNaoTool/TeamConfigWindow.h	/^    std::map<int, QLabel*> logStatuses_;$/;"	m	class:TeamConfigWindow
logStep	build/include/tool/ToolConfig.h	/^    int logStart, logEnd, logStep;$/;"	m	class:ToolConfig
logStep	tools/UTNaoTool/ToolConfig.h	/^    int logStart, logEnd, logStep;$/;"	m	class:ToolConfig
logStream	build/include/tool/ToolConfig.h	/^    bool logStream;$/;"	m	class:ToolConfig
logStream	core/motion/rswalk2014/utils/Logger.hpp	/^      std::ostream *logStream;$/;"	m	class:Logger
logStream	tools/UTNaoTool/ToolConfig.h	/^    bool logStream;$/;"	m	class:ToolConfig
logWnd_	build/include/tool/UTMainWnd.h	/^  LogWindow* logWnd_;$/;"	m	class:UTMainWnd
logWnd_	tools/UTNaoTool/UTMainWnd.h	/^  LogWindow* logWnd_;$/;"	m	class:UTMainWnd
logWriter	build/include/tool/LogEditorWindow.h	/^    Logger *logWriter;$/;"	m	class:LogEditorWindow
logWriter	tools/UTNaoTool/LogEditorWindow.h	/^    Logger *logWriter;$/;"	m	class:LogEditorWindow
log_	build/include/tool/AnalysisWidget.h	/^        Log* log_;$/;"	m	class:AnalysisWidget
log_	build/include/tool/AnnotationWidget.h	/^        Log* log_;$/;"	m	class:AnnotationWidget
log_	build/include/tool/ClassificationWidget.h	/^        Log* log_;$/;"	m	class:ClassificationWidget
log_	build/include/tool/ExtrinsicCalibrationWidget.h	/^    Log* log_;$/;"	m	class:ExtrinsicCalibrationWidget
log_	build/include/tool/IntrinsicCalibrationWidget.h	/^    Log* log_;$/;"	m	class:IntrinsicCalibrationWidget
log_	build/include/tool/LogEditorWindow.h	/^    Log* log_;$/;"	m	class:LogEditorWindow
log_	core/VisionCore.h	/^  Logger* log_;$/;"	m	class:VisionCore
log_	tools/UTNaoTool/AnalysisWidget.h	/^        Log* log_;$/;"	m	class:AnalysisWidget
log_	tools/UTNaoTool/AnnotationWidget.h	/^        Log* log_;$/;"	m	class:AnnotationWidget
log_	tools/UTNaoTool/ClassificationWidget.h	/^        Log* log_;$/;"	m	class:ClassificationWidget
log_	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^    Log* log_;$/;"	m	class:ExtrinsicCalibrationWidget
log_	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^    Log* log_;$/;"	m	class:IntrinsicCalibrationWidget
log_	tools/UTNaoTool/LogEditorWindow.h	/^    Log* log_;$/;"	m	class:LogEditorWindow
log_annotations_	build/include/tool/LogEditorWindow.h	/^    std::map<Log*, AnnotationGroup*> log_annotations_;$/;"	m	class:LogEditorWindow
log_annotations_	tools/UTNaoTool/LogEditorWindow.h	/^    std::map<Log*, AnnotationGroup*> log_annotations_;$/;"	m	class:LogEditorWindow
log_behavior_trace_	core/memory/BehaviorBlock.h	/^  bool log_behavior_trace_;$/;"	m	struct:BehaviorBlock
log_block	core/memory/MemoryBlock.h	/^  bool log_block;$/;"	m	class:MemoryBlock
log_buffer_	core/communications/CommunicationModule.h	/^  char *log_buffer_;$/;"	m	class:CommunicationModule
log_by_frame_	core/VisionCore.h	/^  bool log_by_frame_;$/;"	m	class:VisionCore
log_enabled_	build/include/tool/LogSelectWindow.h	/^    bool log_enabled_;$/;"	m	class:LogSelectWindow
log_enabled_	tools/UTNaoTool/LogSelectWindow.h	/^    bool log_enabled_;$/;"	m	class:LogSelectWindow
log_file_	core/memory/LogReader.h	/^    std::ifstream log_file_;$/;"	m	class:LogReader
log_file_	core/memory/Logger.h	/^  std::ofstream log_file_;$/;"	m	class:Logger
log_interval_	core/VisionCore.h	/^  double log_interval_;$/;"	m	class:VisionCore
logarithmic	interfaces/sim_spark/Random.h	/^   float logarithmic( float xMin = 0., float xMax = 1. )   \/\/ Logarithmic$/;"	f	class:Random
logd	data/ballfit.py	/^logd = numpy.log(diameters)$/;"	v
logger	core/motion/rswalk2014/utils/Logger.cpp	/^__thread Logger *Logger::logger = NULL;$/;"	m	class:Logger	file:
logger	core/motion/rswalk2014/utils/Logger.hpp	/^      static __thread Logger *logger;$/;"	m	class:Logger
logger_	build/include/tool/UTMainWnd.h	/^  Logger* logger_;$/;"	m	class:UTMainWnd
logger_	tools/UTNaoTool/UTMainWnd.h	/^  Logger* logger_;$/;"	m	class:UTMainWnd
logging	core/python/UTdebug.py	/^import logging; logging.disable(logging.ERROR) # kill hashlib errors from random$/;"	i
logging	core/python/init.py	/^import logging; logging.disable(logging.ERROR)$/;"	i
loggingModules	build/include/tool/ToolConfig.h	/^    std::vector<std::string> loggingModules;$/;"	m	class:ToolConfig
loggingModules	tools/UTNaoTool/ToolConfig.h	/^    std::vector<std::string> loggingModules;$/;"	m	class:ToolConfig
logh	data/goalfit.py	/^logh = numpy.log(heights)$/;"	v
logindex	build/include/tool/UTNaoTool.cpp	/^  int logindex = -1;$/;"	m	namespace:__anon4	file:
logindex	tools/UTNaoTool/UTNaoTool.cpp	/^  int logindex = -1;$/;"	m	namespace:__anon142	file:
logistic	interfaces/sim_spark/Random.h	/^   float logistic( float a = 0., float c = 1. )   \/\/ Logistic$/;"	f	class:Random
logit_ftol	lib/alglib/dataanalysis.cpp	/^static double logit_ftol = 0.0001;$/;"	m	namespace:alglib_impl	file:
logit_gtol	lib/alglib/dataanalysis.cpp	/^static double logit_gtol = 0.3;$/;"	m	namespace:alglib_impl	file:
logit_logitvnum	lib/alglib/dataanalysis.cpp	/^static ae_int_t logit_logitvnum = 6;$/;"	m	namespace:alglib_impl	file:
logit_maxfev	lib/alglib/dataanalysis.cpp	/^static ae_int_t logit_maxfev = 20;$/;"	m	namespace:alglib_impl	file:
logit_mnlallerrors	lib/alglib/dataanalysis.cpp	/^static void logit_mnlallerrors(logitmodel* lm,$/;"	f	namespace:alglib_impl
logit_mnliexp	lib/alglib/dataanalysis.cpp	/^static void logit_mnliexp(\/* Real    *\/ ae_vector* w,$/;"	f	namespace:alglib_impl
logit_mnlmcsrch	lib/alglib/dataanalysis.cpp	/^static void logit_mnlmcsrch(ae_int_t n,$/;"	f	namespace:alglib_impl
logit_mnlmcstep	lib/alglib/dataanalysis.cpp	/^static void logit_mnlmcstep(double* stx,$/;"	f	namespace:alglib_impl
logit_stpmax	lib/alglib/dataanalysis.cpp	/^static double logit_stpmax = 1.0E5;$/;"	m	namespace:alglib_impl	file:
logit_stpmin	lib/alglib/dataanalysis.cpp	/^static double logit_stpmin = 1.0E-2;$/;"	m	namespace:alglib_impl	file:
logit_xtol	lib/alglib/dataanalysis.cpp	/^static double logit_xtol = 100*ae_machineepsilon;$/;"	m	namespace:alglib_impl	file:
logitmcstate	lib/alglib/dataanalysis.h	/^} logitmcstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon46
logitmodel	lib/alglib/dataanalysis.cpp	/^logitmodel::logitmodel() : _logitmodel_owner() $/;"	f	class:alglib::logitmodel
logitmodel	lib/alglib/dataanalysis.cpp	/^logitmodel::logitmodel(const logitmodel &rhs):_logitmodel_owner(rhs) $/;"	f	class:alglib::logitmodel
logitmodel	lib/alglib/dataanalysis.h	/^class logitmodel : public _logitmodel_owner$/;"	c	namespace:alglib
logitmodel	lib/alglib/dataanalysis.h	/^} logitmodel;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon45
loglikelihood	tools/behaviorSim/cma.py	/^    def loglikelihood(self, x, previous=False):$/;"	m	class:Misc
lognormal	interfaces/sim_spark/Random.h	/^   float lognormal( float a, float mu, float sigma )   \/\/ Lognormal$/;"	f	class:Random
logpath_	build/include/tool/ProcessExecutor.h	/^    QString basepath_, logpath_, datapath_;$/;"	m	class:ProcessExecutor
logpath_	tools/UTNaoTool/ProcessExecutor.h	/^    QString basepath_, logpath_, datapath_;$/;"	m	class:ProcessExecutor
logtimer_	core/VisionCore.h	/^   Timer vtimer_, camtimer_, logtimer_;$/;"	m	class:VisionCore
logw	data/goalfit.py	/^logw = numpy.log(widths)$/;"	v
logy	data/ballfit.py	/^logy = numpy.log(grounds)$/;"	v
logy	data/goalfit.py	/^logy = numpy.log(grounds)$/;"	v
longKickCock	core/python/cfgpose.py	/^longKickCock = dict()$/;"	v
longKickKick	core/python/cfgpose.py	/^longKickKick = dict()$/;"	v
longKickLift	core/python/cfgpose.py	/^longKickLift = dict()$/;"	v
longKickLiftStep	core/python/cfgpose.py	/^longKickLiftStep = dict()$/;"	v
longKickShift	core/python/cfgpose.py	/^longKickShift = dict()$/;"	v
longKickShift2	core/python/cfgpose.py	/^longKickShift2 = dict()$/;"	v
longKickShift2Step	core/python/cfgpose.py	/^longKickShift2Step = dict()$/;"	v
longKickShiftback	core/python/cfgpose.py	/^longKickShiftback = dict()$/;"	v
longKickStandend	core/python/cfgpose.py	/^longKickStandend = dict()$/;"	v
longKickStep	core/python/cfgpose.py	/^longKickStep={}$/;"	v
longKickStep2	core/python/cfgpose.py	/^longKickStep2={}$/;"	v
longKickStepFirst	core/python/cfgpose.py	/^longKickStepFirst={}$/;"	v
longKickStepFirst2	core/python/cfgpose.py	/^longKickStepFirst2={}$/;"	v
longKickStepShort	core/python/cfgpose.py	/^longKickStepShort={}$/;"	v
longest_match	lib/zlib/deflate.c	/^local uInt longest_match(s, cur_match)$/;"	f
lookForCross	core/memory/RobotVisionBlock.h	/^  bool lookForCross;$/;"	m	struct:RobotVisionBlock
lookahead	lib/lua/src/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState
lookahead	lib/zlib/deflate.h	/^    uInt lookahead;              \/* number of valid bytes ahead in window *\/$/;"	m	struct:internal_state
lookupGroup	build/include/tool/LogEditorWindow.cpp	/^AnnotationGroup* LogEditorWindow::lookupGroup(Log* log) {$/;"	f	class:LogEditorWindow
lookupGroup	tools/UTNaoTool/LogEditorWindow.cpp	/^AnnotationGroup* LogEditorWindow::lookupGroup(Log* log) {$/;"	f	class:LogEditorWindow
lookupLog	build/include/tool/LogEditorWindow.cpp	/^Log* LogEditorWindow::lookupLog(std::string path){$/;"	f	class:LogEditorWindow
lookupLog	tools/UTNaoTool/LogEditorWindow.cpp	/^Log* LogEditorWindow::lookupLog(std::string path){$/;"	f	class:LogEditorWindow
loop	build/include/tool/RobotControllerWidget.cpp	/^void RobotControllerWidget::loop() {$/;"	f	class:RobotControllerWidget
loop	tools/UTNaoTool/RobotControllerWidget.cpp	/^void RobotControllerWidget::loop() {$/;"	f	class:RobotControllerWidget
lopcodes_c	lib/lua/src/lopcodes.c	/^#define lopcodes_c$/;"	d	file:
lopcodes_h	lib/lua/src/lopcodes.h	/^#define lopcodes_h$/;"	d
loslib_c	lib/lua/src/loslib.c	/^#define loslib_c$/;"	d	file:
low_feature	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   low_feature ()$/;"	f	struct:low_feature
low_feature	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   low_feature (low_feature_t type, dir_t orientation)$/;"	f	struct:low_feature
low_feature	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^struct low_feature$/;"	s
low_feature_t	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^enum low_feature_t$/;"	g
low_variance_sampler	particle_filters/MCL_particle_filter.hpp	/^    void low_variance_sampler()$/;"	f	class:MCLParticleFilter
low_variance_sampler	particle_filters/RMCL_particle_filter.hpp	/^    void low_variance_sampler()$/;"	f	class:RMCLParticleFilter
lowerArmLength	core/common/RobotDimensions.h	/^    lowerArmLength,$/;"	e	enum:RobotDimensions::__anon8
lowerHeight	core/common/WorldObject.h	/^  float lowerHeight; \/\/\/< The height of the lower part of this object.$/;"	m	class:WorldObject
lowerLegLength	core/common/RobotDimensions.h	/^    lowerLegLength,$/;"	e	enum:RobotDimensions::__anon8
lpCount	core/vision/structures/Blob.h	/^  uint16_t lpCount;$/;"	m	struct:Blob
lpIndex	core/vision/structures/Blob.h	/^  std::vector<uint32_t> lpIndex;$/;"	m	struct:Blob
lparser_c	lib/lua/src/lparser.c	/^#define lparser_c$/;"	d	file:
lparser_h	lib/lua/src/lparser.h	/^#define lparser_h$/;"	d
lr_distance_diff_	core/sonar/SonarModule.h	/^  float lr_distance_diff_;$/;"	m	class:SonarModule
lravgerror	lib/alglib/dataanalysis.cpp	/^double lravgerror(const linearmodel &lm, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
lravgerror	lib/alglib/dataanalysis.cpp	/^double lravgerror(linearmodel* lm,$/;"	f	namespace:alglib_impl
lravgrelerror	lib/alglib/dataanalysis.cpp	/^double lravgrelerror(const linearmodel &lm, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
lravgrelerror	lib/alglib/dataanalysis.cpp	/^double lravgrelerror(linearmodel* lm,$/;"	f	namespace:alglib_impl
lrbuild	lib/alglib/dataanalysis.cpp	/^void lrbuild(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
lrbuild	lib/alglib/dataanalysis.cpp	/^void lrbuild(const real_2d_array &xy, const ae_int_t npoints, const ae_int_t nvars, ae_int_t &info, linearmodel &lm, lrreport &ar)$/;"	f	namespace:alglib
lrbuilds	lib/alglib/dataanalysis.cpp	/^void lrbuilds(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
lrbuilds	lib/alglib/dataanalysis.cpp	/^void lrbuilds(const real_2d_array &xy, const real_1d_array &s, const ae_int_t npoints, const ae_int_t nvars, ae_int_t &info, linearmodel &lm, lrreport &ar)$/;"	f	namespace:alglib
lrbuildz	lib/alglib/dataanalysis.cpp	/^void lrbuildz(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
lrbuildz	lib/alglib/dataanalysis.cpp	/^void lrbuildz(const real_2d_array &xy, const ae_int_t npoints, const ae_int_t nvars, ae_int_t &info, linearmodel &lm, lrreport &ar)$/;"	f	namespace:alglib
lrbuildzs	lib/alglib/dataanalysis.cpp	/^void lrbuildzs(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
lrbuildzs	lib/alglib/dataanalysis.cpp	/^void lrbuildzs(const real_2d_array &xy, const real_1d_array &s, const ae_int_t npoints, const ae_int_t nvars, ae_int_t &info, linearmodel &lm, lrreport &ar)$/;"	f	namespace:alglib
lrcopy	lib/alglib/dataanalysis.cpp	/^void lrcopy(linearmodel* lm1, linearmodel* lm2, ae_state *_state)$/;"	f	namespace:alglib_impl
lrline	lib/alglib/dataanalysis.cpp	/^void lrline(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
lrlines	lib/alglib/dataanalysis.cpp	/^void lrlines(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
lrpack	lib/alglib/dataanalysis.cpp	/^void lrpack(\/* Real    *\/ ae_vector* v,$/;"	f	namespace:alglib_impl
lrpack	lib/alglib/dataanalysis.cpp	/^void lrpack(const real_1d_array &v, const ae_int_t nvars, linearmodel &lm)$/;"	f	namespace:alglib
lrprocess	lib/alglib/dataanalysis.cpp	/^double lrprocess(const linearmodel &lm, const real_1d_array &x)$/;"	f	namespace:alglib
lrprocess	lib/alglib/dataanalysis.cpp	/^double lrprocess(linearmodel* lm,$/;"	f	namespace:alglib_impl
lrreport	lib/alglib/dataanalysis.cpp	/^lrreport::lrreport() : _lrreport_owner() ,c(&p_struct->c),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),cvrmserror(p_struct->cvrmserror),cvavgerror(p_struct->cvavgerror),cvavgrelerror(p_struct->cvavgrelerror),ncvdefects(p_struct->ncvdefects),cvdefects(&p_struct->cvdefects)$/;"	f	class:alglib::lrreport
lrreport	lib/alglib/dataanalysis.cpp	/^lrreport::lrreport(const lrreport &rhs):_lrreport_owner(rhs) ,c(&p_struct->c),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),cvrmserror(p_struct->cvrmserror),cvavgerror(p_struct->cvavgerror),cvavgrelerror(p_struct->cvavgrelerror),ncvdefects(p_struct->ncvdefects),cvdefects(&p_struct->cvdefects)$/;"	f	class:alglib::lrreport
lrreport	lib/alglib/dataanalysis.h	/^class lrreport : public _lrreport_owner$/;"	c	namespace:alglib
lrreport	lib/alglib/dataanalysis.h	/^} lrreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon43
lrrmserror	lib/alglib/dataanalysis.cpp	/^double lrrmserror(const linearmodel &lm, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
lrrmserror	lib/alglib/dataanalysis.cpp	/^double lrrmserror(linearmodel* lm,$/;"	f	namespace:alglib_impl
lrunpack	lib/alglib/dataanalysis.cpp	/^void lrunpack(const linearmodel &lm, real_1d_array &v, ae_int_t &nvars)$/;"	f	namespace:alglib
lrunpack	lib/alglib/dataanalysis.cpp	/^void lrunpack(linearmodel* lm,$/;"	f	namespace:alglib_impl
ls	lib/lua/src/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState
lsend	lib/alglib/optimization.h	/^    ae_bool lsend;$/;"	m	struct:alglib_impl::__anon77
lsfit_barycentriccalcbasis	lib/alglib/interpolation.cpp	/^static void lsfit_barycentriccalcbasis(barycentricinterpolant* b,$/;"	f	namespace:alglib_impl
lsfit_barycentricfitwcfixedd	lib/alglib/interpolation.cpp	/^static void lsfit_barycentricfitwcfixedd(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
lsfit_internalchebyshevfit	lib/alglib/interpolation.cpp	/^static void lsfit_internalchebyshevfit(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
lsfit_lsfitclearrequestfields	lib/alglib/interpolation.cpp	/^static void lsfit_lsfitclearrequestfields(lsfitstate* state,$/;"	f	namespace:alglib_impl
lsfit_lsfitlinearinternal	lib/alglib/interpolation.cpp	/^static void lsfit_lsfitlinearinternal(\/* Real    *\/ ae_vector* y,$/;"	f	namespace:alglib_impl
lsfit_rfsmax	lib/alglib/interpolation.cpp	/^static ae_int_t lsfit_rfsmax = 10;$/;"	m	namespace:alglib_impl	file:
lsfit_spline1dfitinternal	lib/alglib/interpolation.cpp	/^static void lsfit_spline1dfitinternal(ae_int_t st,$/;"	f	namespace:alglib_impl
lsfitcreatef	lib/alglib/interpolation.cpp	/^void lsfitcreatef(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
lsfitcreatef	lib/alglib/interpolation.cpp	/^void lsfitcreatef(const real_2d_array &x, const real_1d_array &y, const real_1d_array &c, const ae_int_t n, const ae_int_t m, const ae_int_t k, const double diffstep, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatef	lib/alglib/interpolation.cpp	/^void lsfitcreatef(const real_2d_array &x, const real_1d_array &y, const real_1d_array &c, const double diffstep, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatefg	lib/alglib/interpolation.cpp	/^void lsfitcreatefg(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
lsfitcreatefg	lib/alglib/interpolation.cpp	/^void lsfitcreatefg(const real_2d_array &x, const real_1d_array &y, const real_1d_array &c, const ae_int_t n, const ae_int_t m, const ae_int_t k, const bool cheapfg, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatefg	lib/alglib/interpolation.cpp	/^void lsfitcreatefg(const real_2d_array &x, const real_1d_array &y, const real_1d_array &c, const bool cheapfg, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatefgh	lib/alglib/interpolation.cpp	/^void lsfitcreatefgh(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
lsfitcreatefgh	lib/alglib/interpolation.cpp	/^void lsfitcreatefgh(const real_2d_array &x, const real_1d_array &y, const real_1d_array &c, const ae_int_t n, const ae_int_t m, const ae_int_t k, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatefgh	lib/alglib/interpolation.cpp	/^void lsfitcreatefgh(const real_2d_array &x, const real_1d_array &y, const real_1d_array &c, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatewf	lib/alglib/interpolation.cpp	/^void lsfitcreatewf(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
lsfitcreatewf	lib/alglib/interpolation.cpp	/^void lsfitcreatewf(const real_2d_array &x, const real_1d_array &y, const real_1d_array &w, const real_1d_array &c, const ae_int_t n, const ae_int_t m, const ae_int_t k, const double diffstep, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatewf	lib/alglib/interpolation.cpp	/^void lsfitcreatewf(const real_2d_array &x, const real_1d_array &y, const real_1d_array &w, const real_1d_array &c, const double diffstep, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatewfg	lib/alglib/interpolation.cpp	/^void lsfitcreatewfg(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
lsfitcreatewfg	lib/alglib/interpolation.cpp	/^void lsfitcreatewfg(const real_2d_array &x, const real_1d_array &y, const real_1d_array &w, const real_1d_array &c, const ae_int_t n, const ae_int_t m, const ae_int_t k, const bool cheapfg, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatewfg	lib/alglib/interpolation.cpp	/^void lsfitcreatewfg(const real_2d_array &x, const real_1d_array &y, const real_1d_array &w, const real_1d_array &c, const bool cheapfg, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatewfgh	lib/alglib/interpolation.cpp	/^void lsfitcreatewfgh(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
lsfitcreatewfgh	lib/alglib/interpolation.cpp	/^void lsfitcreatewfgh(const real_2d_array &x, const real_1d_array &y, const real_1d_array &w, const real_1d_array &c, const ae_int_t n, const ae_int_t m, const ae_int_t k, lsfitstate &state)$/;"	f	namespace:alglib
lsfitcreatewfgh	lib/alglib/interpolation.cpp	/^void lsfitcreatewfgh(const real_2d_array &x, const real_1d_array &y, const real_1d_array &w, const real_1d_array &c, lsfitstate &state)$/;"	f	namespace:alglib
lsfitfit	lib/alglib/interpolation.cpp	/^void lsfitfit(lsfitstate &state,$/;"	f	namespace:alglib
lsfititeration	lib/alglib/interpolation.cpp	/^ae_bool lsfititeration(lsfitstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
lsfititeration	lib/alglib/interpolation.cpp	/^bool lsfititeration(const lsfitstate &state)$/;"	f	namespace:alglib
lsfitlinear	lib/alglib/interpolation.cpp	/^void lsfitlinear(\/* Real    *\/ ae_vector* y,$/;"	f	namespace:alglib_impl
lsfitlinear	lib/alglib/interpolation.cpp	/^void lsfitlinear(const real_1d_array &y, const real_2d_array &fmatrix, ae_int_t &info, real_1d_array &c, lsfitreport &rep)$/;"	f	namespace:alglib
lsfitlinear	lib/alglib/interpolation.cpp	/^void lsfitlinear(const real_1d_array &y, const real_2d_array &fmatrix, const ae_int_t n, const ae_int_t m, ae_int_t &info, real_1d_array &c, lsfitreport &rep)$/;"	f	namespace:alglib
lsfitlinearc	lib/alglib/interpolation.cpp	/^void lsfitlinearc(\/* Real    *\/ ae_vector* y,$/;"	f	namespace:alglib_impl
lsfitlinearc	lib/alglib/interpolation.cpp	/^void lsfitlinearc(const real_1d_array &y, const real_2d_array &fmatrix, const real_2d_array &cmatrix, ae_int_t &info, real_1d_array &c, lsfitreport &rep)$/;"	f	namespace:alglib
lsfitlinearc	lib/alglib/interpolation.cpp	/^void lsfitlinearc(const real_1d_array &y, const real_2d_array &fmatrix, const real_2d_array &cmatrix, const ae_int_t n, const ae_int_t m, const ae_int_t k, ae_int_t &info, real_1d_array &c, lsfitreport &rep)$/;"	f	namespace:alglib
lsfitlinearw	lib/alglib/interpolation.cpp	/^void lsfitlinearw(\/* Real    *\/ ae_vector* y,$/;"	f	namespace:alglib_impl
lsfitlinearw	lib/alglib/interpolation.cpp	/^void lsfitlinearw(const real_1d_array &y, const real_1d_array &w, const real_2d_array &fmatrix, ae_int_t &info, real_1d_array &c, lsfitreport &rep)$/;"	f	namespace:alglib
lsfitlinearw	lib/alglib/interpolation.cpp	/^void lsfitlinearw(const real_1d_array &y, const real_1d_array &w, const real_2d_array &fmatrix, const ae_int_t n, const ae_int_t m, ae_int_t &info, real_1d_array &c, lsfitreport &rep)$/;"	f	namespace:alglib
lsfitlinearwc	lib/alglib/interpolation.cpp	/^void lsfitlinearwc(\/* Real    *\/ ae_vector* y,$/;"	f	namespace:alglib_impl
lsfitlinearwc	lib/alglib/interpolation.cpp	/^void lsfitlinearwc(const real_1d_array &y, const real_1d_array &w, const real_2d_array &fmatrix, const real_2d_array &cmatrix, ae_int_t &info, real_1d_array &c, lsfitreport &rep)$/;"	f	namespace:alglib
lsfitlinearwc	lib/alglib/interpolation.cpp	/^void lsfitlinearwc(const real_1d_array &y, const real_1d_array &w, const real_2d_array &fmatrix, const real_2d_array &cmatrix, const ae_int_t n, const ae_int_t m, const ae_int_t k, ae_int_t &info, real_1d_array &c, lsfitreport &rep)$/;"	f	namespace:alglib
lsfitreport	lib/alglib/interpolation.cpp	/^lsfitreport::lsfitreport() : _lsfitreport_owner() ,taskrcond(p_struct->taskrcond),iterationscount(p_struct->iterationscount),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),maxerror(p_struct->maxerror),wrmserror(p_struct->wrmserror)$/;"	f	class:alglib::lsfitreport
lsfitreport	lib/alglib/interpolation.cpp	/^lsfitreport::lsfitreport(const lsfitreport &rhs):_lsfitreport_owner(rhs) ,taskrcond(p_struct->taskrcond),iterationscount(p_struct->iterationscount),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),maxerror(p_struct->maxerror),wrmserror(p_struct->wrmserror)$/;"	f	class:alglib::lsfitreport
lsfitreport	lib/alglib/interpolation.h	/^class lsfitreport : public _lsfitreport_owner$/;"	c	namespace:alglib
lsfitreport	lib/alglib/interpolation.h	/^} lsfitreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon62
lsfitresults	lib/alglib/interpolation.cpp	/^void lsfitresults(const lsfitstate &state, ae_int_t &info, real_1d_array &c, lsfitreport &rep)$/;"	f	namespace:alglib
lsfitresults	lib/alglib/interpolation.cpp	/^void lsfitresults(lsfitstate* state,$/;"	f	namespace:alglib_impl
lsfitscalexy	lib/alglib/interpolation.cpp	/^void lsfitscalexy(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
lsfitsetbc	lib/alglib/interpolation.cpp	/^void lsfitsetbc(const lsfitstate &state, const real_1d_array &bndl, const real_1d_array &bndu)$/;"	f	namespace:alglib
lsfitsetbc	lib/alglib/interpolation.cpp	/^void lsfitsetbc(lsfitstate* state,$/;"	f	namespace:alglib_impl
lsfitsetcond	lib/alglib/interpolation.cpp	/^void lsfitsetcond(const lsfitstate &state, const double epsf, const double epsx, const ae_int_t maxits)$/;"	f	namespace:alglib
lsfitsetcond	lib/alglib/interpolation.cpp	/^void lsfitsetcond(lsfitstate* state,$/;"	f	namespace:alglib_impl
lsfitsetscale	lib/alglib/interpolation.cpp	/^void lsfitsetscale(const lsfitstate &state, const real_1d_array &s)$/;"	f	namespace:alglib
lsfitsetscale	lib/alglib/interpolation.cpp	/^void lsfitsetscale(lsfitstate* state,$/;"	f	namespace:alglib_impl
lsfitsetstpmax	lib/alglib/interpolation.cpp	/^void lsfitsetstpmax(const lsfitstate &state, const double stpmax)$/;"	f	namespace:alglib
lsfitsetstpmax	lib/alglib/interpolation.cpp	/^void lsfitsetstpmax(lsfitstate* state, double stpmax, ae_state *_state)$/;"	f	namespace:alglib_impl
lsfitsetxrep	lib/alglib/interpolation.cpp	/^void lsfitsetxrep(const lsfitstate &state, const bool needxrep)$/;"	f	namespace:alglib
lsfitsetxrep	lib/alglib/interpolation.cpp	/^void lsfitsetxrep(lsfitstate* state, ae_bool needxrep, ae_state *_state)$/;"	f	namespace:alglib_impl
lsfitstate	lib/alglib/interpolation.cpp	/^lsfitstate::lsfitstate() : _lsfitstate_owner() ,needf(p_struct->needf),needfg(p_struct->needfg),needfgh(p_struct->needfgh),xupdated(p_struct->xupdated),c(&p_struct->c),f(p_struct->f),g(&p_struct->g),h(&p_struct->h),x(&p_struct->x)$/;"	f	class:alglib::lsfitstate
lsfitstate	lib/alglib/interpolation.cpp	/^lsfitstate::lsfitstate(const lsfitstate &rhs):_lsfitstate_owner(rhs) ,needf(p_struct->needf),needfg(p_struct->needfg),needfgh(p_struct->needfgh),xupdated(p_struct->xupdated),c(&p_struct->c),f(p_struct->f),g(&p_struct->g),h(&p_struct->h),x(&p_struct->x)$/;"	f	class:alglib::lsfitstate
lsfitstate	lib/alglib/interpolation.h	/^class lsfitstate : public _lsfitstate_owner$/;"	c	namespace:alglib
lsfitstate	lib/alglib/interpolation.h	/^} lsfitstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon63
lsizenode	lib/lua/src/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of `node' array *\/$/;"	m	struct:Table
lsstart	lib/alglib/optimization.h	/^    ae_bool lsstart;$/;"	m	struct:alglib_impl::__anon77
lstate	lib/alglib/optimization.h	/^    linminstate lstate;$/;"	m	struct:alglib_impl::__anon69
lstate	lib/alglib/optimization.h	/^    linminstate lstate;$/;"	m	struct:alglib_impl::__anon75
lstate	lib/alglib/optimization.h	/^    linminstate lstate;$/;"	m	struct:alglib_impl::__anon77
lstate_c	lib/lua/src/lstate.c	/^#define lstate_c$/;"	d	file:
lstate_h	lib/lua/src/lstate.h	/^#define lstate_h$/;"	d
lstop	lib/lua/src/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	lib/lua/src/lstring.c	/^#define lstring_c$/;"	d	file:
lstring_h	lib/lua/src/lstring.h	/^#define lstring_h$/;"	d
lstrlib_c	lib/lua/src/lstrlib.c	/^#define lstrlib_c$/;"	d	file:
lt	build/include/tool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
lt	tools/UTNaoTool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
lt_event	lib/lua/doc/manual.html	/^     function lt_event (op1, op2)$/;"	f
ltable_c	lib/lua/src/ltable.c	/^#define ltable_c$/;"	d	file:
ltable_h	lib/lua/src/ltable.h	/^#define ltable_h$/;"	d
ltablib_c	lib/lua/src/ltablib.c	/^#define ltablib_c$/;"	d	file:
ltm_c	lib/lua/src/ltm.c	/^#define ltm_c$/;"	d	file:
ltm_h	lib/lua/src/ltm.h	/^#define ltm_h$/;"	d
ltnode	lib/yaml-cpp/include/yaml-cpp/ltnode.h	/^	struct ltnode {$/;"	s	namespace:YAML
lu_byte	lib/lua/src/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_int32	lib/lua/src/llimits.h	/^typedef LUAI_UINT32 lu_int32;$/;"	t
lu_mem	lib/lua/src/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
luaA_pushobject	lib/lua/src/lapi.c	/^void luaA_pushobject (lua_State *L, const TValue *o) {$/;"	f
luaB_assert	lib/lua/src/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	lib/lua/src/lbaselib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	lib/lua/src/lbaselib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	lib/lua/src/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	lib/lua/src/lbaselib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	lib/lua/src/lbaselib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	lib/lua/src/lbaselib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	lib/lua/src/lbaselib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	lib/lua/src/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	lib/lua/src/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_gcinfo	lib/lua/src/lbaselib.c	/^static int luaB_gcinfo (lua_State *L) {$/;"	f	file:
luaB_getfenv	lib/lua/src/lbaselib.c	/^static int luaB_getfenv (lua_State *L) {$/;"	f	file:
luaB_getmetatable	lib/lua/src/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	lib/lua/src/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	lib/lua/src/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	lib/lua/src/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_loadstring	lib/lua/src/lbaselib.c	/^static int luaB_loadstring (lua_State *L) {$/;"	f	file:
luaB_newproxy	lib/lua/src/lbaselib.c	/^static int luaB_newproxy (lua_State *L) {$/;"	f	file:
luaB_next	lib/lua/src/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	lib/lua/src/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	lib/lua/src/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	lib/lua/src/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	lib/lua/src/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	lib/lua/src/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawset	lib/lua/src/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	lib/lua/src/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setfenv	lib/lua/src/lbaselib.c	/^static int luaB_setfenv (lua_State *L) {$/;"	f	file:
luaB_setmetatable	lib/lua/src/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	lib/lua/src/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	lib/lua/src/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	lib/lua/src/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_unpack	lib/lua/src/lbaselib.c	/^static int luaB_unpack (lua_State *L) {$/;"	f	file:
luaB_xpcall	lib/lua/src/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	lib/lua/src/lbaselib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaC_barrier	lib/lua/src/lgc.h	/^#define luaC_barrier(/;"	d
luaC_barrierback	lib/lua/src/lgc.c	/^void luaC_barrierback (lua_State *L, Table *t) {$/;"	f
luaC_barrierf	lib/lua/src/lgc.c	/^void luaC_barrierf (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barriert	lib/lua/src/lgc.h	/^#define luaC_barriert(/;"	d
luaC_callGCTM	lib/lua/src/lgc.c	/^void luaC_callGCTM (lua_State *L) {$/;"	f
luaC_checkGC	lib/lua/src/lgc.h	/^#define luaC_checkGC(/;"	d
luaC_freeall	lib/lua/src/lgc.c	/^void luaC_freeall (lua_State *L) {$/;"	f
luaC_fullgc	lib/lua/src/lgc.c	/^void luaC_fullgc (lua_State *L) {$/;"	f
luaC_link	lib/lua/src/lgc.c	/^void luaC_link (lua_State *L, GCObject *o, lu_byte tt) {$/;"	f
luaC_linkupval	lib/lua/src/lgc.c	/^void luaC_linkupval (lua_State *L, UpVal *uv) {$/;"	f
luaC_objbarrier	lib/lua/src/lgc.h	/^#define luaC_objbarrier(/;"	d
luaC_objbarriert	lib/lua/src/lgc.h	/^#define luaC_objbarriert(/;"	d
luaC_separateudata	lib/lua/src/lgc.c	/^size_t luaC_separateudata (lua_State *L, int all) {$/;"	f
luaC_step	lib/lua/src/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaC_white	lib/lua/src/lgc.h	/^#define luaC_white(/;"	d
luaD_call	lib/lua/src/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_callhook	lib/lua/src/ldo.c	/^void luaD_callhook (lua_State *L, int event, int line) {$/;"	f
luaD_checkstack	lib/lua/src/ldo.h	/^#define luaD_checkstack(/;"	d
luaD_growstack	lib/lua/src/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_pcall	lib/lua/src/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	lib/lua/src/ldo.c	/^int luaD_poscall (lua_State *L, StkId firstResult) {$/;"	f
luaD_precall	lib/lua/src/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	lib/lua/src/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name) {$/;"	f
luaD_rawrunprotected	lib/lua/src/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocCI	lib/lua/src/ldo.c	/^void luaD_reallocCI (lua_State *L, int newsize) {$/;"	f
luaD_reallocstack	lib/lua/src/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_seterrorobj	lib/lua/src/ldo.c	/^void luaD_seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f
luaD_throw	lib/lua/src/ldo.c	/^void luaD_throw (lua_State *L, int errcode) {$/;"	f
luaDir	build/include/tool/FilesWindow.h	/^    QDir* luaDir;$/;"	m	class:FilesWindow
luaDir	tools/UTNaoTool/FilesWindow.h	/^    QDir* luaDir;$/;"	m	class:FilesWindow
luaE_freethread	lib/lua/src/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_newthread	lib/lua/src/lstate.c	/^lua_State *luaE_newthread (lua_State *L) {$/;"	f
luaF_close	lib/lua/src/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	lib/lua/src/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeclosure	lib/lua/src/lfunc.c	/^void luaF_freeclosure (lua_State *L, Closure *c) {$/;"	f
luaF_freeproto	lib/lua/src/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_freeupval	lib/lua/src/lfunc.c	/^void luaF_freeupval (lua_State *L, UpVal *uv) {$/;"	f
luaF_getlocalname	lib/lua/src/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_newCclosure	lib/lua/src/lfunc.c	/^Closure *luaF_newCclosure (lua_State *L, int nelems, Table *e) {$/;"	f
luaF_newLclosure	lib/lua/src/lfunc.c	/^Closure *luaF_newLclosure (lua_State *L, int nelems, Table *e) {$/;"	f
luaF_newproto	lib/lua/src/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newupval	lib/lua/src/lfunc.c	/^UpVal *luaF_newupval (lua_State *L) {$/;"	f
luaG_aritherror	lib/lua/src/ldebug.c	/^void luaG_aritherror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_checkcode	lib/lua/src/ldebug.c	/^int luaG_checkcode (const Proto *pt) {$/;"	f
luaG_checkopenop	lib/lua/src/ldebug.c	/^int luaG_checkopenop (Instruction i) {$/;"	f
luaG_concaterror	lib/lua/src/ldebug.c	/^void luaG_concaterror (lua_State *L, StkId p1, StkId p2) {$/;"	f
luaG_errormsg	lib/lua/src/ldebug.c	/^void luaG_errormsg (lua_State *L) {$/;"	f
luaG_ordererror	lib/lua/src/ldebug.c	/^int luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	lib/lua/src/ldebug.c	/^void luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_typeerror	lib/lua/src/ldebug.c	/^void luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	lib/lua/src/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	lib/lua/src/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getn	lib/lua/src/ltable.c	/^int luaH_getn (Table *t) {$/;"	f
luaH_getnum	lib/lua/src/ltable.c	/^const TValue *luaH_getnum (Table *t, int key) {$/;"	f
luaH_getstr	lib/lua/src/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	lib/lua/src/ltable.c	/^int luaH_isdummy (Node *n) { return n == dummynode; }$/;"	f
luaH_mainposition	lib/lua/src/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	lib/lua/src/ltable.c	/^Table *luaH_new (lua_State *L, int narray, int nhash) {$/;"	f
luaH_next	lib/lua/src/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resizearray	lib/lua/src/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, int nasize) {$/;"	f
luaH_set	lib/lua/src/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setnum	lib/lua/src/ltable.c	/^TValue *luaH_setnum (lua_State *L, Table *t, int key) {$/;"	f
luaH_setstr	lib/lua/src/ltable.c	/^TValue *luaH_setstr (lua_State *L, Table *t, TString *key) {$/;"	f
luaI_openlib	lib/lua/src/lauxlib.c	/^LUALIB_API void luaI_openlib (lua_State *L, const char *libname,$/;"	f
luaI_openlib	lib/lua/src/lauxlib.h	/^#define luaI_openlib	/;"	d
luaK_checkstack	lib/lua/src/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	lib/lua/src/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i, int line) {$/;"	f	file:
luaK_codeABC	lib/lua/src/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	lib/lua/src/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codeAsBx	lib/lua/src/lcode.h	/^#define luaK_codeAsBx(/;"	d
luaK_concat	lib/lua/src/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	lib/lua/src/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	lib/lua/src/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	lib/lua/src/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	lib/lua/src/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	lib/lua/src/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	lib/lua/src/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	lib/lua/src/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	lib/lua/src/lcode.c	/^static void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f	file:
luaK_goiftrue	lib/lua/src/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	lib/lua/src/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	lib/lua/src/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_jump	lib/lua/src/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_nil	lib/lua/src/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	lib/lua/src/lcode.c	/^int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f
luaK_patchlist	lib/lua/src/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	lib/lua/src/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	lib/lua/src/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2) {$/;"	f
luaK_prefix	lib/lua/src/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e) {$/;"	f
luaK_reserveregs	lib/lua/src/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	lib/lua/src/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	lib/lua/src/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	lib/lua/src/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setmultret	lib/lua/src/lcode.h	/^#define luaK_setmultret(/;"	d
luaK_setoneret	lib/lua/src/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	lib/lua/src/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	lib/lua/src/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	lib/lua/src/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_Buffer	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_Buffer"><code>luaL_Buffer<\/code><\/a><\/h3>$/;"	a
luaL_Buffer	lib/lua/src/lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	lib/lua/src/lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_Reg"><code>luaL_Reg<\/code><\/a><\/h3>$/;"	a
luaL_Reg	lib/lua/src/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	lib/lua/src/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_addchar	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_addchar"><code>luaL_addchar<\/code><\/a><\/h3><p>$/;"	a
luaL_addchar	lib/lua/src/lauxlib.h	/^#define luaL_addchar(/;"	d
luaL_addlstring	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_addlstring"><code>luaL_addlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addlstring	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addsize	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_addsize"><code>luaL_addsize<\/code><\/a><\/h3><p>$/;"	a
luaL_addsize	lib/lua/src/lauxlib.h	/^#define luaL_addsize(/;"	d
luaL_addstring	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_addstring"><code>luaL_addstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addstring	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_addvalue"><code>luaL_addvalue<\/code><\/a><\/h3><p>$/;"	a
luaL_addvalue	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argcheck	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_argcheck"><code>luaL_argcheck<\/code><\/a><\/h3><p>$/;"	a
luaL_argcheck	lib/lua/src/lauxlib.h	/^#define luaL_argcheck(/;"	d
luaL_argerror	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_argerror"><code>luaL_argerror<\/code><\/a><\/h3><p>$/;"	a
luaL_argerror	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int narg, const char *extramsg) {$/;"	f
luaL_buffinit	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_buffinit"><code>luaL_buffinit<\/code><\/a><\/h3><p>$/;"	a
luaL_buffinit	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_callmeta	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_callmeta"><code>luaL_callmeta<\/code><\/a><\/h3><p>$/;"	a
luaL_callmeta	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkany"><code>luaL_checkany<\/code><\/a><\/h3><p>$/;"	a
luaL_checkany	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int narg) {$/;"	f
luaL_checkint	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkint"><code>luaL_checkint<\/code><\/a><\/h3><p>$/;"	a
luaL_checkint	lib/lua/src/lauxlib.h	/^#define luaL_checkint(/;"	d
luaL_checkinteger	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkinteger"><code>luaL_checkinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_checkinteger	lib/lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int narg) {$/;"	f
luaL_checklong	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checklong"><code>luaL_checklong<\/code><\/a><\/h3><p>$/;"	a
luaL_checklong	lib/lua/src/lauxlib.h	/^#define luaL_checklong(/;"	d
luaL_checklstring	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checklstring"><code>luaL_checklstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checklstring	lib/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {$/;"	f
luaL_checknumber	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checknumber"><code>luaL_checknumber<\/code><\/a><\/h3><p>$/;"	a
luaL_checknumber	lib/lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int narg) {$/;"	f
luaL_checkoption	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkoption"><code>luaL_checkoption<\/code><\/a><\/h3><p>$/;"	a
luaL_checkoption	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int narg, const char *def,$/;"	f
luaL_checkstack	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkstack"><code>luaL_checkstack<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstack	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *mes) {$/;"	f
luaL_checkstring	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkstring"><code>luaL_checkstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstring	lib/lua/src/lauxlib.h	/^#define luaL_checkstring(/;"	d
luaL_checktype	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checktype"><code>luaL_checktype<\/code><\/a><\/h3><p>$/;"	a
luaL_checktype	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int narg, int t) {$/;"	f
luaL_checkudata	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkudata"><code>luaL_checkudata<\/code><\/a><\/h3><p>$/;"	a
luaL_checkudata	lib/lua/src/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_dofile	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_dofile"><code>luaL_dofile<\/code><\/a><\/h3><p>$/;"	a
luaL_dofile	lib/lua/src/lauxlib.h	/^#define luaL_dofile(/;"	d
luaL_dostring	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_dostring"><code>luaL_dostring<\/code><\/a><\/h3><p>$/;"	a
luaL_dostring	lib/lua/src/lauxlib.h	/^#define luaL_dostring(/;"	d
luaL_error	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_error"><code>luaL_error<\/code><\/a><\/h3><p>$/;"	a
luaL_error	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_findtable	lib/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_findtable (lua_State *L, int idx,$/;"	f
luaL_getmetafield	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_getmetafield"><code>luaL_getmetafield<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetafield	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getmetatable	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_getmetatable"><code>luaL_getmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetatable	lib/lua/src/lauxlib.h	/^#define luaL_getmetatable(/;"	d
luaL_getn	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_getn (lua_State *L, int t) {$/;"	f
luaL_getn	lib/lua/src/lauxlib.h	/^#define luaL_getn(/;"	d
luaL_gsub	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_gsub"><code>luaL_gsub<\/code><\/a><\/h3><p>$/;"	a
luaL_gsub	lib/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_loadbuffer	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadbuffer"><code>luaL_loadbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_loadbuffer	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadbuffer (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadfile"><code>luaL_loadfile<\/code><\/a><\/h3><p>$/;"	a
luaL_loadfile	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadfile (lua_State *L, const char *filename) {$/;"	f
luaL_loadstring	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadstring"><code>luaL_loadstring<\/code><\/a><\/h3><p>$/;"	a
luaL_loadstring	lib/lua/src/lauxlib.c	/^LUALIB_API int (luaL_loadstring) (lua_State *L, const char *s) {$/;"	f
luaL_newmetatable	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_newmetatable"><code>luaL_newmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_newmetatable	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_newstate"><code>luaL_newstate<\/code><\/a><\/h3><p>$/;"	a
luaL_newstate	lib/lua/src/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlibs	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_openlibs"><code>luaL_openlibs<\/code><\/a><\/h3><p>$/;"	a
luaL_openlibs	lib/lua/src/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_opt	lib/lua/src/lauxlib.h	/^#define luaL_opt(/;"	d
luaL_optint	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_optint"><code>luaL_optint<\/code><\/a><\/h3><p>$/;"	a
luaL_optint	lib/lua/src/lauxlib.h	/^#define luaL_optint(/;"	d
luaL_optinteger	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_optinteger"><code>luaL_optinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_optinteger	lib/lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int narg,$/;"	f
luaL_optlong	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_optlong"><code>luaL_optlong<\/code><\/a><\/h3><p>$/;"	a
luaL_optlong	lib/lua/src/lauxlib.h	/^#define luaL_optlong(/;"	d
luaL_optlstring	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_optlstring"><code>luaL_optlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optlstring	lib/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,$/;"	f
luaL_optnumber	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_optnumber"><code>luaL_optnumber<\/code><\/a><\/h3><p>$/;"	a
luaL_optnumber	lib/lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int narg, lua_Number def) {$/;"	f
luaL_optstring	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_optstring"><code>luaL_optstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optstring	lib/lua/src/lauxlib.h	/^#define luaL_optstring(/;"	d
luaL_prepbuffer	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_prepbuffer"><code>luaL_prepbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_prepbuffer	lib/lua/src/lauxlib.c	/^LUALIB_API char *luaL_prepbuffer (luaL_Buffer *B) {$/;"	f
luaL_pushresult	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_pushresult"><code>luaL_pushresult<\/code><\/a><\/h3><p>$/;"	a
luaL_pushresult	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_putchar	lib/lua/src/lauxlib.h	/^#define luaL_putchar(/;"	d
luaL_ref	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_ref"><code>luaL_ref<\/code><\/a><\/h3><p>$/;"	a
luaL_ref	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_reg	lib/lua/src/lauxlib.h	/^#define luaL_reg	/;"	d
luaL_register	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_register"><code>luaL_register<\/code><\/a><\/h3><p>$/;"	a
luaL_register	lib/lua/src/lauxlib.c	/^LUALIB_API void (luaL_register) (lua_State *L, const char *libname,$/;"	f
luaL_setn	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_setn (lua_State *L, int t, int n) {$/;"	f
luaL_setn	lib/lua/src/lauxlib.h	/^#define luaL_setn(/;"	d
luaL_typename	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_typename"><code>luaL_typename<\/code><\/a><\/h3><p>$/;"	a
luaL_typename	lib/lua/src/lauxlib.h	/^#define luaL_typename(/;"	d
luaL_typerror	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_typerror"><code>luaL_typerror<\/code><\/a><\/h3><p>$/;"	a
luaL_typerror	lib/lua/src/lauxlib.c	/^LUALIB_API int luaL_typerror (lua_State *L, int narg, const char *tname) {$/;"	f
luaL_unref	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_unref"><code>luaL_unref<\/code><\/a><\/h3><p>$/;"	a
luaL_unref	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	lib/lua/doc/manual.html	/^<hr><h3><a name="luaL_where"><code>luaL_where<\/code><\/a><\/h3><p>$/;"	a
luaL_where	lib/lua/src/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_free	lib/lua/src/lmem.h	/^#define luaM_free(/;"	d
luaM_freearray	lib/lua/src/lmem.h	/^#define luaM_freearray(/;"	d
luaM_freemem	lib/lua/src/lmem.h	/^#define luaM_freemem(/;"	d
luaM_growaux_	lib/lua/src/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_growvector	lib/lua/src/lmem.h	/^#define luaM_growvector(/;"	d
luaM_malloc	lib/lua/src/lmem.h	/^#define luaM_malloc(/;"	d
luaM_new	lib/lua/src/lmem.h	/^#define luaM_new(/;"	d
luaM_newvector	lib/lua/src/lmem.h	/^#define luaM_newvector(/;"	d
luaM_realloc_	lib/lua/src/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_reallocv	lib/lua/src/lmem.h	/^#define luaM_reallocv(/;"	d
luaM_reallocvector	lib/lua/src/lmem.h	/^#define luaM_reallocvector(/;"	d
luaM_toobig	lib/lua/src/lmem.c	/^void *luaM_toobig (lua_State *L) {$/;"	f
luaO_chunkid	lib/lua/src/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	lib/lua/src/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_int2fb	lib/lua/src/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_log2	lib/lua/src/lobject.c	/^int luaO_log2 (unsigned int x) {$/;"	f
luaO_nilobject	lib/lua/src/lobject.h	/^#define luaO_nilobject	/;"	d
luaO_nilobject_	lib/lua/src/lobject.c	/^const TValue luaO_nilobject_ = {{NULL}, LUA_TNIL};$/;"	v
luaO_nilobject_	lib/lua/src/lobject.h	/^LUAI_DATA const TValue luaO_nilobject_;$/;"	v
luaO_pushfstring	lib/lua/src/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	lib/lua/src/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_rawequalObj	lib/lua/src/lobject.c	/^int luaO_rawequalObj (const TValue *t1, const TValue *t2) {$/;"	f
luaO_str2d	lib/lua/src/lobject.c	/^int luaO_str2d (const char *s, lua_Number *result) {$/;"	f
luaP_opmodes	lib/lua/src/lopcodes.c	/^const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opmodes	lib/lua/src/lopcodes.h	/^LUAI_DATA const lu_byte luaP_opmodes[NUM_OPCODES];$/;"	v
luaP_opnames	lib/lua/src/lopcodes.c	/^const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaP_opnames	lib/lua/src/lopcodes.h	/^LUAI_DATA const char *const luaP_opnames[NUM_OPCODES+1];  \/* opcode names *\/$/;"	v
luaS_fix	lib/lua/src/lstring.h	/^#define luaS_fix(/;"	d
luaS_new	lib/lua/src/lstring.h	/^#define luaS_new(/;"	d
luaS_newliteral	lib/lua/src/lstring.h	/^#define luaS_newliteral(/;"	d
luaS_newlstr	lib/lua/src/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	lib/lua/src/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, Table *e) {$/;"	f
luaS_resize	lib/lua/src/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaT_gettm	lib/lua/src/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	lib/lua/src/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	lib/lua/src/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_typenames	lib/lua/src/ltm.c	/^const char *const luaT_typenames[] = {$/;"	v
luaT_typenames	lib/lua/src/ltm.h	/^LUAI_DATA const char *const luaT_typenames[];$/;"	v
luaU_dump	lib/lua/etc/noparser.c	/^LUAI_FUNC int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip) {$/;"	f
luaU_dump	lib/lua/src/ldump.c	/^int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)$/;"	f
luaU_header	lib/lua/src/lundump.c	/^void luaU_header (char* h)$/;"	f
luaU_undump	lib/lua/src/lundump.c	/^Proto* luaU_undump (lua_State* L, ZIO* Z, Mbuffer* buff, const char* name)$/;"	f
luaV_concat	lib/lua/src/lvm.c	/^void luaV_concat (lua_State *L, int total, int last) {$/;"	f
luaV_equalval	lib/lua/src/lvm.c	/^int luaV_equalval (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	lib/lua/src/lvm.c	/^void luaV_execute (lua_State *L, int nexeccalls) {$/;"	f
luaV_gettable	lib/lua/src/lvm.c	/^void luaV_gettable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_lessthan	lib/lua/src/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_settable	lib/lua/src/lvm.c	/^void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_tonumber	lib/lua/src/lvm.c	/^const TValue *luaV_tonumber (const TValue *obj, TValue *n) {$/;"	f
luaV_tostring	lib/lua/src/lvm.c	/^int luaV_tostring (lua_State *L, StkId obj) {$/;"	f
luaWatch	build/include/tool/FilesWindow.h	/^    QFileSystemWatcher* luaWatch;$/;"	m	class:FilesWindow
luaWatch	tools/UTNaoTool/FilesWindow.h	/^    QFileSystemWatcher* luaWatch;$/;"	m	class:FilesWindow
luaX_init	lib/lua/etc/noparser.c	/^LUAI_FUNC void luaX_init (lua_State *L) {$/;"	f
luaX_init	lib/lua/src/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lexerror	lib/lua/src/llex.c	/^void luaX_lexerror (LexState *ls, const char *msg, int token) {$/;"	f
luaX_lookahead	lib/lua/src/llex.c	/^void luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	lib/lua/src/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	lib/lua/src/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	lib/lua/src/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source) {$/;"	f
luaX_syntaxerror	lib/lua/src/llex.c	/^void luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	lib/lua/src/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	lib/lua/src/llex.c	/^const char *const luaX_tokens [] = {$/;"	v
luaX_tokens	lib/lua/src/llex.h	/^LUAI_DATA const char *const luaX_tokens [];$/;"	v
luaY_checklimit	lib/lua/src/lparser.c	/^#define luaY_checklimit(/;"	d	file:
luaY_parser	lib/lua/etc/noparser.c	/^LUAI_FUNC Proto *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff, const char *name) {$/;"	f
luaY_parser	lib/lua/src/lparser.c	/^Proto *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff, const char *name) {$/;"	f
luaZ_buffer	lib/lua/src/lzio.h	/^#define luaZ_buffer(/;"	d
luaZ_bufflen	lib/lua/src/lzio.h	/^#define luaZ_bufflen(/;"	d
luaZ_fill	lib/lua/src/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_freebuffer	lib/lua/src/lzio.h	/^#define luaZ_freebuffer(/;"	d
luaZ_init	lib/lua/src/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_initbuffer	lib/lua/src/lzio.h	/^#define luaZ_initbuffer(/;"	d
luaZ_lookahead	lib/lua/src/lzio.c	/^int luaZ_lookahead (ZIO *z) {$/;"	f
luaZ_openspace	lib/lua/src/lzio.c	/^char *luaZ_openspace (lua_State *L, Mbuffer *buff, size_t n) {$/;"	f
luaZ_read	lib/lua/src/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
luaZ_resetbuffer	lib/lua/src/lzio.h	/^#define luaZ_resetbuffer(/;"	d
luaZ_resizebuffer	lib/lua/src/lzio.h	/^#define luaZ_resizebuffer(/;"	d
luaZ_sizebuffer	lib/lua/src/lzio.h	/^#define luaZ_sizebuffer(/;"	d
lua_Alloc	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_Alloc"><code>lua_Alloc<\/code><\/a><\/h3>$/;"	a
lua_Alloc	lib/lua/src/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_CFunction"><code>lua_CFunction<\/code><\/a><\/h3>$/;"	a
lua_CFunction	lib/lua/src/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Chunkreader	lib/lua/src/lua.h	/^#define lua_Chunkreader	/;"	d
lua_Chunkwriter	lib/lua/src/lua.h	/^#define lua_Chunkwriter	/;"	d
lua_Debug	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_Debug"><code>lua_Debug<\/code><\/a><\/h3>$/;"	a
lua_Debug	lib/lua/src/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	lib/lua/src/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Hook	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_Hook"><code>lua_Hook<\/code><\/a><\/h3>$/;"	a
lua_Hook	lib/lua/src/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_Integer"><code>lua_Integer<\/code><\/a><\/h3>$/;"	a
lua_Integer	lib/lua/src/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_Number	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_Number"><code>lua_Number<\/code><\/a><\/h3>$/;"	a
lua_Number	lib/lua/src/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_Reader"><code>lua_Reader<\/code><\/a><\/h3>$/;"	a
lua_Reader	lib/lua/src/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_State"><code>lua_State<\/code><\/a><\/h3>$/;"	a
lua_State	lib/lua/src/lstate.h	/^struct lua_State {$/;"	s
lua_State	lib/lua/src/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_TValue	lib/lua/src/lobject.h	/^typedef struct lua_TValue {$/;"	s
lua_Writer	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_Writer"><code>lua_Writer<\/code><\/a><\/h3>$/;"	a
lua_Writer	lib/lua/src/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t
lua_assert	lib/lua/src/llimits.h	/^#define lua_assert(/;"	d
lua_assert	lib/lua/src/lualib.h	/^#define lua_assert(/;"	d
lua_atpanic	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_atpanic"><code>lua_atpanic<\/code><\/a><\/h3><p>$/;"	a
lua_atpanic	lib/lua/src/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	lib/lua/src/lua.c	/^#define lua_c$/;"	d	file:
lua_call	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_call"><code>lua_call<\/code><\/a><\/h3><p>$/;"	a
lua_call	lib/lua/src/lapi.c	/^LUA_API void lua_call (lua_State *L, int nargs, int nresults) {$/;"	f
lua_checkstack	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_checkstack"><code>lua_checkstack<\/code><\/a><\/h3><p>$/;"	a
lua_checkstack	lib/lua/src/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int size) {$/;"	f
lua_close	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_close"><code>lua_close<\/code><\/a><\/h3><p>$/;"	a
lua_close	lib/lua/src/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_concat	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_concat"><code>lua_concat<\/code><\/a><\/h3><p>$/;"	a
lua_concat	lib/lua/src/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_cpcall	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_cpcall"><code>lua_cpcall<\/code><\/a><\/h3><p>$/;"	a
lua_cpcall	lib/lua/src/lapi.c	/^LUA_API int lua_cpcall (lua_State *L, lua_CFunction func, void *ud) {$/;"	f
lua_createtable	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_createtable"><code>lua_createtable<\/code><\/a><\/h3><p>$/;"	a
lua_createtable	lib/lua/src/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_dump"><code>lua_dump<\/code><\/a><\/h3><p>$/;"	a
lua_dump	lib/lua/src/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data) {$/;"	f
lua_equal	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_equal"><code>lua_equal<\/code><\/a><\/h3><p>$/;"	a
lua_equal	lib/lua/src/lapi.c	/^LUA_API int lua_equal (lua_State *L, int index1, int index2) {$/;"	f
lua_error	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_error"><code>lua_error<\/code><\/a><\/h3><p>$/;"	a
lua_error	lib/lua/src/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	lib/lua/src/luaconf.h	/^#define lua_freeline(/;"	d
lua_gc	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_gc"><code>lua_gc<\/code><\/a><\/h3><p>$/;"	a
lua_gc	lib/lua/src/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_getallocf	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_getallocf"><code>lua_getallocf<\/code><\/a><\/h3><p>$/;"	a
lua_getallocf	lib/lua/src/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getfenv	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_getfenv"><code>lua_getfenv<\/code><\/a><\/h3><p>$/;"	a
lua_getfenv	lib/lua/src/lapi.c	/^LUA_API void lua_getfenv (lua_State *L, int idx) {$/;"	f
lua_getfield	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_getfield"><code>lua_getfield<\/code><\/a><\/h3><p>$/;"	a
lua_getfield	lib/lua/src/lapi.c	/^LUA_API void lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getgccount	lib/lua/src/lua.h	/^#define lua_getgccount(/;"	d
lua_getglobal	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_getglobal"><code>lua_getglobal<\/code><\/a><\/h3><p>$/;"	a
lua_getglobal	lib/lua/src/lua.h	/^#define lua_getglobal(/;"	d
lua_gethook	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_gethook"><code>lua_gethook<\/code><\/a><\/h3><p>$/;"	a
lua_gethook	lib/lua/src/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_gethookcount"><code>lua_gethookcount<\/code><\/a><\/h3><p>$/;"	a
lua_gethookcount	lib/lua/src/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_gethookmask"><code>lua_gethookmask<\/code><\/a><\/h3><p>$/;"	a
lua_gethookmask	lib/lua/src/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_getinfo	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_getinfo"><code>lua_getinfo<\/code><\/a><\/h3><p>$/;"	a
lua_getinfo	lib/lua/src/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_getlocal"><code>lua_getlocal<\/code><\/a><\/h3><p>$/;"	a
lua_getlocal	lib/lua/src/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getmetatable	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_getmetatable"><code>lua_getmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_getmetatable	lib/lua/src/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getref	lib/lua/src/lauxlib.h	/^#define lua_getref(/;"	d
lua_getregistry	lib/lua/src/lua.h	/^#define lua_getregistry(/;"	d
lua_getstack	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_getstack"><code>lua_getstack<\/code><\/a><\/h3><p>$/;"	a
lua_getstack	lib/lua/src/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_gettable"><code>lua_gettable<\/code><\/a><\/h3><p>$/;"	a
lua_gettable	lib/lua/src/lapi.c	/^LUA_API void lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_gettop"><code>lua_gettop<\/code><\/a><\/h3><p>$/;"	a
lua_gettop	lib/lua/src/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_getupvalue"><code>lua_getupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_getupvalue	lib/lua/src/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_h	lib/lua/src/lua.h	/^#define lua_h$/;"	d
lua_ident	lib/lua/src/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_insert"><code>lua_insert<\/code><\/a><\/h3><p>$/;"	a
lua_insert	lib/lua/src/lapi.c	/^LUA_API void lua_insert (lua_State *L, int idx) {$/;"	f
lua_isboolean	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_isboolean"><code>lua_isboolean<\/code><\/a><\/h3><p>$/;"	a
lua_isboolean	lib/lua/src/lua.h	/^#define lua_isboolean(/;"	d
lua_iscfunction	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_iscfunction"><code>lua_iscfunction<\/code><\/a><\/h3><p>$/;"	a
lua_iscfunction	lib/lua/src/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isfunction	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_isfunction"><code>lua_isfunction<\/code><\/a><\/h3><p>$/;"	a
lua_isfunction	lib/lua/src/lua.h	/^#define lua_isfunction(/;"	d
lua_islightuserdata	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_islightuserdata"><code>lua_islightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_islightuserdata	lib/lua/src/lua.h	/^#define lua_islightuserdata(/;"	d
lua_isnil	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_isnil"><code>lua_isnil<\/code><\/a><\/h3><p>$/;"	a
lua_isnil	lib/lua/src/lua.h	/^#define lua_isnil(/;"	d
lua_isnone	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_isnone"><code>lua_isnone<\/code><\/a><\/h3><p>$/;"	a
lua_isnone	lib/lua/src/lua.h	/^#define lua_isnone(/;"	d
lua_isnoneornil	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_isnoneornil"><code>lua_isnoneornil<\/code><\/a><\/h3><p>$/;"	a
lua_isnoneornil	lib/lua/src/lua.h	/^#define lua_isnoneornil(/;"	d
lua_isnumber	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_isnumber"><code>lua_isnumber<\/code><\/a><\/h3><p>$/;"	a
lua_isnumber	lib/lua/src/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_isstring"><code>lua_isstring<\/code><\/a><\/h3><p>$/;"	a
lua_isstring	lib/lua/src/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_istable	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_istable"><code>lua_istable<\/code><\/a><\/h3><p>$/;"	a
lua_istable	lib/lua/src/lua.h	/^#define lua_istable(/;"	d
lua_isthread	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_isthread"><code>lua_isthread<\/code><\/a><\/h3><p>$/;"	a
lua_isthread	lib/lua/src/lua.h	/^#define lua_isthread(/;"	d
lua_isuserdata	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_isuserdata"><code>lua_isuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_isuserdata	lib/lua/src/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_lessthan	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_lessthan"><code>lua_lessthan<\/code><\/a><\/h3><p>$/;"	a
lua_lessthan	lib/lua/src/lapi.c	/^LUA_API int lua_lessthan (lua_State *L, int index1, int index2) {$/;"	f
lua_load	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_load"><code>lua_load<\/code><\/a><\/h3><p>$/;"	a
lua_load	lib/lua/src/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_lock	lib/lua/src/llimits.h	/^#define lua_lock(/;"	d
lua_longjmp	lib/lua/src/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_newstate	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_newstate"><code>lua_newstate<\/code><\/a><\/h3><p>$/;"	a
lua_newstate	lib/lua/src/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newtable	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_newtable"><code>lua_newtable<\/code><\/a><\/h3><p>$/;"	a
lua_newtable	lib/lua/src/lua.h	/^#define lua_newtable(/;"	d
lua_newthread	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_newthread"><code>lua_newthread<\/code><\/a><\/h3><p>$/;"	a
lua_newthread	lib/lua/src/lapi.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_newuserdata"><code>lua_newuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_newuserdata	lib/lua/src/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_next"><code>lua_next<\/code><\/a><\/h3><p>$/;"	a
lua_next	lib/lua/src/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_number2int	lib/lua/src/luaconf.h	/^#define lua_number2int(/;"	d
lua_number2integer	lib/lua/src/luaconf.h	/^#define lua_number2integer(/;"	d
lua_number2str	lib/lua/src/luaconf.h	/^#define lua_number2str(/;"	d
lua_objlen	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_objlen"><code>lua_objlen<\/code><\/a><\/h3><p>$/;"	a
lua_objlen	lib/lua/src/lapi.c	/^LUA_API size_t lua_objlen (lua_State *L, int idx) {$/;"	f
lua_open	lib/lua/src/lua.h	/^#define lua_open(/;"	d
lua_pcall	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pcall"><code>lua_pcall<\/code><\/a><\/h3><p>$/;"	a
lua_pcall	lib/lua/src/lapi.c	/^LUA_API int lua_pcall (lua_State *L, int nargs, int nresults, int errfunc) {$/;"	f
lua_pclose	lib/lua/src/luaconf.h	/^#define lua_pclose(/;"	d
lua_pop	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pop"><code>lua_pop<\/code><\/a><\/h3><p>$/;"	a
lua_pop	lib/lua/src/lua.h	/^#define lua_pop(/;"	d
lua_popen	lib/lua/src/luaconf.h	/^#define lua_popen(/;"	d
lua_pushboolean	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushboolean"><code>lua_pushboolean<\/code><\/a><\/h3><p>$/;"	a
lua_pushboolean	lib/lua/src/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushcclosure"><code>lua_pushcclosure<\/code><\/a><\/h3><p>$/;"	a
lua_pushcclosure	lib/lua/src/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushcfunction	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushcfunction"><code>lua_pushcfunction<\/code><\/a><\/h3><p>$/;"	a
lua_pushcfunction	lib/lua/src/lua.h	/^#define lua_pushcfunction(/;"	d
lua_pushfstring	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushfstring"><code>lua_pushfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushfstring	lib/lua/src/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushinteger	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushinteger"><code>lua_pushinteger<\/code><\/a><\/h3><p>$/;"	a
lua_pushinteger	lib/lua/src/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushlightuserdata"><code>lua_pushlightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_pushlightuserdata	lib/lua/src/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushliteral	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushliteral"><code>lua_pushliteral<\/code><\/a><\/h3><p>$/;"	a
lua_pushliteral	lib/lua/src/lua.h	/^#define lua_pushliteral(/;"	d
lua_pushlstring	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushlstring"><code>lua_pushlstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushlstring	lib/lua/src/lapi.c	/^LUA_API void lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushnil"><code>lua_pushnil<\/code><\/a><\/h3><p>$/;"	a
lua_pushnil	lib/lua/src/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushnumber"><code>lua_pushnumber<\/code><\/a><\/h3><p>$/;"	a
lua_pushnumber	lib/lua/src/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushstring"><code>lua_pushstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushstring	lib/lua/src/lapi.c	/^LUA_API void lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushthread"><code>lua_pushthread<\/code><\/a><\/h3><p>$/;"	a
lua_pushthread	lib/lua/src/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushvalue	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushvalue"><code>lua_pushvalue<\/code><\/a><\/h3><p>$/;"	a
lua_pushvalue	lib/lua/src/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_pushvfstring"><code>lua_pushvfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushvfstring	lib/lua/src/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_rawequal"><code>lua_rawequal<\/code><\/a><\/h3><p>$/;"	a
lua_rawequal	lib/lua/src/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_rawget"><code>lua_rawget<\/code><\/a><\/h3><p>$/;"	a
lua_rawget	lib/lua/src/lapi.c	/^LUA_API void lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_rawgeti"><code>lua_rawgeti<\/code><\/a><\/h3><p>$/;"	a
lua_rawgeti	lib/lua/src/lapi.c	/^LUA_API void lua_rawgeti (lua_State *L, int idx, int n) {$/;"	f
lua_rawset	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_rawset"><code>lua_rawset<\/code><\/a><\/h3><p>$/;"	a
lua_rawset	lib/lua/src/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_rawseti"><code>lua_rawseti<\/code><\/a><\/h3><p>$/;"	a
lua_rawseti	lib/lua/src/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, int n) {$/;"	f
lua_readline	lib/lua/src/luaconf.h	/^#define lua_readline(/;"	d
lua_ref	lib/lua/src/lauxlib.h	/^#define lua_ref(/;"	d
lua_register	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_register"><code>lua_register<\/code><\/a><\/h3><p>$/;"	a
lua_register	lib/lua/src/lua.h	/^#define lua_register(/;"	d
lua_remove	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_remove"><code>lua_remove<\/code><\/a><\/h3><p>$/;"	a
lua_remove	lib/lua/src/lapi.c	/^LUA_API void lua_remove (lua_State *L, int idx) {$/;"	f
lua_replace	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_replace"><code>lua_replace<\/code><\/a><\/h3><p>$/;"	a
lua_replace	lib/lua/src/lapi.c	/^LUA_API void lua_replace (lua_State *L, int idx) {$/;"	f
lua_resume	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_resume"><code>lua_resume<\/code><\/a><\/h3><p>$/;"	a
lua_resume	lib/lua/src/ldo.c	/^LUA_API int lua_resume (lua_State *L, int nargs) {$/;"	f
lua_saveline	lib/lua/src/luaconf.h	/^#define lua_saveline(/;"	d
lua_setallocf	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_setallocf"><code>lua_setallocf<\/code><\/a><\/h3><p>$/;"	a
lua_setallocf	lib/lua/src/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfenv	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_setfenv"><code>lua_setfenv<\/code><\/a><\/h3><p>$/;"	a
lua_setfenv	lib/lua/src/lapi.c	/^LUA_API int lua_setfenv (lua_State *L, int idx) {$/;"	f
lua_setfield	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_setfield"><code>lua_setfield<\/code><\/a><\/h3><p>$/;"	a
lua_setfield	lib/lua/src/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_setglobal"><code>lua_setglobal<\/code><\/a><\/h3><p>$/;"	a
lua_setglobal	lib/lua/src/lua.h	/^#define lua_setglobal(/;"	d
lua_sethook	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_sethook"><code>lua_sethook<\/code><\/a><\/h3><p>$/;"	a
lua_sethook	lib/lua/src/ldebug.c	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_setlevel	lib/lua/src/lapi.c	/^LUA_API void lua_setlevel (lua_State *from, lua_State *to) {$/;"	f
lua_setlocal	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_setlocal"><code>lua_setlocal<\/code><\/a><\/h3><p>$/;"	a
lua_setlocal	lib/lua/src/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_setmetatable"><code>lua_setmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_setmetatable	lib/lua/src/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_settable"><code>lua_settable<\/code><\/a><\/h3><p>$/;"	a
lua_settable	lib/lua/src/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_settop"><code>lua_settop<\/code><\/a><\/h3><p>$/;"	a
lua_settop	lib/lua/src/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_setupvalue"><code>lua_setupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_setupvalue	lib/lua/src/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_status	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_status"><code>lua_status<\/code><\/a><\/h3><p>$/;"	a
lua_status	lib/lua/src/lapi.c	/^LUA_API int  lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	lib/lua/src/luaconf.h	/^#define lua_stdin_is_tty(/;"	d
lua_str2number	lib/lua/src/luaconf.h	/^#define lua_str2number(/;"	d
lua_strlen	lib/lua/src/lua.h	/^#define lua_strlen(/;"	d
lua_tmpnam	lib/lua/src/luaconf.h	/^#define lua_tmpnam(/;"	d
lua_toboolean	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_toboolean"><code>lua_toboolean<\/code><\/a><\/h3><p>$/;"	a
lua_toboolean	lib/lua/src/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_tocfunction"><code>lua_tocfunction<\/code><\/a><\/h3><p>$/;"	a
lua_tocfunction	lib/lua/src/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_tointeger	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_tointeger"><code>lua_tointeger<\/code><\/a><\/h3><p>$/;"	a
lua_tointeger	lib/lua/src/lapi.c	/^LUA_API lua_Integer lua_tointeger (lua_State *L, int idx) {$/;"	f
lua_tolstring	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_tolstring"><code>lua_tolstring<\/code><\/a><\/h3><p>$/;"	a
lua_tolstring	lib/lua/src/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_tonumber"><code>lua_tonumber<\/code><\/a><\/h3><p>$/;"	a
lua_tonumber	lib/lua/src/lapi.c	/^LUA_API lua_Number lua_tonumber (lua_State *L, int idx) {$/;"	f
lua_topointer	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_topointer"><code>lua_topointer<\/code><\/a><\/h3><p>$/;"	a
lua_topointer	lib/lua/src/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tostring	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_tostring"><code>lua_tostring<\/code><\/a><\/h3><p>$/;"	a
lua_tostring	lib/lua/src/lua.h	/^#define lua_tostring(/;"	d
lua_tothread	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_tothread"><code>lua_tothread<\/code><\/a><\/h3><p>$/;"	a
lua_tothread	lib/lua/src/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_touserdata	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_touserdata"><code>lua_touserdata<\/code><\/a><\/h3><p>$/;"	a
lua_touserdata	lib/lua/src/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_type"><code>lua_type<\/code><\/a><\/h3><p>$/;"	a
lua_type	lib/lua/src/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_typename"><code>lua_typename<\/code><\/a><\/h3><p>$/;"	a
lua_typename	lib/lua/src/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_unlock	lib/lua/src/llimits.h	/^#define lua_unlock(/;"	d
lua_unref	lib/lua/src/lauxlib.h	/^#define lua_unref(/;"	d
lua_upvalueindex	lib/lua/doc/manual.html	/^<a name="lua_upvalueindex"><code>lua_upvalueindex<\/code><\/a>.$/;"	a
lua_upvalueindex	lib/lua/src/lua.h	/^#define lua_upvalueindex(/;"	d
lua_xmove	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_xmove"><code>lua_xmove<\/code><\/a><\/h3><p>$/;"	a
lua_xmove	lib/lua/src/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	lib/lua/doc/manual.html	/^<hr><h3><a name="lua_yield"><code>lua_yield<\/code><\/a><\/h3><p>$/;"	a
lua_yield	lib/lua/src/ldo.c	/^LUA_API int lua_yield (lua_State *L, int nresults) {$/;"	f
luaall_c	lib/lua/etc/all.c	/^#define luaall_c$/;"	d	file:
luac_c	lib/lua/src/luac.c	/^#define luac_c$/;"	d	file:
luac_c	lib/lua/src/print.c	/^#define luac_c$/;"	d	file:
luai_Cast	lib/lua/src/luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	u
luai_apicheck	lib/lua/src/luaconf.h	/^#define luai_apicheck(/;"	d
luai_jmpbuf	lib/lua/src/luaconf.h	/^#define luai_jmpbuf	/;"	d
luai_numadd	lib/lua/src/luaconf.h	/^#define luai_numadd(/;"	d
luai_numdiv	lib/lua/src/luaconf.h	/^#define luai_numdiv(/;"	d
luai_numeq	lib/lua/src/luaconf.h	/^#define luai_numeq(/;"	d
luai_numisnan	lib/lua/src/luaconf.h	/^#define luai_numisnan(/;"	d
luai_numle	lib/lua/src/luaconf.h	/^#define luai_numle(/;"	d
luai_numlt	lib/lua/src/luaconf.h	/^#define luai_numlt(/;"	d
luai_nummod	lib/lua/src/luaconf.h	/^#define luai_nummod(/;"	d
luai_nummul	lib/lua/src/luaconf.h	/^#define luai_nummul(/;"	d
luai_numpow	lib/lua/src/luaconf.h	/^#define luai_numpow(/;"	d
luai_numsub	lib/lua/src/luaconf.h	/^#define luai_numsub(/;"	d
luai_numunm	lib/lua/src/luaconf.h	/^#define luai_numunm(/;"	d
luai_threadyield	lib/lua/src/llimits.h	/^#define luai_threadyield(/;"	d
luai_userstateclose	lib/lua/src/luaconf.h	/^#define luai_userstateclose(/;"	d
luai_userstatefree	lib/lua/src/luaconf.h	/^#define luai_userstatefree(/;"	d
luai_userstateopen	lib/lua/src/luaconf.h	/^#define luai_userstateopen(/;"	d
luai_userstateresume	lib/lua/src/luaconf.h	/^#define luai_userstateresume(/;"	d
luai_userstatethread	lib/lua/src/luaconf.h	/^#define luai_userstatethread(/;"	d
luai_userstateyield	lib/lua/src/luaconf.h	/^#define luai_userstateyield(/;"	d
lualib_h	lib/lua/src/lualib.h	/^#define lualib_h$/;"	d
lualibs	lib/lua/src/linit.c	/^static const luaL_Reg lualibs[] = {$/;"	v	file:
luaopen_base	lib/lua/src/lbaselib.c	/^LUALIB_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_debug	lib/lua/src/ldblib.c	/^LUALIB_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	lib/lua/src/liolib.c	/^LUALIB_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	lib/lua/src/lmathlib.c	/^LUALIB_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_os	lib/lua/src/loslib.c	/^LUALIB_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	lib/lua/src/loadlib.c	/^LUALIB_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	lib/lua/src/lstrlib.c	/^LUALIB_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	lib/lua/src/ltablib.c	/^LUALIB_API int luaopen_table (lua_State *L) {$/;"	f
lundump_c	lib/lua/src/lundump.c	/^#define lundump_c$/;"	d	file:
lundump_h	lib/lua/src/lundump.h	/^#define lundump_h$/;"	d
lvl	lib/lua/src/lauxlib.h	/^  int lvl;  \/* number of strings in the stack (level) *\/$/;"	m	struct:luaL_Buffer
lvm_c	lib/lua/src/lvm.c	/^#define lvm_c$/;"	d	file:
lvm_h	lib/lua/src/lvm.h	/^#define lvm_h$/;"	d
lzio_c	lib/lua/src/lzio.c	/^#define lzio_c$/;"	d	file:
lzio_h	lib/lua/src/lzio.h	/^#define lzio_h$/;"	d
m	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   float m;$/;"	m	struct:twoParamLine
m	lib/alglib/diffequations.h	/^    ae_int_t m;$/;"	m	struct:alglib_impl::__anon51
m	lib/alglib/interpolation.h	/^    ae_int_t m;$/;"	m	struct:alglib_impl::__anon63
m	lib/alglib/optimization.h	/^    ae_int_t m;$/;"	m	struct:alglib_impl::__anon69
m	lib/alglib/optimization.h	/^    ae_int_t m;$/;"	m	struct:alglib_impl::__anon73
m	lib/alglib/solvers.h	/^    ae_int_t m;$/;"	m	struct:alglib_impl::__anon83
mType	core/motion/SpecialMotionParser.h	/^     Motions::motionType mType;$/;"	m	class:SpecialMotion
mType	core/motion/SpecialMotionParser.h	/^enum mType {$/;"	g	namespace:Motions
m_a	core/math/Geometry.h	/^  float m_a; \/*!< This is the a coefficient in the line ay + bx + c = 0 *\/$/;"	m	class:Line2D
m_a	lib/yaml-cpp/src/regex.h	/^		char m_a, m_z;$/;"	m	class:YAML::RegEx
m_aliasedNodes	lib/yaml-cpp/src/nodeownership.h	/^		std::set<const Node *> m_aliasedNodes;$/;"	m	class:YAML::NodeOwnership
m_anchorByIdentity	lib/yaml-cpp/include/yaml-cpp/aliasmanager.h	/^		AnchorByIdentity m_anchorByIdentity;$/;"	m	class:YAML::AliasManager
m_anchors	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    AnchorMap m_anchors;$/;"	m	class:YAML::GraphBuilderAdapter
m_anchors	lib/yaml-cpp/src/nodebuilder.h	/^		Anchors m_anchors;$/;"	m	class:YAML::NodeBuilder
m_anchors	lib/yaml-cpp/src/singledocparser.h	/^		Anchors m_anchors;$/;"	m	class:YAML::SingleDocParser
m_b	core/math/Geometry.h	/^  float m_b; \/*!< This is the b coefficient in the line ay + bx + c = 0 *\/$/;"	m	class:Line2D
m_boolCaseFmt	lib/yaml-cpp/src/emitterstate.h	/^		Setting<EMITTER_MANIP> m_boolCaseFmt;$/;"	m	class:YAML::EmitterState
m_boolFmt	lib/yaml-cpp/src/emitterstate.h	/^		Setting<EMITTER_MANIP> m_boolFmt;$/;"	m	class:YAML::EmitterState
m_boolLengthFmt	lib/yaml-cpp/src/emitterstate.h	/^		Setting<EMITTER_MANIP> m_boolLengthFmt;$/;"	m	class:YAML::EmitterState
m_buffer	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^		char *m_buffer;$/;"	m	class:YAML::ostream
m_builder	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    GraphBuilderInterface& m_builder;$/;"	m	class:YAML::GraphBuilderAdapter
m_c	core/math/Geometry.h	/^  float m_c; \/*!< This is the c coefficient in the line ay + bx + c = 0 *\/$/;"	m	class:Line2D
m_canBeJSONFlow	lib/yaml-cpp/src/scanner.h	/^		bool m_canBeJSONFlow;$/;"	m	class:YAML::Scanner
m_charSet	lib/yaml-cpp/src/stream.h	/^		CharacterSet m_charSet;$/;"	m	class:YAML::Stream
m_charset	lib/yaml-cpp/src/emitterstate.h	/^		Setting<EMITTER_MANIP> m_charset;$/;"	m	class:YAML::EmitterState
m_col	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^		unsigned m_row, m_col;$/;"	m	class:YAML::ostream
m_com_pub	motion_planning/include/motion_planning/plan_kick.h	/^    ros::Publisher m_com_pub;$/;"	m	class:motion_planning::PlanKick
m_containers	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    ContainerStack m_containers;$/;"	m	class:YAML::GraphBuilderAdapter
m_curAnchor	lib/yaml-cpp/include/yaml-cpp/aliasmanager.h	/^		anchor_t m_curAnchor;$/;"	m	class:YAML::AliasManager
m_curAnchor	lib/yaml-cpp/src/singledocparser.h	/^		anchor_t m_curAnchor;$/;"	m	class:YAML::SingleDocParser
m_curIndent	lib/yaml-cpp/src/emitterstate.h	/^		unsigned m_curIndent;$/;"	m	class:YAML::EmitterState
m_data	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        std::vector<unsigned char> m_data;$/;"	m	class:YAML::Binary
m_data	lib/yaml-cpp/include/yaml-cpp/contrib/anchordict.h	/^    std::vector<T> m_data;$/;"	m	class:YAML::AnchorDict
m_data	lib/yaml-cpp/src/ptr_stack.h	/^	std::vector<T*> m_data;$/;"	m	class:ptr_stack
m_data	lib/yaml-cpp/src/ptr_vector.h	/^		std::vector<T*> m_data;$/;"	m	class:YAML::ptr_vector
m_depend	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	bool m_depend;$/;"	m	class:fadbad::FTypeName
m_didPushKey	lib/yaml-cpp/src/nodebuilder.h	/^		std::stack<bool> m_didPushKey;$/;"	m	class:YAML::NodeBuilder
m_diff	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	T m_diff[N];$/;"	m	class:fadbad::FTypeName
m_diff	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	T* m_diff;$/;"	m	class:fadbad::FTypeName
m_directives	lib/yaml-cpp/src/singledocparser.h	/^		const Directives& m_directives;$/;"	m	class:YAML::SingleDocParser
m_doublePrecision	lib/yaml-cpp/src/emitterstate.h	/^        Setting<int> m_doublePrecision;$/;"	m	class:YAML::EmitterState
m_emitter	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^		Emitter& m_emitter;$/;"	m	class:YAML::EmitFromEvents
m_endedStream	lib/yaml-cpp/src/scanner.h	/^		bool m_startedStream, m_endedStream;$/;"	m	class:YAML::Scanner
m_entries	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			std::vector<std::string> m_entries;$/;"	m	class:Test::__anon130::EncodingTester	file:
m_finished	lib/yaml-cpp/src/nodebuilder.h	/^		bool m_finished;$/;"	m	class:YAML::NodeBuilder
m_floatPrecision	lib/yaml-cpp/src/emitterstate.h	/^        Setting<int> m_floatPrecision;$/;"	m	class:YAML::EmitterState
m_flows	lib/yaml-cpp/src/scanner.h	/^		std::stack<FLOW_MARKER> m_flows;$/;"	m	class:YAML::Scanner
m_frame_rate	motion_planning/include/motion_planning/plan_kick.h	/^    double m_frame_rate;$/;"	m	class:motion_planning::PlanKick
m_globalModifiedSettings	lib/yaml-cpp/src/emitterstate.h	/^		SettingChanges m_globalModifiedSettings;$/;"	m	class:YAML::EmitterState
m_graph	motion_planning/include/motion_planning/plan_kick.h	/^    dynamics_tree::DynamicsGraph m_graph;$/;"	m	class:motion_planning::PlanKick
m_groups	lib/yaml-cpp/src/emitterstate.h	/^		ptr_stack<Group> m_groups;$/;"	m	class:YAML::EmitterState
m_impl	lib/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h	/^    Impl& m_impl;$/;"	m	class:YAML::GraphBuilder
m_indent	lib/yaml-cpp/src/emitterstate.h	/^		Setting<unsigned> m_indent;$/;"	m	class:YAML::EmitterState
m_indentRefs	lib/yaml-cpp/src/scanner.h	/^		ptr_vector<IndentMarker> m_indentRefs; \/\/ for "garbage collection"$/;"	m	class:YAML::Scanner
m_indents	lib/yaml-cpp/src/scanner.h	/^		std::stack<IndentMarker *> m_indents;$/;"	m	class:YAML::Scanner
m_initializedRoot	lib/yaml-cpp/src/nodebuilder.h	/^		bool m_initializedRoot;$/;"	m	class:YAML::NodeBuilder
m_input	lib/yaml-cpp/src/stream.h	/^		std::istream& m_input;$/;"	m	class:YAML::Stream
m_intFmt	lib/yaml-cpp/src/emitterstate.h	/^		Setting<EMITTER_MANIP> m_intFmt;$/;"	m	class:YAML::EmitterState
m_isGood	lib/yaml-cpp/src/emitterstate.h	/^		bool m_isGood;$/;"	m	class:YAML::EmitterState
m_joint_ids	motion_planning/include/motion_planning/plan_kick.h	/^    std::vector<unsigned int> m_joint_ids;$/;"	m	class:motion_planning::PlanKick
m_joint_maxes	motion_planning/include/motion_planning/plan_kick.h	/^    std::vector<double> m_joint_maxes;$/;"	m	class:motion_planning::PlanKick
m_joint_mins	motion_planning/include/motion_planning/plan_kick.h	/^    std::vector<double> m_joint_mins;$/;"	m	class:motion_planning::PlanKick
m_joint_names	motion_planning/include/motion_planning/plan_kick.h	/^    std::vector<std::string> m_joint_names;$/;"	m	class:motion_planning::PlanKick
m_joint_plan	motion_planning/include/motion_planning/plan_kick.h	/^    std::vector<std::vector<double> > m_joint_plan;$/;"	m	class:motion_planning::PlanKick
m_joint_vels	motion_planning/include/motion_planning/plan_kick.h	/^    std::vector<double> m_joint_vels;$/;"	m	class:motion_planning::PlanKick
m_js	motion_planning/include/motion_planning/plan_kick.h	/^    sensor_msgs::JointState m_js;$/;"	m	class:motion_planning::PlanKick
m_js_pub	motion_planning/include/motion_planning/plan_kick.h	/^    ros::Publisher m_js_pub;$/;"	m	class:motion_planning::PlanKick
m_kick_dist	motion_planning/include/motion_planning/plan_kick.h	/^    double m_kick_dist;$/;"	m	class:motion_planning::PlanKick
m_kick_filename	motion_planning/include/motion_planning/plan_kick.h	/^    std::string m_kick_filename;$/;"	m	class:motion_planning::PlanKick
m_kick_time	motion_planning/include/motion_planning/plan_kick.h	/^    double m_kick_time;$/;"	m	class:motion_planning::PlanKick
m_lastError	lib/yaml-cpp/src/emitterstate.h	/^		std::string m_lastError;$/;"	m	class:YAML::EmitterState
m_lift_height	motion_planning/include/motion_planning/plan_kick.h	/^    double m_lift_height;$/;"	m	class:motion_planning::PlanKick
m_mapData	lib/yaml-cpp/include/yaml-cpp/node.h	/^		node_map m_mapData;$/;"	m	class:YAML::Node
m_mapFmt	lib/yaml-cpp/src/emitterstate.h	/^		Setting<EMITTER_MANIP> m_mapFmt;$/;"	m	class:YAML::EmitterState
m_mapKeyFmt	lib/yaml-cpp/src/emitterstate.h	/^		Setting<EMITTER_MANIP> m_mapKeyFmt;$/;"	m	class:YAML::EmitterState
m_mark	lib/yaml-cpp/include/yaml-cpp/node.h	/^		Mark m_mark;$/;"	m	class:YAML::Node
m_mark	lib/yaml-cpp/src/stream.h	/^		Mark m_mark;$/;"	m	class:YAML::Stream
m_modifiedSettings	lib/yaml-cpp/src/emitterstate.h	/^		SettingChanges m_modifiedSettings;$/;"	m	class:YAML::EmitterState
m_nPrefetchedAvailable	lib/yaml-cpp/src/stream.h	/^		mutable size_t m_nPrefetchedAvailable;$/;"	m	class:YAML::Stream
m_nPrefetchedUsed	lib/yaml-cpp/src/stream.h	/^		mutable size_t m_nPrefetchedUsed;$/;"	m	class:YAML::Stream
m_nh	motion_planning/include/motion_planning/plan_kick.h	/^    ros::NodeHandle m_nh;$/;"	m	class:motion_planning::PlanKick
m_nodes	lib/yaml-cpp/src/nodeownership.h	/^		ptr_vector<Node> m_nodes;$/;"	m	class:YAML::NodeOwnership
m_odom	motion_planning/include/motion_planning/plan_kick.h	/^    matec_msgs::Odometry m_odom;$/;"	m	class:motion_planning::PlanKick
m_odom_broadcaster	motion_planning/include/motion_planning/plan_kick.h	/^    tf::TransformBroadcaster m_odom_broadcaster;$/;"	m	class:motion_planning::PlanKick
m_offset	lib/yaml-cpp/src/streamcharsource.h	/^		std::size_t m_offset;$/;"	m	class:YAML::StreamCharSource
m_offset	lib/yaml-cpp/src/stringsource.h	/^		std::size_t m_offset;$/;"	m	class:YAML::StringCharSource
m_oldSetting	lib/yaml-cpp/src/setting.h	/^		Setting<T> m_oldSetting;$/;"	m	class:YAML::SettingChange
m_op	lib/yaml-cpp/src/regex.h	/^		REGEX_OP m_op;$/;"	m	class:YAML::RegEx
m_pBottomRight	core/math/Geometry.h	/^  Point2D m_pBottomRight; \/*!< bottom right position of the rectangle   *\/$/;"	m	class:Rectangle
m_pCenter	core/math/Geometry.h	/^  Point2D m_pCenter;            \/*!< Center of the circle  *\/$/;"	m	class:Circle
m_pCollectionStack	lib/yaml-cpp/src/singledocparser.h	/^		std::auto_ptr<CollectionStack> m_pCollectionStack;$/;"	m	class:YAML::SingleDocParser
m_pCurSetting	lib/yaml-cpp/src/setting.h	/^		Setting<T> *m_pCurSetting;$/;"	m	class:YAML::SettingChange
m_pData	lib/yaml-cpp/include/yaml-cpp/iterator.h	/^		std::auto_ptr<IterPriv> m_pData;$/;"	m	class:YAML::Iterator
m_pDirectives	lib/yaml-cpp/include/yaml-cpp/parser.h	/^		std::auto_ptr<Directives> m_pDirectives;$/;"	m	class:YAML::Parser
m_pKeyNode	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    void *m_pKeyNode;$/;"	m	class:YAML::GraphBuilderAdapter
m_pOwner	lib/yaml-cpp/src/nodeownership.h	/^		NodeOwnership *m_pOwner;$/;"	m	class:YAML::NodeOwnership
m_pOwnership	lib/yaml-cpp/include/yaml-cpp/node.h	/^		std::auto_ptr<NodeOwnership> m_pOwnership;$/;"	m	class:YAML::Node
m_pPrefetched	lib/yaml-cpp/src/stream.h	/^		unsigned char* const m_pPrefetched;$/;"	m	class:YAML::Stream
m_pRootNode	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^    void *m_pRootNode;$/;"	m	class:YAML::GraphBuilderAdapter
m_pScanner	lib/yaml-cpp/include/yaml-cpp/parser.h	/^		std::auto_ptr<Scanner> m_pScanner;$/;"	m	class:YAML::Parser
m_pState	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^		std::auto_ptr <EmitterState> m_pState;$/;"	m	class:YAML::Emitter
m_pTopLeft	core/math/Geometry.h	/^  Point2D m_pTopLeft;     \/*!< top left position of the rectangle       *\/$/;"	m	class:Rectangle
m_params	lib/yaml-cpp/src/regex.h	/^		std::vector <RegEx> m_params;$/;"	m	class:YAML::RegEx
m_pendingKeys	lib/yaml-cpp/src/nodebuilder.h	/^		std::stack<Node *> m_pendingKeys;$/;"	m	class:YAML::NodeBuilder
m_pos	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^		unsigned m_pos;$/;"	m	class:YAML::ostream
m_postCommentIndent	lib/yaml-cpp/src/emitterstate.h	/^		Setting<unsigned> m_preCommentIndent, m_postCommentIndent;$/;"	m	class:YAML::EmitterState
m_preCommentIndent	lib/yaml-cpp/src/emitterstate.h	/^		Setting<unsigned> m_preCommentIndent, m_postCommentIndent;$/;"	m	class:YAML::EmitterState
m_radius	core/math/Geometry.h	/^  float  m_radius;            \/*!< Radius of the circle  *\/$/;"	m	class:Circle
m_readahead	lib/yaml-cpp/src/stream.h	/^		mutable std::deque<char> m_readahead;$/;"	m	class:YAML::Stream
m_requiresHardSeparation	lib/yaml-cpp/src/emitterstate.h	/^		bool m_requiresHardSeparation;$/;"	m	class:YAML::EmitterState
m_requiresSoftSeparation	lib/yaml-cpp/src/emitterstate.h	/^		bool m_requiresSoftSeparation;$/;"	m	class:YAML::EmitterState
m_root	lib/yaml-cpp/src/nodebuilder.h	/^		Node& m_root;$/;"	m	class:YAML::NodeBuilder
m_rootTworld	motion_planning/include/motion_planning/plan_kick.h	/^    matec_utils::Matrix4 m_rootTworld;$/;"	m	class:motion_planning::PlanKick
m_row	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^		unsigned m_row, m_col;$/;"	m	class:YAML::ostream
m_sbuf	core/motion/rswalk2014/utils/basic_onullstream.hpp	/^      basic_nullbuf<cT, traits> m_sbuf;$/;"	m	class:basic_onullstream
m_scalarData	lib/yaml-cpp/include/yaml-cpp/node.h	/^		std::string m_scalarData;$/;"	m	class:YAML::Node
m_scanner	lib/yaml-cpp/src/singledocparser.h	/^		Scanner& m_scanner;$/;"	m	class:YAML::SingleDocParser
m_seqData	lib/yaml-cpp/include/yaml-cpp/node.h	/^		node_seq m_seqData;$/;"	m	class:YAML::Node
m_seqFmt	lib/yaml-cpp/src/emitterstate.h	/^		Setting<EMITTER_MANIP> m_seqFmt;$/;"	m	class:YAML::EmitterState
m_settingChanges	lib/yaml-cpp/src/setting.h	/^		setting_changes m_settingChanges;$/;"	m	class:YAML::SettingChanges
m_simpleKeyAllowed	lib/yaml-cpp/src/scanner.h	/^		bool m_simpleKeyAllowed;$/;"	m	class:YAML::Scanner
m_simpleKeys	lib/yaml-cpp/src/scanner.h	/^		std::stack<SimpleKey> m_simpleKeys;$/;"	m	class:YAML::Scanner
m_size	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	unsigned int m_size;$/;"	m	class:fadbad::FTypeName
m_size	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^		unsigned m_size;$/;"	m	class:YAML::ostream
m_size	lib/yaml-cpp/src/stringsource.h	/^		std::size_t m_size;$/;"	m	class:YAML::StringCharSource
m_sparse_joint_plan	motion_planning/include/motion_planning/plan_kick.h	/^    std::vector<std::pair<unsigned int, std::vector<double> > > m_sparse_joint_plan;$/;"	m	class:motion_planning::PlanKick
m_sparse_kick_filename	motion_planning/include/motion_planning/plan_kick.h	/^    std::string m_sparse_kick_filename;$/;"	m	class:motion_planning::PlanKick
m_stack	lib/yaml-cpp/src/nodebuilder.h	/^		std::stack<Node *> m_stack;$/;"	m	class:YAML::NodeBuilder
m_startedStream	lib/yaml-cpp/src/scanner.h	/^		bool m_startedStream, m_endedStream;$/;"	m	class:YAML::Scanner
m_stateStack	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^		std::stack<State::value> m_stateStack;$/;"	m	class:YAML::EmitFromEvents
m_stateStack	lib/yaml-cpp/src/emitterstate.h	/^		std::stack<EMITTER_STATE> m_stateStack;$/;"	m	class:YAML::EmitterState
m_str	lib/yaml-cpp/src/stringsource.h	/^		const char *m_str;$/;"	m	class:YAML::StringCharSource
m_strFmt	lib/yaml-cpp/src/emitterstate.h	/^		Setting<EMITTER_MANIP> m_strFmt;$/;"	m	class:YAML::EmitterState
m_stream	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^		ostream m_stream;$/;"	m	class:YAML::Emitter
m_stream	lib/yaml-cpp/src/streamcharsource.h	/^		const Stream& m_stream;$/;"	m	class:YAML::StreamCharSource
m_tag	lib/yaml-cpp/include/yaml-cpp/node.h	/^		std::string m_tag;$/;"	m	class:YAML::Node
m_tokens	lib/yaml-cpp/src/scanner.h	/^		std::queue<Token> m_tokens;$/;"	m	class:YAML::Scanner
m_tree	motion_planning/include/motion_planning/plan_kick.h	/^    dynamics_tree::DynamicsTree m_tree;$/;"	m	class:motion_planning::PlanKick
m_type	lib/yaml-cpp/include/yaml-cpp/node.h	/^		NodeType::value m_type;$/;"	m	class:YAML::Node
m_unownedData	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        const unsigned char *m_unownedData;$/;"	m	class:YAML::Binary
m_unownedSize	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        std::size_t m_unownedSize;$/;"	m	class:YAML::Binary
m_urdf_model	motion_planning/include/motion_planning/plan_kick.h	/^    urdf::Model m_urdf_model;$/;"	m	class:motion_planning::PlanKick
m_val	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	T m_val;$/;"	m	class:fadbad::FTypeName
m_value	lib/yaml-cpp/src/setting.h	/^		T m_value;$/;"	m	class:YAML::Setting
m_yaml	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			std::stringstream m_yaml;$/;"	m	class:Test::__anon130::EncodingTester	file:
m_z	lib/yaml-cpp/src/regex.h	/^		char m_a, m_z;$/;"	m	class:YAML::RegEx
machineepsilon	lib/alglib/ap.cpp	/^const double alglib::machineepsilon = 5E-16;$/;"	m	class:alglib	file:
magicv	lib/alglib/alglibmisc.h	/^    ae_int_t magicv;$/;"	m	struct:alglib_impl::__anon24
magnifier_	build/include/tool/PlotWindow.h	/^  QwtPlotMagnifier *magnifier_;$/;"	m	class:PlotWindow
magnifier_	tools/UTNaoTool/PlotWindow.h	/^  QwtPlotMagnifier *magnifier_;$/;"	m	class:PlotWindow
magnitude	core/math/YaMatrix.h	/^  float magnitude() {$/;"	f	class:YaVector
mahalanobisNorm	tools/behaviorSim/cma.py	/^    def mahalanobisNorm(self, dx):$/;"	m	class:CMAEvolutionStrategy
main	bin/compile	/^def main(args):$/;"	f
main	bin/compile_copy	/^def main():$/;"	f
main	bin/copy_robot	/^def main(ip,interfaces,options,robotID):$/;"	f
main	bin/nao_start	/^def main():$/;"	f
main	bin/simInterface	/^def main():$/;"	f
main	bin/simulator	/^def main():$/;"	f
main	build/compile	/^def main(args):$/;"	f
main	build/compile_copy	/^def main():$/;"	f
main	build/copy_robot	/^def main(ip,interfaces,options,robotID):$/;"	f
main	build/core/generate_block_operations.py	/^def main():$/;"	f
main	build/cpcompile	/^def main():$/;"	f
main	build/headless/main.cpp	/^int main(int argc, char** argv) {$/;"	f
main	build/include/tool/UTNaoTool.cpp	/^int main(int argc, char **argv) {$/;"	f
main	build/make_docs	/^def main(args):$/;"	f
main	data/scripts/wireless-monitor.py	/^def main():$/;"	f
main	install/copy_wpa.py	/^def main(ip):$/;"	f
main	install/install_naoqi	/^def main():$/;"	f
main	install/setup_robot	/^def main(options):$/;"	f
main	interfaces/memory_test/main.cpp	/^int main() {$/;"	f
main	interfaces/nao/src/naointerfacemain.cpp	/^int main( int argc, char *argv[] )$/;"	f
main	interfaces/shared_motion/main.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	interfaces/shared_vision/main.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	interfaces/sim_spark/main.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	kalman_filters/src/ekf_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	kalman_filters/src/linear_system_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	kalman_filters/src/stationary_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	kalman_filters/src/ukf_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	lib/lua/etc/min.c	/^int main(void)$/;"	f
main	lib/lua/src/lua.c	/^int main (int argc, char **argv) {$/;"	f
main	lib/lua/src/luac.c	/^int main(int argc, char* argv[])$/;"	f
main	lib/yaml-cpp/test/main.cpp	/^int main()$/;"	f
main	lib/yaml-cpp/util/api.cpp	/^int main()$/;"	f
main	lib/yaml-cpp/util/parse.cpp	/^int main(int argc, char **argv)$/;"	f
main	lib/zlib/example.c	/^int main(argc, argv)$/;"	f
main	lib/zlib/minigzip.c	/^int main(argc, argv)$/;"	f
main	motion_planning/src/plan_kick.cpp	/^int main(int argc, char **argv)$/;"	f
main	particle_filters/MCL_main.cpp	/^int main()$/;"	f
main	particle_filters/main.cpp	/^int main()$/;"	f
main	tools/UTNaoTool/UTNaoTool.cpp	/^int main(int argc, char **argv) {$/;"	f
main	tools/behaviorSim/behaviorSim.cpp	/^int main(int argc, char **argv) {$/;"	f
main	tools/behaviorSim/cma.py	/^def main(argv=None):$/;"	f
main	tools/behaviorSim/runCMAES.py	/^def main(filename,directory):$/;"	f
main	tools/color_classifier/src/main.cpp	/^int main(int argc, char **argv) {$/;"	f
main	tools/plotCOM.py	/^def main(ind,filenames):$/;"	f
main	vision_testing/src/vision_testing.cpp	/^int main(int argc, char **argv)$/;"	f
mainStrategy	core/memory/BehaviorParamBlock.h	/^  KickStrategy mainStrategy;$/;"	m	struct:BehaviorParamBlock
main_buffer_	core/memory/LogReader.h	/^    StreamBuffer main_buffer_;$/;"	m	class:LogReader
main_buffer_	core/memory/Logger.h	/^  StreamBuffer main_buffer_;$/;"	m	class:Logger
mainly	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
mainposition	lib/lua/src/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
mainthread	lib/lua/src/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
major	lib/yaml-cpp/src/directives.h	/^		int major, minor;$/;"	m	struct:YAML::Version
makeConstants	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^void Pose::makeConstants()$/;"	f	class:Pose
makeForwardKickJoints	core/motion/rswalk2014/Walk2014Generator.cpp	/^void Walk2014Generator::makeForwardKickJoints(float kickLean, float kickStepH, float shiftPeriod, float &footh, float &forwardDist,$/;"	f	class:Walk2014Generator
makeJoints	core/motion/rswalk2014/ActionGenerator.cpp	/^JointValues ActionGenerator::makeJoints(ActionCommand::All* request,$/;"	f	class:ActionGenerator
makeJoints	core/motion/rswalk2014/ClippedGenerator.cpp	/^JointValues ClippedGenerator::makeJoints(ActionCommand::All* request,$/;"	f	class:ClippedGenerator
makeJoints	core/motion/rswalk2014/DeadGenerator.cpp	/^JointValues DeadGenerator::makeJoints(ActionCommand::All* request,$/;"	f	class:DeadGenerator
makeJoints	core/motion/rswalk2014/DistributedGenerator.cpp	/^JointValues DistributedGenerator::makeJoints(ActionCommand::All* request,$/;"	f	class:DistributedGenerator
makeJoints	core/motion/rswalk2014/HeadGenerator.cpp	/^JointValues HeadGenerator::makeJoints(ActionCommand::All* request,$/;"	f	class:HeadGenerator
makeJoints	core/motion/rswalk2014/NullGenerator.cpp	/^JointValues NullGenerator::makeJoints(ActionCommand::All* request,$/;"	f	class:NullGenerator
makeJoints	core/motion/rswalk2014/RefPickupGenerator.cpp	/^JointValues RefPickupGenerator::makeJoints(ActionCommand::All* request,$/;"	f	class:RefPickupGenerator
makeJoints	core/motion/rswalk2014/StandGenerator.cpp	/^JointValues StandGenerator::makeJoints(ActionCommand::All* request,$/;"	f	class:StandGenerator
makeJoints	core/motion/rswalk2014/Walk2014Generator.cpp	/^JointValues Walk2014Generator::makeJoints(ActionCommand::All* request,$/;"	f	class:Walk2014Generator
makeJoints	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^JointValues WalkEnginePreProcessor::makeJoints(ActionCommand::All* request,$/;"	f	class:WalkEnginePreProcessor
makeLineFromPositionAndAngle	core/math/Geometry.cpp	/^Line2D Line2D::makeLineFromPositionAndAngle( Point2D p, AngRad ang )$/;"	f	class:Line2D
makeLineFromTwoPoints	core/math/Geometry.cpp	/^Line2D Line2D::makeLineFromTwoPoints( Point2D p1, Point2D p2 )$/;"	f	class:Line2D
makeTempDir	install/common.py	/^def makeTempDir():$/;"	f
makeTempDir	install/copy_wpa.py	/^def makeTempDir():$/;"	f
makeTempDir	install/fix_autoload.py	/^from setup_robotv4 import runRemoteCommand, ask, makeTempDir, removeTempDir, copyFile$/;"	i
makeUnique	bin/compile	/^def makeUnique(seq, idfun=None): $/;"	f
makeUnique	bin/copy_robot	/^def makeUnique(seq, idfun=None): $/;"	f
makeUnique	build/compile	/^def makeUnique(seq, idfun=None): $/;"	f
makeUnique	build/copy_robot	/^def makeUnique(seq, idfun=None): $/;"	f
make_assertion	lib/alglib/ap.cpp	/^void alglib::ap_error::make_assertion(bool bClause)$/;"	f	class:alglib::ap_error
make_assertion	lib/alglib/ap.cpp	/^void alglib::ap_error::make_assertion(bool bClause, const char *msg)$/;"	f	class:alglib::ap_error
make_crc_table	lib/zlib/crc32.c	/^local void make_crc_table()$/;"	f
makeadditers	lib/alglib/optimization.h	/^    ae_bool makeadditers;$/;"	m	struct:alglib_impl::__anon73
makefixed	lib/zlib/inflate.c	/^void makefixed()$/;"	f
makemask	lib/lua/src/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makewhite	lib/lua/src/lgc.c	/^#define makewhite(/;"	d	file:
man3dir	lib/zlib/Makefile	/^man3dir = ${mandir}\/man3$/;"	m
mandir	lib/zlib/Makefile	/^mandir =${prefix}\/share\/man$/;"	m
mannwhitneyu_ucheb	lib/alglib/statistics.cpp	/^static void mannwhitneyu_ucheb(double x,$/;"	f	namespace:alglib_impl
mannwhitneyu_uninterpolate	lib/alglib/statistics.cpp	/^static double mannwhitneyu_uninterpolate(double p1,$/;"	f	namespace:alglib_impl
mannwhitneyu_usigma	lib/alglib/statistics.cpp	/^static double mannwhitneyu_usigma(double s,$/;"	f	namespace:alglib_impl
mannwhitneyu_usigma000	lib/alglib/statistics.cpp	/^static double mannwhitneyu_usigma000(ae_int_t n1,$/;"	f	namespace:alglib_impl
mannwhitneyu_usigma075	lib/alglib/statistics.cpp	/^static double mannwhitneyu_usigma075(ae_int_t n1,$/;"	f	namespace:alglib_impl
mannwhitneyu_usigma150	lib/alglib/statistics.cpp	/^static double mannwhitneyu_usigma150(ae_int_t n1,$/;"	f	namespace:alglib_impl
mannwhitneyu_usigma225	lib/alglib/statistics.cpp	/^static double mannwhitneyu_usigma225(ae_int_t n1,$/;"	f	namespace:alglib_impl
mannwhitneyu_usigma300	lib/alglib/statistics.cpp	/^static double mannwhitneyu_usigma300(ae_int_t n1,$/;"	f	namespace:alglib_impl
mannwhitneyu_usigma333	lib/alglib/statistics.cpp	/^static double mannwhitneyu_usigma333(ae_int_t n1,$/;"	f	namespace:alglib_impl
mannwhitneyu_usigma367	lib/alglib/statistics.cpp	/^static double mannwhitneyu_usigma367(ae_int_t n1,$/;"	f	namespace:alglib_impl
mannwhitneyu_usigma400	lib/alglib/statistics.cpp	/^static double mannwhitneyu_usigma400(ae_int_t n1,$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln10n10	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln10n10(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln10n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln10n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln10n11	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln10n11(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln10n12	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln10n12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln10n13	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln10n13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln10n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln10n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln10n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln10n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln10n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln10n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln11n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln11n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln11n11	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln11n11(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln11n12	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln11n12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln11n13	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln11n13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln11n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln11n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln11n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln11n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln11n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln11n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln12n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln12n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln12n12	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln12n12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln12n13	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln12n13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln12n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln12n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln12n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln12n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln12n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln12n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln13n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln13n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln13n13	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln13n13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln13n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln13n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln13n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln13n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln13n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln13n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln14n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln14n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln14n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln14n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln14n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln14n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln14n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln14n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n10	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n10(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n11	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n11(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n12	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n13	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n16	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n16(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n17	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n17(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n18	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n18(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n19	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n19(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n20	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n20(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n21	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n21(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n22	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n22(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n23	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n23(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n24	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n24(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n25	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n25(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n26	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n26(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n27	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n27(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n28	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n28(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n29	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n29(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n5	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n5(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n6	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n6(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n7	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n7(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n8	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n8(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln5n9	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln5n9(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n10	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n10(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n11	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n11(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n12	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n13	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n6	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n6(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n7	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n7(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n8	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n8(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln6n9	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln6n9(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n10	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n10(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n11	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n11(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n12	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n13	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n7	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n7(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n8	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n8(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln7n9	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln7n9(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n10	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n10(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n11	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n11(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n12	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n13	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n8	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n8(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln8n9	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln8n9(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln9n10	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln9n10(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln9n100	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln9n100(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln9n11	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln9n11(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln9n12	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln9n12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln9n13	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln9n13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln9n14	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln9n14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln9n15	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln9n15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln9n30	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln9n30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyu_utbln9n9	lib/alglib/statistics.cpp	/^static double mannwhitneyu_utbln9n9(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
mannwhitneyutest	lib/alglib/statistics.cpp	/^void mannwhitneyutest(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
mannwhitneyutest	lib/alglib/statistics.cpp	/^void mannwhitneyutest(const real_1d_array &x, const ae_int_t n, const real_1d_array &y, const ae_int_t m, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
manual_height_	core/memory/RobotStateBlock.h	/^  float manual_height_;$/;"	m	struct:RobotStateBlock
manual_pose_	core/memory/RobotStateBlock.h	/^  Pose2D manual_pose_;$/;"	m	struct:RobotStateBlock
mapIter	lib/yaml-cpp/src/iterpriv.h	/^		std::map <Node *, Node *, ltnode>::const_iterator mapIter;$/;"	m	struct:YAML::IterPriv
mapPoint	build/include/tool/ImageWidget.cpp	/^QPoint ImageWidget::mapPoint(QPoint point) {$/;"	f	class:ImageWidget
mapPoint	tools/UTNaoTool/ImageWidget.cpp	/^QPoint ImageWidget::mapPoint(QPoint point) {$/;"	f	class:ImageWidget
mark	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		Mark mark;$/;"	m	class:YAML::Exception
mark	lib/yaml-cpp/src/scanner.h	/^			Mark mark;$/;"	m	struct:YAML::Scanner::SimpleKey
mark	lib/yaml-cpp/src/stream.h	/^		const Mark mark() const { return m_mark; }$/;"	f	class:YAML::Stream
mark	lib/yaml-cpp/src/token.h	/^		Mark mark;$/;"	m	struct:YAML::Token
markfinalized	lib/lua/src/lgc.c	/^#define markfinalized(/;"	d	file:
markmt	lib/lua/src/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	lib/lua/src/lgc.c	/^#define markobject(/;"	d	file:
markroot	lib/lua/src/lgc.c	/^static void markroot (lua_State *L) {$/;"	f	file:
marktmu	lib/lua/src/lgc.c	/^static void marktmu (global_State *g) {$/;"	f	file:
markupval	lib/lua/src/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	lib/lua/src/lgc.c	/^#define markvalue(/;"	d	file:
maskmarks	lib/lua/src/lgc.c	/^#define maskmarks	/;"	d	file:
mass	core/common/MassCalibration.h	/^    float mass; \/**< The mass of this limb. *\/$/;"	m	class:MassCalibration::MassInfo
mass_calibration_	build/include/tool/MotionGLWidget.h	/^  MassCalibration mass_calibration_;$/;"	m	class:MotionGLWidget
mass_calibration_	core/memory/RobotInfoBlock.h	/^  MassCalibration mass_calibration_;$/;"	m	struct:RobotInfoBlock
mass_calibration_	tools/UTNaoTool/MotionGLWidget.h	/^  MassCalibration mass_calibration_;$/;"	m	class:MotionGLWidget
masses	core/common/MassCalibration.h	/^  MassInfo masses[BodyPart::NUM_PARTS]; \/**< Information on the mass distribution of all joints. *\/$/;"	m	class:MassCalibration
masses	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      std::vector<float> masses;$/;"	m	class:Kinematics
massesCom	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      std::vector<boost::numeric::ublas::matrix<float> > massesCom;$/;"	m	class:Kinematics
mat	lib/alglib/ap.h	/^    alglib_impl::ae_matrix mat;$/;"	m	class:alglib::ae_matrix_wrapper
matToRaw	core/common/ColorConversion.cpp	/^void color::matToRaw(const cv::Mat& mat, unsigned char* imgraw, const ImageParams& iparams) {$/;"	f	class:color
match	lib/lua/src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match	tools/behaviorSim/cma.py	/^    def match(self, s=''):$/;"	m	class:Options
match_available	lib/zlib/deflate.h	/^    int match_available;         \/* set if previous match exists *\/$/;"	m	struct:internal_state
match_capture	lib/lua/src/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	lib/lua/src/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
match_length	lib/zlib/deflate.h	/^    uInt match_length;           \/* length of best match *\/$/;"	m	struct:internal_state
match_start	lib/zlib/deflate.h	/^    uInt match_start;            \/* start of matching string *\/$/;"	m	struct:internal_state
matchbalance	lib/lua/src/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	lib/lua/src/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
matches	lib/zlib/deflate.h	/^    uInt matches;       \/* number of string matches in current block *\/$/;"	m	struct:internal_state
math	core/python/behaviors/Movement.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
math	core/python/behaviors/head_tracking.py	/^import math, numpy$/;"	i
math	core/python/behaviors/pid_distance_angle.py	/^import math, numpy$/;"	i
math	core/python/behaviors/stamp_in_circles.py	/^import memory, pose, commands, cfgstiff, math$/;"	i
math	core/python/behaviors/walk_to_center.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
math	core/python/behaviors/walk_to_center_2.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
math	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
math	core/python/commands.py	/^import math$/;"	i
math	core/python/core.py	/^import math$/;"	i
math	core/python/geometry.py	/^import math$/;"	i
math	core/python/lights.py	/^import math$/;"	i
math	core/python/util.py	/^import time, math, copy$/;"	i
math	core/sensor/offline/genInertialFilterMatrices.py	/^import math$/;"	i
math	tools/testStep.py	/^import math$/;"	i
math	tools/testStepSide.py	/^import math$/;"	i
math_abs	lib/lua/src/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	lib/lua/src/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	lib/lua/src/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	lib/lua/src/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_atan2	lib/lua/src/lmathlib.c	/^static int math_atan2 (lua_State *L) {$/;"	f	file:
math_ceil	lib/lua/src/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	lib/lua/src/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	lib/lua/src/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	lib/lua/src/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	lib/lua/src/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	lib/lua/src/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	lib/lua/src/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	lib/lua/src/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	lib/lua/src/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	lib/lua/src/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	lib/lua/src/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	lib/lua/src/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	lib/lua/src/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	lib/lua/src/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	lib/lua/src/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	lib/lua/src/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	lib/lua/src/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	lib/lua/src/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	lib/lua/src/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	lib/lua/src/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	lib/lua/src/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	lib/lua/src/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	lib/lua/src/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
mathlib	lib/lua/src/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
matinv_cmatrixluinverserec	lib/alglib/linalg.cpp	/^static void matinv_cmatrixluinverserec(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
matinv_cmatrixtrinverserec	lib/alglib/linalg.cpp	/^static void matinv_cmatrixtrinverserec(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
matinv_hpdmatrixcholeskyinverserec	lib/alglib/linalg.cpp	/^static void matinv_hpdmatrixcholeskyinverserec(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
matinv_rmatrixluinverserec	lib/alglib/linalg.cpp	/^static void matinv_rmatrixluinverserec(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
matinv_rmatrixtrinverserec	lib/alglib/linalg.cpp	/^static void matinv_rmatrixtrinverserec(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
matinv_spdmatrixcholeskyinverserec	lib/alglib/linalg.cpp	/^static void matinv_spdmatrixcholeskyinverserec(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
matinvreport	lib/alglib/linalg.cpp	/^matinvreport::matinvreport() : _matinvreport_owner() ,r1(p_struct->r1),rinf(p_struct->rinf)$/;"	f	class:alglib::matinvreport
matinvreport	lib/alglib/linalg.cpp	/^matinvreport::matinvreport(const matinvreport &rhs):_matinvreport_owner(rhs) ,r1(p_struct->r1),rinf(p_struct->rinf)$/;"	f	class:alglib::matinvreport
matinvreport	lib/alglib/linalg.h	/^class matinvreport : public _matinvreport_owner$/;"	c	namespace:alglib
matinvreport	lib/alglib/linalg.h	/^} matinvreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon67
matplotlib	data/ballfit.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	data/goalfit.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	tools/behaviorSim/cma.py	/^    import matplotlib.pylab as pylab  # also: use ipython -pylab$/;"	i
matplotlib	tools/behaviorSim/cma.py	/^    print('  Could not import matplotlib.pylab, therefore ``cma.plot()`` etc. is not available')$/;"	i
matplotlib	tools/plotCOM.py	/^  import matplotlib.pyplot as plt$/;"	i
matplotlib	tools/testStep.py	/^import matplotlib.pyplot as plt$/;"	i
matplotlib	tools/testStepSide.py	/^import matplotlib.pyplot as plt$/;"	i
matrix	tools/behaviorSim/cma.py	/^            self.B = np.eye(N) # identity(N), do not from matlib import *, as eye is a matrix there$/;"	i
matrixNames	core/sensor/offline/genInertialFilterMatrices.py	/^matrixNames = ['A','B','C','Cz','Cz1','Q','R','L']$/;"	v
matrixToRPY	motion_planning/src/plan_kick.cpp	/^  inline void matrixToRPY(matec_utils::Matrix3 rot, double&roll, double&pitch, double&yaw)$/;"	f	namespace:motion_planning
matrixmatrixmultiply	lib/alglib/alglibinternal.cpp	/^void matrixmatrixmultiply(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
matrixvectormultiply	lib/alglib/alglibinternal.cpp	/^void matrixvectormultiply(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
max	core/math/Geometry.cpp	/^float max( float d1, float d2 )$/;"	f
max	core/math/Geometry.cpp	/^float max( float d1, float d2, float d3 )$/;"	f
max	core/math/Range.h	/^    T min,max;                    \/**< The limits of the range. *\/$/;"	m	class:Range
max	tools/behaviorSim/cma.py	/^        def max(vec, vec_or_scalar):$/;"	m	class:Misc.MathHelperFunctions
max	tools/color_classifier/src/classification_window.cpp	/^  inline int ClassificationWindow::max(int a, int b) {$/;"	f	class:color_classifier::ClassificationWindow
maxArcAngle	core/memory/BehaviorParamBlock.h	/^  float maxArcAngle;$/;"	m	struct:KickStrategy
maxBearingError	core/memory/BehaviorParamBlock.h	/^  float maxBearingError;$/;"	m	struct:SetPlay
maxDistError_	build/include/tool/simulation/LocalizationSimulation.h	/^    float maxDistError_, maxRotError_;$/;"	m	class:LocalizationSimulation
maxDistError_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    float maxDistError_, maxRotError_;$/;"	m	class:LocalizationSimulation
maxDistFromBall	core/memory/BehaviorParamBlock.h	/^  float maxDistFromBall;$/;"	m	struct:SetPlayStrategy
maxExpFloat	core/math/MVTools.cpp	/^const float maxExpFloat = 41.4465f;$/;"	m	namespace:MVTools	file:
maxFrame_	build/include/tool/annotations/Annotation.h	/^        int minFrame_, maxFrame_;$/;"	m	class:Annotation
maxFrame_	tools/UTNaoTool/annotations/Annotation.h	/^        int minFrame_, maxFrame_;$/;"	m	class:Annotation
maxFrames_	build/include/tool/AnnotationWidget.h	/^        int maxFrames_, currentFrame_;$/;"	m	class:AnnotationWidget
maxFrames_	build/include/tool/ClassificationWidget.h	/^        int maxFrames_;$/;"	m	class:ClassificationWidget
maxFrames_	tools/UTNaoTool/AnnotationWidget.h	/^        int maxFrames_, currentFrame_;$/;"	m	class:AnnotationWidget
maxFrames_	tools/UTNaoTool/ClassificationWidget.h	/^        int maxFrames_;$/;"	m	class:ClassificationWidget
maxFwdVel	build/include/tool/simulation/SimulatedPlayer.h	/^  float maxFwdVel;$/;"	m	class:SimulatedPlayer
maxFwdVel	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float maxFwdVel;$/;"	m	class:SimulatedPlayer
maxJointLimits	core/common/RobotInfo.h	/^const float maxJointLimits[NUM_JOINTS] = {$/;"	v
maxKickAngle	core/memory/BehaviorParamBlock.h	/^  float maxKickAngle; \/\/ max angle we can kick (or want to try)$/;"	m	struct:KickStrategy
maxKickDistance	core/communications/SPLStandardMessage.h	/^  int16_t maxKickDistance;$/;"	m	struct:SPLStandardMessage
maxNegFloat	core/math/MVTools.cpp	/^const float maxNegFloat = -1e18f;$/;"	m	namespace:MVTools	file:
maxNegInt	core/math/MVTools.cpp	/^const int maxNegInt = -2147483647;$/;"	m	namespace:MVTools	file:
maxOpponentSD	core/memory/BehaviorParamBlock.h	/^  float maxOpponentSD; \/\/ biggest sd for opponent before we ignore$/;"	m	struct:KickStrategy
maxPosFloat	core/math/MVTools.cpp	/^const float maxPosFloat = 1e18f;$/;"	m	namespace:MVTools	file:
maxPosInt	core/math/MVTools.cpp	/^const int maxPosInt = 2147483647;$/;"	m	namespace:MVTools	file:
maxRotError_	build/include/tool/simulation/LocalizationSimulation.h	/^    float maxDistError_, maxRotError_;$/;"	m	class:LocalizationSimulation
maxRotError_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    float maxDistError_, maxRotError_;$/;"	m	class:LocalizationSimulation
maxSideVel	build/include/tool/simulation/SimulatedPlayer.h	/^  float maxSideVel;$/;"	m	class:SimulatedPlayer
maxSideVel	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float maxSideVel;$/;"	m	class:SimulatedPlayer
maxSize	core/common/Profiling.h	/^  int maxSize;$/;"	m	struct:TimeList
maxStepFrequency	core/memory/ALWalkParamBlock.h	/^  float maxStepFrequency;$/;"	m	struct:ALWalkParamBlock
maxStepTheta	core/memory/ALWalkParamBlock.h	/^  float maxStepTheta;$/;"	m	struct:ALWalkParamBlock
maxStepX	core/memory/ALWalkParamBlock.h	/^  float maxStepX;$/;"	m	struct:ALWalkParamBlock
maxStepY	core/memory/ALWalkParamBlock.h	/^  float maxStepY;$/;"	m	struct:ALWalkParamBlock
maxTargetDistFromLine	core/memory/BehaviorParamBlock.h	/^  float maxTargetDistFromLine;$/;"	m	struct:SetPlayStrategy
maxTimeInPlaying	core/memory/BehaviorParamBlock.h	/^  float maxTimeInPlaying;$/;"	m	struct:SetPlayStrategy
maxTurnFromBall	core/memory/BehaviorParamBlock.h	/^  float maxTurnFromBall;$/;"	m	struct:PassStrategy
maxTurnVel	build/include/tool/simulation/SimulatedPlayer.h	/^  float maxTurnVel;$/;"	m	class:SimulatedPlayer
maxTurnVel	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float maxTurnVel;$/;"	m	class:SimulatedPlayer
maxVelTheta	build/include/tool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
maxVelTheta	tools/UTNaoTool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
maxVelX	build/include/tool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
maxVelX	tools/UTNaoTool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
maxVelY	build/include/tool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
maxVelY	tools/UTNaoTool/RobotControllerConfig.h	/^    float accelX, accelY, accelTheta, maxVelX, maxVelY, maxVelTheta;$/;"	m	class:RobotControllerConfig
maxVel_	build/include/tool/simulation/RobotMovementSimulator.h	/^    Pose2D vel_, maxVel_;$/;"	m	class:RobotMovementSimulator
maxVel_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    Pose2D vel_, maxVel_;$/;"	m	class:RobotMovementSimulator
maxX	core/memory/BehaviorParamBlock.h	/^  float maxX;$/;"	m	struct:RolePositionConfig
maxY	core/memory/BehaviorParamBlock.h	/^  float maxY;$/;"	m	struct:RolePositionConfig
max_chain	lib/zlib/deflate.c	/^   ush max_chain;$/;"	m	struct:config_s	file:
max_chain_length	lib/zlib/deflate.h	/^    uInt max_chain_length;$/;"	m	struct:internal_state
max_code	lib/zlib/deflate.h	/^    int     max_code;            \/* largest code with non zero frequency *\/$/;"	m	struct:tree_desc_s
max_distance_	core/sonar/SonarModule.h	/^  float max_distance_;$/;"	m	class:SonarModule
max_expand	lib/lua/src/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
max_fwd_dist_from_stance_left_swing_	core/motion/KickParameters.h	/^  float max_fwd_dist_from_stance_left_swing_;$/;"	m	struct:KickParameters
max_fwd_dist_from_stance_right_swing_	core/motion/KickParameters.h	/^  float max_fwd_dist_from_stance_right_swing_;$/;"	m	struct:KickParameters
max_insert_length	lib/zlib/deflate.h	/^#   define max_insert_length /;"	d
max_iter	core/motion/rswalk2014/ActionGenerator.hpp	/^      int max_iter;$/;"	m	class:ActionGenerator
max_lazy	lib/zlib/deflate.c	/^   ush max_lazy;    \/* do not perform lazy search above this match length *\/$/;"	m	struct:config_s	file:
max_lazy_match	lib/zlib/deflate.h	/^    uInt max_lazy_match;$/;"	m	struct:internal_state
max_length	lib/zlib/trees.c	/^    int     max_length;          \/* max bit length for the codes *\/$/;"	m	struct:static_tree_desc_s	file:
max_step_size_	core/motion/WalkEngineParameters.h	/^  Pose2D max_step_size_;$/;"	m	struct:WalkEngineParameters
max_vels_	interfaces/nao/src/almotionwrapper.h	/^  Pose2D max_vels_;$/;"	m	class:ALMotionWrapper
maxerror	lib/alglib/interpolation.h	/^    double &maxerror;$/;"	m	class:alglib::barycentricfitreport
maxerror	lib/alglib/interpolation.h	/^    double &maxerror;$/;"	m	class:alglib::lsfitreport
maxerror	lib/alglib/interpolation.h	/^    double &maxerror;$/;"	m	class:alglib::polynomialfitreport
maxerror	lib/alglib/interpolation.h	/^    double &maxerror;$/;"	m	class:alglib::spline1dfitreport
maxerror	lib/alglib/interpolation.h	/^    double maxerror;$/;"	m	struct:alglib_impl::__anon59
maxerror	lib/alglib/interpolation.h	/^    double maxerror;$/;"	m	struct:alglib_impl::__anon60
maxerror	lib/alglib/interpolation.h	/^    double maxerror;$/;"	m	struct:alglib_impl::__anon61
maxerror	lib/alglib/interpolation.h	/^    double maxerror;$/;"	m	struct:alglib_impl::__anon62
maxint	lib/alglib/ap.cpp	/^int alglib::maxint(int m1, int m2)$/;"	f	class:alglib
maxits	lib/alglib/interpolation.h	/^    ae_int_t maxits;$/;"	m	struct:alglib_impl::__anon63
maxits	lib/alglib/optimization.h	/^    ae_int_t maxits;$/;"	m	struct:alglib_impl::__anon69
maxits	lib/alglib/optimization.h	/^    ae_int_t maxits;$/;"	m	struct:alglib_impl::__anon73
maxits	lib/alglib/optimization.h	/^    ae_int_t maxits;$/;"	m	struct:alglib_impl::__anon75
maxits	lib/alglib/optimization.h	/^    ae_int_t maxits;$/;"	m	struct:alglib_impl::__anon77
maxits	lib/alglib/optimization.h	/^    ae_int_t maxits;$/;"	m	struct:alglib_impl::__anon79
maxits	lib/alglib/solvers.h	/^    ae_int_t maxits;$/;"	m	struct:alglib_impl::__anon83
maxmodelage	lib/alglib/optimization.h	/^    ae_int_t maxmodelage;$/;"	m	struct:alglib_impl::__anon73
maxn	lib/lua/src/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
maxreal	lib/alglib/ap.cpp	/^double alglib::maxreal(double m1, double m2)$/;"	f	class:alglib
maxrealnumber	lib/alglib/ap.cpp	/^const double alglib::maxrealnumber  = 1E300;$/;"	m	class:alglib	file:
maxstacksize	lib/lua/src/lobject.h	/^  lu_byte maxstacksize;$/;"	m	struct:Proto
mba	lib/alglib/optimization.h	/^    double mba;$/;"	m	struct:alglib_impl::__anon79
mcinfo	lib/alglib/optimization.h	/^    ae_int_t mcinfo;$/;"	m	struct:alglib_impl::__anon77
mcsrch	lib/alglib/alglibinternal.cpp	/^void mcsrch(ae_int_t n,$/;"	f	namespace:alglib_impl
mcstage	lib/alglib/optimization.h	/^    ae_int_t mcstage;$/;"	m	struct:alglib_impl::__anon69
mcstage	lib/alglib/optimization.h	/^    ae_int_t mcstage;$/;"	m	struct:alglib_impl::__anon75
mcstage	lib/alglib/optimization.h	/^    ae_int_t mcstage;$/;"	m	struct:alglib_impl::__anon77
mdata	core/memory/LogReader.h	/^    const LogMetadata& mdata() const { return mdata_; }$/;"	f	class:LogReader
mdata_	core/memory/Log.h	/^    LogMetadata mdata_;$/;"	m	class:Log
mdata_	core/memory/LogReader.h	/^    LogMetadata mdata_;$/;"	m	class:LogReader
mdata_	core/memory/Logger.h	/^  LogMetadata mdata_;$/;"	m	class:Logger
mdragged_	build/include/tool/WorldGLWidget.h	/^    std::set<int> kpressed_, mdragged_;$/;"	m	class:WorldGLWidget
mdragged_	tools/UTNaoTool/WorldGLWidget.h	/^    std::set<int> kpressed_, mdragged_;$/;"	m	class:WorldGLWidget
mean_	core/localization/ParticleFilter.h	/^    mutable Pose2D mean_;$/;"	m	class:ParticleFilter
measurements	core/math/GaussNewtonOptimizer.h	/^  const std::vector<M>& measurements; \/**< A reference to the vector containing all measurements. *\/$/;"	m	class:GaussNewtonOptimizer
meets	core/math/Range.h	/^    bool meets(const Range<T>& r) const {return max == r.min;}$/;"	f	class:Range
mem	core/imageCapture/NaoCamera.h	/^  void* mem[frameBufferCount]; \/**< Frame buffer addresses. *\/$/;"	m	class:NaoCamera
memLength	core/imageCapture/NaoCamera.h	/^  int memLength[frameBufferCount]; \/**< The length of each frame buffer. *\/$/;"	m	class:NaoCamera
mem_objects	core/python/behaviors/Distance.py	/^import mem_objects$/;"	i
mem_objects	core/python/behaviors/Movement.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
mem_objects	core/python/behaviors/head_tracking.py	/^import mem_objects$/;"	i
mem_objects	core/python/behaviors/keeper.py	/^import mem_objects$/;"	i
mem_objects	core/python/behaviors/keeper_2.py	/^import mem_objects$/;"	i
mem_objects	core/python/behaviors/keeper_3.py	/^import mem_objects$/;"	i
mem_objects	core/python/behaviors/pid_distance_angle.py	/^import mem_objects$/;"	i
mem_objects	core/python/behaviors/walk_to_center.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
mem_objects	core/python/behaviors/walk_to_center_2.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
mem_objects	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
mem_objects	core/python/commands.py	/^import mem_objects$/;"	i
mem_objects	core/python/init.py	/^import memory, mem_objects, commands$/;"	i
mem_objects	core/python/lights.py	/^import mem_objects$/;"	i
mem_objects	core/python/util.py	/^import core, mem_objects$/;"	i
mem_segment_	core/memory/SharedMemory.h	/^  boost::interprocess::managed_shared_memory *mem_segment_;$/;"	m	class:SharedMemory
memory	core/memory/MemoryCache.h	/^    Memory* memory;$/;"	m	class:MemoryCache
memory	core/python/UTdebug.py	/^import memory$/;"	i
memory	core/python/behaviors/Distance.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
memory	core/python/behaviors/Movement.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
memory	core/python/behaviors/custom_kick.py	/^import memory, pose, commands, cfgstiff, core$/;"	i
memory	core/python/behaviors/head_tracking.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
memory	core/python/behaviors/keeper.py	/^import core, memory$/;"	i
memory	core/python/behaviors/keeper_2.py	/^import core, memory$/;"	i
memory	core/python/behaviors/keeper_3.py	/^import core, memory$/;"	i
memory	core/python/behaviors/kick.py	/^import memory, pose, commands, cfgstiff$/;"	i
memory	core/python/behaviors/main.py	/^import memory, commands$/;"	i
memory	core/python/behaviors/pid_distance_angle.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
memory	core/python/behaviors/sample.py	/^import memory, commands$/;"	i
memory	core/python/behaviors/stamp_in_circles.py	/^import memory, pose, commands, cfgstiff, math$/;"	i
memory	core/python/behaviors/stand.py	/^import memory, pose, commands, cfgstiff$/;"	i
memory	core/python/behaviors/walk_to_center.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
memory	core/python/behaviors/walk_to_center_2.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
memory	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
memory	core/python/cfgmap.py	/^import memory$/;"	i
memory	core/python/init.py	/^import memory, mem_objects, commands$/;"	i
memory	core/python/mem_objects.py	/^import memory, geometry$/;"	i
memory_	build/include/tool/MotionGLWidget.h	/^  Memory* memory_;$/;"	m	class:MotionGLWidget
memory_	build/include/tool/MotionSimulation.h	/^  Memory* memory_;$/;"	m	class:MotionSimulation
memory_	build/include/tool/UTMainWnd.h	/^  Memory* memory_;$/;"	m	class:UTMainWnd
memory_	build/include/tool/UTOpenGL/GLDrawer.h	/^    Memory* memory_;$/;"	m	class:GLDrawer
memory_	build/include/tool/calibration/JointCalibrator.h	/^    Memory* memory_;$/;"	m	class:JointCalibrator
memory_	build/include/tool/simulation/BehaviorSimulation.h	/^    Memory* memory_;$/;"	m	class:BehaviorSimulation
memory_	build/include/tool/simulation/SimulatedPlayer.h	/^  Memory* memory_;$/;"	m	class:SimulatedPlayer
memory_	core/Module.h	/^  Memory *memory_; \/\/ Should go private once we remove bhuman walk module$/;"	m	class:Module
memory_	core/MotionCore.h	/^  Memory memory_;$/;"	m	class:MotionCore
memory_	core/VisionCore.h	/^  Memory *memory_;$/;"	m	class:VisionCore
memory_	core/imageCapture/ImageCapture.h	/^  Memory *memory_;$/;"	m	class:ImageCapture
memory_	core/memory/Log.h	/^    Memory* memory_;$/;"	m	class:Log
memory_	interfaces/nao/src/AudioWrapper.h	/^    Memory* memory_;$/;"	m	class:AudioWrapper
memory_	interfaces/nao/src/naointerface.h	/^    Memory *memory_;$/;"	m	class:naointerface
memory_	interfaces/sim_spark/RobotBehavior.h	/^  Memory *memory_;$/;"	m	class:RobotBehavior
memory_	tools/UTNaoTool/MotionGLWidget.h	/^  Memory* memory_;$/;"	m	class:MotionGLWidget
memory_	tools/UTNaoTool/MotionSimulation.h	/^  Memory* memory_;$/;"	m	class:MotionSimulation
memory_	tools/UTNaoTool/UTMainWnd.h	/^  Memory* memory_;$/;"	m	class:UTMainWnd
memory_	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    Memory* memory_;$/;"	m	class:GLDrawer
memory_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    Memory* memory_;$/;"	m	class:JointCalibrator
memory_	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    Memory* memory_;$/;"	m	class:BehaviorSimulation
memory_	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  Memory* memory_;$/;"	m	class:SimulatedPlayer
memory_log_	build/include/tool/PlotWindow.h	/^  Log* memory_log_;$/;"	m	class:PlotWindow
memory_log_	build/include/tool/UTMainWnd.h	/^  Log* memory_log_;$/;"	m	class:UTMainWnd
memory_log_	tools/UTNaoTool/PlotWindow.h	/^  Log* memory_log_;$/;"	m	class:PlotWindow
memory_log_	tools/UTNaoTool/UTMainWnd.h	/^  Log* memory_log_;$/;"	m	class:UTMainWnd
memory_name_	core/memory/SharedMemory.h	/^  const std::string memory_name_;$/;"	m	class:SharedMemory
memory_satisfied_	core/Module.h	/^  bool memory_satisfied_;  \/\/ Have all required blocks loaded$/;"	m	class:Module
merge	core/vision/structures/FocusArea.cpp	/^std::vector<FocusArea> FocusArea::merge(const std::vector<FocusArea>& areas) {$/;"	f	class:FocusArea
merge	core/vision/structures/FocusArea.cpp	/^std::vector<FocusArea> FocusArea::merge(const std::vector<FocusArea>& areas, MergePredicate predicate) {$/;"	f	class:FocusArea
merge	core/vision/structures/FocusArea.h	/^  inline void merge(const FocusArea& other) {$/;"	f	struct:FocusArea
mergeAnnotations	build/include/tool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::mergeAnnotations(std::vector<Annotation*> annotations, int sourceMinFrame, int targetMinFrame, int targetRange) {$/;"	f	class:AnnotationGroup
mergeAnnotations	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::mergeAnnotations(std::vector<Annotation*> annotations, int sourceMinFrame, int targetMinFrame, int targetRange) {$/;"	f	class:AnnotationGroup
mergeVertical	core/vision/structures/FocusArea.cpp	/^std::vector<FocusArea> FocusArea::mergeVertical(const std::vector<FocusArea>& areas, const ImageParams& iparams) {$/;"	f	class:FocusArea
mergeblob	core/vision/ImageProcessor.h	/^    MergeBlob* mergeblob;$/;"	m	class:ImageProcessor
message	core/common/ToolPacket.h	/^  MessageType message;$/;"	m	struct:ToolPacket
message	core/communications/RoboCupGameControlData.h	/^  uint8_t message; \/\/ one of the three messages defined above$/;"	m	struct:RoboCupGameControlReturnData
message	core/communications/SPLCoachMessage.h	/^  uint8_t message[SPL_COACH_MESSAGE_SIZE];$/;"	m	struct:SPLCoachMessage
message_	core/common/Profiling.h	/^    std::string message_;$/;"	m	class:Timer
metBy	core/math/Range.h	/^    bool metBy(const Range<T>& r) const {return min == r.max;}$/;"	f	class:Range
metatable	lib/lua/src/lobject.h	/^    struct Table *metatable;$/;"	m	struct:Udata::__anon89	typeref:struct:Udata::__anon89::Table
metatable	lib/lua/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table
method	build/include/tool/simulation/LocalizationSimulation.h	/^  LocalizationMethod::Type method;$/;"	m	struct:LocSimAgent
method	lib/zlib/deflate.h	/^    Byte  method;        \/* STORED (for zip only) or DEFLATED *\/$/;"	m	struct:internal_state
method	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  LocalizationMethod::Type method;$/;"	m	struct:LocSimAgent
mf2b	core/motion/rswalk2014/Walk2014Generator.cpp	/^XYZ_Coord Walk2014Generator::mf2b(float Hyp, float Hp, float Hr,$/;"	f	class:Walk2014Generator
min	core/math/Geometry.cpp	/^float min( float d1, float d2 )$/;"	f
min	core/math/Range.h	/^    T min,max;                    \/**< The limits of the range. *\/$/;"	m	class:Range
min	tools/behaviorSim/cma.py	/^        def min(a, b):$/;"	m	class:Misc.MathHelperFunctions
min	tools/color_classifier/src/classification_window.cpp	/^  inline int ClassificationWindow::min(int a, int b) {$/;"	f	class:color_classifier::ClassificationWindow
minFrame_	build/include/tool/annotations/Annotation.h	/^        int minFrame_, maxFrame_;$/;"	m	class:Annotation
minFrame_	tools/UTNaoTool/annotations/Annotation.h	/^        int minFrame_, maxFrame_;$/;"	m	class:Annotation
minJointLimits	core/common/RobotInfo.h	/^const float minJointLimits[NUM_JOINTS] = {$/;"	v
minNegFloat	core/math/MVTools.cpp	/^const float minNegFloat = -1e-18f;$/;"	m	namespace:MVTools	file:
minNegInt	core/math/MVTools.cpp	/^const int minNegInt = 0;$/;"	m	namespace:MVTools	file:
minOppDistForExtraRotateFactor	core/memory/BehaviorParamBlock.h	/^  float minOppDistForExtraRotateFactor; \/\/ conversion from goalBearing in radians into distance$/;"	m	struct:KickStrategy
minOppDistForExtraRotateOffset	core/memory/BehaviorParamBlock.h	/^  float minOppDistForExtraRotateOffset; \/\/ const dist factor added to the below$/;"	m	struct:KickStrategy
minOppDistForSlowKick	core/memory/BehaviorParamBlock.h	/^  float minOppDistForSlowKick;$/;"	m	struct:KickStrategy
minOppDistForSuperKick	core/memory/BehaviorParamBlock.h	/^  float minOppDistForSuperKick;$/;"	m	struct:KickStrategy
minOpponentDist	core/memory/BehaviorParamBlock.h	/^  float minOpponentDist; \/\/ passes must be at least this far from opponent$/;"	m	struct:KickStrategy
minPosFloat	core/math/MVTools.cpp	/^const float minPosFloat = 1e-18f;$/;"	m	namespace:MVTools	file:
minPosInt	core/math/MVTools.cpp	/^const int minPosInt = 0;$/;"	m	namespace:MVTools	file:
minX	core/memory/BehaviorParamBlock.h	/^  float minX;$/;"	m	struct:FieldAreaRoleConfig
minX	core/memory/BehaviorParamBlock.h	/^  float minX;$/;"	m	struct:RolePositionConfig
min_distance_	core/sonar/SonarModule.h	/^  float min_distance_;$/;"	m	class:SonarModule
min_expand	lib/lua/src/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
min_step_change_time_	core/motion/WalkEngineParameters.h	/^  float min_step_change_time_; \/\/ we can change steps unless they're farther off than this time$/;"	m	struct:WalkEngineParameters
minasa_asaboundedantigradnorm	lib/alglib/optimization.cpp	/^static double minasa_asaboundedantigradnorm(minasastate* state,$/;"	f	namespace:alglib_impl
minasa_asad1norm	lib/alglib/optimization.cpp	/^static double minasa_asad1norm(minasastate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minasa_asaginorm	lib/alglib/optimization.cpp	/^static double minasa_asaginorm(minasastate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minasa_asarho	lib/alglib/optimization.cpp	/^static double minasa_asarho = 0.5;$/;"	m	namespace:alglib_impl	file:
minasa_asauisempty	lib/alglib/optimization.cpp	/^static ae_bool minasa_asauisempty(minasastate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minasa_clearrequestfields	lib/alglib/optimization.cpp	/^static void minasa_clearrequestfields(minasastate* state,$/;"	f	namespace:alglib_impl
minasa_gpadecay	lib/alglib/optimization.cpp	/^static double minasa_gpadecay = 0.5;$/;"	m	namespace:alglib_impl	file:
minasa_gpaftol	lib/alglib/optimization.cpp	/^static double minasa_gpaftol = 0.0001;$/;"	m	namespace:alglib_impl	file:
minasa_n1	lib/alglib/optimization.cpp	/^static ae_int_t minasa_n1 = 2;$/;"	m	namespace:alglib_impl	file:
minasa_n2	lib/alglib/optimization.cpp	/^static ae_int_t minasa_n2 = 2;$/;"	m	namespace:alglib_impl	file:
minasa_stpmin	lib/alglib/optimization.cpp	/^static double minasa_stpmin = 1.0E-300;$/;"	m	namespace:alglib_impl	file:
minasacreate	lib/alglib/optimization.cpp	/^void minasacreate(ae_int_t n,$/;"	f	namespace:alglib_impl
minasacreate	lib/alglib/optimization.cpp	/^void minasacreate(const ae_int_t n, const real_1d_array &x, const real_1d_array &bndl, const real_1d_array &bndu, minasastate &state)$/;"	f	namespace:alglib
minasacreate	lib/alglib/optimization.cpp	/^void minasacreate(const real_1d_array &x, const real_1d_array &bndl, const real_1d_array &bndu, minasastate &state)$/;"	f	namespace:alglib
minasaiteration	lib/alglib/optimization.cpp	/^ae_bool minasaiteration(minasastate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minasaiteration	lib/alglib/optimization.cpp	/^bool minasaiteration(const minasastate &state)$/;"	f	namespace:alglib
minasaoptimize	lib/alglib/optimization.cpp	/^void minasaoptimize(minasastate &state,$/;"	f	namespace:alglib
minasareport	lib/alglib/optimization.cpp	/^minasareport::minasareport() : _minasareport_owner() ,iterationscount(p_struct->iterationscount),nfev(p_struct->nfev),terminationtype(p_struct->terminationtype),activeconstraints(p_struct->activeconstraints)$/;"	f	class:alglib::minasareport
minasareport	lib/alglib/optimization.cpp	/^minasareport::minasareport(const minasareport &rhs):_minasareport_owner(rhs) ,iterationscount(p_struct->iterationscount),nfev(p_struct->nfev),terminationtype(p_struct->terminationtype),activeconstraints(p_struct->activeconstraints)$/;"	f	class:alglib::minasareport
minasareport	lib/alglib/optimization.h	/^class minasareport : public _minasareport_owner$/;"	c	namespace:alglib
minasareport	lib/alglib/optimization.h	/^} minasareport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon76
minasarestartfrom	lib/alglib/optimization.cpp	/^void minasarestartfrom(const minasastate &state, const real_1d_array &x, const real_1d_array &bndl, const real_1d_array &bndu)$/;"	f	namespace:alglib
minasarestartfrom	lib/alglib/optimization.cpp	/^void minasarestartfrom(minasastate* state,$/;"	f	namespace:alglib_impl
minasaresults	lib/alglib/optimization.cpp	/^void minasaresults(const minasastate &state, real_1d_array &x, minasareport &rep)$/;"	f	namespace:alglib
minasaresults	lib/alglib/optimization.cpp	/^void minasaresults(minasastate* state,$/;"	f	namespace:alglib_impl
minasaresultsbuf	lib/alglib/optimization.cpp	/^void minasaresultsbuf(const minasastate &state, real_1d_array &x, minasareport &rep)$/;"	f	namespace:alglib
minasaresultsbuf	lib/alglib/optimization.cpp	/^void minasaresultsbuf(minasastate* state,$/;"	f	namespace:alglib_impl
minasasetalgorithm	lib/alglib/optimization.cpp	/^void minasasetalgorithm(const minasastate &state, const ae_int_t algotype)$/;"	f	namespace:alglib
minasasetalgorithm	lib/alglib/optimization.cpp	/^void minasasetalgorithm(minasastate* state,$/;"	f	namespace:alglib_impl
minasasetcond	lib/alglib/optimization.cpp	/^void minasasetcond(const minasastate &state, const double epsg, const double epsf, const double epsx, const ae_int_t maxits)$/;"	f	namespace:alglib
minasasetcond	lib/alglib/optimization.cpp	/^void minasasetcond(minasastate* state,$/;"	f	namespace:alglib_impl
minasasetstpmax	lib/alglib/optimization.cpp	/^void minasasetstpmax(const minasastate &state, const double stpmax)$/;"	f	namespace:alglib
minasasetstpmax	lib/alglib/optimization.cpp	/^void minasasetstpmax(minasastate* state, double stpmax, ae_state *_state)$/;"	f	namespace:alglib_impl
minasasetxrep	lib/alglib/optimization.cpp	/^void minasasetxrep(const minasastate &state, const bool needxrep)$/;"	f	namespace:alglib
minasasetxrep	lib/alglib/optimization.cpp	/^void minasasetxrep(minasastate* state, ae_bool needxrep, ae_state *_state)$/;"	f	namespace:alglib_impl
minasastate	lib/alglib/optimization.cpp	/^minasastate::minasastate() : _minasastate_owner() ,needfg(p_struct->needfg),xupdated(p_struct->xupdated),f(p_struct->f),g(&p_struct->g),x(&p_struct->x)$/;"	f	class:alglib::minasastate
minasastate	lib/alglib/optimization.cpp	/^minasastate::minasastate(const minasastate &rhs):_minasastate_owner(rhs) ,needfg(p_struct->needfg),xupdated(p_struct->xupdated),f(p_struct->f),g(&p_struct->g),x(&p_struct->x)$/;"	f	class:alglib::minasastate
minasastate	lib/alglib/optimization.h	/^class minasastate : public _minasastate_owner$/;"	c	namespace:alglib
minasastate	lib/alglib/optimization.h	/^} minasastate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon75
minbleic_additionalcheckforconstraints	lib/alglib/optimization.cpp	/^static ae_bool minbleic_additionalcheckforconstraints(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleic_clearrequestfields	lib/alglib/optimization.cpp	/^static void minbleic_clearrequestfields(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleic_makegradientprojection	lib/alglib/optimization.cpp	/^static void minbleic_makegradientprojection(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleic_maxouterits	lib/alglib/optimization.cpp	/^static double minbleic_maxouterits = 20;$/;"	m	namespace:alglib_impl	file:
minbleic_modifytargetfunction	lib/alglib/optimization.cpp	/^static void minbleic_modifytargetfunction(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleic_prepareconstraintmatrix	lib/alglib/optimization.cpp	/^static ae_bool minbleic_prepareconstraintmatrix(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleic_projectpointandunscale	lib/alglib/optimization.cpp	/^static void minbleic_projectpointandunscale(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleic_rebuildcexe	lib/alglib/optimization.cpp	/^static void minbleic_rebuildcexe(minbleicstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minbleic_scalegradientandexpand	lib/alglib/optimization.cpp	/^static void minbleic_scalegradientandexpand(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleic_svdtol	lib/alglib/optimization.cpp	/^static double minbleic_svdtol = 100;$/;"	m	namespace:alglib_impl	file:
minbleic_unscalepoint	lib/alglib/optimization.cpp	/^static void minbleic_unscalepoint(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleiccreate	lib/alglib/optimization.cpp	/^void minbleiccreate(ae_int_t n,$/;"	f	namespace:alglib_impl
minbleiccreate	lib/alglib/optimization.cpp	/^void minbleiccreate(const ae_int_t n, const real_1d_array &x, minbleicstate &state)$/;"	f	namespace:alglib
minbleiccreate	lib/alglib/optimization.cpp	/^void minbleiccreate(const real_1d_array &x, minbleicstate &state)$/;"	f	namespace:alglib
minbleiciteration	lib/alglib/optimization.cpp	/^ae_bool minbleiciteration(minbleicstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minbleiciteration	lib/alglib/optimization.cpp	/^bool minbleiciteration(const minbleicstate &state)$/;"	f	namespace:alglib
minbleicoptimize	lib/alglib/optimization.cpp	/^void minbleicoptimize(minbleicstate &state,$/;"	f	namespace:alglib
minbleicreport	lib/alglib/optimization.cpp	/^minbleicreport::minbleicreport() : _minbleicreport_owner() ,inneriterationscount(p_struct->inneriterationscount),outeriterationscount(p_struct->outeriterationscount),nfev(p_struct->nfev),terminationtype(p_struct->terminationtype),debugeqerr(p_struct->debugeqerr),debugfs(p_struct->debugfs),debugff(p_struct->debugff),debugdx(p_struct->debugdx)$/;"	f	class:alglib::minbleicreport
minbleicreport	lib/alglib/optimization.cpp	/^minbleicreport::minbleicreport(const minbleicreport &rhs):_minbleicreport_owner(rhs) ,inneriterationscount(p_struct->inneriterationscount),outeriterationscount(p_struct->outeriterationscount),nfev(p_struct->nfev),terminationtype(p_struct->terminationtype),debugeqerr(p_struct->debugeqerr),debugfs(p_struct->debugfs),debugff(p_struct->debugff),debugdx(p_struct->debugdx)$/;"	f	class:alglib::minbleicreport
minbleicreport	lib/alglib/optimization.h	/^class minbleicreport : public _minbleicreport_owner$/;"	c	namespace:alglib
minbleicreport	lib/alglib/optimization.h	/^} minbleicreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon80
minbleicrestartfrom	lib/alglib/optimization.cpp	/^void minbleicrestartfrom(const minbleicstate &state, const real_1d_array &x)$/;"	f	namespace:alglib
minbleicrestartfrom	lib/alglib/optimization.cpp	/^void minbleicrestartfrom(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicresults	lib/alglib/optimization.cpp	/^void minbleicresults(const minbleicstate &state, real_1d_array &x, minbleicreport &rep)$/;"	f	namespace:alglib
minbleicresults	lib/alglib/optimization.cpp	/^void minbleicresults(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicresultsbuf	lib/alglib/optimization.cpp	/^void minbleicresultsbuf(const minbleicstate &state, real_1d_array &x, minbleicreport &rep)$/;"	f	namespace:alglib
minbleicresultsbuf	lib/alglib/optimization.cpp	/^void minbleicresultsbuf(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetbarrierdecay	lib/alglib/optimization.cpp	/^void minbleicsetbarrierdecay(const minbleicstate &state, const double mudecay)$/;"	f	namespace:alglib
minbleicsetbarrierdecay	lib/alglib/optimization.cpp	/^void minbleicsetbarrierdecay(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetbarrierwidth	lib/alglib/optimization.cpp	/^void minbleicsetbarrierwidth(const minbleicstate &state, const double mu)$/;"	f	namespace:alglib
minbleicsetbarrierwidth	lib/alglib/optimization.cpp	/^void minbleicsetbarrierwidth(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetbc	lib/alglib/optimization.cpp	/^void minbleicsetbc(const minbleicstate &state, const real_1d_array &bndl, const real_1d_array &bndu)$/;"	f	namespace:alglib
minbleicsetbc	lib/alglib/optimization.cpp	/^void minbleicsetbc(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetinnercond	lib/alglib/optimization.cpp	/^void minbleicsetinnercond(const minbleicstate &state, const double epsg, const double epsf, const double epsx)$/;"	f	namespace:alglib
minbleicsetinnercond	lib/alglib/optimization.cpp	/^void minbleicsetinnercond(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetlc	lib/alglib/optimization.cpp	/^void minbleicsetlc(const minbleicstate &state, const real_2d_array &c, const integer_1d_array &ct)$/;"	f	namespace:alglib
minbleicsetlc	lib/alglib/optimization.cpp	/^void minbleicsetlc(const minbleicstate &state, const real_2d_array &c, const integer_1d_array &ct, const ae_int_t k)$/;"	f	namespace:alglib
minbleicsetlc	lib/alglib/optimization.cpp	/^void minbleicsetlc(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetmaxits	lib/alglib/optimization.cpp	/^void minbleicsetmaxits(const minbleicstate &state, const ae_int_t maxits)$/;"	f	namespace:alglib
minbleicsetmaxits	lib/alglib/optimization.cpp	/^void minbleicsetmaxits(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetoutercond	lib/alglib/optimization.cpp	/^void minbleicsetoutercond(const minbleicstate &state, const double epsx, const double epsi)$/;"	f	namespace:alglib
minbleicsetoutercond	lib/alglib/optimization.cpp	/^void minbleicsetoutercond(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetprecdefault	lib/alglib/optimization.cpp	/^void minbleicsetprecdefault(const minbleicstate &state)$/;"	f	namespace:alglib
minbleicsetprecdefault	lib/alglib/optimization.cpp	/^void minbleicsetprecdefault(minbleicstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minbleicsetprecdiag	lib/alglib/optimization.cpp	/^void minbleicsetprecdiag(const minbleicstate &state, const real_1d_array &d)$/;"	f	namespace:alglib
minbleicsetprecdiag	lib/alglib/optimization.cpp	/^void minbleicsetprecdiag(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetprecscale	lib/alglib/optimization.cpp	/^void minbleicsetprecscale(const minbleicstate &state)$/;"	f	namespace:alglib
minbleicsetprecscale	lib/alglib/optimization.cpp	/^void minbleicsetprecscale(minbleicstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minbleicsetscale	lib/alglib/optimization.cpp	/^void minbleicsetscale(const minbleicstate &state, const real_1d_array &s)$/;"	f	namespace:alglib
minbleicsetscale	lib/alglib/optimization.cpp	/^void minbleicsetscale(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetstpmax	lib/alglib/optimization.cpp	/^void minbleicsetstpmax(const minbleicstate &state, const double stpmax)$/;"	f	namespace:alglib
minbleicsetstpmax	lib/alglib/optimization.cpp	/^void minbleicsetstpmax(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicsetxrep	lib/alglib/optimization.cpp	/^void minbleicsetxrep(const minbleicstate &state, const bool needxrep)$/;"	f	namespace:alglib
minbleicsetxrep	lib/alglib/optimization.cpp	/^void minbleicsetxrep(minbleicstate* state,$/;"	f	namespace:alglib_impl
minbleicstate	lib/alglib/optimization.cpp	/^minbleicstate::minbleicstate() : _minbleicstate_owner() ,needfg(p_struct->needfg),xupdated(p_struct->xupdated),f(p_struct->f),g(&p_struct->g),x(&p_struct->x)$/;"	f	class:alglib::minbleicstate
minbleicstate	lib/alglib/optimization.cpp	/^minbleicstate::minbleicstate(const minbleicstate &rhs):_minbleicstate_owner(rhs) ,needfg(p_struct->needfg),xupdated(p_struct->xupdated),f(p_struct->f),g(&p_struct->g),x(&p_struct->x)$/;"	f	class:alglib::minbleicstate
minbleicstate	lib/alglib/optimization.h	/^class minbleicstate : public _minbleicstate_owner$/;"	c	namespace:alglib
minbleicstate	lib/alglib/optimization.h	/^} minbleicstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon79
mincg_clearrequestfields	lib/alglib/optimization.cpp	/^static void mincg_clearrequestfields(mincgstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
mincg_preconditionedmultiply	lib/alglib/optimization.cpp	/^static void mincg_preconditionedmultiply(mincgstate* state,$/;"	f	namespace:alglib_impl
mincg_preconditionedmultiply2	lib/alglib/optimization.cpp	/^static double mincg_preconditionedmultiply2(mincgstate* state,$/;"	f	namespace:alglib_impl
mincg_rscountdownlen	lib/alglib/optimization.cpp	/^static ae_int_t mincg_rscountdownlen = 10;$/;"	m	namespace:alglib_impl	file:
mincgcreate	lib/alglib/optimization.cpp	/^void mincgcreate(ae_int_t n,$/;"	f	namespace:alglib_impl
mincgcreate	lib/alglib/optimization.cpp	/^void mincgcreate(const ae_int_t n, const real_1d_array &x, mincgstate &state)$/;"	f	namespace:alglib
mincgcreate	lib/alglib/optimization.cpp	/^void mincgcreate(const real_1d_array &x, mincgstate &state)$/;"	f	namespace:alglib
mincgiteration	lib/alglib/optimization.cpp	/^ae_bool mincgiteration(mincgstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
mincgiteration	lib/alglib/optimization.cpp	/^bool mincgiteration(const mincgstate &state)$/;"	f	namespace:alglib
mincgoptimize	lib/alglib/optimization.cpp	/^void mincgoptimize(mincgstate &state,$/;"	f	namespace:alglib
mincgreport	lib/alglib/optimization.cpp	/^mincgreport::mincgreport() : _mincgreport_owner() ,iterationscount(p_struct->iterationscount),nfev(p_struct->nfev),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::mincgreport
mincgreport	lib/alglib/optimization.cpp	/^mincgreport::mincgreport(const mincgreport &rhs):_mincgreport_owner(rhs) ,iterationscount(p_struct->iterationscount),nfev(p_struct->nfev),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::mincgreport
mincgreport	lib/alglib/optimization.h	/^class mincgreport : public _mincgreport_owner$/;"	c	namespace:alglib
mincgreport	lib/alglib/optimization.h	/^} mincgreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon78
mincgrestartfrom	lib/alglib/optimization.cpp	/^void mincgrestartfrom(const mincgstate &state, const real_1d_array &x)$/;"	f	namespace:alglib
mincgrestartfrom	lib/alglib/optimization.cpp	/^void mincgrestartfrom(mincgstate* state,$/;"	f	namespace:alglib_impl
mincgresults	lib/alglib/optimization.cpp	/^void mincgresults(const mincgstate &state, real_1d_array &x, mincgreport &rep)$/;"	f	namespace:alglib
mincgresults	lib/alglib/optimization.cpp	/^void mincgresults(mincgstate* state,$/;"	f	namespace:alglib_impl
mincgresultsbuf	lib/alglib/optimization.cpp	/^void mincgresultsbuf(const mincgstate &state, real_1d_array &x, mincgreport &rep)$/;"	f	namespace:alglib
mincgresultsbuf	lib/alglib/optimization.cpp	/^void mincgresultsbuf(mincgstate* state,$/;"	f	namespace:alglib_impl
mincgsetcgtype	lib/alglib/optimization.cpp	/^void mincgsetcgtype(const mincgstate &state, const ae_int_t cgtype)$/;"	f	namespace:alglib
mincgsetcgtype	lib/alglib/optimization.cpp	/^void mincgsetcgtype(mincgstate* state, ae_int_t cgtype, ae_state *_state)$/;"	f	namespace:alglib_impl
mincgsetcond	lib/alglib/optimization.cpp	/^void mincgsetcond(const mincgstate &state, const double epsg, const double epsf, const double epsx, const ae_int_t maxits)$/;"	f	namespace:alglib
mincgsetcond	lib/alglib/optimization.cpp	/^void mincgsetcond(mincgstate* state,$/;"	f	namespace:alglib_impl
mincgsetdrep	lib/alglib/optimization.cpp	/^void mincgsetdrep(mincgstate* state, ae_bool needdrep, ae_state *_state)$/;"	f	namespace:alglib_impl
mincgsetprecdefault	lib/alglib/optimization.cpp	/^void mincgsetprecdefault(const mincgstate &state)$/;"	f	namespace:alglib
mincgsetprecdefault	lib/alglib/optimization.cpp	/^void mincgsetprecdefault(mincgstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
mincgsetprecdiag	lib/alglib/optimization.cpp	/^void mincgsetprecdiag(const mincgstate &state, const real_1d_array &d)$/;"	f	namespace:alglib
mincgsetprecdiag	lib/alglib/optimization.cpp	/^void mincgsetprecdiag(mincgstate* state,$/;"	f	namespace:alglib_impl
mincgsetprecdiagfast	lib/alglib/optimization.cpp	/^void mincgsetprecdiagfast(mincgstate* state,$/;"	f	namespace:alglib_impl
mincgsetpreclowrankfast	lib/alglib/optimization.cpp	/^void mincgsetpreclowrankfast(mincgstate* state,$/;"	f	namespace:alglib_impl
mincgsetprecscale	lib/alglib/optimization.cpp	/^void mincgsetprecscale(const mincgstate &state)$/;"	f	namespace:alglib
mincgsetprecscale	lib/alglib/optimization.cpp	/^void mincgsetprecscale(mincgstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
mincgsetprecvarpart	lib/alglib/optimization.cpp	/^void mincgsetprecvarpart(mincgstate* state,$/;"	f	namespace:alglib_impl
mincgsetscale	lib/alglib/optimization.cpp	/^void mincgsetscale(const mincgstate &state, const real_1d_array &s)$/;"	f	namespace:alglib
mincgsetscale	lib/alglib/optimization.cpp	/^void mincgsetscale(mincgstate* state,$/;"	f	namespace:alglib_impl
mincgsetstpmax	lib/alglib/optimization.cpp	/^void mincgsetstpmax(const mincgstate &state, const double stpmax)$/;"	f	namespace:alglib
mincgsetstpmax	lib/alglib/optimization.cpp	/^void mincgsetstpmax(mincgstate* state, double stpmax, ae_state *_state)$/;"	f	namespace:alglib_impl
mincgsetxrep	lib/alglib/optimization.cpp	/^void mincgsetxrep(const mincgstate &state, const bool needxrep)$/;"	f	namespace:alglib
mincgsetxrep	lib/alglib/optimization.cpp	/^void mincgsetxrep(mincgstate* state, ae_bool needxrep, ae_state *_state)$/;"	f	namespace:alglib_impl
mincgstate	lib/alglib/optimization.cpp	/^mincgstate::mincgstate() : _mincgstate_owner() ,needfg(p_struct->needfg),xupdated(p_struct->xupdated),f(p_struct->f),g(&p_struct->g),x(&p_struct->x)$/;"	f	class:alglib::mincgstate
mincgstate	lib/alglib/optimization.cpp	/^mincgstate::mincgstate(const mincgstate &rhs):_mincgstate_owner(rhs) ,needfg(p_struct->needfg),xupdated(p_struct->xupdated),f(p_struct->f),g(&p_struct->g),x(&p_struct->x)$/;"	f	class:alglib::mincgstate
mincgstate	lib/alglib/optimization.h	/^class mincgstate : public _mincgstate_owner$/;"	c	namespace:alglib
mincgstate	lib/alglib/optimization.h	/^} mincgstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon77
mincgsuggeststep	lib/alglib/optimization.cpp	/^void mincgsuggeststep(const mincgstate &state, const double stp)$/;"	f	namespace:alglib
mincgsuggeststep	lib/alglib/optimization.cpp	/^void mincgsuggeststep(mincgstate* state, double stp, ae_state *_state)$/;"	f	namespace:alglib_impl
minint	lib/alglib/ap.cpp	/^int alglib::minint(int m1, int m2)$/;"	f	class:alglib
minlbfgs_clearrequestfields	lib/alglib/optimization.cpp	/^static void minlbfgs_clearrequestfields(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgscreate	lib/alglib/optimization.cpp	/^void minlbfgscreate(ae_int_t n,$/;"	f	namespace:alglib_impl
minlbfgscreate	lib/alglib/optimization.cpp	/^void minlbfgscreate(const ae_int_t m, const real_1d_array &x, minlbfgsstate &state)$/;"	f	namespace:alglib
minlbfgscreate	lib/alglib/optimization.cpp	/^void minlbfgscreate(const ae_int_t n, const ae_int_t m, const real_1d_array &x, minlbfgsstate &state)$/;"	f	namespace:alglib
minlbfgscreatex	lib/alglib/optimization.cpp	/^void minlbfgscreatex(ae_int_t n,$/;"	f	namespace:alglib_impl
minlbfgsiteration	lib/alglib/optimization.cpp	/^ae_bool minlbfgsiteration(minlbfgsstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minlbfgsiteration	lib/alglib/optimization.cpp	/^bool minlbfgsiteration(const minlbfgsstate &state)$/;"	f	namespace:alglib
minlbfgsoptimize	lib/alglib/optimization.cpp	/^void minlbfgsoptimize(minlbfgsstate &state,$/;"	f	namespace:alglib
minlbfgsreport	lib/alglib/optimization.cpp	/^minlbfgsreport::minlbfgsreport() : _minlbfgsreport_owner() ,iterationscount(p_struct->iterationscount),nfev(p_struct->nfev),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::minlbfgsreport
minlbfgsreport	lib/alglib/optimization.cpp	/^minlbfgsreport::minlbfgsreport(const minlbfgsreport &rhs):_minlbfgsreport_owner(rhs) ,iterationscount(p_struct->iterationscount),nfev(p_struct->nfev),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::minlbfgsreport
minlbfgsreport	lib/alglib/optimization.h	/^class minlbfgsreport : public _minlbfgsreport_owner$/;"	c	namespace:alglib
minlbfgsreport	lib/alglib/optimization.h	/^} minlbfgsreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon70
minlbfgsrestartfrom	lib/alglib/optimization.cpp	/^void minlbfgsrestartfrom(const minlbfgsstate &state, const real_1d_array &x)$/;"	f	namespace:alglib
minlbfgsrestartfrom	lib/alglib/optimization.cpp	/^void minlbfgsrestartfrom(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgsresults	lib/alglib/optimization.cpp	/^void minlbfgsresults(const minlbfgsstate &state, real_1d_array &x, minlbfgsreport &rep)$/;"	f	namespace:alglib
minlbfgsresults	lib/alglib/optimization.cpp	/^void minlbfgsresults(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgsresultsbuf	lib/alglib/optimization.cpp	/^void minlbfgsresultsbuf(const minlbfgsstate &state, real_1d_array &x, minlbfgsreport &rep)$/;"	f	namespace:alglib
minlbfgsresultsbuf	lib/alglib/optimization.cpp	/^void minlbfgsresultsbuf(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgssetcholeskypreconditioner	lib/alglib/optimization.cpp	/^void minlbfgssetcholeskypreconditioner(const minlbfgsstate &state, const real_2d_array &p, const bool isupper)$/;"	f	namespace:alglib
minlbfgssetcholeskypreconditioner	lib/alglib/optimization.cpp	/^void minlbfgssetcholeskypreconditioner(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgssetcond	lib/alglib/optimization.cpp	/^void minlbfgssetcond(const minlbfgsstate &state, const double epsg, const double epsf, const double epsx, const ae_int_t maxits)$/;"	f	namespace:alglib
minlbfgssetcond	lib/alglib/optimization.cpp	/^void minlbfgssetcond(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgssetdefaultpreconditioner	lib/alglib/optimization.cpp	/^void minlbfgssetdefaultpreconditioner(const minlbfgsstate &state)$/;"	f	namespace:alglib
minlbfgssetdefaultpreconditioner	lib/alglib/optimization.cpp	/^void minlbfgssetdefaultpreconditioner(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgssetpreccholesky	lib/alglib/optimization.cpp	/^void minlbfgssetpreccholesky(const minlbfgsstate &state, const real_2d_array &p, const bool isupper)$/;"	f	namespace:alglib
minlbfgssetpreccholesky	lib/alglib/optimization.cpp	/^void minlbfgssetpreccholesky(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgssetprecdefault	lib/alglib/optimization.cpp	/^void minlbfgssetprecdefault(const minlbfgsstate &state)$/;"	f	namespace:alglib
minlbfgssetprecdefault	lib/alglib/optimization.cpp	/^void minlbfgssetprecdefault(minlbfgsstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minlbfgssetprecdiag	lib/alglib/optimization.cpp	/^void minlbfgssetprecdiag(const minlbfgsstate &state, const real_1d_array &d)$/;"	f	namespace:alglib
minlbfgssetprecdiag	lib/alglib/optimization.cpp	/^void minlbfgssetprecdiag(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgssetprecscale	lib/alglib/optimization.cpp	/^void minlbfgssetprecscale(const minlbfgsstate &state)$/;"	f	namespace:alglib
minlbfgssetprecscale	lib/alglib/optimization.cpp	/^void minlbfgssetprecscale(minlbfgsstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minlbfgssetscale	lib/alglib/optimization.cpp	/^void minlbfgssetscale(const minlbfgsstate &state, const real_1d_array &s)$/;"	f	namespace:alglib
minlbfgssetscale	lib/alglib/optimization.cpp	/^void minlbfgssetscale(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgssetstpmax	lib/alglib/optimization.cpp	/^void minlbfgssetstpmax(const minlbfgsstate &state, const double stpmax)$/;"	f	namespace:alglib
minlbfgssetstpmax	lib/alglib/optimization.cpp	/^void minlbfgssetstpmax(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgssetxrep	lib/alglib/optimization.cpp	/^void minlbfgssetxrep(const minlbfgsstate &state, const bool needxrep)$/;"	f	namespace:alglib
minlbfgssetxrep	lib/alglib/optimization.cpp	/^void minlbfgssetxrep(minlbfgsstate* state,$/;"	f	namespace:alglib_impl
minlbfgsstate	lib/alglib/optimization.cpp	/^minlbfgsstate::minlbfgsstate() : _minlbfgsstate_owner() ,needfg(p_struct->needfg),xupdated(p_struct->xupdated),f(p_struct->f),g(&p_struct->g),x(&p_struct->x)$/;"	f	class:alglib::minlbfgsstate
minlbfgsstate	lib/alglib/optimization.cpp	/^minlbfgsstate::minlbfgsstate(const minlbfgsstate &rhs):_minlbfgsstate_owner(rhs) ,needfg(p_struct->needfg),xupdated(p_struct->xupdated),f(p_struct->f),g(&p_struct->g),x(&p_struct->x)$/;"	f	class:alglib::minlbfgsstate
minlbfgsstate	lib/alglib/optimization.h	/^class minlbfgsstate : public _minlbfgsstate_owner$/;"	c	namespace:alglib
minlbfgsstate	lib/alglib/optimization.h	/^} minlbfgsstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon69
minlm_additers	lib/alglib/optimization.cpp	/^static ae_int_t minlm_additers = 5;$/;"	m	namespace:alglib_impl	file:
minlm_boundedscaledantigradnorm	lib/alglib/optimization.cpp	/^static double minlm_boundedscaledantigradnorm(minlmstate* state,$/;"	f	namespace:alglib_impl
minlm_clearrequestfields	lib/alglib/optimization.cpp	/^static void minlm_clearrequestfields(minlmstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minlm_decreaselambda	lib/alglib/optimization.cpp	/^static void minlm_decreaselambda(double* lambdav,$/;"	f	namespace:alglib_impl
minlm_increaselambda	lib/alglib/optimization.cpp	/^static ae_bool minlm_increaselambda(double* lambdav,$/;"	f	namespace:alglib_impl
minlm_lambdadown	lib/alglib/optimization.cpp	/^static double minlm_lambdadown = 0.33;$/;"	m	namespace:alglib_impl	file:
minlm_lambdaup	lib/alglib/optimization.cpp	/^static double minlm_lambdaup = 2.0;$/;"	m	namespace:alglib_impl	file:
minlm_lbfgsnorealloc	lib/alglib/optimization.cpp	/^static ae_int_t minlm_lbfgsnorealloc = 1;$/;"	m	namespace:alglib_impl	file:
minlm_lmflagnointlbfgs	lib/alglib/optimization.cpp	/^static ae_int_t minlm_lmflagnointlbfgs = 2;$/;"	m	namespace:alglib_impl	file:
minlm_lmflagnoprelbfgs	lib/alglib/optimization.cpp	/^static ae_int_t minlm_lmflagnoprelbfgs = 1;$/;"	m	namespace:alglib_impl	file:
minlm_lmintlbfgsits	lib/alglib/optimization.cpp	/^static ae_int_t minlm_lmintlbfgsits = 5;$/;"	m	namespace:alglib_impl	file:
minlm_lmmodefgh	lib/alglib/optimization.cpp	/^static ae_int_t minlm_lmmodefgh = 2;$/;"	m	namespace:alglib_impl	file:
minlm_lmmodefgj	lib/alglib/optimization.cpp	/^static ae_int_t minlm_lmmodefgj = 1;$/;"	m	namespace:alglib_impl	file:
minlm_lmmodefj	lib/alglib/optimization.cpp	/^static ae_int_t minlm_lmmodefj = 0;$/;"	m	namespace:alglib_impl	file:
minlm_lmprelbfgsm	lib/alglib/optimization.cpp	/^static ae_int_t minlm_lmprelbfgsm = 5;$/;"	m	namespace:alglib_impl	file:
minlm_lmprepare	lib/alglib/optimization.cpp	/^static void minlm_lmprepare(ae_int_t n,$/;"	f	namespace:alglib_impl
minlm_smallmodelage	lib/alglib/optimization.cpp	/^static ae_int_t minlm_smallmodelage = 3;$/;"	m	namespace:alglib_impl	file:
minlm_suspiciousnu	lib/alglib/optimization.cpp	/^static double minlm_suspiciousnu = 16;$/;"	m	namespace:alglib_impl	file:
minlmcreatefgh	lib/alglib/optimization.cpp	/^void minlmcreatefgh(ae_int_t n,$/;"	f	namespace:alglib_impl
minlmcreatefgh	lib/alglib/optimization.cpp	/^void minlmcreatefgh(const ae_int_t n, const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatefgh	lib/alglib/optimization.cpp	/^void minlmcreatefgh(const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatefgj	lib/alglib/optimization.cpp	/^void minlmcreatefgj(ae_int_t n,$/;"	f	namespace:alglib_impl
minlmcreatefgj	lib/alglib/optimization.cpp	/^void minlmcreatefgj(const ae_int_t m, const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatefgj	lib/alglib/optimization.cpp	/^void minlmcreatefgj(const ae_int_t n, const ae_int_t m, const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatefj	lib/alglib/optimization.cpp	/^void minlmcreatefj(ae_int_t n,$/;"	f	namespace:alglib_impl
minlmcreatefj	lib/alglib/optimization.cpp	/^void minlmcreatefj(const ae_int_t m, const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatefj	lib/alglib/optimization.cpp	/^void minlmcreatefj(const ae_int_t n, const ae_int_t m, const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatev	lib/alglib/optimization.cpp	/^void minlmcreatev(ae_int_t n,$/;"	f	namespace:alglib_impl
minlmcreatev	lib/alglib/optimization.cpp	/^void minlmcreatev(const ae_int_t m, const real_1d_array &x, const double diffstep, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatev	lib/alglib/optimization.cpp	/^void minlmcreatev(const ae_int_t n, const ae_int_t m, const real_1d_array &x, const double diffstep, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatevgj	lib/alglib/optimization.cpp	/^void minlmcreatevgj(ae_int_t n,$/;"	f	namespace:alglib_impl
minlmcreatevgj	lib/alglib/optimization.cpp	/^void minlmcreatevgj(const ae_int_t m, const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatevgj	lib/alglib/optimization.cpp	/^void minlmcreatevgj(const ae_int_t n, const ae_int_t m, const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatevj	lib/alglib/optimization.cpp	/^void minlmcreatevj(ae_int_t n,$/;"	f	namespace:alglib_impl
minlmcreatevj	lib/alglib/optimization.cpp	/^void minlmcreatevj(const ae_int_t m, const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmcreatevj	lib/alglib/optimization.cpp	/^void minlmcreatevj(const ae_int_t n, const ae_int_t m, const real_1d_array &x, minlmstate &state)$/;"	f	namespace:alglib
minlmiteration	lib/alglib/optimization.cpp	/^ae_bool minlmiteration(minlmstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minlmiteration	lib/alglib/optimization.cpp	/^bool minlmiteration(const minlmstate &state)$/;"	f	namespace:alglib
minlmoptimize	lib/alglib/optimization.cpp	/^void minlmoptimize(minlmstate &state,$/;"	f	namespace:alglib
minlmreport	lib/alglib/optimization.cpp	/^minlmreport::minlmreport() : _minlmreport_owner() ,iterationscount(p_struct->iterationscount),terminationtype(p_struct->terminationtype),nfunc(p_struct->nfunc),njac(p_struct->njac),ngrad(p_struct->ngrad),nhess(p_struct->nhess),ncholesky(p_struct->ncholesky)$/;"	f	class:alglib::minlmreport
minlmreport	lib/alglib/optimization.cpp	/^minlmreport::minlmreport(const minlmreport &rhs):_minlmreport_owner(rhs) ,iterationscount(p_struct->iterationscount),terminationtype(p_struct->terminationtype),nfunc(p_struct->nfunc),njac(p_struct->njac),ngrad(p_struct->ngrad),nhess(p_struct->nhess),ncholesky(p_struct->ncholesky)$/;"	f	class:alglib::minlmreport
minlmreport	lib/alglib/optimization.h	/^class minlmreport : public _minlmreport_owner$/;"	c	namespace:alglib
minlmreport	lib/alglib/optimization.h	/^} minlmreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon74
minlmrestartfrom	lib/alglib/optimization.cpp	/^void minlmrestartfrom(const minlmstate &state, const real_1d_array &x)$/;"	f	namespace:alglib
minlmrestartfrom	lib/alglib/optimization.cpp	/^void minlmrestartfrom(minlmstate* state,$/;"	f	namespace:alglib_impl
minlmresults	lib/alglib/optimization.cpp	/^void minlmresults(const minlmstate &state, real_1d_array &x, minlmreport &rep)$/;"	f	namespace:alglib
minlmresults	lib/alglib/optimization.cpp	/^void minlmresults(minlmstate* state,$/;"	f	namespace:alglib_impl
minlmresultsbuf	lib/alglib/optimization.cpp	/^void minlmresultsbuf(const minlmstate &state, real_1d_array &x, minlmreport &rep)$/;"	f	namespace:alglib
minlmresultsbuf	lib/alglib/optimization.cpp	/^void minlmresultsbuf(minlmstate* state,$/;"	f	namespace:alglib_impl
minlmsetacctype	lib/alglib/optimization.cpp	/^void minlmsetacctype(const minlmstate &state, const ae_int_t acctype)$/;"	f	namespace:alglib
minlmsetacctype	lib/alglib/optimization.cpp	/^void minlmsetacctype(minlmstate* state,$/;"	f	namespace:alglib_impl
minlmsetbc	lib/alglib/optimization.cpp	/^void minlmsetbc(const minlmstate &state, const real_1d_array &bndl, const real_1d_array &bndu)$/;"	f	namespace:alglib
minlmsetbc	lib/alglib/optimization.cpp	/^void minlmsetbc(minlmstate* state,$/;"	f	namespace:alglib_impl
minlmsetcond	lib/alglib/optimization.cpp	/^void minlmsetcond(const minlmstate &state, const double epsg, const double epsf, const double epsx, const ae_int_t maxits)$/;"	f	namespace:alglib
minlmsetcond	lib/alglib/optimization.cpp	/^void minlmsetcond(minlmstate* state,$/;"	f	namespace:alglib_impl
minlmsetscale	lib/alglib/optimization.cpp	/^void minlmsetscale(const minlmstate &state, const real_1d_array &s)$/;"	f	namespace:alglib
minlmsetscale	lib/alglib/optimization.cpp	/^void minlmsetscale(minlmstate* state,$/;"	f	namespace:alglib_impl
minlmsetstpmax	lib/alglib/optimization.cpp	/^void minlmsetstpmax(const minlmstate &state, const double stpmax)$/;"	f	namespace:alglib
minlmsetstpmax	lib/alglib/optimization.cpp	/^void minlmsetstpmax(minlmstate* state, double stpmax, ae_state *_state)$/;"	f	namespace:alglib_impl
minlmsetxrep	lib/alglib/optimization.cpp	/^void minlmsetxrep(const minlmstate &state, const bool needxrep)$/;"	f	namespace:alglib
minlmsetxrep	lib/alglib/optimization.cpp	/^void minlmsetxrep(minlmstate* state, ae_bool needxrep, ae_state *_state)$/;"	f	namespace:alglib_impl
minlmstate	lib/alglib/optimization.cpp	/^minlmstate::minlmstate() : _minlmstate_owner() ,needf(p_struct->needf),needfg(p_struct->needfg),needfgh(p_struct->needfgh),needfi(p_struct->needfi),needfij(p_struct->needfij),xupdated(p_struct->xupdated),f(p_struct->f),fi(&p_struct->fi),g(&p_struct->g),h(&p_struct->h),j(&p_struct->j),x(&p_struct->x)$/;"	f	class:alglib::minlmstate
minlmstate	lib/alglib/optimization.cpp	/^minlmstate::minlmstate(const minlmstate &rhs):_minlmstate_owner(rhs) ,needf(p_struct->needf),needfg(p_struct->needfg),needfgh(p_struct->needfgh),needfi(p_struct->needfi),needfij(p_struct->needfij),xupdated(p_struct->xupdated),f(p_struct->f),fi(&p_struct->fi),g(&p_struct->g),h(&p_struct->h),j(&p_struct->j),x(&p_struct->x)$/;"	f	class:alglib::minlmstate
minlmstate	lib/alglib/optimization.h	/^class minlmstate : public _minlmstate_owner$/;"	c	namespace:alglib
minlmstate	lib/alglib/optimization.h	/^} minlmstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon73
minmax	core/math/Geometry.cpp	/^Point2D minmax( Point2D minP, Point2D P, Point2D maxP ) {$/;"	f
minmax	core/math/Geometry.cpp	/^float minmax( float minx, float x, float maxx ) {$/;"	f
minor	lib/yaml-cpp/src/directives.h	/^		int major, minor;$/;"	m	struct:YAML::Version
minqp_minqpgrad	lib/alglib/optimization.cpp	/^static void minqp_minqpgrad(minqpstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minqp_minqpxtax	lib/alglib/optimization.cpp	/^static double minqp_minqpxtax(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpcreate	lib/alglib/optimization.cpp	/^void minqpcreate(ae_int_t n, minqpstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minqpcreate	lib/alglib/optimization.cpp	/^void minqpcreate(const ae_int_t n, minqpstate &state)$/;"	f	namespace:alglib
minqpoptimize	lib/alglib/optimization.cpp	/^void minqpoptimize(const minqpstate &state)$/;"	f	namespace:alglib
minqpoptimize	lib/alglib/optimization.cpp	/^void minqpoptimize(minqpstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minqpreport	lib/alglib/optimization.cpp	/^minqpreport::minqpreport() : _minqpreport_owner() ,inneriterationscount(p_struct->inneriterationscount),outeriterationscount(p_struct->outeriterationscount),nmv(p_struct->nmv),ncholesky(p_struct->ncholesky),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::minqpreport
minqpreport	lib/alglib/optimization.cpp	/^minqpreport::minqpreport(const minqpreport &rhs):_minqpreport_owner(rhs) ,inneriterationscount(p_struct->inneriterationscount),outeriterationscount(p_struct->outeriterationscount),nmv(p_struct->nmv),ncholesky(p_struct->ncholesky),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::minqpreport
minqpreport	lib/alglib/optimization.h	/^class minqpreport : public _minqpreport_owner$/;"	c	namespace:alglib
minqpreport	lib/alglib/optimization.h	/^} minqpreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon72
minqpresults	lib/alglib/optimization.cpp	/^void minqpresults(const minqpstate &state, real_1d_array &x, minqpreport &rep)$/;"	f	namespace:alglib
minqpresults	lib/alglib/optimization.cpp	/^void minqpresults(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpresultsbuf	lib/alglib/optimization.cpp	/^void minqpresultsbuf(const minqpstate &state, real_1d_array &x, minqpreport &rep)$/;"	f	namespace:alglib
minqpresultsbuf	lib/alglib/optimization.cpp	/^void minqpresultsbuf(minqpstate* state,$/;"	f	namespace:alglib_impl
minqprewritediagonal	lib/alglib/optimization.cpp	/^void minqprewritediagonal(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpsetalgocholesky	lib/alglib/optimization.cpp	/^void minqpsetalgocholesky(const minqpstate &state)$/;"	f	namespace:alglib
minqpsetalgocholesky	lib/alglib/optimization.cpp	/^void minqpsetalgocholesky(minqpstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
minqpsetbc	lib/alglib/optimization.cpp	/^void minqpsetbc(const minqpstate &state, const real_1d_array &bndl, const real_1d_array &bndu)$/;"	f	namespace:alglib
minqpsetbc	lib/alglib/optimization.cpp	/^void minqpsetbc(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpsetlinearterm	lib/alglib/optimization.cpp	/^void minqpsetlinearterm(const minqpstate &state, const real_1d_array &b)$/;"	f	namespace:alglib
minqpsetlinearterm	lib/alglib/optimization.cpp	/^void minqpsetlinearterm(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpsetlineartermfast	lib/alglib/optimization.cpp	/^void minqpsetlineartermfast(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpsetorigin	lib/alglib/optimization.cpp	/^void minqpsetorigin(const minqpstate &state, const real_1d_array &xorigin)$/;"	f	namespace:alglib
minqpsetorigin	lib/alglib/optimization.cpp	/^void minqpsetorigin(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpsetoriginfast	lib/alglib/optimization.cpp	/^void minqpsetoriginfast(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpsetquadraticterm	lib/alglib/optimization.cpp	/^void minqpsetquadraticterm(const minqpstate &state, const real_2d_array &a)$/;"	f	namespace:alglib
minqpsetquadraticterm	lib/alglib/optimization.cpp	/^void minqpsetquadraticterm(const minqpstate &state, const real_2d_array &a, const bool isupper)$/;"	f	namespace:alglib
minqpsetquadraticterm	lib/alglib/optimization.cpp	/^void minqpsetquadraticterm(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpsetquadratictermfast	lib/alglib/optimization.cpp	/^void minqpsetquadratictermfast(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpsetstartingpoint	lib/alglib/optimization.cpp	/^void minqpsetstartingpoint(const minqpstate &state, const real_1d_array &x)$/;"	f	namespace:alglib
minqpsetstartingpoint	lib/alglib/optimization.cpp	/^void minqpsetstartingpoint(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpsetstartingpointfast	lib/alglib/optimization.cpp	/^void minqpsetstartingpointfast(minqpstate* state,$/;"	f	namespace:alglib_impl
minqpstate	lib/alglib/optimization.cpp	/^minqpstate::minqpstate() : _minqpstate_owner() $/;"	f	class:alglib::minqpstate
minqpstate	lib/alglib/optimization.cpp	/^minqpstate::minqpstate(const minqpstate &rhs):_minqpstate_owner(rhs) $/;"	f	class:alglib::minqpstate
minqpstate	lib/alglib/optimization.h	/^class minqpstate : public _minqpstate_owner$/;"	c	namespace:alglib
minqpstate	lib/alglib/optimization.h	/^} minqpstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon71
minreal	lib/alglib/ap.cpp	/^double alglib::minreal(double m1, double m2)$/;"	f	class:alglib
minrealnumber	lib/alglib/ap.cpp	/^const double alglib::minrealnumber  = 1E-300;$/;"	m	class:alglib	file:
minusDiff	core/math/Pose2D.h	/^  Pose2D minusDiff(const Pose2D& diff) const$/;"	f	class:Pose2D
mirror_idx_cov	tools/behaviorSim/cma.py	/^    def mirror_idx_cov(self, f_values, idx1):  # will most likely be removed$/;"	m	class:CMAEvolutionStrategy
mirror_penalized	tools/behaviorSim/cma.py	/^    def mirror_penalized(self, f_values, idx):$/;"	m	class:CMAEvolutionStrategy
misalignedKick	core/motion/rswalk2014/types/ActionCommand.hpp	/^      bool misalignedKick; $/;"	m	struct:ActionCommand::Body
missedObsFactor	build/include/tool/simulation/SimulatedPlayer.h	/^  float missedObsFactor;\/\/0.0;$/;"	m	class:SimulatedPlayer
missedObsFactor	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float missedObsFactor;\/\/0.0;$/;"	m	class:SimulatedPlayer
missingBalls	build/include/tool/AnalysisWidget.h	/^    int falseBalls, falseCandidates, missingBalls, missingCandidates;$/;"	m	struct:ballstats
missingBalls	tools/UTNaoTool/AnalysisWidget.h	/^    int falseBalls, falseCandidates, missingBalls, missingCandidates;$/;"	m	struct:ballstats
missingCandidates	build/include/tool/AnalysisWidget.h	/^    int falseBalls, falseCandidates, missingBalls, missingCandidates;$/;"	m	struct:ballstats
missingCandidates	tools/UTNaoTool/AnalysisWidget.h	/^    int falseBalls, falseCandidates, missingBalls, missingCandidates;$/;"	m	struct:ballstats
missingPosts	build/include/tool/AnalysisWidget.h	/^  int falsePosts, truePosts, missingPosts;$/;"	m	struct:goalstats
missingPosts	tools/UTNaoTool/AnalysisWidget.h	/^  int falsePosts, truePosts, missingPosts;$/;"	m	struct:goalstats
mkdir_recursive	core/memory/Logger.cpp	/^void Logger::mkdir_recursive(const char *dir) {$/;"	f	class:Logger
mkfuncname	lib/lua/src/loadlib.c	/^static const char *mkfuncname (lua_State *L, const char *modname) {$/;"	f	file:
mlpavgce	lib/alglib/dataanalysis.cpp	/^double mlpavgce(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlpavgce	lib/alglib/dataanalysis.cpp	/^double mlpavgce(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpavgerror	lib/alglib/dataanalysis.cpp	/^double mlpavgerror(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlpavgerror	lib/alglib/dataanalysis.cpp	/^double mlpavgerror(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpavgrelerror	lib/alglib/dataanalysis.cpp	/^double mlpavgrelerror(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlpavgrelerror	lib/alglib/dataanalysis.cpp	/^double mlpavgrelerror(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpbase_addactivationlayer	lib/alglib/dataanalysis.cpp	/^static void mlpbase_addactivationlayer(ae_int_t functype,$/;"	f	namespace:alglib_impl
mlpbase_addbiasedsummatorlayer	lib/alglib/dataanalysis.cpp	/^static void mlpbase_addbiasedsummatorlayer(ae_int_t ncount,$/;"	f	namespace:alglib_impl
mlpbase_addinputlayer	lib/alglib/dataanalysis.cpp	/^static void mlpbase_addinputlayer(ae_int_t ncount,$/;"	f	namespace:alglib_impl
mlpbase_addzerolayer	lib/alglib/dataanalysis.cpp	/^static void mlpbase_addzerolayer(\/* Integer *\/ ae_vector* lsizes,$/;"	f	namespace:alglib_impl
mlpbase_chunksize	lib/alglib/dataanalysis.cpp	/^static ae_int_t mlpbase_chunksize = 32;$/;"	m	namespace:alglib_impl	file:
mlpbase_mlpactivationfunction	lib/alglib/dataanalysis.cpp	/^static void mlpbase_mlpactivationfunction(double net,$/;"	f	namespace:alglib_impl
mlpbase_mlpchunkedgradient	lib/alglib/dataanalysis.cpp	/^static void mlpbase_mlpchunkedgradient(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpbase_mlpcreate	lib/alglib/dataanalysis.cpp	/^static void mlpbase_mlpcreate(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpbase_mlphessianbatchinternal	lib/alglib/dataanalysis.cpp	/^static void mlpbase_mlphessianbatchinternal(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpbase_mlpinternalcalculategradient	lib/alglib/dataanalysis.cpp	/^static void mlpbase_mlpinternalcalculategradient(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpbase_mlpvnum	lib/alglib/dataanalysis.cpp	/^static ae_int_t mlpbase_mlpvnum = 7;$/;"	m	namespace:alglib_impl	file:
mlpbase_nfieldwidth	lib/alglib/dataanalysis.cpp	/^static ae_int_t mlpbase_nfieldwidth = 4;$/;"	m	namespace:alglib_impl	file:
mlpbase_safecrossentropy	lib/alglib/dataanalysis.cpp	/^static double mlpbase_safecrossentropy(double t,$/;"	f	namespace:alglib_impl
mlpclserror	lib/alglib/dataanalysis.cpp	/^ae_int_t mlpclserror(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t ssize)$/;"	f	namespace:alglib
mlpclserror	lib/alglib/dataanalysis.cpp	/^ae_int_t mlpclserror(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpcopy	lib/alglib/dataanalysis.cpp	/^void mlpcopy(multilayerperceptron* network1,$/;"	f	namespace:alglib_impl
mlpcreate0	lib/alglib/dataanalysis.cpp	/^void mlpcreate0(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreate0	lib/alglib/dataanalysis.cpp	/^void mlpcreate0(const ae_int_t nin, const ae_int_t nout, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreate1	lib/alglib/dataanalysis.cpp	/^void mlpcreate1(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreate1	lib/alglib/dataanalysis.cpp	/^void mlpcreate1(const ae_int_t nin, const ae_int_t nhid, const ae_int_t nout, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreate2	lib/alglib/dataanalysis.cpp	/^void mlpcreate2(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreate2	lib/alglib/dataanalysis.cpp	/^void mlpcreate2(const ae_int_t nin, const ae_int_t nhid1, const ae_int_t nhid2, const ae_int_t nout, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreateb0	lib/alglib/dataanalysis.cpp	/^void mlpcreateb0(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreateb0	lib/alglib/dataanalysis.cpp	/^void mlpcreateb0(const ae_int_t nin, const ae_int_t nout, const double b, const double d, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreateb1	lib/alglib/dataanalysis.cpp	/^void mlpcreateb1(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreateb1	lib/alglib/dataanalysis.cpp	/^void mlpcreateb1(const ae_int_t nin, const ae_int_t nhid, const ae_int_t nout, const double b, const double d, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreateb2	lib/alglib/dataanalysis.cpp	/^void mlpcreateb2(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreateb2	lib/alglib/dataanalysis.cpp	/^void mlpcreateb2(const ae_int_t nin, const ae_int_t nhid1, const ae_int_t nhid2, const ae_int_t nout, const double b, const double d, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreatec0	lib/alglib/dataanalysis.cpp	/^void mlpcreatec0(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreatec0	lib/alglib/dataanalysis.cpp	/^void mlpcreatec0(const ae_int_t nin, const ae_int_t nout, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreatec1	lib/alglib/dataanalysis.cpp	/^void mlpcreatec1(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreatec1	lib/alglib/dataanalysis.cpp	/^void mlpcreatec1(const ae_int_t nin, const ae_int_t nhid, const ae_int_t nout, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreatec2	lib/alglib/dataanalysis.cpp	/^void mlpcreatec2(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreatec2	lib/alglib/dataanalysis.cpp	/^void mlpcreatec2(const ae_int_t nin, const ae_int_t nhid1, const ae_int_t nhid2, const ae_int_t nout, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreater0	lib/alglib/dataanalysis.cpp	/^void mlpcreater0(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreater0	lib/alglib/dataanalysis.cpp	/^void mlpcreater0(const ae_int_t nin, const ae_int_t nout, const double a, const double b, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreater1	lib/alglib/dataanalysis.cpp	/^void mlpcreater1(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreater1	lib/alglib/dataanalysis.cpp	/^void mlpcreater1(const ae_int_t nin, const ae_int_t nhid, const ae_int_t nout, const double a, const double b, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcreater2	lib/alglib/dataanalysis.cpp	/^void mlpcreater2(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpcreater2	lib/alglib/dataanalysis.cpp	/^void mlpcreater2(const ae_int_t nin, const ae_int_t nhid1, const ae_int_t nhid2, const ae_int_t nout, const double a, const double b, multilayerperceptron &network)$/;"	f	namespace:alglib
mlpcvreport	lib/alglib/dataanalysis.cpp	/^mlpcvreport::mlpcvreport() : _mlpcvreport_owner() ,relclserror(p_struct->relclserror),avgce(p_struct->avgce),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror)$/;"	f	class:alglib::mlpcvreport
mlpcvreport	lib/alglib/dataanalysis.cpp	/^mlpcvreport::mlpcvreport(const mlpcvreport &rhs):_mlpcvreport_owner(rhs) ,relclserror(p_struct->relclserror),avgce(p_struct->avgce),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror)$/;"	f	class:alglib::mlpcvreport
mlpcvreport	lib/alglib/dataanalysis.h	/^class mlpcvreport : public _mlpcvreport_owner$/;"	c	namespace:alglib
mlpcvreport	lib/alglib/dataanalysis.h	/^} mlpcvreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon49
mlpe_mlpeallerrors	lib/alglib/dataanalysis.cpp	/^static void mlpe_mlpeallerrors(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpe_mlpebagginginternal	lib/alglib/dataanalysis.cpp	/^static void mlpe_mlpebagginginternal(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpe_mlpevnum	lib/alglib/dataanalysis.cpp	/^static ae_int_t mlpe_mlpevnum = 9;$/;"	m	namespace:alglib_impl	file:
mlpe_mlpntotaloffset	lib/alglib/dataanalysis.cpp	/^static ae_int_t mlpe_mlpntotaloffset = 3;$/;"	m	namespace:alglib_impl	file:
mlpeavgce	lib/alglib/dataanalysis.cpp	/^double mlpeavgce(const mlpensemble &ensemble, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlpeavgce	lib/alglib/dataanalysis.cpp	/^double mlpeavgce(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpeavgerror	lib/alglib/dataanalysis.cpp	/^double mlpeavgerror(const mlpensemble &ensemble, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlpeavgerror	lib/alglib/dataanalysis.cpp	/^double mlpeavgerror(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpeavgrelerror	lib/alglib/dataanalysis.cpp	/^double mlpeavgrelerror(const mlpensemble &ensemble, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlpeavgrelerror	lib/alglib/dataanalysis.cpp	/^double mlpeavgrelerror(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpebagginglbfgs	lib/alglib/dataanalysis.cpp	/^void mlpebagginglbfgs(const mlpensemble &ensemble, const real_2d_array &xy, const ae_int_t npoints, const double decay, const ae_int_t restarts, const double wstep, const ae_int_t maxits, ae_int_t &info, mlpreport &rep, mlpcvreport &ooberrors)$/;"	f	namespace:alglib
mlpebagginglbfgs	lib/alglib/dataanalysis.cpp	/^void mlpebagginglbfgs(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpebagginglm	lib/alglib/dataanalysis.cpp	/^void mlpebagginglm(const mlpensemble &ensemble, const real_2d_array &xy, const ae_int_t npoints, const double decay, const ae_int_t restarts, ae_int_t &info, mlpreport &rep, mlpcvreport &ooberrors)$/;"	f	namespace:alglib
mlpebagginglm	lib/alglib/dataanalysis.cpp	/^void mlpebagginglm(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpecopy	lib/alglib/dataanalysis.cpp	/^void mlpecopy(mlpensemble* ensemble1,$/;"	f	namespace:alglib_impl
mlpecreate0	lib/alglib/dataanalysis.cpp	/^void mlpecreate0(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreate0	lib/alglib/dataanalysis.cpp	/^void mlpecreate0(const ae_int_t nin, const ae_int_t nout, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreate1	lib/alglib/dataanalysis.cpp	/^void mlpecreate1(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreate1	lib/alglib/dataanalysis.cpp	/^void mlpecreate1(const ae_int_t nin, const ae_int_t nhid, const ae_int_t nout, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreate2	lib/alglib/dataanalysis.cpp	/^void mlpecreate2(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreate2	lib/alglib/dataanalysis.cpp	/^void mlpecreate2(const ae_int_t nin, const ae_int_t nhid1, const ae_int_t nhid2, const ae_int_t nout, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreateb0	lib/alglib/dataanalysis.cpp	/^void mlpecreateb0(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreateb0	lib/alglib/dataanalysis.cpp	/^void mlpecreateb0(const ae_int_t nin, const ae_int_t nout, const double b, const double d, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreateb1	lib/alglib/dataanalysis.cpp	/^void mlpecreateb1(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreateb1	lib/alglib/dataanalysis.cpp	/^void mlpecreateb1(const ae_int_t nin, const ae_int_t nhid, const ae_int_t nout, const double b, const double d, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreateb2	lib/alglib/dataanalysis.cpp	/^void mlpecreateb2(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreateb2	lib/alglib/dataanalysis.cpp	/^void mlpecreateb2(const ae_int_t nin, const ae_int_t nhid1, const ae_int_t nhid2, const ae_int_t nout, const double b, const double d, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreatec0	lib/alglib/dataanalysis.cpp	/^void mlpecreatec0(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreatec0	lib/alglib/dataanalysis.cpp	/^void mlpecreatec0(const ae_int_t nin, const ae_int_t nout, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreatec1	lib/alglib/dataanalysis.cpp	/^void mlpecreatec1(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreatec1	lib/alglib/dataanalysis.cpp	/^void mlpecreatec1(const ae_int_t nin, const ae_int_t nhid, const ae_int_t nout, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreatec2	lib/alglib/dataanalysis.cpp	/^void mlpecreatec2(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreatec2	lib/alglib/dataanalysis.cpp	/^void mlpecreatec2(const ae_int_t nin, const ae_int_t nhid1, const ae_int_t nhid2, const ae_int_t nout, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreatefromnetwork	lib/alglib/dataanalysis.cpp	/^void mlpecreatefromnetwork(const multilayerperceptron &network, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreatefromnetwork	lib/alglib/dataanalysis.cpp	/^void mlpecreatefromnetwork(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpecreater0	lib/alglib/dataanalysis.cpp	/^void mlpecreater0(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreater0	lib/alglib/dataanalysis.cpp	/^void mlpecreater0(const ae_int_t nin, const ae_int_t nout, const double a, const double b, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreater1	lib/alglib/dataanalysis.cpp	/^void mlpecreater1(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreater1	lib/alglib/dataanalysis.cpp	/^void mlpecreater1(const ae_int_t nin, const ae_int_t nhid, const ae_int_t nout, const double a, const double b, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpecreater2	lib/alglib/dataanalysis.cpp	/^void mlpecreater2(ae_int_t nin,$/;"	f	namespace:alglib_impl
mlpecreater2	lib/alglib/dataanalysis.cpp	/^void mlpecreater2(const ae_int_t nin, const ae_int_t nhid1, const ae_int_t nhid2, const ae_int_t nout, const double a, const double b, const ae_int_t ensemblesize, mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpeissoftmax	lib/alglib/dataanalysis.cpp	/^ae_bool mlpeissoftmax(mlpensemble* ensemble, ae_state *_state)$/;"	f	namespace:alglib_impl
mlpeissoftmax	lib/alglib/dataanalysis.cpp	/^bool mlpeissoftmax(const mlpensemble &ensemble)$/;"	f	namespace:alglib
mlpensemble	lib/alglib/dataanalysis.cpp	/^mlpensemble::mlpensemble() : _mlpensemble_owner() $/;"	f	class:alglib::mlpensemble
mlpensemble	lib/alglib/dataanalysis.cpp	/^mlpensemble::mlpensemble(const mlpensemble &rhs):_mlpensemble_owner(rhs) $/;"	f	class:alglib::mlpensemble
mlpensemble	lib/alglib/dataanalysis.h	/^class mlpensemble : public _mlpensemble_owner$/;"	c	namespace:alglib
mlpensemble	lib/alglib/dataanalysis.h	/^} mlpensemble;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon50
mlpeprocess	lib/alglib/dataanalysis.cpp	/^void mlpeprocess(const mlpensemble &ensemble, const real_1d_array &x, real_1d_array &y)$/;"	f	namespace:alglib
mlpeprocess	lib/alglib/dataanalysis.cpp	/^void mlpeprocess(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpeprocessi	lib/alglib/dataanalysis.cpp	/^void mlpeprocessi(const mlpensemble &ensemble, const real_1d_array &x, real_1d_array &y)$/;"	f	namespace:alglib
mlpeprocessi	lib/alglib/dataanalysis.cpp	/^void mlpeprocessi(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpeproperties	lib/alglib/dataanalysis.cpp	/^void mlpeproperties(const mlpensemble &ensemble, ae_int_t &nin, ae_int_t &nout)$/;"	f	namespace:alglib
mlpeproperties	lib/alglib/dataanalysis.cpp	/^void mlpeproperties(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlperandomize	lib/alglib/dataanalysis.cpp	/^void mlperandomize(const mlpensemble &ensemble)$/;"	f	namespace:alglib
mlperandomize	lib/alglib/dataanalysis.cpp	/^void mlperandomize(mlpensemble* ensemble, ae_state *_state)$/;"	f	namespace:alglib_impl
mlperelclserror	lib/alglib/dataanalysis.cpp	/^double mlperelclserror(const mlpensemble &ensemble, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlperelclserror	lib/alglib/dataanalysis.cpp	/^double mlperelclserror(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpermserror	lib/alglib/dataanalysis.cpp	/^double mlpermserror(const mlpensemble &ensemble, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlpermserror	lib/alglib/dataanalysis.cpp	/^double mlpermserror(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlperror	lib/alglib/dataanalysis.cpp	/^double mlperror(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t ssize)$/;"	f	namespace:alglib
mlperror	lib/alglib/dataanalysis.cpp	/^double mlperror(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlperrorn	lib/alglib/dataanalysis.cpp	/^double mlperrorn(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t ssize)$/;"	f	namespace:alglib
mlperrorn	lib/alglib/dataanalysis.cpp	/^double mlperrorn(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpeserialize	lib/alglib/dataanalysis.cpp	/^void mlpeserialize(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpetraines	lib/alglib/dataanalysis.cpp	/^void mlpetraines(const mlpensemble &ensemble, const real_2d_array &xy, const ae_int_t npoints, const double decay, const ae_int_t restarts, ae_int_t &info, mlpreport &rep)$/;"	f	namespace:alglib
mlpetraines	lib/alglib/dataanalysis.cpp	/^void mlpetraines(mlpensemble* ensemble,$/;"	f	namespace:alglib_impl
mlpeunserialize	lib/alglib/dataanalysis.cpp	/^void mlpeunserialize(\/* Real    *\/ ae_vector* ra,$/;"	f	namespace:alglib_impl
mlpgrad	lib/alglib/dataanalysis.cpp	/^void mlpgrad(const multilayerperceptron &network, const real_1d_array &x, const real_1d_array &desiredy, double &e, real_1d_array &grad)$/;"	f	namespace:alglib
mlpgrad	lib/alglib/dataanalysis.cpp	/^void mlpgrad(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpgradbatch	lib/alglib/dataanalysis.cpp	/^void mlpgradbatch(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t ssize, double &e, real_1d_array &grad)$/;"	f	namespace:alglib
mlpgradbatch	lib/alglib/dataanalysis.cpp	/^void mlpgradbatch(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpgradn	lib/alglib/dataanalysis.cpp	/^void mlpgradn(const multilayerperceptron &network, const real_1d_array &x, const real_1d_array &desiredy, double &e, real_1d_array &grad)$/;"	f	namespace:alglib
mlpgradn	lib/alglib/dataanalysis.cpp	/^void mlpgradn(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpgradnbatch	lib/alglib/dataanalysis.cpp	/^void mlpgradnbatch(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t ssize, double &e, real_1d_array &grad)$/;"	f	namespace:alglib
mlpgradnbatch	lib/alglib/dataanalysis.cpp	/^void mlpgradnbatch(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlphessianbatch	lib/alglib/dataanalysis.cpp	/^void mlphessianbatch(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t ssize, double &e, real_1d_array &grad, real_2d_array &h)$/;"	f	namespace:alglib
mlphessianbatch	lib/alglib/dataanalysis.cpp	/^void mlphessianbatch(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlphessiannbatch	lib/alglib/dataanalysis.cpp	/^void mlphessiannbatch(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t ssize, double &e, real_1d_array &grad, real_2d_array &h)$/;"	f	namespace:alglib
mlphessiannbatch	lib/alglib/dataanalysis.cpp	/^void mlphessiannbatch(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpinitpreprocessor	lib/alglib/dataanalysis.cpp	/^void mlpinitpreprocessor(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpinternalprocessvector	lib/alglib/dataanalysis.cpp	/^void mlpinternalprocessvector(\/* Integer *\/ ae_vector* structinfo,$/;"	f	namespace:alglib_impl
mlpissoftmax	lib/alglib/dataanalysis.cpp	/^ae_bool mlpissoftmax(multilayerperceptron* network, ae_state *_state)$/;"	f	namespace:alglib_impl
mlpissoftmax	lib/alglib/dataanalysis.cpp	/^bool mlpissoftmax(const multilayerperceptron &network)$/;"	f	namespace:alglib
mlpkfoldcvlbfgs	lib/alglib/dataanalysis.cpp	/^void mlpkfoldcvlbfgs(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t npoints, const double decay, const ae_int_t restarts, const double wstep, const ae_int_t maxits, const ae_int_t foldscount, ae_int_t &info, mlpreport &rep, mlpcvreport &cvrep)$/;"	f	namespace:alglib
mlpkfoldcvlbfgs	lib/alglib/dataanalysis.cpp	/^void mlpkfoldcvlbfgs(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpkfoldcvlm	lib/alglib/dataanalysis.cpp	/^void mlpkfoldcvlm(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t npoints, const double decay, const ae_int_t restarts, const ae_int_t foldscount, ae_int_t &info, mlpreport &rep, mlpcvreport &cvrep)$/;"	f	namespace:alglib
mlpkfoldcvlm	lib/alglib/dataanalysis.cpp	/^void mlpkfoldcvlm(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpprocess	lib/alglib/dataanalysis.cpp	/^void mlpprocess(const multilayerperceptron &network, const real_1d_array &x, real_1d_array &y)$/;"	f	namespace:alglib
mlpprocess	lib/alglib/dataanalysis.cpp	/^void mlpprocess(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpprocessi	lib/alglib/dataanalysis.cpp	/^void mlpprocessi(const multilayerperceptron &network, const real_1d_array &x, real_1d_array &y)$/;"	f	namespace:alglib
mlpprocessi	lib/alglib/dataanalysis.cpp	/^void mlpprocessi(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpproperties	lib/alglib/dataanalysis.cpp	/^void mlpproperties(const multilayerperceptron &network, ae_int_t &nin, ae_int_t &nout, ae_int_t &wcount)$/;"	f	namespace:alglib
mlpproperties	lib/alglib/dataanalysis.cpp	/^void mlpproperties(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlprandomize	lib/alglib/dataanalysis.cpp	/^void mlprandomize(const multilayerperceptron &network)$/;"	f	namespace:alglib
mlprandomize	lib/alglib/dataanalysis.cpp	/^void mlprandomize(multilayerperceptron* network, ae_state *_state)$/;"	f	namespace:alglib_impl
mlprandomizefull	lib/alglib/dataanalysis.cpp	/^void mlprandomizefull(const multilayerperceptron &network)$/;"	f	namespace:alglib
mlprandomizefull	lib/alglib/dataanalysis.cpp	/^void mlprandomizefull(multilayerperceptron* network, ae_state *_state)$/;"	f	namespace:alglib_impl
mlprelclserror	lib/alglib/dataanalysis.cpp	/^double mlprelclserror(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlprelclserror	lib/alglib/dataanalysis.cpp	/^double mlprelclserror(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpreport	lib/alglib/dataanalysis.cpp	/^mlpreport::mlpreport() : _mlpreport_owner() ,ngrad(p_struct->ngrad),nhess(p_struct->nhess),ncholesky(p_struct->ncholesky)$/;"	f	class:alglib::mlpreport
mlpreport	lib/alglib/dataanalysis.cpp	/^mlpreport::mlpreport(const mlpreport &rhs):_mlpreport_owner(rhs) ,ngrad(p_struct->ngrad),nhess(p_struct->nhess),ncholesky(p_struct->ncholesky)$/;"	f	class:alglib::mlpreport
mlpreport	lib/alglib/dataanalysis.h	/^class mlpreport : public _mlpreport_owner$/;"	c	namespace:alglib
mlpreport	lib/alglib/dataanalysis.h	/^} mlpreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon48
mlprmserror	lib/alglib/dataanalysis.cpp	/^double mlprmserror(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mlprmserror	lib/alglib/dataanalysis.cpp	/^double mlprmserror(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpserialize	lib/alglib/dataanalysis.cpp	/^void mlpserialize(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlptrain_mindecay	lib/alglib/dataanalysis.cpp	/^static double mlptrain_mindecay = 0.001;$/;"	m	namespace:alglib_impl	file:
mlptrain_mlpkfoldcvgeneral	lib/alglib/dataanalysis.cpp	/^static void mlptrain_mlpkfoldcvgeneral(multilayerperceptron* n,$/;"	f	namespace:alglib_impl
mlptrain_mlpkfoldsplit	lib/alglib/dataanalysis.cpp	/^static void mlptrain_mlpkfoldsplit(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
mlptraines	lib/alglib/dataanalysis.cpp	/^void mlptraines(const multilayerperceptron &network, const real_2d_array &trnxy, const ae_int_t trnsize, const real_2d_array &valxy, const ae_int_t valsize, const double decay, const ae_int_t restarts, ae_int_t &info, mlpreport &rep)$/;"	f	namespace:alglib
mlptraines	lib/alglib/dataanalysis.cpp	/^void mlptraines(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlptrainlbfgs	lib/alglib/dataanalysis.cpp	/^void mlptrainlbfgs(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t npoints, const double decay, const ae_int_t restarts, const double wstep, const ae_int_t maxits, ae_int_t &info, mlpreport &rep)$/;"	f	namespace:alglib
mlptrainlbfgs	lib/alglib/dataanalysis.cpp	/^void mlptrainlbfgs(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlptrainlm	lib/alglib/dataanalysis.cpp	/^void mlptrainlm(const multilayerperceptron &network, const real_2d_array &xy, const ae_int_t npoints, const double decay, const ae_int_t restarts, ae_int_t &info, mlpreport &rep)$/;"	f	namespace:alglib
mlptrainlm	lib/alglib/dataanalysis.cpp	/^void mlptrainlm(multilayerperceptron* network,$/;"	f	namespace:alglib_impl
mlpunserialize	lib/alglib/dataanalysis.cpp	/^void mlpunserialize(\/* Real    *\/ ae_vector* ra,$/;"	f	namespace:alglib_impl
mnlavgce	lib/alglib/dataanalysis.cpp	/^double mnlavgce(const logitmodel &lm, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mnlavgce	lib/alglib/dataanalysis.cpp	/^double mnlavgce(logitmodel* lm,$/;"	f	namespace:alglib_impl
mnlavgerror	lib/alglib/dataanalysis.cpp	/^double mnlavgerror(const logitmodel &lm, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mnlavgerror	lib/alglib/dataanalysis.cpp	/^double mnlavgerror(logitmodel* lm,$/;"	f	namespace:alglib_impl
mnlavgrelerror	lib/alglib/dataanalysis.cpp	/^double mnlavgrelerror(const logitmodel &lm, const real_2d_array &xy, const ae_int_t ssize)$/;"	f	namespace:alglib
mnlavgrelerror	lib/alglib/dataanalysis.cpp	/^double mnlavgrelerror(logitmodel* lm,$/;"	f	namespace:alglib_impl
mnlclserror	lib/alglib/dataanalysis.cpp	/^ae_int_t mnlclserror(const logitmodel &lm, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mnlclserror	lib/alglib/dataanalysis.cpp	/^ae_int_t mnlclserror(logitmodel* lm,$/;"	f	namespace:alglib_impl
mnlcopy	lib/alglib/dataanalysis.cpp	/^void mnlcopy(logitmodel* lm1, logitmodel* lm2, ae_state *_state)$/;"	f	namespace:alglib_impl
mnlpack	lib/alglib/dataanalysis.cpp	/^void mnlpack(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
mnlpack	lib/alglib/dataanalysis.cpp	/^void mnlpack(const real_2d_array &a, const ae_int_t nvars, const ae_int_t nclasses, logitmodel &lm)$/;"	f	namespace:alglib
mnlprocess	lib/alglib/dataanalysis.cpp	/^void mnlprocess(const logitmodel &lm, const real_1d_array &x, real_1d_array &y)$/;"	f	namespace:alglib
mnlprocess	lib/alglib/dataanalysis.cpp	/^void mnlprocess(logitmodel* lm,$/;"	f	namespace:alglib_impl
mnlprocessi	lib/alglib/dataanalysis.cpp	/^void mnlprocessi(const logitmodel &lm, const real_1d_array &x, real_1d_array &y)$/;"	f	namespace:alglib
mnlprocessi	lib/alglib/dataanalysis.cpp	/^void mnlprocessi(logitmodel* lm,$/;"	f	namespace:alglib_impl
mnlrelclserror	lib/alglib/dataanalysis.cpp	/^double mnlrelclserror(const logitmodel &lm, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mnlrelclserror	lib/alglib/dataanalysis.cpp	/^double mnlrelclserror(logitmodel* lm,$/;"	f	namespace:alglib_impl
mnlreport	lib/alglib/dataanalysis.cpp	/^mnlreport::mnlreport() : _mnlreport_owner() ,ngrad(p_struct->ngrad),nhess(p_struct->nhess)$/;"	f	class:alglib::mnlreport
mnlreport	lib/alglib/dataanalysis.cpp	/^mnlreport::mnlreport(const mnlreport &rhs):_mnlreport_owner(rhs) ,ngrad(p_struct->ngrad),nhess(p_struct->nhess)$/;"	f	class:alglib::mnlreport
mnlreport	lib/alglib/dataanalysis.h	/^class mnlreport : public _mnlreport_owner$/;"	c	namespace:alglib
mnlreport	lib/alglib/dataanalysis.h	/^} mnlreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon47
mnlrmserror	lib/alglib/dataanalysis.cpp	/^double mnlrmserror(const logitmodel &lm, const real_2d_array &xy, const ae_int_t npoints)$/;"	f	namespace:alglib
mnlrmserror	lib/alglib/dataanalysis.cpp	/^double mnlrmserror(logitmodel* lm,$/;"	f	namespace:alglib_impl
mnltrainh	lib/alglib/dataanalysis.cpp	/^void mnltrainh(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
mnltrainh	lib/alglib/dataanalysis.cpp	/^void mnltrainh(const real_2d_array &xy, const ae_int_t npoints, const ae_int_t nvars, const ae_int_t nclasses, ae_int_t &info, logitmodel &lm, mnlreport &rep)$/;"	f	namespace:alglib
mnlunpack	lib/alglib/dataanalysis.cpp	/^void mnlunpack(const logitmodel &lm, real_2d_array &a, ae_int_t &nvars, ae_int_t &nclasses)$/;"	f	namespace:alglib
mnlunpack	lib/alglib/dataanalysis.cpp	/^void mnlunpack(logitmodel* lm,$/;"	f	namespace:alglib_impl
mode	build/include/tool/WorldConfig.h	/^    int mode;$/;"	m	class:WorldConfig
mode	core/python/behaviors/win.py	/^mode = Modes.passive$/;"	v
mode	core/vision/utils.h	/^inline std::pair<Color, unsigned int> mode(std::vector<Color> colors, unsigned int max)$/;"	f
mode	lib/zlib/gzguts.h	/^    int mode;               \/* see gzip modes above *\/$/;"	m	struct:__anon135
mode	lib/zlib/inflate.h	/^    inflate_mode mode;          \/* current inflate mode *\/$/;"	m	struct:inflate_state
mode	tools/UTNaoTool/WorldConfig.h	/^    int mode;$/;"	m	class:WorldConfig
mode	vision_testing/src/vision_testing.cpp	/^std::pair<Color, unsigned int> mode(std::vector<Color> colors, unsigned int max)$/;"	f
mode_ind_	core/sonar/SonarModule.h	/^  unsigned int mode_ind_;$/;"	m	class:SonarModule
modelNumber	core/memory/OpponentBlock.h	/^  int modelNumber;$/;"	m	struct:OpponentModel
modelage	lib/alglib/optimization.h	/^    ae_int_t modelage;$/;"	m	struct:alglib_impl::__anon73
modeltype	lib/alglib/interpolation.h	/^    ae_int_t modeltype;$/;"	m	struct:alglib_impl::__anon56
modes_	build/include/tool/WorldWindow.h	/^    std::vector<WorldMode> modes_;$/;"	m	class:WorldWindow
modes_	core/sonar/SonarModule.h	/^  std::vector<float> modes_;$/;"	m	class:SonarModule
modes_	tools/UTNaoTool/WorldWindow.h	/^    std::vector<WorldMode> modes_;$/;"	m	class:WorldWindow
modifiedSettings	lib/yaml-cpp/src/emitterstate.h	/^			SettingChanges modifiedSettings;$/;"	m	struct:YAML::EmitterState::Group
modifiers	build/include/tool/LogWidget.cpp	/^Qt::KeyboardModifiers LogWidget::modifiers() {$/;"	f	class:LogWidget
modifiers	build/include/tool/SimControlWidget.cpp	/^Qt::KeyboardModifiers SimControlWidget::modifiers() {$/;"	f	class:SimControlWidget
modifiers	build/include/tool/WorldGLWidget.h	/^    Qt::KeyboardModifiers modifiers() { return modifiers_; }$/;"	f	class:WorldGLWidget
modifiers	build/include/tool/WorldWindow.h	/^    Qt::KeyboardModifiers modifiers() { return world->modifiers(); }$/;"	f	class:WorldWindow
modifiers	tools/UTNaoTool/LogWidget.cpp	/^Qt::KeyboardModifiers LogWidget::modifiers() {$/;"	f	class:LogWidget
modifiers	tools/UTNaoTool/SimControlWidget.cpp	/^Qt::KeyboardModifiers SimControlWidget::modifiers() {$/;"	f	class:SimControlWidget
modifiers	tools/UTNaoTool/WorldGLWidget.h	/^    Qt::KeyboardModifiers modifiers() { return modifiers_; }$/;"	f	class:WorldGLWidget
modifiers	tools/UTNaoTool/WorldWindow.h	/^    Qt::KeyboardModifiers modifiers() { return world->modifiers(); }$/;"	f	class:WorldWindow
modifiers_	build/include/tool/WorldGLWidget.h	/^    Qt::KeyboardModifiers modifiers_;$/;"	m	class:WorldGLWidget
modifiers_	tools/UTNaoTool/WorldGLWidget.h	/^    Qt::KeyboardModifiers modifiers_;$/;"	m	class:WorldGLWidget
modinit	lib/lua/src/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
moduleChanged	build/include/tool/LogWindow.cpp	/^void LogWindow::moduleChanged(int n){$/;"	f	class:LogWindow
moduleChanged	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::moduleChanged(int n){$/;"	f	class:LogWindow
moduleChecks	build/include/tool/LogSelectWindow.h	/^    QCheckBox** moduleChecks;$/;"	m	class:LogSelectWindow
moduleChecks	tools/UTNaoTool/LogSelectWindow.h	/^    QCheckBox** moduleChecks;$/;"	m	class:LogSelectWindow
moduleLabels	build/include/tool/LogSelectWindow.h	/^    QLabel** moduleLabels;$/;"	m	class:LogSelectWindow
moduleLabels	tools/UTNaoTool/LogSelectWindow.h	/^    QLabel** moduleLabels;$/;"	m	class:LogSelectWindow
moduleType	build/include/tool/LogWindow.h	/^    int moduleType;$/;"	m	class:LogWindow
moduleType	tools/UTNaoTool/LogWindow.h	/^    int moduleType;$/;"	m	class:LogWindow
moduleTypeIndex	build/include/tool/ToolConfig.h	/^    int moduleTypeIndex;$/;"	m	class:ToolConfig
moduleTypeIndex	tools/UTNaoTool/ToolConfig.h	/^    int moduleTypeIndex;$/;"	m	class:ToolConfig
modulesTypes	core/memory/TextLogger.h	/^enum modulesTypes {$/;"	g
motion	core/motion/rswalk2014/utils/Logger.cpp	/^bool Logger::motion;$/;"	m	class:Logger	file:
motion	core/motion/rswalk2014/utils/Logger.hpp	/^      static bool motion;$/;"	m	class:Logger
motionCycleTime	core/common/RobotDimensions.h	/^    motionCycleTime,$/;"	e	enum:RobotDimensions::__anon8
motionLock	core/VisionCore.cpp	/^void VisionCore::motionLock() {$/;"	f	class:VisionCore
motionSeqList	core/motion/SpecialMotionModule.cpp	/^std::vector<std::vector<SpecialMotion> > SpecialMotionModule::motionSeqList = std::vector<std::vector<SpecialMotion> >();$/;"	m	class:SpecialMotionModule	file:
motionSeqList	core/motion/SpecialMotionModule.h	/^  static std::vector<std::vector<SpecialMotion> > motionSeqList;$/;"	m	class:SpecialMotionModule
motionType	core/motion/SpecialMotionParser.h	/^enum motionType{$/;"	g	namespace:Motions
motionUnlock	core/VisionCore.cpp	/^void VisionCore::motionUnlock() {$/;"	f	class:VisionCore
motionWnd_	build/include/tool/UTMainWnd.h	/^  MotionWindow* motionWnd_;$/;"	m	class:UTMainWnd
motionWnd_	tools/UTNaoTool/UTMainWnd.h	/^  MotionWindow* motionWnd_;$/;"	m	class:UTMainWnd
motion_	core/MotionCore.h	/^  MotionModule *motion_;$/;"	m	class:MotionCore
motion_	core/memory/WalkRequestBlock.h	/^  Motion motion_; \/\/ what type of motion, walk\/stand\/kick$/;"	m	struct:WalkRequestBlock
motion_current_	core/memory/WalkEngineBlock.h	/^  WalkRequestBlock::Motion motion_current_;$/;"	m	struct:WalkEngineBlock
motion_lock_	interfaces/nao/src/naointerface.h	/^    Lock *motion_lock_;$/;"	m	class:naointerface
motion_lock_	interfaces/sim_spark/RobotBehavior.h	/^  Lock *motion_lock_;$/;"	m	class:RobotBehavior
motion_planning	motion_planning/include/motion_planning/plan_kick.h	/^namespace motion_planning$/;"	n
motion_planning	motion_planning/src/plan_kick.cpp	/^namespace motion_planning$/;"	n	file:
motion_prev_	core/memory/WalkEngineBlock.h	/^  WalkRequestBlock::Motion motion_prev_;$/;"	m	struct:WalkEngineBlock
motion_proxy_	interfaces/nao/src/almotionwrapper.h	/^  boost::shared_ptr<AL::ALMotionProxy> motion_proxy_;$/;"	m	class:ALMotionWrapper
motion_sim_	build/include/tool/MotionGLWidget.h	/^  MotionSimulation* motion_sim_;$/;"	m	class:MotionGLWidget
motion_sim_	tools/UTNaoTool/MotionGLWidget.h	/^  MotionSimulation* motion_sim_;$/;"	m	class:MotionGLWidget
motion_vision_lock_	core/memory/Memory.h	/^  Lock *motion_vision_lock_;$/;"	m	class:Memory
mouseMoveEvent	build/include/tool/ImageWidget.cpp	/^void ImageWidget::mouseMoveEvent(QMouseEvent *event) {$/;"	f	class:ImageWidget
mouseMoveEvent	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::mouseMoveEvent(QMouseEvent* mevent) {$/;"	f	class:WorldGLWidget
mouseMoveEvent	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::mouseMoveEvent(QMouseEvent *event) {$/;"	f	class:ImageWidget
mouseMoveEvent	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::mouseMoveEvent(QMouseEvent* mevent) {$/;"	f	class:WorldGLWidget
mouseMoveEvent	tools/color_classifier/src/ImageWidget.cpp	/^  void ImageWidget::mouseMoveEvent(QMouseEvent *event) {$/;"	f	class:color_classifier::ImageWidget
mouseOverBlobIndex_	build/include/tool/VisionWindow.h	/^  int mouseOverBlobIndex_;$/;"	m	class:VisionWindow
mouseOverBlobIndex_	tools/UTNaoTool/VisionWindow.h	/^  int mouseOverBlobIndex_;$/;"	m	class:VisionWindow
mouseOverBlobType_	build/include/tool/VisionWindow.h	/^  int mouseOverBlobType_;$/;"	m	class:VisionWindow
mouseOverBlobType_	tools/UTNaoTool/VisionWindow.h	/^  int mouseOverBlobType_;$/;"	m	class:VisionWindow
mouseOverLineIndex_	build/include/tool/VisionWindow.h	/^  int mouseOverLineIndex_;$/;"	m	class:VisionWindow
mouseOverLineIndex_	tools/UTNaoTool/VisionWindow.h	/^  int mouseOverLineIndex_;$/;"	m	class:VisionWindow
mouseOverLineType_	build/include/tool/VisionWindow.h	/^  int mouseOverLineType_;$/;"	m	class:VisionWindow
mouseOverLineType_	tools/UTNaoTool/VisionWindow.h	/^  int mouseOverLineType_;$/;"	m	class:VisionWindow
mouseOverObjectIndex_	build/include/tool/VisionWindow.h	/^  int mouseOverObjectIndex_;$/;"	m	class:VisionWindow
mouseOverObjectIndex_	tools/UTNaoTool/VisionWindow.h	/^  int mouseOverObjectIndex_;$/;"	m	class:VisionWindow
mousePressEvent	build/include/tool/ImageWidget.cpp	/^void ImageWidget::mousePressEvent(QMouseEvent *event) {$/;"	f	class:ImageWidget
mousePressEvent	build/include/tool/PlotWindow.cpp	/^void PlotWindow::mousePressEvent(QMouseEvent *event) {$/;"	f	class:PlotWindow
mousePressEvent	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::mousePressEvent(QMouseEvent* mevent) {$/;"	f	class:WorldGLWidget
mousePressEvent	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::mousePressEvent(QMouseEvent *event) {$/;"	f	class:ImageWidget
mousePressEvent	tools/UTNaoTool/PlotWindow.cpp	/^void PlotWindow::mousePressEvent(QMouseEvent *event) {$/;"	f	class:PlotWindow
mousePressEvent	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::mousePressEvent(QMouseEvent* mevent) {$/;"	f	class:WorldGLWidget
mousePressEvent	tools/color_classifier/src/ImageWidget.cpp	/^  void ImageWidget::mousePressEvent(QMouseEvent *event) {$/;"	f	class:color_classifier::ImageWidget
mouseReleaseEvent	build/include/tool/ImageWidget.cpp	/^void ImageWidget::mouseReleaseEvent(QMouseEvent *) {$/;"	f	class:ImageWidget
mouseReleaseEvent	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::mouseReleaseEvent(QMouseEvent* mevent) {$/;"	f	class:WorldGLWidget
mouseReleaseEvent	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::mouseReleaseEvent(QMouseEvent *) {$/;"	f	class:ImageWidget
mouseReleaseEvent	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::mouseReleaseEvent(QMouseEvent* mevent) {$/;"	f	class:WorldGLWidget
movFrac	core/motion/rswalk2014/WalkCycle.cpp	/^const float WalkCycle::movFrac = .4;$/;"	m	class:WalkCycle	file:
movFrac	core/motion/rswalk2014/WalkCycle.hpp	/^      static const float movFrac;$/;"	m	class:WalkCycle
moveBall	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::moveBall(Point2D movement){$/;"	f	class:BehaviorSimulation
moveBall	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::moveBall(Point2D target) {$/;"	f	class:IBSim
moveBall	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::moveBall() {$/;"	f	class:LocalizationSimulation
moveBall	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::moveBall(Point2D position) {$/;"	f	class:LocalizationSimulation
moveBall	build/include/tool/simulation/PhysicsSimulator.cpp	/^void PhysicsSimulator::moveBall(Point2D target) {$/;"	f	class:PhysicsSimulator
moveBall	build/include/tool/simulation/Simulation.h	/^    virtual void moveBall(Point2D position) { };$/;"	f	class:Simulation
moveBall	core/localization/LocalizationModule.cpp	/^void LocalizationModule::moveBall(const Point2D& position) {$/;"	f	class:LocalizationModule
moveBall	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::moveBall(Point2D movement){$/;"	f	class:BehaviorSimulation
moveBall	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::moveBall(Point2D target) {$/;"	f	class:IBSim
moveBall	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::moveBall() {$/;"	f	class:LocalizationSimulation
moveBall	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::moveBall(Point2D position) {$/;"	f	class:LocalizationSimulation
moveBall	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^void PhysicsSimulator::moveBall(Point2D target) {$/;"	f	class:PhysicsSimulator
moveBall	tools/UTNaoTool/simulation/Simulation.h	/^    virtual void moveBall(Point2D position) { };$/;"	f	class:Simulation
moveBallRandomly	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::moveBallRandomly() {$/;"	f	class:IBSim
moveBallRandomly	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::moveBallRandomly() {$/;"	f	class:IBSim
moveBetweenKeyframes	core/motion/KickModule.cpp	/^void KickModule::moveBetweenKeyframes(const Keyframe& start, const Keyframe& finish, int cframe) {$/;"	f	class:KickModule
moveDown	build/include/tool/KeyframeWidget.cpp	/^void KeyframeItem::moveDown() {$/;"	f	class:KeyframeItem
moveDown	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeItem::moveDown() {$/;"	f	class:KeyframeItem
movePlayer	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::movePlayer(Point2D position, float orientation, int player) {$/;"	f	class:IBSim
movePlayer	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::movePlayer(Point2D position, float orientation, int) {$/;"	f	class:LocalizationSimulation
movePlayer	build/include/tool/simulation/Simulation.h	/^    virtual void movePlayer(Point2D position, float orientation, int player) { };$/;"	f	class:Simulation
movePlayer	core/localization/LocalizationModule.cpp	/^void LocalizationModule::movePlayer(const Point2D& position, float orientation) {$/;"	f	class:LocalizationModule
movePlayer	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::movePlayer(Point2D position, float orientation, int player) {$/;"	f	class:IBSim
movePlayer	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::movePlayer(Point2D position, float orientation, int) {$/;"	f	class:LocalizationSimulation
movePlayer	tools/UTNaoTool/simulation/Simulation.h	/^    virtual void movePlayer(Point2D position, float orientation, int player) { };$/;"	f	class:Simulation
moveRobot	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::moveRobot(int index, AngRad rotation, Point2D translation){$/;"	f	class:BehaviorSimulation
moveRobot	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::moveRobot(int index, AngRad rotation, Point2D translation){$/;"	f	class:BehaviorSimulation
moveSplinePoint	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::moveSplinePoint(int x, int y, int z) {$/;"	f	class:MotionGLWidget
moveSplinePoint	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::moveSplinePoint(int x, int y, int z) {$/;"	f	class:MotionGLWidget
moveToInitial	core/motion/KickModule.cpp	/^void KickModule::moveToInitial(const Keyframe& keyframe, int cframe) {$/;"	f	class:KickModule
moveUp	build/include/tool/KeyframeWidget.cpp	/^void KeyframeItem::moveUp() {$/;"	f	class:KeyframeItem
moveUp	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeItem::moveUp() {$/;"	f	class:KeyframeItem
mpgnorm	lib/alglib/optimization.h	/^    double mpgnorm;$/;"	m	struct:alglib_impl::__anon79
mpressed_	build/include/tool/WorldGLWidget.h	/^    std::map<int,Point2D> mpressed_;$/;"	m	class:WorldGLWidget
mpressed_	tools/UTNaoTool/WorldGLWidget.h	/^    std::map<int,Point2D> mpressed_;$/;"	m	class:WorldGLWidget
msec	core/motion/rswalk2014/utils/Timer.hpp	/^      float msec(const timeval& t) {$/;"	f	class:Timer
msg	lib/alglib/ap.h	/^    std::string msg;$/;"	m	class:alglib::ap_error
msg	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		std::string msg;$/;"	m	class:YAML::Exception
msg	lib/zlib/gzguts.h	/^    char *msg;              \/* error message *\/$/;"	m	struct:__anon135
msg	lib/zlib/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
msgs	core/imageCapture/i2c-dev.h	/^	struct i2c_msg *msgs;	\/* pointers to i2c_msgs *\/$/;"	m	struct:i2c_rdwr_ioctl_data	typeref:struct:i2c_rdwr_ioctl_data::i2c_msg
mt	lib/lua/src/lstate.h	/^  struct Table *mt[NUM_TAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table
mt.__index 	lib/lua/etc/strict.lua	/^mt.__index = function (t, n)$/;"	f
mt.__newindex 	lib/lua/etc/strict.lua	/^mt.__newindex = function (t, n, v)$/;"	f
mu	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateVector mu;$/;"	m	class:ExtendedKalmanFilter
mu	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  StateVector mu;$/;"	m	class:LinearKalmanFilter
mu	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  StateVector mu;$/;"	m	class:UnscentedKalmanFilter
mu	lib/alglib/optimization.h	/^    double mu;$/;"	m	struct:alglib_impl::__anon75
mu_bar	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateVector mu_bar;$/;"	m	class:ExtendedKalmanFilter
mu_bar	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  StateVector mu_bar;$/;"	m	class:LinearKalmanFilter
mu_bar	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  StateVector mu_bar;$/;"	m	class:UnscentedKalmanFilter
mul1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> mul1(const U& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
mul1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> mul1(const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
mul2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> mul2(const FTypeName<T,0>& a, const U& b)$/;"	f	namespace:fadbad
mul2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> mul2(const FTypeName<T,N>& a, const U& b)$/;"	f	namespace:fadbad
mul3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> mul3 (const FTypeName<T,0>& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
mul3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> mul3 (const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
multilayerperceptron	lib/alglib/dataanalysis.cpp	/^multilayerperceptron::multilayerperceptron() : _multilayerperceptron_owner() $/;"	f	class:alglib::multilayerperceptron
multilayerperceptron	lib/alglib/dataanalysis.cpp	/^multilayerperceptron::multilayerperceptron(const multilayerperceptron &rhs):_multilayerperceptron_owner(rhs) $/;"	f	class:alglib::multilayerperceptron
multilayerperceptron	lib/alglib/dataanalysis.h	/^class multilayerperceptron : public _multilayerperceptron_owner$/;"	c	namespace:alglib
multilayerperceptron	lib/alglib/dataanalysis.h	/^} multilayerperceptron;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon44
multinomial	interfaces/sim_spark/Random.h	/^   void multinomial( int    n,            \/\/ Multinomial$/;"	f	class:Random
multiplyC	tools/behaviorSim/cma.py	/^    def multiplyC(self, alpha):$/;"	m	class:CMAEvolutionStrategy
multiprocessing	bin/compile	/^    import multiprocessing$/;"	i
multiprocessing	build/compile	/^    import multiprocessing$/;"	i
mutex	core/motion/rswalk2014/utils/speech.hpp	/^      pthread_mutex_t mutex;$/;"	m	class:Speech
mutex_	core/memory/Lock.h	/^  boost::interprocess::named_mutex *mutex_;$/;"	m	class:Lock
mutex_	core/memory/SynchronizedBlock.h	/^  boost::interprocess::named_mutex mutex_;$/;"	m	class:SynchronizedBlock
mutex_remover_	core/memory/SynchronizedBlock.h	/^  MutexRemover mutex_remover_;$/;"	m	class:SynchronizedBlock
myAcos	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myAcos(const T& x) { return ::acos(x); }$/;"	f	struct:fadbad::Op
myAcos	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myAcos(const T& x) { return fadbad::acos(x); }$/;"	f	struct:fadbad::Op
myAsin	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myAsin(const T& x) { return ::asin(x); }$/;"	f	struct:fadbad::Op
myAsin	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myAsin(const T& x) { return fadbad::asin(x); }$/;"	f	struct:fadbad::Op
myAtan	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myAtan(const T& x) { return ::atan(x); }$/;"	f	struct:fadbad::Op
myAtan	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myAtan(const T& x) { return fadbad::atan(x); }$/;"	f	struct:fadbad::Op
myCadd	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		template <typename U> static T& myCadd(T& x, const U& y) { return x+=y; }$/;"	f	struct:fadbad::Op
myCadd	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	template <typename V> static T& myCadd(T& x, const V& y) { return x+=y; }$/;"	f	struct:fadbad::Op
myCdiv	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		template <typename U> static T& myCdiv(T& x, const U& y) { return x\/=y; }$/;"	f	struct:fadbad::Op
myCdiv	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	template <typename V> static T& myCdiv(T& x, const V& y) { return x\/=y; }$/;"	f	struct:fadbad::Op
myCmul	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		template <typename U> static T& myCmul(T& x, const U& y) { return x*=y; }$/;"	f	struct:fadbad::Op
myCmul	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	template <typename V> static T& myCmul(T& x, const V& y) { return x*=y; }$/;"	f	struct:fadbad::Op
myCos	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myCos(const T& x) { return ::cos(x); }$/;"	f	struct:fadbad::Op
myCos	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myCos(const T& x) { return fadbad::cos(x); }$/;"	f	struct:fadbad::Op
myCsub	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		template <typename U> static T& myCsub(T& x, const U& y) { return x-=y; }$/;"	f	struct:fadbad::Op
myCsub	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	template <typename V> static T& myCsub(T& x, const V& y) { return x-=y; }$/;"	f	struct:fadbad::Op
myEq	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static bool myEq(const T& x, const T& y) { return x==y; }$/;"	f	struct:fadbad::Op
myEq	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static bool myEq(const T& x, const T& y) { return x==y; }$/;"	f	struct:fadbad::Op
myExp	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myExp(const T& x) { return ::exp(x); }$/;"	f	struct:fadbad::Op
myExp	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myExp(const T& x) { return fadbad::exp(x); }$/;"	f	struct:fadbad::Op
myGe	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static bool myGe(const T& x, const T& y) { return x>=y; }$/;"	f	struct:fadbad::Op
myGe	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static bool myGe(const T& x, const T& y) { return x>=y; }$/;"	f	struct:fadbad::Op
myGt	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static bool myGt(const T& x, const T& y) { return x>y; }$/;"	f	struct:fadbad::Op
myGt	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static bool myGt(const T& x, const T& y) { return x>y; }$/;"	f	struct:fadbad::Op
myInteger	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static Base myInteger(const int i) { return Base(i); }$/;"	f	struct:fadbad::Op
myInteger	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static Base myInteger(const int i) { return Base(i); }$/;"	f	struct:fadbad::Op
myInv	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myInv(const T& x) { return myOne()\/x; }$/;"	f	struct:fadbad::Op
myInv	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myInv(const T& x) { return myOne()\/x; }$/;"	f	struct:fadbad::Op
myLe	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static bool myLe(const T& x, const T& y) { return x<=y; }$/;"	f	struct:fadbad::Op
myLe	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static bool myLe(const T& x, const T& y) { return x<=y; }$/;"	f	struct:fadbad::Op
myLog	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myLog(const T& x) { return ::log(x); }$/;"	f	struct:fadbad::Op
myLog	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myLog(const T& x) { return fadbad::log(x); }$/;"	f	struct:fadbad::Op
myLt	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static bool myLt(const T& x, const T& y) { return x<y; }$/;"	f	struct:fadbad::Op
myLt	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static bool myLt(const T& x, const T& y) { return x<y; }$/;"	f	struct:fadbad::Op
myNe	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static bool myNe(const T& x, const T& y) { return x!=y; }$/;"	f	struct:fadbad::Op
myNe	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static bool myNe(const T& x, const T& y) { return x!=y; }$/;"	f	struct:fadbad::Op
myNeg	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myNeg(const T& x) { return -x; }$/;"	f	struct:fadbad::Op
myNeg	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myNeg(const T& x) { return -x; }$/;"	f	struct:fadbad::Op
myOne	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static Base myOne() { return myInteger(1);}$/;"	f	struct:fadbad::Op
myOne	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static Base myOne() { return myInteger(1);}$/;"	f	struct:fadbad::Op
myPI	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static Base myPI() { return 3.14159265358979323846; }$/;"	f	struct:fadbad::Op
myPI	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static Base myPI() { return Op<Base>::myPI(); }$/;"	f	struct:fadbad::Op
myPos	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myPos(const T& x) { return +x; }$/;"	f	struct:fadbad::Op
myPos	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myPos(const T& x) { return +x; }$/;"	f	struct:fadbad::Op
myPow	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myPow(const X& x, const Y& y) { return ::pow(x,y); }$/;"	f	struct:fadbad::Op
myPow	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myPow(const X& x, const Y& y) { return fadbad::pow(x,y); }$/;"	f	struct:fadbad::Op
mySin	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T mySin(const T& x) { return ::sin(x); }$/;"	f	struct:fadbad::Op
mySin	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T mySin(const T& x) { return fadbad::sin(x); }$/;"	f	struct:fadbad::Op
mySqr	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T mySqr(const T& x) { return x*x; }$/;"	f	struct:fadbad::Op
mySqr	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T mySqr(const T& x) { return fadbad::sqr(x); }$/;"	f	struct:fadbad::Op
mySqrt	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T mySqrt(const T& x) { return ::sqrt(x); }$/;"	f	struct:fadbad::Op
mySqrt	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T mySqrt(const T& x) { return fadbad::sqrt(x); }$/;"	f	struct:fadbad::Op
myTan	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static T myTan(const T& x) { return ::tan(x); }$/;"	f	struct:fadbad::Op
myTan	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static T myTan(const T& x) { return fadbad::tan(x); }$/;"	f	struct:fadbad::Op
myTwo	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static Base myTwo() { return myInteger(2); }$/;"	f	struct:fadbad::Op
myTwo	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static Base myTwo() { return myInteger(2); }$/;"	f	struct:fadbad::Op
myZero	core/motion/rswalk2014/FADBAD++/fadbad.h	/^		static Base myZero() { return myInteger(0); }$/;"	f	struct:fadbad::Op
myZero	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	static Base myZero() { return myInteger(0); }$/;"	f	struct:fadbad::Op
my_stricmp	lib/alglib/ap.cpp	/^alglib::ae_int_t alglib::my_stricmp(const char *s1, const char *s2)$/;"	f	class:alglib
n	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  double n;$/;"	m	class:SRUnscentedKalmanFilter
n	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  double n;$/;"	m	class:UnscentedKalmanFilter
n	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  double n;$/;"	m	class:UnscentedKalmanFilter
n	lib/alglib/alglibinternal.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon22
n	lib/alglib/alglibmisc.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon25
n	lib/alglib/diffequations.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon51
n	lib/alglib/integration.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon54
n	lib/alglib/interpolation.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon56
n	lib/alglib/interpolation.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon57
n	lib/alglib/interpolation.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon58
n	lib/alglib/interpolation.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon64
n	lib/alglib/interpolation.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon65
n	lib/alglib/linalg.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon68
n	lib/alglib/optimization.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon69
n	lib/alglib/optimization.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon71
n	lib/alglib/optimization.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon73
n	lib/alglib/optimization.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon75
n	lib/alglib/optimization.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon77
n	lib/alglib/solvers.h	/^    ae_int_t &n;$/;"	m	class:alglib::densesolverlsreport
n	lib/alglib/solvers.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon82
n	lib/alglib/solvers.h	/^    ae_int_t n;$/;"	m	struct:alglib_impl::__anon83
n	lib/lua/src/lobject.h	/^  lua_Number n;$/;"	m	union:__anon87
n	lib/lua/src/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio
n	lib/lua/src/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer
n	lib/yaml-cpp/src/indentation.h	/^		unsigned n;$/;"	m	struct:YAML::IndentTo
n	lib/yaml-cpp/src/indentation.h	/^		unsigned n;$/;"	m	struct:YAML::Indentation
nCcalls	lib/lua/src/lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State
nStates	core/opponents/UKF4.h	/^  int nStates;                    \/\/ Number of states.            (Constant)$/;"	m	class:UKF4
na	lib/lua/src/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactvar	lib/lua/src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the breakable structure *\/$/;"	m	struct:BlockCnt	file:
nactvar	lib/lua/src/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState
name	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^    QLabel* name;$/;"	m	class:CalibrationItem	file:
name	build/include/tool/ProcessExecutor.h	/^  QString name;$/;"	m	struct:ToolProcess
name	build/include/tool/simulation/LocalizationSimulation.h	/^  std::string name;$/;"	m	struct:LocSimAgent
name	build/luaswig/generateSwig.py	/^    name = args[0]$/;"	v
name	core/common/Keyframe.h	/^    std::string name;$/;"	m	class:Keyframe
name	core/communications/ThreadedUDPSocket.h	/^  char* name;$/;"	m	class:ThreadedUDPSocket
name	core/motion/rswalk2014/thread/Thread.cpp	/^const __thread char* Thread::name = NULL;$/;"	m	class:Thread	file:
name	core/motion/rswalk2014/thread/Thread.hpp	/^      static const __thread char* name;$/;"	m	class:Thread
name	lib/lua/src/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg
name	lib/lua/src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	lib/lua/src/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug
name	lib/lua/src/lundump.c	/^ const char* name;$/;"	m	struct:__anon100	file:
name	lib/zlib/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s
name	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^    QLabel* name;$/;"	m	class:CalibrationItem	file:
name	tools/UTNaoTool/ProcessExecutor.h	/^  QString name;$/;"	m	struct:ToolProcess
name	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  std::string name;$/;"	m	struct:LocSimAgent
name_	build/include/tool/annotations/Annotation.h	/^        std::string name_;$/;"	m	class:Annotation
name_	core/memory/Lock.h	/^  std::string name_;$/;"	m	class:Lock
name_	tools/UTNaoTool/annotations/Annotation.h	/^        std::string name_;$/;"	m	class:Annotation
name_max	lib/zlib/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s
name_of_joystick	build/include/tool/joystickxbox.cpp	/^char *button=NULL, name_of_joystick[80];$/;"	v
name_of_joystick	tools/UTNaoTool/joystickxbox.cpp	/^char *button=NULL, name_of_joystick[80];$/;"	v
names	build/include/tool/StateWindow.h	/^    QString names[NumItems];$/;"	m	class:StateWindow
names	build/luaswig/generateSwig.py	/^    names = args[1:]$/;"	v
names	build/luaswig/generateSwig.py	/^    names = args[3:]$/;"	v
names	core/common/Enum.h	/^  std::vector<std::string> names; \/**< The vector of enum names. *\/$/;"	m	class:EnumName
names	core/python/behaviors/custom_kick.py	/^from kick_trajectory import trajectory, names$/;"	i
names	core/python/behaviors/kick_trajectory.py	/^names = ['HeadYaw', 'HeadPitch', 'LHipYawPitch', 'LHipRoll', 'LHipPitch', 'LKneePitch', 'LAnklePitch', 'LAnkleRoll', 'RHipYawPitch', 'RHipRoll', 'RHipPitch', 'RKneePitch', 'RAnklePitch', 'RAnkleRoll', 'LShoulderPitch', 'LShoulderRoll', 'LElbowYaw', 'LElbowRoll', 'RShoulderPitch', 'RShoulderRoll', 'RElbowYaw', 'RElbowRoll']$/;"	v
names	motion_planning/kick_trajectory.py	/^names = ['HeadYaw', 'HeadPitch', 'LHipYawPitch', 'LHipRoll', 'LHipPitch', 'LKneePitch', 'LAnklePitch', 'LAnkleRoll', 'RHipYawPitch', 'RHipRoll', 'RHipPitch', 'RKneePitch', 'RAnklePitch', 'RAnkleRoll', 'LShoulderPitch', 'LShoulderRoll', 'LElbowYaw', 'LElbowRoll', 'RShoulderPitch', 'RShoulderRoll', 'RElbowYaw', 'RElbowRoll']$/;"	v
names	tools/UTNaoTool/StateWindow.h	/^    QString names[NumItems];$/;"	m	class:StateWindow
names	tools/behaviorSim/cma.py	/^    names = ('axlen','fit','stddev','xmean') # ,'xrecentbest')$/;"	v	class:DEAPCMADataLogger
names_	core/memory/GraphableBlock.h	/^  char names_[NUM_GRAPHABLE_DATA][MAX_NAME_LENGTH];$/;"	m	struct:GraphableBlock
namewhat	lib/lua/src/lua.h	/^  const char *namewhat;	\/* (n) `global', `local', `field', `method' *\/$/;"	m	struct:lua_Debug
naoUDP	build/include/tool/LogSelectWindow.h	/^    UDPWrapper* naoUDP;$/;"	m	class:LogSelectWindow
naoUDP	tools/UTNaoTool/LogSelectWindow.h	/^    UDPWrapper* naoUDP;$/;"	m	class:LogSelectWindow
naointerface	interfaces/nao/src/naointerface.cpp	/^naointerface::naointerface( boost::shared_ptr<AL::ALBroker> broker, const std::string& name):$/;"	f	class:naointerface
naointerface	interfaces/nao/src/naointerface.h	/^class naointerface : public AL::ALModule$/;"	c
naointerface_Proxy	interfaces/nao/tests/naointerfaceTest.py	/^  naointerface_Proxy = ALProxy("naointerface",IP,PORT)$/;"	v
naoqiCommand	build/include/tool/FilesWindow.cpp	/^void FilesWindow::naoqiCommand(QString c) {$/;"	f	class:FilesWindow
naoqiCommand	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::naoqiCommand(QString c) {$/;"	f	class:FilesWindow
ncholesky	lib/alglib/dataanalysis.h	/^    ae_int_t &ncholesky;$/;"	m	class:alglib::mlpreport
ncholesky	lib/alglib/dataanalysis.h	/^    ae_int_t ncholesky;$/;"	m	struct:alglib_impl::__anon48
ncholesky	lib/alglib/optimization.h	/^    ae_int_t &ncholesky;$/;"	m	class:alglib::minlmreport
ncholesky	lib/alglib/optimization.h	/^    ae_int_t &ncholesky;$/;"	m	class:alglib::minqpreport
ncholesky	lib/alglib/optimization.h	/^    ae_int_t ncholesky;$/;"	m	struct:alglib_impl::__anon72
ncholesky	lib/alglib/optimization.h	/^    ae_int_t ncholesky;$/;"	m	struct:alglib_impl::__anon74
nclasses	lib/alglib/dataanalysis.h	/^    ae_int_t nclasses;$/;"	m	struct:alglib_impl::__anon39
ncode	lib/zlib/inflate.h	/^    unsigned ncode;             \/* number of code length code lengths *\/$/;"	m	struct:inflate_state
ncvdefects	lib/alglib/dataanalysis.h	/^    ae_int_t &ncvdefects;$/;"	m	class:alglib::lrreport
ncvdefects	lib/alglib/dataanalysis.h	/^    ae_int_t ncvdefects;$/;"	m	struct:alglib_impl::__anon43
ndist	lib/zlib/inflate.h	/^    unsigned ndist;             \/* number of distance code lengths *\/$/;"	m	struct:inflate_state
ndistribution_	core/common/Random.h	/^    std::normal_distribution<> ndistribution_;$/;"	m	class:Random
nearestneighbor_kdtreegeneratetreerec	lib/alglib/alglibmisc.cpp	/^static void nearestneighbor_kdtreegeneratetreerec(kdtree* kdt,$/;"	f	namespace:alglib_impl
nearestneighbor_kdtreeinitbox	lib/alglib/alglibmisc.cpp	/^static void nearestneighbor_kdtreeinitbox(kdtree* kdt,$/;"	f	namespace:alglib_impl
nearestneighbor_kdtreequerynnrec	lib/alglib/alglibmisc.cpp	/^static void nearestneighbor_kdtreequerynnrec(kdtree* kdt,$/;"	f	namespace:alglib_impl
nearestneighbor_kdtreesplit	lib/alglib/alglibmisc.cpp	/^static void nearestneighbor_kdtreesplit(kdtree* kdt,$/;"	f	namespace:alglib_impl
nearestneighbor_splitnodesize	lib/alglib/alglibmisc.cpp	/^static ae_int_t nearestneighbor_splitnodesize = 6;$/;"	m	namespace:alglib_impl	file:
necessary	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
neck	core/common/RobotInfo.h	/^		neck,$/;"	e	enum:BodyPart::Part
neckOffsetZ	core/common/RobotDimensions.h	/^    neckOffsetZ,$/;"	e	enum:RobotDimensions::__anon8
neckToWorldTransform	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> neckToWorldTransform;$/;"	m	class:Pose
need_more	lib/zlib/deflate.c	/^    need_more,      \/* block not completed, need more input or more output *\/$/;"	e	enum:__anon132	file:
need_value	lib/lua/src/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
needdy	lib/alglib/diffequations.h	/^    ae_bool &needdy;$/;"	m	class:alglib::odesolverstate
needdy	lib/alglib/diffequations.h	/^    ae_bool needdy;$/;"	m	struct:alglib_impl::__anon51
needf	lib/alglib/alglibinternal.h	/^    ae_bool needf;$/;"	m	struct:alglib_impl::__anon22
needf	lib/alglib/integration.h	/^    ae_bool &needf;$/;"	m	class:alglib::autogkstate
needf	lib/alglib/integration.h	/^    ae_bool needf;$/;"	m	struct:alglib_impl::__anon55
needf	lib/alglib/interpolation.h	/^    ae_bool &needf;$/;"	m	class:alglib::lsfitstate
needf	lib/alglib/interpolation.h	/^    ae_bool needf;$/;"	m	struct:alglib_impl::__anon63
needf	lib/alglib/optimization.h	/^    ae_bool &needf;$/;"	m	class:alglib::minlmstate
needf	lib/alglib/optimization.h	/^    ae_bool needf;$/;"	m	struct:alglib_impl::__anon73
needf	lib/alglib/solvers.h	/^    ae_bool &needf;$/;"	m	class:alglib::nleqstate
needf	lib/alglib/solvers.h	/^    ae_bool needf;$/;"	m	struct:alglib_impl::__anon83
needfg	lib/alglib/interpolation.h	/^    ae_bool &needfg;$/;"	m	class:alglib::lsfitstate
needfg	lib/alglib/interpolation.h	/^    ae_bool needfg;$/;"	m	struct:alglib_impl::__anon63
needfg	lib/alglib/optimization.h	/^    ae_bool &needfg;$/;"	m	class:alglib::minasastate
needfg	lib/alglib/optimization.h	/^    ae_bool &needfg;$/;"	m	class:alglib::minbleicstate
needfg	lib/alglib/optimization.h	/^    ae_bool &needfg;$/;"	m	class:alglib::mincgstate
needfg	lib/alglib/optimization.h	/^    ae_bool &needfg;$/;"	m	class:alglib::minlbfgsstate
needfg	lib/alglib/optimization.h	/^    ae_bool &needfg;$/;"	m	class:alglib::minlmstate
needfg	lib/alglib/optimization.h	/^    ae_bool needfg;$/;"	m	struct:alglib_impl::__anon69
needfg	lib/alglib/optimization.h	/^    ae_bool needfg;$/;"	m	struct:alglib_impl::__anon73
needfg	lib/alglib/optimization.h	/^    ae_bool needfg;$/;"	m	struct:alglib_impl::__anon75
needfg	lib/alglib/optimization.h	/^    ae_bool needfg;$/;"	m	struct:alglib_impl::__anon77
needfg	lib/alglib/optimization.h	/^    ae_bool needfg;$/;"	m	struct:alglib_impl::__anon79
needfgh	lib/alglib/interpolation.h	/^    ae_bool &needfgh;$/;"	m	class:alglib::lsfitstate
needfgh	lib/alglib/interpolation.h	/^    ae_bool needfgh;$/;"	m	struct:alglib_impl::__anon63
needfgh	lib/alglib/optimization.h	/^    ae_bool &needfgh;$/;"	m	class:alglib::minlmstate
needfgh	lib/alglib/optimization.h	/^    ae_bool needfgh;$/;"	m	struct:alglib_impl::__anon73
needfi	lib/alglib/optimization.h	/^    ae_bool &needfi;$/;"	m	class:alglib::minlmstate
needfi	lib/alglib/optimization.h	/^    ae_bool needfi;$/;"	m	struct:alglib_impl::__anon73
needfij	lib/alglib/optimization.h	/^    ae_bool &needfij;$/;"	m	class:alglib::minlmstate
needfij	lib/alglib/optimization.h	/^    ae_bool needfij;$/;"	m	struct:alglib_impl::__anon73
needfij	lib/alglib/solvers.h	/^    ae_bool &needfij;$/;"	m	class:alglib::nleqstate
needfij	lib/alglib/solvers.h	/^    ae_bool needfij;$/;"	m	struct:alglib_impl::__anon83
needsStand	core/motion/GetupModule.h	/^  bool needsStand() {return state == STAND;}$/;"	f	class:GetupModule
negation	core/python/state_machine.py	/^  def negation(self):$/;"	m	class:Event
negativeBinomial	interfaces/sim_spark/Random.h	/^   int negativeBinomial( int s, float p )   \/\/ Negative Binomial$/;"	f	class:Random
neglect_factor_x	core/vision/Union_find.h	/^		int neglect_factor_x;$/;"	m	class:MergeBlob
neglect_factor_y	core/vision/Union_find.h	/^		int neglect_factor_y;$/;"	m	class:MergeBlob
neurons	lib/alglib/dataanalysis.h	/^    ae_vector neurons;$/;"	m	struct:alglib_impl::__anon44
neurons	lib/alglib/dataanalysis.h	/^    ae_vector neurons;$/;"	m	struct:alglib_impl::__anon50
newTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::newTable(Camera::Type camera) {$/;"	f	class:VisionWindow
newTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::newTable(Camera::Type camera) {$/;"	f	class:VisionWindow
new_command_	core/memory/WalkRequestBlock.h	/^  bool new_command_;$/;"	m	struct:WalkRequestBlock
new_group_	build/include/tool/LogEditorWindow.h	/^    AnnotationGroup *new_group_, *loaded_group_;$/;"	m	class:LogEditorWindow
new_group_	tools/UTNaoTool/LogEditorWindow.h	/^    AnnotationGroup *new_group_, *loaded_group_;$/;"	m	class:LogEditorWindow
new_head_	core/memory/KickRequestBlock.h	/^  bool new_head_;$/;"	m	struct:KickRequestBlock
new_localvar	lib/lua/src/lparser.c	/^static void new_localvar (LexState *ls, TString *name, int n) {$/;"	f	file:
new_localvarliteral	lib/lua/src/lparser.c	/^#define new_localvarliteral(/;"	d	file:
new_ptr	lib/zlib/zutil.c	/^    voidpf new_ptr;$/;"	m	struct:ptr_table_s	file:
new_result	core/sensor/ButtonModule.h	/^    bool new_result;$/;"	m	struct:ButtonModule::ButtonInfo
newfenv	lib/lua/src/liolib.c	/^static void newfenv (lua_State *L, lua_CFunction cls) {$/;"	f	file:
newfile	lib/lua/src/liolib.c	/^static FILE **newfile (lua_State *L) {$/;"	f	file:
newkey	lib/lua/src/ltable.c	/^static TValue *newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f	file:
newlstr	lib/lua/src/lstring.c	/^static TString *newlstr (lua_State *L, const char *str, size_t l,$/;"	f	file:
next	core/motion/rswalk2014/WalkCycle.cpp	/^void WalkCycle::next() {$/;"	f	class:WalkCycle
next	lib/lua/src/llex.c	/^#define next(/;"	d	file:
next	lib/lua/src/lobject.h	/^      struct UpVal *next;$/;"	m	struct:UpVal::__anon90::__anon91	typeref:struct:UpVal::__anon90::__anon91::UpVal
next	lib/lua/src/lobject.h	/^    struct Node *next;  \/* for chaining *\/$/;"	m	struct:TKey::__anon92	typeref:struct:TKey::__anon92::Node
next	lib/zlib/gzguts.h	/^    unsigned char *next;    \/* next output data to deliver or write *\/$/;"	m	struct:__anon135
next	lib/zlib/inflate.h	/^    code FAR *next;             \/* next available space in codes[] *\/$/;"	m	struct:inflate_state
nextFootSwitchT	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float nextFootSwitchT;                                  \/\/ next time-point at which to change support foot$/;"	m	class:Walk2014Generator
nextSnapshot	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::nextSnapshot() {$/;"	f	class:UTMainWnd
nextSnapshot	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::nextSnapshot() {$/;"	f	class:UTMainWnd
next_head_time	core/python/behaviors/win.py	/^next_head_time = 0$/;"	v
next_in	lib/zlib/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s
next_out	lib/zlib/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
next_ptr	lib/zlib/zutil.c	/^local int next_ptr = 0;$/;"	v
next_stand_frame_	core/MotionCore.h	/^  unsigned int next_stand_frame_;$/;"	m	class:MotionCore
nfev	lib/alglib/alglibinternal.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon22
nfev	lib/alglib/diffequations.h	/^    ae_int_t &nfev;$/;"	m	class:alglib::odesolverreport
nfev	lib/alglib/diffequations.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon52
nfev	lib/alglib/integration.h	/^    ae_int_t &nfev;$/;"	m	class:alglib::autogkreport
nfev	lib/alglib/integration.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon53
nfev	lib/alglib/integration.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon55
nfev	lib/alglib/optimization.h	/^    ae_int_t &nfev;$/;"	m	class:alglib::minasareport
nfev	lib/alglib/optimization.h	/^    ae_int_t &nfev;$/;"	m	class:alglib::minbleicreport
nfev	lib/alglib/optimization.h	/^    ae_int_t &nfev;$/;"	m	class:alglib::mincgreport
nfev	lib/alglib/optimization.h	/^    ae_int_t &nfev;$/;"	m	class:alglib::minlbfgsreport
nfev	lib/alglib/optimization.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon69
nfev	lib/alglib/optimization.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon70
nfev	lib/alglib/optimization.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon75
nfev	lib/alglib/optimization.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon76
nfev	lib/alglib/optimization.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon77
nfev	lib/alglib/optimization.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon78
nfev	lib/alglib/optimization.h	/^    ae_int_t nfev;$/;"	m	struct:alglib_impl::__anon80
nfunc	lib/alglib/optimization.h	/^    ae_int_t &nfunc;$/;"	m	class:alglib::minlmreport
nfunc	lib/alglib/optimization.h	/^    ae_int_t nfunc;$/;"	m	struct:alglib_impl::__anon74
nfunc	lib/alglib/solvers.h	/^    ae_int_t &nfunc;$/;"	m	class:alglib::nleqreport
nfunc	lib/alglib/solvers.h	/^    ae_int_t nfunc;$/;"	m	struct:alglib_impl::__anon84
ngcotouv	lib/lua/src/lstate.h	/^#define ngcotouv(/;"	d
ngenerator_	core/common/Random.h	/^    std::function<double()> ngenerator_;$/;"	m	class:Random
ngrad	lib/alglib/dataanalysis.h	/^    ae_int_t &ngrad;$/;"	m	class:alglib::mlpreport
ngrad	lib/alglib/dataanalysis.h	/^    ae_int_t &ngrad;$/;"	m	class:alglib::mnlreport
ngrad	lib/alglib/dataanalysis.h	/^    ae_int_t ngrad;$/;"	m	struct:alglib_impl::__anon47
ngrad	lib/alglib/dataanalysis.h	/^    ae_int_t ngrad;$/;"	m	struct:alglib_impl::__anon48
ngrad	lib/alglib/optimization.h	/^    ae_int_t &ngrad;$/;"	m	class:alglib::minlmreport
ngrad	lib/alglib/optimization.h	/^    ae_int_t ngrad;$/;"	m	struct:alglib_impl::__anon74
nh	lib/lua/src/lparser.c	/^  int nh;  \/* total number of `record' elements *\/$/;"	m	struct:ConsControl	file:
nhess	lib/alglib/dataanalysis.h	/^    ae_int_t &nhess;$/;"	m	class:alglib::mlpreport
nhess	lib/alglib/dataanalysis.h	/^    ae_int_t &nhess;$/;"	m	class:alglib::mnlreport
nhess	lib/alglib/dataanalysis.h	/^    ae_int_t nhess;$/;"	m	struct:alglib_impl::__anon47
nhess	lib/alglib/dataanalysis.h	/^    ae_int_t nhess;$/;"	m	struct:alglib_impl::__anon48
nhess	lib/alglib/optimization.h	/^    ae_int_t &nhess;$/;"	m	class:alglib::minlmreport
nhess	lib/alglib/optimization.h	/^    ae_int_t nhess;$/;"	m	struct:alglib_impl::__anon74
nice_length	lib/zlib/deflate.c	/^   ush nice_length; \/* quit search above this match length *\/$/;"	m	struct:config_s	file:
nice_match	lib/zlib/deflate.h	/^    int nice_match; \/* Stop searching when current match exceeds this *\/$/;"	m	struct:internal_state
nilK	lib/lua/src/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nin	lib/alglib/dataanalysis.h	/^    ae_int_t nin;$/;"	m	struct:alglib_impl::__anon50
nintervals	lib/alglib/integration.h	/^    ae_int_t &nintervals;$/;"	m	class:alglib::autogkreport
nintervals	lib/alglib/integration.h	/^    ae_int_t nintervals;$/;"	m	struct:alglib_impl::__anon53
nintervals	lib/alglib/integration.h	/^    ae_int_t nintervals;$/;"	m	struct:alglib_impl::__anon55
njac	lib/alglib/optimization.h	/^    ae_int_t &njac;$/;"	m	class:alglib::minlmreport
njac	lib/alglib/optimization.h	/^    ae_int_t njac;$/;"	m	struct:alglib_impl::__anon74
njac	lib/alglib/solvers.h	/^    ae_int_t &njac;$/;"	m	class:alglib::nleqreport
njac	lib/alglib/solvers.h	/^    ae_int_t njac;$/;"	m	struct:alglib_impl::__anon84
nk	lib/lua/src/lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anon92
nk	lib/lua/src/lparser.h	/^  int nk;  \/* number of elements in `k' *\/$/;"	m	struct:FuncState
nlambda	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  double nlambda;$/;"	m	class:UnscentedKalmanFilter
nlen	lib/zlib/inflate.h	/^    unsigned nlen;              \/* number of length code lengths *\/$/;"	m	struct:inflate_state
nleq_armijomaxfev	lib/alglib/solvers.cpp	/^static ae_int_t nleq_armijomaxfev = 20;$/;"	m	namespace:alglib_impl	file:
nleq_clearrequestfields	lib/alglib/solvers.cpp	/^static void nleq_clearrequestfields(nleqstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
nleq_decreaselambda	lib/alglib/solvers.cpp	/^static void nleq_decreaselambda(double* lambdav,$/;"	f	namespace:alglib_impl
nleq_increaselambda	lib/alglib/solvers.cpp	/^static ae_bool nleq_increaselambda(double* lambdav,$/;"	f	namespace:alglib_impl
nleqcreatelm	lib/alglib/solvers.cpp	/^void nleqcreatelm(ae_int_t n,$/;"	f	namespace:alglib_impl
nleqcreatelm	lib/alglib/solvers.cpp	/^void nleqcreatelm(const ae_int_t m, const real_1d_array &x, nleqstate &state)$/;"	f	namespace:alglib
nleqcreatelm	lib/alglib/solvers.cpp	/^void nleqcreatelm(const ae_int_t n, const ae_int_t m, const real_1d_array &x, nleqstate &state)$/;"	f	namespace:alglib
nleqiteration	lib/alglib/solvers.cpp	/^ae_bool nleqiteration(nleqstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
nleqiteration	lib/alglib/solvers.cpp	/^bool nleqiteration(const nleqstate &state)$/;"	f	namespace:alglib
nleqreport	lib/alglib/solvers.cpp	/^nleqreport::nleqreport() : _nleqreport_owner() ,iterationscount(p_struct->iterationscount),nfunc(p_struct->nfunc),njac(p_struct->njac),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::nleqreport
nleqreport	lib/alglib/solvers.cpp	/^nleqreport::nleqreport(const nleqreport &rhs):_nleqreport_owner(rhs) ,iterationscount(p_struct->iterationscount),nfunc(p_struct->nfunc),njac(p_struct->njac),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::nleqreport
nleqreport	lib/alglib/solvers.h	/^class nleqreport : public _nleqreport_owner$/;"	c	namespace:alglib
nleqreport	lib/alglib/solvers.h	/^} nleqreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon84
nleqrestartfrom	lib/alglib/solvers.cpp	/^void nleqrestartfrom(const nleqstate &state, const real_1d_array &x)$/;"	f	namespace:alglib
nleqrestartfrom	lib/alglib/solvers.cpp	/^void nleqrestartfrom(nleqstate* state,$/;"	f	namespace:alglib_impl
nleqresults	lib/alglib/solvers.cpp	/^void nleqresults(const nleqstate &state, real_1d_array &x, nleqreport &rep)$/;"	f	namespace:alglib
nleqresults	lib/alglib/solvers.cpp	/^void nleqresults(nleqstate* state,$/;"	f	namespace:alglib_impl
nleqresultsbuf	lib/alglib/solvers.cpp	/^void nleqresultsbuf(const nleqstate &state, real_1d_array &x, nleqreport &rep)$/;"	f	namespace:alglib
nleqresultsbuf	lib/alglib/solvers.cpp	/^void nleqresultsbuf(nleqstate* state,$/;"	f	namespace:alglib_impl
nleqsetcond	lib/alglib/solvers.cpp	/^void nleqsetcond(const nleqstate &state, const double epsf, const ae_int_t maxits)$/;"	f	namespace:alglib
nleqsetcond	lib/alglib/solvers.cpp	/^void nleqsetcond(nleqstate* state,$/;"	f	namespace:alglib_impl
nleqsetstpmax	lib/alglib/solvers.cpp	/^void nleqsetstpmax(const nleqstate &state, const double stpmax)$/;"	f	namespace:alglib
nleqsetstpmax	lib/alglib/solvers.cpp	/^void nleqsetstpmax(nleqstate* state, double stpmax, ae_state *_state)$/;"	f	namespace:alglib_impl
nleqsetxrep	lib/alglib/solvers.cpp	/^void nleqsetxrep(const nleqstate &state, const bool needxrep)$/;"	f	namespace:alglib
nleqsetxrep	lib/alglib/solvers.cpp	/^void nleqsetxrep(nleqstate* state, ae_bool needxrep, ae_state *_state)$/;"	f	namespace:alglib_impl
nleqsolve	lib/alglib/solvers.cpp	/^void nleqsolve(nleqstate &state,$/;"	f	namespace:alglib
nleqstate	lib/alglib/solvers.cpp	/^nleqstate::nleqstate() : _nleqstate_owner() ,needf(p_struct->needf),needfij(p_struct->needfij),xupdated(p_struct->xupdated),f(p_struct->f),fi(&p_struct->fi),j(&p_struct->j),x(&p_struct->x)$/;"	f	class:alglib::nleqstate
nleqstate	lib/alglib/solvers.cpp	/^nleqstate::nleqstate(const nleqstate &rhs):_nleqstate_owner(rhs) ,needf(p_struct->needf),needfij(p_struct->needfij),xupdated(p_struct->xupdated),f(p_struct->f),fi(&p_struct->fi),j(&p_struct->j),x(&p_struct->x)$/;"	f	class:alglib::nleqstate
nleqstate	lib/alglib/solvers.h	/^class nleqstate : public _nleqstate_owner$/;"	c	namespace:alglib
nleqstate	lib/alglib/solvers.h	/^} nleqstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon83
nlocvars	lib/lua/src/lparser.h	/^  short nlocvars;  \/* number of elements in `locvars' *\/$/;"	m	struct:FuncState
nmain	lib/alglib/optimization.h	/^    ae_int_t nmain;$/;"	m	struct:alglib_impl::__anon79
nmsgs	core/imageCapture/i2c-dev.h	/^	int nmsgs;		\/* number of i2c_msgs *\/$/;"	m	struct:i2c_rdwr_ioctl_data
nmv	lib/alglib/optimization.h	/^    ae_int_t &nmv;$/;"	m	class:alglib::minqpreport
nmv	lib/alglib/optimization.h	/^    ae_int_t nmv;$/;"	m	struct:alglib_impl::__anon72
noCopyConstructors	build/luaswig/generateSwig.py	/^noCopyConstructors = [$/;"	v
noWalk	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::noWalk() {$/;"	f	class:WalkRequestBlock
node	lib/lua/src/lobject.h	/^  Node *node;$/;"	m	struct:Table
node_map	lib/yaml-cpp/include/yaml-cpp/node.h	/^		typedef std::map<Node *, Node *, ltnode> node_map;$/;"	t	class:YAML::Node
node_seq	lib/yaml-cpp/include/yaml-cpp/node.h	/^		typedef std::vector<Node *> node_seq;$/;"	t	class:YAML::Node
nodes	lib/alglib/alglibmisc.h	/^    ae_vector nodes;$/;"	m	struct:alglib_impl::__anon25
noise	tools/behaviorSim/cma.py	/^    def noise(self, x, func=sphere, fac=10, expon=1):$/;"	m	class:FitnessFunctions
noiseC	tools/behaviorSim/cma.py	/^    def noiseC(self, x, func=sphere, fac=10, expon=0.8):$/;"	m	class:FitnessFunctions
noisysphere	tools/behaviorSim/cma.py	/^    def noisysphere(self, x, noise=4.0, cond=1.0):$/;"	m	class:FitnessFunctions
noncopyable	lib/yaml-cpp/include/yaml-cpp/noncopyable.h	/^		noncopyable() {}$/;"	f	class:YAML::noncopyable
noncopyable	lib/yaml-cpp/include/yaml-cpp/noncopyable.h	/^	class YAML_CPP_API noncopyable$/;"	c	namespace:YAML
none	core/motion/rswalk2014/RSWalkModule2014.cpp	/^    none$/;"	e	enum:FootSensorRegion	file:
norm	tools/behaviorSim/cma.py	/^        def norm(vec, expo=2):$/;"	m	class:Misc.MathHelperFunctions
normal	interfaces/sim_spark/Random.h	/^   float normal( float mu = 0., float sigma = 1. )   \/\/ Normal$/;"	f	class:Random
normalSkew	tools/behaviorSim/cma.py	/^    def normalSkew(self, f):$/;"	m	class:FitnessFunctions
normaldistribution	lib/alglib/specialfunctions.cpp	/^double normaldistribution(const double x)$/;"	f	namespace:alglib
normaldistribution	lib/alglib/specialfunctions.cpp	/^double normaldistribution(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
normaliseTheta	core/motion/rswalk2014/utils/basic_maths.hpp	/^inline static float normaliseTheta(float theta) {$/;"	f
normalize	core/math/Common.h	/^template <class V> inline V normalize(const V& data)$/;"	f
normalize	core/math/Geometry.cpp	/^Point2D Point2D::normalize()$/;"	f	class:Point2D
normalize	core/math/Vector2.h	/^  Vector2<V> normalize()$/;"	f	class:Vector2
normalize	core/math/Vector2.h	/^  Vector2<V> normalize(V len)$/;"	f	class:Vector2
normalize	core/math/Vector3.h	/^  Vector3<V> normalize()$/;"	f	class:Vector3
normalize	core/math/Vector3.h	/^  Vector3<V> normalize(V len)$/;"	f	class:Vector3
normalize	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      inline void normalize() {$/;"	f	class:XYZ_Coord
normalizeAngle	core/math/Geometry.cpp	/^AngRad normalizeAngle( AngRad ang )$/;"	f
normalizeAngle	core/python/geometry.py	/^def normalizeAngle(angle):$/;"	f
normalizeAngleAroundVal	core/math/Geometry.cpp	/^AngRad normalizeAngleAroundVal( AngRad ang, AngRad center )$/;"	f
normalizeAngleNinety	core/math/Geometry.cpp	/^AngRad normalizeAngleNinety( AngRad ang )$/;"	f
normalizeAngleNinetyAroundVal	core/math/Geometry.cpp	/^AngRad normalizeAngleNinetyAroundVal( AngRad ang, AngRad center )$/;"	f
normtype	lib/alglib/alglibmisc.h	/^    ae_int_t normtype;$/;"	m	struct:alglib_impl::__anon25
not	tools/behaviorSim/cma.py	/^    print('  Could not import matplotlib.pylab, therefore ``cma.plot()`` etc. is not available')$/;"	i
not	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
not	tools/behaviorSim/cma.py	/^import time  # not really essential$/;"	i
notANumber	core/math/Geometry.cpp	/^bool notANumber( float num ) {$/;"	f
notLive	interfaces/memory_test/main.cpp	/^int notLive() {$/;"	f
notail	lib/lua/src/lua.c	/^#define notail(/;"	d	file:
notify_one	core/memory/Lock.cpp	/^void Lock::notify_one() {$/;"	f	class:Lock
nout	lib/alglib/dataanalysis.h	/^    ae_int_t nout;$/;"	m	struct:alglib_impl::__anon50
np	lib/lua/src/lparser.h	/^  int np;  \/* number of elements in `p' *\/$/;"	m	struct:FuncState
np	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
nplayers	build/include/tool/simulation/BehaviorSimulation.h	/^    int nplayers;$/;"	m	class:BehaviorSimulation
nplayers	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    int nplayers;$/;"	m	class:BehaviorSimulation
npoints	lib/alglib/interpolation.h	/^    ae_int_t npoints;$/;"	m	struct:alglib_impl::__anon63
nresults	lib/lua/src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
nresults	lib/lua/src/lstate.h	/^  int nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo
nslack	lib/alglib/optimization.h	/^    ae_int_t nslack;$/;"	m	struct:alglib_impl::__anon79
ntrees	lib/alglib/dataanalysis.h	/^    ae_int_t ntrees;$/;"	m	struct:alglib_impl::__anon39
nu	lib/alglib/optimization.h	/^    double nu;$/;"	m	struct:alglib_impl::__anon73
nucosm1	lib/alglib/alglibinternal.cpp	/^double nucosm1(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
nuexpm1	lib/alglib/alglibinternal.cpp	/^double nuexpm1(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
null	core/motion/SpecialMotionParser.h	/^  null=0,$/;"	e	enum:Motions::mType
null	lib/yaml-cpp/include/yaml-cpp/mark.h	/^		static const Mark null() { return Mark(-1, -1, -1); }$/;"	f	struct:YAML::Mark
nulog1p	lib/alglib/alglibinternal.cpp	/^double nulog1p(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
numCrosses	core/motion/GetupModule.h	/^  int numCrosses;$/;"	m	class:GetupModule
numEvals	tools/behaviorSim/runJob.py	/^numEvals = int(sys.argv[3])$/;"	v
numFiles	build/include/tool/FilesWindow.h	/^    int numFiles;$/;"	m	class:FilesWindow
numFiles	tools/UTNaoTool/FilesWindow.h	/^    int numFiles;$/;"	m	class:FilesWindow
numFramesNotKickOff	core/memory/BehaviorBlock.h	/^  int numFramesNotKickOff;$/;"	m	struct:BehaviorBlock
numHalves	build/include/tool/simulation/BehaviorSimulation.h	/^    int numHalves;$/;"	m	class:BehaviorSimulation
numHalves	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    int numHalves;$/;"	m	class:BehaviorSimulation
numLines	core/vision/structures/RobotCandidate.h	/^  int numLines;$/;"	m	struct:RobotCandidate
numOfDataBytes	core/communications/SPLStandardMessage.h	/^  uint16_t numOfDataBytes;$/;"	m	struct:SPLStandardMessage
numOfMeasurements	core/math/GaussNewtonOptimizer.h	/^  const unsigned int numOfMeasurements; \/**< The number of measurements. *\/$/;"	m	class:GaussNewtonOptimizer
numRestarts	core/motion/GetupModule.h	/^  int numRestarts;$/;"	m	class:GetupModule
numSonarValues	build/include/tool/SensorWindow.h	/^  int numSonarValues;$/;"	m	class:SensorWindow
numSonarValues	tools/UTNaoTool/SensorWindow.h	/^  int numSonarValues;$/;"	m	class:SensorWindow
numStates	core/python/state_machine.py	/^  def numStates(self):$/;"	m	class:SimpleStateMachine
numVals	tools/testStep.py	/^numVals = 1000$/;"	v
numVals	tools/testStepSide.py	/^numVals = 1000$/;"	v
num_averaged_sensor_pen_frames_	core/motion/WalkEngineParameters.h	/^  int num_averaged_sensor_pen_frames_;$/;"	m	struct:WalkEngineParameters
num_averaged_sensor_zmp_frames_	core/motion/WalkEngineParameters.h	/^  int num_averaged_sensor_zmp_frames_;$/;"	m	struct:WalkEngineParameters
num_beacons_required	core/python/behaviors/walk_to_center.py	/^num_beacons_required = 2$/;"	v
num_beacons_required	core/python/behaviors/walk_to_center_2.py	/^num_beacons_required = 3$/;"	v
num_double_support_frames_	core/memory/WalkEngineBlock.h	/^  unsigned int num_double_support_frames_;$/;"	m	struct:WalkEngineBlock
num_of_axis	build/include/tool/joystickxbox.cpp	/^int joy_fd, *axis=NULL, num_of_axis=0, num_of_buttons=0;$/;"	v
num_of_axis	tools/UTNaoTool/joystickxbox.cpp	/^int joy_fd, *axis=NULL, num_of_axis=0, num_of_buttons=0;$/;"	v
num_of_buttons	build/include/tool/joystickxbox.cpp	/^int joy_fd, *axis=NULL, num_of_axis=0, num_of_buttons=0;$/;"	v
num_of_buttons	tools/UTNaoTool/joystickxbox.cpp	/^int joy_fd, *axis=NULL, num_of_axis=0, num_of_buttons=0;$/;"	v
num_orientations	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   num_orientations$/;"	e	enum:orientation_t
num_pts_	core/math/Spline3D.h	/^  int num_pts_;$/;"	m	class:Spline3D
num_stance_spline_pts	core/motion/KickParameters.h	/^  int num_stance_spline_pts;$/;"	m	struct:KickParameters
num_step_frames_	core/memory/WalkEngineBlock.h	/^  unsigned int num_step_frames_;$/;"	m	struct:WalkEngineBlock
num_swing_spline_pts	core/motion/KickParameters.h	/^  int num_swing_spline_pts;$/;"	m	struct:KickParameters
num_times_sent	core/python/behaviors/win.py	/^num_times_sent = 0$/;"	v
numberOfEntries	core/common/RingBuffer.h	/^    int numberOfEntries;$/;"	m	class:RingBuffer
numberOfEntries	core/common/RingBufferWithSum.h	/^    int numberOfEntries;$/;"	m	class:RingBufferWithSum
numberOfEntries	core/common/RingQueue.h	/^    int numberOfEntries;$/;"	m	class:RingQueue
numberOfEntries	core/common/RingQueueWithSum.h	/^    int numberOfEntries;$/;"	m	class:RingQueueWithSum
numints	lib/lua/src/ltable.c	/^#define numints	/;"	d	file:
numparams	lib/lua/src/lobject.h	/^  lu_byte numparams;$/;"	m	struct:Proto
numpy	core/python/behaviors/Movement.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
numpy	core/python/behaviors/custom_kick.py	/^import numpy $/;"	i
numpy	core/python/behaviors/head_tracking.py	/^import math, numpy$/;"	i
numpy	core/python/behaviors/keeper_3.py	/^import numpy$/;"	i
numpy	core/python/behaviors/pid_distance_angle.py	/^import math, numpy$/;"	i
numpy	core/python/behaviors/walk_to_center.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
numpy	core/python/behaviors/walk_to_center_2.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
numpy	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
numpy	data/ballfit.py	/^import numpy$/;"	i
numpy	data/goalfit.py	/^import numpy$/;"	i
numusearray	lib/lua/src/ltable.c	/^static int numusearray (const Table *t, int *nums) {$/;"	f	file:
numusehash	lib/lua/src/ltable.c	/^static int numusehash (const Table *t, int *nums, int *pnasize) {$/;"	f	file:
nups	lib/lua/src/lobject.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:Proto
nups	lib/lua/src/lua.h	/^  int nups;		\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug
nuse	lib/lua/src/lstate.h	/^  lu_int32 nuse;  \/* number of elements *\/$/;"	m	struct:stringtable
nval	lib/lua/src/lparser.h	/^    lua_Number nval;$/;"	m	union:expdesc::__anon96
nvalue	lib/lua/src/lobject.h	/^#define nvalue(/;"	d
nvars	lib/alglib/dataanalysis.h	/^    ae_int_t nvars;$/;"	m	struct:alglib_impl::__anon39
nw	lib/alglib/interpolation.h	/^    ae_int_t nw;$/;"	m	struct:alglib_impl::__anon56
nwbuf	lib/alglib/dataanalysis.h	/^    ae_vector nwbuf;$/;"	m	struct:alglib_impl::__anon44
nweights	lib/alglib/interpolation.h	/^    ae_int_t nweights;$/;"	m	struct:alglib_impl::__anon63
nx	lib/alglib/alglibmisc.h	/^    ae_int_t nx;$/;"	m	struct:alglib_impl::__anon25
nx	lib/alglib/interpolation.h	/^    ae_int_t nx;$/;"	m	struct:alglib_impl::__anon56
ny	lib/alglib/alglibmisc.h	/^    ae_int_t ny;$/;"	m	struct:alglib_impl::__anon25
oT	build/include/tool/calibration/JointCalibrator.h	/^    float oX, oY, oZ, oT;$/;"	m	class:JCSettings
oT	tools/UTNaoTool/calibration/JointCalibrator.h	/^    float oX, oY, oZ, oT;$/;"	m	class:JCSettings
oX	build/include/tool/calibration/JointCalibrator.h	/^    float oX, oY, oZ, oT;$/;"	m	class:JCSettings
oX	tools/UTNaoTool/calibration/JointCalibrator.h	/^    float oX, oY, oZ, oT;$/;"	m	class:JCSettings
oY	build/include/tool/calibration/JointCalibrator.h	/^    float oX, oY, oZ, oT;$/;"	m	class:JCSettings
oY	tools/UTNaoTool/calibration/JointCalibrator.h	/^    float oX, oY, oZ, oT;$/;"	m	class:JCSettings
oZ	build/include/tool/calibration/JointCalibrator.h	/^    float oX, oY, oZ, oT;$/;"	m	class:JCSettings
oZ	tools/UTNaoTool/calibration/JointCalibrator.h	/^    float oX, oY, oZ, oT;$/;"	m	class:JCSettings
obj2gco	lib/lua/src/lstate.h	/^#define obj2gco(/;"	d
object	core/math/GaussNewtonOptimizer.h	/^  const C& object; \/**< The object used to call the error function. *\/$/;"	m	class:GaussNewtonOptimizer
objectPoints_	build/include/tool/calibration/IntrinsicCalibrator.h	/^    std::vector<std::vector<cv::Point3f> > objectPoints_;$/;"	m	class:IntrinsicCalibrator
objectPoints_	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^    std::vector<std::vector<cv::Point3f> > objectPoints_;$/;"	m	class:IntrinsicCalibrator
objectsGL	build/include/tool/UTOpenGL/GLDrawer.h	/^    ObjectsGL objectsGL;$/;"	m	class:GLDrawer
objectsGL	build/include/tool/UTOpenGL/LocalizationGL.h	/^  ObjectsGL objectsGL;$/;"	m	class:LocalizationGL
objectsGL	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    ObjectsGL objectsGL;$/;"	m	class:GLDrawer
objectsGL	tools/UTNaoTool/UTOpenGL/LocalizationGL.h	/^  ObjectsGL objectsGL;$/;"	m	class:LocalizationGL
objects_	core/memory/WorldObjectBlock.h	/^  WorldObject objects_[NUM_WORLD_OBJS];$/;"	m	struct:WorldObjectBlock
obs_object_	build/include/tool/simulation/ObservationGenerator.h	/^    WorldObjectBlock *gt_object_, *obs_object_;$/;"	m	class:ObservationGenerator
obs_object_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    WorldObjectBlock *gt_object_, *obs_object_;$/;"	m	class:ObservationGenerator
obs_objects_	build/include/tool/simulation/ObservationGenerator.h	/^    std::vector<WorldObjectBlock*> obs_objects_;$/;"	m	class:ObservationGenerator
obs_objects_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    std::vector<WorldObjectBlock*> obs_objects_;$/;"	m	class:ObservationGenerator
observationUpdate	core/motion/rswalk2014/BodyModel.cpp	/^void BodyModel::observationUpdate(Odometry *odometry, const SensorValues &sensors) {$/;"	f	class:BodyModel
odesolver_odesolverinit	lib/alglib/diffequations.cpp	/^static void odesolver_odesolverinit(ae_int_t solvertype,$/;"	f	namespace:alglib_impl
odesolver_odesolvermaxgrow	lib/alglib/diffequations.cpp	/^static double odesolver_odesolvermaxgrow = 3.0;$/;"	m	namespace:alglib_impl	file:
odesolver_odesolvermaxshrink	lib/alglib/diffequations.cpp	/^static double odesolver_odesolvermaxshrink = 10.0;$/;"	m	namespace:alglib_impl	file:
odesolveriteration	lib/alglib/diffequations.cpp	/^ae_bool odesolveriteration(odesolverstate* state, ae_state *_state)$/;"	f	namespace:alglib_impl
odesolveriteration	lib/alglib/diffequations.cpp	/^bool odesolveriteration(const odesolverstate &state)$/;"	f	namespace:alglib
odesolverreport	lib/alglib/diffequations.cpp	/^odesolverreport::odesolverreport() : _odesolverreport_owner() ,nfev(p_struct->nfev),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::odesolverreport
odesolverreport	lib/alglib/diffequations.cpp	/^odesolverreport::odesolverreport(const odesolverreport &rhs):_odesolverreport_owner(rhs) ,nfev(p_struct->nfev),terminationtype(p_struct->terminationtype)$/;"	f	class:alglib::odesolverreport
odesolverreport	lib/alglib/diffequations.h	/^class odesolverreport : public _odesolverreport_owner$/;"	c	namespace:alglib
odesolverreport	lib/alglib/diffequations.h	/^} odesolverreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon52
odesolverresults	lib/alglib/diffequations.cpp	/^void odesolverresults(const odesolverstate &state, ae_int_t &m, real_1d_array &xtbl, real_2d_array &ytbl, odesolverreport &rep)$/;"	f	namespace:alglib
odesolverresults	lib/alglib/diffequations.cpp	/^void odesolverresults(odesolverstate* state,$/;"	f	namespace:alglib_impl
odesolverrkck	lib/alglib/diffequations.cpp	/^void odesolverrkck(\/* Real    *\/ ae_vector* y,$/;"	f	namespace:alglib_impl
odesolverrkck	lib/alglib/diffequations.cpp	/^void odesolverrkck(const real_1d_array &y, const ae_int_t n, const real_1d_array &x, const ae_int_t m, const double eps, const double h, odesolverstate &state)$/;"	f	namespace:alglib
odesolverrkck	lib/alglib/diffequations.cpp	/^void odesolverrkck(const real_1d_array &y, const real_1d_array &x, const double eps, const double h, odesolverstate &state)$/;"	f	namespace:alglib
odesolversolve	lib/alglib/diffequations.cpp	/^void odesolversolve(odesolverstate &state,$/;"	f	namespace:alglib
odesolverstate	lib/alglib/diffequations.cpp	/^odesolverstate::odesolverstate() : _odesolverstate_owner() ,needdy(p_struct->needdy),y(&p_struct->y),dy(&p_struct->dy),x(p_struct->x)$/;"	f	class:alglib::odesolverstate
odesolverstate	lib/alglib/diffequations.cpp	/^odesolverstate::odesolverstate(const odesolverstate &rhs):_odesolverstate_owner(rhs) ,needdy(p_struct->needdy),y(&p_struct->y),dy(&p_struct->dy),x(p_struct->x)$/;"	f	class:alglib::odesolverstate
odesolverstate	lib/alglib/diffequations.h	/^class odesolverstate : public _odesolverstate_owner$/;"	c	namespace:alglib
odesolverstate	lib/alglib/diffequations.h	/^} odesolverstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon51
odom_command	core/common/ToolPacket.h	/^  } odom_command;$/;"	m	struct:ToolPacket	typeref:struct:ToolPacket::__anon10
odometry	core/memory/MemoryCache.h	/^    OdometryBlock* odometry;$/;"	m	class:MemoryCache
odometry	core/python/memory.py	/^  def odometry(): return core.pythonC.odometry_$/;"	f	function:init
odometry	core/python/util.py	/^  game_state, behavior_mem$/;"	i
odometryAccumulator	core/memory/DelayedLocalizationBlock.h	/^  Pose2D odometryAccumulator; \/\/ accumulate the odometry, intermediate result$/;"	m	struct:DelayedLocalizationBlock
odometryBuffer	core/motion/rswalk2014/RSWalkModule2014.h	/^	std::vector<Odometry> odometryBuffer; $/;"	m	class:RSWalkModule2014
odometryDisplacement	core/memory/DelayedLocalizationBlock.h	/^  Pose2D odometryDisplacement; \/\/ odometry displacement since the processing started, final result$/;"	m	struct:DelayedLocalizationBlock
odometryErrorFactor	build/include/tool/simulation/SimulatedPlayer.h	/^  float odometryErrorFactor;$/;"	m	class:SimulatedPlayer
odometryErrorFactor	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float odometryErrorFactor;$/;"	m	class:SimulatedPlayer
odometry_	build/include/tool/MotionGLWidget.h	/^  OdometryBlock* odometry_;$/;"	m	class:MotionGLWidget
odometry_	build/include/tool/MotionSimulation.h	/^  OdometryBlock *odometry_;$/;"	m	class:MotionSimulation
odometry_	core/InterpreterModule.h	/^    OdometryBlock *odometry_;$/;"	m	class:InterpreterModule
odometry_	core/MotionCore.h	/^  OdometryBlock* odometry_;$/;"	m	class:MotionCore
odometry_	core/communications/CommunicationModule.h	/^  OdometryBlock *odometry_;$/;"	m	class:CommunicationModule
odometry_	core/motion/SpecialMotionModule.h	/^  OdometryBlock* odometry_;$/;"	m	class:SpecialMotionModule
odometry_	core/motion/rswalk2014/RSWalkModule2014.h	/^        OdometryBlock *odometry_;$/;"	m	class:RSWalkModule2014
odometry_	tools/UTNaoTool/MotionGLWidget.h	/^  OdometryBlock* odometry_;$/;"	m	class:MotionGLWidget
odometry_	tools/UTNaoTool/MotionSimulation.h	/^  OdometryBlock *odometry_;$/;"	m	class:MotionSimulation
odometry_disp	core/motion/rswalk2014/RSWalkModule2014.h	/^	Odometry odometry_disp;$/;"	m	class:RSWalkModule2014
odometry_fwd_offset_	core/memory/WalkRequestBlock.h	/^  float odometry_fwd_offset_;$/;"	m	struct:WalkRequestBlock
odometry_side_offset_	core/memory/WalkRequestBlock.h	/^  float odometry_side_offset_;$/;"	m	struct:WalkRequestBlock
odometry_turn_offset_	core/memory/WalkRequestBlock.h	/^  float odometry_turn_offset_;$/;"	m	struct:WalkRequestBlock
offset	core/common/MassCalibration.h	/^    Vector3<float> offset; \/**< The offset of the center of mass of this limb relative to its hinge. *\/$/;"	m	class:MassCalibration::MassInfo
offset	core/kinematics/TorsoMatrix.h	/^  Pose3D offset; \/**< The estimated offset (including odometry) from last torso matrix to this one. (relative to the torso) *\/$/;"	m	class:TorsoMatrix
offset	core/vision/structures/HorizonLine.h	/^  float offset;$/;"	m	struct:HorizonLine
offset	lib/zlib/inflate.h	/^    unsigned offset;            \/* distance back to copy string from *\/$/;"	m	struct:inflate_state
offset	tools/testStep.py	/^offset = [abs(l - r) for l,r in zip(left,right)]$/;"	v
offset	tools/testStepSide.py	/^offset = []$/;"	v
offsetFromBall	core/memory/BehaviorParamBlock.h	/^  Point2D offsetFromBall;$/;"	m	struct:RolePositionConfig
offsetX	core/motion/rswalk2014/GyroConfig.h	/^    double offsetX;$/;"	m	class:GyroConfig
offsetX	core/motion/rswalk2014/RSWalkModule2014.h	/^	double offsetX = 0.0;$/;"	m	class:RSWalkModule2014
offsetY	core/motion/rswalk2014/GyroConfig.h	/^    double offsetY;$/;"	m	class:GyroConfig
offsetY	core/motion/rswalk2014/RSWalkModule2014.h	/^	double offsetY = 0.0;	$/;"	m	class:RSWalkModule2014
offset_	core/motion/KickParameters.h	/^  float offset_;$/;"	m	struct:KickParameters
offsets	core/memory/LogMetadata.h	/^    std::vector<unsigned int> offsets;$/;"	m	class:LogMetadata
offsets_	build/include/tool/annotations/Selection.h	/^        std::map<int,Point> offsets_;$/;"	m	class:Selection
offsets_	tools/UTNaoTool/annotations/Selection.h	/^        std::map<int,Point> offsets_;$/;"	m	class:Selection
og_	build/include/tool/simulation/LocalizationSimulation.h	/^    ObservationGenerator og_;$/;"	m	class:LocalizationSimulation
og_	build/include/tool/simulation/SimulatedPlayer.h	/^  ObservationGenerator og_;$/;"	m	class:SimulatedPlayer
og_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    ObservationGenerator og_;$/;"	m	class:LocalizationSimulation
og_	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  ObservationGenerator og_;$/;"	m	class:SimulatedPlayer
ok	lib/yaml-cpp/test/spectests.h	/^		bool ok;$/;"	m	struct:Test::TEST
old_exists	core/motion/rswalk2014/ClippedGenerator.hpp	/^      bool old_exists;$/;"	m	class:ClippedGenerator
old_j	core/motion/rswalk2014/ClippedGenerator.hpp	/^      JointValues old_j;$/;"	m	class:ClippedGenerator
on	tools/behaviorSim/cma.py	/^                if 1 < 3:  # import pygsl on the fly$/;"	i
onCircle	core/vision/structures/FieldLine.h	/^  bool onCircle;$/;"	m	struct:FieldLine
onDemand	build/include/tool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
onDemand	tools/UTNaoTool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
onDocIndicator	lib/yaml-cpp/src/scanscalar.h	/^		ACTION onDocIndicator;          \/\/ what do we do if we see a document indicator?$/;"	m	struct:YAML::ScanScalarParams
onLabMachine	bin/behaviorSim	/^from common import runCommand, onLabMachine$/;"	i
onLabMachine	bin/common.py	/^def onLabMachine():$/;"	f
onLabMachine	bin/compile	/^from common import onLabMachine$/;"	i
onLabMachine	bin/tool	/^from common import runCommand, onLabMachine$/;"	i
onLabMachine	build/compile	/^from common import onLabMachine$/;"	i
onTabInIndentation	lib/yaml-cpp/src/scanscalar.h	/^		ACTION onTabInIndentation;      \/\/ what do we do if we see a tab where we should be seeing indentation spaces$/;"	m	struct:YAML::ScanScalarParams
on_actionNew_triggered	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_actionNew_triggered() {$/;"	f	class:color_classifier::ClassificationWindow
on_actionOpen_Bag_triggered	tools/color_classifier/src/main_window.cpp	/^  void MainWindow::on_actionOpen_Bag_triggered() {$/;"	f	class:color_classifier::MainWindow
on_actionOpen_triggered	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_actionOpen_triggered() {$/;"	f	class:color_classifier::ClassificationWindow
on_actionSave_As_triggered	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_actionSave_As_triggered() {$/;"	f	class:color_classifier::ClassificationWindow
on_actionSave_triggered	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_actionSave_triggered() {$/;"	f	class:color_classifier::ClassificationWindow
on_addRadio_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_addRadio_clicked() {$/;"	f	class:color_classifier::ClassificationWindow
on_bigImage_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_bigImage_clicked(int x, int y, int button) {$/;"	f	class:color_classifier::ClassificationWindow
on_bigImage_mouseXY	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_bigImage_mouseXY(int x, int y) {$/;"	f	class:color_classifier::ClassificationWindow
on_blueButton_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_blueButton_clicked() {$/;"	f	class:color_classifier::ClassificationWindow
on_center_	core/memory/ProcessedSonarBlock.h	/^  bool on_center_;$/;"	m	struct:ProcessedSonarBlock
on_colorCombo_currentIndexChanged	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_colorCombo_currentIndexChanged(int index) {$/;"	f	class:color_classifier::ClassificationWindow
on_currentFrameSpin_valueChanged	tools/color_classifier/src/main_window.cpp	/^  void MainWindow::on_currentFrameSpin_valueChanged(int value) {$/;"	f	class:color_classifier::MainWindow
on_deleteRadio_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_deleteRadio_clicked() {$/;"	f	class:color_classifier::ClassificationWindow
on_frameSlider_sliderMoved	tools/color_classifier/src/main_window.cpp	/^  void MainWindow::on_frameSlider_sliderMoved(int value) {$/;"	f	class:color_classifier::MainWindow
on_greenButton_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_greenButton_clicked() {$/;"	f	class:color_classifier::ClassificationWindow
on_left_	core/memory/ProcessedSonarBlock.h	/^  bool on_left_;$/;"	m	struct:ProcessedSonarBlock
on_orangeButton_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_orangeButton_clicked() {$/;"	f	class:color_classifier::ClassificationWindow
on_pinkButton_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_pinkButton_clicked() {$/;"	f	class:color_classifier::ClassificationWindow
on_rawImage_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_rawImage_clicked(int x, int y, int button) {$/;"	f	class:color_classifier::ClassificationWindow
on_right_	core/memory/ProcessedSonarBlock.h	/^  bool on_right_;$/;"	m	struct:ProcessedSonarBlock
on_segImage_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_segImage_clicked(int x, int y, int button) {$/;"	f	class:color_classifier::ClassificationWindow
on_whiteButton_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_whiteButton_clicked() {$/;"	f	class:color_classifier::ClassificationWindow
on_yellowButton_clicked	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::on_yellowButton_clicked() {$/;"	f	class:color_classifier::ClassificationWindow
one_leg_joint_time_	core/memory/KickEngineBlock.h	/^  float one_leg_joint_time_;$/;"	m	struct:KickEngineBlock
one_leg_time_	core/memory/KickEngineBlock.h	/^  float one_leg_time_;$/;"	m	struct:KickEngineBlock
ones	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
onesamplesigntest	lib/alglib/statistics.cpp	/^void onesamplesigntest(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
onesamplesigntest	lib/alglib/statistics.cpp	/^void onesamplesigntest(const real_1d_array &x, const ae_int_t n, const double median, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
onesamplevariancetest	lib/alglib/statistics.cpp	/^void onesamplevariancetest(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
onesamplevariancetest	lib/alglib/statistics.cpp	/^void onesamplevariancetest(const real_1d_array &x, const ae_int_t n, const double variance, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
only	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
onullstream	core/motion/rswalk2014/utils/basic_onullstream.hpp	/^typedef basic_onullstream<char> onullstream;$/;"	t
oobavgce	lib/alglib/dataanalysis.h	/^    double &oobavgce;$/;"	m	class:alglib::dfreport
oobavgce	lib/alglib/dataanalysis.h	/^    double oobavgce;$/;"	m	struct:alglib_impl::__anon40
oobavgerror	lib/alglib/dataanalysis.h	/^    double &oobavgerror;$/;"	m	class:alglib::dfreport
oobavgerror	lib/alglib/dataanalysis.h	/^    double oobavgerror;$/;"	m	struct:alglib_impl::__anon40
oobavgrelerror	lib/alglib/dataanalysis.h	/^    double &oobavgrelerror;$/;"	m	class:alglib::dfreport
oobavgrelerror	lib/alglib/dataanalysis.h	/^    double oobavgrelerror;$/;"	m	struct:alglib_impl::__anon40
oobrelclserror	lib/alglib/dataanalysis.h	/^    double &oobrelclserror;$/;"	m	class:alglib::dfreport
oobrelclserror	lib/alglib/dataanalysis.h	/^    double oobrelclserror;$/;"	m	struct:alglib_impl::__anon40
oobrmserror	lib/alglib/dataanalysis.h	/^    double &oobrmserror;$/;"	m	class:alglib::dfreport
oobrmserror	lib/alglib/dataanalysis.h	/^    double oobrmserror;$/;"	m	struct:alglib_impl::__anon40
op	lib/zlib/inftrees.h	/^    unsigned char op;           \/* operation, extra bits, table bits *\/$/;"	m	struct:__anon137
opaque	lib/zlib/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
open	core/memory/Logger.cpp	/^void Logger::open(const char *directory, bool appendUniqueId) {$/;"	f	class:Logger
open	core/memory/TextLogger.cpp	/^void TextLogger::open(const char *filename, bool appendUniqueId) {$/;"	f	class:TextLogger
openCameraWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openCameraWnd() {$/;"	f	class:UTMainWnd
openCameraWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openCameraWnd() {$/;"	f	class:UTMainWnd
openFilesWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openFilesWnd() {$/;"	f	class:UTMainWnd
openFilesWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openFilesWnd() {$/;"	f	class:UTMainWnd
openJointsWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openJointsWnd() {$/;"	f	class:UTMainWnd
openJointsWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openJointsWnd() {$/;"	f	class:UTMainWnd
openLog	build/include/tool/UTMainWnd.cpp	/^bool UTMainWnd::openLog() {$/;"	f	class:UTMainWnd
openLog	tools/UTNaoTool/UTMainWnd.cpp	/^bool UTMainWnd::openLog() {$/;"	f	class:UTMainWnd
openLogEditorWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openLogEditorWnd() {$/;"	f	class:UTMainWnd
openLogEditorWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openLogEditorWnd() {$/;"	f	class:UTMainWnd
openLogSelectWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openLogSelectWnd() {$/;"	f	class:UTMainWnd
openLogSelectWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openLogSelectWnd() {$/;"	f	class:UTMainWnd
openLogWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openLogWnd() {$/;"	f	class:UTMainWnd
openLogWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openLogWnd() {$/;"	f	class:UTMainWnd
openMotionWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openMotionWnd() {$/;"	f	class:UTMainWnd
openMotionWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openMotionWnd() {$/;"	f	class:UTMainWnd
openPlotWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openPlotWnd() {$/;"	f	class:UTMainWnd
openPlotWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openPlotWnd() {$/;"	f	class:UTMainWnd
openRecent	build/include/tool/UTMainWnd.cpp	/^bool UTMainWnd::openRecent() {$/;"	f	class:UTMainWnd
openRecent	build/include/tool/UTNaoTool.cpp	/^  bool openRecent = false;$/;"	m	namespace:__anon4	file:
openRecent	tools/UTNaoTool/UTMainWnd.cpp	/^bool UTMainWnd::openRecent() {$/;"	f	class:UTMainWnd
openRecent	tools/UTNaoTool/UTNaoTool.cpp	/^  bool openRecent = false;$/;"	m	namespace:__anon142	file:
openSSH	build/include/tool/ProcessExecutor.cpp	/^void PE::openSSH(QString ip, StatusCallback callback) {$/;"	f	class:PE
openSSH	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::openSSH(QString ip, StatusCallback callback) {$/;"	f	class:PE
openSensorWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openSensorWnd() {$/;"	f	class:UTMainWnd
openSensorWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openSensorWnd() {$/;"	f	class:UTMainWnd
openStateWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openStateWnd() {$/;"	f	class:UTMainWnd
openStateWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openStateWnd() {$/;"	f	class:UTMainWnd
openTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::openTable(Camera::Type camera) {$/;"	f	class:VisionWindow
openTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::openTable(Camera::Type camera) {$/;"	f	class:VisionWindow
openTeamWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openTeamWnd() {$/;"	f	class:UTMainWnd
openTeamWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openTeamWnd() {$/;"	f	class:UTMainWnd
openVisionWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openVisionWnd() {$/;"	f	class:UTMainWnd
openVisionWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openVisionWnd() {$/;"	f	class:UTMainWnd
openWalkWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openWalkWnd() {$/;"	f	class:UTMainWnd
openWalkWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openWalkWnd() {$/;"	f	class:UTMainWnd
openWorldWnd	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::openWorldWnd() {$/;"	f	class:UTMainWnd
openWorldWnd	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::openWorldWnd() {$/;"	f	class:UTMainWnd
open_func	lib/lua/src/lparser.c	/^static void open_func (LexState *ls, FuncState *fs) {$/;"	f	file:
openupval	lib/lua/src/lstate.h	/^  GCObject *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State
operator !	lib/yaml-cpp/src/regex.cpp	/^	RegEx operator ! (const RegEx& ex)$/;"	f	namespace:YAML
operator !	lib/yaml-cpp/src/stream.h	/^		bool operator !() const { return !static_cast <bool>(*this); }$/;"	f	class:YAML::Stream
operator !	lib/yaml-cpp/src/streamcharsource.h	/^		bool operator !() const { return !static_cast<bool>(*this); }$/;"	f	class:YAML::StreamCharSource
operator !	lib/yaml-cpp/src/stringsource.h	/^		bool operator !() const { return !static_cast<bool>(*this); }$/;"	f	class:YAML::StringCharSource
operator !=	core/math/Geometry.cpp	/^bool Point2D::operator !=( const Point2D &p ) const$/;"	f	class:Point2D
operator !=	core/math/Geometry.cpp	/^bool Point2D::operator !=( const float &d ) const$/;"	f	class:Point2D
operator !=	core/math/Geometry.cpp	/^bool Point3D::operator !=( const Point3D &p ) const$/;"	f	class:Point3D
operator !=	core/math/Geometry.cpp	/^bool Point3D::operator !=( const float &d ) const$/;"	f	class:Point3D
operator !=	core/math/Matrix2x2.h	/^  bool operator!=(const Matrix2x2<V>& other) const$/;"	f	class:Matrix2x2
operator !=	core/math/Matrix3x3.h	/^  bool operator!=(const Matrix3x3<V>& other) const$/;"	f	class:Matrix3x3
operator !=	core/math/Pose2D.h	/^  bool operator!=(const Pose2D& other) const$/;"	f	class:Pose2D
operator !=	core/math/Pose3D.h	/^  bool operator!=(const Pose3D& other) const$/;"	f	class:Pose3D
operator !=	core/math/Vector.h	/^  bool operator!=(const Vector<n, V>& other) const$/;"	f	class:Vector
operator !=	core/math/Vector2.h	/^  bool operator!=(const Vector2<V>& other) const$/;"	f	class:Vector2
operator !=	core/math/Vector3.h	/^  bool operator!=(const Vector3<V>& other) const$/;"	f	class:Vector3
operator !=	core/math/YaMatrix.h	/^bool operator!=(const YaMatrix<V>& a, const YaMatrix<V>& b)$/;"	f
operator !=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator!=(const FTypeName<T,N>& val1, const U& val2) { return Op<T>::myNe(val1.val(),val2); }$/;"	f	namespace:fadbad
operator !=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator!=(const U& val1, const FTypeName<T,N>& val2) { return Op<T>::myNe(val1,val2.val()); }$/;"	f	namespace:fadbad
operator !=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N> bool operator!=(const FTypeName<T,N>& val1, const FTypeName<T,N>& val2) { return Op<T>::myNe(val1.val(),val2.val()); }$/;"	f	namespace:fadbad
operator !=	core/motion/rswalk2014/types/ActionCommand.hpp	/^   static inline bool operator!=(const rgb &a, const rgb &b) {$/;"	f	namespace:ActionCommand
operator !=	core/motion/rswalk2014/types/BBox.hpp	/^   bool operator!= (const BBox &other) const$/;"	f	struct:BBox
operator !=	interfaces/sim_spark/Random.h	/^   friend bool operator!=( const Random& p, const Random& q )$/;"	f	class:Random
operator !=	lib/alglib/ap.cpp	/^bool alglib::operator!=(const alglib::complex& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator !=	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        bool operator != (const Binary& rhs) const {$/;"	f	class:YAML::Binary
operator !=	lib/yaml-cpp/include/yaml-cpp/null.h	/^	inline bool operator != (const _Null&, const _Null&) { return false; }$/;"	f	namespace:YAML
operator !=	lib/yaml-cpp/src/iterator.cpp	/^	bool operator != (const Iterator& it, const Iterator& jt)$/;"	f	namespace:YAML
operator &&	lib/yaml-cpp/src/regex.cpp	/^	RegEx operator && (const RegEx& ex1, const RegEx& ex2)$/;"	f	namespace:YAML
operator ()	interfaces/sim_spark/Random.h	/^      bool operator()( cartesianCoord p, cartesianCoord q ) {$/;"	f	struct:Random::dSquared
operator ()	lib/alglib/ap.cpp	/^ae_bool& alglib::boolean_1d_array::operator()(ae_int_t i)$/;"	f	class:alglib::boolean_1d_array
operator ()	lib/alglib/ap.cpp	/^ae_bool& alglib::boolean_2d_array::operator()(ae_int_t i, ae_int_t j)$/;"	f	class:alglib::boolean_2d_array
operator ()	lib/alglib/ap.cpp	/^alglib::ae_int_t& alglib::integer_1d_array::operator()(ae_int_t i)$/;"	f	class:alglib::integer_1d_array
operator ()	lib/alglib/ap.cpp	/^alglib::ae_int_t& alglib::integer_2d_array::operator()(ae_int_t i, ae_int_t j)$/;"	f	class:alglib::integer_2d_array
operator ()	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex_1d_array::operator()(ae_int_t i)$/;"	f	class:alglib::complex_1d_array
operator ()	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex_2d_array::operator()(ae_int_t i, ae_int_t j)$/;"	f	class:alglib::complex_2d_array
operator ()	lib/alglib/ap.cpp	/^const ae_bool& alglib::boolean_1d_array::operator()(ae_int_t i) const$/;"	f	class:alglib::boolean_1d_array
operator ()	lib/alglib/ap.cpp	/^const ae_bool& alglib::boolean_2d_array::operator()(ae_int_t i, ae_int_t j) const$/;"	f	class:alglib::boolean_2d_array
operator ()	lib/alglib/ap.cpp	/^const alglib::ae_int_t& alglib::integer_1d_array::operator()(ae_int_t i) const$/;"	f	class:alglib::integer_1d_array
operator ()	lib/alglib/ap.cpp	/^const alglib::ae_int_t& alglib::integer_2d_array::operator()(ae_int_t i, ae_int_t j) const$/;"	f	class:alglib::integer_2d_array
operator ()	lib/alglib/ap.cpp	/^const alglib::complex& alglib::complex_1d_array::operator()(ae_int_t i) const$/;"	f	class:alglib::complex_1d_array
operator ()	lib/alglib/ap.cpp	/^const alglib::complex& alglib::complex_2d_array::operator()(ae_int_t i, ae_int_t j) const$/;"	f	class:alglib::complex_2d_array
operator ()	lib/alglib/ap.cpp	/^const double& alglib::real_1d_array::operator()(ae_int_t i) const$/;"	f	class:alglib::real_1d_array
operator ()	lib/alglib/ap.cpp	/^const double& alglib::real_2d_array::operator()(ae_int_t i, ae_int_t j) const$/;"	f	class:alglib::real_2d_array
operator ()	lib/alglib/ap.cpp	/^double& alglib::real_1d_array::operator()(ae_int_t i)$/;"	f	class:alglib::real_1d_array
operator ()	lib/alglib/ap.cpp	/^double& alglib::real_2d_array::operator()(ae_int_t i, ae_int_t j)$/;"	f	class:alglib::real_2d_array
operator ()	lib/yaml-cpp/src/node.cpp	/^	bool ltnode::operator()(const Node *pNode1, const Node *pNode2) const {$/;"	f	class:YAML::ltnode
operator *	core/common/NMatrix.cpp	/^NMatrix	operator * (const NMatrix& a, const NMatrix& b)$/;"	f
operator *	core/common/NMatrix.cpp	/^NMatrix	operator * (const NMatrix& a, const float& b)$/;"	f
operator *	core/common/NMatrix.cpp	/^NMatrix	operator * (const float& a, const NMatrix& b)$/;"	f
operator *	core/math/Geometry.cpp	/^Point2D Point2D::operator * ( const Point2D &p ) const$/;"	f	class:Point2D
operator *	core/math/Geometry.cpp	/^Point2D Point2D::operator * ( const float &d ) const$/;"	f	class:Point2D
operator *	core/math/Geometry.cpp	/^Point3D Point3D::operator * ( const Point3D &p ) const$/;"	f	class:Point3D
operator *	core/math/Geometry.cpp	/^Point3D Point3D::operator * ( const float &d ) const$/;"	f	class:Point3D
operator *	core/math/Matrix2x2.h	/^  Matrix2x2<V> operator*(const Matrix2x2<V>& other) const$/;"	f	class:Matrix2x2
operator *	core/math/Matrix2x2.h	/^  Matrix2x2<V> operator*(const V& factor) const$/;"	f	class:Matrix2x2
operator *	core/math/Matrix2x2.h	/^  Vector2<V> operator*(const Vector2<V>& vector) const$/;"	f	class:Matrix2x2
operator *	core/math/Matrix3x3.h	/^  Matrix2x2<V> operator*(const Matrix3x2<V>& matrix) const$/;"	f	class:Matrix2x3
operator *	core/math/Matrix3x3.h	/^  Matrix2x3<V> operator*(const Matrix3x3<V>& matrix) const$/;"	f	class:Matrix2x3
operator *	core/math/Matrix3x3.h	/^  Matrix3x3<V> operator*(const Matrix3x3<V>& other) const$/;"	f	class:Matrix3x3
operator *	core/math/Matrix3x3.h	/^  Matrix3x3<V> operator*(const V& factor) const$/;"	f	class:Matrix3x3
operator *	core/math/Matrix3x3.h	/^  Vector2<V> operator*(const Vector3<V>& vector) const$/;"	f	class:Matrix2x3
operator *	core/math/Matrix3x3.h	/^  Vector3<V> operator*(const Vector3<V>& vector) const$/;"	f	class:Matrix3x3
operator *	core/math/Pose2D.h	/^  Pose2D operator*(float scalar) {$/;"	f	class:Pose2D
operator *	core/math/Pose2D.h	/^  Vector2<float> operator*(const Vector2<float>& point) const$/;"	f	class:Pose2D
operator *	core/math/Pose3D.h	/^  Vector3<float> operator*(const Vector3<float>& point) const$/;"	f	class:Pose3D
operator *	core/math/Vector.h	/^  V operator*(const Vector<n, V>& other) const$/;"	f	class:Vector
operator *	core/math/Vector.h	/^  Vector<n, V> operator*(const V& factor) const$/;"	f	class:Vector
operator *	core/math/Vector2.h	/^  V operator*(const Vector2<V>& other) const$/;"	f	class:Vector2
operator *	core/math/Vector2.h	/^  Vector2<V> operator*(const V& factor) const$/;"	f	class:Vector2
operator *	core/math/Vector3.h	/^  V operator*(const Vector3<V>& other) const$/;"	f	class:Vector3
operator *	core/math/Vector3.h	/^  Vector3<V> operator*(const V& factor) const$/;"	f	class:Vector3
operator *	core/math/YaMatrix.h	/^  const YaVector<V> operator*(const V& scalar) const$/;"	f	class:YaVector
operator *	core/math/YaMatrix.h	/^YaMatrix<V> operator*(const V f, const YaMatrix<V>& a)$/;"	f
operator *	core/math/YaMatrix.h	/^YaMatrix<V> operator*(const YaMatrix<V>& a, const V f)$/;"	f
operator *	core/math/YaMatrix.h	/^YaMatrix<V> operator*(const YaMatrix<V>& a, const YaMatrix<V>& b)$/;"	f
operator *	core/math/YaMatrix.h	/^YaVector<V> operator*(const YaMatrix<V>& a, const YaVector<V>& b)$/;"	f
operator *	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator* (const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
operator *	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator* (const FTypeName<T,N>& a, const U& b)$/;"	f	namespace:fadbad
operator *	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator* (const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
operator *	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator*(const alglib::complex& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator *	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator*(const alglib::complex& lhs, const double& rhs)$/;"	f	class:alglib
operator *	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator*(const double& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator *	lib/yaml-cpp/src/iterator.cpp	/^	const Node& Iterator::operator * () const$/;"	f	class:YAML::Iterator
operator *=	core/math/Geometry.cpp	/^void Point2D::operator *=( const Point2D &p )$/;"	f	class:Point2D
operator *=	core/math/Geometry.cpp	/^void Point2D::operator *=( const float &d )$/;"	f	class:Point2D
operator *=	core/math/Geometry.cpp	/^void Point3D::operator *=( const Point3D &p )$/;"	f	class:Point3D
operator *=	core/math/Geometry.cpp	/^void Point3D::operator *=( const float &d )$/;"	f	class:Point3D
operator *=	core/math/Matrix2x2.h	/^  Matrix2x2<V> operator*=(const Matrix2x2<V>& other)$/;"	f	class:Matrix2x2
operator *=	core/math/Matrix2x2.h	/^  Matrix2x2<V>& operator*=(const V& factor)$/;"	f	class:Matrix2x2
operator *=	core/math/Matrix3x3.h	/^  Matrix3x2<V>& operator*=(const V& factor)$/;"	f	class:Matrix3x2
operator *=	core/math/Matrix3x3.h	/^  Matrix3x3<V>& operator*=(const Matrix3x3<V>& other)$/;"	f	class:Matrix3x3
operator *=	core/math/Matrix3x3.h	/^  Matrix3x3<V>& operator*=(const V& factor)$/;"	f	class:Matrix3x3
operator *=	core/math/Pose2D.h	/^  Pose2D& operator*=(float scalar) {$/;"	f	class:Pose2D
operator *=	core/math/Vector.h	/^  Vector<n, V>& operator*=(const V& factor)$/;"	f	class:Vector
operator *=	core/math/Vector2.h	/^  Vector2<V>& operator*=(const V& factor)$/;"	f	class:Vector2
operator *=	core/math/Vector3.h	/^  Vector3<V>& operator*=(const V& factor)$/;"	f	class:Vector3
operator *=	core/math/YaMatrix.h	/^YaMatrix<V>& operator*=(YaMatrix<V>& a, const V f)$/;"	f
operator *=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^FTypeName<T,0>& FTypeName<T,0>::operator*=(const FTypeName<T,0>& val)$/;"	f	class:fadbad::FTypeName
operator *=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^FTypeName<T,N>& FTypeName<T,N>::operator*=(const FTypeName<T,N>& val)$/;"	f	class:fadbad::FTypeName
operator *=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename V> FTypeName<T,0>& FTypeName<T,0>::operator*=(const V& val)$/;"	f	class:fadbad::FTypeName
operator *=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename V> FTypeName<T,N>& FTypeName<T,N>::operator*=(const V& val)$/;"	f	class:fadbad::FTypeName
operator *=	interfaces/sim_spark/Random.h	/^   cartesianCoord& operator*=( float scalar ) {$/;"	f	struct:cartesianCoord
operator *=	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator*=(const alglib::complex& z)$/;"	f	class:alglib::complex
operator *=	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator*=(const double& v)$/;"	f	class:alglib::complex
operator +	core/common/NMatrix.cpp	/^NMatrix operator + (const NMatrix& a, const NMatrix& b)$/;"	f
operator +	core/math/Geometry.cpp	/^Point2D Point2D::operator + ( const Point2D &p ) const$/;"	f	class:Point2D
operator +	core/math/Geometry.cpp	/^Point2D Point2D::operator + ( const float &d ) const$/;"	f	class:Point2D
operator +	core/math/Geometry.cpp	/^Point3D Point3D::operator + ( const Point3D &p ) const$/;"	f	class:Point3D
operator +	core/math/Geometry.cpp	/^Point3D Point3D::operator + ( const float &d ) const$/;"	f	class:Point3D
operator +	core/math/Matrix2x2.h	/^  Matrix2x2<V> operator+(const Matrix2x2<V>& other) const$/;"	f	class:Matrix2x2
operator +	core/math/Matrix3x3.h	/^  Matrix3x2<V> operator+(const Matrix3x2<V>& other) const$/;"	f	class:Matrix3x2
operator +	core/math/Matrix3x3.h	/^  Matrix3x3<V> operator+(const Matrix3x3<V>& other) const$/;"	f	class:Matrix3x3
operator +	core/math/Pose2D.h	/^  Pose2D operator+(const Pose2D& other) const $/;"	f	class:Pose2D
operator +	core/math/Vector.h	/^  Vector<n, V> operator+(const Vector<n, V>& other) const$/;"	f	class:Vector
operator +	core/math/Vector2.h	/^  Vector2<V> operator+(const Vector2<V>& other) const$/;"	f	class:Vector2
operator +	core/math/Vector3.h	/^  Vector3<V> operator+(const Vector3<V>& other) const$/;"	f	class:Vector3
operator +	core/math/YaMatrix.h	/^  const YaVector<V> operator+(const YaVector<V>& other) const$/;"	f	class:YaVector
operator +	core/math/YaMatrix.h	/^YaMatrix<V> operator+(const YaMatrix<V>& a, const YaMatrix<V>& b)$/;"	f
operator +	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> operator+ (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
operator +	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator+ (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
operator +	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator+ (const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
operator +	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator+ (const FTypeName<T,N>& a, const U& b)$/;"	f	namespace:fadbad
operator +	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator+ (const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
operator +	core/motion/rswalk2014/types/Odometry.hpp	/^   static inline Odometry operator+(const Odometry& a, const Odometry& b) {$/;"	f
operator +	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator+(const alglib::complex& lhs)$/;"	f	class:alglib
operator +	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator+(const alglib::complex& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator +	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator+(const alglib::complex& lhs, const double& rhs)$/;"	f	class:alglib
operator +	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator+(const double& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator +	lib/yaml-cpp/src/regex.cpp	/^	RegEx operator + (const RegEx& ex1, const RegEx& ex2)$/;"	f	namespace:YAML
operator +	lib/yaml-cpp/src/streamcharsource.h	/^	inline const StreamCharSource StreamCharSource::operator + (int i) const {$/;"	f	class:YAML::StreamCharSource
operator +	lib/yaml-cpp/src/stringsource.h	/^		const StringCharSource operator + (int i) const {$/;"	f	class:YAML::StringCharSource
operator ++	lib/yaml-cpp/src/iterator.cpp	/^	Iterator Iterator::operator ++ (int)$/;"	f	class:YAML::Iterator
operator ++	lib/yaml-cpp/src/iterator.cpp	/^	Iterator& Iterator::operator ++ ()$/;"	f	class:YAML::Iterator
operator ++	lib/yaml-cpp/src/stringsource.h	/^		StringCharSource& operator ++ () {$/;"	f	class:YAML::StringCharSource
operator +=	core/math/Geometry.cpp	/^void Point2D::operator += ( const float &d )$/;"	f	class:Point2D
operator +=	core/math/Geometry.cpp	/^void Point2D::operator +=( const Point2D &p )$/;"	f	class:Point2D
operator +=	core/math/Geometry.cpp	/^void Point3D::operator += ( const float &d )$/;"	f	class:Point3D
operator +=	core/math/Geometry.cpp	/^void Point3D::operator +=( const Point3D &p )$/;"	f	class:Point3D
operator +=	core/math/Matrix2x2.h	/^  Matrix2x2<V>& operator+=(const Matrix2x2<V>& other)$/;"	f	class:Matrix2x2
operator +=	core/math/Matrix3x3.h	/^  Matrix3x2<V>& operator+=(const Matrix3x2<V>& other)$/;"	f	class:Matrix3x2
operator +=	core/math/Matrix3x3.h	/^  Matrix3x3<V>& operator+=(const Matrix3x3<V>& other)$/;"	f	class:Matrix3x3
operator +=	core/math/Pose2D.h	/^  Pose2D& operator+=(const Pose2D& other)$/;"	f	class:Pose2D
operator +=	core/math/Vector.h	/^  Vector<n, V>& operator+=(const Vector<n, V>& other)$/;"	f	class:Vector
operator +=	core/math/Vector2.h	/^  Vector2<V>& operator+=(const Vector2<V>& other)$/;"	f	class:Vector2
operator +=	core/math/Vector3.h	/^  Vector3<V>& operator+=(const Vector3<V>& other)$/;"	f	class:Vector3
operator +=	core/math/YaMatrix.h	/^YaMatrix<V> operator+=(YaMatrix<V>& a, const YaMatrix<V>& b)$/;"	f
operator +=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^FTypeName<T,0>& FTypeName<T,0>::operator+=(const FTypeName<T,0>& val)$/;"	f	class:fadbad::FTypeName
operator +=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^FTypeName<T,N>& FTypeName<T,N>::operator+=(const FTypeName<T,N>& val)$/;"	f	class:fadbad::FTypeName
operator +=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename V> FTypeName<T,0>& FTypeName<T,0>::operator+=(const V& val)$/;"	f	class:fadbad::FTypeName
operator +=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename V> FTypeName<T,N>& FTypeName<T,N>::operator+=(const V& val)$/;"	f	class:fadbad::FTypeName
operator +=	interfaces/sim_spark/Random.h	/^   cartesianCoord& operator+=( const cartesianCoord& p ) {$/;"	f	struct:cartesianCoord
operator +=	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator+=(const alglib::complex& z)$/;"	f	class:alglib::complex
operator +=	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator+=(const double& v)$/;"	f	class:alglib::complex
operator +=	lib/yaml-cpp/src/stringsource.h	/^		StringCharSource& operator += (std::size_t offset) {$/;"	f	class:YAML::StringCharSource
operator -	core/common/NMatrix.cpp	/^NMatrix	operator -  (const NMatrix& a, const NMatrix& b)$/;"	f
operator -	core/math/Geometry.cpp	/^Line2D Line2D::operator-() const$/;"	f	class:Line2D
operator -	core/math/Geometry.cpp	/^Point2D Point2D::operator - ( const Point2D &p ) const$/;"	f	class:Point2D
operator -	core/math/Geometry.cpp	/^Point2D Point2D::operator - ( const float &d ) const$/;"	f	class:Point2D
operator -	core/math/Geometry.cpp	/^Point2D Point2D::operator - () const$/;"	f	class:Point2D
operator -	core/math/Geometry.cpp	/^Point3D Point3D::operator - ( const Point3D &p ) const$/;"	f	class:Point3D
operator -	core/math/Geometry.cpp	/^Point3D Point3D::operator - ( const float &d ) const$/;"	f	class:Point3D
operator -	core/math/Geometry.cpp	/^Point3D Point3D::operator - () const$/;"	f	class:Point3D
operator -	core/math/Geometry.cpp	/^Rectangle Rectangle::operator - () const$/;"	f	class:Rectangle
operator -	core/math/Matrix2x2.h	/^  Matrix2x2<V> operator-(const Matrix2x2<V>& other) const$/;"	f	class:Matrix2x2
operator -	core/math/Matrix3x3.h	/^  Matrix3x3<V> operator-(const Matrix3x3<V>& other) const$/;"	f	class:Matrix3x3
operator -	core/math/Pose2D.h	/^  Pose2D operator-(const Pose2D& other) const $/;"	f	class:Pose2D
operator -	core/math/Vector.h	/^  Vector<n, V> operator-() const$/;"	f	class:Vector
operator -	core/math/Vector.h	/^  Vector<n, V> operator-(const Vector<n, V>& other) const$/;"	f	class:Vector
operator -	core/math/Vector2.h	/^  Vector2<V> operator-() const$/;"	f	class:Vector2
operator -	core/math/Vector2.h	/^  Vector2<V> operator-(const Vector2<V>& other) const$/;"	f	class:Vector2
operator -	core/math/Vector3.h	/^  Vector3<V> operator-() const$/;"	f	class:Vector3
operator -	core/math/Vector3.h	/^  Vector3<V> operator-(const Vector3<V>& other) const$/;"	f	class:Vector3
operator -	core/math/YaMatrix.h	/^  YaMatrix<V>& operator-()$/;"	f	class:YaMatrix
operator -	core/math/YaMatrix.h	/^  const YaVector<V> operator-() const {$/;"	f	class:YaVector
operator -	core/math/YaMatrix.h	/^  const YaVector<V> operator-(const YaVector<V>& other) const$/;"	f	class:YaVector
operator -	core/math/YaMatrix.h	/^YaMatrix<V> operator-(const YaMatrix<V>& a, const YaMatrix<V>& b)$/;"	f
operator -	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> operator- (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
operator -	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator- (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
operator -	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator- (const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
operator -	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator- (const FTypeName<T,N>& a, const U& b)$/;"	f	namespace:fadbad
operator -	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator- (const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
operator -	core/motion/rswalk2014/types/Odometry.hpp	/^   static inline Odometry operator-(const Odometry& a, const Odometry& b) {$/;"	f
operator -	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator-(const alglib::complex& lhs)$/;"	f	class:alglib
operator -	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator-(const alglib::complex& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator -	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator-(const alglib::complex& lhs, const double& rhs)$/;"	f	class:alglib
operator -	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator-(const double& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator -=	core/math/Geometry.cpp	/^void Point2D::operator -=( const Point2D &p )$/;"	f	class:Point2D
operator -=	core/math/Geometry.cpp	/^void Point2D::operator -=( const float &d )$/;"	f	class:Point2D
operator -=	core/math/Geometry.cpp	/^void Point3D::operator -=( const Point3D &p )$/;"	f	class:Point3D
operator -=	core/math/Geometry.cpp	/^void Point3D::operator -=( const float &d )$/;"	f	class:Point3D
operator -=	core/math/Matrix2x2.h	/^  Matrix2x2<V>& operator-=(const Matrix2x2<V>& other)$/;"	f	class:Matrix2x2
operator -=	core/math/Matrix3x3.h	/^  Matrix3x3<V>& operator-=(const Matrix3x3<V>& other)$/;"	f	class:Matrix3x3
operator -=	core/math/Pose2D.h	/^  Pose2D& operator-=(const Pose2D& other)$/;"	f	class:Pose2D
operator -=	core/math/Vector.h	/^  Vector<n, V>& operator-=(const Vector<n, V>& other)$/;"	f	class:Vector
operator -=	core/math/Vector2.h	/^  Vector2<V>& operator-=(const Vector2<V>& other)$/;"	f	class:Vector2
operator -=	core/math/Vector3.h	/^  Vector3<V>& operator-=(const Vector3<V>& other)$/;"	f	class:Vector3
operator -=	core/math/YaMatrix.h	/^YaMatrix<V>& operator-=(YaMatrix<V>& a, const YaMatrix<V>& b)$/;"	f
operator -=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^FTypeName<T,0>& FTypeName<T,0>::operator-=(const FTypeName<T,0>& val)$/;"	f	class:fadbad::FTypeName
operator -=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^FTypeName<T,N>& FTypeName<T,N>::operator-=(const FTypeName<T,N>& val)$/;"	f	class:fadbad::FTypeName
operator -=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename V> FTypeName<T,0>& FTypeName<T,0>::operator-=(const V& val)$/;"	f	class:fadbad::FTypeName
operator -=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename V> FTypeName<T,N>& FTypeName<T,N>::operator-=(const V& val)$/;"	f	class:fadbad::FTypeName
operator -=	interfaces/sim_spark/Random.h	/^   cartesianCoord& operator-=( const cartesianCoord& p ) {$/;"	f	struct:cartesianCoord
operator -=	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator-=(const alglib::complex& z)$/;"	f	class:alglib::complex
operator -=	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator-=(const double& v)$/;"	f	class:alglib::complex
operator ->	lib/yaml-cpp/src/iterator.cpp	/^	const Node *Iterator::operator -> () const$/;"	f	class:YAML::Iterator
operator /	core/common/NMatrix.cpp	/^NMatrix	operator \/ (const NMatrix& a, const float& b)$/;"	f
operator /	core/math/Geometry.cpp	/^Point2D Point2D::operator \/ ( const Point2D &p ) const$/;"	f	class:Point2D
operator /	core/math/Geometry.cpp	/^Point2D Point2D::operator \/ ( const float &d ) const$/;"	f	class:Point2D
operator /	core/math/Geometry.cpp	/^Point3D Point3D::operator \/ ( const Point3D &p ) const$/;"	f	class:Point3D
operator /	core/math/Geometry.cpp	/^Point3D Point3D::operator \/ ( const float &d ) const$/;"	f	class:Point3D
operator /	core/math/Matrix2x2.h	/^  Matrix2x2<V> operator\/(const V& factor) const$/;"	f	class:Matrix2x2
operator /	core/math/Matrix3x3.h	/^  Matrix3x3<V> operator\/(const V& factor) const$/;"	f	class:Matrix3x3
operator /	core/math/Pose2D.h	/^  Pose2D operator\/(float scalar) {$/;"	f	class:Pose2D
operator /	core/math/Vector.h	/^  Vector<n, V> operator\/(const V& factor) const$/;"	f	class:Vector
operator /	core/math/Vector2.h	/^  Vector2<V> operator\/(const V& factor) const$/;"	f	class:Vector2
operator /	core/math/Vector3.h	/^  Vector3<V> operator\/(const V& factor) const$/;"	f	class:Vector3
operator /	core/math/YaMatrix.h	/^  const YaVector<V> operator\/(const V& scalar) const$/;"	f	class:YaVector
operator /	core/math/YaMatrix.h	/^YaMatrix<V> operator\/(const YaMatrix<V>& a, const V d)$/;"	f
operator /	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator\/ (const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
operator /	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator\/ (const FTypeName<T,N>& a, const U& b)$/;"	f	namespace:fadbad
operator /	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> operator\/ (const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
operator /	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator\/(const alglib::complex& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator /	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator\/(const alglib::complex& lhs, const double& rhs)$/;"	f	class:alglib
operator /	lib/alglib/ap.cpp	/^const alglib::complex alglib::operator\/(const double& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator /=	core/math/Geometry.cpp	/^void Point2D::operator \/=( const Point2D &p )$/;"	f	class:Point2D
operator /=	core/math/Geometry.cpp	/^void Point2D::operator \/=( const float &d )$/;"	f	class:Point2D
operator /=	core/math/Geometry.cpp	/^void Point3D::operator \/=( const Point3D &p )$/;"	f	class:Point3D
operator /=	core/math/Geometry.cpp	/^void Point3D::operator \/=( const float &d )$/;"	f	class:Point3D
operator /=	core/math/Matrix2x2.h	/^  Matrix2x2<V>& operator\/=(const V& factor)$/;"	f	class:Matrix2x2
operator /=	core/math/Matrix3x3.h	/^  Matrix3x2<V>& operator\/=(const V& factor)$/;"	f	class:Matrix3x2
operator /=	core/math/Matrix3x3.h	/^  Matrix3x3<V>& operator\/=(const V& factor)$/;"	f	class:Matrix3x3
operator /=	core/math/Pose2D.h	/^  Pose2D operator\/=(float scalar) {$/;"	f	class:Pose2D
operator /=	core/math/Vector.h	/^  Vector<n, V>& operator\/=(const V& factor)$/;"	f	class:Vector
operator /=	core/math/Vector2.h	/^  Vector2<V>& operator\/=(const V& factor)$/;"	f	class:Vector2
operator /=	core/math/Vector3.h	/^  Vector3<V>& operator\/=(const V& factor)$/;"	f	class:Vector3
operator /=	core/math/YaMatrix.h	/^YaMatrix<V>& operator\/=(YaMatrix<V>& a, const V f)$/;"	f
operator /=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^FTypeName<T,0>& FTypeName<T,0>::operator\/=(const FTypeName<T,0>& val)$/;"	f	class:fadbad::FTypeName
operator /=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^FTypeName<T,N>& FTypeName<T,N>::operator\/=(const FTypeName<T,N>& val)$/;"	f	class:fadbad::FTypeName
operator /=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename V> FTypeName<T,0>& FTypeName<T,0>::operator\/=(const V& val)$/;"	f	class:fadbad::FTypeName
operator /=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename V> FTypeName<T,N>& FTypeName<T,N>::operator\/=(const V& val)$/;"	f	class:fadbad::FTypeName
operator /=	interfaces/sim_spark/Random.h	/^   cartesianCoord& operator\/=( float scalar ) {$/;"	f	struct:cartesianCoord
operator /=	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator\/=(const alglib::complex& z)$/;"	f	class:alglib::complex
operator /=	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator\/=(const double& v)$/;"	f	class:alglib::complex
operator <	core/math/Range.h	/^    bool operator<(const Range<T>& r) const {return max < r.min;}$/;"	f	class:Range
operator <	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator<(const FTypeName<T,N>& val1, const U& val2) { return Op<T>::myLt(val1.val(),val2); }$/;"	f	namespace:fadbad
operator <	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator<(const U& val1, const FTypeName<T,N>& val2) { return Op<T>::myLt(val1,val2.val()); }$/;"	f	namespace:fadbad
operator <	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N> bool operator<(const FTypeName<T,N>& val1, const FTypeName<T,N>& val2) { return Op<T>::myLt(val1.val(),val2.val()); }$/;"	f	namespace:fadbad
operator <	lib/yaml-cpp/src/node.cpp	/^	bool operator < (const Node& n1, const Node& n2)$/;"	f	namespace:YAML
operator <<	build/include/tool/annotations/Selection.cpp	/^YAML::Emitter& operator<< (YAML::Emitter& out, const Selection& selection) {$/;"	f
operator <<	core/common/NMatrix.cpp	/^ostream& operator << ( ostream &os, NMatrix a )$/;"	f
operator <<	core/common/Serializable.h	/^    friend std::ostream& operator<<(std::ostream& os, const Serializable& s) {$/;"	f	class:Serializable
operator <<	core/common/YamlConfig.h	/^    friend YAML::Emitter& operator<<(YAML::Emitter& out, const YamlConfig& config) {$/;"	f	class:YamlConfig
operator <<	core/math/Geometry.cpp	/^ostream& operator << ( ostream &os, Circle c )$/;"	f
operator <<	core/math/Geometry.cpp	/^ostream& operator << ( ostream &os, Line2D l )$/;"	f
operator <<	core/math/Geometry.cpp	/^ostream& operator << ( ostream &os, Point2D p )$/;"	f
operator <<	core/math/Geometry.cpp	/^ostream& operator << ( ostream &os, Point3D p )$/;"	f
operator <<	core/math/Geometry.cpp	/^ostream& operator << ( ostream &os, Rectangle r )$/;"	f
operator <<	core/math/Pose3D.h	/^  friend std::ostream& operator<<(std::ostream& out, const Pose3D& pose) {$/;"	f	class:Pose3D
operator <<	core/math/RotationMatrix.h	/^  friend std::ostream& operator<<(std::ostream& out, const RotationMatrix& matrix) {$/;"	f	class:RotationMatrix
operator <<	core/math/Vector2.h	/^	friend std::ostream& operator<<(std::ostream &out, const Vector2<V>& vec)$/;"	f	class:Vector2
operator <<	core/math/Vector3.h	/^	friend std::ostream& operator<<(std::ostream &out, const Vector3<V>& vec)$/;"	f	class:Vector3
operator <<	core/math/YaMatrix.h	/^std::ostream& operator<<(std::ostream& stream, const YaMatrix<V>& matrix)$/;"	f
operator <<	core/math/YaMatrix.h	/^std::ostream& operator<<(std::ostream& stream, const YaVector<V> vec)$/;"	f
operator <<	core/motion/rswalk2014/types/ActionCommand.hpp	/^   static inline std::ostream & operator<<(std::ostream &out, const Body &a) {$/;"	f	namespace:ActionCommand
operator <<	core/motion/rswalk2014/types/ActionCommand.hpp	/^   static inline std::ostream & operator<<(std::ostream &out, const Head &a) {$/;"	f	namespace:ActionCommand
operator <<	core/motion/rswalk2014/types/ActionCommand.hpp	/^   static inline std::ostream & operator<<(std::ostream &out, const LED &a) {$/;"	f	namespace:ActionCommand
operator <<	core/motion/rswalk2014/types/ActionCommand.hpp	/^   static inline std::ostream & operator<<(std::ostream &out, const rgb &a) {$/;"	f	namespace:ActionCommand
operator <<	core/motion/rswalk2014/types/BBox.hpp	/^inline std::ostream& operator<<(std::ostream& os, const BBox& bbox) {$/;"	f
operator <<	core/motion/rswalk2014/types/Odometry.hpp	/^inline std::ostream& operator<<(std::ostream& os, const Odometry& odometry) {$/;"	f
operator <<	core/motion/rswalk2014/types/Point.hpp	/^inline std::ostream& operator<<(std::ostream& os, const Point& point) {$/;"	f
operator <<	core/motion/rswalk2014/types/PostInfo.hpp	/^inline std::ostream& operator<<(std::ostream& os, const PostInfo& postInfo) {$/;"	f
operator <<	core/motion/rswalk2014/types/RRCoord.hpp	/^inline std::ostream& operator<<(std::ostream& os, const RRCoord& coord) {$/;"	f
operator <<	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^inline std::ostream& operator<<(std::ostream& os, const XYZ_Coord& coord) {$/;"	f
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, EMITTER_MANIP value) {$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, _Indent indent) {$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, bool v) { return emitter.Write(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, char v) { return emitter.Write(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, const Binary& b) { return emitter.Write(b); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, const _Alias& v) { return emitter.Write(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, const _Anchor& v) { return emitter.Write(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, const _Comment& v) { return emitter.Write(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, const _Null& v) { return emitter.Write(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, const _Tag& v) { return emitter.Write(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, const char *v) { return emitter.Write(std::string(v)); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, const std::string& v) { return emitter.Write(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, double v) { return emitter.WriteStreamable(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, float v) { return emitter.WriteStreamable(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, int v) { return emitter.WriteIntegralType(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, long long v) { return emitter.WriteIntegralType(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, long v) { return emitter.WriteIntegralType(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, short v) { return emitter.WriteIntegralType(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, unsigned char v) { return emitter.Write(static_cast<char>(v)); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, unsigned int v) { return emitter.WriteIntegralType(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, unsigned long long v) { return emitter.WriteIntegralType(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, unsigned long v) { return emitter.WriteIntegralType(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^	inline Emitter& operator << (Emitter& emitter, unsigned short v) { return emitter.WriteIntegralType(v); }$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/emitter.h	/^    inline Emitter& operator << (Emitter& emitter, _Precision precision) {$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/stlemitter.h	/^	inline Emitter& operator << (Emitter& emitter, const std::list<T>& v) {$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/stlemitter.h	/^	inline Emitter& operator << (Emitter& emitter, const std::map<K, V>& m) {$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/stlemitter.h	/^	inline Emitter& operator << (Emitter& emitter, const std::set<T>& v) {$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/include/yaml-cpp/stlemitter.h	/^	inline Emitter& operator << (Emitter& emitter, const std::vector<T>& v) {$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/src/indentation.h	/^	inline ostream& operator << (ostream& out, const IndentTo& indent) {$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/src/indentation.h	/^	inline ostream& operator << (ostream& out, const Indentation& indent) {$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/src/node.cpp	/^	Emitter& operator << (Emitter& out, const Node& node)$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/src/ostream.cpp	/^	ostream& operator << (ostream& out, char ch)$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/src/ostream.cpp	/^	ostream& operator << (ostream& out, const char *str)$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/src/ostream.cpp	/^	ostream& operator << (ostream& out, const std::string& str)$/;"	f	namespace:YAML
operator <<	lib/yaml-cpp/src/token.h	/^		friend std::ostream& operator << (std::ostream& out, const Token& token) {$/;"	f	struct:YAML::Token
operator <<	lib/yaml-cpp/test/emittertests.cpp	/^		YAML::Emitter& operator << (YAML::Emitter& out, const Foo& foo) {$/;"	f	namespace:Test::Emitter
operator <<	lib/yaml-cpp/test/emittertests.cpp	/^		YAML::Emitter& operator << (YAML::Emitter& out, const T *v) {$/;"	f	namespace:Test::Emitter
operator <<	tools/UTNaoTool/annotations/Selection.cpp	/^YAML::Emitter& operator<< (YAML::Emitter& out, const Selection& selection) {$/;"	f
operator <=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator<=(const FTypeName<T,N>& val1, const U& val2) { return Op<T>::myLe(val1.val(),val2); }$/;"	f	namespace:fadbad
operator <=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator<=(const U& val1, const FTypeName<T,N>& val2) { return Op<T>::myLe(val1,val2.val()); }$/;"	f	namespace:fadbad
operator <=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N> bool operator<=(const FTypeName<T,N>& val1, const FTypeName<T,N>& val2) { return Op<T>::myLe(val1.val(),val2.val()); }$/;"	f	namespace:fadbad
operator =	core/common/FieldConfiguration.h	/^    const FieldConfiguration& operator=(std::initializer_list<std::pair<int,ObjectConfiguration>> l) {$/;"	f	class:FieldConfiguration
operator =	core/common/NMatrix.cpp	/^NMatrix& NMatrix::operator =  (const NMatrix& a)$/;"	f	class:NMatrix
operator =	core/math/Geometry.cpp	/^void Point2D::operator = ( const float &d )$/;"	f	class:Point2D
operator =	core/math/Geometry.cpp	/^void Point3D::operator = ( const float &d )$/;"	f	class:Point3D
operator =	core/math/Matrix2x2.h	/^  Matrix2x2<V>& operator=(const Matrix2x2<V>& other)$/;"	f	class:Matrix2x2
operator =	core/math/Matrix3x3.h	/^  Matrix3x3<V>& operator=(const Matrix3x3<V>& other)$/;"	f	class:Matrix3x3
operator =	core/math/Pose2D.h	/^  Pose2D& operator=(const Pose2D& other)$/;"	f	class:Pose2D
operator =	core/math/Pose3D.h	/^  Pose3D& operator=(const Pose3D& other)$/;"	f	class:Pose3D
operator =	core/math/RotationMatrix.h	/^  RotationMatrix& operator=(const Matrix3x3<float>& other)$/;"	f	class:RotationMatrix
operator =	core/math/Spline3D.h	/^  Spline3D& operator=(const Spline3D &other) {$/;"	f	class:Spline3D
operator =	core/math/Vector.h	/^  Vector<n, V>& operator=(const Vector<n, V>& other) $/;"	f	class:Vector
operator =	core/math/Vector2.h	/^  Vector2<V>& operator=(const Point2D& p)$/;"	f	class:Vector2
operator =	core/math/Vector2.h	/^  Vector2<V>& operator=(const Vector2<V>& other)$/;"	f	class:Vector2
operator =	core/math/Vector3.h	/^  Vector3<V>& operator=(const Vector3<V>& other) $/;"	f	class:Vector3
operator =	core/math/YaMatrix.h	/^  YaMatrix<V>& operator=(const V* o)$/;"	f	class:YaMatrix
operator =	core/math/YaMatrix.h	/^  YaMatrix<V>& operator=(const YaMatrix<V>& o)$/;"	f	class:YaMatrix
operator =	core/math/YaMatrix.h	/^  YaVector<V>& operator=(const YaVector<V>& other)$/;"	f	class:YaVector
operator =	core/memory/ImageBlock.cpp	/^ImageBlock& ImageBlock::operator=(const ImageBlock& other) {$/;"	f	class:ImageBlock
operator =	core/memory/Memory.cpp	/^Memory& Memory::operator=(const Memory &old) {$/;"	f	class:Memory
operator =	core/memory/MemoryBlock.cpp	/^MemoryBlock& MemoryBlock::operator=(const MemoryBlock &that) {$/;"	f	class:MemoryBlock
operator =	core/memory/RobotVisionBlock.cpp	/^RobotVisionBlock& RobotVisionBlock::operator=(const RobotVisionBlock& other) {$/;"	f	class:RobotVisionBlock
operator =	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	FTypeName<T,N>& operator=(const FTypeName<T,N>& val)$/;"	f	class:fadbad::FTypeName
operator =	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	FTypeName<T>& operator=(const FTypeName<T>& val)$/;"	f	class:fadbad::FTypeName
operator =	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	template <class U> FTypeName<T,N>& operator=(const U& val)$/;"	f	class:fadbad::FTypeName
operator =	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	template <class U> FTypeName<T>& operator=(const U& val)$/;"	f	class:fadbad::FTypeName
operator =	core/motion/rswalk2014/types/RRCoord.hpp	/^   RRCoord& operator=(const RRCoord &other) {$/;"	f	struct:RRCoord
operator =	interfaces/sim_spark/Random.h	/^   Random& operator=( const Random& r )   \/\/ overloaded assignment$/;"	f	class:Random
operator =	lib/alglib/alglibmisc.cpp	/^_hqrndstate_owner& _hqrndstate_owner::operator=(const _hqrndstate_owner &rhs)$/;"	f	class:alglib::_hqrndstate_owner
operator =	lib/alglib/alglibmisc.cpp	/^_kdtree_owner& _kdtree_owner::operator=(const _kdtree_owner &rhs)$/;"	f	class:alglib::_kdtree_owner
operator =	lib/alglib/alglibmisc.cpp	/^hqrndstate& hqrndstate::operator=(const hqrndstate &rhs)$/;"	f	class:alglib::hqrndstate
operator =	lib/alglib/alglibmisc.cpp	/^kdtree& kdtree::operator=(const kdtree &rhs)$/;"	f	class:alglib::kdtree
operator =	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator= (const alglib::complex& z)$/;"	f	class:alglib::complex
operator =	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex::operator= (const double& v)$/;"	f	class:alglib::complex
operator =	lib/alglib/ap.cpp	/^const alglib::ae_matrix_wrapper& alglib::ae_matrix_wrapper::operator=(const alglib::ae_matrix_wrapper &rhs)$/;"	f	class:alglib::ae_matrix_wrapper
operator =	lib/alglib/ap.cpp	/^const alglib::ae_vector_wrapper& alglib::ae_vector_wrapper::operator=(const alglib::ae_vector_wrapper &rhs)$/;"	f	class:alglib::ae_vector_wrapper
operator =	lib/alglib/dataanalysis.cpp	/^_decisionforest_owner& _decisionforest_owner::operator=(const _decisionforest_owner &rhs)$/;"	f	class:alglib::_decisionforest_owner
operator =	lib/alglib/dataanalysis.cpp	/^_dfreport_owner& _dfreport_owner::operator=(const _dfreport_owner &rhs)$/;"	f	class:alglib::_dfreport_owner
operator =	lib/alglib/dataanalysis.cpp	/^_linearmodel_owner& _linearmodel_owner::operator=(const _linearmodel_owner &rhs)$/;"	f	class:alglib::_linearmodel_owner
operator =	lib/alglib/dataanalysis.cpp	/^_logitmodel_owner& _logitmodel_owner::operator=(const _logitmodel_owner &rhs)$/;"	f	class:alglib::_logitmodel_owner
operator =	lib/alglib/dataanalysis.cpp	/^_lrreport_owner& _lrreport_owner::operator=(const _lrreport_owner &rhs)$/;"	f	class:alglib::_lrreport_owner
operator =	lib/alglib/dataanalysis.cpp	/^_mlpcvreport_owner& _mlpcvreport_owner::operator=(const _mlpcvreport_owner &rhs)$/;"	f	class:alglib::_mlpcvreport_owner
operator =	lib/alglib/dataanalysis.cpp	/^_mlpensemble_owner& _mlpensemble_owner::operator=(const _mlpensemble_owner &rhs)$/;"	f	class:alglib::_mlpensemble_owner
operator =	lib/alglib/dataanalysis.cpp	/^_mlpreport_owner& _mlpreport_owner::operator=(const _mlpreport_owner &rhs)$/;"	f	class:alglib::_mlpreport_owner
operator =	lib/alglib/dataanalysis.cpp	/^_mnlreport_owner& _mnlreport_owner::operator=(const _mnlreport_owner &rhs)$/;"	f	class:alglib::_mnlreport_owner
operator =	lib/alglib/dataanalysis.cpp	/^_multilayerperceptron_owner& _multilayerperceptron_owner::operator=(const _multilayerperceptron_owner &rhs)$/;"	f	class:alglib::_multilayerperceptron_owner
operator =	lib/alglib/dataanalysis.cpp	/^decisionforest& decisionforest::operator=(const decisionforest &rhs)$/;"	f	class:alglib::decisionforest
operator =	lib/alglib/dataanalysis.cpp	/^dfreport& dfreport::operator=(const dfreport &rhs)$/;"	f	class:alglib::dfreport
operator =	lib/alglib/dataanalysis.cpp	/^linearmodel& linearmodel::operator=(const linearmodel &rhs)$/;"	f	class:alglib::linearmodel
operator =	lib/alglib/dataanalysis.cpp	/^logitmodel& logitmodel::operator=(const logitmodel &rhs)$/;"	f	class:alglib::logitmodel
operator =	lib/alglib/dataanalysis.cpp	/^lrreport& lrreport::operator=(const lrreport &rhs)$/;"	f	class:alglib::lrreport
operator =	lib/alglib/dataanalysis.cpp	/^mlpcvreport& mlpcvreport::operator=(const mlpcvreport &rhs)$/;"	f	class:alglib::mlpcvreport
operator =	lib/alglib/dataanalysis.cpp	/^mlpensemble& mlpensemble::operator=(const mlpensemble &rhs)$/;"	f	class:alglib::mlpensemble
operator =	lib/alglib/dataanalysis.cpp	/^mlpreport& mlpreport::operator=(const mlpreport &rhs)$/;"	f	class:alglib::mlpreport
operator =	lib/alglib/dataanalysis.cpp	/^mnlreport& mnlreport::operator=(const mnlreport &rhs)$/;"	f	class:alglib::mnlreport
operator =	lib/alglib/dataanalysis.cpp	/^multilayerperceptron& multilayerperceptron::operator=(const multilayerperceptron &rhs)$/;"	f	class:alglib::multilayerperceptron
operator =	lib/alglib/diffequations.cpp	/^_odesolverreport_owner& _odesolverreport_owner::operator=(const _odesolverreport_owner &rhs)$/;"	f	class:alglib::_odesolverreport_owner
operator =	lib/alglib/diffequations.cpp	/^_odesolverstate_owner& _odesolverstate_owner::operator=(const _odesolverstate_owner &rhs)$/;"	f	class:alglib::_odesolverstate_owner
operator =	lib/alglib/diffequations.cpp	/^odesolverreport& odesolverreport::operator=(const odesolverreport &rhs)$/;"	f	class:alglib::odesolverreport
operator =	lib/alglib/diffequations.cpp	/^odesolverstate& odesolverstate::operator=(const odesolverstate &rhs)$/;"	f	class:alglib::odesolverstate
operator =	lib/alglib/integration.cpp	/^_autogkreport_owner& _autogkreport_owner::operator=(const _autogkreport_owner &rhs)$/;"	f	class:alglib::_autogkreport_owner
operator =	lib/alglib/integration.cpp	/^_autogkstate_owner& _autogkstate_owner::operator=(const _autogkstate_owner &rhs)$/;"	f	class:alglib::_autogkstate_owner
operator =	lib/alglib/integration.cpp	/^autogkreport& autogkreport::operator=(const autogkreport &rhs)$/;"	f	class:alglib::autogkreport
operator =	lib/alglib/integration.cpp	/^autogkstate& autogkstate::operator=(const autogkstate &rhs)$/;"	f	class:alglib::autogkstate
operator =	lib/alglib/interpolation.cpp	/^_barycentricfitreport_owner& _barycentricfitreport_owner::operator=(const _barycentricfitreport_owner &rhs)$/;"	f	class:alglib::_barycentricfitreport_owner
operator =	lib/alglib/interpolation.cpp	/^_barycentricinterpolant_owner& _barycentricinterpolant_owner::operator=(const _barycentricinterpolant_owner &rhs)$/;"	f	class:alglib::_barycentricinterpolant_owner
operator =	lib/alglib/interpolation.cpp	/^_idwinterpolant_owner& _idwinterpolant_owner::operator=(const _idwinterpolant_owner &rhs)$/;"	f	class:alglib::_idwinterpolant_owner
operator =	lib/alglib/interpolation.cpp	/^_lsfitreport_owner& _lsfitreport_owner::operator=(const _lsfitreport_owner &rhs)$/;"	f	class:alglib::_lsfitreport_owner
operator =	lib/alglib/interpolation.cpp	/^_lsfitstate_owner& _lsfitstate_owner::operator=(const _lsfitstate_owner &rhs)$/;"	f	class:alglib::_lsfitstate_owner
operator =	lib/alglib/interpolation.cpp	/^_polynomialfitreport_owner& _polynomialfitreport_owner::operator=(const _polynomialfitreport_owner &rhs)$/;"	f	class:alglib::_polynomialfitreport_owner
operator =	lib/alglib/interpolation.cpp	/^_pspline2interpolant_owner& _pspline2interpolant_owner::operator=(const _pspline2interpolant_owner &rhs)$/;"	f	class:alglib::_pspline2interpolant_owner
operator =	lib/alglib/interpolation.cpp	/^_pspline3interpolant_owner& _pspline3interpolant_owner::operator=(const _pspline3interpolant_owner &rhs)$/;"	f	class:alglib::_pspline3interpolant_owner
operator =	lib/alglib/interpolation.cpp	/^_spline1dfitreport_owner& _spline1dfitreport_owner::operator=(const _spline1dfitreport_owner &rhs)$/;"	f	class:alglib::_spline1dfitreport_owner
operator =	lib/alglib/interpolation.cpp	/^_spline1dinterpolant_owner& _spline1dinterpolant_owner::operator=(const _spline1dinterpolant_owner &rhs)$/;"	f	class:alglib::_spline1dinterpolant_owner
operator =	lib/alglib/interpolation.cpp	/^_spline2dinterpolant_owner& _spline2dinterpolant_owner::operator=(const _spline2dinterpolant_owner &rhs)$/;"	f	class:alglib::_spline2dinterpolant_owner
operator =	lib/alglib/interpolation.cpp	/^barycentricfitreport& barycentricfitreport::operator=(const barycentricfitreport &rhs)$/;"	f	class:alglib::barycentricfitreport
operator =	lib/alglib/interpolation.cpp	/^barycentricinterpolant& barycentricinterpolant::operator=(const barycentricinterpolant &rhs)$/;"	f	class:alglib::barycentricinterpolant
operator =	lib/alglib/interpolation.cpp	/^idwinterpolant& idwinterpolant::operator=(const idwinterpolant &rhs)$/;"	f	class:alglib::idwinterpolant
operator =	lib/alglib/interpolation.cpp	/^lsfitreport& lsfitreport::operator=(const lsfitreport &rhs)$/;"	f	class:alglib::lsfitreport
operator =	lib/alglib/interpolation.cpp	/^lsfitstate& lsfitstate::operator=(const lsfitstate &rhs)$/;"	f	class:alglib::lsfitstate
operator =	lib/alglib/interpolation.cpp	/^polynomialfitreport& polynomialfitreport::operator=(const polynomialfitreport &rhs)$/;"	f	class:alglib::polynomialfitreport
operator =	lib/alglib/interpolation.cpp	/^pspline2interpolant& pspline2interpolant::operator=(const pspline2interpolant &rhs)$/;"	f	class:alglib::pspline2interpolant
operator =	lib/alglib/interpolation.cpp	/^pspline3interpolant& pspline3interpolant::operator=(const pspline3interpolant &rhs)$/;"	f	class:alglib::pspline3interpolant
operator =	lib/alglib/interpolation.cpp	/^spline1dfitreport& spline1dfitreport::operator=(const spline1dfitreport &rhs)$/;"	f	class:alglib::spline1dfitreport
operator =	lib/alglib/interpolation.cpp	/^spline1dinterpolant& spline1dinterpolant::operator=(const spline1dinterpolant &rhs)$/;"	f	class:alglib::spline1dinterpolant
operator =	lib/alglib/interpolation.cpp	/^spline2dinterpolant& spline2dinterpolant::operator=(const spline2dinterpolant &rhs)$/;"	f	class:alglib::spline2dinterpolant
operator =	lib/alglib/linalg.cpp	/^_matinvreport_owner& _matinvreport_owner::operator=(const _matinvreport_owner &rhs)$/;"	f	class:alglib::_matinvreport_owner
operator =	lib/alglib/linalg.cpp	/^matinvreport& matinvreport::operator=(const matinvreport &rhs)$/;"	f	class:alglib::matinvreport
operator =	lib/alglib/optimization.cpp	/^_minasareport_owner& _minasareport_owner::operator=(const _minasareport_owner &rhs)$/;"	f	class:alglib::_minasareport_owner
operator =	lib/alglib/optimization.cpp	/^_minasastate_owner& _minasastate_owner::operator=(const _minasastate_owner &rhs)$/;"	f	class:alglib::_minasastate_owner
operator =	lib/alglib/optimization.cpp	/^_minbleicreport_owner& _minbleicreport_owner::operator=(const _minbleicreport_owner &rhs)$/;"	f	class:alglib::_minbleicreport_owner
operator =	lib/alglib/optimization.cpp	/^_minbleicstate_owner& _minbleicstate_owner::operator=(const _minbleicstate_owner &rhs)$/;"	f	class:alglib::_minbleicstate_owner
operator =	lib/alglib/optimization.cpp	/^_mincgreport_owner& _mincgreport_owner::operator=(const _mincgreport_owner &rhs)$/;"	f	class:alglib::_mincgreport_owner
operator =	lib/alglib/optimization.cpp	/^_mincgstate_owner& _mincgstate_owner::operator=(const _mincgstate_owner &rhs)$/;"	f	class:alglib::_mincgstate_owner
operator =	lib/alglib/optimization.cpp	/^_minlbfgsreport_owner& _minlbfgsreport_owner::operator=(const _minlbfgsreport_owner &rhs)$/;"	f	class:alglib::_minlbfgsreport_owner
operator =	lib/alglib/optimization.cpp	/^_minlbfgsstate_owner& _minlbfgsstate_owner::operator=(const _minlbfgsstate_owner &rhs)$/;"	f	class:alglib::_minlbfgsstate_owner
operator =	lib/alglib/optimization.cpp	/^_minlmreport_owner& _minlmreport_owner::operator=(const _minlmreport_owner &rhs)$/;"	f	class:alglib::_minlmreport_owner
operator =	lib/alglib/optimization.cpp	/^_minlmstate_owner& _minlmstate_owner::operator=(const _minlmstate_owner &rhs)$/;"	f	class:alglib::_minlmstate_owner
operator =	lib/alglib/optimization.cpp	/^_minqpreport_owner& _minqpreport_owner::operator=(const _minqpreport_owner &rhs)$/;"	f	class:alglib::_minqpreport_owner
operator =	lib/alglib/optimization.cpp	/^_minqpstate_owner& _minqpstate_owner::operator=(const _minqpstate_owner &rhs)$/;"	f	class:alglib::_minqpstate_owner
operator =	lib/alglib/optimization.cpp	/^minasareport& minasareport::operator=(const minasareport &rhs)$/;"	f	class:alglib::minasareport
operator =	lib/alglib/optimization.cpp	/^minasastate& minasastate::operator=(const minasastate &rhs)$/;"	f	class:alglib::minasastate
operator =	lib/alglib/optimization.cpp	/^minbleicreport& minbleicreport::operator=(const minbleicreport &rhs)$/;"	f	class:alglib::minbleicreport
operator =	lib/alglib/optimization.cpp	/^minbleicstate& minbleicstate::operator=(const minbleicstate &rhs)$/;"	f	class:alglib::minbleicstate
operator =	lib/alglib/optimization.cpp	/^mincgreport& mincgreport::operator=(const mincgreport &rhs)$/;"	f	class:alglib::mincgreport
operator =	lib/alglib/optimization.cpp	/^mincgstate& mincgstate::operator=(const mincgstate &rhs)$/;"	f	class:alglib::mincgstate
operator =	lib/alglib/optimization.cpp	/^minlbfgsreport& minlbfgsreport::operator=(const minlbfgsreport &rhs)$/;"	f	class:alglib::minlbfgsreport
operator =	lib/alglib/optimization.cpp	/^minlbfgsstate& minlbfgsstate::operator=(const minlbfgsstate &rhs)$/;"	f	class:alglib::minlbfgsstate
operator =	lib/alglib/optimization.cpp	/^minlmreport& minlmreport::operator=(const minlmreport &rhs)$/;"	f	class:alglib::minlmreport
operator =	lib/alglib/optimization.cpp	/^minlmstate& minlmstate::operator=(const minlmstate &rhs)$/;"	f	class:alglib::minlmstate
operator =	lib/alglib/optimization.cpp	/^minqpreport& minqpreport::operator=(const minqpreport &rhs)$/;"	f	class:alglib::minqpreport
operator =	lib/alglib/optimization.cpp	/^minqpstate& minqpstate::operator=(const minqpstate &rhs)$/;"	f	class:alglib::minqpstate
operator =	lib/alglib/solvers.cpp	/^_densesolverlsreport_owner& _densesolverlsreport_owner::operator=(const _densesolverlsreport_owner &rhs)$/;"	f	class:alglib::_densesolverlsreport_owner
operator =	lib/alglib/solvers.cpp	/^_densesolverreport_owner& _densesolverreport_owner::operator=(const _densesolverreport_owner &rhs)$/;"	f	class:alglib::_densesolverreport_owner
operator =	lib/alglib/solvers.cpp	/^_nleqreport_owner& _nleqreport_owner::operator=(const _nleqreport_owner &rhs)$/;"	f	class:alglib::_nleqreport_owner
operator =	lib/alglib/solvers.cpp	/^_nleqstate_owner& _nleqstate_owner::operator=(const _nleqstate_owner &rhs)$/;"	f	class:alglib::_nleqstate_owner
operator =	lib/alglib/solvers.cpp	/^densesolverlsreport& densesolverlsreport::operator=(const densesolverlsreport &rhs)$/;"	f	class:alglib::densesolverlsreport
operator =	lib/alglib/solvers.cpp	/^densesolverreport& densesolverreport::operator=(const densesolverreport &rhs)$/;"	f	class:alglib::densesolverreport
operator =	lib/alglib/solvers.cpp	/^nleqreport& nleqreport::operator=(const nleqreport &rhs)$/;"	f	class:alglib::nleqreport
operator =	lib/alglib/solvers.cpp	/^nleqstate& nleqstate::operator=(const nleqstate &rhs)$/;"	f	class:alglib::nleqstate
operator =	lib/yaml-cpp/src/iterator.cpp	/^	Iterator& Iterator::operator = (const Iterator& rhs)$/;"	f	class:YAML::Iterator
operator =	lib/yaml-cpp/src/setting.h	/^		SettingChanges& operator = (SettingChanges& rhs) {$/;"	f	class:YAML::SettingChanges
operator ==	core/math/Geometry.cpp	/^bool Point2D::operator ==( const Point2D &p ) const$/;"	f	class:Point2D
operator ==	core/math/Geometry.cpp	/^bool Point2D::operator ==( const float &d ) const$/;"	f	class:Point2D
operator ==	core/math/Geometry.cpp	/^bool Point3D::operator ==( const Point3D &p ) const$/;"	f	class:Point3D
operator ==	core/math/Geometry.cpp	/^bool Point3D::operator ==( const float &d ) const$/;"	f	class:Point3D
operator ==	core/math/Matrix2x2.h	/^  bool operator==(const Matrix2x2<V>& other) const$/;"	f	class:Matrix2x2
operator ==	core/math/Matrix3x3.h	/^  bool operator==(const Matrix3x3<V>& other) const$/;"	f	class:Matrix3x3
operator ==	core/math/Pose2D.h	/^  bool operator==(const Pose2D& other) const$/;"	f	class:Pose2D
operator ==	core/math/Pose3D.h	/^  bool operator==(const Pose3D& other) const$/;"	f	class:Pose3D
operator ==	core/math/Range.h	/^    bool operator==(const Range<T>& r) const {return min == r.min && max == r.max;}$/;"	f	class:Range
operator ==	core/math/Vector.h	/^  bool operator==(const Vector<n, V>& other) const$/;"	f	class:Vector
operator ==	core/math/Vector2.h	/^  bool operator==(const Vector2<V>& other) const$/;"	f	class:Vector2
operator ==	core/math/Vector3.h	/^  bool operator==(const Vector3<V>& other) const$/;"	f	class:Vector3
operator ==	core/math/YaMatrix.h	/^bool operator==(const YaMatrix<V>& a, const YaMatrix<V>& b)$/;"	f
operator ==	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator==(const FTypeName<T,N>& val1, const U& val2) { return Op<T>::myEq(val1.val(),val2); }$/;"	f	namespace:fadbad
operator ==	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator==(const U& val1, const FTypeName<T,N>& val2) { return Op<T>::myEq(val1,val2.val()); }$/;"	f	namespace:fadbad
operator ==	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N> bool operator==(const FTypeName<T,N>& val1, const FTypeName<T,N>& val2) { return Op<T>::myEq(val1.val(),val2.val()); }$/;"	f	namespace:fadbad
operator ==	core/motion/rswalk2014/types/AbsCoord.hpp	/^   bool operator== (const AbsCoord &other) const {$/;"	f	struct:AbsCoord
operator ==	core/motion/rswalk2014/types/ActionCommand.hpp	/^   static inline bool operator==(const rgb &a, const rgb &b) {$/;"	f	namespace:ActionCommand
operator ==	core/motion/rswalk2014/types/BBox.hpp	/^   bool operator== (const BBox &other) const$/;"	f	struct:BBox
operator ==	core/motion/rswalk2014/types/PostInfo.hpp	/^   bool operator== (const PostInfo &other) const$/;"	f	struct:PostInfo
operator ==	core/motion/rswalk2014/types/RRCoord.hpp	/^   bool operator== (const RRCoord &other) const {$/;"	f	struct:RRCoord
operator ==	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      bool operator== (const XYZ_Coord &other) const {$/;"	f	class:XYZ_Coord
operator ==	interfaces/sim_spark/Random.h	/^   friend bool operator==( const Random& p, const Random& q )$/;"	f	class:Random
operator ==	lib/alglib/ap.cpp	/^bool alglib::operator==(const alglib::complex& lhs, const alglib::complex& rhs)$/;"	f	class:alglib
operator ==	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        bool operator == (const Binary& rhs) const {$/;"	f	class:YAML::Binary
operator ==	lib/yaml-cpp/include/yaml-cpp/null.h	/^	inline bool operator == (const _Null&, const _Null&) { return true; }$/;"	f	namespace:YAML
operator ==	lib/yaml-cpp/src/iterator.cpp	/^	bool operator == (const Iterator& it, const Iterator& jt)$/;"	f	namespace:YAML
operator ==	lib/yaml-cpp/test/old-api/spectests.cpp	/^		bool operator == (const Pair& p, const Pair& q) {$/;"	f	namespace:Test::Spec
operator ==	lib/yaml-cpp/test/old-api/spectests.cpp	/^		bool operator == (const StringMap& m, const StringMap& n) {$/;"	f	namespace:Test::Spec
operator >	core/math/Range.h	/^    bool operator>(const Range<T>& r) const {return min > r.max;}$/;"	f	class:Range
operator >	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator>(const FTypeName<T,N>& val1, const U& val2) { return Op<T>::myGt(val1.val(),val2); }$/;"	f	namespace:fadbad
operator >	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator>(const U& val1, const FTypeName<T,N>& val2) { return Op<T>::myGt(val1,val2.val()); }$/;"	f	namespace:fadbad
operator >	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N> bool operator>(const FTypeName<T,N>& val1, const FTypeName<T,N>& val2) { return Op<T>::myGt(val1.val(),val2.val()); }$/;"	f	namespace:fadbad
operator >=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator>=(const FTypeName<T,N>& val1, const U& val2) { return Op<T>::myGe(val1.val(),val2); }$/;"	f	namespace:fadbad
operator >=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N, typename U> bool operator>=(const U& val1, const FTypeName<T,N>& val2) { return Op<T>::myGe(val1,val2.val()); }$/;"	f	namespace:fadbad
operator >=	core/motion/rswalk2014/FADBAD++/fadiff.h	/^template <typename T, unsigned int N> bool operator>=(const FTypeName<T,N>& val1, const FTypeName<T,N>& val2) { return Op<T>::myGe(val1.val(),val2.val()); }$/;"	f	namespace:fadbad
operator >>	build/include/tool/annotations/Selection.cpp	/^void operator>> (const YAML::Node& node, Selection& selection) {$/;"	f
operator >>	core/common/Serializable.h	/^    friend void operator>>(std::istream& is, Serializable& s) {$/;"	f	class:Serializable
operator >>	core/common/YamlConfig.h	/^    friend void operator>>(const YAML::Node& node, YamlConfig& config) {$/;"	f	class:YamlConfig
operator >>	core/math/YaMatrix.h	/^std::istream& operator>>(std::istream& stream, YaMatrix<V>& matrix)$/;"	f
operator >>	core/motion/rswalk2014/types/BBox.hpp	/^inline std::istream& operator>>(std::istream& is, BBox& bbox) {$/;"	f
operator >>	core/motion/rswalk2014/types/Odometry.hpp	/^inline std::istream& operator>>(std::istream& is, Odometry& odometry) {$/;"	f
operator >>	core/motion/rswalk2014/types/Point.hpp	/^inline std::istream& operator>>(std::istream& is, Point& point) {$/;"	f
operator >>	core/motion/rswalk2014/types/PostInfo.hpp	/^inline std::istream& operator>>(std::istream& is, PostInfo& postInfo) {$/;"	f
operator >>	core/motion/rswalk2014/types/RRCoord.hpp	/^inline std::istream& operator>>(std::istream& is, RRCoord& coord) {$/;"	f
operator >>	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^inline std::istream& operator>>(std::istream& is, XYZ_Coord& coord) {$/;"	f
operator >>	interfaces/sim_spark/Random.h	/^   friend istream& operator>>( istream& is, Random& rv )$/;"	f	class:Random
operator >>	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline typename enable_if<is_scalar_convertible<T> >::type operator >> (const Node& node, T& value) {$/;"	f	namespace:YAML
operator >>	lib/yaml-cpp/include/yaml-cpp/stlnode.h	/^	void operator >> (const Node& node, std::map<K, V>& m)$/;"	f	namespace:YAML
operator >>	lib/yaml-cpp/include/yaml-cpp/stlnode.h	/^	void operator >> (const Node& node, std::vector<T>& v)$/;"	f	namespace:YAML
operator >>	lib/yaml-cpp/src/binary.cpp	/^    void operator >> (const Node& node, Binary& binary)$/;"	f	namespace:YAML
operator >>	lib/yaml-cpp/test/old-api/spectests.cpp	/^		void operator >> (const YAML::Node& node, Pair& p) {$/;"	f	namespace:Test::Spec
operator >>	lib/yaml-cpp/test/old-api/spectests.cpp	/^		void operator >> (const YAML::Node& node, StringMap& m) {$/;"	f	namespace:Test::Spec
operator >>	tools/UTNaoTool/annotations/Selection.cpp	/^void operator>> (const YAML::Node& node, Selection& selection) {$/;"	f
operator Point2D	core/math/Vector2.h	/^  operator Point2D() const { return Point2D(x,y); }$/;"	f	class:Vector2
operator V	core/math/YaMatrix.h	/^  operator V() const$/;"	f	class:YaVector
operator []	core/common/FieldConfiguration.h	/^    inline ObjectConfiguration& operator[](int key) { return placements_[key]; }$/;"	f	class:FieldConfiguration
operator []	core/common/NMatrix.cpp	/^float*	NMatrix::operator []	(int i)	const$/;"	f	class:NMatrix
operator []	core/common/RingBuffer.h	/^    V& operator[] (int i)$/;"	f	class:RingBuffer
operator []	core/common/RingBuffer.h	/^    const V& operator[] (int i) const$/;"	f	class:RingBuffer
operator []	core/common/RingBufferWithSum.h	/^    C operator[] (int i) const$/;"	f	class:RingBufferWithSum
operator []	core/common/RingBufferWithSum.h	/^    C operator[] (int i)$/;"	f	class:RingBufferWithSum
operator []	core/common/RingQueue.h	/^    V& operator[] (int i) {$/;"	f	class:RingQueue
operator []	core/common/RingQueue.h	/^    const V& operator[] (int i) const$/;"	f	class:RingQueue
operator []	core/common/RingQueueWithSum.h	/^    V& operator[] (int i) {$/;"	f	class:RingQueueWithSum
operator []	core/common/RingQueueWithSum.h	/^    const V& operator[] (int i) const$/;"	f	class:RingQueueWithSum
operator []	core/math/Matrix2x2.h	/^  Vector2<V>& operator[](int i) $/;"	f	class:Matrix2x2
operator []	core/math/Matrix3x3.h	/^  Vector3<V>& operator[](int i) $/;"	f	class:Matrix3x3
operator []	core/math/Vector.h	/^  inline V& operator[](int i)$/;"	f	class:Vector
operator []	core/math/Vector.h	/^  inline const V& operator[](int i) const$/;"	f	class:Vector
operator []	core/math/Vector2.h	/^  V& operator[](int i)$/;"	f	class:Vector2
operator []	core/math/Vector2.h	/^  const V& operator[](int i) const$/;"	f	class:Vector2
operator []	core/math/Vector3.h	/^  V& operator[](int i)$/;"	f	class:Vector3
operator []	core/math/Vector3.h	/^  const V& operator[](int i) const$/;"	f	class:Vector3
operator []	core/math/YaMatrix.h	/^  const std::vector<V>& operator[](size_t row) const$/;"	f	class:YaMatrix
operator []	core/math/YaMatrix.h	/^  std::vector<V>& operator[](size_t row)$/;"	f	class:YaMatrix
operator []	core/memory/Log.h	/^    inline Memory& operator[] (unsigned int idx) {$/;"	f	class:Log
operator []	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	T& operator[](const unsigned int i)$/;"	f	class:fadbad::FTypeName
operator []	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	const T& operator[](const unsigned int i) const$/;"	f	class:fadbad::FTypeName
operator []	lib/alglib/ap.cpp	/^ae_bool& alglib::boolean_1d_array::operator[](ae_int_t i)$/;"	f	class:alglib::boolean_1d_array
operator []	lib/alglib/ap.cpp	/^ae_bool* alglib::boolean_2d_array::operator[](ae_int_t i)$/;"	f	class:alglib::boolean_2d_array
operator []	lib/alglib/ap.cpp	/^alglib::ae_int_t& alglib::integer_1d_array::operator[](ae_int_t i)$/;"	f	class:alglib::integer_1d_array
operator []	lib/alglib/ap.cpp	/^alglib::ae_int_t* alglib::integer_2d_array::operator[](ae_int_t i)$/;"	f	class:alglib::integer_2d_array
operator []	lib/alglib/ap.cpp	/^alglib::complex& alglib::complex_1d_array::operator[](ae_int_t i)$/;"	f	class:alglib::complex_1d_array
operator []	lib/alglib/ap.cpp	/^alglib::complex* alglib::complex_2d_array::operator[](ae_int_t i)$/;"	f	class:alglib::complex_2d_array
operator []	lib/alglib/ap.cpp	/^const ae_bool& alglib::boolean_1d_array::operator[](ae_int_t i) const$/;"	f	class:alglib::boolean_1d_array
operator []	lib/alglib/ap.cpp	/^const ae_bool* alglib::boolean_2d_array::operator[](ae_int_t i) const$/;"	f	class:alglib::boolean_2d_array
operator []	lib/alglib/ap.cpp	/^const alglib::ae_int_t& alglib::integer_1d_array::operator[](ae_int_t i) const$/;"	f	class:alglib::integer_1d_array
operator []	lib/alglib/ap.cpp	/^const alglib::ae_int_t* alglib::integer_2d_array::operator[](ae_int_t i) const$/;"	f	class:alglib::integer_2d_array
operator []	lib/alglib/ap.cpp	/^const alglib::complex& alglib::complex_1d_array::operator[](ae_int_t i) const$/;"	f	class:alglib::complex_1d_array
operator []	lib/alglib/ap.cpp	/^const alglib::complex* alglib::complex_2d_array::operator[](ae_int_t i) const$/;"	f	class:alglib::complex_2d_array
operator []	lib/alglib/ap.cpp	/^const double& alglib::real_1d_array::operator[](ae_int_t i) const$/;"	f	class:alglib::real_1d_array
operator []	lib/alglib/ap.cpp	/^const double* alglib::real_2d_array::operator[](ae_int_t i) const$/;"	f	class:alglib::real_2d_array
operator []	lib/alglib/ap.cpp	/^double& alglib::real_1d_array::operator[](ae_int_t i)$/;"	f	class:alglib::real_1d_array
operator []	lib/alglib/ap.cpp	/^double* alglib::real_2d_array::operator[](ae_int_t i)$/;"	f	class:alglib::real_2d_array
operator []	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline const Node& Node::operator [] (char *key) const {$/;"	f	class:YAML::Node
operator []	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline const Node& Node::operator [] (const T& key) const {$/;"	f	class:YAML::Node
operator []	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline const Node& Node::operator [] (const char *key) const {$/;"	f	class:YAML::Node
operator []	lib/yaml-cpp/src/ptr_vector.h	/^		T& operator[](std::size_t i) { return *m_data[i]; }$/;"	f	class:YAML::ptr_vector
operator []	lib/yaml-cpp/src/ptr_vector.h	/^		const T& operator[](std::size_t i) const { return *m_data[i]; }$/;"	f	class:YAML::ptr_vector
operator []	lib/yaml-cpp/src/streamcharsource.h	/^		char operator [] (std::size_t i) const { return m_stream.CharAt(m_offset + i); }$/;"	f	class:YAML::StreamCharSource
operator []	lib/yaml-cpp/src/stringsource.h	/^		char operator [] (std::size_t i) const { return m_str[m_offset + i]; }$/;"	f	class:YAML::StringCharSource
operator ^	core/math/Vector3.h	/^  Vector3<V> operator^(const Vector3<V>& other) const$/;"	f	class:Vector3
operator ^=	core/math/Vector3.h	/^  Vector3<V>& operator^=(const Vector3<V>& other)$/;"	f	class:Vector3
operator bool	lib/yaml-cpp/src/parser.cpp	/^	Parser::operator bool() const$/;"	f	class:YAML::Parser
operator bool	lib/yaml-cpp/src/stream.cpp	/^	Stream::operator bool() const$/;"	f	class:YAML::Stream
operator bool	lib/yaml-cpp/src/streamcharsource.h	/^	inline StreamCharSource::operator bool() const {$/;"	f	class:YAML::StreamCharSource
operator bool	lib/yaml-cpp/src/stringsource.h	/^		operator bool() const { return m_offset < m_size; }$/;"	f	class:YAML::StringCharSource
operator ||	lib/yaml-cpp/src/regex.cpp	/^	RegEx operator || (const RegEx& ex1, const RegEx& ex2)$/;"	f	namespace:YAML
opmode	lib/lua/src/lopcodes.c	/^#define opmode(/;"	d	file:
oppCrossLocation	core/common/Bowdoin14Field.h	/^const Point2D oppCrossLocation = Point2D(PENALTY_CROSS_X, 0);$/;"	v
oppCrossLocation	core/common/Field.h	/^const Point2D oppCrossLocation = Point2D(PENALTY_CROSS_X, 0);$/;"	v
oppCrossLocation	core/common/RC2013Field.h	/^const Point2D oppCrossLocation = Point2D(PENALTY_CROSS_X, 0);$/;"	v
oppCrossLocation	core/common/UTField.h	/^const Point2D oppCrossLocation = Point2D(PENALTY_CROSS_X, 0);$/;"	v
oppLog	core/memory/TextLogger.h	/^#define oppLog(/;"	d
opponentBlock	core/memory/BehaviorBlock.h	/^  int opponentBlock;$/;"	m	struct:KickEvaluation
opponentDetection	core/opponents/UKF4.cpp	/^ukf4UpdateResult UKF4::opponentDetection(float obsDistance, float obsBearing, float distanceErrorOffset, float distanceErrorRelative, float bearingError)$/;"	f	class:UKF4
opponentScore	core/memory/GameStateBlock.h	/^  int opponentScore;$/;"	m	struct:GameStateBlock
opponentWidth	core/memory/BehaviorParamBlock.h	/^  float opponentWidth; \/\/ make sure ball clears at least this far from each opp$/;"	m	struct:KickStrategy
opponent_mem	core/memory/MemoryCache.h	/^    OpponentBlock* opponent_mem;$/;"	m	class:MemoryCache
opponent_mem	core/python/memory.py	/^  def opponent_mem(): return core.pythonC.opponents_  $/;"	f	function:init
opponent_mem_	build/include/tool/simulation/ObservationGenerator.h	/^    OpponentBlock* opponent_mem_;$/;"	m	class:ObservationGenerator
opponent_mem_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    OpponentBlock* opponent_mem_;$/;"	m	class:ObservationGenerator
opponents_	core/InterpreterModule.h	/^    OpponentBlock *opponents_;$/;"	m	class:InterpreterModule
opponents_	core/VisionCore.h	/^  OppModule *opponents_;$/;"	m	class:VisionCore
opponents_	core/communications/CommunicationModule.h	/^  OpponentBlock *opponents_;$/;"	m	class:CommunicationModule
oppositeYOfBall	core/memory/BehaviorParamBlock.h	/^  bool oppositeYOfBall;$/;"	m	struct:RolePositionConfig
optMkdir	tools/behaviorSim/runCMAES.py	/^def optMkdir(dirName):$/;"	f
opt_len	lib/zlib/deflate.h	/^    ulg opt_len;        \/* bit length of current block with optimal trees *\/$/;"	m	struct:internal_state
optalgo	lib/alglib/interpolation.h	/^    ae_int_t optalgo;$/;"	m	struct:alglib_impl::__anon63
optdim	lib/alglib/optimization.h	/^    ae_int_t optdim;$/;"	m	struct:alglib_impl::__anon79
optimize	tools/behaviorSim/cma.py	/^    def optimize(self, objectivefct, logger=None, verb_disp=20, iterations=None):$/;"	m	class:OOOptimizer
optimizeCalibration	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::optimizeCalibration() {$/;"	f	class:ExtrinsicCalibrationWidget
optimizeCalibration	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::optimizeCalibration() {$/;"	f	class:ExtrinsicCalibrationWidget
optionallyStream	core/communications/CommunicationModule.cpp	/^void CommunicationModule::optionallyStream() {$/;"	f	class:CommunicationModule
optionallyWriteLog	core/VisionCore.cpp	/^void VisionCore::optionallyWriteLog() {$/;"	f	class:VisionCore
options	bin/compile	/^options = None$/;"	v
options	bin/copy_robot	/^options = None$/;"	v
options	build/compile	/^options = None$/;"	v
options	build/copy_robot	/^options = None$/;"	v
options	build/include/tool/SimulatorConfig.h	/^    std::map<GLDrawer::DisplayOption, bool> options;$/;"	m	class:SimulatorConfig
options	install/setup_robot	/^options = Options()$/;"	v
options	tools/UTNaoTool/SimulatorConfig.h	/^    std::map<GLDrawer::DisplayOption, bool> options;$/;"	m	class:SimulatorConfig
options_	build/include/tool/SimulatorConfig.h	/^    mutable std::vector<std::string> options_;$/;"	m	class:SimulatorConfig
options_	tools/UTNaoTool/SimulatorConfig.h	/^    mutable std::vector<std::string> options_;$/;"	m	class:SimulatorConfig
optprob	tools/behaviorSim/cma.py	/^    def optprob(self, x):$/;"	m	class:FitnessFunctions
optrep	lib/alglib/interpolation.h	/^    minlmreport optrep;$/;"	m	struct:alglib_impl::__anon63
optstate	lib/alglib/interpolation.h	/^    minlmstate optstate;$/;"	m	struct:alglib_impl::__anon63
or	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
org_ptr	lib/zlib/zutil.c	/^    voidpf org_ptr;$/;"	m	struct:ptr_table_s	file:
orientation	core/common/FieldConfiguration.h	/^    float orientation;$/;"	m	class:ObjectConfiguration
orientation	core/common/RobotConfig.h	/^    float orientation;$/;"	m	class:RobotConfig
orientation	core/common/WorldObject.h	/^  AngRad orientation;$/;"	m	class:WorldObject
orientation	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   dir_t         orientation;$/;"	m	struct:low_feature
orientation	core/motion/rswalk2014/types/RRCoord.hpp	/^   const float orientation() const {$/;"	f	struct:RRCoord
orientation	core/motion/rswalk2014/types/RRCoord.hpp	/^   float &orientation() {$/;"	f	struct:RRCoord
orientationErrorFactor	core/memory/BehaviorParamBlock.h	/^  float orientationErrorFactor;$/;"	m	struct:CornerKickStrategy
orientationErrorFactor	core/memory/BehaviorParamBlock.h	/^  float orientationErrorFactor;$/;"	m	struct:KickStrategy
orientation_t	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^enum orientation_t$/;"	g
orig	build/include/tool/MotionGLWidget.h	/^  qglviewer::Vec orig, dir, selectedPoint;$/;"	m	class:MotionGLWidget
orig	tools/UTNaoTool/MotionGLWidget.h	/^  qglviewer::Vec orig, dir, selectedPoint;$/;"	m	class:MotionGLWidget
origFactor	core/common/RobotInfo.h	/^  float origFactor;$/;"	m	struct:ImageParams
origPath_	build/include/tool/simulation/LocalizationSimulation.h	/^    SimulationPath path_, origPath_;$/;"	m	class:LocalizationSimulation
origPath_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    SimulationPath path_, origPath_;$/;"	m	class:LocalizationSimulation
orig_len_	core/communications/StreamingMessage.h	/^  unsigned long orig_len_;$/;"	m	class:StreamingMessage
origin	core/common/RobotInfo.h	/^    origin,$/;"	e	enum:BodyFrame::Part
origin	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> origin, zunit;$/;"	m	class:Pose
ortfac_cmatrixblockreflector	lib/alglib/linalg.cpp	/^static void ortfac_cmatrixblockreflector(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
ortfac_cmatrixlqbasecase	lib/alglib/linalg.cpp	/^static void ortfac_cmatrixlqbasecase(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
ortfac_cmatrixqrbasecase	lib/alglib/linalg.cpp	/^static void ortfac_cmatrixqrbasecase(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
ortfac_rmatrixblockreflector	lib/alglib/linalg.cpp	/^static void ortfac_rmatrixblockreflector(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
ortfac_rmatrixlqbasecase	lib/alglib/linalg.cpp	/^static void ortfac_rmatrixlqbasecase(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
ortfac_rmatrixqrbasecase	lib/alglib/linalg.cpp	/^static void ortfac_rmatrixqrbasecase(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
os	bin/behaviorSim	/^import os, platform$/;"	i
os	bin/common.py	/^import subprocess, os$/;"	i
os	bin/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
os	bin/compile_copy	/^import sys, subprocess, os$/;"	i
os	bin/copy_robot	/^import sys, subprocess, os$/;"	i
os	bin/tool	/^import os, platform$/;"	i
os	build/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
os	build/compile_copy	/^import sys, subprocess, os$/;"	i
os	build/copy_robot	/^import sys, subprocess, os$/;"	i
os	build/core/generate_block_operations.py	/^import inspect, os, sys$/;"	i
os	build/cpcompile	/^import sys, subprocess, os$/;"	i
os	build/luaswig/generateSwig.py	/^import sys, os, subprocess, re$/;"	i
os	build/make_docs	/^import sys, subprocess, os$/;"	i
os	build/pythonswig/generateSwig.py	/^import sys, os, subprocess, re$/;"	i
os	core/python/UTdebug.py	/^import os$/;"	i
os	core/python/init.py	/^import sys, os, traceback$/;"	i
os	install/common.py	/^import sys, os, shutil, tempfile$/;"	i
os	install/copy_wpa.py	/^import os, shutil, subprocess$/;"	i
os	install/fix_autoload.py	/^import subprocess, sys, os$/;"	i
os	install/install	/^import os, sys, shutil$/;"	i
os	install/install_lab	/^import os, sys, shutil$/;"	i
os	install/install_naoqi	/^import os, sys$/;"	i
os	install/setup_robot	/^import os, getopt, re$/;"	i
os	lib/zlib/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s
os	tools/behaviorSim/runCMAES.py	/^import json, sys, os, shutil, subprocess, re, time$/;"	i
os	tools/plotCOM.py	/^  import os.path$/;"	i
os_clock	lib/lua/src/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	lib/lua/src/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	lib/lua/src/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	lib/lua/src/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	lib/lua/src/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	lib/lua/src/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_pushresult	lib/lua/src/loslib.c	/^static int os_pushresult (lua_State *L, int i, const char *filename) {$/;"	f	file:
os_remove	lib/lua/src/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	lib/lua/src/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	lib/lua/src/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	lib/lua/src/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	lib/lua/src/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
ostream	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^	class ostream$/;"	c	namespace:YAML
ostream	lib/yaml-cpp/src/ostream.cpp	/^	ostream::ostream(): m_buffer(0), m_pos(0), m_size(0), m_row(0), m_col(0)$/;"	f	class:YAML::ostream
otherwhite	lib/lua/src/lgc.h	/^#define otherwhite(/;"	d
ourKickOff	core/memory/GameStateBlock.h	/^  bool ourKickOff;$/;"	m	struct:GameStateBlock
ourKickoffPosesDesired	core/common/RobotPositions.cpp	/^Pose2D* RobotPositions::ourKickoffPosesDesired = new Pose2D[NUM_TEAM_POSES];$/;"	m	class:RobotPositions	file:
ourKickoffPosesDesired	core/common/RobotPositions.h	/^    static Pose2D* ourKickoffPosesDesired;$/;"	m	class:RobotPositions
ourKickoffPosesManual	core/common/RobotPositions.cpp	/^Pose2D* RobotPositions::ourKickoffPosesManual = new Pose2D[NUM_TEAM_POSES];$/;"	m	class:RobotPositions	file:
ourKickoffPosesManual	core/common/RobotPositions.h	/^    static Pose2D* ourKickoffPosesManual;$/;"	m	class:RobotPositions
ourKickoffPosesManualReversible	core/common/RobotPositions.cpp	/^bool* RobotPositions::ourKickoffPosesManualReversible = new bool[NUM_TEAM_POSES];$/;"	m	class:RobotPositions	file:
ourKickoffPosesManualReversible	core/common/RobotPositions.h	/^    static bool*   ourKickoffPosesManualReversible;$/;"	m	class:RobotPositions
ourScore	core/memory/GameStateBlock.h	/^  int ourScore;$/;"	m	struct:GameStateBlock
out	lib/zlib/gzguts.h	/^    unsigned char *out;     \/* output buffer (double-sized when reading) *\/$/;"	m	struct:__anon135
outSignal	core/python/state_machine.py	/^  def outSignal(self):$/;"	m	class:Node
out_func	lib/zlib/zconf.h	/^#  define out_func /;"	d
out_func	lib/zlib/zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
out_sock_	core/communications/UDPWrapper.h	/^  udp::socket out_sock_;$/;"	m	class:UDPWrapper
outbound	core/communications/UDPWrapper.cpp	/^#define outbound(/;"	d	file:
outer	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
outerepsi	lib/alglib/optimization.h	/^    double outerepsi;$/;"	m	struct:alglib_impl::__anon79
outerepsx	lib/alglib/optimization.h	/^    double outerepsx;$/;"	m	struct:alglib_impl::__anon79
outeriterationscount	lib/alglib/optimization.h	/^    ae_int_t &outeriterationscount;$/;"	m	class:alglib::minbleicreport
outeriterationscount	lib/alglib/optimization.h	/^    ae_int_t &outeriterationscount;$/;"	m	class:alglib::minqpreport
outeriterationscount	lib/alglib/optimization.h	/^    ae_int_t outeriterationscount;$/;"	m	struct:alglib_impl::__anon72
outeriterationscount	lib/alglib/optimization.h	/^    ae_int_t outeriterationscount;$/;"	m	struct:alglib_impl::__anon80
outlier_rejection_thresh	core/opponents/UKF4.h	/^  float outlier_rejection_thresh;$/;"	m	struct:SmallUKF4Params
output	lib/lua/src/luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	file:
outputBadPaths	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::outputBadPaths(float maxDistError, float maxRotError) {$/;"	f	class:LocalizationSimulation
outputBadPaths	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::outputBadPaths(float maxDistError, float maxRotError) {$/;"	f	class:LocalizationSimulation
outputBadPaths_	build/include/tool/simulation/LocalizationSimulation.h	/^    bool outputBadPaths_;$/;"	m	class:LocalizationSimulation
outputBadPaths_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    bool outputBadPaths_;$/;"	m	class:LocalizationSimulation
outputFile	build/luaswig/generateSwig.py	/^    outputFile = args[2]$/;"	v
outputFile	interfaces/sim_spark/main.cpp	/^string outputFile; \/\/ For optimization$/;"	v
outside_side_dist_from_stance_left_swing_	core/motion/KickParameters.h	/^  float outside_side_dist_from_stance_left_swing_;$/;"	m	struct:KickParameters
outside_side_dist_from_stance_right_swing_	core/motion/KickParameters.h	/^  float outside_side_dist_from_stance_right_swing_;$/;"	m	struct:KickParameters
overflow	core/motion/rswalk2014/utils/basic_onullstream.hpp	/^   typename traits::int_type overflow(typename traits::int_type c) {$/;"	f	class:basic_nullbuf
overlappedBy	core/math/Range.h	/^    bool overlappedBy(const Range<T>& r) const {return min > r.min && max > r.max && min < r.max;}$/;"	f	class:Range
overlapping	core/vision/structures/GoalPostCandidate.cpp	/^bool overlapping(GoalPostCandidate b1, GoalPostCandidate b2){$/;"	f
overlaps	core/math/Range.h	/^    bool overlaps(const Range<T>& r) const {return min < r.min && max < r.max && max > r.min;}$/;"	f	class:Range
overlayAllTeamPackets	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayAllTeamPackets(){$/;"	f	class:GLDrawer
overlayAllTeamPackets	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayAllTeamPackets(){$/;"	f	class:GLDrawer
overlayAlternLocationText	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayAlternLocationText() {$/;"	f	class:GLDrawer
overlayAlternLocationText	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayAlternLocationText() {$/;"	f	class:GLDrawer
overlayBasicInfoText	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayBasicInfoText() {$/;"	f	class:GLDrawer
overlayBasicInfoText	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayBasicInfoText() {$/;"	f	class:GLDrawer
overlayKickChoices	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayKickChoices(){$/;"	f	class:GLDrawer
overlayKickChoices	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayKickChoices(){$/;"	f	class:GLDrawer
overlayLocationText	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayLocationText() {$/;"	f	class:GLDrawer
overlayLocationText	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayLocationText() {$/;"	f	class:GLDrawer
overlayObjectIDText	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayObjectIDText() {$/;"	f	class:GLDrawer
overlayObjectIDText	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayObjectIDText() {$/;"	f	class:GLDrawer
overlayObservationText	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayObservationText() {$/;"	f	class:GLDrawer
overlayObservationText	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayObservationText() {$/;"	f	class:GLDrawer
overlayOdometry	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayOdometry() {$/;"	f	class:GLDrawer
overlayOdometry	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayOdometry() {$/;"	f	class:GLDrawer
overlayOpponentText	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayOpponentText(){$/;"	f	class:GLDrawer
overlayOpponentText	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayOpponentText(){$/;"	f	class:GLDrawer
overlaySonar	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlaySonar(){$/;"	f	class:GLDrawer
overlaySonar	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlaySonar(){$/;"	f	class:GLDrawer
overlayTeamPackets	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayTeamPackets(){$/;"	f	class:GLDrawer
overlayTeamPackets	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayTeamPackets(){$/;"	f	class:GLDrawer
overlayTruthText	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayTruthText() {$/;"	f	class:GLDrawer
overlayTruthText	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::overlayTruthText() {$/;"	f	class:GLDrawer
override	build/include/tool/simulation/GoalieSimulation.h	/^    void simulationStep() override;$/;"	m	class:GoalieSimulation
override	tools/UTNaoTool/simulation/GoalieSimulation.h	/^    void simulationStep() override;$/;"	m	class:GoalieSimulation
ownCrossLocation	core/common/Bowdoin14Field.h	/^const Point2D ownCrossLocation = Point2D(-PENALTY_CROSS_X, 0);$/;"	v
ownCrossLocation	core/common/Field.h	/^const Point2D ownCrossLocation = Point2D(-PENALTY_CROSS_X, 0);$/;"	v
ownCrossLocation	core/common/RC2013Field.h	/^const Point2D ownCrossLocation = Point2D(-PENALTY_CROSS_X, 0);$/;"	v
ownCrossLocation	core/common/UTField.h	/^const Point2D ownCrossLocation = Point2D(-PENALTY_CROSS_X, 0);$/;"	v
ownGoalRadius	core/memory/BehaviorParamBlock.h	/^  float ownGoalRadius;$/;"	m	struct:KickStrategy
owned	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        bool owned() const { return !m_unownedData; }$/;"	f	class:YAML::Binary
owner	core/memory/MemoryBlock.h	/^  MemoryOwner::Owner owner;$/;"	m	class:MemoryBlock
owner	lib/alglib/ap.h	/^    ae_int64_t     owner;$/;"	m	struct:alglib_impl::__anon32
owner	lib/alglib/ap.h	/^    ae_int64_t     owner;$/;"	m	struct:alglib_impl::__anon33
owner	lib/alglib/ap.h	/^    ae_int64_t     owner;$/;"	m	struct:alglib_impl::__anon34
owner_	core/memory/Memory.h	/^  MemoryOwner::Owner owner_;$/;"	m	class:Memory
owns	core/memory/Lock.cpp	/^bool Lock::owns() {$/;"	f	class:Lock
p	lib/alglib/interpolation.h	/^    ae_vector p;$/;"	m	struct:alglib_impl::__anon64
p	lib/alglib/interpolation.h	/^    ae_vector p;$/;"	m	struct:alglib_impl::__anon65
p	lib/alglib/optimization.h	/^    ae_int_t p;$/;"	m	struct:alglib_impl::__anon69
p	lib/lua/src/lauxlib.h	/^  char *p;			\/* current position in buffer *\/$/;"	m	struct:luaL_Buffer
p	lib/lua/src/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto
p	lib/lua/src/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto
p	lib/lua/src/lobject.h	/^  void *p;$/;"	m	union:__anon87
p	lib/lua/src/lstate.h	/^  struct Proto p;$/;"	m	union:GCObject	typeref:struct:GCObject::Proto
p	lib/lua/src/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio
p1	core/common/RobotCalibration.h	/^      p1, p2;$/;"	m	class:RobotCalibration
p2	core/common/RobotCalibration.h	/^      p1, p2;$/;"	m	class:RobotCalibration
p2	lib/alglib/optimization.h	/^    ae_vector p2;$/;"	m	struct:alglib_impl::__anon71
pAway	core/motion/rswalk2014/types/PostInfo.hpp	/^      pAway        = 0x08,$/;"	e	enum:PostInfo::Type
pAwayLeft	core/motion/rswalk2014/types/PostInfo.hpp	/^      pAwayLeft    = pLeft  | pAway,$/;"	e	enum:PostInfo::Type
pAwayRight	core/motion/rswalk2014/types/PostInfo.hpp	/^      pAwayRight   = pRight | pAway,$/;"	e	enum:PostInfo::Type
pContainer	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^      void *pContainer;$/;"	m	struct:YAML::GraphBuilderAdapter::ContainerFrame
pFunction	core/math/GaussNewtonOptimizer.h	/^  float(C::*pFunction)(const M& measurement, const std::vector<float>& parameters) const;  \/**< A pointer to the error function. *\/$/;"	m	class:GaussNewtonOptimizer
pHome	core/motion/rswalk2014/types/PostInfo.hpp	/^      pHome        = 0x04,$/;"	e	enum:PostInfo::Type
pHomeLeft	core/motion/rswalk2014/types/PostInfo.hpp	/^      pHomeLeft    = pLeft  | pHome,$/;"	e	enum:PostInfo::Type
pHomeRight	core/motion/rswalk2014/types/PostInfo.hpp	/^      pHomeRight   = pRight | pHome,$/;"	e	enum:PostInfo::Type
pIndent	lib/yaml-cpp/src/scanner.h	/^			IndentMarker *pIndent;$/;"	m	struct:YAML::Scanner::SimpleKey
pKey	lib/yaml-cpp/src/scanner.h	/^			Token *pMapStart, *pKey;$/;"	m	struct:YAML::Scanner::SimpleKey
pLeft	core/motion/rswalk2014/types/PostInfo.hpp	/^      pLeft        = 0x01,$/;"	e	enum:PostInfo::Type
pMapStart	lib/yaml-cpp/src/scanner.h	/^			Token *pMapStart, *pKey;$/;"	m	struct:YAML::Scanner::SimpleKey
pNone	core/motion/rswalk2014/types/PostInfo.hpp	/^      pNone        = 0x00,$/;"	e	enum:PostInfo::Type
pPrevKeyNode	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^      void *pPrevKeyNode;$/;"	m	struct:YAML::GraphBuilderAdapter::ContainerFrame
pRet	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^		const Node *pRet;$/;"	m	struct:YAML::_FindFromNodeAtIndex
pRight	core/motion/rswalk2014/types/PostInfo.hpp	/^      pRight       = 0x02,$/;"	e	enum:PostInfo::Type
pStartToken	lib/yaml-cpp/src/scanner.h	/^			Token *pStartToken;$/;"	m	struct:YAML::Scanner::IndentMarker
pToLeftOf	core/motion/rswalk2014/types/PostInfo.hpp	/^      pToLeftOf,$/;"	e	enum:PostInfo::Direction
pToRightOf	core/motion/rswalk2014/types/PostInfo.hpp	/^      pToRightOf,$/;"	e	enum:PostInfo::Direction
pUnknown	core/motion/rswalk2014/types/PostInfo.hpp	/^      pUnknown$/;"	e	enum:PostInfo::Direction
p_bool	lib/alglib/ap.h	/^        ae_bool *p_bool;$/;"	m	union:alglib_impl::ae_vector::__anon36
p_complex	lib/alglib/ap.h	/^        ae_complex *p_complex;$/;"	m	union:alglib_impl::ae_vector::__anon36
p_double	lib/alglib/ap.h	/^        double *p_double;$/;"	m	union:alglib_impl::ae_vector::__anon36
p_int	lib/alglib/ap.h	/^        ae_int_t *p_int;$/;"	m	union:alglib_impl::ae_vector::__anon36
p_legacy_BLUE_BOTH	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   p_legacy_BLUE_BOTH = 3,$/;"	e	enum:WhichPosts
p_legacy_BLUE_EITHER	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   p_legacy_BLUE_EITHER = 4,$/;"	e	enum:WhichPosts
p_legacy_BLUE_LEFT	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   p_legacy_BLUE_LEFT = 1,$/;"	e	enum:WhichPosts
p_legacy_BLUE_RIGHT	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   p_legacy_BLUE_RIGHT = 2,$/;"	e	enum:WhichPosts
p_legacy_NONE	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   p_legacy_NONE = 0,$/;"	e	enum:WhichPosts
p_legacy_YELLOW_BOTH	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   p_legacy_YELLOW_BOTH = 7,$/;"	e	enum:WhichPosts
p_legacy_YELLOW_EITHER	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   p_legacy_YELLOW_EITHER = 8$/;"	e	enum:WhichPosts
p_legacy_YELLOW_LEFT	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   p_legacy_YELLOW_LEFT = 5,$/;"	e	enum:WhichPosts
p_legacy_YELLOW_RIGHT	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   p_legacy_YELLOW_RIGHT = 6,$/;"	e	enum:WhichPosts
p_mat	lib/alglib/ap.h	/^    alglib_impl::ae_matrix *p_mat;$/;"	m	class:alglib::ae_matrix_wrapper
p_next	lib/alglib/ap.h	/^    struct ae_dyn_block * volatile p_next;$/;"	m	struct:alglib_impl::ae_dyn_block
p_ptr	lib/alglib/ap.h	/^        void *p_ptr;$/;"	m	union:alglib_impl::ae_matrix::__anon37
p_ptr	lib/alglib/ap.h	/^        void *p_ptr;$/;"	m	union:alglib_impl::ae_vector::__anon36
p_struct	lib/alglib/alglibmisc.h	/^    alglib_impl::hqrndstate *p_struct;$/;"	m	class:alglib::_hqrndstate_owner
p_struct	lib/alglib/alglibmisc.h	/^    alglib_impl::kdtree *p_struct;$/;"	m	class:alglib::_kdtree_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::decisionforest *p_struct;$/;"	m	class:alglib::_decisionforest_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::dfreport *p_struct;$/;"	m	class:alglib::_dfreport_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::linearmodel *p_struct;$/;"	m	class:alglib::_linearmodel_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::logitmodel *p_struct;$/;"	m	class:alglib::_logitmodel_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::lrreport *p_struct;$/;"	m	class:alglib::_lrreport_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::mlpcvreport *p_struct;$/;"	m	class:alglib::_mlpcvreport_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::mlpensemble *p_struct;$/;"	m	class:alglib::_mlpensemble_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::mlpreport *p_struct;$/;"	m	class:alglib::_mlpreport_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::mnlreport *p_struct;$/;"	m	class:alglib::_mnlreport_owner
p_struct	lib/alglib/dataanalysis.h	/^    alglib_impl::multilayerperceptron *p_struct;$/;"	m	class:alglib::_multilayerperceptron_owner
p_struct	lib/alglib/diffequations.h	/^    alglib_impl::odesolverreport *p_struct;$/;"	m	class:alglib::_odesolverreport_owner
p_struct	lib/alglib/diffequations.h	/^    alglib_impl::odesolverstate *p_struct;$/;"	m	class:alglib::_odesolverstate_owner
p_struct	lib/alglib/integration.h	/^    alglib_impl::autogkreport *p_struct;$/;"	m	class:alglib::_autogkreport_owner
p_struct	lib/alglib/integration.h	/^    alglib_impl::autogkstate *p_struct;$/;"	m	class:alglib::_autogkstate_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::barycentricfitreport *p_struct;$/;"	m	class:alglib::_barycentricfitreport_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::barycentricinterpolant *p_struct;$/;"	m	class:alglib::_barycentricinterpolant_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::idwinterpolant *p_struct;$/;"	m	class:alglib::_idwinterpolant_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::lsfitreport *p_struct;$/;"	m	class:alglib::_lsfitreport_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::lsfitstate *p_struct;$/;"	m	class:alglib::_lsfitstate_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::polynomialfitreport *p_struct;$/;"	m	class:alglib::_polynomialfitreport_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::pspline2interpolant *p_struct;$/;"	m	class:alglib::_pspline2interpolant_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::pspline3interpolant *p_struct;$/;"	m	class:alglib::_pspline3interpolant_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::spline1dfitreport *p_struct;$/;"	m	class:alglib::_spline1dfitreport_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::spline1dinterpolant *p_struct;$/;"	m	class:alglib::_spline1dinterpolant_owner
p_struct	lib/alglib/interpolation.h	/^    alglib_impl::spline2dinterpolant *p_struct;$/;"	m	class:alglib::_spline2dinterpolant_owner
p_struct	lib/alglib/linalg.h	/^    alglib_impl::matinvreport *p_struct;$/;"	m	class:alglib::_matinvreport_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minasareport *p_struct;$/;"	m	class:alglib::_minasareport_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minasastate *p_struct;$/;"	m	class:alglib::_minasastate_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minbleicreport *p_struct;$/;"	m	class:alglib::_minbleicreport_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minbleicstate *p_struct;$/;"	m	class:alglib::_minbleicstate_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::mincgreport *p_struct;$/;"	m	class:alglib::_mincgreport_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::mincgstate *p_struct;$/;"	m	class:alglib::_mincgstate_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minlbfgsreport *p_struct;$/;"	m	class:alglib::_minlbfgsreport_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minlbfgsstate *p_struct;$/;"	m	class:alglib::_minlbfgsstate_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minlmreport *p_struct;$/;"	m	class:alglib::_minlmreport_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minlmstate *p_struct;$/;"	m	class:alglib::_minlmstate_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minqpreport *p_struct;$/;"	m	class:alglib::_minqpreport_owner
p_struct	lib/alglib/optimization.h	/^    alglib_impl::minqpstate *p_struct;$/;"	m	class:alglib::_minqpstate_owner
p_struct	lib/alglib/solvers.h	/^    alglib_impl::densesolverlsreport *p_struct;$/;"	m	class:alglib::_densesolverlsreport_owner
p_struct	lib/alglib/solvers.h	/^    alglib_impl::densesolverreport *p_struct;$/;"	m	class:alglib::_densesolverreport_owner
p_struct	lib/alglib/solvers.h	/^    alglib_impl::nleqreport *p_struct;$/;"	m	class:alglib::_nleqreport_owner
p_struct	lib/alglib/solvers.h	/^    alglib_impl::nleqstate *p_struct;$/;"	m	class:alglib::_nleqstate_owner
p_top_block	lib/alglib/ap.h	/^    ae_dyn_block * volatile p_top_block;$/;"	m	struct:alglib_impl::__anon35
p_vec	lib/alglib/ap.h	/^    alglib_impl::ae_vector *p_vec;$/;"	m	class:alglib::ae_vector_wrapper
packetNumber	core/communications/RoboCupGameControlData.h	/^  uint8_t packetNumber;         \/\/ number incremented with each packet sent (with wraparound)$/;"	m	struct:RoboCupGameControlData
paintEvent	build/include/tool/ImageWidget.cpp	/^void ImageWidget::paintEvent(QPaintEvent *event) {$/;"	f	class:ImageWidget
paintEvent	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::paintEvent(QPaintEvent *event) {$/;"	f	class:ImageWidget
paintEvent	tools/color_classifier/src/ImageWidget.cpp	/^  void ImageWidget::paintEvent(QPaintEvent *event) {$/;"	f	class:color_classifier::ImageWidget
panMoving	build/include/tool/simulation/SimulatedPlayer.h	/^  bool panMoving;$/;"	m	class:SimulatedPlayer
panMoving	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  bool panMoving;$/;"	m	class:SimulatedPlayer
panStopTime	build/include/tool/simulation/SimulatedPlayer.h	/^  float panStopTime;$/;"	m	class:SimulatedPlayer
panStopTime	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float panStopTime;$/;"	m	class:SimulatedPlayer
panic	lib/lua/src/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
panic	lib/lua/src/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State
panner_	build/include/tool/PlotWindow.h	/^  QwtPlotPanner *panner_;$/;"	m	class:PlotWindow
panner_	tools/UTNaoTool/PlotWindow.h	/^  QwtPlotPanner *panner_;$/;"	m	class:PlotWindow
parabolic	interfaces/sim_spark/Random.h	/^   float parabolic( float xMin = 0., float xMax = 1. )   \/\/ Parabolic$/;"	f	class:Random
parabolicReturn	core/motion/rswalk2014/Walk2014Generator.cpp	/^float Walk2014Generator::parabolicReturn(float f){         \/\/normalised [0,1] up and down$/;"	f	class:Walk2014Generator
parabolicStep	core/motion/rswalk2014/Walk2014Generator.cpp	/^float Walk2014Generator::parabolicStep(float time, float period, float deadTimeFraction){ \/\/normalised [0,1] step up$/;"	f	class:Walk2014Generator
parameters	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      Parameters<float> parameters;$/;"	m	class:Kinematics
params	core/python/cfglocalization.py	/^params = core.LocalizationParams()$/;"	v
params	core/sensor/offline/genInertialFilterMatrices.py	/^params = {$/;"	v
params	lib/yaml-cpp/src/token.h	/^		std::vector <std::string> params;$/;"	m	struct:YAML::Token
paramsToJsonFile	tools/behaviorSim/runCMAES.py	/^def paramsToJsonFile(filename,paramNames,x):$/;"	f
params_	build/include/tool/calibration/JointCalibrator.h	/^    ImageParams* params_;$/;"	m	class:JointCalibrator
params_	core/localization/LocalizationModule.h	/^    LocalizationParams params_;$/;"	m	class:LocalizationModule
params_	core/memory/KickParamBlock.h	/^  KickParameters params_;$/;"	m	struct:KickParamBlock
params_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    ImageParams* params_;$/;"	m	class:JointCalibrator
params_bottom_camera_	core/memory/CameraBlock.h	/^  CameraParams params_bottom_camera_;$/;"	m	struct:CameraBlock
params_omni_	core/memory/KickParamBlock.h	/^  KickParameters params_omni_;$/;"	m	struct:KickParamBlock
params_stable_	core/memory/KickParamBlock.h	/^  KickParameters params_stable_;$/;"	m	struct:KickParamBlock
params_super_	core/memory/KickParamBlock.h	/^  KickParameters params_super_;$/;"	m	struct:KickParamBlock
params_top_camera_	core/memory/CameraBlock.h	/^  CameraParams params_top_camera_;$/;"	m	struct:CameraBlock
params_wide_	core/memory/KickParamBlock.h	/^  KickParameters params_wide_;$/;"	m	struct:KickParamBlock
parent	build/include/tool/FilesWindow.h	/^    QMainWindow* parent;$/;"	m	class:FilesWindow
parent	build/include/tool/LogEditorWindow.h	/^    QMainWindow* parent;$/;"	m	class:LogEditorWindow
parent	build/include/tool/LogSelectWindow.h	/^    QMainWindow* parent;$/;"	m	class:LogSelectWindow
parent	build/include/tool/LogWindow.h	/^    QMainWindow* parent;$/;"	m	class:LogWindow
parent	build/include/tool/MotionGLWidget.h	/^  QWidget* parent;$/;"	m	class:MotionGLWidget
parent	build/include/tool/TeamConfigWindow.h	/^  QMainWindow* parent;$/;"	m	class:TeamConfigWindow
parent	tools/UTNaoTool/FilesWindow.h	/^    QMainWindow* parent;$/;"	m	class:FilesWindow
parent	tools/UTNaoTool/LogEditorWindow.h	/^    QMainWindow* parent;$/;"	m	class:LogEditorWindow
parent	tools/UTNaoTool/LogSelectWindow.h	/^    QMainWindow* parent;$/;"	m	class:LogSelectWindow
parent	tools/UTNaoTool/LogWindow.h	/^    QMainWindow* parent;$/;"	m	class:LogWindow
parent	tools/UTNaoTool/MotionGLWidget.h	/^  QWidget* parent;$/;"	m	class:MotionGLWidget
parent	tools/UTNaoTool/TeamConfigWindow.h	/^  QMainWindow* parent;$/;"	m	class:TeamConfigWindow
parent_	build/include/tool/CameraWindow.h	/^    QMainWindow* parent_;$/;"	m	class:CameraWindow
parent_	build/include/tool/UTOpenGL/GLDrawer.h	/^    QGLWidget* parent_;$/;"	m	class:GLDrawer
parent_	build/include/tool/VisionWindow.h	/^  QMainWindow* parent_;$/;"	m	class:VisionWindow
parent_	tools/UTNaoTool/CameraWindow.h	/^    QMainWindow* parent_;$/;"	m	class:CameraWindow
parent_	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    QGLWidget* parent_;$/;"	m	class:GLDrawer
parent_	tools/UTNaoTool/VisionWindow.h	/^  QMainWindow* parent_;$/;"	m	class:VisionWindow
pareto	interfaces/sim_spark/Random.h	/^   float pareto( float c )   \/\/ Pareto$/;"	f	class:Random
parlist	lib/lua/src/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
parse	interfaces/sim_spark/Parser.cpp	/^bool Parser::parse(const string &input){$/;"	f	class:Parser
parse	lib/yaml-cpp/util/parse.cpp	/^void parse(std::istream& input)$/;"	f
parseAccelerometer	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseAccelerometer(const string &str){$/;"	f	class:Parser
parseArgs	bin/common.py	/^def parseArgs(args=None):$/;"	f
parseArgs	bin/compile	/^def parseArgs(args):$/;"	f
parseArgs	bin/simInterface	/^from common import runBin, parseArgs$/;"	i
parseArgs	build/compile	/^def parseArgs(args):$/;"	f
parseFRP	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseFRP(const string &str){$/;"	f	class:Parser
parseGameState	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseGameState(const string &str){$/;"	f	class:Parser
parseGyro	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseGyro(const string &str){$/;"	f	class:Parser
parseHear	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseHear(const string &str){$/;"	f	class:Parser
parseHingeJoint	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseHingeJoint(const string &str){$/;"	f	class:Parser
parseImage	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseImage(const string &str) {$/;"	f	class:Parser
parseMyPos	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseMyPos(const string &str){$/;"	f	class:Parser
parseSee	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseSee(const string &str){$/;"	f	class:Parser
parseTime	interfaces/sim_spark/Parser.cpp	/^bool Parser::parseTime(const string &str){$/;"	f	class:Parser
parseVersion	interfaces/nao/src/naointerface.cpp	/^int parseVersion(std::string version) {$/;"	f
parse_bool_delim	lib/alglib/ap.cpp	/^ae_bool alglib::parse_bool_delim(const char *s, const char *delim)$/;"	f	class:alglib
parse_complex_delim	lib/alglib/ap.cpp	/^alglib::complex alglib::parse_complex_delim(const char *s, const char *delim)$/;"	f	class:alglib
parse_int_delim	lib/alglib/ap.cpp	/^alglib::ae_int_t alglib::parse_int_delim(const char *s, const char *delim)$/;"	f	class:alglib
parse_real_delim	lib/alglib/ap.cpp	/^double alglib::parse_real_delim(const char *s, const char *delim)$/;"	f	class:alglib
parser	bin/copy_robot	/^  parser = OptionParser(usage)$/;"	v
parser	build/copy_robot	/^  parser = OptionParser(usage)$/;"	v
parser_	interfaces/sim_spark/RobotBehavior.h	/^  Parser* parser_;$/;"	m	class:RobotBehavior
partLeftEar	core/lights/LEDModule.cpp	/^void LEDModule::partLeftEar(float val, int start, int number) {$/;"	f	class:LEDModule
partRightEar	core/lights/LEDModule.cpp	/^void LEDModule::partRightEar(float val, int start, int number) {$/;"	f	class:LEDModule
partial	core/python/mem_objects.py	/^from functools import partial$/;"	i
particles	core/localization/ParticleFilter.h	/^    inline const std::vector<Particle>& particles() const {$/;"	f	class:ParticleFilter
particles	core/localization/ParticleFilter.h	/^    inline std::vector<Particle>& particles() {$/;"	f	class:ParticleFilter
particles	core/memory/LocalizationBlock.h	/^    std::vector<Particle> particles;$/;"	m	struct:LocalizationBlock
partsphere	tools/behaviorSim/cma.py	/^    def partsphere(self, x):$/;"	m	class:FitnessFunctions
pascal	interfaces/sim_spark/Random.h	/^   int pascal( int s, float p )              \/\/ Pascal$/;"	f	class:Random
passDistance	core/memory/BehaviorParamBlock.h	/^  float passDistance;$/;"	m	struct:KickStrategy
passInfo	core/memory/BehaviorBlock.h	/^  PassInfo passInfo;$/;"	m	struct:BehaviorBlock
passStrategy	core/memory/BehaviorParamBlock.h	/^  PassStrategy passStrategy;$/;"	m	struct:BehaviorParamBlock
passive	core/python/behaviors/win.py	/^  passive=0$/;"	v	class:Modes
patchlistaux	lib/lua/src/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	lib/lua/src/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
path	bin/behaviorSim	/^  path = os.getenv('NAO_HOME') + '\/build2\/behaviorSim\/behaviorSim'$/;"	v
path	bin/tool	/^  path = os.getenv('NAO_HOME') + '\/build\/tool\/UTNaoTool'$/;"	v
path	build/luaswig/generateSwig.py	/^    path = args[1]$/;"	v
path	lib/zlib/gzguts.h	/^    char *path;             \/* path or fd for error messages *\/$/;"	m	struct:__anon135
path	tools/plotCOM.py	/^  import os.path$/;"	i
path_	build/include/tool/simulation/LocalizationSimulation.h	/^    SimulationPath path_, origPath_;$/;"	m	class:LocalizationSimulation
path_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    SimulationPath path_, origPath_;$/;"	m	class:LocalizationSimulation
patternType	build/include/tool/calibration/CalibratorSettings.h	/^    Pattern patternType;$/;"	m	class:CalibratorSettings
patternType	tools/UTNaoTool/calibration/CalibratorSettings.h	/^    Pattern patternType;$/;"	m	class:CalibratorSettings
pause	build/include/tool/WorldWindow.h	/^    void pause() { play_ = false; updateDisplay(); }$/;"	f	class:WorldWindow
pause	build/include/tool/calibration/JointCalibrator.cpp	/^void JointCalibrator::pause() {$/;"	f	class:JointCalibrator
pause	core/common/Profiling.cpp	/^void Timer::pause() {$/;"	f	class:Timer
pause	tools/UTNaoTool/WorldWindow.h	/^    void pause() { play_ = false; updateDisplay(); }$/;"	f	class:WorldWindow
pause	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^void JointCalibrator::pause() {$/;"	f	class:JointCalibrator
pauseId_	core/common/Profiling.h	/^    int id_, pauseId_;$/;"	m	class:Timer
paused_	build/include/tool/IntrinsicCalibrationWidget.h	/^    bool isCollecting_, paused_;$/;"	m	class:IntrinsicCalibrationWidget
paused_	core/common/Profiling.h	/^    double elapsed_, paused_;$/;"	m	class:Timer
paused_	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^    bool isCollecting_, paused_;$/;"	m	class:IntrinsicCalibrationWidget
pc	lib/lua/src/lparser.h	/^  int pc;  \/* next position to code (equivalent to `ncode') *\/$/;"	m	struct:FuncState
pcRel	lib/lua/src/ldebug.h	/^#define pcRel(/;"	d
pcabuildbasis	lib/alglib/dataanalysis.cpp	/^void pcabuildbasis(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
pcabuildbasis	lib/alglib/dataanalysis.cpp	/^void pcabuildbasis(const real_2d_array &x, const ae_int_t npoints, const ae_int_t nvars, ae_int_t &info, real_1d_array &s2, real_2d_array &v)$/;"	f	namespace:alglib
pdf-LUAL_BUFFERSIZE	lib/lua/doc/manual.html	/^Returns an address to a space of size <a name="pdf-LUAL_BUFFERSIZE"><code>LUAL_BUFFERSIZE<\/code><\/a>$/;"	a
pdf-LUA_CPATH	lib/lua/doc/manual.html	/^using the environment variable <a name="pdf-LUA_CPATH"><code>LUA_CPATH<\/code><\/a>$/;"	a
pdf-LUA_ENVIRONINDEX	lib/lua/doc/manual.html	/^at pseudo-index <a name="pdf-LUA_ENVIRONINDEX"><code>LUA_ENVIRONINDEX<\/code><\/a>.$/;"	a
pdf-LUA_ERRERR	lib/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRERR"><code>LUA_ERRERR<\/code><\/a>:<\/b>$/;"	a
pdf-LUA_ERRFILE	lib/lua/doc/manual.html	/^but it has an extra error code <a name="pdf-LUA_ERRFILE"><code>LUA_ERRFILE<\/code><\/a>$/;"	a
pdf-LUA_ERRMEM	lib/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRMEM"><code>LUA_ERRMEM<\/code><\/a>:<\/b>$/;"	a
pdf-LUA_ERRRUN	lib/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRRUN"><code>LUA_ERRRUN<\/code><\/a>:<\/b>$/;"	a
pdf-LUA_ERRSYNTAX	lib/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRSYNTAX"><code>LUA_ERRSYNTAX<\/code><\/a>:<\/b>$/;"	a
pdf-LUA_GLOBALSINDEX	lib/lua/doc/manual.html	/^always at pseudo-index <a name="pdf-LUA_GLOBALSINDEX"><code>LUA_GLOBALSINDEX<\/code><\/a>.$/;"	a
pdf-LUA_HOOKCALL	lib/lua/doc/manual.html	/^<a name="pdf-LUA_HOOKCALL"><code>LUA_HOOKCALL<\/code><\/a>, <a name="pdf-LUA_HOOKRET"><code>LUA_HOOKRET<\/code><\/a>,$/;"	a
pdf-LUA_HOOKCOUNT	lib/lua/doc/manual.html	/^and <a name="pdf-LUA_HOOKCOUNT"><code>LUA_HOOKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_HOOKTAILRET	lib/lua/doc/manual.html	/^<a name="pdf-LUA_HOOKTAILRET"><code>LUA_HOOKTAILRET<\/code><\/a>, <a name="pdf-LUA_HOOKLINE"><code>LUA_HOOKLINE<\/code><\/a>,$/;"	a
pdf-LUA_INIT	lib/lua/doc/manual.html	/^the interpreter checks for an environment variable <a name="pdf-LUA_INIT"><code>LUA_INIT<\/code><\/a>.$/;"	a
pdf-LUA_MASKCALL	lib/lua/doc/manual.html	/^<a name="pdf-LUA_MASKCALL"><code>LUA_MASKCALL<\/code><\/a>,$/;"	a
pdf-LUA_MASKCOUNT	lib/lua/doc/manual.html	/^and <a name="pdf-LUA_MASKCOUNT"><code>LUA_MASKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_MASKLINE	lib/lua/doc/manual.html	/^<a name="pdf-LUA_MASKLINE"><code>LUA_MASKLINE<\/code><\/a>,$/;"	a
pdf-LUA_MASKRET	lib/lua/doc/manual.html	/^<a name="pdf-LUA_MASKRET"><code>LUA_MASKRET<\/code><\/a>,$/;"	a
pdf-LUA_MINSTACK	lib/lua/doc/manual.html	/^it ensures that at least <a name="pdf-LUA_MINSTACK"><code>LUA_MINSTACK<\/code><\/a> stack positions are available.$/;"	a
pdf-LUA_MULTRET	lib/lua/doc/manual.html	/^unless <code>nresults<\/code> is <a name="pdf-LUA_MULTRET"><code>LUA_MULTRET<\/code><\/a>.$/;"	a
pdf-LUA_NOREF	lib/lua/doc/manual.html	/^The constant <a name="pdf-LUA_NOREF"><code>LUA_NOREF<\/code><\/a> is guaranteed to be different$/;"	a
pdf-LUA_PATH	lib/lua/doc/manual.html	/^the value of the environment variable <a name="pdf-LUA_PATH"><code>LUA_PATH<\/code><\/a> or$/;"	a
pdf-LUA_REFNIL	lib/lua/doc/manual.html	/^<a href="#luaL_ref"><code>luaL_ref<\/code><\/a> returns the constant <a name="pdf-LUA_REFNIL"><code>LUA_REFNIL<\/code><\/a>.$/;"	a
pdf-LUA_REGISTRYINDEX	lib/lua/doc/manual.html	/^<a name="pdf-LUA_REGISTRYINDEX"><code>LUA_REGISTRYINDEX<\/code><\/a>.$/;"	a
pdf-LUA_YIELD	lib/lua/doc/manual.html	/^or <a name="pdf-LUA_YIELD"><code>LUA_YIELD<\/code><\/a> if the thread is suspended.$/;"	a
pdf-_G	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-_G"><code>_G<\/code><\/a><\/h3>$/;"	a
pdf-_PROMPT	lib/lua/doc/manual.html	/^If the global variable <a name="pdf-_PROMPT"><code>_PROMPT<\/code><\/a> contains a string,$/;"	a
pdf-_PROMPT2	lib/lua/doc/manual.html	/^Similarly, if the global variable <a name="pdf-_PROMPT2"><code>_PROMPT2<\/code><\/a> contains a string,$/;"	a
pdf-_VERSION	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-_VERSION"><code>_VERSION<\/code><\/a><\/h3>$/;"	a
pdf-assert	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-assert"><code>assert (v [, message])<\/code><\/a><\/h3>$/;"	a
pdf-collectgarbage	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-collectgarbage"><code>collectgarbage (opt [, arg])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine	lib/lua/doc/manual.html	/^the basic library and come inside the table <a name="pdf-coroutine"><code>coroutine<\/code><\/a>.$/;"	a
pdf-coroutine.create	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.create"><code>coroutine.create (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.resume	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.resume"><code>coroutine.resume (co [, val1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.running	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.running"><code>coroutine.running ()<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.status	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.status"><code>coroutine.status (co)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.wrap	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.wrap"><code>coroutine.wrap (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.yield	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.yield"><code>coroutine.yield (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-debug	lib/lua/doc/manual.html	/^inside the <a name="pdf-debug"><code>debug<\/code><\/a> table.$/;"	a
pdf-debug.debug	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.debug"><code>debug.debug ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.getfenv	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getfenv"><code>debug.getfenv (o)<\/code><\/a><\/h3>$/;"	a
pdf-debug.gethook	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.gethook"><code>debug.gethook ([thread])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getinfo	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getinfo"><code>debug.getinfo ([thread,] function [, what])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getlocal	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getlocal"><code>debug.getlocal ([thread,] level, local)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getmetatable	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getmetatable"><code>debug.getmetatable (object)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getregistry	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getregistry"><code>debug.getregistry ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.getupvalue	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getupvalue"><code>debug.getupvalue (func, up)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setfenv	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setfenv"><code>debug.setfenv (object, table)<\/code><\/a><\/h3>$/;"	a
pdf-debug.sethook	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.sethook"><code>debug.sethook ([thread,] hook, mask [, count])<\/code><\/a><\/h3>$/;"	a
pdf-debug.setlocal	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setlocal"><code>debug.setlocal ([thread,] level, local, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setmetatable	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setmetatable"><code>debug.setmetatable (object, table)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setupvalue	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setupvalue"><code>debug.setupvalue (func, up, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.traceback	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.traceback"><code>debug.traceback ([thread,] [message] [, level])<\/code><\/a><\/h3>$/;"	a
pdf-dofile	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-dofile"><code>dofile (filename)<\/code><\/a><\/h3>$/;"	a
pdf-error	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-error"><code>error (message [, level])<\/code><\/a><\/h3>$/;"	a
pdf-file:close	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:close"><code>file:close ()<\/code><\/a><\/h3>$/;"	a
pdf-file:flush	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:flush"><code>file:flush ()<\/code><\/a><\/h3>$/;"	a
pdf-file:lines	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:lines"><code>file:lines ()<\/code><\/a><\/h3>$/;"	a
pdf-file:read	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:read"><code>file:read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-file:seek	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:seek"><code>file:seek ([whence] [, offset])<\/code><\/a><\/h3>$/;"	a
pdf-file:setvbuf	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:setvbuf"><code>file:setvbuf (mode [, size])<\/code><\/a><\/h3>$/;"	a
pdf-file:write	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:write"><code>file:write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-getfenv	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-getfenv"><code>getfenv ([f])<\/code><\/a><\/h3>$/;"	a
pdf-getmetatable	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-getmetatable"><code>getmetatable (object)<\/code><\/a><\/h3>$/;"	a
pdf-io	lib/lua/doc/manual.html	/^all operations are supplied by table <a name="pdf-io"><code>io<\/code><\/a>.$/;"	a
pdf-io.close	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.close"><code>io.close ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.flush	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.flush"><code>io.flush ()<\/code><\/a><\/h3>$/;"	a
pdf-io.input	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.input"><code>io.input ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.lines	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.lines"><code>io.lines ([filename])<\/code><\/a><\/h3>$/;"	a
pdf-io.open	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.open"><code>io.open (filename [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.output	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.output"><code>io.output ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.popen	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.popen"><code>io.popen (prog [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.read	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.read"><code>io.read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-io.stdin	lib/lua/doc/manual.html	/^<a name="pdf-io.stdin"><code>io.stdin<\/code><\/a>, <a name="pdf-io.stdout"><code>io.stdout<\/code><\/a>, and <a name="pdf-io.stderr"><code>io.stderr<\/code><\/a>.$/;"	a
pdf-io.tmpfile	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.tmpfile"><code>io.tmpfile ()<\/code><\/a><\/h3>$/;"	a
pdf-io.type	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.type"><code>io.type (obj)<\/code><\/a><\/h3>$/;"	a
pdf-io.write	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.write"><code>io.write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-ipairs	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-ipairs"><code>ipairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-load	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-load"><code>load (func [, chunkname])<\/code><\/a><\/h3>$/;"	a
pdf-loadfile	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-loadfile"><code>loadfile ([filename])<\/code><\/a><\/h3>$/;"	a
pdf-loadstring	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-loadstring"><code>loadstring (string [, chunkname])<\/code><\/a><\/h3>$/;"	a
pdf-lua.h	lib/lua/doc/manual.html	/^are declared in the header file <a name="pdf-lua.h"><code>lua.h<\/code><\/a>.$/;"	a
pdf-luai_apicheck	lib/lua/doc/manual.html	/^with a proper definition for the macro <a name="pdf-luai_apicheck"><code>luai_apicheck<\/code><\/a>,$/;"	a
pdf-lualib.h	lib/lua/doc/manual.html	/^These functions are declared in <a name="pdf-lualib.h"><code>lualib.h<\/code><\/a>$/;"	a
pdf-luaopen_base	lib/lua/doc/manual.html	/^<a name="pdf-luaopen_base"><code>luaopen_base<\/code><\/a> (for the basic library),$/;"	a
pdf-luaopen_debug	lib/lua/doc/manual.html	/^and <a name="pdf-luaopen_debug"><code>luaopen_debug<\/code><\/a> (for the debug library).$/;"	a
pdf-luaopen_io	lib/lua/doc/manual.html	/^<a name="pdf-luaopen_io"><code>luaopen_io<\/code><\/a> (for the I\/O library),$/;"	a
pdf-luaopen_math	lib/lua/doc/manual.html	/^<a name="pdf-luaopen_math"><code>luaopen_math<\/code><\/a> (for the mathematical library),$/;"	a
pdf-luaopen_os	lib/lua/doc/manual.html	/^<a name="pdf-luaopen_os"><code>luaopen_os<\/code><\/a> (for the Operating System library),$/;"	a
pdf-luaopen_package	lib/lua/doc/manual.html	/^<a name="pdf-luaopen_package"><code>luaopen_package<\/code><\/a> (for the package library),$/;"	a
pdf-luaopen_string	lib/lua/doc/manual.html	/^<a name="pdf-luaopen_string"><code>luaopen_string<\/code><\/a> (for the string library),$/;"	a
pdf-luaopen_table	lib/lua/doc/manual.html	/^<a name="pdf-luaopen_table"><code>luaopen_table<\/code><\/a> (for the table library),$/;"	a
pdf-math	lib/lua/doc/manual.html	/^It provides all its functions inside the table <a name="pdf-math"><code>math<\/code><\/a>.$/;"	a
pdf-math.abs	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.abs"><code>math.abs (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.acos	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.acos"><code>math.acos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.asin	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.asin"><code>math.asin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.atan	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.atan"><code>math.atan (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.atan2	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.atan2"><code>math.atan2 (y, x)<\/code><\/a><\/h3>$/;"	a
pdf-math.ceil	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.ceil"><code>math.ceil (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.cos	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.cos"><code>math.cos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.cosh	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.cosh"><code>math.cosh (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.deg	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.deg"><code>math.deg (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.exp	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.exp"><code>math.exp (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.floor	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.floor"><code>math.floor (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.fmod	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.fmod"><code>math.fmod (x, y)<\/code><\/a><\/h3>$/;"	a
pdf-math.frexp	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.frexp"><code>math.frexp (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.huge	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.huge"><code>math.huge<\/code><\/a><\/h3>$/;"	a
pdf-math.ldexp	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.ldexp"><code>math.ldexp (m, e)<\/code><\/a><\/h3>$/;"	a
pdf-math.log	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.log"><code>math.log (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.log10	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.log10"><code>math.log10 (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.max	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.max"><code>math.max (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.min	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.min"><code>math.min (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.modf	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.modf"><code>math.modf (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.pi	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.pi"><code>math.pi<\/code><\/a><\/h3>$/;"	a
pdf-math.pow	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.pow"><code>math.pow (x, y)<\/code><\/a><\/h3>$/;"	a
pdf-math.rad	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.rad"><code>math.rad (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.random	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.random"><code>math.random ([m [, n]])<\/code><\/a><\/h3>$/;"	a
pdf-math.randomseed	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.randomseed"><code>math.randomseed (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sin	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sin"><code>math.sin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sinh	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sinh"><code>math.sinh (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sqrt	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sqrt"><code>math.sqrt (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tan	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.tan"><code>math.tan (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tanh	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.tanh"><code>math.tanh (x)<\/code><\/a><\/h3>$/;"	a
pdf-module	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-module"><code>module (name [, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-next	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-next"><code>next (table [, index])<\/code><\/a><\/h3>$/;"	a
pdf-os	lib/lua/doc/manual.html	/^This library is implemented through table <a name="pdf-os"><code>os<\/code><\/a>.$/;"	a
pdf-os.clock	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.clock"><code>os.clock ()<\/code><\/a><\/h3>$/;"	a
pdf-os.date	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.date"><code>os.date ([format [, time]])<\/code><\/a><\/h3>$/;"	a
pdf-os.difftime	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.difftime"><code>os.difftime (t2, t1)<\/code><\/a><\/h3>$/;"	a
pdf-os.execute	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.execute"><code>os.execute ([command])<\/code><\/a><\/h3>$/;"	a
pdf-os.exit	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.exit"><code>os.exit ([code])<\/code><\/a><\/h3>$/;"	a
pdf-os.getenv	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.getenv"><code>os.getenv (varname)<\/code><\/a><\/h3>$/;"	a
pdf-os.remove	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.remove"><code>os.remove (filename)<\/code><\/a><\/h3>$/;"	a
pdf-os.rename	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.rename"><code>os.rename (oldname, newname)<\/code><\/a><\/h3>$/;"	a
pdf-os.setlocale	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.setlocale"><code>os.setlocale (locale [, category])<\/code><\/a><\/h3>$/;"	a
pdf-os.time	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.time"><code>os.time ([table])<\/code><\/a><\/h3>$/;"	a
pdf-os.tmpname	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.tmpname"><code>os.tmpname ()<\/code><\/a><\/h3>$/;"	a
pdf-package	lib/lua/doc/manual.html	/^Everything else is exported in a table <a name="pdf-package"><code>package<\/code><\/a>.$/;"	a
pdf-package.cpath	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.cpath"><code>package.cpath<\/code><\/a><\/h3>$/;"	a
pdf-package.loaded	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loaded"><code>package.loaded<\/code><\/a><\/h3>$/;"	a
pdf-package.loaders	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loaders"><code>package.loaders<\/code><\/a><\/h3>$/;"	a
pdf-package.loadlib	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loadlib"><code>package.loadlib (libname, funcname)<\/code><\/a><\/h3>$/;"	a
pdf-package.path	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.path"><code>package.path<\/code><\/a><\/h3>$/;"	a
pdf-package.preload	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.preload"><code>package.preload<\/code><\/a><\/h3>$/;"	a
pdf-package.seeall	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.seeall"><code>package.seeall (module)<\/code><\/a><\/h3>$/;"	a
pdf-pairs	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-pairs"><code>pairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-pcall	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-pcall"><code>pcall (f, arg1, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-print	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-print"><code>print (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-rawequal	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawequal"><code>rawequal (v1, v2)<\/code><\/a><\/h3>$/;"	a
pdf-rawget	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawget"><code>rawget (table, index)<\/code><\/a><\/h3>$/;"	a
pdf-rawset	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawset"><code>rawset (table, index, value)<\/code><\/a><\/h3>$/;"	a
pdf-require	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-require"><code>require (modname)<\/code><\/a><\/h3>$/;"	a
pdf-select	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-select"><code>select (index, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-setfenv	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-setfenv"><code>setfenv (f, table)<\/code><\/a><\/h3>$/;"	a
pdf-setmetatable	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-setmetatable"><code>setmetatable (table, metatable)<\/code><\/a><\/h3>$/;"	a
pdf-string	lib/lua/doc/manual.html	/^<a name="pdf-string"><code>string<\/code><\/a>.$/;"	a
pdf-string.byte	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.byte"><code>string.byte (s [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-string.char	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.char"><code>string.char (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.dump	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.dump"><code>string.dump (function)<\/code><\/a><\/h3>$/;"	a
pdf-string.find	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.find"><code>string.find (s, pattern [, init [, plain]])<\/code><\/a><\/h3>$/;"	a
pdf-string.format	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.format"><code>string.format (formatstring, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.gmatch	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.gmatch"><code>string.gmatch (s, pattern)<\/code><\/a><\/h3>$/;"	a
pdf-string.gsub	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.gsub"><code>string.gsub (s, pattern, repl [, n])<\/code><\/a><\/h3>$/;"	a
pdf-string.len	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.len"><code>string.len (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.lower	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.lower"><code>string.lower (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.match	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.match"><code>string.match (s, pattern [, init])<\/code><\/a><\/h3>$/;"	a
pdf-string.rep	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.rep"><code>string.rep (s, n)<\/code><\/a><\/h3>$/;"	a
pdf-string.reverse	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.reverse"><code>string.reverse (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.sub	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.sub"><code>string.sub (s, i [, j])<\/code><\/a><\/h3>$/;"	a
pdf-string.upper	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.upper"><code>string.upper (s)<\/code><\/a><\/h3>$/;"	a
pdf-table	lib/lua/doc/manual.html	/^It provides all its functions inside the table <a name="pdf-table"><code>table<\/code><\/a>.$/;"	a
pdf-table.concat	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.concat"><code>table.concat (table [, sep [, i [, j]]])<\/code><\/a><\/h3>$/;"	a
pdf-table.insert	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.insert"><code>table.insert (table, [pos,] value)<\/code><\/a><\/h3>$/;"	a
pdf-table.maxn	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.maxn"><code>table.maxn (table)<\/code><\/a><\/h3>$/;"	a
pdf-table.remove	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.remove"><code>table.remove (table [, pos])<\/code><\/a><\/h3>$/;"	a
pdf-table.sort	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.sort"><code>table.sort (table [, comp])<\/code><\/a><\/h3>$/;"	a
pdf-tonumber	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-tonumber"><code>tonumber (e [, base])<\/code><\/a><\/h3>$/;"	a
pdf-tostring	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-tostring"><code>tostring (e)<\/code><\/a><\/h3>$/;"	a
pdf-type	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-type"><code>type (v)<\/code><\/a><\/h3>$/;"	a
pdf-unpack	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-unpack"><code>unpack (list [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-xpcall	lib/lua/doc/manual.html	/^<hr><h3><a name="pdf-xpcall"><code>xpcall (f, err)<\/code><\/a><\/h3>$/;"	a
pearson5	interfaces/sim_spark/Random.h	/^   float pearson5( float b, float c )   \/\/ Pearson Type 5$/;"	f	class:Random
pearson6	interfaces/sim_spark/Random.h	/^   float pearson6( float b, float v, float w )   \/\/ Pearson Type 6$/;"	f	class:Random
pearsoncorr2	lib/alglib/statistics.cpp	/^double pearsoncorr2(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
pearsoncorr2	lib/alglib/statistics.cpp	/^double pearsoncorr2(const real_1d_array &x, const real_1d_array &y)$/;"	f	namespace:alglib
pearsoncorr2	lib/alglib/statistics.cpp	/^double pearsoncorr2(const real_1d_array &x, const real_1d_array &y, const ae_int_t n)$/;"	f	namespace:alglib
pearsoncorrelation	lib/alglib/statistics.cpp	/^double pearsoncorrelation(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
pearsoncorrelation	lib/alglib/statistics.cpp	/^double pearsoncorrelation(const real_1d_array &x, const real_1d_array &y, const ae_int_t n)$/;"	f	namespace:alglib
pearsoncorrelationsignificance	lib/alglib/statistics.cpp	/^void pearsoncorrelationsignificance(const double r, const ae_int_t n, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
pearsoncorrelationsignificance	lib/alglib/statistics.cpp	/^void pearsoncorrelationsignificance(double r,$/;"	f	namespace:alglib_impl
pearsoncorrm	lib/alglib/statistics.cpp	/^void pearsoncorrm(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
pearsoncorrm	lib/alglib/statistics.cpp	/^void pearsoncorrm(const real_2d_array &x, const ae_int_t n, const ae_int_t m, real_2d_array &c)$/;"	f	namespace:alglib
pearsoncorrm	lib/alglib/statistics.cpp	/^void pearsoncorrm(const real_2d_array &x, real_2d_array &c)$/;"	f	namespace:alglib
pearsoncorrm2	lib/alglib/statistics.cpp	/^void pearsoncorrm2(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
pearsoncorrm2	lib/alglib/statistics.cpp	/^void pearsoncorrm2(const real_2d_array &x, const real_2d_array &y, const ae_int_t n, const ae_int_t m1, const ae_int_t m2, real_2d_array &c)$/;"	f	namespace:alglib
pearsoncorrm2	lib/alglib/statistics.cpp	/^void pearsoncorrm2(const real_2d_array &x, const real_2d_array &y, real_2d_array &c)$/;"	f	namespace:alglib
pedantic_walk_	core/memory/WalkRequestBlock.h	/^  bool pedantic_walk_; \/\/ true disables the step size stabilization.  "Set it when precision is indispensable"$/;"	m	struct:WalkRequestBlock
peek	lib/yaml-cpp/src/scanner.cpp	/^	Token& Scanner::peek()$/;"	f	class:YAML::Scanner
peek	lib/yaml-cpp/src/stream.cpp	/^	char Stream::peek() const$/;"	f	class:YAML::Stream
pen_pos_	core/memory/WalkEngineBlock.h	/^    Vector2<float> pen_pos_;$/;"	m	struct:WalkEngineBlock::WalkState
pen_sensor_control_ratio_	core/motion/WalkEngineParameters.h	/^  float pen_sensor_control_ratio_;$/;"	m	struct:WalkEngineParameters
pen_sensor_delay_frames_	core/motion/WalkEngineParameters.h	/^  int pen_sensor_delay_frames_;$/;"	m	struct:WalkEngineParameters
pen_vel_	core/memory/WalkEngineBlock.h	/^    Vector2<float> pen_vel_;$/;"	m	struct:WalkEngineBlock::WalkState
penalize	build/include/tool/SimControlWidget.cpp	/^void SimControlWidget::penalize() {$/;"	f	class:SimControlWidget
penalize	tools/UTNaoTool/SimControlWidget.cpp	/^void SimControlWidget::penalize() {$/;"	f	class:SimControlWidget
penalty	core/communications/RoboCupGameControlData.h	/^  uint8_t penalty;              \/\/ penalty state of the player$/;"	m	struct:RobotInfo
penaltyPoses	core/common/RobotPositions.cpp	/^Pose2D* RobotPositions::penaltyPoses = new Pose2D[NUM_PENALTY_POSES];$/;"	m	class:RobotPositions	file:
penaltyPoses	core/common/RobotPositions.h	/^    static Pose2D* penaltyPoses;$/;"	m	class:RobotPositions
penaltySeconds	build/include/tool/simulation/SimulatedPlayer.h	/^  float penaltySeconds;$/;"	m	class:SimulatedPlayer
penaltySeconds	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float penaltySeconds;$/;"	m	class:SimulatedPlayer
penaltyShot	core/communications/RoboCupGameControlData.h	/^  uint8_t penaltyShot;          \/\/ penalty shot counter$/;"	m	struct:TeamInfo
pending	lib/zlib/deflate.h	/^    uInt   pending;      \/* nb of bytes in the pending buffer *\/$/;"	m	struct:internal_state
pending_buf	lib/zlib/deflate.h	/^    Bytef *pending_buf;  \/* output still pending *\/$/;"	m	struct:internal_state
pending_buf_size	lib/zlib/deflate.h	/^    ulg   pending_buf_size; \/* size of pending_buf *\/$/;"	m	struct:internal_state
pending_out	lib/zlib/deflate.h	/^    Bytef *pending_out;  \/* next pending byte to output to the stream *\/$/;"	m	struct:internal_state
pendulumModel	core/motion/rswalk2014/BodyModel.hpp	/^      PendulumModel pendulumModel;$/;"	m	class:BodyModel
pendulum_height_	core/motion/WalkEngineParameters.h	/^  float pendulum_height_; \/\/ how high is our pendulum point above the ground$/;"	m	struct:WalkEngineParameters
percentage_speed_	core/memory/WalkRequestBlock.h	/^  bool percentage_speed_; \/\/ true if speed is percentage rather than absolute vel$/;"	m	struct:WalkRequestBlock
performKick	core/motion/KickModule.cpp	/^void KickModule::performKick() {$/;"	f	class:KickModule
perform_kick_	core/memory/WalkRequestBlock.h	/^  bool perform_kick_;$/;"	m	struct:WalkRequestBlock
periodic	lib/alglib/interpolation.h	/^    ae_bool periodic;$/;"	m	struct:alglib_impl::__anon58
periodic	lib/alglib/interpolation.h	/^    ae_bool periodic;$/;"	m	struct:alglib_impl::__anon64
periodic	lib/alglib/interpolation.h	/^    ae_bool periodic;$/;"	m	struct:alglib_impl::__anon65
perror	lib/zlib/minigzip.c	/^#  define perror(/;"	d	file:
pexpect	install/common.py	/^import pexpect, re$/;"	i
pexpect	install/install	/^import pexpect, getpass$/;"	i
pexpect	install/install_lab	/^import pexpect, getpass$/;"	i
pfilter_	core/localization/LocalizationModule.h	/^    RPF* pfilter_;$/;"	m	class:LocalizationModule
phase_	core/memory/WalkEngineBlock.h	/^  float phase_;$/;"	m	struct:WalkEngineBlock
phase_length_	core/motion/WalkEngineParameters.h	/^  float phase_length_; \/\/ seconds for 1 step by 1 foot$/;"	m	struct:WalkEngineParameters
pheno	tools/behaviorSim/cma.py	/^    def pheno(self, x):$/;"	m	class:GenoPhenoBase
pheno	tools/behaviorSim/cma.py	/^    def pheno(self, x, bounds=None, copy=True, copy_always=False):$/;"	m	class:GenoPheno
phi	core/motion/rswalk2014/RefPickupGenerator.hpp	/^      float phi;$/;"	m	class:RefPickupGenerator
phi	core/motion/rswalk2014/StandGenerator.hpp	/^      float phi;$/;"	m	class:StandGenerator
phi	core/vision/structures/SphericalPosition.h	/^  float phi;$/;"	m	struct:SphericalPosition
phi	interfaces/sim_spark/Random.h	/^   float theta, phi;$/;"	m	struct:sphericalCoord
physics_	build/include/tool/simulation/BehaviorSimulation.h	/^    PhysicsSimulator physics_;$/;"	m	class:BehaviorSimulation
physics_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    PhysicsSimulator physics_;$/;"	m	class:IsolatedBehaviorSimulation
physics_	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    PhysicsSimulator physics_;$/;"	m	class:BehaviorSimulation
physics_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    PhysicsSimulator physics_;$/;"	m	class:IsolatedBehaviorSimulation
pi	lib/alglib/ap.cpp	/^double alglib::pi()$/;"	f	class:alglib
pickle	tools/behaviorSim/cma.py	/^        import pickle$/;"	i
pingStatus	build/include/tool/FilesWindow.h	/^    bool pingStatus;$/;"	m	class:FilesWindow
pingStatus	tools/UTNaoTool/FilesWindow.h	/^    bool pingStatus;$/;"	m	class:FilesWindow
pitch	core/motion/rswalk2014/HeadGenerator.hpp	/^      float pitch;$/;"	m	class:HeadGenerator
pitch	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float pitch;    \/\/ UP-DOWN angle. Positive is DOWN$/;"	m	struct:ActionCommand::Head
pitchSpeed	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float pitchSpeed; \/\/ Speed of the pitch [0.0, 1.0]$/;"	m	struct:ActionCommand::Head
pixelValues	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^struct pixelValues {$/;"	s
pixel_index_x	core/vision/Union_find.h	/^			int *pixel_index_x;$/;"	m	struct:MergeBlob::Blob
pixel_index_y	core/vision/Union_find.h	/^			int *pixel_index_y;$/;"	m	struct:MergeBlob::Blob
pk	lib/alglib/linalg.h	/^    ae_vector pk;$/;"	m	struct:alglib_impl::__anon68
pk1	lib/alglib/linalg.h	/^    ae_vector pk1;$/;"	m	struct:alglib_impl::__anon68
pk_funcs	lib/lua/src/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
pkgconfigdir	lib/zlib/Makefile	/^pkgconfigdir = ${libdir}\/pkgconfig$/;"	m
place	core/common/FieldConfiguration.cpp	/^void FieldConfiguration::place(WorldObjectBlock* world_object) const {$/;"	f	class:FieldConfiguration
placeObjects	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::placeObjects(LocSimAgent& agent) {$/;"	f	class:LocalizationSimulation
placeObjects	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::placeObjects(LocSimAgent& agent) {$/;"	f	class:LocalizationSimulation
placements_	core/common/FieldConfiguration.h	/^    std::map<int,ObjectConfiguration> placements_;$/;"	m	class:FieldConfiguration
plainchar	interfaces/sim_spark/cdecode.h	/^	char plainchar;$/;"	m	struct:__anon17
plan	lib/alglib/alglibinternal.h	/^    ae_vector plan;$/;"	m	struct:alglib_impl::__anon23
planMove	motion_planning/src/plan_kick.cpp	/^  void PlanKick::planMove(double xf, double yf, double zf, double pf, double cxf, double cyf, double dt)$/;"	f	class:motion_planning::PlanKick
planPose	motion_planning/src/plan_kick.cpp	/^  void PlanKick::planPose(std::vector<double> last_positions, std::vector<double>& next_positions, double foot_x, double foot_y, double foot_z, double foot_pitch, double com_x, double com_y, double dt, int maxiter)$/;"	f	class:motion_planning::PlanKick
platform	bin/behaviorSim	/^import os, platform$/;"	i
platform	bin/tool	/^import os, platform$/;"	i
play	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::play() {$/;"	f	class:KeyframeWidget
play	build/include/tool/WorldWindow.h	/^    void play() { play_ = true; updateDisplay(); }$/;"	f	class:WorldWindow
play	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::play() {$/;"	f	class:KeyframeWidget
play	tools/UTNaoTool/WorldWindow.h	/^    void play() { play_ = true; updateDisplay(); }$/;"	f	class:WorldWindow
playNextFrame	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::playNextFrame() {$/;"	f	class:KeyframeWidget
playNextFrame	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::playNextFrame() {$/;"	f	class:KeyframeWidget
playSound	bin/compile	/^def playSound():$/;"	f
playSound	bin/copy_robot	/^def playSound():$/;"	f
playSound	build/compile	/^def playSound():$/;"	f
playSound	build/copy_robot	/^def playSound():$/;"	f
playSpeed	build/include/tool/WorldConfig.h	/^    double playSpeed;$/;"	m	class:WorldConfig
playSpeed	tools/UTNaoTool/WorldConfig.h	/^    double playSpeed;$/;"	m	class:WorldConfig
playTimer_	build/include/tool/WorldWindow.h	/^    QTimer* playTimer_, liveTimer_;$/;"	m	class:WorldWindow
playTimer_	tools/UTNaoTool/WorldWindow.h	/^    QTimer* playTimer_, liveTimer_;$/;"	m	class:WorldWindow
play_	build/include/tool/WorldWindow.h	/^    bool play_;$/;"	m	class:WorldWindow
play_	tools/UTNaoTool/WorldWindow.h	/^    bool play_;$/;"	m	class:WorldWindow
player	core/communications/RoboCupGameControlData.h	/^  uint8_t player;  \/\/ player number starts with 1$/;"	m	struct:RoboCupGameControlReturnData
playerNum	core/communications/SPLStandardMessage.h	/^  int8_t playerNum;      \/\/ [MANDATORY FIELD] 1-5$/;"	m	struct:SPLStandardMessage
player_	build/include/tool/WorldWindow.h	/^    int player_;$/;"	m	class:WorldWindow
player_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    int player_;$/;"	m	class:IsolatedBehaviorSimulation
player_	build/include/tool/simulation/LocalizationSimulation.cpp	/^#define player_ /;"	d	file:
player_	build/include/tool/simulation/ObservationGenerator.h	/^    int player_, team_;$/;"	m	class:ObservationGenerator
player_	build/include/tool/simulation/RobotMovementSimulator.h	/^    int player_;$/;"	m	class:RobotMovementSimulator
player_	tools/UTNaoTool/WorldWindow.h	/^    int player_;$/;"	m	class:WorldWindow
player_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    int player_;$/;"	m	class:IsolatedBehaviorSimulation
player_	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^#define player_ /;"	d	file:
player_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    int player_, team_;$/;"	m	class:ObservationGenerator
player_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    int player_;$/;"	m	class:RobotMovementSimulator
players	core/communications/RoboCupGameControlData.h	/^  RobotInfo players[MAX_NUM_PLAYERS]; \/\/ the team's players$/;"	m	struct:TeamInfo
playersPerTeam	core/communications/RoboCupGameControlData.h	/^  uint8_t playersPerTeam;       \/\/ the number of players on a team$/;"	m	struct:RoboCupGameControlData
plays	core/memory/BehaviorParamBlock.h	/^  SetPlay plays[NUM_SET_PLAYS];$/;"	m	struct:SetPlayStrategy
plot	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
plot	tools/behaviorSim/cma.py	/^    def plot(self):$/;"	m	class:BaseDataLogger
plot	tools/behaviorSim/cma.py	/^    def plot(self):$/;"	m	class:BaseDataLogger2
plot	tools/behaviorSim/cma.py	/^    def plot(self, fig=None, iabscissa=1, iteridx=None, plot_mean=True,  # TODO: plot_mean default should be False$/;"	m	class:CMADataLogger
plot	tools/behaviorSim/cma.py	/^    def plot(self, fig=None, iabscissa=1, iteridx=None, plot_mean=True,  # TODO: plot_mean default should be False$/;"	m	class:DEAPCMADataLogger
plot	tools/behaviorSim/cma.py	/^    def plot(self, plot_cmd=None, tf=lambda y: y):$/;"	m	class:Sections
plot	tools/behaviorSim/cma.py	/^    print('  Could not import matplotlib.pylab, therefore ``cma.plot()`` etc. is not available')$/;"	i
plot	tools/behaviorSim/cma.py	/^def plot(name=None, fig=None, abscissa=1, iteridx=None, plot_mean=True,  # TODO: plot_mean default should be False$/;"	f
plotWnd_	build/include/tool/UTMainWnd.h	/^  PlotWindow* plotWnd_;$/;"	m	class:UTMainWnd
plotWnd_	tools/UTNaoTool/UTMainWnd.h	/^  PlotWindow* plotWnd_;$/;"	m	class:UTMainWnd
plot_	build/include/tool/PlotWindow.h	/^  QwtPlot plot_;$/;"	m	class:PlotWindow
plot_	tools/UTNaoTool/PlotWindow.h	/^  QwtPlot plot_;$/;"	m	class:PlotWindow
plot_curves_	build/include/tool/PlotWindow.h	/^  std::vector<QwtPlotCurve*> plot_curves_;$/;"	m	class:PlotWindow
plot_curves_	tools/UTNaoTool/PlotWindow.h	/^  std::vector<QwtPlotCurve*> plot_curves_;$/;"	m	class:PlotWindow
plot_marker_	build/include/tool/PlotWindow.h	/^  QwtPlotMarker plot_marker_;$/;"	m	class:PlotWindow
plot_marker_	tools/UTNaoTool/PlotWindow.h	/^  QwtPlotMarker plot_marker_;$/;"	m	class:PlotWindow
plotdivers	tools/behaviorSim/cma.py	/^    def plotdivers(dat, iabscissa, foffset):$/;"	m	class:CMADataLogger
plotdivers	tools/behaviorSim/cma.py	/^    def plotdivers(dat, iabscissa, foffset):$/;"	m	class:DEAPCMADataLogger
plt	data/ballfit.py	/^import matplotlib.pyplot as plt$/;"	i
plt	data/goalfit.py	/^import matplotlib.pyplot as plt$/;"	i
plt	tools/plotCOM.py	/^  import matplotlib.pyplot as plt$/;"	i
plt	tools/testStep.py	/^import matplotlib.pyplot as plt$/;"	i
plt	tools/testStepSide.py	/^import matplotlib.pyplot as plt$/;"	i
pmain	lib/lua/src/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmain	lib/lua/src/luac.c	/^static int pmain(lua_State* L)$/;"	f	file:
pointCache_	core/math/Polygon.h	/^        std::map<int,bool> pointCache_;$/;"	m	class:Polygon
pointCount	core/vision/structures/LineStackInfo.h	/^  uint16_t pointCount;$/;"	m	struct:LineStackInfo
pointCount	core/vision/structures/LineStackRet.h	/^  uint16_t pointCount;$/;"	m	struct:LineStackRet
pointIsBetweenX	core/math/Geometry.cpp	/^bool Point2D::pointIsBetweenX( const Point2D &p1, const Point2D &p2 ) const {$/;"	f	class:Point2D
pointIsBetweenY	core/math/Geometry.cpp	/^bool Point2D::pointIsBetweenY( const Point2D &p1, const Point2D &p2 ) const {$/;"	f	class:Point2D
pointSegmentDist	core/motion/rswalk2014/utils/basic_maths.hpp	/^inline double pointSegmentDist(Point point, Point lineStart, Point lineEnd) {$/;"	f
pointindex	lib/alglib/interpolation.h	/^    ae_int_t pointindex;$/;"	m	struct:alglib_impl::__anon63
points_	build/include/tool/simulation/SimulationPath.h	/^    std::list<Point2D> points_;$/;"	m	class:SimulationPath
points_	tools/UTNaoTool/simulation/SimulationPath.h	/^    std::list<Point2D> points_;$/;"	m	class:SimulationPath
poisson	interfaces/sim_spark/Random.h	/^   int poisson( float mu )   \/\/ Poisson$/;"	f	class:Random
poissoncdistribution	lib/alglib/specialfunctions.cpp	/^double poissoncdistribution(ae_int_t k, double m, ae_state *_state)$/;"	f	namespace:alglib_impl
poissoncdistribution	lib/alglib/specialfunctions.cpp	/^double poissoncdistribution(const ae_int_t k, const double m)$/;"	f	namespace:alglib
poissondistribution	lib/alglib/specialfunctions.cpp	/^double poissondistribution(ae_int_t k, double m, ae_state *_state)$/;"	f	namespace:alglib_impl
poissondistribution	lib/alglib/specialfunctions.cpp	/^double poissondistribution(const ae_int_t k, const double m)$/;"	f	namespace:alglib
polygon_	build/include/tool/annotations/PolygonSelection.h	/^        Polygon* polygon_;$/;"	m	class:PolygonSelection
polygon_	tools/UTNaoTool/annotations/PolygonSelection.h	/^        Polygon* polygon_;$/;"	m	class:PolygonSelection
polynomialbar2cheb	lib/alglib/interpolation.cpp	/^void polynomialbar2cheb(barycentricinterpolant* p,$/;"	f	namespace:alglib_impl
polynomialbar2cheb	lib/alglib/interpolation.cpp	/^void polynomialbar2cheb(const barycentricinterpolant &p, const double a, const double b, real_1d_array &t)$/;"	f	namespace:alglib
polynomialbar2pow	lib/alglib/interpolation.cpp	/^void polynomialbar2pow(barycentricinterpolant* p,$/;"	f	namespace:alglib_impl
polynomialbar2pow	lib/alglib/interpolation.cpp	/^void polynomialbar2pow(const barycentricinterpolant &p, const double c, const double s, real_1d_array &a)$/;"	f	namespace:alglib
polynomialbar2pow	lib/alglib/interpolation.cpp	/^void polynomialbar2pow(const barycentricinterpolant &p, real_1d_array &a)$/;"	f	namespace:alglib
polynomialbuild	lib/alglib/interpolation.cpp	/^void polynomialbuild(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
polynomialbuild	lib/alglib/interpolation.cpp	/^void polynomialbuild(const real_1d_array &x, const real_1d_array &y, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialbuild	lib/alglib/interpolation.cpp	/^void polynomialbuild(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialbuildcheb1	lib/alglib/interpolation.cpp	/^void polynomialbuildcheb1(const double a, const double b, const real_1d_array &y, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialbuildcheb1	lib/alglib/interpolation.cpp	/^void polynomialbuildcheb1(const double a, const double b, const real_1d_array &y, const ae_int_t n, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialbuildcheb1	lib/alglib/interpolation.cpp	/^void polynomialbuildcheb1(double a,$/;"	f	namespace:alglib_impl
polynomialbuildcheb2	lib/alglib/interpolation.cpp	/^void polynomialbuildcheb2(const double a, const double b, const real_1d_array &y, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialbuildcheb2	lib/alglib/interpolation.cpp	/^void polynomialbuildcheb2(const double a, const double b, const real_1d_array &y, const ae_int_t n, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialbuildcheb2	lib/alglib/interpolation.cpp	/^void polynomialbuildcheb2(double a,$/;"	f	namespace:alglib_impl
polynomialbuildeqdist	lib/alglib/interpolation.cpp	/^void polynomialbuildeqdist(const double a, const double b, const real_1d_array &y, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialbuildeqdist	lib/alglib/interpolation.cpp	/^void polynomialbuildeqdist(const double a, const double b, const real_1d_array &y, const ae_int_t n, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialbuildeqdist	lib/alglib/interpolation.cpp	/^void polynomialbuildeqdist(double a,$/;"	f	namespace:alglib_impl
polynomialcalccheb1	lib/alglib/interpolation.cpp	/^double polynomialcalccheb1(const double a, const double b, const real_1d_array &f, const ae_int_t n, const double t)$/;"	f	namespace:alglib
polynomialcalccheb1	lib/alglib/interpolation.cpp	/^double polynomialcalccheb1(const double a, const double b, const real_1d_array &f, const double t)$/;"	f	namespace:alglib
polynomialcalccheb1	lib/alglib/interpolation.cpp	/^double polynomialcalccheb1(double a,$/;"	f	namespace:alglib_impl
polynomialcalccheb2	lib/alglib/interpolation.cpp	/^double polynomialcalccheb2(const double a, const double b, const real_1d_array &f, const ae_int_t n, const double t)$/;"	f	namespace:alglib
polynomialcalccheb2	lib/alglib/interpolation.cpp	/^double polynomialcalccheb2(const double a, const double b, const real_1d_array &f, const double t)$/;"	f	namespace:alglib
polynomialcalccheb2	lib/alglib/interpolation.cpp	/^double polynomialcalccheb2(double a,$/;"	f	namespace:alglib_impl
polynomialcalceqdist	lib/alglib/interpolation.cpp	/^double polynomialcalceqdist(const double a, const double b, const real_1d_array &f, const ae_int_t n, const double t)$/;"	f	namespace:alglib
polynomialcalceqdist	lib/alglib/interpolation.cpp	/^double polynomialcalceqdist(const double a, const double b, const real_1d_array &f, const double t)$/;"	f	namespace:alglib
polynomialcalceqdist	lib/alglib/interpolation.cpp	/^double polynomialcalceqdist(double a,$/;"	f	namespace:alglib_impl
polynomialcheb2bar	lib/alglib/interpolation.cpp	/^void polynomialcheb2bar(\/* Real    *\/ ae_vector* t,$/;"	f	namespace:alglib_impl
polynomialcheb2bar	lib/alglib/interpolation.cpp	/^void polynomialcheb2bar(const real_1d_array &t, const ae_int_t n, const double a, const double b, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialcheb2bar	lib/alglib/interpolation.cpp	/^void polynomialcheb2bar(const real_1d_array &t, const double a, const double b, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialfit	lib/alglib/interpolation.cpp	/^void polynomialfit(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
polynomialfit	lib/alglib/interpolation.cpp	/^void polynomialfit(const real_1d_array &x, const real_1d_array &y, const ae_int_t m, ae_int_t &info, barycentricinterpolant &p, polynomialfitreport &rep)$/;"	f	namespace:alglib
polynomialfit	lib/alglib/interpolation.cpp	/^void polynomialfit(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t m, ae_int_t &info, barycentricinterpolant &p, polynomialfitreport &rep)$/;"	f	namespace:alglib
polynomialfitreport	lib/alglib/interpolation.cpp	/^polynomialfitreport::polynomialfitreport() : _polynomialfitreport_owner() ,taskrcond(p_struct->taskrcond),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),maxerror(p_struct->maxerror)$/;"	f	class:alglib::polynomialfitreport
polynomialfitreport	lib/alglib/interpolation.cpp	/^polynomialfitreport::polynomialfitreport(const polynomialfitreport &rhs):_polynomialfitreport_owner(rhs) ,taskrcond(p_struct->taskrcond),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),maxerror(p_struct->maxerror)$/;"	f	class:alglib::polynomialfitreport
polynomialfitreport	lib/alglib/interpolation.h	/^class polynomialfitreport : public _polynomialfitreport_owner$/;"	c	namespace:alglib
polynomialfitreport	lib/alglib/interpolation.h	/^} polynomialfitreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon59
polynomialfitwc	lib/alglib/interpolation.cpp	/^void polynomialfitwc(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
polynomialfitwc	lib/alglib/interpolation.cpp	/^void polynomialfitwc(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const ae_int_t n, const real_1d_array &xc, const real_1d_array &yc, const integer_1d_array &dc, const ae_int_t k, const ae_int_t m, ae_int_t &info, barycentricinterpolant &p, polynomialfitreport &rep)$/;"	f	namespace:alglib
polynomialfitwc	lib/alglib/interpolation.cpp	/^void polynomialfitwc(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const real_1d_array &xc, const real_1d_array &yc, const integer_1d_array &dc, const ae_int_t m, ae_int_t &info, barycentricinterpolant &p, polynomialfitreport &rep)$/;"	f	namespace:alglib
polynomialpow2bar	lib/alglib/interpolation.cpp	/^void polynomialpow2bar(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
polynomialpow2bar	lib/alglib/interpolation.cpp	/^void polynomialpow2bar(const real_1d_array &a, barycentricinterpolant &p)$/;"	f	namespace:alglib
polynomialpow2bar	lib/alglib/interpolation.cpp	/^void polynomialpow2bar(const real_1d_array &a, const ae_int_t n, const double c, const double s, barycentricinterpolant &p)$/;"	f	namespace:alglib
pop	build/include/tool/simulation/SimulationPath.cpp	/^void SimulationPath::pop() {$/;"	f	class:SimulationPath
pop	core/common/RingQueue.h	/^    const V& pop () $/;"	f	class:RingQueue
pop	core/common/RingQueueWithSum.h	/^    const V& pop () $/;"	f	class:RingQueueWithSum
pop	core/motion/rswalk2014/utils/speech.hpp	/^      std::string pop() {$/;"	f	class:Speech
pop	lib/yaml-cpp/src/ptr_stack.h	/^	std::auto_ptr<T> pop() {$/;"	f	class:ptr_stack
pop	lib/yaml-cpp/src/scanner.cpp	/^	void Scanner::pop()$/;"	f	class:YAML::Scanner
pop	lib/yaml-cpp/src/setting.h	/^		virtual void pop() {$/;"	f	class:YAML::SettingChange
pop	tools/UTNaoTool/simulation/SimulationPath.cpp	/^void SimulationPath::pop() {$/;"	f	class:SimulationPath
popsize	tools/behaviorSim/cma.py	/^    def popsize(self): $/;"	m	class:CMAEvolutionStrategy
populateGraphableBlock	build/include/tool/PlotWindow.cpp	/^void PlotWindow::populateGraphableBlock(Memory &memory) {$/;"	f	class:PlotWindow
populateGraphableBlock	tools/UTNaoTool/PlotWindow.cpp	/^void PlotWindow::populateGraphableBlock(Memory &memory) {$/;"	f	class:PlotWindow
populateSensors	interfaces/nao/src/naointerface.cpp	/^void naointerface::populateSensors(){$/;"	f	class:naointerface
populateSigmaPoints	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  inline void populateSigmaPoints(StateVector mu_mat, StateCovarianceMatrix sigma_mat, double gamma_val, SigmaPointMatrix& X_mat)$/;"	f	class:UnscentedKalmanFilter
populateSigmaPoints	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  inline void populateSigmaPoints(StateVector x, StateCovarianceMatrix P, double c, SigmaPointMatrix& X)$/;"	f	class:UnscentedKalmanFilter
port	core/communications/ThreadedUDPSocket.h	/^  int port;$/;"	m	class:ThreadedUDPSocket
port_	core/communications/UDPWrapper.h	/^  unsigned short port_;$/;"	m	class:UDPWrapper
pos	lib/yaml-cpp/include/yaml-cpp/mark.h	/^		int pos;$/;"	m	struct:YAML::Mark
pos	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^		unsigned pos() const { return m_pos; }$/;"	f	class:YAML::ostream
pos	lib/yaml-cpp/src/stream.h	/^		int pos() const { return m_mark.pos; }$/;"	f	class:YAML::Stream
pos	lib/zlib/gzguts.h	/^    z_off64_t pos;          \/* current position in uncompressed data *\/$/;"	m	struct:__anon135
posGen	core/motion/rswalk2014/StandGenerator.hpp	/^      Generator *posGen;$/;"	m	class:StandGenerator
posStart	core/vision/structures/LineStackInfo.h	/^  uint16_t posStart;$/;"	m	struct:LineStackInfo
posT_	build/include/tool/TeamConfigWindow.h	/^    std::map<int, QSpinBox*> posX_, posY_, posT_;$/;"	m	class:TeamConfigWindow
posT_	tools/UTNaoTool/TeamConfigWindow.h	/^    std::map<int, QSpinBox*> posX_, posY_, posT_;$/;"	m	class:TeamConfigWindow
posX	core/common/RobotConfig.h	/^    float posX, posY, posZ;$/;"	m	class:RobotConfig
posX_	build/include/tool/TeamConfigWindow.h	/^    std::map<int, QSpinBox*> posX_, posY_, posT_;$/;"	m	class:TeamConfigWindow
posX_	tools/UTNaoTool/TeamConfigWindow.h	/^    std::map<int, QSpinBox*> posX_, posY_, posT_;$/;"	m	class:TeamConfigWindow
posY	core/common/RobotConfig.h	/^    float posX, posY, posZ;$/;"	m	class:RobotConfig
posY_	build/include/tool/TeamConfigWindow.h	/^    std::map<int, QSpinBox*> posX_, posY_, posT_;$/;"	m	class:TeamConfigWindow
posY_	tools/UTNaoTool/TeamConfigWindow.h	/^    std::map<int, QSpinBox*> posX_, posY_, posT_;$/;"	m	class:TeamConfigWindow
posZ	core/common/RobotConfig.h	/^    float posX, posY, posZ;$/;"	m	class:RobotConfig
pose	build/include/tool/LogWidget.h	/^    Pose2D pose;$/;"	m	class:LAWidgetItem
pose	build/include/tool/annotations/LocalizationAnnotation.h	/^    const Pose2D& pose() const { return pose_; }$/;"	f	class:LocalizationAnnotation
pose	core/communications/SPLStandardMessage.h	/^  float pose[3];      \/\/ x,y,theta$/;"	m	struct:SPLStandardMessage
pose	core/localization/ParticleFilter.cpp	/^const Pose2D& ParticleFilter::pose() const {$/;"	f	class:ParticleFilter
pose	core/python/behaviors/Distance.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
pose	core/python/behaviors/Movement.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
pose	core/python/behaviors/custom_kick.py	/^import memory, pose, commands, cfgstiff, core$/;"	i
pose	core/python/behaviors/head_tracking.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
pose	core/python/behaviors/keeper.py	/^import pose, commands, cfgstiff$/;"	i
pose	core/python/behaviors/keeper_2.py	/^import pose, commands, cfgstiff, cfgpose$/;"	i
pose	core/python/behaviors/keeper_3.py	/^import pose, commands, cfgstiff$/;"	i
pose	core/python/behaviors/kick.py	/^import memory, pose, commands, cfgstiff$/;"	i
pose	core/python/behaviors/pid_distance_angle.py	/^import memory, pose, commands, core, cfgstiff$/;"	i
pose	core/python/behaviors/stamp_in_circles.py	/^import memory, pose, commands, cfgstiff, math$/;"	i
pose	core/python/behaviors/stand.py	/^import memory, pose, commands, cfgstiff$/;"	i
pose	core/python/behaviors/walk_to_center.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
pose	core/python/behaviors/walk_to_center_2.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
pose	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
pose	core/python/primary_bvr.py	/^import pose$/;"	i
pose	tools/UTNaoTool/LogWidget.h	/^    Pose2D pose;$/;"	m	class:LAWidgetItem
pose	tools/UTNaoTool/annotations/LocalizationAnnotation.h	/^    const Pose2D& pose() const { return pose_; }$/;"	f	class:LocalizationAnnotation
poseTheta	core/common/RobotCalibration.h	/^      poseTheta;$/;"	m	class:RobotCalibration
poseX	core/common/RobotCalibration.h	/^      poseX,$/;"	m	class:RobotCalibration
poseY	core/common/RobotCalibration.h	/^      poseY,$/;"	m	class:RobotCalibration
poseZ	core/common/RobotCalibration.h	/^      poseZ,$/;"	m	class:RobotCalibration
pose_	build/include/tool/annotations/LocalizationAnnotation.h	/^    Pose2D pose_;$/;"	m	class:LocalizationAnnotation
pose_	tools/UTNaoTool/annotations/LocalizationAnnotation.h	/^    Pose2D pose_;$/;"	m	class:LocalizationAnnotation
pose_sent	core/python/behaviors/win.py	/^pose_sent = False$/;"	v
pose_start_time	core/python/behaviors/win.py	/^pose_start_time = 0$/;"	v
position_	core/memory/WalkEngineBlock.h	/^    Pose2D position_;$/;"	m	struct:WalkEngineBlock::Step
posrelat	lib/lua/src/lstrlib.c	/^static ptrdiff_t posrelat (ptrdiff_t pos, size_t len) {$/;"	f	file:
postAngle	core/memory/BehaviorParamBlock.h	/^  float postAngle;$/;"	m	struct:KickStrategy
postCompleted	core/python/state_machine.py	/^  postCompleted = finish$/;"	v	class:Node
postFailure	core/python/state_machine.py	/^  def postFailure(self):$/;"	m	class:Node
postInit	core/python/task.py	/^  def postInit(self): pass$/;"	m	class:MultiTask
postInit	core/python/task.py	/^  def postInit(self): pass$/;"	m	class:Task
postProcess	core/MotionCore.cpp	/^void MotionCore::postProcess() {$/;"	f	class:MotionCore
postProcess	interfaces/nao/src/naointerface.cpp	/^void naointerface::postProcess() {$/;"	f	class:naointerface
postReceive	core/communications/StreamingMessage.h	/^  unsigned char* postReceive(long read_size) {$/;"	f	class:StreamingMessage
postSignal	core/python/state_machine.py	/^  def postSignal(self, signal):$/;"	m	class:Node
postVision	core/VisionCore.cpp	/^void VisionCore::postVision() {$/;"	f	class:VisionCore
postprocessing	lib/alglib/dataanalysis.h	/^    ae_bool postprocessing;$/;"	m	struct:alglib_impl::__anon50
pow	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> pow (const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
pow	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> pow (const FTypeName<T,N>& a,const U& b)$/;"	f	namespace:fadbad
pow	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> pow (const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
pow1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> pow1(const U& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
pow1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> pow1(const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
pow2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> pow2(const FTypeName<T,0>& a, const U& b)$/;"	f	namespace:fadbad
pow2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> pow2(const FTypeName<T,N>& a, const U& b)$/;"	f	namespace:fadbad
pow3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> pow3(const FTypeName<T,0>& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
pow3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> pow3(const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
power	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float power;                                            \/\/ Omnidirectional walk - reserved for kicking$/;"	m	class:Walk2014Generator
power	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float power; \/\/ How much kick power (0.0-1.0)$/;"	m	struct:ActionCommand::Body
power	interfaces/sim_spark/Random.h	/^   float power( float c )   \/\/ Power$/;"	f	class:Random
pp	tools/behaviorSim/cma.py	/^        import pprint as pp$/;"	i
pp	tools/behaviorSim/cma.py	/^    def pp(self):$/;"	m	class:Options
pp_bool	lib/alglib/ap.h	/^        ae_bool **pp_bool;$/;"	m	union:alglib_impl::ae_matrix::__anon37
pp_complex	lib/alglib/ap.h	/^        ae_complex **pp_complex;$/;"	m	union:alglib_impl::ae_matrix::__anon37
pp_double	lib/alglib/ap.h	/^        double **pp_double;$/;"	m	union:alglib_impl::ae_matrix::__anon37
pp_int	lib/alglib/ap.h	/^        ae_int_t **pp_int;$/;"	m	union:alglib_impl::ae_matrix::__anon37
pp_void	lib/alglib/ap.h	/^        void **pp_void;$/;"	m	union:alglib_impl::ae_matrix::__anon37
pprint	tools/behaviorSim/cma.py	/^def pprint(to_be_printed):$/;"	f
pqdownheap	lib/zlib/trees.c	/^local void pqdownheap(s, tree, k)$/;"	f
pqremove	lib/zlib/trees.c	/^#define pqremove(/;"	d	file:
pqueues_	build/include/tool/ProcessExecutor.cpp	/^vector<queue<ToolProcess>> PE::pqueues_ = vector<queue<ToolProcess>>(PE::NumPriorities);$/;"	m	class:PE	file:
pqueues_	build/include/tool/ProcessExecutor.h	/^    static std::vector<std::queue<ToolProcess>> pqueues_;$/;"	m	class:ProcessExecutor
pqueues_	tools/UTNaoTool/ProcessExecutor.cpp	/^vector<queue<ToolProcess>> PE::pqueues_ = vector<queue<ToolProcess>>(PE::NumPriorities);$/;"	m	class:PE	file:
pqueues_	tools/UTNaoTool/ProcessExecutor.h	/^    static std::vector<std::queue<ToolProcess>> pqueues_;$/;"	m	class:ProcessExecutor
prctile	tools/behaviorSim/cma.py	/^        def prctile(data, p_vals=[0, 25, 50, 75, 100], sorted_=False):$/;"	m	class:Misc.MathHelperFunctions
preProcess	core/MotionCore.cpp	/^void MotionCore::preProcess() {$/;"	f	class:MotionCore
preProcess	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void WalkEnginePreProcessor::DribbleEngine::preProcess(ActionCommand::All* request,$/;"	f	class:WalkEnginePreProcessor::DribbleEngine
preProcess	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void WalkEnginePreProcessor::LineUpEngine::preProcess(ActionCommand::All* request,$/;"	f	class:WalkEnginePreProcessor::LineUpEngine
preProcess	interfaces/nao/src/naointerface.cpp	/^void naointerface::preProcess() {$/;"	f	class:naointerface
preSend	core/communications/StreamingMessage.h	/^  bool preSend(unsigned char *data,unsigned long n) {$/;"	f	class:StreamingMessage
preVision	core/VisionCore.cpp	/^void VisionCore::preVision() {$/;"	f	class:VisionCore
pre_kick_step_	core/memory/WalkRequestBlock.h	/^  Pose2D pre_kick_step_;$/;"	m	struct:WalkRequestBlock
precheck	lib/lua/src/ldebug.c	/^static int precheck (const Proto *pt) {$/;"	f	file:
preciseWidth	core/vision/structures/FieldLine.h	/^  float preciseWidth;$/;"	m	struct:FieldLine
precomputed	lib/alglib/alglibinternal.h	/^    ae_vector precomputed;$/;"	m	struct:alglib_impl::__anon23
prectype	lib/alglib/optimization.h	/^    ae_int_t prectype;$/;"	m	struct:alglib_impl::__anon69
prectype	lib/alglib/optimization.h	/^    ae_int_t prectype;$/;"	m	struct:alglib_impl::__anon77
prectype	lib/alglib/optimization.h	/^    ae_int_t prectype;$/;"	m	struct:alglib_impl::__anon79
predictFuture	core/sensor/InertialFilter.cpp	/^void InertialFilter::predictFuture(int numFrames, float &tilt, float &roll) {$/;"	f	class:InertialFilter
predictNext	core/motion/rswalk2014/PendulumModel.cpp	/^void PendulumModel::predictNext(float dt, float supportPivot){$/;"	f	class:PendulumModel
predicteddecrease	lib/alglib/optimization.h	/^    double predicteddecrease;$/;"	m	struct:alglib_impl::__anon73
prefix	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		std::string prefix;$/;"	m	struct:YAML::_Tag
prefix	lib/zlib/Makefile	/^prefix =\/usr\/local$/;"	m
prefixexp	lib/lua/src/lparser.c	/^static void prefixexp (LexState *ls, expdesc *v) {$/;"	f	file:
preinit_state	lib/lua/src/lstate.c	/^static void preinit_state (lua_State *L, global_State *g) {$/;"	f	file:
prepKick	core/motion/rswalk2014/Walk2014Generator.cpp	/^void Walk2014Generator::prepKick(bool isLeft, BodyModel &bodyModel) {$/;"	f	class:Walk2014Generator
prepareArms	core/motion/GetupModule.cpp	/^void GetupModule::prepareArms() {$/;"	f	class:GetupModule
prepareSendTCP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::prepareSendTCP() {$/;"	f	class:CommunicationModule
pressed_	build/include/tool/RobotControllerWidget.h	/^    std::set<int> pressed_;$/;"	m	class:RobotControllerWidget
pressed_	tools/UTNaoTool/RobotControllerWidget.h	/^    std::set<int> pressed_;$/;"	m	class:RobotControllerWidget
presses	core/sensor/ButtonModule.h	/^    int presses;$/;"	m	struct:ButtonModule::ButtonInfo
pressureL	core/motion/rswalk2014/BodyModel.hpp	/^      float pressureL, pressureR;$/;"	m	class:BodyModel
pressureR	core/motion/rswalk2014/BodyModel.hpp	/^      float pressureL, pressureR;$/;"	m	class:BodyModel
prev	lib/lua/src/lobject.h	/^      struct UpVal *prev;$/;"	m	struct:UpVal::__anon90::__anon91	typeref:struct:UpVal::__anon90::__anon91::UpVal
prev	lib/lua/src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev	lib/lua/src/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState
prev	lib/zlib/deflate.h	/^    Posf *prev;$/;"	m	struct:internal_state
prevForward	core/motion/rswalk2014/RSWalkModule2014.h	/^	float prevForward, prevLeft, prevTurn;$/;"	m	class:RSWalkModule2014
prevForwardL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float prevForwardL;$/;"	m	class:Walk2014Generator
prevForwardR	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float prevForwardR;$/;"	m	class:Walk2014Generator
prevFrame	build/include/tool/LogWindow.h	/^    int prevFrame;$/;"	m	class:LogWindow
prevFrame	tools/UTNaoTool/LogWindow.h	/^    int prevFrame;$/;"	m	class:LogWindow
prevLeft	core/motion/rswalk2014/RSWalkModule2014.h	/^	float prevForward, prevLeft, prevTurn;$/;"	m	class:RSWalkModule2014
prevLeftL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float prevLeftL;$/;"	m	class:Walk2014Generator
prevLeftR	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float prevLeftR;$/;"	m	class:Walk2014Generator
prevLeftReading	core/sonar/SonarModule.h	/^  float prevLeftReading;$/;"	m	class:SonarModule
prevRightReading	core/sonar/SonarModule.h	/^  float prevRightReading;$/;"	m	class:SonarModule
prevSnapshot	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::prevSnapshot() {$/;"	f	class:UTMainWnd
prevSnapshot	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::prevSnapshot() {$/;"	f	class:UTMainWnd
prevTime	build/include/tool/FilesWindow.h	/^    QDateTime prevTime;$/;"	m	class:FilesWindow
prevTime	tools/UTNaoTool/FilesWindow.h	/^    QDateTime prevTime;$/;"	m	class:FilesWindow
prevTurn	core/motion/rswalk2014/RSWalkModule2014.h	/^	float prevForward, prevLeft, prevTurn;$/;"	m	class:RSWalkModule2014
prevTurn	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float prevTurn;$/;"	m	class:Walk2014Generator
prevValues_	core/memory/JointBlock.h	/^  float prevValues_[NUM_JOINTS];$/;"	m	struct:JointBlock
prevValues_	core/memory/SensorBlock.h	/^  float prevValues_[NUM_SENSORS];$/;"	m	struct:SensorBlock
prev_command	core/motion/rswalk2014/RSWalkModule2014.h	/^	WalkRequestBlock::Motion prev_command;$/;"	m	class:RSWalkModule2014
prev_generator	core/motion/rswalk2014/DistributedGenerator.hpp	/^      ActionCommand::Body::ActionType prev_generator;$/;"	m	class:DistributedGenerator
prev_kick_active_	core/motion/rswalk2014/RSWalkModule2014.h	/^        bool prev_kick_active_;$/;"	m	class:RSWalkModule2014
prev_kick_state_	build/include/tool/MotionGLWidget.h	/^  KickState::State prev_kick_state_;$/;"	m	class:MotionGLWidget
prev_kick_state_	tools/UTNaoTool/MotionGLWidget.h	/^  KickState::State prev_kick_state_;$/;"	m	class:MotionGLWidget
prev_length	lib/zlib/deflate.h	/^    uInt prev_length;$/;"	m	struct:internal_state
prev_match	lib/zlib/deflate.h	/^    IPos prev_match;             \/* previous match *\/$/;"	m	struct:internal_state
prevactiveconstraints	lib/alglib/optimization.h	/^    ae_vector prevactiveconstraints;$/;"	m	struct:alglib_impl::__anon71
prevalgo	lib/alglib/interpolation.h	/^    ae_int_t prevalgo;$/;"	m	struct:alglib_impl::__anon63
previous	lib/lua/src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	lib/lua/src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous_error_	core/common/PIDController.h	/^  float previous_error_; \/\/ corr. cd_$/;"	m	class:PIDController
previous_error_	core/memory/SimEffectorBlock.h	/^  double previous_error_;\/\/ corr. k3$/;"	m	struct:SimEffector
previous_step_size_	core/memory/WalkEngineBlock.h	/^  Pose2D previous_step_size_;$/;"	m	struct:WalkEngineBlock
prevnpt	lib/alglib/interpolation.h	/^    ae_int_t prevnpt;$/;"	m	struct:alglib_impl::__anon63
prevstate	core/memory/GameStateBlock.h	/^  int prevstate() { return prevstate_; }$/;"	f	struct:GameStateBlock
prevstate_	core/memory/GameStateBlock.h	/^  int state_, prevstate_;$/;"	m	struct:GameStateBlock
primaryexp	lib/lua/src/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
print	core/vision/structures/FocusArea.h	/^  void print() const {$/;"	f	struct:FocusArea
print	lib/lua/etc/min.c	/^static int print(lua_State *L)$/;"	f	file:
printAtInterval	core/common/Profiling.cpp	/^void Timer::printAtInterval() {$/;"	f	class:Timer
printError	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::printError() {$/;"	f	class:LocalizationSimulation
printError	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::printError() {$/;"	f	class:LocalizationSimulation
printParams	build/include/tool/CameraWindow.cpp	/^void CameraWindow::printParams() {$/;"	f	class:CameraWindow
printParams	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::printParams() {$/;"	f	class:CameraWindow
printStates	core/common/StateMachine.cpp	/^bool StateMachine::printStates() {$/;"	f	class:StateMachine
printTransitions	core/common/StateMachine.cpp	/^bool StateMachine::printTransitions() {$/;"	f	class:StateMachine
print_function	build/core/generate_block_operations.py	/^from __future__ import print_function$/;"	i
print_function	tools/behaviorSim/cma.py	/^from __future__ import print_function  # for cross-checking, available from python 2.6$/;"	i
print_usage	lib/lua/src/lua.c	/^static void print_usage (void) {$/;"	f	file:
print_version	lib/lua/src/lua.c	/^static void print_version (void) {$/;"	f	file:
printavg	core/python/UTdebug.py	/^  def printavg(self,override=False):$/;"	m	class:Timer
printdatarow	tools/behaviorSim/cma.py	/^        def printdatarow(dat, iteration):$/;"	f	function:CMADataLogger.disp
printdatarow	tools/behaviorSim/cma.py	/^        def printdatarow(dat, iteration):$/;"	f	function:DEAPCMADataLogger.disp
printf	lib/lua/test/printf.lua	/^function printf(...)$/;"	f
printme	tools/behaviorSim/cma.py	/^    def printme(self, linebreak=80):$/;"	m	class:Options
printtime	core/common/Profiling.cpp	/^void printtime(const char* name, int id) {$/;"	f
printtime	core/common/Profiling.cpp	/^void printtime(int id) {$/;"	f
priorities	core/motion/rswalk2014/types/ActionCommand.hpp	/^   const uint8_t priorities[Body::NUM_ACTION_TYPES] = {$/;"	m	namespace:ActionCommand
priority	lib/lua/src/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon94	file:
private_memory_	core/memory/Memory.h	/^  PrivateMemory *private_memory_;$/;"	m	class:Memory
process	build/include/tool/ProcessExecutor.h	/^  QProcess* process;$/;"	m	struct:ToolProcess
process	interfaces/nao/src/AudioWrapper.cpp	/^void AudioWrapper::process(const int & nbOfChannels, const int & nbrOfSamplesByChannel, const AL_SOUND_FORMAT * buffer, const AL::ALValue & timestamp) {$/;"	f	class:AudioWrapper
process	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateVector process(MeasurementVector z, ControlVector u)$/;"	f	class:ExtendedKalmanFilter
process	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  StateVector process(MeasurementVector z, ControlVector u)$/;"	f	class:LinearKalmanFilter
process	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  StateVector process(MeasurementVector z, ControlVector u)$/;"	f	class:SRUnscentedKalmanFilter
process	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  StateVector process(MeasurementVector z, ControlVector u)$/;"	f	class:UnscentedKalmanFilter
process	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateVector process(MeasurementVector z, ControlVector u)$/;"	f	class:UnscentedKalmanFilter
process	particle_filters/MCL_particle_filter.hpp	/^    void process(MeasurementVector z, ControlVector u)$/;"	f	class:MCLParticleFilter
process	particle_filters/RMCL_particle_filter.hpp	/^    void process(MeasurementVector z, ControlVector u)$/;"	f	class:RMCLParticleFilter
process	tools/UTNaoTool/ProcessExecutor.h	/^  QProcess* process;$/;"	m	struct:ToolProcess
processAccel	build/include/tool/RobotControllerWidget.cpp	/^Vector3f RobotControllerWidget::processAccel(Vector3f vel) {$/;"	f	class:RobotControllerWidget
processAccel	tools/UTNaoTool/RobotControllerWidget.cpp	/^Vector3f RobotControllerWidget::processAccel(Vector3f vel) {$/;"	f	class:RobotControllerWidget
processBehaviorFrame	core/python/PythonModule.cpp	/^void PythonModule::processBehaviorFrame() {$/;"	f	class:PythonModule
processBehaviorFrame	core/python/init.py	/^def processBehaviorFrame():$/;"	f
processButton	core/sensor/ButtonModule.cpp	/^void ButtonModule::processButton(float bump1, float bump2, ButtonInfo &button) {$/;"	f	class:ButtonModule
processButtons	core/sensor/ButtonModule.cpp	/^void ButtonModule::processButtons() {$/;"	f	class:ButtonModule
processCameraKeys	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::processCameraKeys() {$/;"	f	class:WorldGLWidget
processCameraKeys	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::processCameraKeys() {$/;"	f	class:WorldGLWidget
processCenterPresses	core/sensor/ButtonModule.cpp	/^void ButtonModule::processCenterPresses() {$/;"	f	class:ButtonModule
processCommands	core/sonar/SonarModule.cpp	/^void SonarModule::processCommands() {$/;"	f	class:SonarModule
processFrame	build/include/tool/MotionSimulation.cpp	/^bool MotionSimulation::processFrame(){$/;"	f	class:MotionSimulation
processFrame	build/include/tool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::processFrame() {$/;"	f	class:SimulatedPlayer
processFrame	build/include/tool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::processFrame(WorldObjectBlock* simulationMem, GameStateBlock* simulationState){$/;"	f	class:SimulatedPlayer
processFrame	core/audio/AudioModule.cpp	/^void AudioModule::processFrame() {$/;"	f	class:AudioModule
processFrame	core/communications/CommunicationModule.cpp	/^void CommunicationModule::processFrame() {$/;"	f	class:CommunicationModule
processFrame	core/localization/LocalizationModule.cpp	/^void LocalizationModule::processFrame() {$/;"	f	class:LocalizationModule
processFrame	core/localization/ParticleFilter.cpp	/^void ParticleFilter::processFrame() {$/;"	f	class:ParticleFilter
processFrame	core/motion/KickModule.cpp	/^void KickModule::processFrame() {$/;"	f	class:KickModule
processFrame	core/motion/MotionModule.cpp	/^void MotionModule::processFrame() {$/;"	f	class:MotionModule
processFrame	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::processFrame() {$/;"	f	class:SpecialMotionModule
processFrame	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::processFrame() {$/;"	f	class:RSWalkModule2014
processFrame	core/opponents/OppModule.cpp	/^void OppModule::processFrame(){$/;"	f	class:OppModule
processFrame	core/python/PythonModule.cpp	/^void PythonModule::processFrame() {$/;"	f	class:PythonModule
processFrame	core/python/init.py	/^def processFrame():$/;"	f
processFrame	core/python/lights.py	/^def processFrame():$/;"	f
processFrame	core/python/primary_bvr.py	/^def processFrame():$/;"	f
processFrame	core/python/state_machine.py	/^  def processFrame(self):$/;"	m	class:Node
processFrame	core/python/task.py	/^  def processFrame(self):$/;"	m	class:BaseTask
processFrame	core/python/task.py	/^  def processFrame(self):$/;"	m	class:MultiTask
processFrame	core/python/task.py	/^  def processFrame(self):$/;"	m	class:Task
processFrame	core/sensor/InertialFilter.cpp	/^void InertialFilter::processFrame(bool calibrated) {$/;"	f	class:InertialFilter
processFrame	core/sonar/SonarModule.cpp	/^void SonarModule::processFrame() {$/;"	f	class:SonarModule
processFrame	core/vision/ImageProcessor.cpp	/^void ImageProcessor::processFrame()$/;"	f	class:ImageProcessor
processFrame	core/vision/VisionModule.cpp	/^void VisionModule::processFrame() {$/;"	f	class:VisionModule
processFrame	tools/UTNaoTool/MotionSimulation.cpp	/^bool MotionSimulation::processFrame(){$/;"	f	class:MotionSimulation
processFrame	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::processFrame() {$/;"	f	class:SimulatedPlayer
processFrame	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::processFrame(WorldObjectBlock* simulationMem, GameStateBlock* simulationState){$/;"	f	class:SimulatedPlayer
processFrameChild	core/motion/GetupModule.cpp	/^bool GetupModule::processFrameChild() {$/;"	f	class:GetupModule
processFrameChild	core/motion/SpecialMotionModule.h	/^  virtual bool processFrameChild() {return false;} \/\/ return true if it's handled execution this frame$/;"	f	class:SpecialMotionModule
processJointCommands	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::processJointCommands(float time, float angles[NUM_JOINTS]) {$/;"	f	class:SpecialMotionModule
processJointHardness	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::processJointHardness(float time,float stiffness[NUM_JOINTS]) {$/;"	f	class:SpecialMotionModule
processLocalizationFrame	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::processLocalizationFrame() {$/;"	f	class:LocalizationSimulation
processLocalizationFrame	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::processLocalizationFrame() {$/;"	f	class:LocalizationSimulation
processMotionFrame	core/MotionCore.cpp	/^void MotionCore::processMotionFrame() {$/;"	f	class:MotionCore
processSensorUpdate	core/MotionCore.cpp	/^void MotionCore::processSensorUpdate() {$/;"	f	class:MotionCore
processSensors	core/sensor/SensorModule.cpp	/^void SensorModule::processSensors() {$/;"	f	class:SensorModule
processSonars	core/sonar/SonarModule.cpp	/^void SonarModule::processSonars() {$/;"	f	class:SonarModule
processStream	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::processStream(socket_ptr sock) {$/;"	f	class:UTMainWnd
processStream	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::processStream(socket_ptr sock) {$/;"	f	class:UTMainWnd
processUpdate	core/motion/rswalk2014/BodyModel.cpp	/^void BodyModel::processUpdate(Odometry *odometry, const SensorValues &sensors) {$/;"	f	class:BodyModel
processVisionFrame	core/VisionCore.cpp	/^void VisionCore::processVisionFrame() {$/;"	f	class:VisionCore
processWalkFrame	core/motion/MotionModule.cpp	/^void MotionModule::processWalkFrame() {$/;"	f	class:MotionModule
process_test	tools/behaviorSim/cma.py	/^def process_test(stream=None):$/;"	f
processedDeltaLabels	build/include/tool/SensorWindow.h	/^  QLabel* processedDeltaLabels;$/;"	m	class:SensorWindow
processedDeltaLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* processedDeltaLabels;$/;"	m	class:SensorWindow
processedLabels	build/include/tool/SensorWindow.h	/^  QLabel* processedLabels;$/;"	m	class:SensorWindow
processedLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* processedLabels;$/;"	m	class:SensorWindow
processedLeftSonarLabels	build/include/tool/SensorWindow.h	/^  QLabel* processedLeftSonarLabels;$/;"	m	class:SensorWindow
processedLeftSonarLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* processedLeftSonarLabels;$/;"	m	class:SensorWindow
processedRightSonarLabels	build/include/tool/SensorWindow.h	/^  QLabel* processedRightSonarLabels;$/;"	m	class:SensorWindow
processedRightSonarLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* processedRightSonarLabels;$/;"	m	class:SensorWindow
processed_joint_angles_	core/MotionCore.h	/^  JointBlock* processed_joint_angles_;$/;"	m	class:MotionCore
processed_joint_angles_	interfaces/nao/src/naointerface.h	/^    JointBlock* processed_joint_angles_;$/;"	m	class:naointerface
processed_joint_commands_	core/MotionCore.h	/^  JointCommandBlock* processed_joint_commands_;$/;"	m	class:MotionCore
processed_joint_commands_	interfaces/nao/src/naointerface.h	/^    JointCommandBlock* processed_joint_commands_;$/;"	m	class:naointerface
processed_sensors_	core/MotionCore.h	/^  SensorBlock* processed_sensors_;$/;"	m	class:MotionCore
processed_sonar	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
processed_sonar	core/python/memory.py	/^  def processed_sonar(): return core.pythonC.vision_processed_sonar_$/;"	f	function:init
processed_sonar_	core/MotionCore.h	/^  ProcessedSonarBlock *processed_sonar_;$/;"	m	class:MotionCore
processed_sonar_	core/sonar/SonarModule.h	/^  ProcessedSonarBlock *processed_sonar_;$/;"	m	class:SonarModule
processor_	build/include/tool/calibration/ExtrinsicCalibrator.h	/^    ImageProcessor *processor_;$/;"	m	class:ExtrinsicCalibrator
processor_	build/include/tool/calibration/JointCalibrator.h	/^    ImageProcessor* processor_;$/;"	m	class:JointCalibrator
processor_	tools/UTNaoTool/calibration/ExtrinsicCalibrator.h	/^    ImageProcessor *processor_;$/;"	m	class:ExtrinsicCalibrator
processor_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    ImageProcessor* processor_;$/;"	m	class:JointCalibrator
profile	core/python/UTdebug.py	/^def profile(function, sortby = 'cumulative', iterations=1):$/;"	f
prog	lib/zlib/minigzip.c	/^char *prog;$/;"	v
progname	lib/lua/src/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
progname	lib/lua/src/luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	file:
projectChessboardCorners	build/include/tool/calibration/JointCalibrator.cpp	/^vector<Vector2f> JointCalibrator::projectChessboardCorners(bool left) const {$/;"	f	class:JointCalibrator
projectChessboardCorners	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^vector<Vector2f> JointCalibrator::projectChessboardCorners(bool left) const {$/;"	f	class:JointCalibrator
projectedMousePosition	build/include/tool/WorldGLWidget.cpp	/^Point2D WorldGLWidget::projectedMousePosition(int x, int y) {$/;"	f	class:WorldGLWidget
projectedMousePosition	tools/UTNaoTool/WorldGLWidget.cpp	/^Point2D WorldGLWidget::projectedMousePosition(int x, int y) {$/;"	f	class:WorldGLWidget
propagateall	lib/lua/src/lgc.c	/^static size_t propagateall (global_State *g) {$/;"	f	file:
propagatemark	lib/lua/src/lgc.c	/^static l_mem propagatemark (global_State *g) {$/;"	f	file:
provided_blocks_	core/Module.h	/^  std::vector<std::string> provided_blocks_;$/;"	m	class:Module
providesMemoryBlock	core/Module.cpp	/^void Module::providesMemoryBlock(const std::string &name) {$/;"	f	class:Module
prune	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::prune() {$/;"	f	class:AnalysisWidget
prune	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::prune() {$/;"	f	class:AnalysisWidget
pruningCache_	build/include/tool/annotations/AnnotationAnalyzer.h	/^        std::map<Color, std::list<YUV*> > pruningCache_;$/;"	m	class:AnnotationAnalyzer
pruningCache_	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^        std::map<Color, std::list<YUV*> > pruningCache_;$/;"	m	class:AnnotationAnalyzer
pruningStack_	build/include/tool/annotations/AnnotationAnalyzer.h	/^        std::vector< std::vector<YUV*> > pruningStack_;$/;"	m	class:AnnotationAnalyzer
pruningStack_	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^        std::vector< std::vector<YUV*> > pruningStack_;$/;"	m	class:AnnotationAnalyzer
psi	core/motion/rswalk2014/PendulumModel.hpp	/^   float psi;$/;"	m	struct:PendulumModel
psi	lib/alglib/specialfunctions.cpp	/^double psi(const double x)$/;"	f	namespace:alglib
psi	lib/alglib/specialfunctions.cpp	/^double psi(double x, ae_state *_state)$/;"	f	namespace:alglib_impl
pspline2arclength	lib/alglib/interpolation.cpp	/^double pspline2arclength(const pspline2interpolant &p, const double a, const double b)$/;"	f	namespace:alglib
pspline2arclength	lib/alglib/interpolation.cpp	/^double pspline2arclength(pspline2interpolant* p,$/;"	f	namespace:alglib_impl
pspline2build	lib/alglib/interpolation.cpp	/^void pspline2build(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
pspline2build	lib/alglib/interpolation.cpp	/^void pspline2build(const real_2d_array &xy, const ae_int_t n, const ae_int_t st, const ae_int_t pt, pspline2interpolant &p)$/;"	f	namespace:alglib
pspline2buildperiodic	lib/alglib/interpolation.cpp	/^void pspline2buildperiodic(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
pspline2buildperiodic	lib/alglib/interpolation.cpp	/^void pspline2buildperiodic(const real_2d_array &xy, const ae_int_t n, const ae_int_t st, const ae_int_t pt, pspline2interpolant &p)$/;"	f	namespace:alglib
pspline2calc	lib/alglib/interpolation.cpp	/^void pspline2calc(const pspline2interpolant &p, const double t, double &x, double &y)$/;"	f	namespace:alglib
pspline2calc	lib/alglib/interpolation.cpp	/^void pspline2calc(pspline2interpolant* p,$/;"	f	namespace:alglib_impl
pspline2diff	lib/alglib/interpolation.cpp	/^void pspline2diff(const pspline2interpolant &p, const double t, double &x, double &dx, double &y, double &dy)$/;"	f	namespace:alglib
pspline2diff	lib/alglib/interpolation.cpp	/^void pspline2diff(pspline2interpolant* p,$/;"	f	namespace:alglib_impl
pspline2diff2	lib/alglib/interpolation.cpp	/^void pspline2diff2(const pspline2interpolant &p, const double t, double &x, double &dx, double &d2x, double &y, double &dy, double &d2y)$/;"	f	namespace:alglib
pspline2diff2	lib/alglib/interpolation.cpp	/^void pspline2diff2(pspline2interpolant* p,$/;"	f	namespace:alglib_impl
pspline2interpolant	lib/alglib/interpolation.cpp	/^pspline2interpolant::pspline2interpolant() : _pspline2interpolant_owner() $/;"	f	class:alglib::pspline2interpolant
pspline2interpolant	lib/alglib/interpolation.cpp	/^pspline2interpolant::pspline2interpolant(const pspline2interpolant &rhs):_pspline2interpolant_owner(rhs) $/;"	f	class:alglib::pspline2interpolant
pspline2interpolant	lib/alglib/interpolation.h	/^class pspline2interpolant : public _pspline2interpolant_owner$/;"	c	namespace:alglib
pspline2interpolant	lib/alglib/interpolation.h	/^} pspline2interpolant;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon64
pspline2parametervalues	lib/alglib/interpolation.cpp	/^void pspline2parametervalues(const pspline2interpolant &p, ae_int_t &n, real_1d_array &t)$/;"	f	namespace:alglib
pspline2parametervalues	lib/alglib/interpolation.cpp	/^void pspline2parametervalues(pspline2interpolant* p,$/;"	f	namespace:alglib_impl
pspline2tangent	lib/alglib/interpolation.cpp	/^void pspline2tangent(const pspline2interpolant &p, const double t, double &x, double &y)$/;"	f	namespace:alglib
pspline2tangent	lib/alglib/interpolation.cpp	/^void pspline2tangent(pspline2interpolant* p,$/;"	f	namespace:alglib_impl
pspline3arclength	lib/alglib/interpolation.cpp	/^double pspline3arclength(const pspline3interpolant &p, const double a, const double b)$/;"	f	namespace:alglib
pspline3arclength	lib/alglib/interpolation.cpp	/^double pspline3arclength(pspline3interpolant* p,$/;"	f	namespace:alglib_impl
pspline3build	lib/alglib/interpolation.cpp	/^void pspline3build(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
pspline3build	lib/alglib/interpolation.cpp	/^void pspline3build(const real_2d_array &xy, const ae_int_t n, const ae_int_t st, const ae_int_t pt, pspline3interpolant &p)$/;"	f	namespace:alglib
pspline3buildperiodic	lib/alglib/interpolation.cpp	/^void pspline3buildperiodic(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
pspline3buildperiodic	lib/alglib/interpolation.cpp	/^void pspline3buildperiodic(const real_2d_array &xy, const ae_int_t n, const ae_int_t st, const ae_int_t pt, pspline3interpolant &p)$/;"	f	namespace:alglib
pspline3calc	lib/alglib/interpolation.cpp	/^void pspline3calc(const pspline3interpolant &p, const double t, double &x, double &y, double &z)$/;"	f	namespace:alglib
pspline3calc	lib/alglib/interpolation.cpp	/^void pspline3calc(pspline3interpolant* p,$/;"	f	namespace:alglib_impl
pspline3diff	lib/alglib/interpolation.cpp	/^void pspline3diff(const pspline3interpolant &p, const double t, double &x, double &dx, double &y, double &dy, double &z, double &dz)$/;"	f	namespace:alglib
pspline3diff	lib/alglib/interpolation.cpp	/^void pspline3diff(pspline3interpolant* p,$/;"	f	namespace:alglib_impl
pspline3diff2	lib/alglib/interpolation.cpp	/^void pspline3diff2(const pspline3interpolant &p, const double t, double &x, double &dx, double &d2x, double &y, double &dy, double &d2y, double &z, double &dz, double &d2z)$/;"	f	namespace:alglib
pspline3diff2	lib/alglib/interpolation.cpp	/^void pspline3diff2(pspline3interpolant* p,$/;"	f	namespace:alglib_impl
pspline3interpolant	lib/alglib/interpolation.cpp	/^pspline3interpolant::pspline3interpolant() : _pspline3interpolant_owner() $/;"	f	class:alglib::pspline3interpolant
pspline3interpolant	lib/alglib/interpolation.cpp	/^pspline3interpolant::pspline3interpolant(const pspline3interpolant &rhs):_pspline3interpolant_owner(rhs) $/;"	f	class:alglib::pspline3interpolant
pspline3interpolant	lib/alglib/interpolation.h	/^class pspline3interpolant : public _pspline3interpolant_owner$/;"	c	namespace:alglib
pspline3interpolant	lib/alglib/interpolation.h	/^} pspline3interpolant;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon65
pspline3parametervalues	lib/alglib/interpolation.cpp	/^void pspline3parametervalues(const pspline3interpolant &p, ae_int_t &n, real_1d_array &t)$/;"	f	namespace:alglib
pspline3parametervalues	lib/alglib/interpolation.cpp	/^void pspline3parametervalues(pspline3interpolant* p,$/;"	f	namespace:alglib_impl
pspline3tangent	lib/alglib/interpolation.cpp	/^void pspline3tangent(const pspline3interpolant &p, const double t, double &x, double &y, double &z)$/;"	f	namespace:alglib
pspline3tangent	lib/alglib/interpolation.cpp	/^void pspline3tangent(pspline3interpolant* p,$/;"	f	namespace:alglib_impl
pspline_pspline2par	lib/alglib/interpolation.cpp	/^static void pspline_pspline2par(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
pspline_pspline3par	lib/alglib/interpolation.cpp	/^static void pspline_pspline3par(\/* Real    *\/ ae_matrix* xy,$/;"	f	namespace:alglib_impl
pstats	core/python/UTdebug.py	/^  import cProfile, pstats, StringIO$/;"	i
pt1	core/vision/structures/FieldLine.h	/^  Point2D pt1;$/;"	m	struct:FieldLine
pt2	core/vision/structures/FieldLine.h	/^  Point2D pt2;$/;"	m	struct:FieldLine
ptr	lib/alglib/ap.h	/^    char *ptr;$/;"	m	struct:alglib_impl::__anon32
ptr	lib/alglib/ap.h	/^    void * volatile ptr;$/;"	m	struct:alglib_impl::ae_dyn_block
ptr	lib/alglib/ap.h	/^    void *ptr;$/;"	m	struct:alglib_impl::__anon33
ptr	lib/alglib/ap.h	/^    void *ptr;$/;"	m	struct:alglib_impl::__anon34
ptr	lib/alglib/ap.h	/^    } ptr;$/;"	m	struct:alglib_impl::ae_matrix	typeref:union:alglib_impl::ae_matrix::__anon37
ptr	lib/alglib/ap.h	/^    } ptr;$/;"	m	struct:alglib_impl::ae_vector	typeref:union:alglib_impl::ae_vector::__anon36
ptr_stack	lib/yaml-cpp/src/ptr_stack.h	/^	ptr_stack() {}$/;"	f	class:ptr_stack
ptr_stack	lib/yaml-cpp/src/ptr_stack.h	/^class ptr_stack: private YAML::noncopyable$/;"	c
ptr_table	lib/zlib/zutil.c	/^} ptr_table;$/;"	t	typeref:struct:ptr_table_s	file:
ptr_table_s	lib/zlib/zutil.c	/^typedef struct ptr_table_s {$/;"	s	file:
ptr_vector	lib/yaml-cpp/src/ptr_vector.h	/^		ptr_vector() {}$/;"	f	class:YAML::ptr_vector
ptr_vector	lib/yaml-cpp/src/ptr_vector.h	/^	class ptr_vector: private YAML::noncopyable$/;"	c	namespace:YAML
ptrdiff_t	lib/zlib/zutil.h	/^       typedef int ptrdiff_t;$/;"	t
publishData	core/MotionCore.cpp	/^void MotionCore::publishData() {$/;"	f	class:MotionCore
publishData	core/VisionCore.cpp	/^void VisionCore::publishData() {$/;"	f	class:VisionCore
publishData	core/memory/SynchronizedBlock.h	/^  void publishData(T *data) {$/;"	f	class:SynchronizedBlock
publishUpdate	core/memory/SynchronizedBlock.h	/^  void publishUpdate(T *data) {$/;"	f	class:SynchronizedBlock
push	core/common/RingQueue.h	/^    void push (const V& v) $/;"	f	class:RingQueue
push	core/common/RingQueueWithSum.h	/^    void push (const V& v) $/;"	f	class:RingQueueWithSum
push	lib/yaml-cpp/src/ptr_stack.h	/^	void push(std::auto_ptr<T> t) {$/;"	f	class:ptr_stack
push	lib/yaml-cpp/src/setting.h	/^		void push(std::auto_ptr <SettingChangeBase> pSettingChange) {$/;"	f	class:YAML::SettingChanges
push_back	lib/yaml-cpp/src/ptr_vector.h	/^		void push_back(std::auto_ptr<T> t) {$/;"	f	class:YAML::ptr_vector
push_captures	lib/lua/src/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_onecapture	lib/lua/src/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
pushclosure	lib/lua/src/lparser.c	/^static void pushclosure (LexState *ls, FuncState *func, expdesc *v) {$/;"	f	file:
pusherror	lib/lua/src/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushline	lib/lua/src/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushnexttemplate	lib/lua/src/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushresult	lib/lua/src/liolib.c	/^static int pushresult (lua_State *L, int i, const char *filename) {$/;"	f	file:
pushstr	lib/lua/src/lobject.c	/^static void pushstr (lua_State *L, const char *str) {$/;"	f	file:
put	lib/yaml-cpp/src/ostream.cpp	/^	void ostream::put(char ch)$/;"	f	class:YAML::ostream
putShortMSB	lib/zlib/deflate.c	/^local void putShortMSB (s, b)$/;"	f
put_byte	lib/zlib/deflate.h	/^#define put_byte(/;"	d
put_short	lib/zlib/trees.c	/^#define put_short(/;"	d	file:
pvalue	lib/lua/src/lobject.h	/^#define pvalue(/;"	d
pwinerror	lib/zlib/minigzip.c	/^static void pwinerror (s)$/;"	f	file:
pyface_	core/python/PythonModule.h	/^  PythonInterface* pyface_;$/;"	m	class:PythonModule
pygsl	tools/behaviorSim/cma.py	/^                        import pygsl.eigen.eigenvectors  # TODO efficient enough?$/;"	i
pygsl	tools/behaviorSim/cma.py	/^                if 1 < 3:  # import pygsl on the fly$/;"	i
pylab	tools/behaviorSim/cma.py	/^    import matplotlib.pylab as pylab  # also: use ipython -pylab$/;"	i
pylab	tools/behaviorSim/cma.py	/^    print('  Could not import matplotlib.pylab, therefore ``cma.plot()`` etc. is not available')$/;"	i
pylab	tools/behaviorSim/cma.py	/^    pylab = None$/;"	v
pythag2	lib/alglib/alglibinternal.cpp	/^double pythag2(double x, double y, ae_state *_state)$/;"	f	namespace:alglib_impl
python	tools/behaviorSim/cma.py	/^from __future__ import print_function  # for cross-checking, available from python 2.6$/;"	i
python	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
pythonswig_module	core/python/core.py	/^import pythonswig_module$/;"	i
q	lib/alglib/interpolation.h	/^    ae_matrix q;$/;"	m	struct:alglib_impl::__anon56
q	lib/alglib/optimization.h	/^    ae_int_t q;$/;"	m	struct:alglib_impl::__anon69
qlock_	build/include/tool/ProcessExecutor.cpp	/^mutex PE::qlock_;$/;"	m	class:PE	file:
qlock_	build/include/tool/ProcessExecutor.h	/^    static std::mutex qlock_;$/;"	m	class:ProcessExecutor
qlock_	tools/UTNaoTool/ProcessExecutor.cpp	/^mutex PE::qlock_;$/;"	m	class:PE	file:
qlock_	tools/UTNaoTool/ProcessExecutor.h	/^    static std::mutex qlock_;$/;"	m	class:ProcessExecutor
qn	lib/alglib/integration.h	/^    ae_vector qn;$/;"	m	struct:alglib_impl::__anon54
qprep	lib/alglib/optimization.h	/^    minqpreport qprep;$/;"	m	struct:alglib_impl::__anon73
qpstate	lib/alglib/optimization.h	/^    minqpstate qpstate;$/;"	m	struct:alglib_impl::__anon73
qsort	lib/lua/test/sort.lua	/^function qsort(x,l,u,f)$/;"	f
quadraticmodel	lib/alglib/optimization.h	/^    ae_matrix quadraticmodel;$/;"	m	struct:alglib_impl::__anon73
quadric	build/include/tool/UTOpenGL/BasicGL.h	/^  GLUquadricObj* quadric;$/;"	m	class:BasicGL
quadric	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^  GLUquadricObj* quadric;$/;"	m	class:BasicGL
queryctrl	core/imageCapture/NaoCamera.h	/^  v4l2_queryctrl queryctrl;$/;"	m	class:NaoCamera
querymenu	core/imageCapture/NaoCamera.h	/^  v4l2_querymenu querymenu;$/;"	m	class:NaoCamera
queueCompleted	core/python/state_machine.py	/^  def queueCompleted(self):$/;"	m	class:Node
queueProcess	build/include/tool/ProcessExecutor.cpp	/^void PE::queueProcess(PE::Task task, const QString& name, ProcessPriority priority) {$/;"	f	class:PE
queueProcess	build/include/tool/ProcessExecutor.cpp	/^void PE::queueProcess(ToolProcess tp, ProcessPriority priority) {$/;"	f	class:PE
queueProcess	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::queueProcess(PE::Task task, const QString& name, ProcessPriority priority) {$/;"	f	class:PE
queueProcess	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::queueProcess(ToolProcess tp, ProcessPriority priority) {$/;"	f	class:PE
r	core/common/ColorConversion.h	/^    int r;$/;"	m	struct:color::Rgb
r	core/common/ColorSpaces.h	/^  int r;$/;"	m	struct:RGB
r	core/vision/structures/SphericalPosition.h	/^  float r;$/;"	m	struct:SphericalPosition
r	lib/alglib/alglibmisc.h	/^    ae_vector r;$/;"	m	struct:alglib_impl::__anon25
r	lib/alglib/integration.h	/^    double r;$/;"	m	struct:alglib_impl::__anon54
r	lib/alglib/interpolation.h	/^    double r;$/;"	m	struct:alglib_impl::__anon56
r	lib/alglib/optimization.h	/^    ae_vector r;$/;"	m	struct:alglib_impl::__anon79
r	lib/lua/doc/manual.html	/^     function r() return 1,2,3 end$/;"	f
r	lib/lua/src/llex.h	/^  lua_Number r;$/;"	m	union:__anon86
r	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    uint8_t r;$/;"	m	struct:color_classifier::Rgb
r	vision_testing/src/vision_testing.cpp	/^  unsigned char r;$/;"	m	class:RGB	file:
r1	lib/alglib/linalg.h	/^    double &r1;$/;"	m	class:alglib::matinvreport
r1	lib/alglib/linalg.h	/^    double r1;$/;"	m	struct:alglib_impl::__anon67
r1	lib/alglib/solvers.h	/^    double &r1;$/;"	m	class:alglib::densesolverreport
r1	lib/alglib/solvers.h	/^    double r1;$/;"	m	struct:alglib_impl::__anon81
r2	lib/alglib/solvers.h	/^    double &r2;$/;"	m	class:alglib::densesolverlsreport
r2	lib/alglib/solvers.h	/^    double r2;$/;"	m	struct:alglib_impl::__anon82
r_goal_dist_filtered	core/python/behaviors/win.py	/^r_goal_dist_filtered = 0.$/;"	v
ra	lib/alglib/ap.h	/^    ae_vector ra;$/;"	m	struct:alglib_impl::rcommstate
ra0	lib/alglib/alglibinternal.h	/^    ae_vector ra0;$/;"	m	struct:alglib_impl::__anon20
ra1	lib/alglib/alglibinternal.h	/^    ae_vector ra1;$/;"	m	struct:alglib_impl::__anon20
ra2	lib/alglib/alglibinternal.h	/^    ae_vector ra2;$/;"	m	struct:alglib_impl::__anon20
ra3	lib/alglib/alglibinternal.h	/^    ae_vector ra3;$/;"	m	struct:alglib_impl::__anon20
radius	core/common/WorldObject.h	/^  float radius; \/\/\/< The radius of this object in the frame image.$/;"	m	class:WorldObject
radius	core/vision/structures/BallCandidate.h	/^  float radius;$/;"	m	struct:BallCandidate
rand	tools/behaviorSim/cma.py	/^    def rand(self, x): $/;"	m	class:FitnessFunctions
rand_	build/include/tool/simulation/CommunicationGenerator.h	/^    Random rand_;$/;"	m	class:CommunicationGenerator
rand_	build/include/tool/simulation/ObservationGenerator.h	/^    Random rand_;$/;"	m	class:ObservationGenerator
rand_	build/include/tool/simulation/RobotMovementSimulator.h	/^    Random rand_;$/;"	m	class:RobotMovementSimulator
rand_	build/include/tool/simulation/SimulatedPlayer.h	/^  Random rand_;$/;"	m	class:SimulatedPlayer
rand_	build/include/tool/simulation/Simulation.h	/^    Random rand_;$/;"	m	class:Simulation
rand_	core/localization/ParticleFilter.h	/^    Random rand_;$/;"	m	class:ParticleFilter
rand_	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^    Random rand_;$/;"	m	class:CommunicationGenerator
rand_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    Random rand_;$/;"	m	class:ObservationGenerator
rand_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    Random rand_;$/;"	m	class:RobotMovementSimulator
rand_	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  Random rand_;$/;"	m	class:SimulatedPlayer
rand_	tools/UTNaoTool/simulation/Simulation.h	/^    Random rand_;$/;"	m	class:Simulation
random	core/math/Common.h	/^inline int random(int n) {return (int)(randomFloat()*n*0.999999);}$/;"	f
random	core/math/Pose2D.h	/^  static Pose2D random(const Range<float>& x,$/;"	f	class:Pose2D
random	core/python/UTdebug.py	/^import logging; logging.disable(logging.ERROR) # kill hashlib errors from random$/;"	i
random	core/python/behaviors/Movement.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
random	core/python/behaviors/keeper.py	/^import random$/;"	i
random	core/python/behaviors/keeper_2.py	/^import random$/;"	i
random	core/python/behaviors/keeper_3.py	/^import random$/;"	i
random	core/python/behaviors/walk_to_center.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
random	core/python/behaviors/walk_to_center_2.py	/^import memory, pose, commands, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
random	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
random	particle_filters/MCL_main.cpp	/^double random( double length ){ return (rand()*1.0\/RAND_MAX)*length - length*0.5; }$/;"	f
random	particle_filters/MCL_particle_filter.hpp	/^    double random( double length ){ return (rand()*1.0\/RAND_MAX)*length - length*0.5; }$/;"	f	class:MCLParticleFilter
random	particle_filters/RMCL_particle_filter.hpp	/^    double random( double length ){ return (rand()*1.0\/RAND_MAX)*length - length*0.5; }$/;"	f	class:RMCLParticleFilter
random	particle_filters/main.cpp	/^double random( double length ){ return (rand()*1.0\/RAND_MAX)*length - length*0.5; }$/;"	f
random	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
randomFast	core/math/Common.h	/^inline int randomFast(int n)$/;"	f
randomFloat	core/math/Common.h	/^inline float randomFloat() {return float(rand()) \/ RAND_MAX_FLOAT;}$/;"	f
random_	core/common/Random.h	/^    std::mt19937 random_;$/;"	m	class:Random
random_	interfaces/sim_spark/RobotBehavior.h	/^  Random random_;$/;"	m	class:RobotBehavior
randominteger	lib/alglib/ap.cpp	/^int alglib::randominteger(int maxv)$/;"	f	class:alglib
randomizePlayers	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::randomizePlayers(FieldConfiguration& config) {$/;"	f	class:IBSim
randomizePlayers	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::randomizePlayers(FieldConfiguration& config) {$/;"	f	class:IBSim
randomreal	lib/alglib/ap.cpp	/^double alglib::randomreal()$/;"	f	class:alglib
rankx	lib/alglib/alglibinternal.cpp	/^void rankx(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
rastrigin	tools/behaviorSim/cma.py	/^    def rastrigin(self, x):$/;"	m	class:FitnessFunctions
rateSlope	core/vision/structures/FieldLine.h	/^  float rateSlope;$/;"	m	struct:FieldLine
ratint_barycentricnormalize	lib/alglib/interpolation.cpp	/^static void ratint_barycentricnormalize(barycentricinterpolant* b,$/;"	f	namespace:alglib_impl
raw	lib/zlib/gzguts.h	/^    z_off64_t raw;          \/* where the raw data started, for seeking *\/$/;"	m	struct:__anon135
rawDeltaLabels	build/include/tool/SensorWindow.h	/^  QLabel* rawDeltaLabels;$/;"	m	class:SensorWindow
rawDeltaLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* rawDeltaLabels;$/;"	m	class:SensorWindow
rawLabels	build/include/tool/SensorWindow.h	/^  QLabel* rawLabels;$/;"	m	class:SensorWindow
rawLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* rawLabels;$/;"	m	class:SensorWindow
rawLeftSonarLabels	build/include/tool/SensorWindow.h	/^  QLabel* rawLeftSonarLabels;$/;"	m	class:SensorWindow
rawLeftSonarLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* rawLeftSonarLabels;$/;"	m	class:SensorWindow
rawRightSonarLabels	build/include/tool/SensorWindow.h	/^  QLabel* rawRightSonarLabels;$/;"	m	class:SensorWindow
rawRightSonarLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* rawRightSonarLabels;$/;"	m	class:SensorWindow
rawRoll	core/sensor/InertialFilter.h	/^  float rawRoll;$/;"	m	class:InertialFilter
rawSize	core/common/RobotInfo.h	/^  int rawSize;$/;"	m	struct:ImageParams
rawTilt	core/sensor/InertialFilter.h	/^  float rawTilt;$/;"	m	class:InertialFilter
rawToMat	core/common/ColorConversion.cpp	/^cv::Mat color::rawToMat(const unsigned char* imgraw, const ImageParams& params) {$/;"	f	class:color
rawToMatSubset	core/common/ColorConversion.cpp	/^cv::Mat color::rawToMatSubset(const unsigned char* imgraw, const ImageParams& params, int row, int col, int width, int height, int hstep, int vstep) {$/;"	f	class:color
raw_camera_info_	core/VisionCore.h	/^  CameraBlock *raw_camera_info_;$/;"	m	class:VisionCore
raw_image_	interfaces/sim_spark/RobotBehavior.h	/^  ImageBlock* raw_image_;$/;"	m	class:RobotBehavior
raw_input	tools/behaviorSim/cma.py	/^    raw_input = input$/;"	v
raw_joint_angles_	core/MotionCore.h	/^  JointBlock* raw_joint_angles_;$/;"	m	class:MotionCore
raw_joint_angles_	interfaces/nao/src/naointerface.h	/^    JointBlock* raw_joint_angles_;$/;"	m	class:naointerface
raw_joint_angles_	interfaces/sim_spark/RobotBehavior.h	/^  JointBlock* raw_joint_angles_;$/;"	m	class:RobotBehavior
raw_joint_commands_	core/MotionCore.h	/^  JointCommandBlock* raw_joint_commands_;$/;"	m	class:MotionCore
raw_joint_commands_	interfaces/nao/src/naointerface.h	/^    JointCommandBlock* raw_joint_commands_;$/;"	m	class:naointerface
raw_joint_commands_	interfaces/sim_spark/RobotBehavior.h	/^  JointCommandBlock* raw_joint_commands_;$/;"	m	class:RobotBehavior
raw_joints_	core/motion/rswalk2014/RSWalkModule2014.h	/^        JointBlock *raw_joints_;$/;"	m	class:RSWalkModule2014
raw_sensor_block_	interfaces/sim_spark/RobotBehavior.h	/^  SensorBlock* raw_sensor_block_;$/;"	m	class:RobotBehavior
raw_sensors_	core/MotionCore.h	/^  SensorBlock* raw_sensors_;$/;"	m	class:MotionCore
raw_sensors_	core/sensor/SensorModule.h	/^  SensorBlock *raw_sensors_;$/;"	m	class:SensorModule
raw_sensors_	interfaces/nao/src/naointerface.h	/^    SensorBlock* raw_sensors_;$/;"	m	class:naointerface
raw_vision_frame_info_	core/VisionCore.h	/^  FrameInfoBlock *raw_vision_frame_info_;$/;"	m	class:VisionCore
rawgco2ts	lib/lua/src/lstate.h	/^#define rawgco2ts(/;"	d
rawgco2u	lib/lua/src/lstate.h	/^#define rawgco2u(/;"	d
rawtsvalue	lib/lua/src/lobject.h	/^#define rawtsvalue(/;"	d
rawuvalue	lib/lua/src/lobject.h	/^#define rawuvalue(/;"	d
rayleigh	interfaces/sim_spark/Random.h	/^   float rayleigh( float a, float b )   \/\/ Rayleigh$/;"	f	class:Random
rbuf	lib/alglib/interpolation.h	/^    ae_vector rbuf;$/;"	m	struct:alglib_impl::__anon56
rcConfig	build/include/tool/ToolConfig.h	/^    RobotControllerConfig rcConfig;$/;"	m	class:ToolConfig
rcConfig	tools/UTNaoTool/ToolConfig.h	/^    RobotControllerConfig rcConfig;$/;"	m	class:ToolConfig
rcPath	build/include/tool/UTMainWnd.h	/^  std::string rcPath;$/;"	m	class:UTMainWnd
rcPath	tools/UTNaoTool/UTMainWnd.h	/^  std::string rcPath;$/;"	m	class:UTMainWnd
rclear	core/memory/StreamBuffer.cpp	/^void StreamBuffer::rclear() {$/;"	f	class:StreamBuffer
rcommstate	lib/alglib/ap.h	/^typedef struct rcommstate$/;"	s	namespace:alglib_impl
rcommstate	lib/alglib/ap.h	/^} rcommstate;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::rcommstate
rcond_cmatrixestimatenorm	lib/alglib/linalg.cpp	/^static void rcond_cmatrixestimatenorm(ae_int_t n,$/;"	f	namespace:alglib_impl
rcond_cmatrixrcondluinternal	lib/alglib/linalg.cpp	/^static void rcond_cmatrixrcondluinternal(\/* Complex *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
rcond_cmatrixrcondtrinternal	lib/alglib/linalg.cpp	/^static void rcond_cmatrixrcondtrinternal(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rcond_hpdmatrixrcondcholeskyinternal	lib/alglib/linalg.cpp	/^static void rcond_hpdmatrixrcondcholeskyinternal(\/* Complex *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
rcond_internalcomplexrcondicmax1	lib/alglib/linalg.cpp	/^static ae_int_t rcond_internalcomplexrcondicmax1(\/* Complex *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
rcond_internalcomplexrcondloadall	lib/alglib/linalg.cpp	/^static void rcond_internalcomplexrcondloadall(\/* Integer *\/ ae_vector* isave,$/;"	f	namespace:alglib_impl
rcond_internalcomplexrcondsaveall	lib/alglib/linalg.cpp	/^static void rcond_internalcomplexrcondsaveall(\/* Integer *\/ ae_vector* isave,$/;"	f	namespace:alglib_impl
rcond_internalcomplexrcondscsum1	lib/alglib/linalg.cpp	/^static double rcond_internalcomplexrcondscsum1(\/* Complex *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
rcond_rmatrixestimatenorm	lib/alglib/linalg.cpp	/^static void rcond_rmatrixestimatenorm(ae_int_t n,$/;"	f	namespace:alglib_impl
rcond_rmatrixrcondluinternal	lib/alglib/linalg.cpp	/^static void rcond_rmatrixrcondluinternal(\/* Real    *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
rcond_rmatrixrcondtrinternal	lib/alglib/linalg.cpp	/^static void rcond_rmatrixrcondtrinternal(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rcond_spdmatrixrcondcholeskyinternal	lib/alglib/linalg.cpp	/^static void rcond_spdmatrixrcondcholeskyinternal(\/* Real    *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
rcondthreshold	lib/alglib/linalg.cpp	/^double rcondthreshold(ae_state *_state)$/;"	f	namespace:alglib_impl
re	build/luaswig/generateSwig.py	/^import sys, os, subprocess, re$/;"	i
re	build/pythonswig/generateSwig.py	/^import sys, os, subprocess, re$/;"	i
re	data/ballfit.py	/^import re$/;"	i
re	data/goalfit.py	/^import re$/;"	i
re	data/scripts/wireless-monitor.py	/^import subprocess, re, time$/;"	i
re	install/common.py	/^import pexpect, re$/;"	i
re	install/setup_robot	/^import os, getopt, re$/;"	i
re	tools/behaviorSim/runCMAES.py	/^import json, sys, os, shutil, subprocess, re, time$/;"	i
reInit	core/localization/LocalizationModule.cpp	/^void LocalizationModule::reInit() {$/;"	f	class:LocalizationModule
reInit	core/opponents/OppModule.cpp	/^void OppModule::reInit(){$/;"	f	class:OppModule
reInit	core/opponents/UKF4.cpp	/^void UKF4::reInit(){$/;"	f	class:UKF4
reachedKeyframe	core/motion/KickModule.cpp	/^bool KickModule::reachedKeyframe(const Keyframe& keyframe) {$/;"	f	class:KickModule
read	core/memory/MemoryCache.cpp	/^MemoryCache MemoryCache::read(Memory& memory) {$/;"	f	class:MemoryCache
read	core/memory/MemoryCache.cpp	/^MemoryCache MemoryCache::read(Memory* memory) {$/;"	f	class:MemoryCache
read	core/memory/StreamBuffer.cpp	/^void StreamBuffer::read(const char* data, unsigned int n) {$/;"	f	class:StreamBuffer
read	core/memory/StreamBuffer.cpp	/^void StreamBuffer::read(const unsigned char* data, unsigned int n) {$/;"	f	class:StreamBuffer
read	core/memory/StreamBuffer.cpp	/^void StreamBuffer::read(std::istream& is) {$/;"	f	class:StreamBuffer
read	core/memory/StreamBuffer.cpp	/^void StreamBuffer::read(std::istream& is, unsigned int n) {$/;"	f	class:StreamBuffer
read	core/memory/StreamBuffer.h	/^  void read(const std::vector<T>& v) {$/;"	f	struct:StreamBuffer
readBValues	build/include/tool/CameraWindow.h	/^    QLabel* readBValues;$/;"	m	class:CameraWindow
readBValues	tools/UTNaoTool/CameraWindow.h	/^    QLabel* readBValues;$/;"	m	class:CameraWindow
readCalibrationFile	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::readCalibrationFile() {$/;"	f	class:UTMainWnd
readCalibrationFile	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::readCalibrationFile() {$/;"	f	class:UTMainWnd
readCondorResults	tools/behaviorSim/runCMAES.py	/^def readCondorResults(thisGenOutputDir,xs):$/;"	f
readConfig	core/InterpreterModule.cpp	/^void InterpreterModule::readConfig() {$/;"	f	class:InterpreterModule
readFrame	core/memory/LogReader.cpp	/^Memory* LogReader::readFrame(int frame) {$/;"	f	class:LogReader
readFromFile	core/common/Calibration.h	/^  bool readFromFile(std::string fileName) {$/;"	f	class:Calibration
readGroundTruth	data/ballfit.py	/^def readGroundTruth(f):$/;"	f
readGroundTruth	data/goalfit.py	/^def readGroundTruth(f):$/;"	f
readImage	core/memory/ImageBlock.h	/^  void readImage(unsigned char* imgraw, std::string path, const ImageParams& iparams) {$/;"	f	struct:ImageBlock
readImageBinary	core/memory/ImageBlock.cpp	/^void ImageBlock::readImageBinary(unsigned char* imgraw, std::string path, const ImageParams& iparams){$/;"	f	class:ImageBlock
readMeasured	data/ballfit.py	/^def readMeasured(f):$/;"	f
readMeasured	data/goalfit.py	/^def readMeasured(f):$/;"	f
readMemory	core/memory/LogReader.cpp	/^bool LogReader::readMemory(Memory &memory, bool \/*suppress_errors*\/) {$/;"	f	class:LogReader
readMemoryHeader	core/memory/LogReader.cpp	/^bool LogReader::readMemoryHeader(const StreamBuffer& buffer, MemoryHeader& header) {$/;"	f	class:LogReader
readOptions	core/motion/rswalk2014/ActionGenerator.cpp	/^void ActionGenerator::readOptions(std::string path) { \/\/const boost::program_options::variables_map &config) {$/;"	f	class:ActionGenerator
readOptions	core/motion/rswalk2014/ClippedGenerator.cpp	/^void ClippedGenerator::readOptions(std::string path) { \/\/const boost::program_options::variables_map &config) {$/;"	f	class:ClippedGenerator
readOptions	core/motion/rswalk2014/DistributedGenerator.cpp	/^void DistributedGenerator::readOptions(std::string path){ \/\/const boost::program_options::variables_map &config) {$/;"	f	class:DistributedGenerator
readOptions	core/motion/rswalk2014/Generator.hpp	/^      virtual void readOptions(std::string path){} \/\/const boost::program_options::variables_map &config) {}$/;"	f	class:Generator
readOptions	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::readOptions(std::string path)$/;"	f	class:RSWalkModule2014
readOptions	core/motion/rswalk2014/RefPickupGenerator.cpp	/^void RefPickupGenerator::readOptions(std::string path) { \/\/const boost::program_options::variables_map &config) {$/;"	f	class:RefPickupGenerator
readOptions	core/motion/rswalk2014/StandGenerator.cpp	/^void StandGenerator::readOptions(std::string path){ \/\/const boost::program_options::variables_map &config) {$/;"	f	class:StandGenerator
readOptions	core/motion/rswalk2014/Walk2014Generator.cpp	/^void Walk2014Generator::readOptions(std::string path) {} \/\/boost::program_options::variables_map &config) {}$/;"	f	class:Walk2014Generator
readOptions	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void WalkEnginePreProcessor::readOptions(std::string path) { \/\/boost::program_options::variables_map& config) {$/;"	f	class:WalkEnginePreProcessor
readOptions	core/motion/rswalk2014/utils/Logger.cpp	/^void Logger::readOptions(const boost::program_options::variables_map &config) {$/;"	f	class:Logger
readProperties	tools/behaviorSim/cma.py	/^    def readProperties(self):$/;"	m	class:CMAEvolutionStrategy
readTValues	build/include/tool/CameraWindow.h	/^    QLabel* readTValues;$/;"	m	class:CameraWindow
readTValues	tools/UTNaoTool/CameraWindow.h	/^    QLabel* readTValues;$/;"	m	class:CameraWindow
read_buf	lib/zlib/deflate.c	/^local int read_buf(strm, buf, size)$/;"	f
read_camera_params_	core/imageCapture/NaoCamera.h	/^    CameraParams& read_camera_params_;$/;"	m	class:NaoCamera
read_chars	lib/lua/src/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_interval_	core/sonar/SonarModule.h	/^  float read_interval_;$/;"	m	class:SonarModule
read_line	lib/lua/src/liolib.c	/^static int read_line (lua_State *L, FILE *f) {$/;"	f	file:
read_long_string	lib/lua/src/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_number	lib/lua/src/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	lib/lua/src/llex.c	/^static void read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_params_bottom_camera_	core/memory/CameraBlock.h	/^  CameraParams read_params_bottom_camera_;$/;"	m	struct:CameraBlock
read_params_top_camera_	core/memory/CameraBlock.h	/^  CameraParams read_params_top_camera_;$/;"	m	struct:CameraBlock
read_string	lib/lua/src/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
read_write	core/imageCapture/i2c-dev.h	/^	char read_write;$/;"	m	struct:i2c_smbus_ioctl_data
readable	lib/lua/src/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
reader	lib/lua/src/lzio.h	/^  lua_Reader reader;$/;"	m	struct:Zio
reader_	core/memory/Log.h	/^    LogReader reader_;$/;"	m	class:Log
readingCodes	core/motion/rswalk2014/utils/body.hpp	/^   const ReadingCode readingCodes[] = {$/;"	m	namespace:Sonar
readingNames	core/motion/rswalk2014/utils/body.hpp	/^   const std::string readingNames[] = {$/;"	m	namespace:Sonar
ready	core/common/Profiling.cpp	/^bool Timer::ready() {$/;"	f	class:Timer
ready	core/python/state_machine.py	/^  def ready(self):$/;"	m	class:CompletionEvent
ready	core/python/state_machine.py	/^  def ready(self):$/;"	m	class:FailureEvent
ready	core/python/state_machine.py	/^  def ready(self):$/;"	m	class:IterationEvent
ready	core/python/state_machine.py	/^  def ready(self):$/;"	m	class:NegationEvent
ready	core/python/state_machine.py	/^  def ready(self):$/;"	m	class:NullEvent
ready	core/python/state_machine.py	/^  def ready(self):$/;"	m	class:SignalEvent
ready	core/python/state_machine.py	/^  def ready(self):$/;"	m	class:TimeEvent
readyToStartKickAfterStep	core/motion/rswalk2014/RSWalkModule2014.cpp	/^bool RSWalkModule2014::readyToStartKickAfterStep() {$/;"	f	class:RSWalkModule2014
realLlog	core/motion/rswalk2014/utils/Logger.cpp	/^std::ostream &Logger::realLlog(int logLevel_) {$/;"	f	class:Logger
real_1d_array	lib/alglib/ap.cpp	/^alglib::real_1d_array::real_1d_array()  $/;"	f	class:alglib::real_1d_array
real_1d_array	lib/alglib/ap.cpp	/^alglib::real_1d_array::real_1d_array(alglib_impl::ae_vector *p)  $/;"	f	class:alglib::real_1d_array
real_1d_array	lib/alglib/ap.cpp	/^alglib::real_1d_array::real_1d_array(const char *s)  $/;"	f	class:alglib::real_1d_array
real_1d_array	lib/alglib/ap.h	/^class real_1d_array : public ae_vector_wrapper$/;"	c	namespace:alglib
real_2d_array	lib/alglib/ap.cpp	/^alglib::real_2d_array::real_2d_array()  $/;"	f	class:alglib::real_2d_array
real_2d_array	lib/alglib/ap.cpp	/^alglib::real_2d_array::real_2d_array(alglib_impl::ae_matrix *p)$/;"	f	class:alglib::real_2d_array
real_2d_array	lib/alglib/ap.cpp	/^alglib::real_2d_array::real_2d_array(const char *s)  $/;"	f	class:alglib::real_2d_array
real_2d_array	lib/alglib/ap.h	/^class real_2d_array : public ae_matrix_wrapper$/;"	c	namespace:alglib
really	tools/behaviorSim/cma.py	/^import time  # not really essential$/;"	i
reallymarkobject	lib/lua/src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
receiveData	core/MotionCore.cpp	/^void MotionCore::receiveData() {$/;"	f	class:MotionCore
receiveData	core/VisionCore.cpp	/^void VisionCore::receiveData() {$/;"	f	class:VisionCore
receiveData	core/memory/SynchronizedBlock.h	/^  void receiveData(T *data) {$/;"	f	class:SynchronizedBlock
receiveEmptyPacket	core/communications/UDPWrapper.cpp	/^void UDPWrapper::receiveEmptyPacket() {$/;"	f	class:UDPWrapper
receiveSignal	core/python/state_machine.py	/^  def receiveSignal(self, signal):$/;"	m	class:Node
receiveUpdate	core/memory/SynchronizedBlock.h	/^  void receiveUpdate(T *data) {$/;"	f	class:SynchronizedBlock
received_	core/memory/WalkResponseBlock.h	/^  bool received_;$/;"	m	struct:WalkResponseBlock
recfield	lib/lua/src/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
recovering_from_kick	core/python/behaviors/win.py	/^recovering_from_kick = False$/;"	v
recovers	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
recreate	core/memory/Lock.cpp	/^void Lock::recreate(){$/;"	f	class:Lock
recv	core/communications/UDPWrapper.cpp	/^bool UDPWrapper::recv(boost::asio::mutable_buffers_1 buffers, std::size_t size, bool acceptLowerSize) {$/;"	f	class:UDPWrapper
recv	core/communications/UDPWrapper.h	/^  bool recv(T &buffer) {$/;"	f	class:UDPWrapper
recv	core/communications/UDPWrapper.h	/^  bool recv(char *buffer, std::size_t size) {$/;"	f	class:UDPWrapper
recvFrom	core/communications/ThreadedUDPSocket.cpp	/^int ThreadedUDPSocket::recvFrom() {$/;"	f	class:ThreadedUDPSocket
red	core/motion/rswalk2014/types/ActionCommand.hpp	/^      bool red;$/;"	m	struct:ActionCommand::rgb
redrawCurrentSelections	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::redrawCurrentSelections() {$/;"	f	class:AnnotationWidget
redrawCurrentSelections	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::redrawCurrentSelections() {$/;"	f	class:AnnotationWidget
redrawImages	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::redrawImages() {$/;"	f	class:VisionWindow
redrawImages	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::redrawImages(ImageWidget* rawImage, ImageWidget* segImage, ImageWidget* objImage, ImageWidget* horizontalBlobImage, ImageWidget* verticalBlobImage, ImageWidget* transformedImage) {$/;"	f	class:VisionWindow
redrawImages	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::redrawImages() {$/;"	f	class:VisionWindow
redrawImages	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::redrawImages(ImageWidget* rawImage, ImageWidget* segImage, ImageWidget* objImage, ImageWidget* horizontalBlobImage, ImageWidget* verticalBlobImage, ImageWidget* transformedImage) {$/;"	f	class:VisionWindow
redrawImages	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::redrawImages(bool useTempColorTable) {$/;"	f	class:color_classifier::ClassificationWindow
reduceImageSize	tools/color_classifier/src/ImageWidget.cpp	/^  void ImageWidget::reduceImageSize(int factor){$/;"	f	class:color_classifier::ImageWidget
reeval	tools/behaviorSim/cma.py	/^    def reeval(self, X, fit, func, ask, args=()):$/;"	m	class:NoiseHandler
register	tools/behaviorSim/cma.py	/^    def register(self, es, append=None, modulo=None):$/;"	m	class:CMADataLogger
register	tools/behaviorSim/cma.py	/^    def register(self, es, append=None, modulo=None):$/;"	m	class:DEAPCMADataLogger
register	tools/behaviorSim/cma.py	/^    def register(self, optim):$/;"	m	class:BaseDataLogger
register	tools/behaviorSim/cma.py	/^    def register(self, optim):$/;"	m	class:BaseDataLogger2
registerlocalvar	lib/lua/src/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
registry	lib/lua/src/lstate.h	/^#define registry(/;"	d
rehash	lib/lua/src/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
relFeet	core/vision/structures/RobotCandidate.h	/^  Position relTorso, relFeet;$/;"	m	struct:RobotCandidate
relOrientation	core/common/WorldObject.h	/^  AngRad relOrientation;$/;"	m	class:WorldObject
relPos	core/common/WorldObject.h	/^  Point2D relPos;$/;"	m	class:WorldObject
relPosition	core/vision/structures/BallCandidate.h	/^  Position relPosition;$/;"	m	struct:BallCandidate
relPosition	core/vision/structures/GoalPostCandidate.h	/^  Position relPosition;     \/\/ relative position in world coordinates (calculated from camera matrix's getWorldPosition())$/;"	m	struct:GoalPostCandidate
relPosition	core/vision/structures/RobotCandidate.h	/^  Position relPosition;$/;"	m	struct:RobotCandidate
relTorso	core/vision/structures/RobotCandidate.h	/^  Position relTorso, relFeet;$/;"	m	struct:RobotCandidate
relVel	core/common/WorldObject.h	/^  Vector2D relVel; \/\/\/< The relative velocity between the robot and this object.$/;"	m	class:WorldObject
relWalkVel	build/include/tool/simulation/SimulatedPlayer.h	/^  Pose2D relWalkVel;$/;"	m	class:SimulatedPlayer
relWalkVel	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  Pose2D relWalkVel;$/;"	m	class:SimulatedPlayer
rel_parts_	core/memory/BodyModelBlock.h	/^  Pose3D rel_parts_[BodyPart::NUM_PARTS];$/;"	m	struct:BodyModelBlock
relativeTo	core/math/Pose3D.h	/^  Pose3D relativeTo(const Pose3D& other)$/;"	f	class:Pose3D
relativeToGlobal	core/math/Geometry.cpp	/^LineSegment LineSegment::relativeToGlobal(Point2D origin, AngRad ang) {$/;"	f	class:LineSegment
relativeToGlobal	core/math/Geometry.cpp	/^Point2D Point2D::relativeToGlobal( Point2D origin, AngRad ang )$/;"	f	class:Point2D
relativeToGlobal	core/math/Pose2D.h	/^  Pose2D relativeToGlobal(const Pose2D &old_origin) const{$/;"	f	class:Pose2D
relativeToGlobal	core/math/Pose3D.h	/^  Pose3D relativeToGlobal(const Pose2D &origin){$/;"	f	class:Pose3D
relativeToGlobal	core/math/Pose3D.h	/^  Pose3D relativeToGlobal(const Pose3D &origin){$/;"	f	class:Pose3D
relativeToGlobal	core/math/Vector2.h	/^  Vector2<V> relativeToGlobal(Vector2<V> old_origin, float old_rot){$/;"	f	class:Vector2
relativeToGlobal	core/python/geometry.py	/^  def relativeToGlobal(self, origin, ang):$/;"	m	class:Point2D
relclserror	lib/alglib/dataanalysis.h	/^    double &relclserror;$/;"	m	class:alglib::dfreport
relclserror	lib/alglib/dataanalysis.h	/^    double &relclserror;$/;"	m	class:alglib::mlpcvreport
relclserror	lib/alglib/dataanalysis.h	/^    double relclserror;$/;"	m	struct:alglib_impl::__anon38
relclserror	lib/alglib/dataanalysis.h	/^    double relclserror;$/;"	m	struct:alglib_impl::__anon40
relclserror	lib/alglib/dataanalysis.h	/^    double relclserror;$/;"	m	struct:alglib_impl::__anon49
reload	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::reload() {$/;"	f	class:KeyframeWidget
reload	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::reload() {$/;"	f	class:KeyframeWidget
reloadLocalConfig	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::reloadLocalConfig() {$/;"	f	class:TeamConfigWindow
reloadLocalConfig	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::reloadLocalConfig() {$/;"	f	class:TeamConfigWindow
reload_	build/include/tool/UTMainWnd.cpp	/^bool UTMainWnd::reload_ = false;$/;"	m	class:UTMainWnd	file:
reload_	build/include/tool/UTMainWnd.h	/^  static bool reload_;$/;"	m	class:UTMainWnd
reload_	tools/UTNaoTool/UTMainWnd.cpp	/^bool UTMainWnd::reload_ = false;$/;"	m	class:UTMainWnd	file:
reload_	tools/UTNaoTool/UTMainWnd.h	/^  static bool reload_;$/;"	m	class:UTMainWnd
remapCenterPoints	build/include/tool/annotations/Annotation.cpp	/^void Annotation::remapCenterPoints(int offset) {$/;"	f	class:Annotation
remapCenterPoints	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::remapCenterPoints(int offset) {$/;"	f	class:Annotation
remarkupvals	lib/lua/src/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
remoteRestartInterpreter	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::remoteRestartInterpreter() {$/;"	f	class:UTMainWnd
remoteRestartInterpreter	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::remoteRestartInterpreter() {$/;"	f	class:UTMainWnd
removeCriticalPoints	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::removeCriticalPoints(Color query, float percentage) {$/;"	f	class:AnnotationAnalyzer
removeCriticalPoints	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::removeCriticalPoints(Color query, float percentage) {$/;"	f	class:AnnotationAnalyzer
removeExts	install/install_naoqi	/^def removeExts(filename,num=2):$/;"	f
removeFile	bin/copy_robot	/^def removeFile(filename):$/;"	f
removeFile	build/copy_robot	/^def removeFile(filename):$/;"	f
removeFirst	core/common/RingBuffer.h	/^    void removeFirst () $/;"	f	class:RingBuffer
removeLogs	build/include/tool/FilesWindow.cpp	/^void FilesWindow::removeLogs(){$/;"	f	class:FilesWindow
removeLogs	build/include/tool/ProcessExecutor.cpp	/^void PE::removeLogs(QString ip, PE::Callback callback) {$/;"	f	class:PE
removeLogs	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::removeLogs(){$/;"	f	class:FilesWindow
removeLogs	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::removeLogs(QString ip, PE::Callback callback) {$/;"	f	class:PE
removeSelection	build/include/tool/annotations/Annotation.cpp	/^void Annotation::removeSelection(Selection* selection){$/;"	f	class:Annotation
removeSelection	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::removeSelection(Selection* selection){$/;"	f	class:Annotation
removeShot	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::removeShot(QListWidgetItem* item) {$/;"	f	class:LogEditorWindow
removeShot	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::removeShot(QListWidgetItem* item) {$/;"	f	class:LogEditorWindow
removeSplinePoint	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::removeSplinePoint() {$/;"	f	class:MotionGLWidget
removeSplinePoint	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::removeSplinePoint() {$/;"	f	class:MotionGLWidget
removeTempDir	install/common.py	/^def removeTempDir(d):$/;"	f
removeTempDir	install/copy_wpa.py	/^def removeTempDir(d):$/;"	f
removeTempDir	install/fix_autoload.py	/^from setup_robotv4 import runRemoteCommand, ask, makeTempDir, removeTempDir, copyFile$/;"	i
remove_tests	install/install_python	/^remove_tests() {$/;"	f
removeentry	lib/lua/src/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removes	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
removevalues	lib/lua/src/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	lib/lua/src/lparser.c	/^static void removevars (LexState *ls, int tolevel) {$/;"	f	file:
reopenLog	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::reopenLog() {$/;"	f	class:UTMainWnd
reopenLog	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::reopenLog() {$/;"	f	class:UTMainWnd
repair	tools/behaviorSim/cma.py	/^    def repair(self, x, bounds=None, copy=False, copy_always=False):$/;"	m	class:BoundPenalty
repair_genotype	tools/behaviorSim/cma.py	/^    def repair_genotype(self, x):$/;"	m	class:CMAEvolutionStrategy
repavgerror	lib/alglib/interpolation.h	/^    double repavgerror;$/;"	m	struct:alglib_impl::__anon63
repavgrelerror	lib/alglib/interpolation.h	/^    double repavgrelerror;$/;"	m	struct:alglib_impl::__anon63
repdebugdx	lib/alglib/optimization.h	/^    double repdebugdx;$/;"	m	struct:alglib_impl::__anon79
repdebugeqerr	lib/alglib/optimization.h	/^    double repdebugeqerr;$/;"	m	struct:alglib_impl::__anon79
repdebugff	lib/alglib/optimization.h	/^    double repdebugff;$/;"	m	struct:alglib_impl::__anon79
repdebugfs	lib/alglib/optimization.h	/^    double repdebugfs;$/;"	m	struct:alglib_impl::__anon79
repeatstat	lib/lua/src/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
repinneriterationscount	lib/alglib/optimization.h	/^    ae_int_t repinneriterationscount;$/;"	m	struct:alglib_impl::__anon71
repinneriterationscount	lib/alglib/optimization.h	/^    ae_int_t repinneriterationscount;$/;"	m	struct:alglib_impl::__anon79
repiterationscount	lib/alglib/interpolation.h	/^    ae_int_t repiterationscount;$/;"	m	struct:alglib_impl::__anon63
repiterationscount	lib/alglib/optimization.h	/^    ae_int_t repiterationscount;$/;"	m	struct:alglib_impl::__anon69
repiterationscount	lib/alglib/optimization.h	/^    ae_int_t repiterationscount;$/;"	m	struct:alglib_impl::__anon73
repiterationscount	lib/alglib/optimization.h	/^    ae_int_t repiterationscount;$/;"	m	struct:alglib_impl::__anon75
repiterationscount	lib/alglib/optimization.h	/^    ae_int_t repiterationscount;$/;"	m	struct:alglib_impl::__anon77
repiterationscount	lib/alglib/solvers.h	/^    ae_int_t repiterationscount;$/;"	m	struct:alglib_impl::__anon83
repmaxerror	lib/alglib/interpolation.h	/^    double repmaxerror;$/;"	m	struct:alglib_impl::__anon63
repncholesky	lib/alglib/optimization.h	/^    ae_int_t repncholesky;$/;"	m	struct:alglib_impl::__anon71
repncholesky	lib/alglib/optimization.h	/^    ae_int_t repncholesky;$/;"	m	struct:alglib_impl::__anon73
repnfev	lib/alglib/diffequations.h	/^    ae_int_t repnfev;$/;"	m	struct:alglib_impl::__anon51
repnfev	lib/alglib/optimization.h	/^    ae_int_t repnfev;$/;"	m	struct:alglib_impl::__anon69
repnfev	lib/alglib/optimization.h	/^    ae_int_t repnfev;$/;"	m	struct:alglib_impl::__anon75
repnfev	lib/alglib/optimization.h	/^    ae_int_t repnfev;$/;"	m	struct:alglib_impl::__anon77
repnfev	lib/alglib/optimization.h	/^    ae_int_t repnfev;$/;"	m	struct:alglib_impl::__anon79
repnfunc	lib/alglib/optimization.h	/^    ae_int_t repnfunc;$/;"	m	struct:alglib_impl::__anon73
repnfunc	lib/alglib/solvers.h	/^    ae_int_t repnfunc;$/;"	m	struct:alglib_impl::__anon83
repngrad	lib/alglib/optimization.h	/^    ae_int_t repngrad;$/;"	m	struct:alglib_impl::__anon73
repnhess	lib/alglib/optimization.h	/^    ae_int_t repnhess;$/;"	m	struct:alglib_impl::__anon73
repnjac	lib/alglib/optimization.h	/^    ae_int_t repnjac;$/;"	m	struct:alglib_impl::__anon73
repnjac	lib/alglib/solvers.h	/^    ae_int_t repnjac;$/;"	m	struct:alglib_impl::__anon83
repnmv	lib/alglib/optimization.h	/^    ae_int_t repnmv;$/;"	m	struct:alglib_impl::__anon71
report	lib/lua/src/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
reported_head_moving	core/memory/RobotVisionBlock.h	/^  double reported_head_moving;$/;"	m	struct:RobotVisionBlock
reported_head_stop_time	core/memory/RobotVisionBlock.h	/^  double reported_head_stop_time;$/;"	m	struct:RobotVisionBlock
repouteriterationscount	lib/alglib/optimization.h	/^    ae_int_t repouteriterationscount;$/;"	m	struct:alglib_impl::__anon71
repouteriterationscount	lib/alglib/optimization.h	/^    ae_int_t repouteriterationscount;$/;"	m	struct:alglib_impl::__anon79
reprmserror	lib/alglib/interpolation.h	/^    double reprmserror;$/;"	m	struct:alglib_impl::__anon63
repterminationtype	lib/alglib/diffequations.h	/^    ae_int_t repterminationtype;$/;"	m	struct:alglib_impl::__anon51
repterminationtype	lib/alglib/interpolation.h	/^    ae_int_t repterminationtype;$/;"	m	struct:alglib_impl::__anon63
repterminationtype	lib/alglib/optimization.h	/^    ae_int_t repterminationtype;$/;"	m	struct:alglib_impl::__anon69
repterminationtype	lib/alglib/optimization.h	/^    ae_int_t repterminationtype;$/;"	m	struct:alglib_impl::__anon71
repterminationtype	lib/alglib/optimization.h	/^    ae_int_t repterminationtype;$/;"	m	struct:alglib_impl::__anon73
repterminationtype	lib/alglib/optimization.h	/^    ae_int_t repterminationtype;$/;"	m	struct:alglib_impl::__anon75
repterminationtype	lib/alglib/optimization.h	/^    ae_int_t repterminationtype;$/;"	m	struct:alglib_impl::__anon77
repterminationtype	lib/alglib/optimization.h	/^    ae_int_t repterminationtype;$/;"	m	struct:alglib_impl::__anon79
repterminationtype	lib/alglib/solvers.h	/^    ae_int_t repterminationtype;$/;"	m	struct:alglib_impl::__anon83
repwrmserror	lib/alglib/interpolation.h	/^    double repwrmserror;$/;"	m	struct:alglib_impl::__anon63
requestStopLog	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::requestStopLog() {$/;"	f	class:LogSelectWindow
requestStopLog	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::requestStopLog() {$/;"	f	class:LogSelectWindow
requestedDive	core/motion/rswalk2014/DistributedGenerator.hpp	/^      ActionCommand::Body::ActionType requestedDive;$/;"	m	class:DistributedGenerator
required_blocks_	core/Module.h	/^  std::vector<std::string> required_blocks_;$/;"	m	class:Module
requiresMemoryBlock	core/Module.cpp	/^void Module::requiresMemoryBlock(const std::string &name) {$/;"	f	class:Module
requiresTargetPlayer	core/memory/BehaviorParamBlock.h	/^  bool requiresTargetPlayer;$/;"	m	struct:SetPlay
rerunCore	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::rerunCore() {$/;"	f	class:UTMainWnd
rerunCore	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::rerunCore() {$/;"	f	class:UTMainWnd
res	core/sensor/offline/genInertialFilterMatrices.py	/^  res = scipy.io.loadmat('results.mat')$/;"	v
res	data/goalfit.py	/^      res = readMeasured(f)$/;"	v
reserve	lib/yaml-cpp/src/ostream.cpp	/^	void ostream::reserve(unsigned size)$/;"	f	class:YAML::ostream
reserved	lib/lua/src/lobject.h	/^    lu_byte reserved;$/;"	m	struct:TString::__anon88
reserved	lib/zlib/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s
reset	build/include/tool/calibration/JointCalibrator.cpp	/^void JointCalibrator::reset() {$/;"	f	class:JointCalibrator
reset	core/common/ExponentialFilter.h	/^  void reset(float initialValue = 0) {$/;"	f	class:ExponentialFilter
reset	core/common/PIDController.cpp	/^void PIDController::reset() {$/;"	f	class:PIDController
reset	core/common/WorldObject.cpp	/^void WorldObject::reset(){$/;"	f	class:WorldObject
reset	core/imageCapture/DummyCamera.h	/^  void reset() {}$/;"	f	class:DummyCamera
reset	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::reset() {$/;"	f	class:NaoCamera
reset	core/memory/DelayedLocalizationBlock.h	/^  void reset(unsigned int frameId) {$/;"	f	struct:DelayedLocalizationBlock
reset	core/memory/OdometryBlock.h	/^  void reset() {$/;"	f	struct:OdometryBlock
reset	core/memory/SensorCalibrationBlock.h	/^  void reset() {$/;"	f	struct:SensorCalibrationBlock
reset	core/memory/StreamBuffer.cpp	/^void StreamBuffer::reset() {$/;"	f	class:StreamBuffer
reset	core/memory/WorldObjectBlock.h	/^  void reset() {$/;"	f	struct:WorldObjectBlock
reset	core/motion/rswalk2014/ActionGenerator.cpp	/^void ActionGenerator::reset() {$/;"	f	class:ActionGenerator
reset	core/motion/rswalk2014/ClippedGenerator.cpp	/^void ClippedGenerator::reset() {$/;"	f	class:ClippedGenerator
reset	core/motion/rswalk2014/DeadGenerator.cpp	/^void DeadGenerator::reset() {$/;"	f	class:DeadGenerator
reset	core/motion/rswalk2014/DistributedGenerator.cpp	/^void DistributedGenerator::reset() {$/;"	f	class:DistributedGenerator
reset	core/motion/rswalk2014/HeadGenerator.cpp	/^void HeadGenerator::reset() {$/;"	f	class:HeadGenerator
reset	core/motion/rswalk2014/NullGenerator.cpp	/^void NullGenerator::reset() {}$/;"	f	class:NullGenerator
reset	core/motion/rswalk2014/RSWalkModule2014.h	/^	double reset = 10.0;$/;"	m	class:RSWalkModule2014
reset	core/motion/rswalk2014/RefPickupGenerator.cpp	/^void RefPickupGenerator::reset() {$/;"	f	class:RefPickupGenerator
reset	core/motion/rswalk2014/StandGenerator.cpp	/^void StandGenerator::reset() {$/;"	f	class:StandGenerator
reset	core/motion/rswalk2014/Walk2014Generator.cpp	/^void Walk2014Generator:: reset() {$/;"	f	class:Walk2014Generator
reset	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void WalkEnginePreProcessor::DribbleEngine::reset() {$/;"	f	class:WalkEnginePreProcessor::DribbleEngine
reset	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void WalkEnginePreProcessor::LineUpEngine::reset() {$/;"	f	class:WalkEnginePreProcessor::LineUpEngine
reset	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void WalkEnginePreProcessor::reset() {$/;"	f	class:WalkEnginePreProcessor
reset	core/python/UTdebug.py	/^  def reset(self):$/;"	m	class:Timer
reset	core/python/pose.py	/^  def reset(self):$/;"	m	class:Stand
reset	core/python/pose.py	/^  def reset(self):$/;"	m	class:StandStraight
reset	core/python/pose.py	/^  def reset(self):$/;"	m	class:ToPose
reset	core/python/primary_bvr.py	/^  def reset(self):$/;"	m	class:ManualControl
reset	core/python/state_machine.py	/^  def reset(self):$/;"	m	class:Event
reset	core/python/state_machine.py	/^  def reset(self):$/;"	m	class:MachineNode
reset	core/python/state_machine.py	/^  def reset(self):$/;"	m	class:Node
reset	core/python/state_machine.py	/^  def reset(self):$/;"	m	class:StateMachine
reset	core/python/state_machine.py	/^  def reset(self):$/;"	m	class:TaskNode
reset	core/python/task.py	/^  def reset(self):$/;"	m	class:BaseTask
reset	core/python/task.py	/^  def reset(self):$/;"	m	class:MultiTask
reset	core/python/util.py	/^  def reset(self):$/;"	m	class:Timer
reset	core/sensor/ButtonModule.h	/^    void reset() {$/;"	f	struct:ButtonModule::ButtonInfo
reset	interfaces/sim_spark/Random.h	/^   void reset( long seed )   \/\/ reset the seed explicitly$/;"	f	class:Random
reset	interfaces/sim_spark/Random.h	/^   void reset( void )   \/\/ reset seed from current process id$/;"	f	class:Random
reset	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^void JointCalibrator::reset() {$/;"	f	class:JointCalibrator
reset2bits	lib/lua/src/lgc.h	/^#define reset2bits(/;"	d
resetBall	build/include/tool/simulation/GoalieSimulation.cpp	/^void GoalieSimulation::resetBall() {$/;"	f	class:GoalieSimulation
resetBall	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^void GoalieSimulation::resetBall() {$/;"	f	class:GoalieSimulation
resetBottomCamera	build/include/tool/FilesWindow.cpp	/^void FilesWindow::resetBottomCamera() {$/;"	f	class:FilesWindow
resetBottomCamera	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::resetBottomCamera() {$/;"	f	class:FilesWindow
resetCalibration	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::resetCalibration() {$/;"	f	class:ExtrinsicCalibrationWidget
resetCalibration	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::resetCalibration() {$/;"	f	class:ExtrinsicCalibrationWidget
resetCollection	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::resetCollection() {$/;"	f	class:IntrinsicCalibrationWidget
resetCollection	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::resetCollection() {$/;"	f	class:IntrinsicCalibrationWidget
resetCounters	build/include/tool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::resetCounters(){$/;"	f	class:SimulatedPlayer
resetCounters	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::resetCounters(){$/;"	f	class:SimulatedPlayer
resetFilter	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^void CKF::resetFilter(){$/;"	f	class:CKF
resetFrames	core/memory/WorldObjectBlock.h	/^  void resetFrames() {$/;"	f	struct:WorldObjectBlock
resetParameters	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::resetParameters(){$/;"	f	class:ExtrinsicCalibrationWidget
resetParameters	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::resetParameters(){$/;"	f	class:ExtrinsicCalibrationWidget
resetText	build/include/tool/AnnotationWidget.h	/^        void resetText(){$/;"	f	class:AnnotationListWidgetItem
resetText	build/include/tool/AnnotationWidget.h	/^        void resetText(){$/;"	f	class:SelectionListWidgetItem
resetText	tools/UTNaoTool/AnnotationWidget.h	/^        void resetText(){$/;"	f	class:AnnotationListWidgetItem
resetText	tools/UTNaoTool/AnnotationWidget.h	/^        void resetText(){$/;"	f	class:SelectionListWidgetItem
resetTime	core/python/task.py	/^  def resetTime(self):$/;"	m	class:BaseTask
resetTopCamera	build/include/tool/FilesWindow.cpp	/^void FilesWindow::resetTopCamera() {$/;"	f	class:FilesWindow
resetTopCamera	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::resetTopCamera() {$/;"	f	class:FilesWindow
resetWalkInfo	build/include/tool/simulation/RobotMovementSimulator.cpp	/^void RobotMovementSimulator::resetWalkInfo() {$/;"	f	class:RobotMovementSimulator
resetWalkInfo	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^void RobotMovementSimulator::resetWalkInfo() {$/;"	f	class:RobotMovementSimulator
reset_bottom_camera_	core/memory/CameraBlock.h	/^  bool reset_bottom_camera_;$/;"	m	struct:CameraBlock
reset_top_camera_	core/memory/CameraBlock.h	/^  bool reset_top_camera_;$/;"	m	struct:CameraBlock
resetbit	lib/lua/src/lgc.h	/^#define resetbit(/;"	d
resetbits	lib/lua/src/lgc.h	/^#define resetbits(/;"	d
resethookcount	lib/lua/src/ldebug.h	/^#define resethookcount(/;"	d
resetstack	lib/lua/src/ldo.c	/^static void resetstack (lua_State *L, int status) {$/;"	f	file:
resident	core/python/UTdebug.py	/^def resident(since=0.0):$/;"	f
resize	core/memory/StreamBuffer.cpp	/^void StreamBuffer::resize(unsigned int n) {$/;"	f	class:StreamBuffer
resize	lib/lua/src/ltable.c	/^static void resize (lua_State *L, Table *t, int nasize, int nhsize) {$/;"	f	file:
restart	build/include/tool/WorldWindow.cpp	/^void WorldWindow::restart() {$/;"	f	class:WorldWindow
restart	build/include/tool/WorldWindow.h	/^    void restart(Log*) { restart(); }$/;"	f	class:WorldWindow
restart	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::restart() {$/;"	f	class:BehaviorSimulation
restart	core/common/Profiling.cpp	/^void Timer::restart() {$/;"	f	class:Timer
restart	core/motion/rswalk2014/utils/Timer.hpp	/^      void  restart() {$/;"	f	class:Timer
restart	core/python/PythonModule.cpp	/^void PythonModule::restart() {$/;"	f	class:PythonModule
restart	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::restart() {$/;"	f	class:WorldWindow
restart	tools/UTNaoTool/WorldWindow.h	/^    void restart(Log*) { restart(); }$/;"	f	class:WorldWindow
restart	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::restart() {$/;"	f	class:BehaviorSimulation
restartInterpreter	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::restartInterpreter() {$/;"	f	class:TeamConfigWindow
restartInterpreter	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::restartInterpreter() {$/;"	f	class:TeamConfigWindow
restartNaoQi	build/include/tool/FilesWindow.cpp	/^void FilesWindow::restartNaoQi() {$/;"	f	class:FilesWindow
restartNaoQi	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::restartNaoQi() {$/;"	f	class:FilesWindow
restartNaoqi	build/include/tool/ProcessExecutor.cpp	/^void PE::restartNaoqi(QString ip) {$/;"	f	class:PE
restartNaoqi	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::restartNaoqi(QString ip) {$/;"	f	class:PE
restartSimulationInterpreter	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::restartSimulationInterpreter(){$/;"	f	class:BehaviorSimulation
restartSimulationInterpreter	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::restartSimulationInterpreter(){$/;"	f	class:BehaviorSimulation
restartVision	interfaces/shared_motion/main.cpp	/^void restartVision(int argc, char* argv[]) {$/;"	f
restartWireless	data/scripts/wireless-monitor.py	/^def restartWireless():$/;"	f
restart_requested_	core/InterpreterModule.h	/^    bool restart_requested_;$/;"	m	class:InterpreterModule
restore	lib/yaml-cpp/src/setting.h	/^		void restore() {$/;"	f	class:YAML::SettingChanges
restore	lib/yaml-cpp/src/setting.h	/^		void restore(const Setting<T>& oldSetting) {$/;"	f	class:YAML::Setting
restore_stack_limit	lib/lua/src/ldo.c	/^static void restore_stack_limit (lua_State *L) {$/;"	f	file:
restoreci	lib/lua/src/ldo.h	/^#define restoreci(/;"	d
restorestack	lib/lua/src/ldo.h	/^#define restorestack(/;"	d
result	interfaces/sim_spark/cencode.h	/^	char result;$/;"	m	struct:__anon19
result	tools/behaviorSim/cma.py	/^    def result(self): $/;"	m	class:OOOptimizer
result	tools/behaviorSim/cma.py	/^    def result(self):$/;"	m	class:CMAEvolutionStrategy
resume	lib/lua/src/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	lib/lua/src/ldo.c	/^static int resume_error (lua_State *L, const char *msg) {$/;"	f	file:
ret	interfaces/nao/tests/naointerfaceTest.py	/^  ret = naointerface_Proxy.dummyFunction( "hello, world", inParam )$/;"	v
retstat	lib/lua/src/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
reversed	core/memory/BehaviorBlock.h	/^  bool reversed;$/;"	m	struct:SetPlayInfo
reversible	core/memory/BehaviorParamBlock.h	/^  bool reversible;$/;"	m	struct:SetPlay
revert	core/opponents/UKF4.cpp	/^void UKF4::revert()$/;"	f	class:UKF4
revertDimensions	core/common/RobotCalibration.cpp	/^void RobotCalibration::revertDimensions(float* dimensions) {$/;"	f	class:RobotCalibration
revertJoints	core/common/RobotCalibration.cpp	/^void RobotCalibration::revertJoints(float* joints) {$/;"	f	class:RobotCalibration
revertSensors	core/common/RobotCalibration.cpp	/^void RobotCalibration::revertSensors(float* sensors) {$/;"	f	class:RobotCalibration
rgb	core/motion/rswalk2014/types/ActionCommand.hpp	/^      rgb(bool r = false, bool g = false, bool b = false) : red(r),$/;"	f	struct:ActionCommand::rgb
rgb	core/motion/rswalk2014/types/ActionCommand.hpp	/^   struct rgb {$/;"	s	namespace:ActionCommand
rgb2hsv	vision_testing/src/vision_testing.cpp	/^HSV rgb2hsv(RGB in)$/;"	f
rgbImage	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      RgbImage rgbImage;$/;"	m	class:color_classifier::ClassificationWindow
rgbImage2hsv	vision_testing/src/vision_testing.cpp	/^void rgbImage2hsv(unsigned char* img_rgb, unsigned char* img_hsv, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
rgbToYuv444	core/common/ColorConversion.h	/^  inline Yuv444 rgbToYuv444 (const Rgb& rgb) {$/;"	f	namespace:color
rgbToYuv444	core/common/ColorConversion.h	/^  inline Yuv444 rgbToYuv444 (int r, int g, int b) {$/;"	f	namespace:color
rgbToYuv444	interfaces/sim_spark/Parser.cpp	/^inline void rgbToYuv444 (int r, int g, int b, int &y, int &u, int &v) {$/;"	f
rgbtoToYuv422	core/common/ColorConversion.h	/^  inline Yuv422 rgbtoToYuv422 (const Rgb& rgb1, const Rgb& rgb2) {$/;"	f	namespace:color
rho	lib/alglib/optimization.h	/^    ae_vector rho;$/;"	m	struct:alglib_impl::__anon69
ridge	tools/behaviorSim/cma.py	/^    def ridge(self, x, expo=2):$/;"	m	class:FitnessFunctions
ridgecircle	tools/behaviorSim/cma.py	/^    def ridgecircle(self, x, expo=0.5):$/;"	m	class:FitnessFunctions
right	core/python/behaviors/win.py	/^  right=3$/;"	v	class:EnemyGoalStates
right	core/vision/structures/HorizonLine.h	/^  Coordinates left, right;$/;"	m	struct:HorizonLine
right	lib/lua/src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon94	file:
right	tools/testStep.py	/^right = []$/;"	v
right	tools/testStep.py	/^right = [step_size * y for y in right]$/;"	v
right	tools/testStepSide.py	/^right = []$/;"	v
rightBearing	core/memory/BehaviorBlock.h	/^  float rightBearing;$/;"	m	struct:KickEvaluation
rightEar	core/motion/rswalk2014/types/ActionCommand.hpp	/^      uint16_t rightEar; \/\/ Number of right ear segments lit [10-bit field]$/;"	m	struct:ActionCommand::LED
rightEdgeWidth	core/vision/structures/GoalPostCandidate.h	/^  int rightEdgeWidth;   \/\/ Width of the edge in pixels$/;"	m	struct:GoalPostCandidate
rightEye	core/motion/rswalk2014/types/ActionCommand.hpp	/^      rgb rightEye;    \/\/ Colour of right eye (default: white)$/;"	m	struct:ActionCommand::LED
rightFoot	core/lights/LEDModule.cpp	/^void LEDModule::rightFoot(float r, float g, float b) {$/;"	f	class:LEDModule
rightFoot	core/motion/rswalk2014/types/ActionCommand.hpp	/^      rgb rightFoot;   \/\/ Colour of right foot (default: off)$/;"	m	struct:ActionCommand::LED
rightKickHeading	core/memory/BehaviorBlock.h	/^  float leftKickHeading, rightKickHeading;$/;"	m	struct:BehaviorBlock
rightPoint	core/memory/BehaviorBlock.h	/^  Point2D rightPoint;$/;"	m	struct:KickEvaluation
rightPost	core/vision/structures/GoalCandidate.h	/^  GoalPostCandidate rightPost;$/;"	m	struct:GoalCandidate
rightValid	core/memory/BehaviorBlock.h	/^  int rightValid;$/;"	m	struct:KickEvaluation
right_	core/math/Polygon.h	/^        int left_, right_, top_, bottom_;$/;"	m	class:Polygon
right_ankle	core/common/RobotInfo.h	/^    right_ankle,$/;"	e	enum:BodyFrame::Part
right_ankle	core/common/RobotInfo.h	/^    right_ankle,$/;"	e	enum:BodyPart::Part
right_back	core/motion/rswalk2014/RSWalkModule2014.cpp	/^    right_back,$/;"	e	enum:FootSensorRegion	file:
right_bicep	core/common/RobotInfo.h	/^    right_bicep,$/;"	e	enum:BodyPart::Part
right_bottom_foot	core/common/RobotInfo.h	/^    right_bottom_foot,$/;"	e	enum:BodyPart::Part
right_buf_	core/sonar/SonarModule.h	/^  RingBufferWithSum<float, 5> right_buf_;$/;"	m	class:SonarModule
right_bumper_	core/sensor/ButtonModule.h	/^  ButtonInfo right_bumper_;$/;"	m	class:ButtonModule
right_distance_	core/memory/ProcessedSonarBlock.h	/^  float right_distance_;$/;"	m	struct:ProcessedSonarBlock
right_elbow	core/common/RobotInfo.h	/^    right_elbow,$/;"	e	enum:BodyFrame::Part
right_elbow	core/common/RobotInfo.h	/^    right_elbow,$/;"	e	enum:BodyPart::Part
right_foot	core/common/RobotInfo.h	/^    right_foot,$/;"	e	enum:BodyFrame::Part
right_foot	core/common/RobotInfo.h	/^    right_foot,$/;"	e	enum:BodyPart::Part
right_foot_body_tilt_roll_	core/memory/BodyModelBlock.h	/^  TiltRoll right_foot_body_tilt_roll_;$/;"	m	struct:BodyModelBlock
right_foot_front_left	core/common/RobotInfo.h	/^    right_foot_front_left,$/;"	e	enum:BodyFrame::Part
right_foot_front_right	core/common/RobotInfo.h	/^    right_foot_front_right,$/;"	e	enum:BodyFrame::Part
right_foot_rear_left	core/common/RobotInfo.h	/^    right_foot_rear_left,$/;"	e	enum:BodyFrame::Part
right_foot_rear_right	core/common/RobotInfo.h	/^    right_foot_rear_right,$/;"	e	enum:BodyFrame::Part
right_foot_zmp_offset_	core/motion/WalkEngineParameters.h	/^  Vector2<float> right_foot_zmp_offset_;$/;"	m	struct:WalkEngineParameters
right_forearm	core/common/RobotInfo.h	/^    right_forearm,$/;"	e	enum:BodyPart::Part
right_front	core/motion/rswalk2014/RSWalkModule2014.cpp	/^    right_front,$/;"	e	enum:FootSensorRegion	file:
right_hand	core/common/RobotInfo.h	/^    right_hand,$/;"	e	enum:BodyPart::Part
right_hip	core/common/RobotInfo.h	/^    right_hip,$/;"	e	enum:BodyFrame::Part
right_hip	core/common/RobotInfo.h	/^    right_hip,$/;"	e	enum:BodyPart::Part
right_knee	core/common/RobotInfo.h	/^    right_knee,$/;"	e	enum:BodyFrame::Part
right_left	core/motion/rswalk2014/RSWalkModule2014.cpp	/^    right_left,$/;"	e	enum:FootSensorRegion	file:
right_pelvis	core/common/RobotInfo.h	/^    right_pelvis,$/;"	e	enum:BodyPart::Part
right_right	core/motion/rswalk2014/RSWalkModule2014.cpp	/^    right_right,$/;"	e	enum:FootSensorRegion	file:
right_shoulder	core/common/RobotInfo.h	/^    right_shoulder,$/;"	e	enum:BodyFrame::Part
right_shoulder	core/common/RobotInfo.h	/^    right_shoulder,$/;"	e	enum:BodyPart::Part
right_thigh	core/common/RobotInfo.h	/^    right_thigh,$/;"	e	enum:BodyPart::Part
right_tibia	core/common/RobotInfo.h	/^    right_tibia,$/;"	e	enum:BodyPart::Part
right_wrist	core/common/RobotInfo.h	/^    right_wrist,$/;"	e	enum:BodyFrame::Part
rightpart	lib/alglib/solvers.h	/^    ae_vector rightpart;$/;"	m	struct:alglib_impl::__anon83
rinf	lib/alglib/linalg.h	/^    double &rinf;$/;"	m	class:alglib::matinvreport
rinf	lib/alglib/linalg.h	/^    double rinf;$/;"	m	struct:alglib_impl::__anon67
rinf	lib/alglib/solvers.h	/^    double &rinf;$/;"	m	class:alglib::densesolverreport
rinf	lib/alglib/solvers.h	/^    double rinf;$/;"	m	struct:alglib_impl::__anon81
rk	lib/alglib/linalg.h	/^    ae_vector rk;$/;"	m	struct:alglib_impl::__anon68
rk1	lib/alglib/linalg.h	/^    ae_vector rk1;$/;"	m	struct:alglib_impl::__anon68
rka	lib/alglib/diffequations.h	/^    ae_vector rka;$/;"	m	struct:alglib_impl::__anon51
rkb	lib/alglib/diffequations.h	/^    ae_matrix rkb;$/;"	m	struct:alglib_impl::__anon51
rkc	lib/alglib/diffequations.h	/^    ae_vector rkc;$/;"	m	struct:alglib_impl::__anon51
rkcs	lib/alglib/diffequations.h	/^    ae_vector rkcs;$/;"	m	struct:alglib_impl::__anon51
rkk	lib/alglib/diffequations.h	/^    ae_matrix rkk;$/;"	m	struct:alglib_impl::__anon51
rmatrixbd	lib/alglib/linalg.cpp	/^void rmatrixbd(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixbd	lib/alglib/linalg.cpp	/^void rmatrixbd(real_2d_array &a, const ae_int_t m, const ae_int_t n, real_1d_array &tauq, real_1d_array &taup)$/;"	f	namespace:alglib
rmatrixbdmultiplybyp	lib/alglib/linalg.cpp	/^void rmatrixbdmultiplybyp(\/* Real    *\/ ae_matrix* qp,$/;"	f	namespace:alglib_impl
rmatrixbdmultiplybyp	lib/alglib/linalg.cpp	/^void rmatrixbdmultiplybyp(const real_2d_array &qp, const ae_int_t m, const ae_int_t n, const real_1d_array &taup, real_2d_array &z, const ae_int_t zrows, const ae_int_t zcolumns, const bool fromtheright, const bool dotranspose)$/;"	f	namespace:alglib
rmatrixbdmultiplybyq	lib/alglib/linalg.cpp	/^void rmatrixbdmultiplybyq(\/* Real    *\/ ae_matrix* qp,$/;"	f	namespace:alglib_impl
rmatrixbdmultiplybyq	lib/alglib/linalg.cpp	/^void rmatrixbdmultiplybyq(const real_2d_array &qp, const ae_int_t m, const ae_int_t n, const real_1d_array &tauq, real_2d_array &z, const ae_int_t zrows, const ae_int_t zcolumns, const bool fromtheright, const bool dotranspose)$/;"	f	namespace:alglib
rmatrixbdsvd	lib/alglib/linalg.cpp	/^ae_bool rmatrixbdsvd(\/* Real    *\/ ae_vector* d,$/;"	f	namespace:alglib_impl
rmatrixbdsvd	lib/alglib/linalg.cpp	/^bool rmatrixbdsvd(real_1d_array &d, const real_1d_array &e, const ae_int_t n, const bool isupper, const bool isfractionalaccuracyrequired, real_2d_array &u, const ae_int_t nru, real_2d_array &c, const ae_int_t ncc, real_2d_array &vt, const ae_int_t ncvt)$/;"	f	namespace:alglib
rmatrixbdunpackdiagonals	lib/alglib/linalg.cpp	/^void rmatrixbdunpackdiagonals(\/* Real    *\/ ae_matrix* b,$/;"	f	namespace:alglib_impl
rmatrixbdunpackdiagonals	lib/alglib/linalg.cpp	/^void rmatrixbdunpackdiagonals(const real_2d_array &b, const ae_int_t m, const ae_int_t n, bool &isupper, real_1d_array &d, real_1d_array &e)$/;"	f	namespace:alglib
rmatrixbdunpackpt	lib/alglib/linalg.cpp	/^void rmatrixbdunpackpt(\/* Real    *\/ ae_matrix* qp,$/;"	f	namespace:alglib_impl
rmatrixbdunpackpt	lib/alglib/linalg.cpp	/^void rmatrixbdunpackpt(const real_2d_array &qp, const ae_int_t m, const ae_int_t n, const real_1d_array &taup, const ae_int_t ptrows, real_2d_array &pt)$/;"	f	namespace:alglib
rmatrixbdunpackq	lib/alglib/linalg.cpp	/^void rmatrixbdunpackq(\/* Real    *\/ ae_matrix* qp,$/;"	f	namespace:alglib_impl
rmatrixbdunpackq	lib/alglib/linalg.cpp	/^void rmatrixbdunpackq(const real_2d_array &qp, const ae_int_t m, const ae_int_t n, const real_1d_array &tauq, const ae_int_t qcolumns, real_2d_array &q)$/;"	f	namespace:alglib
rmatrixcopy	lib/alglib/linalg.cpp	/^void rmatrixcopy(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixcopy	lib/alglib/linalg.cpp	/^void rmatrixcopy(const ae_int_t m, const ae_int_t n, const real_2d_array &a, const ae_int_t ia, const ae_int_t ja, real_2d_array &b, const ae_int_t ib, const ae_int_t jb)$/;"	f	namespace:alglib
rmatrixdet	lib/alglib/linalg.cpp	/^double rmatrixdet(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixdet	lib/alglib/linalg.cpp	/^double rmatrixdet(const real_2d_array &a)$/;"	f	namespace:alglib
rmatrixdet	lib/alglib/linalg.cpp	/^double rmatrixdet(const real_2d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
rmatrixevd	lib/alglib/linalg.cpp	/^ae_bool rmatrixevd(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixevd	lib/alglib/linalg.cpp	/^bool rmatrixevd(const real_2d_array &a, const ae_int_t n, const ae_int_t vneeded, real_1d_array &wr, real_1d_array &wi, real_2d_array &vl, real_2d_array &vr)$/;"	f	namespace:alglib
rmatrixgemm	lib/alglib/linalg.cpp	/^void rmatrixgemm(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixgemm	lib/alglib/linalg.cpp	/^void rmatrixgemm(const ae_int_t m, const ae_int_t n, const ae_int_t k, const double alpha, const real_2d_array &a, const ae_int_t ia, const ae_int_t ja, const ae_int_t optypea, const real_2d_array &b, const ae_int_t ib, const ae_int_t jb, const ae_int_t optypeb, const double beta, real_2d_array &c, const ae_int_t ic, const ae_int_t jc)$/;"	f	namespace:alglib
rmatrixgemmf	lib/alglib/alglibinternal.cpp	/^ae_bool rmatrixgemmf(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixhessenberg	lib/alglib/linalg.cpp	/^void rmatrixhessenberg(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixhessenberg	lib/alglib/linalg.cpp	/^void rmatrixhessenberg(real_2d_array &a, const ae_int_t n, real_1d_array &tau)$/;"	f	namespace:alglib
rmatrixhessenbergunpackh	lib/alglib/linalg.cpp	/^void rmatrixhessenbergunpackh(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixhessenbergunpackh	lib/alglib/linalg.cpp	/^void rmatrixhessenbergunpackh(const real_2d_array &a, const ae_int_t n, real_2d_array &h)$/;"	f	namespace:alglib
rmatrixhessenbergunpackq	lib/alglib/linalg.cpp	/^void rmatrixhessenbergunpackq(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixhessenbergunpackq	lib/alglib/linalg.cpp	/^void rmatrixhessenbergunpackq(const real_2d_array &a, const ae_int_t n, const real_1d_array &tau, real_2d_array &q)$/;"	f	namespace:alglib
rmatrixinverse	lib/alglib/linalg.cpp	/^void rmatrixinverse(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixinverse	lib/alglib/linalg.cpp	/^void rmatrixinverse(real_2d_array &a, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
rmatrixinverse	lib/alglib/linalg.cpp	/^void rmatrixinverse(real_2d_array &a, const ae_int_t n, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
rmatrixinvupdatecolumn	lib/alglib/linalg.cpp	/^void rmatrixinvupdatecolumn(\/* Real    *\/ ae_matrix* inva,$/;"	f	namespace:alglib_impl
rmatrixinvupdatecolumn	lib/alglib/linalg.cpp	/^void rmatrixinvupdatecolumn(real_2d_array &inva, const ae_int_t n, const ae_int_t updcolumn, const real_1d_array &u)$/;"	f	namespace:alglib
rmatrixinvupdaterow	lib/alglib/linalg.cpp	/^void rmatrixinvupdaterow(\/* Real    *\/ ae_matrix* inva,$/;"	f	namespace:alglib_impl
rmatrixinvupdaterow	lib/alglib/linalg.cpp	/^void rmatrixinvupdaterow(real_2d_array &inva, const ae_int_t n, const ae_int_t updrow, const real_1d_array &v)$/;"	f	namespace:alglib
rmatrixinvupdatesimple	lib/alglib/linalg.cpp	/^void rmatrixinvupdatesimple(\/* Real    *\/ ae_matrix* inva,$/;"	f	namespace:alglib_impl
rmatrixinvupdatesimple	lib/alglib/linalg.cpp	/^void rmatrixinvupdatesimple(real_2d_array &inva, const ae_int_t n, const ae_int_t updrow, const ae_int_t updcolumn, const double updval)$/;"	f	namespace:alglib
rmatrixinvupdateuv	lib/alglib/linalg.cpp	/^void rmatrixinvupdateuv(\/* Real    *\/ ae_matrix* inva,$/;"	f	namespace:alglib_impl
rmatrixinvupdateuv	lib/alglib/linalg.cpp	/^void rmatrixinvupdateuv(real_2d_array &inva, const ae_int_t n, const real_1d_array &u, const real_1d_array &v)$/;"	f	namespace:alglib
rmatrixlefttrsm	lib/alglib/linalg.cpp	/^void rmatrixlefttrsm(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixlefttrsm	lib/alglib/linalg.cpp	/^void rmatrixlefttrsm(const ae_int_t m, const ae_int_t n, const real_2d_array &a, const ae_int_t i1, const ae_int_t j1, const bool isupper, const bool isunit, const ae_int_t optype, real_2d_array &x, const ae_int_t i2, const ae_int_t j2)$/;"	f	namespace:alglib
rmatrixlefttrsmf	lib/alglib/alglibinternal.cpp	/^ae_bool rmatrixlefttrsmf(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixlq	lib/alglib/linalg.cpp	/^void rmatrixlq(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixlq	lib/alglib/linalg.cpp	/^void rmatrixlq(real_2d_array &a, const ae_int_t m, const ae_int_t n, real_1d_array &tau)$/;"	f	namespace:alglib
rmatrixlqunpackl	lib/alglib/linalg.cpp	/^void rmatrixlqunpackl(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixlqunpackl	lib/alglib/linalg.cpp	/^void rmatrixlqunpackl(const real_2d_array &a, const ae_int_t m, const ae_int_t n, real_2d_array &l)$/;"	f	namespace:alglib
rmatrixlqunpackq	lib/alglib/linalg.cpp	/^void rmatrixlqunpackq(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixlqunpackq	lib/alglib/linalg.cpp	/^void rmatrixlqunpackq(const real_2d_array &a, const ae_int_t m, const ae_int_t n, const real_1d_array &tau, const ae_int_t qrows, real_2d_array &q)$/;"	f	namespace:alglib
rmatrixlu	lib/alglib/linalg.cpp	/^void rmatrixlu(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixlu	lib/alglib/linalg.cpp	/^void rmatrixlu(real_2d_array &a, const ae_int_t m, const ae_int_t n, integer_1d_array &pivots)$/;"	f	namespace:alglib
rmatrixludet	lib/alglib/linalg.cpp	/^double rmatrixludet(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixludet	lib/alglib/linalg.cpp	/^double rmatrixludet(const real_2d_array &a, const integer_1d_array &pivots)$/;"	f	namespace:alglib
rmatrixludet	lib/alglib/linalg.cpp	/^double rmatrixludet(const real_2d_array &a, const integer_1d_array &pivots, const ae_int_t n)$/;"	f	namespace:alglib
rmatrixluinverse	lib/alglib/linalg.cpp	/^void rmatrixluinverse(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixluinverse	lib/alglib/linalg.cpp	/^void rmatrixluinverse(real_2d_array &a, const integer_1d_array &pivots, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
rmatrixluinverse	lib/alglib/linalg.cpp	/^void rmatrixluinverse(real_2d_array &a, const integer_1d_array &pivots, const ae_int_t n, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
rmatrixlup	lib/alglib/linalg.cpp	/^void rmatrixlup(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixlurcond1	lib/alglib/linalg.cpp	/^double rmatrixlurcond1(\/* Real    *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
rmatrixlurcond1	lib/alglib/linalg.cpp	/^double rmatrixlurcond1(const real_2d_array &lua, const ae_int_t n)$/;"	f	namespace:alglib
rmatrixlurcondinf	lib/alglib/linalg.cpp	/^double rmatrixlurcondinf(\/* Real    *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
rmatrixlurcondinf	lib/alglib/linalg.cpp	/^double rmatrixlurcondinf(const real_2d_array &lua, const ae_int_t n)$/;"	f	namespace:alglib
rmatrixlusolve	lib/alglib/solvers.cpp	/^void rmatrixlusolve(\/* Real    *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
rmatrixlusolve	lib/alglib/solvers.cpp	/^void rmatrixlusolve(const real_2d_array &lua, const integer_1d_array &p, const ae_int_t n, const real_1d_array &b, ae_int_t &info, densesolverreport &rep, real_1d_array &x)$/;"	f	namespace:alglib
rmatrixlusolvem	lib/alglib/solvers.cpp	/^void rmatrixlusolvem(\/* Real    *\/ ae_matrix* lua,$/;"	f	namespace:alglib_impl
rmatrixlusolvem	lib/alglib/solvers.cpp	/^void rmatrixlusolvem(const real_2d_array &lua, const integer_1d_array &p, const ae_int_t n, const real_2d_array &b, const ae_int_t m, ae_int_t &info, densesolverreport &rep, real_2d_array &x)$/;"	f	namespace:alglib
rmatrixmixedsolve	lib/alglib/solvers.cpp	/^void rmatrixmixedsolve(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixmixedsolve	lib/alglib/solvers.cpp	/^void rmatrixmixedsolve(const real_2d_array &a, const real_2d_array &lua, const integer_1d_array &p, const ae_int_t n, const real_1d_array &b, ae_int_t &info, densesolverreport &rep, real_1d_array &x)$/;"	f	namespace:alglib
rmatrixmixedsolvem	lib/alglib/solvers.cpp	/^void rmatrixmixedsolvem(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixmixedsolvem	lib/alglib/solvers.cpp	/^void rmatrixmixedsolvem(const real_2d_array &a, const real_2d_array &lua, const integer_1d_array &p, const ae_int_t n, const real_2d_array &b, const ae_int_t m, ae_int_t &info, densesolverreport &rep, real_2d_array &x)$/;"	f	namespace:alglib
rmatrixmv	lib/alglib/linalg.cpp	/^void rmatrixmv(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixmv	lib/alglib/linalg.cpp	/^void rmatrixmv(const ae_int_t m, const ae_int_t n, const real_2d_array &a, const ae_int_t ia, const ae_int_t ja, const ae_int_t opa, const real_1d_array &x, const ae_int_t ix, real_1d_array &y, const ae_int_t iy)$/;"	f	namespace:alglib
rmatrixmvf	lib/alglib/alglibinternal.cpp	/^ae_bool rmatrixmvf(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixplu	lib/alglib/linalg.cpp	/^void rmatrixplu(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixqr	lib/alglib/linalg.cpp	/^void rmatrixqr(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixqr	lib/alglib/linalg.cpp	/^void rmatrixqr(real_2d_array &a, const ae_int_t m, const ae_int_t n, real_1d_array &tau)$/;"	f	namespace:alglib
rmatrixqrunpackq	lib/alglib/linalg.cpp	/^void rmatrixqrunpackq(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixqrunpackq	lib/alglib/linalg.cpp	/^void rmatrixqrunpackq(const real_2d_array &a, const ae_int_t m, const ae_int_t n, const real_1d_array &tau, const ae_int_t qcolumns, real_2d_array &q)$/;"	f	namespace:alglib
rmatrixqrunpackr	lib/alglib/linalg.cpp	/^void rmatrixqrunpackr(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixqrunpackr	lib/alglib/linalg.cpp	/^void rmatrixqrunpackr(const real_2d_array &a, const ae_int_t m, const ae_int_t n, real_2d_array &r)$/;"	f	namespace:alglib
rmatrixrank1	lib/alglib/linalg.cpp	/^void rmatrixrank1(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixrank1	lib/alglib/linalg.cpp	/^void rmatrixrank1(const ae_int_t m, const ae_int_t n, real_2d_array &a, const ae_int_t ia, const ae_int_t ja, real_1d_array &u, const ae_int_t iu, real_1d_array &v, const ae_int_t iv)$/;"	f	namespace:alglib
rmatrixrank1f	lib/alglib/alglibinternal.cpp	/^ae_bool rmatrixrank1f(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixrcond1	lib/alglib/linalg.cpp	/^double rmatrixrcond1(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixrcond1	lib/alglib/linalg.cpp	/^double rmatrixrcond1(const real_2d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
rmatrixrcondinf	lib/alglib/linalg.cpp	/^double rmatrixrcondinf(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixrcondinf	lib/alglib/linalg.cpp	/^double rmatrixrcondinf(const real_2d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
rmatrixrighttrsm	lib/alglib/linalg.cpp	/^void rmatrixrighttrsm(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixrighttrsm	lib/alglib/linalg.cpp	/^void rmatrixrighttrsm(const ae_int_t m, const ae_int_t n, const real_2d_array &a, const ae_int_t i1, const ae_int_t j1, const bool isupper, const bool isunit, const ae_int_t optype, real_2d_array &x, const ae_int_t i2, const ae_int_t j2)$/;"	f	namespace:alglib
rmatrixrighttrsmf	lib/alglib/alglibinternal.cpp	/^ae_bool rmatrixrighttrsmf(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixrndcond	lib/alglib/linalg.cpp	/^void rmatrixrndcond(ae_int_t n,$/;"	f	namespace:alglib_impl
rmatrixrndcond	lib/alglib/linalg.cpp	/^void rmatrixrndcond(const ae_int_t n, const double c, real_2d_array &a)$/;"	f	namespace:alglib
rmatrixrndorthogonal	lib/alglib/linalg.cpp	/^void rmatrixrndorthogonal(ae_int_t n,$/;"	f	namespace:alglib_impl
rmatrixrndorthogonal	lib/alglib/linalg.cpp	/^void rmatrixrndorthogonal(const ae_int_t n, real_2d_array &a)$/;"	f	namespace:alglib
rmatrixrndorthogonalfromtheleft	lib/alglib/linalg.cpp	/^void rmatrixrndorthogonalfromtheleft(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixrndorthogonalfromtheleft	lib/alglib/linalg.cpp	/^void rmatrixrndorthogonalfromtheleft(real_2d_array &a, const ae_int_t m, const ae_int_t n)$/;"	f	namespace:alglib
rmatrixrndorthogonalfromtheright	lib/alglib/linalg.cpp	/^void rmatrixrndorthogonalfromtheright(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixrndorthogonalfromtheright	lib/alglib/linalg.cpp	/^void rmatrixrndorthogonalfromtheright(real_2d_array &a, const ae_int_t m, const ae_int_t n)$/;"	f	namespace:alglib
rmatrixscaledtrsafesolve	lib/alglib/alglibinternal.cpp	/^ae_bool rmatrixscaledtrsafesolve(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixschur	lib/alglib/linalg.cpp	/^ae_bool rmatrixschur(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixschur	lib/alglib/linalg.cpp	/^bool rmatrixschur(real_2d_array &a, const ae_int_t n, real_2d_array &s)$/;"	f	namespace:alglib
rmatrixsetlengthatleast	lib/alglib/alglibinternal.cpp	/^void rmatrixsetlengthatleast(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
rmatrixsolve	lib/alglib/solvers.cpp	/^void rmatrixsolve(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixsolve	lib/alglib/solvers.cpp	/^void rmatrixsolve(const real_2d_array &a, const ae_int_t n, const real_1d_array &b, ae_int_t &info, densesolverreport &rep, real_1d_array &x)$/;"	f	namespace:alglib
rmatrixsolvels	lib/alglib/solvers.cpp	/^void rmatrixsolvels(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixsolvels	lib/alglib/solvers.cpp	/^void rmatrixsolvels(const real_2d_array &a, const ae_int_t nrows, const ae_int_t ncols, const real_1d_array &b, const double threshold, ae_int_t &info, densesolverlsreport &rep, real_1d_array &x)$/;"	f	namespace:alglib
rmatrixsolvem	lib/alglib/solvers.cpp	/^void rmatrixsolvem(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixsolvem	lib/alglib/solvers.cpp	/^void rmatrixsolvem(const real_2d_array &a, const ae_int_t n, const real_2d_array &b, const ae_int_t m, const bool rfs, ae_int_t &info, densesolverreport &rep, real_2d_array &x)$/;"	f	namespace:alglib
rmatrixsvd	lib/alglib/linalg.cpp	/^ae_bool rmatrixsvd(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixsvd	lib/alglib/linalg.cpp	/^bool rmatrixsvd(const real_2d_array &a, const ae_int_t m, const ae_int_t n, const ae_int_t uneeded, const ae_int_t vtneeded, const ae_int_t additionalmemory, real_1d_array &w, real_2d_array &u, real_2d_array &vt)$/;"	f	namespace:alglib
rmatrixsyrk	lib/alglib/linalg.cpp	/^void rmatrixsyrk(ae_int_t n,$/;"	f	namespace:alglib_impl
rmatrixsyrk	lib/alglib/linalg.cpp	/^void rmatrixsyrk(const ae_int_t n, const ae_int_t k, const double alpha, const real_2d_array &a, const ae_int_t ia, const ae_int_t ja, const ae_int_t optypea, const double beta, real_2d_array &c, const ae_int_t ic, const ae_int_t jc, const bool isupper)$/;"	f	namespace:alglib
rmatrixsyrkf	lib/alglib/alglibinternal.cpp	/^ae_bool rmatrixsyrkf(ae_int_t n,$/;"	f	namespace:alglib_impl
rmatrixtranspose	lib/alglib/linalg.cpp	/^void rmatrixtranspose(ae_int_t m,$/;"	f	namespace:alglib_impl
rmatrixtranspose	lib/alglib/linalg.cpp	/^void rmatrixtranspose(const ae_int_t m, const ae_int_t n, const real_2d_array &a, const ae_int_t ia, const ae_int_t ja, real_2d_array &b, const ae_int_t ib, const ae_int_t jb)$/;"	f	namespace:alglib
rmatrixtrinverse	lib/alglib/linalg.cpp	/^void rmatrixtrinverse(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixtrinverse	lib/alglib/linalg.cpp	/^void rmatrixtrinverse(real_2d_array &a, const ae_int_t n, const bool isupper, const bool isunit, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
rmatrixtrinverse	lib/alglib/linalg.cpp	/^void rmatrixtrinverse(real_2d_array &a, const bool isupper, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
rmatrixtrrcond1	lib/alglib/linalg.cpp	/^double rmatrixtrrcond1(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixtrrcond1	lib/alglib/linalg.cpp	/^double rmatrixtrrcond1(const real_2d_array &a, const ae_int_t n, const bool isupper, const bool isunit)$/;"	f	namespace:alglib
rmatrixtrrcondinf	lib/alglib/linalg.cpp	/^double rmatrixtrrcondinf(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmatrixtrrcondinf	lib/alglib/linalg.cpp	/^double rmatrixtrrcondinf(const real_2d_array &a, const ae_int_t n, const bool isupper, const bool isunit)$/;"	f	namespace:alglib
rmatrixtrsafesolve	lib/alglib/alglibinternal.cpp	/^void rmatrixtrsafesolve(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
rmserror	lib/alglib/dataanalysis.h	/^    double &rmserror;$/;"	m	class:alglib::dfreport
rmserror	lib/alglib/dataanalysis.h	/^    double &rmserror;$/;"	m	class:alglib::lrreport
rmserror	lib/alglib/dataanalysis.h	/^    double &rmserror;$/;"	m	class:alglib::mlpcvreport
rmserror	lib/alglib/dataanalysis.h	/^    double rmserror;$/;"	m	struct:alglib_impl::__anon38
rmserror	lib/alglib/dataanalysis.h	/^    double rmserror;$/;"	m	struct:alglib_impl::__anon40
rmserror	lib/alglib/dataanalysis.h	/^    double rmserror;$/;"	m	struct:alglib_impl::__anon43
rmserror	lib/alglib/dataanalysis.h	/^    double rmserror;$/;"	m	struct:alglib_impl::__anon49
rmserror	lib/alglib/interpolation.h	/^    double &rmserror;$/;"	m	class:alglib::barycentricfitreport
rmserror	lib/alglib/interpolation.h	/^    double &rmserror;$/;"	m	class:alglib::lsfitreport
rmserror	lib/alglib/interpolation.h	/^    double &rmserror;$/;"	m	class:alglib::polynomialfitreport
rmserror	lib/alglib/interpolation.h	/^    double &rmserror;$/;"	m	class:alglib::spline1dfitreport
rmserror	lib/alglib/interpolation.h	/^    double rmserror;$/;"	m	struct:alglib_impl::__anon59
rmserror	lib/alglib/interpolation.h	/^    double rmserror;$/;"	m	struct:alglib_impl::__anon60
rmserror	lib/alglib/interpolation.h	/^    double rmserror;$/;"	m	struct:alglib_impl::__anon61
rmserror	lib/alglib/interpolation.h	/^    double rmserror;$/;"	m	struct:alglib_impl::__anon62
rmsim_	build/include/tool/simulation/SimulatedPlayer.h	/^  RobotMovementSimulator rmsim_;$/;"	m	class:SimulatedPlayer
rmsim_	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  RobotMovementSimulator rmsim_;$/;"	m	class:SimulatedPlayer
rneeded	lib/alglib/alglibmisc.h	/^    double rneeded;$/;"	m	struct:alglib_impl::__anon25
robotGL	build/include/tool/UTOpenGL/GLDrawer.h	/^    RobotGL robotGL;$/;"	m	class:GLDrawer
robotGL	build/include/tool/UTOpenGL/LocalizationGL.h	/^  RobotGL robotGL;$/;"	m	class:LocalizationGL
robotGL	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    RobotGL robotGL;$/;"	m	class:GLDrawer
robotGL	tools/UTNaoTool/UTOpenGL/LocalizationGL.h	/^  RobotGL robotGL;$/;"	m	class:LocalizationGL
robotGL_	build/include/tool/MotionGLWidget.h	/^  RobotGL robotGL_;$/;"	m	class:MotionGLWidget
robotGL_	tools/UTNaoTool/MotionGLWidget.h	/^  RobotGL robotGL_;$/;"	m	class:MotionGLWidget
robotID	bin/copy_robot	/^    robotID = ip.split('.')[-1]$/;"	v
robotID	bin/copy_robot	/^  robotID = options.robotID$/;"	v
robotID	build/copy_robot	/^    robotID = ip.split('.')[-1]$/;"	v
robotID	build/copy_robot	/^  robotID = options.robotID$/;"	v
robotInterfaces	bin/compile	/^robotInterfaces = ['nao','motion','vision']$/;"	v
robotInterfaces	build/compile	/^robotInterfaces = ['nao','motion','vision']$/;"	v
robotIsInCorner	core/memory/BehaviorBlock.h	/^  bool robotIsInCorner;$/;"	m	struct:BehaviorBlock
robotRelativeToNeckCoord	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^XYZ_Coord Pose::robotRelativeToNeckCoord(RRCoord coord, int h) const {$/;"	f	class:Pose
robotState	core/opponents/UKF4.h	/^  RobotStateBlock* robotState;$/;"	m	class:UKF4
robotToImageXY	core/motion/rswalk2014/perception/kinematics/Pose.cpp	/^Point Pose::robotToImageXY(Point robot, int h) const$/;"	f	class:Pose
robot_	interfaces/sim_spark/Parser.h	/^  RobotBehavior* robot_;$/;"	m	class:Parser
robot_configs	core/common/TeamConfig.h	/^    std::map<int,RobotConfig> robot_configs;$/;"	m	class:TeamConfig
robot_dimensions_	build/include/tool/PlotWindow.h	/^  RobotDimensions robot_dimensions_;$/;"	m	class:PlotWindow
robot_dimensions_	tools/UTNaoTool/PlotWindow.h	/^  RobotDimensions robot_dimensions_;$/;"	m	class:PlotWindow
robot_id	bin/copy_robot	/^  robot_id = ipSplit[2]$/;"	v
robot_id	build/copy_robot	/^  robot_id = ipSplit[2]$/;"	v
robot_id	core/common/RobotConfig.h	/^    int robot_id, team, self, role;$/;"	m	class:RobotConfig
robot_id_	core/memory/RobotStateBlock.h	/^  int robot_id_;  \/\/ Which robot serial number are we, -1 = unknown or sim$/;"	m	struct:RobotStateBlock
robot_info	core/memory/MemoryCache.h	/^    RobotInfoBlock* robot_info;$/;"	m	class:MemoryCache
robot_info	core/python/memory.py	/^  def robot_info(): return core.pythonC.robot_info_$/;"	f	function:init
robot_info	core/vision/VisionBlocks.h	/^    RobotInfoBlock*& robot_info;$/;"	m	class:VisionBlocks
robot_info_	core/InterpreterModule.h	/^    RobotInfoBlock *robot_info_;$/;"	m	class:InterpreterModule
robot_info_	core/MotionCore.h	/^  RobotInfoBlock* robot_info_;$/;"	m	class:MotionCore
robot_info_	core/VisionCore.h	/^  RobotInfoBlock *robot_info_;$/;"	m	class:VisionCore
robot_info_	core/kinematics/KinematicsModule.h	/^  RobotInfoBlock* robot_info_;$/;"	m	class:KinematicsModule
robot_info_	core/motion/rswalk2014/RSWalkModule2014.h	/^        RobotInfoBlock *robot_info_;$/;"	m	class:RSWalkModule2014
robot_info_	core/vision/VisionModule.h	/^  RobotInfoBlock *robot_info_;$/;"	m	class:VisionModule
robot_info_	interfaces/sim_spark/RobotBehavior.h	/^  RobotInfoBlock* robot_info_;$/;"	m	class:RobotBehavior
robot_joint_signs	core/common/InterfaceInfo.cpp	/^const int robot_joint_signs[NUM_JOINTS] = {$/;"	v
robot_last_position_	core/memory/WalkInfoBlock.h	/^  Pose2D robot_last_position_;$/;"	m	struct:WalkInfoBlock
robot_next_position_	core/memory/WalkInfoBlock.h	/^  Pose2D robot_next_position_;$/;"	m	struct:WalkInfoBlock
robot_odometry_frame_	core/memory/WalkInfoBlock.h	/^  Pose2D robot_odometry_frame_;$/;"	m	struct:WalkInfoBlock
robot_pos_	core/memory/SimTruthDataBlock.h	/^  Pose2D robot_pos_;$/;"	m	struct:SimTruthDataBlock
robot_pos_noise	core/opponents/UKF4.h	/^  float robot_pos_noise;$/;"	m	struct:SmallUKF4Params
robot_position_	core/memory/WalkInfoBlock.h	/^  Pose2D robot_position_;$/;"	m	struct:WalkInfoBlock
robot_relative_next_position_	core/memory/WalkInfoBlock.h	/^  Pose2D robot_relative_next_position_;$/;"	m	struct:WalkInfoBlock
robot_state	core/memory/MemoryCache.h	/^    RobotStateBlock* robot_state;$/;"	m	class:MemoryCache
robot_state	core/python/cfgpose.py	/^from memory import robot_state$/;"	i
robot_state	core/python/cfgwalk.py	/^from memory import walk_param, robot_state$/;"	i
robot_state	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
robot_state	core/python/memory.py	/^  def robot_state(): return core.pythonC.robot_state_$/;"	f	function:init
robot_state	core/python/util.py	/^  game_state, behavior_mem$/;"	i
robot_state	core/vision/VisionBlocks.h	/^    RobotStateBlock*& robot_state;$/;"	m	class:VisionBlocks
robot_state_	core/InterpreterModule.h	/^    RobotStateBlock *robot_state_;$/;"	m	class:InterpreterModule
robot_state_	core/MotionCore.h	/^  RobotStateBlock* robot_state_;$/;"	m	class:MotionCore
robot_state_	core/VisionCore.h	/^  RobotStateBlock *robot_state_;$/;"	m	class:VisionCore
robot_state_	core/communications/CommunicationModule.h	/^  RobotStateBlock *robot_state_;$/;"	m	class:CommunicationModule
robot_state_	core/sensor/ButtonModule.h	/^  RobotStateBlock *robot_state_;$/;"	m	class:ButtonModule
robot_state_	core/sonar/SonarModule.h	/^  RobotStateBlock* robot_state_;$/;"	m	class:SonarModule
robot_state_	core/vision/VisionModule.h	/^  RobotStateBlock *robot_state_;$/;"	m	class:VisionModule
robot_state_	interfaces/nao/src/naointerface.h	/^    RobotStateBlock *robot_state_;$/;"	m	class:naointerface
robot_state_	interfaces/sim_spark/RobotBehavior.h	/^  RobotStateBlock* robot_state_;$/;"	m	class:RobotBehavior
robot_state_block_	build/include/tool/VisionWindow.h	/^  RobotStateBlock* robot_state_block_;$/;"	m	class:VisionWindow
robot_state_block_	tools/UTNaoTool/VisionWindow.h	/^  RobotStateBlock* robot_state_block_;$/;"	m	class:VisionWindow
robot_vel_noise	core/opponents/UKF4.h	/^  float robot_vel_noise;$/;"	m	struct:SmallUKF4Params
robot_velocity_	core/memory/WalkInfoBlock.h	/^  Pose2D robot_velocity_;$/;"	m	struct:WalkInfoBlock
robot_velocity_frac_	core/memory/WalkInfoBlock.h	/^  Pose2D robot_velocity_frac_;$/;"	m	struct:WalkInfoBlock
robot_vision	core/memory/MemoryCache.h	/^    RobotVisionBlock* robot_vision;$/;"	m	class:MemoryCache
robot_vision	core/python/memory.py	/^  def robot_vision(): return core.pythonC.robot_vision_$/;"	f	function:init
robot_vision	core/vision/VisionBlocks.h	/^    RobotVisionBlock*& robot_vision;$/;"	m	class:VisionBlocks
robot_vision_	core/InterpreterModule.h	/^    RobotVisionBlock *robot_vision_;$/;"	m	class:InterpreterModule
robot_vision_	core/VisionCore.h	/^  RobotVisionBlock *robot_vision_;$/;"	m	class:VisionCore
robot_vision_	core/vision/VisionModule.h	/^  RobotVisionBlock *robot_vision_;$/;"	m	class:VisionModule
robot_vision_	interfaces/sim_spark/RobotBehavior.h	/^  RobotVisionBlock* robot_vision_;$/;"	m	class:RobotBehavior
robot_vision_block_	build/include/tool/VisionWindow.h	/^  RobotVisionBlock* robot_vision_block_;$/;"	m	class:VisionWindow
robot_vision_block_	tools/UTNaoTool/VisionWindow.h	/^  RobotVisionBlock* robot_vision_block_;$/;"	m	class:VisionWindow
robots_	build/include/tool/TeamConfigWindow.h	/^    std::vector<int> robots_;$/;"	m	class:TeamConfigWindow
robots_	tools/UTNaoTool/TeamConfigWindow.h	/^    std::vector<int> robots_;$/;"	m	class:TeamConfigWindow
rock	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float rock;$/;"	m	class:Walk2014Generator
role	core/common/RobotConfig.h	/^    int robot_id, team, self, role;$/;"	m	class:RobotConfig
roleAbbrevs	core/common/Roles.h	/^const std::string roleAbbrevs[] = {$/;"	v
roleNames	core/common/Roles.h	/^const std::string roleNames[] = {$/;"	v
rolePositionConfigs	core/memory/BehaviorParamBlock.h	/^  RolePositionConfig rolePositionConfigs[NUM_ROLES];$/;"	m	struct:RoleStrategy
roleStrategy	core/memory/BehaviorParamBlock.h	/^  RoleStrategy roleStrategy;$/;"	m	struct:BehaviorParamBlock
role_	core/memory/RobotStateBlock.h	/^  int role_;$/;"	m	struct:RobotStateBlock
rolesOrderedByImportance	core/memory/BehaviorParamBlock.h	/^  int rolesOrderedByImportance[NUM_FIELD_PLAYERS]; \/\/ chaser usually ignored, but used when goalie is clearing$/;"	m	struct:FieldAreaRoleConfig
roll	build/include/tool/simulation/SimulatedPlayer.h	/^  float roll;$/;"	m	class:SimulatedPlayer
roll	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float roll;$/;"	m	class:SimulatedPlayer
rollOffsetToBottomCamera	core/common/RobotDimensions.h	/^    rollOffsetToBottomCamera,$/;"	e	enum:RobotDimensions::__anon8
rollOffsetToTopCamera	core/common/RobotDimensions.h	/^    rollOffsetToTopCamera,$/;"	e	enum:RobotDimensions::__anon8
roll_	core/common/TiltRoll.h	/^  float roll_;$/;"	m	struct:TiltRoll
roll_bottom_cam_	core/common/Calibration.h	/^  float roll_bottom_cam_;$/;"	m	class:Calibration
roll_fallen_counter_	core/memory/WalkRequestBlock.h	/^  int roll_fallen_counter_;$/;"	m	struct:WalkRequestBlock
roll_top_cam_	core/common/Calibration.h	/^  float roll_top_cam_;$/;"	m	class:Calibration
rootgc	lib/lua/src/lstate.h	/^  GCObject *rootgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State
rosen	tools/behaviorSim/cma.py	/^    def rosen(self, x, alpha=1e2):  $/;"	m	class:FitnessFunctions
rosen_nesterov	tools/behaviorSim/cma.py	/^    def rosen_nesterov(self, x, rho=100):$/;"	m	class:FitnessFunctions
rosenelli	tools/behaviorSim/cma.py	/^    def rosenelli(self, x):$/;"	m	class:FitnessFunctions
rot	build/include/tool/simulation/LocalizationSimulation.h	/^  float rot;$/;"	m	struct:AgentError
rot	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  float rot;$/;"	m	struct:AgentError
rot	tools/behaviorSim/cma.py	/^    def rot(self, x, fun, rot=1, args=()):$/;"	m	class:FitnessFunctions
rotError	build/include/tool/simulation/LocalizationSimulation.h	/^  float rotError;$/;"	m	struct:LocSimAgent
rotError	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  float rotError;$/;"	m	struct:LocSimAgent
rotRMSE	build/include/tool/simulation/LocalizationSimulation.h	/^  float rotRMSE() { return sqrtf(rotError \/ steps); }$/;"	f	struct:LocSimAgent
rotRMSE	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  float rotRMSE() { return sqrtf(rotError \/ steps); }$/;"	f	struct:LocSimAgent
rotate	core/math/Geometry.cpp	/^LineSegment LineSegment::rotate(AngRad ang) {$/;"	f	class:LineSegment
rotate	core/math/Geometry.cpp	/^LineSegment LineSegment::rotate(Point2D origin, AngRad ang) {$/;"	f	class:LineSegment
rotate	core/math/Geometry.cpp	/^Point2D Point2D::rotate( AngRad ang )$/;"	f	class:Point2D
rotate	core/math/Pose2D.h	/^  Pose2D& rotate(const float angle)$/;"	f	class:Pose2D
rotate	core/math/Pose3D.h	/^  Pose3D& rotate(const RotationMatrix& rot)$/;"	f	class:Pose3D
rotate	core/math/Vector2.h	/^  Vector2<V> rotate(float alpha)$/;"	f	class:Vector2
rotate	core/python/behaviors/win.py	/^  rotate=2$/;"	v	class:AttackingStates
rotate	core/python/geometry.py	/^  def rotate(self, ang):$/;"	m	class:Point2D
rotate	tools/behaviorSim/cma.py	/^rotate = Rotation()$/;"	v
rotateCopyXY	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^static inline XYZ_Coord rotateCopyXY(const XYZ_Coord &xyz, float theta) {$/;"	f
rotateLeft	core/math/Vector2.h	/^  Vector2<V> rotateLeft()$/;"	f	class:Vector2
rotatePhase_	build/include/tool/simulation/RobotMovementSimulator.h	/^    bool rotatePhase_;$/;"	m	class:RobotMovementSimulator
rotatePhase_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    bool rotatePhase_;$/;"	m	class:RobotMovementSimulator
rotatePoints	core/math/Spline3D.h	/^  void rotatePoints(int startInd, int endInd, float ang, int rotateMode) {$/;"	f	class:Spline3D
rotateRight	core/math/Vector2.h	/^  Vector2<V> rotateRight()$/;"	f	class:Vector2
rotateTimer_	build/include/tool/simulation/RobotMovementSimulator.h	/^    int rotateTimer_;$/;"	m	class:RobotMovementSimulator
rotateTimer_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    int rotateTimer_;$/;"	m	class:RobotMovementSimulator
rotateX	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateX(float angRad) {$/;"	f	class:BasicGL
rotateX	core/math/Pose3D.h	/^  Pose3D& rotateX(const float angle)$/;"	f	class:Pose3D
rotateX	core/math/RotationMatrix.cpp	/^RotationMatrix& RotationMatrix::rotateX(const float angle)$/;"	f	class:RotationMatrix
rotateX	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateX(float angRad) {$/;"	f	class:BasicGL
rotateXDeg	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateXDeg(float angDeg) {$/;"	f	class:BasicGL
rotateXDeg	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateXDeg(float angDeg) {$/;"	f	class:BasicGL
rotateXY	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      inline void rotateXY(float theta) {$/;"	f	class:XYZ_Coord
rotateXZ	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      inline void rotateXZ(float theta) {$/;"	f	class:XYZ_Coord
rotateY	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateY(float angRad) {$/;"	f	class:BasicGL
rotateY	core/math/Pose3D.h	/^  Pose3D& rotateY(const float angle)$/;"	f	class:Pose3D
rotateY	core/math/RotationMatrix.cpp	/^RotationMatrix& RotationMatrix::rotateY(const float angle)$/;"	f	class:RotationMatrix
rotateY	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateY(float angRad) {$/;"	f	class:BasicGL
rotateYDeg	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateYDeg(float angDeg) {$/;"	f	class:BasicGL
rotateYDeg	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateYDeg(float angDeg) {$/;"	f	class:BasicGL
rotateYZ	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      inline void rotateYZ(float theta) {$/;"	f	class:XYZ_Coord
rotateZ	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateZ(float angRad) {$/;"	f	class:BasicGL
rotateZ	core/math/Pose3D.h	/^  Pose3D& rotateZ(const float angle)$/;"	f	class:Pose3D
rotateZ	core/math/RotationMatrix.cpp	/^RotationMatrix& RotationMatrix::rotateZ(const float angle)$/;"	f	class:RotationMatrix
rotateZ	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateZ(float angRad) {$/;"	f	class:BasicGL
rotateZDeg	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateZDeg(float angDeg) {$/;"	f	class:BasicGL
rotateZDeg	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::rotateZDeg(float angDeg) {$/;"	f	class:BasicGL
rotate_around_target_	core/memory/WalkRequestBlock.h	/^  bool rotate_around_target_;$/;"	m	struct:WalkRequestBlock
rotate_distance_	core/memory/WalkRequestBlock.h	/^  float rotate_distance_;$/;"	m	struct:WalkRequestBlock
rotate_heading_	core/memory/WalkRequestBlock.h	/^  float rotate_heading_;$/;"	m	struct:WalkRequestBlock
rotation	core/math/Pose2D.h	/^  float rotation;$/;"	m	class:Pose2D
rotation	core/math/Pose3D.h	/^  RotationMatrix rotation;$/;"	m	class:Pose3D
rotation_dir	core/python/behaviors/win.py	/^rotation_dir = 1.$/;"	v
round	lib/alglib/ap.cpp	/^int alglib::round(double x)$/;"	f	class:alglib
row	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^		unsigned row() const { return m_row; }$/;"	f	class:YAML::ostream
rowVector	core/math/YaMatrix.h	/^  YaMatrix<V> rowVector(int m) const$/;"	f	class:YaMatrix
rowidxabsmax	lib/alglib/alglibinternal.cpp	/^ae_int_t rowidxabsmax(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
rows	lib/alglib/ap.cpp	/^alglib::ae_int_t alglib::ae_matrix_wrapper::rows() const$/;"	f	class:alglib::ae_matrix_wrapper
rows	lib/alglib/ap.h	/^    ae_int64_t     rows;$/;"	m	struct:alglib_impl::__anon34
rows	lib/alglib/ap.h	/^    ae_int_t rows;$/;"	m	struct:alglib_impl::ae_matrix
rr	core/motion/rswalk2014/types/PostInfo.hpp	/^   RRCoord rr;$/;"	m	struct:PostInfo
rsMaxChange	core/motion/BHWalkParameters.h	/^  Pose2D rsMaxChange;$/;"	m	struct:BHWalkParameters
rsSpeedMax	core/motion/BHWalkParameters.h	/^  Pose2D rsSpeedMax;$/;"	m	struct:BHWalkParameters
rs_turn_angle_offset	core/motion/BHWalkParameters.h	/^  float rs_turn_angle_offset; \/\/TODO not being used now 07\/19\/2015$/;"	m	struct:BHWalkParameters
rstate	lib/alglib/alglibinternal.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon22
rstate	lib/alglib/diffequations.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon51
rstate	lib/alglib/integration.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon54
rstate	lib/alglib/integration.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon55
rstate	lib/alglib/interpolation.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon63
rstate	lib/alglib/linalg.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon68
rstate	lib/alglib/optimization.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon69
rstate	lib/alglib/optimization.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon73
rstate	lib/alglib/optimization.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon75
rstate	lib/alglib/optimization.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon77
rstate	lib/alglib/optimization.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon79
rstate	lib/alglib/solvers.h	/^    rcommstate rstate;$/;"	m	struct:alglib_impl::__anon83
rstimer	lib/alglib/optimization.h	/^    ae_int_t rstimer;$/;"	m	struct:alglib_impl::__anon77
rswalk_max_vel_rot	core/python/commands.py	/^rswalk_max_vel_rot = 0.87 #was 0.87$/;"	v
rswalk_max_vel_x	core/python/commands.py	/^rswalk_max_vel_x = 330.0 #was 300.0$/;"	v
rswalk_max_vel_y	core/python/commands.py	/^rswalk_max_vel_y = 200.0 #was 200.0$/;"	v
rt	build/include/tool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
rt	tools/UTNaoTool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
run	core/python/behaviors/Distance.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/Distance.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/Distance.py	/^    def run(self):$/;"	m	class:Playing.TrackGoal
run	core/python/behaviors/Distance.py	/^  def run(self):$/;"	m	class:Ready
run	core/python/behaviors/Movement.py	/^    def run(self):$/;"	m	class:Playing.Curve
run	core/python/behaviors/Movement.py	/^    def run(self):$/;"	m	class:Playing.GoAround
run	core/python/behaviors/Movement.py	/^    def run(self):$/;"	m	class:Playing.Kick
run	core/python/behaviors/Movement.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/Movement.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/Movement.py	/^    def run(self):$/;"	m	class:Playing.TurnInPlace
run	core/python/behaviors/Movement.py	/^    def run(self):$/;"	m	class:Playing.Walk
run	core/python/behaviors/Movement.py	/^  def run(self):$/;"	m	class:Ready
run	core/python/behaviors/custom_kick.py	/^    def run(self):$/;"	m	class:Playing.Kick
run	core/python/behaviors/custom_kick.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/custom_kick.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/custom_kick.py	/^    def run(self):$/;"	m	class:Playing.Walk
run	core/python/behaviors/head_tracking.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/head_tracking.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/head_tracking.py	/^    def run(self):$/;"	m	class:Playing.TrackGoal
run	core/python/behaviors/head_tracking.py	/^  def run(self):$/;"	m	class:Ready
run	core/python/behaviors/keeper.py	/^  def run(self):$/;"	m	class:BlockCenter
run	core/python/behaviors/keeper.py	/^  def run(self):$/;"	m	class:BlockLeft
run	core/python/behaviors/keeper.py	/^  def run(self):$/;"	m	class:BlockRight
run	core/python/behaviors/keeper.py	/^  def run(self):$/;"	m	class:Blocker
run	core/python/behaviors/keeper_2.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/keeper_2.py	/^  def run(self):$/;"	m	class:Blocker
run	core/python/behaviors/keeper_2.py	/^  def run(self):$/;"	m	class:GoalieBlock
run	core/python/behaviors/keeper_2.py	/^  def run(self):$/;"	m	class:Sitting
run	core/python/behaviors/keeper_2.py	/^  def run(self):$/;"	m	class:Walking
run	core/python/behaviors/keeper_2.py	/^  def run(self):$/;"	m	class:WalkingCenter
run	core/python/behaviors/keeper_2.py	/^  def run(self):$/;"	m	class:WalkingLeft
run	core/python/behaviors/keeper_2.py	/^  def run(self):$/;"	m	class:WalkingRight
run	core/python/behaviors/keeper_3.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/keeper_3.py	/^  def run(self):$/;"	m	class:BlockCenter
run	core/python/behaviors/keeper_3.py	/^  def run(self):$/;"	m	class:BlockLeft
run	core/python/behaviors/keeper_3.py	/^  def run(self):$/;"	m	class:BlockRight
run	core/python/behaviors/keeper_3.py	/^  def run(self):$/;"	m	class:Blocker
run	core/python/behaviors/kick.py	/^    def run(self):$/;"	m	class:Playing.Kick
run	core/python/behaviors/kick.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/kick.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/kick.py	/^    def run(self):$/;"	m	class:Playing.Walk
run	core/python/behaviors/pid_distance_angle.py	/^    def run(self):$/;"	m	class:Playing.Kick
run	core/python/behaviors/pid_distance_angle.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/pid_distance_angle.py	/^    def run(self):$/;"	m	class:Playing.PID_walk
run	core/python/behaviors/pid_distance_angle.py	/^    def run(self):$/;"	m	class:Playing.Prepare
run	core/python/behaviors/pid_distance_angle.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/pid_distance_angle.py	/^    def run(self):$/;"	m	class:Playing.TrackGoal
run	core/python/behaviors/pid_distance_angle.py	/^  def run(self):$/;"	m	class:Ready
run	core/python/behaviors/stamp_in_circles.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/stamp_in_circles.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/stamp_in_circles.py	/^    def run(self):$/;"	m	class:Playing.TurnInPlace
run	core/python/behaviors/stamp_in_circles.py	/^  def run(self):$/;"	m	class:Ready
run	core/python/behaviors/stand.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/stand.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/stand.py	/^  def run(self):$/;"	m	class:Ready
run	core/python/behaviors/walk_to_center.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/walk_to_center.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/walk_to_center.py	/^    def run(self):$/;"	m	class:Playing.WalkToCenter
run	core/python/behaviors/walk_to_center.py	/^  def run(self):$/;"	m	class:Ready
run	core/python/behaviors/walk_to_center_2.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/walk_to_center_2.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/walk_to_center_2.py	/^    def run(self):$/;"	m	class:Playing.WalkToCenter
run	core/python/behaviors/walk_to_center_2.py	/^  def run(self):$/;"	m	class:Ready
run	core/python/behaviors/win.py	/^    def run(self):$/;"	m	class:Playing.Off
run	core/python/behaviors/win.py	/^    def run(self):$/;"	m	class:Playing.Stand
run	core/python/behaviors/win.py	/^    def run(self):$/;"	m	class:Playing.Win
run	core/python/behaviors/win.py	/^  def run(self):$/;"	m	class:Ready
run	core/python/head.py	/^  def run(self):$/;"	m	class:MoveHead
run	core/python/pose.py	/^  def run(self):$/;"	m	class:Sit
run	core/python/pose.py	/^  def run(self):$/;"	m	class:Stand
run	core/python/pose.py	/^  def run(self):$/;"	m	class:StandStraight
run	core/python/pose.py	/^  def run(self):$/;"	m	class:ToPose
run	core/python/primary_bvr.py	/^  def run(self):$/;"	m	class:ManualControl
run	core/python/state_machine.py	/^  def run(self): pass$/;"	m	class:Node
run	core/python/state_machine.py	/^  def run(self):$/;"	m	class:EventNode
run	core/python/state_machine.py	/^  def run(self):$/;"	m	class:MachineNode
run	core/python/state_machine.py	/^  def run(self):$/;"	m	class:StateMachine
run	core/python/state_machine.py	/^  def run(self):$/;"	m	class:TaskNode
run	core/python/task.py	/^  def run(self):$/;"	m	class:MultiTask
run	core/python/task.py	/^  def run(self):$/;"	m	class:NullTask
run	core/python/task.py	/^  def run(self):$/;"	m	class:Task
runAndSave	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^bool IntrinsicCalibrator::runAndSave(const string& outputFilename, bool writeExtrinsics, bool writePoints) {$/;"	f	class:IntrinsicCalibrator
runAndSave	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^bool IntrinsicCalibrator::runAndSave(const string& outputFilename, bool writeExtrinsics, bool writePoints) {$/;"	f	class:IntrinsicCalibrator
runBehavior	build/include/tool/FilesWindow.cpp	/^void FilesWindow::runBehavior() {$/;"	f	class:FilesWindow
runBehavior	core/InterpreterModule.h	/^    virtual void runBehavior(std::string behavior) { }$/;"	f	class:InterpreterModule
runBehavior	core/python/PythonModule.cpp	/^void PythonModule::runBehavior(std::string behavior) {$/;"	f	class:PythonModule
runBehavior	core/python/init.py	/^def runBehavior(bvr):$/;"	f
runBehavior	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::runBehavior() {$/;"	f	class:FilesWindow
runBehaviorSim	build/include/tool/UTNaoTool.cpp	/^void runBehaviorSim() {$/;"	f
runBehaviorSim	tools/UTNaoTool/UTNaoTool.cpp	/^void runBehaviorSim() {$/;"	f
runBin	bin/common.py	/^def runBin(part1,part2,args=None,options=None):$/;"	f
runBin	bin/motion	/^from common import runBin$/;"	i
runBin	bin/simInterface	/^from common import runBin, parseArgs$/;"	i
runBin	bin/vision	/^from common import runBin$/;"	i
runCalibration	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^bool IntrinsicCalibrator::runCalibration(vector<Mat>& rvecs, vector<Mat>& tvecs, vector<float>& reprojErrs, double& totalAvgErr) {$/;"	f	class:IntrinsicCalibrator
runCalibration	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^bool IntrinsicCalibrator::runCalibration(vector<Mat>& rvecs, vector<Mat>& tvecs, vector<float>& reprojErrs, double& totalAvgErr) {$/;"	f	class:IntrinsicCalibrator
runCommand	bin/behaviorSim	/^from common import runCommand, onLabMachine$/;"	i
runCommand	bin/common.py	/^def runCommand(cmd,options=None,args=None,ldAdditional='',gtkPath=None):$/;"	f
runCommand	bin/tool	/^from common import runCommand, onLabMachine$/;"	i
runCommand	install/common.py	/^def runCommand(command,password=None,output=True):$/;"	f
runCondor	tools/behaviorSim/runCMAES.py	/^def runCondor(condorName):$/;"	f
runCore	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::runCore() {$/;"	f	class:UTMainWnd
runCore	build/include/tool/UTNaoTool.cpp	/^  bool runCore = false;$/;"	m	namespace:__anon4	file:
runCore	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::runCore() {$/;"	f	class:UTMainWnd
runCore	tools/UTNaoTool/UTNaoTool.cpp	/^  bool runCore = false;$/;"	m	namespace:__anon142	file:
runCoreFrame	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::runCoreFrame(int i, bool start, bool end) {$/;"	f	class:UTMainWnd
runCoreFrame	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::runCoreFrame(int i, bool start, bool end) {$/;"	f	class:UTMainWnd
runEvals	tools/behaviorSim/runCMAES.py	/^def runEvals(paramNames,xs,gen,thisGenDir,condorConfig):$/;"	f
runKickTests	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::runKickTests(){$/;"	f	class:BehaviorSimulation
runKickTests	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::runKickTests(){$/;"	f	class:BehaviorSimulation
runLocSim	build/include/tool/UTNaoTool.cpp	/^void runLocSim() {$/;"	f
runLocSim	tools/UTNaoTool/UTNaoTool.cpp	/^void runLocSim() {$/;"	f
runLocalCommand	install/common.py	/^def runLocalCommand(command,password=None,output=None):$/;"	f
runLocalCommand	install/install	/^from common import runLocalCommand, verifyPassword$/;"	i
runLocalCommand	install/install_lab	/^from common import runLocalCommand, verifyPassword$/;"	i
runLocalScriptRemotely	install/common.py	/^def runLocalScriptRemotely(ip, scriptpath,output=None):$/;"	f
runLog	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::runLog() {$/;"	f	class:UTMainWnd
runLog	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::runLog() {$/;"	f	class:UTMainWnd
runParamTest	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::runParamTest(){$/;"	f	class:BehaviorSimulation
runParamTest	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::runParamTest(){$/;"	f	class:BehaviorSimulation
runParamTests	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::runParamTests(){$/;"	f	class:BehaviorSimulation
runParamTests	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::runParamTests(){$/;"	f	class:BehaviorSimulation
runRemoteCommand	install/common.py	/^def runRemoteCommand(ip,command,root=False,output=None):$/;"	f
runRemoteCommand	install/copy_wpa.py	/^def runRemoteCommand(ip,command):$/;"	f
runRemoteCommand	install/fix_autoload.py	/^from setup_robotv4 import runRemoteCommand, ask, makeTempDir, removeTempDir, copyFile$/;"	i
runSignal	core/python/state_machine.py	/^  def runSignal(self):$/;"	m	class:CompletedNode
runSignal	core/python/state_machine.py	/^  def runSignal(self):$/;"	m	class:FailureNode
runSignal	core/python/state_machine.py	/^  def runSignal(self):$/;"	m	class:SignalNode
runStream	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::runStream() {$/;"	f	class:UTMainWnd
runStream	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::runStream() {$/;"	f	class:UTMainWnd
runSwig	build/pythonswig/generateSwig.py	/^def runSwig(ifile, cppfile):$/;"	f
runSysConfigCommand	install/install	/^def runSysConfigCommand(command):$/;"	f
runSysConfigCommand	install/install_lab	/^def runSysConfigCommand(command):$/;"	f
runargs	lib/lua/src/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
runningCore_	build/include/tool/UTMainWnd.h	/^  bool runningCore_;$/;"	m	class:UTMainWnd
runningCore_	tools/UTNaoTool/UTMainWnd.h	/^  bool runningCore_;$/;"	m	class:UTMainWnd
runtime_check	lib/lua/src/lvm.c	/^#define runtime_check(/;"	d	file:
rvectorsetlengthatleast	lib/alglib/alglibinternal.cpp	/^void rvectorsetlengthatleast(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
s	lib/alglib/alglibinternal.h	/^    ae_vector s;$/;"	m	struct:alglib_impl::__anon22
s	lib/alglib/interpolation.h	/^    ae_vector s;$/;"	m	struct:alglib_impl::__anon63
s	lib/alglib/optimization.h	/^    ae_vector s;$/;"	m	struct:alglib_impl::__anon69
s	lib/alglib/optimization.h	/^    ae_vector s;$/;"	m	struct:alglib_impl::__anon73
s	lib/alglib/optimization.h	/^    ae_vector s;$/;"	m	struct:alglib_impl::__anon77
s	lib/lua/src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s	lib/lua/src/lparser.h	/^    struct { int info, aux; } s;$/;"	m	union:expdesc::__anon96	typeref:struct:expdesc::__anon96::__anon97
s	vision_testing/src/vision_testing.cpp	/^  unsigned char s;$/;"	m	class:HSV	file:
s1	lib/alglib/alglibmisc.h	/^    ae_int_t s1;$/;"	m	struct:alglib_impl::__anon24
s2	lib/alglib/alglibmisc.h	/^    ae_int_t s2;$/;"	m	struct:alglib_impl::__anon24
s_introFinalState	lib/yaml-cpp/src/stream.cpp	/^	static bool s_introFinalState[] = {$/;"	m	namespace:YAML	file:
s_introTransitions	lib/yaml-cpp/src/stream.cpp	/^	static UtfIntroState s_introTransitions[][uictMax] = {$/;"	m	namespace:YAML	file:
s_introUngetCount	lib/yaml-cpp/src/stream.cpp	/^	static char s_introUngetCount[][uictMax] = {$/;"	m	namespace:YAML	file:
safeminposrv	lib/alglib/alglibinternal.cpp	/^double safeminposrv(double x, double y, double v, ae_state *_state)$/;"	f	namespace:alglib_impl
safepythag2	lib/alglib/alglibinternal.cpp	/^double safepythag2(double x, double y, ae_state *_state)$/;"	f	namespace:alglib_impl
safepythag3	lib/alglib/alglibinternal.cpp	/^double safepythag3(double x, double y, double z, ae_state *_state)$/;"	f	namespace:alglib_impl
saferdiv	lib/alglib/alglibinternal.cpp	/^ae_int_t saferdiv(double x, double y, double* r, ae_state *_state)$/;"	f	namespace:alglib_impl
safesolve_cbasicsolveandupdate	lib/alglib/alglibinternal.cpp	/^static ae_bool safesolve_cbasicsolveandupdate(ae_complex alpha,$/;"	f	namespace:alglib_impl
safesolvetriangular	lib/alglib/alglibinternal.cpp	/^void safesolvetriangular(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
sagittalAcceleration	core/motion/rswalk2014/BodyModel.hpp	/^      float sagittalAcceleration;$/;"	m	class:BodyModel
sagittal_prior_mean	core/memory/WalkParamBlock.h	/^  float sagittal_prior_mean;$/;"	m	struct:WalkParamBlock
sagittal_prior_stddev	core/memory/WalkParamBlock.h	/^  float sagittal_prior_stddev;$/;"	m	struct:WalkParamBlock
sameReadingCount	core/sonar/SonarModule.h	/^  int sameReadingCount;$/;"	m	class:SonarModule
sample	interfaces/sim_spark/Random.h	/^   float sample( bool replace = true )  \/\/ Sample w or w\/o replacement from a$/;"	f	class:Random
sample	interfaces/sim_spark/Random.h	/^   void sample( float x[], int ndim )   \/\/ Sample from a given distribution$/;"	f	class:Random
sampleB	core/common/Random.cpp	/^bool Random::sampleB(double p) {$/;"	f	class:Random
sampleColor	build/include/tool/VisionWindow.h	/^  QColor sampleColor, calibrationLineColor, connectionLineColor;$/;"	m	class:VisionWindow
sampleColor	tools/UTNaoTool/VisionWindow.h	/^  QColor sampleColor, calibrationLineColor, connectionLineColor;$/;"	m	class:VisionWindow
sampleCount	build/include/tool/calibration/IntrinsicCalibrator.h	/^    int sampleCount() const { return imagePoints_.size(); }$/;"	f	class:IntrinsicCalibrator
sampleCount	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^    int sampleCount() const { return imagePoints_.size(); }$/;"	f	class:IntrinsicCalibrator
sampleN	core/common/Random.cpp	/^double Random::sampleN(double mean, double stddev) {$/;"	f	class:Random
sampleParams_	build/include/tool/calibration/IntrinsicCalibrator.h	/^    std::vector<ICMeasures> sampleParams_;$/;"	m	class:IntrinsicCalibrator
sampleParams_	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^    std::vector<ICMeasures> sampleParams_;$/;"	m	class:IntrinsicCalibrator
sampleU	core/common/Random.cpp	/^double Random::sampleU(double max) {$/;"	f	class:Random
sampleU	core/common/Random.cpp	/^double Random::sampleU(double min, double max) {$/;"	f	class:Random
sampleU	core/common/Random.cpp	/^int Random::sampleU(int max) {$/;"	f	class:Random
sampleU	core/common/Random.cpp	/^int Random::sampleU(int min, int max) {$/;"	f	class:Random
sampleadev	lib/alglib/statistics.cpp	/^void sampleadev(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
sampleadev	lib/alglib/statistics.cpp	/^void sampleadev(const real_1d_array &x, const ae_int_t n, double &adev)$/;"	f	namespace:alglib
sampleadev	lib/alglib/statistics.cpp	/^void sampleadev(const real_1d_array &x, double &adev)$/;"	f	namespace:alglib
samplemedian	lib/alglib/statistics.cpp	/^void samplemedian(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
samplemedian	lib/alglib/statistics.cpp	/^void samplemedian(const real_1d_array &x, const ae_int_t n, double &median)$/;"	f	namespace:alglib
samplemedian	lib/alglib/statistics.cpp	/^void samplemedian(const real_1d_array &x, double &median)$/;"	f	namespace:alglib
samplemoments	lib/alglib/statistics.cpp	/^void samplemoments(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
samplemoments	lib/alglib/statistics.cpp	/^void samplemoments(const real_1d_array &x, const ae_int_t n, double &mean, double &variance, double &skewness, double &kurtosis)$/;"	f	namespace:alglib
samplemoments	lib/alglib/statistics.cpp	/^void samplemoments(const real_1d_array &x, double &mean, double &variance, double &skewness, double &kurtosis)$/;"	f	namespace:alglib
samplepercentile	lib/alglib/statistics.cpp	/^void samplepercentile(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
samplepercentile	lib/alglib/statistics.cpp	/^void samplepercentile(const real_1d_array &x, const ae_int_t n, const double p, double &v)$/;"	f	namespace:alglib
samplepercentile	lib/alglib/statistics.cpp	/^void samplepercentile(const real_1d_array &x, const double p, double &v)$/;"	f	namespace:alglib
samples_	build/include/tool/ExtrinsicCalibrationWidget.h	/^    vector<Sample> samples_;$/;"	m	class:ExtrinsicCalibrationWidget
samples_	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^    vector<Sample> samples_;$/;"	m	class:ExtrinsicCalibrationWidget
sane	lib/zlib/inflate.h	/^    int sane;                   \/* if false, allow invalid distance too far *\/$/;"	m	struct:inflate_state
save	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::save(){$/;"	f	class:ExtrinsicCalibrationWidget
save	build/include/tool/ImageWidget.h	/^   inline void save(const QString& path, const char* fmt, int v) {$/;"	f	class:ImageWidget
save	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::save() {$/;"	f	class:KeyframeWidget
save	build/include/tool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::save(Log* log) {$/;"	f	class:AnnotationGroup
save	build/include/tool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::save(std::string directory) {$/;"	f	class:AnnotationGroup
save	core/common/YamlConfig.h	/^    void save(std::string file) const { return saveToFile(file); }$/;"	f	class:YamlConfig
save	lib/lua/src/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
save	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::save(){$/;"	f	class:ExtrinsicCalibrationWidget
save	tools/UTNaoTool/ImageWidget.h	/^   inline void save(const QString& path, const char* fmt, int v) {$/;"	f	class:ImageWidget
save	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::save() {$/;"	f	class:KeyframeWidget
save	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::save(Log* log) {$/;"	f	class:AnnotationGroup
save	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::save(std::string directory) {$/;"	f	class:AnnotationGroup
save	tools/behaviorSim/cma.py	/^    def save(self, name=None):$/;"	m	class:Sections
save	tools/behaviorSim/cma.py	/^    def save(self, nameprefix, switch=False):$/;"	m	class:CMADataLogger
save	tools/behaviorSim/cma.py	/^    def save(self, nameprefix, switch=False):$/;"	m	class:DEAPCMADataLogger
saveAs	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::saveAs(){$/;"	f	class:ExtrinsicCalibrationWidget
saveAs	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::saveAs() {$/;"	f	class:KeyframeWidget
saveAs	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::saveAs(){$/;"	f	class:ExtrinsicCalibrationWidget
saveAs	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::saveAs() {$/;"	f	class:KeyframeWidget
saveCalibration	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::saveCalibration(std::string file) {$/;"	f	class:ExtrinsicCalibrationWidget
saveCalibration	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::saveCalibration(std::string file) {$/;"	f	class:ExtrinsicCalibrationWidget
saveCameraParams	build/include/tool/calibration/IntrinsicCalibrator.cpp	/^void IntrinsicCalibrator::saveCameraParams(const string& filename,$/;"	f	class:IntrinsicCalibrator
saveCameraParams	tools/UTNaoTool/calibration/IntrinsicCalibrator.cpp	/^void IntrinsicCalibrator::saveCameraParams(const string& filename,$/;"	f	class:IntrinsicCalibrator
saveConfig	build/include/tool/ConfigWidget.cpp	/^void ConfigWidget::saveConfig() {$/;"	f	class:ConfigWidget
saveConfig	build/include/tool/ConfigWidget.h	/^    virtual void saveConfig(ToolConfig& config) { }$/;"	f	class:ConfigWidget
saveConfig	build/include/tool/ConfigWindow.cpp	/^void ConfigWindow::saveConfig() {$/;"	f	class:ConfigWindow
saveConfig	build/include/tool/ConfigWindow.h	/^    virtual void saveConfig(ToolConfig& config) { }$/;"	f	class:ConfigWindow
saveConfig	build/include/tool/FilesWindow.cpp	/^void FilesWindow::saveConfig(ToolConfig& config) {$/;"	f	class:FilesWindow
saveConfig	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::saveConfig(ToolConfig& config) {$/;"	f	class:KeyframeWidget
saveConfig	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::saveConfig(ToolConfig& config) {$/;"	f	class:LogSelectWindow
saveConfig	build/include/tool/LogWindow.cpp	/^void LogWindow::saveConfig(ToolConfig& config) {$/;"	f	class:LogWindow
saveConfig	build/include/tool/MotionWindow.h	/^    void saveConfig(ToolConfig& config) { }$/;"	f	class:MotionWindow
saveConfig	build/include/tool/RobotControllerWidget.cpp	/^void RobotControllerWidget::saveConfig(ToolConfig& config) {$/;"	f	class:RobotControllerWidget
saveConfig	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::saveConfig() {$/;"	f	class:UTMainWnd
saveConfig	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::saveConfig(bool) {$/;"	f	class:UTMainWnd
saveConfig	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::saveConfig(double) {$/;"	f	class:UTMainWnd
saveConfig	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::saveConfig(int) {$/;"	f	class:UTMainWnd
saveConfig	build/include/tool/WorldWindow.cpp	/^void WorldWindow::saveConfig(ToolConfig& config) {$/;"	f	class:WorldWindow
saveConfig	tools/UTNaoTool/ConfigWidget.cpp	/^void ConfigWidget::saveConfig() {$/;"	f	class:ConfigWidget
saveConfig	tools/UTNaoTool/ConfigWidget.h	/^    virtual void saveConfig(ToolConfig& config) { }$/;"	f	class:ConfigWidget
saveConfig	tools/UTNaoTool/ConfigWindow.cpp	/^void ConfigWindow::saveConfig() {$/;"	f	class:ConfigWindow
saveConfig	tools/UTNaoTool/ConfigWindow.h	/^    virtual void saveConfig(ToolConfig& config) { }$/;"	f	class:ConfigWindow
saveConfig	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::saveConfig(ToolConfig& config) {$/;"	f	class:FilesWindow
saveConfig	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::saveConfig(ToolConfig& config) {$/;"	f	class:KeyframeWidget
saveConfig	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::saveConfig(ToolConfig& config) {$/;"	f	class:LogSelectWindow
saveConfig	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::saveConfig(ToolConfig& config) {$/;"	f	class:LogWindow
saveConfig	tools/UTNaoTool/MotionWindow.h	/^    void saveConfig(ToolConfig& config) { }$/;"	f	class:MotionWindow
saveConfig	tools/UTNaoTool/RobotControllerWidget.cpp	/^void RobotControllerWidget::saveConfig(ToolConfig& config) {$/;"	f	class:RobotControllerWidget
saveConfig	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::saveConfig() {$/;"	f	class:UTMainWnd
saveConfig	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::saveConfig(bool) {$/;"	f	class:UTMainWnd
saveConfig	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::saveConfig(double) {$/;"	f	class:UTMainWnd
saveConfig	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::saveConfig(int) {$/;"	f	class:UTMainWnd
saveConfig	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::saveConfig(ToolConfig& config) {$/;"	f	class:WorldWindow
saveImages	build/include/tool/VisionWindow.cpp	/^void VisionWindow::saveImages() {$/;"	f	class:VisionWindow
saveImages	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::saveImages() {$/;"	f	class:VisionWindow
saveKickParameters	core/python/PythonModule.cpp	/^void PythonModule::saveKickParameters(const KickParameters& kp) {$/;"	f	class:PythonModule
saveLocalConfig	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::saveLocalConfig() {$/;"	f	class:TeamConfigWindow
saveLocalConfig	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::saveLocalConfig() {$/;"	f	class:TeamConfigWindow
saveLog	build/include/tool/LogEditorWindow.cpp	/^void LogEditorWindow::saveLog() {$/;"	f	class:LogEditorWindow
saveLog	tools/UTNaoTool/LogEditorWindow.cpp	/^void LogEditorWindow::saveLog() {$/;"	f	class:LogEditorWindow
saveLogImages	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::saveLogImages() {$/;"	f	class:IntrinsicCalibrationWidget
saveLogImages	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::saveLogImages() {$/;"	f	class:IntrinsicCalibrationWidget
saveState	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::saveState(char* fileName) {$/;"	f	class:WorldGLWidget
saveState	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::saveState(char* fileName) {$/;"	f	class:WorldGLWidget
saveTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::saveTable(Camera::Type camera) {$/;"	f	class:VisionWindow
saveTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::saveTable(Camera::Type camera) {$/;"	f	class:VisionWindow
saveTableAs	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::saveTableAs(Camera::Type camera) {$/;"	f	class:VisionWindow
saveTableAs	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::saveTableAs(Camera::Type camera) {$/;"	f	class:VisionWindow
saveToFile	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::saveToFile() {$/;"	f	class:AnnotationWidget
saveToFile	core/common/Serializable.cpp	/^void Serializable::saveToFile(std::string file) const {$/;"	f	class:Serializable
saveToFile	core/common/YamlConfig.cpp	/^void YamlConfig::saveToFile(std::string file) const {$/;"	f	class:YamlConfig
saveToFile	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::saveToFile() {$/;"	f	class:AnnotationWidget
save_and_next	lib/lua/src/llex.c	/^#define save_and_next(/;"	d	file:
saveci	lib/lua/src/ldo.h	/^#define saveci(/;"	d
savedpc	lib/lua/src/lstate.h	/^  const Instruction *savedpc;  \/* `savedpc' of current function *\/$/;"	m	struct:lua_State
savedpc	lib/lua/src/lstate.h	/^  const Instruction *savedpc;$/;"	m	struct:CallInfo
savefig	tools/behaviorSim/cma.py	/^    savefig = pylab.savefig   # we would like to be able to use cma.savefig() etc$/;"	v
savestack	lib/lua/src/ldo.h	/^#define savestack(/;"	d
say	core/memory/SpeechBlock.h	/^  void say(std::string text) {$/;"	f	struct:SpeechBlock
sayIP	core/sensor/ButtonModule.cpp	/^void ButtonModule::sayIP() {$/;"	f	class:ButtonModule
sayText	core/motion/rswalk2014/utils/speech.hpp	/^      std::string sayText;$/;"	m	class:Speech
say_text_	core/memory/SpeechBlock.h	/^  bool say_text_;$/;"	m	struct:SpeechBlock
scaleTime	core/math/Spline3D.h	/^  void scaleTime(float start, float end, float scale) {$/;"	f	class:Spline3D
scale_	core/memory/SimEffectorBlock.h	/^  float scale_;$/;"	m	struct:SimEffector
scale_	core/vision/CameraMatrix.h	/^    float fx_, fy_, scale_, cx_, cy_;$/;"	m	class:CameraMatrix
scan_tree	lib/zlib/trees.c	/^local void scan_tree (s, tree, max_code)$/;"	f
scanformat	lib/lua/src/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
schaffer	tools/behaviorSim/cma.py	/^    def schaffer(self, x):$/;"	m	class:FitnessFunctions
schwefelelli	tools/behaviorSim/cma.py	/^    def schwefelelli(self, x):$/;"	m	class:FitnessFunctions
schwefelmult	tools/behaviorSim/cma.py	/^    def schwefelmult(self, x, pen_fac = 1e4):$/;"	m	class:FitnessFunctions
scipy	core/sensor/offline/genInertialFilterMatrices.py	/^import scipy.io$/;"	i
score	build/include/tool/annotations/AnnotationAnalyzer.h	/^    double score;$/;"	m	struct:YUV
score	core/communications/RoboCupGameControlData.h	/^  uint8_t score;                \/\/ team's score$/;"	m	struct:TeamInfo
score	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    double score;$/;"	m	struct:YUV
screenLogLevel	core/memory/TextLogger.h	/^  int screenLogLevel;$/;"	m	class:TextLogger
script	install/fix_autoload.py	/^script = '#!\/bin\/bash\\n\\n'$/;"	v
scriptName	install/fix_autoload.py	/^  scriptName = 'fixAutoload.sh'$/;"	v
scriptPath	install/fix_autoload.py	/^  scriptPath = os.path.join(d,scriptName)$/;"	v
script_path	build/core/generate_block_operations.py	/^script_path = os.path.abspath(inspect.getfile(inspect.currentframe()))$/;"	v
sd	core/common/WorldObject.h	/^  Point2D sd;$/;"	m	class:WorldObject
sd	core/memory/OpponentBlock.h	/^  Point2D loc, sd, vel;$/;"	m	struct:OpponentModel
sd	core/opponents/UKF4.cpp	/^float UKF4::sd(int Xi){$/;"	f	class:UKF4
sdOrientation	core/common/WorldObject.h	/^  AngRad sdOrientation;$/;"	m	class:WorldObject
search	core/python/behaviors/walk_to_center.py	/^    def search(self):$/;"	m	class:Playing.WalkToCenter
search	core/python/behaviors/walk_to_center_2.py	/^    def search(self):$/;"	m	class:Playing.WalkToCenter
searchvar	lib/lua/src/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
sec	core/math/Common.h	/^template <class V> inline V sec(const V& a) {return 1\/cosf(a);}$/;"	f
sec	core/motion/rswalk2014/utils/Timer.hpp	/^      float sec(const timeval& t) {$/;"	f	class:Timer
second	lib/yaml-cpp/src/iterator.cpp	/^	const Node& Iterator::second() const$/;"	f	class:YAML::Iterator
second	lib/yaml-cpp/test/old-api/spectests.cpp	/^			std::string first, second;$/;"	m	struct:Test::Spec::Pair	file:
secondaryState	core/communications/RoboCupGameControlData.h	/^  uint8_t secondaryState;       \/\/ extra state information - (STATE2_NORMAL, STATE2_PENALTYSHOOT, etc)$/;"	m	struct:RoboCupGameControlData
secondaryTime	core/communications/RoboCupGameControlData.h	/^  uint16_t secondaryTime;       \/\/ number of seconds shown as secondary time (remaining ready, until free ball, etc)$/;"	m	struct:RoboCupGameControlData
seconds_since_start	core/memory/FrameInfoBlock.h	/^  double seconds_since_start;$/;"	m	struct:FrameInfoBlock
secsRemaining	core/communications/RoboCupGameControlData.h	/^  uint16_t secsRemaining;       \/\/ estimate of number of seconds remaining in the half$/;"	m	struct:RoboCupGameControlData
secsRemaining	core/memory/GameStateBlock.h	/^  int secsRemaining;$/;"	m	struct:GameStateBlock
secsTillUnpenalised	core/communications/RoboCupGameControlData.h	/^  uint8_t secsTillUnpenalised;  \/\/ estimate of time till unpenalised$/;"	m	struct:RobotInfo
secsTillUnpenalised	core/memory/GameStateBlock.h	/^  int secsTillUnpenalised;$/;"	m	struct:GameStateBlock
sectorsphere	tools/behaviorSim/cma.py	/^    def sectorsphere(self, x):$/;"	m	class:FitnessFunctions
see	core/common/FieldConfiguration.cpp	/^void FieldConfiguration::see(WorldObjectBlock* world_object) const {$/;"	f	class:FieldConfiguration
seed	build/include/tool/WorldConfig.h	/^    int seed;$/;"	m	class:WorldConfig
seed	tools/UTNaoTool/WorldConfig.h	/^    int seed;$/;"	m	class:WorldConfig
seed_	build/include/tool/simulation/LocalizationSimulation.h	/^    int seed_;$/;"	m	class:LocalizationSimulation
seed_	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^    int seed_;$/;"	m	class:LocalizationSimulation
seek	lib/zlib/gzguts.h	/^    int seek;               \/* true if seek request pending *\/$/;"	m	struct:__anon135
seen	core/common/WorldObject.h	/^  bool seen;$/;"	m	class:WorldObject
seen_ball	core/python/behaviors/head_tracking.py	/^seen_ball = False$/;"	v
seen_ball	core/python/behaviors/pid_distance_angle.py	/^seen_ball = False$/;"	v
seffective	lib/alglib/optimization.h	/^    ae_vector seffective;$/;"	m	struct:alglib_impl::__anon79
segCol	build/include/tool/VisionWindow.h	/^  QColor segCol[NUM_COLORS];$/;"	m	class:VisionWindow
segCol	tools/UTNaoTool/VisionWindow.h	/^  QColor segCol[NUM_COLORS];$/;"	m	class:VisionWindow
segColorNames	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      std::string segColorNames[NUM_COLORS];$/;"	m	class:color_classifier::ClassificationWindow
segColors	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      QRgb segColors[NUM_COLORS];$/;"	m	class:color_classifier::ClassificationWindow
segImage	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      SegImage segImage;$/;"	m	class:color_classifier::ClassificationWindow
segImgBottom	core/memory/RobotVisionBlock.h	/^  boost::interprocess::offset_ptr<unsigned char> segImgBottom;$/;"	m	struct:RobotVisionBlock
segImgBottomLocal	core/memory/RobotVisionBlock.h	/^  unsigned char *segImgTopLocal, *segImgBottomLocal;$/;"	m	struct:RobotVisionBlock
segImgLocal_	core/vision/Classifier.h	/^  unsigned char* segImg_, *segImgLocal_;$/;"	m	class:Classifier
segImgTop	core/memory/RobotVisionBlock.h	/^  boost::interprocess::offset_ptr<unsigned char> segImgTop;$/;"	m	struct:RobotVisionBlock
segImgTopLocal	core/memory/RobotVisionBlock.h	/^  unsigned char *segImgTopLocal, *segImgBottomLocal;$/;"	m	struct:RobotVisionBlock
segImg_	core/vision/Classifier.h	/^  unsigned char* segImg_, *segImgLocal_;$/;"	m	class:Classifier
segRGB	build/include/tool/VisionWindow.h	/^  QRgb segRGB[NUM_COLORS];$/;"	m	class:VisionWindow
segRGB	tools/UTNaoTool/VisionWindow.h	/^  QRgb segRGB[NUM_COLORS];$/;"	m	class:VisionWindow
segment	interfaces/sim_spark/Parser.cpp	/^vector<string> Parser::segment(const string &str, const bool &omitEnds){$/;"	f	class:Parser
segmentImage	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::segmentImage(bool useTempColorTable) {$/;"	f	class:color_classifier::ClassificationWindow
selectGetup	core/motion/GetupModule.cpp	/^void GetupModule::selectGetup() {$/;"	f	class:GetupModule
selected	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::selected(Selection* selection){$/;"	f	class:AnnotationWidget
selected	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::selected(Selection* selection){$/;"	f	class:AnnotationWidget
selectedAnnotation_	build/include/tool/AnnotationWidget.h	/^        Annotation *selectedAnnotation_;$/;"	m	class:AnnotationWidget
selectedAnnotation_	tools/UTNaoTool/AnnotationWidget.h	/^        Annotation *selectedAnnotation_;$/;"	m	class:AnnotationWidget
selectedCamera_	build/include/tool/AnnotationWidget.h	/^        Camera::Type selectedCamera_, currentCamera_;$/;"	m	class:AnnotationWidget
selectedCamera_	tools/UTNaoTool/AnnotationWidget.h	/^        Camera::Type selectedCamera_, currentCamera_;$/;"	m	class:AnnotationWidget
selectedColor_	build/include/tool/AnalysisWidget.h	/^        Color selectedColor_;$/;"	m	class:AnalysisWidget
selectedColor_	build/include/tool/AnnotationWidget.h	/^        Color selectedColor_;$/;"	m	class:AnnotationWidget
selectedColor_	tools/UTNaoTool/AnalysisWidget.h	/^        Color selectedColor_;$/;"	m	class:AnalysisWidget
selectedColor_	tools/UTNaoTool/AnnotationWidget.h	/^        Color selectedColor_;$/;"	m	class:AnnotationWidget
selectedPoint	build/include/tool/MotionGLWidget.h	/^  qglviewer::Vec orig, dir, selectedPoint;$/;"	m	class:MotionGLWidget
selectedPoint	tools/UTNaoTool/MotionGLWidget.h	/^  qglviewer::Vec orig, dir, selectedPoint;$/;"	m	class:MotionGLWidget
selectionBoxIndexChanged	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::selectionBoxIndexChanged(const QString& text) {$/;"	f	class:AnnotationWidget
selectionBoxIndexChanged	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::selectionBoxIndexChanged(const QString& text) {$/;"	f	class:AnnotationWidget
selectionColor_	build/include/tool/ImageWidget.h	/^    QColor selectionColor_;$/;"	m	class:ImageWidget
selectionColor_	tools/UTNaoTool/ImageWidget.h	/^    QColor selectionColor_;$/;"	m	class:ImageWidget
selectionMode_	build/include/tool/ImageWidget.h	/^    SelectionMode selectionMode_;$/;"	m	class:ImageWidget
selectionMode_	tools/UTNaoTool/ImageWidget.h	/^    SelectionMode selectionMode_;$/;"	m	class:ImageWidget
selectionStrings	build/include/tool/AnnotationWidget.h	/^        QString colorStrings[NUM_COLORS], selectionStrings[NumSelectionTypes], cameraStrings[2];$/;"	m	class:AnnotationWidget
selectionStrings	tools/UTNaoTool/AnnotationWidget.h	/^        QString colorStrings[NUM_COLORS], selectionStrings[NumSelectionTypes], cameraStrings[2];$/;"	m	class:AnnotationWidget
selectionTypeChanged	build/include/tool/ImageWidget.cpp	/^void ImageWidget::selectionTypeChanged(SelectionType type) {$/;"	f	class:ImageWidget
selectionTypeChanged	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::selectionTypeChanged(SelectionType type) {$/;"	f	class:ImageWidget
selectionType_	build/include/tool/ImageWidget.h	/^    SelectionType selectionType_;$/;"	m	class:ImageWidget
selectionType_	tools/UTNaoTool/ImageWidget.h	/^    SelectionType selectionType_;$/;"	m	class:ImageWidget
selectionVertices_	build/include/tool/ImageWidget.h	/^    std::vector<QPoint> selectionVertices_;$/;"	m	class:ImageWidget
selectionVertices_	tools/UTNaoTool/ImageWidget.h	/^    std::vector<QPoint> selectionVertices_;$/;"	m	class:ImageWidget
selection_	build/include/tool/AnnotationWidget.h	/^        Selection* selection_;$/;"	m	class:SelectionListWidgetItem
selection_	tools/UTNaoTool/AnnotationWidget.h	/^        Selection* selection_;$/;"	m	class:SelectionListWidgetItem
selections_	build/include/tool/ImageWidget.h	/^    std::vector<Selection*> selections_;$/;"	m	class:ImageWidget
selections_	build/include/tool/annotations/Annotation.h	/^        std::vector<Selection*> selections_;$/;"	m	class:Annotation
selections_	tools/UTNaoTool/ImageWidget.h	/^    std::vector<Selection*> selections_;$/;"	m	class:ImageWidget
selections_	tools/UTNaoTool/annotations/Annotation.h	/^        std::vector<Selection*> selections_;$/;"	m	class:Annotation
selectionsort	lib/lua/test/sort.lua	/^function selectionsort(x,n,f)$/;"	f
selectivelySendStiffness	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::selectivelySendStiffness() {$/;"	f	class:RSWalkModule2014
self	core/common/RobotConfig.h	/^    int robot_id, team, self, role;$/;"	m	class:RobotConfig
selfTest	core/imageCapture/DummyCamera.h	/^  bool selfTest() {return true;}$/;"	f	class:DummyCamera
selfTest	core/imageCapture/NaoCamera.cpp	/^bool NaoCamera::selfTest(){$/;"	f	class:NaoCamera
self_	build/include/tool/simulation/SimulatedPlayer.h	/^  int self_;$/;"	m	class:SimulatedPlayer
self_	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  int self_;$/;"	m	class:SimulatedPlayer
selfmatch	lib/alglib/alglibmisc.h	/^    ae_bool selfmatch;$/;"	m	struct:alglib_impl::__anon25
sem	interfaces/shared_motion/main.cpp	/^boost::interprocess::named_semaphore *sem;$/;"	v
semilogy	tools/behaviorSim/cma.py	/^                 axis, title, text$/;"	i
semilogy	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
seminfo	lib/lua/src/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token
send	core/communications/UDPWrapper.cpp	/^bool UDPWrapper::send(const boost::asio::const_buffers_1 &buffers,std::size_t size) {$/;"	f	class:UDPWrapper
send	core/communications/UDPWrapper.h	/^  bool send(const T& msg) {$/;"	f	class:UDPWrapper
send	core/communications/UDPWrapper.h	/^  bool send(const char *buffer, std::size_t size) {$/;"	f	class:UDPWrapper
sendAll	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendAll(bool verbose) {$/;"	f	class:FilesWindow
sendAll	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendAll(bool verbose) {$/;"	f	class:FilesWindow
sendAutoloadFile	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendAutoloadFile(bool verbose) {$/;"	f	class:FilesWindow
sendAutoloadFile	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendAutoloadFile(bool verbose) {$/;"	f	class:FilesWindow
sendBinary	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendBinary(bool verbose) {$/;"	f	class:FilesWindow
sendBinary	build/include/tool/ProcessExecutor.cpp	/^void PE::sendBinary(QString ip, bool verbose) {$/;"	f	class:PE
sendBinary	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendBinary(bool verbose) {$/;"	f	class:FilesWindow
sendBinary	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::sendBinary(QString ip, bool verbose) {$/;"	f	class:PE
sendButton	build/include/tool/LogSelectWindow.h	/^    QPushButton* sendButton;$/;"	m	class:LogSelectWindow
sendButton	tools/UTNaoTool/LogSelectWindow.h	/^    QPushButton* sendButton;$/;"	m	class:LogSelectWindow
sendCoachUDP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::sendCoachUDP() {$/;"	f	class:CommunicationModule
sendColorTable	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendColorTable(bool verbose) {$/;"	f	class:FilesWindow
sendColorTable	build/include/tool/ProcessExecutor.cpp	/^void PE::sendColorTable(QString ip, bool verbose) {$/;"	f	class:PE
sendColorTable	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendColorTable(bool verbose) {$/;"	f	class:FilesWindow
sendColorTable	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::sendColorTable(QString ip, bool verbose) {$/;"	f	class:PE
sendCommand	build/include/tool/RobotControllerWidget.cpp	/^void RobotControllerWidget::sendCommand() {$/;"	f	class:RobotControllerWidget
sendCommand	tools/UTNaoTool/RobotControllerWidget.cpp	/^void RobotControllerWidget::sendCommand() {$/;"	f	class:RobotControllerWidget
sendConfigFiles	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendConfigFiles(bool verbose) {$/;"	f	class:FilesWindow
sendConfigFiles	build/include/tool/ProcessExecutor.cpp	/^void PE::sendConfigFiles(QString ip, bool verbose) {$/;"	f	class:PE
sendConfigFiles	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendConfigFiles(bool verbose) {$/;"	f	class:FilesWindow
sendConfigFiles	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::sendConfigFiles(QString ip, bool verbose) {$/;"	f	class:PE
sendCopyRobotCommand	build/include/tool/FilesWindow.cpp	/^bool FilesWindow::sendCopyRobotCommand(QString command, bool verbose) {$/;"	f	class:FilesWindow
sendCopyRobotCommand	build/include/tool/ProcessExecutor.cpp	/^void PE::sendCopyRobotCommand(QString ip, QString command, bool verbose, PE::Callback callback) {$/;"	f	class:PE
sendCopyRobotCommand	tools/UTNaoTool/FilesWindow.cpp	/^bool FilesWindow::sendCopyRobotCommand(QString command, bool verbose) {$/;"	f	class:FilesWindow
sendCopyRobotCommand	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::sendCopyRobotCommand(QString ip, QString command, bool verbose, PE::Callback callback) {$/;"	f	class:PE
sendCopyRobotCommandSync	build/include/tool/ProcessExecutor.cpp	/^bool PE::sendCopyRobotCommandSync(QString ip, QString command, bool verbose, PE::Callback callback) {$/;"	f	class:PE
sendCopyRobotCommandSync	tools/UTNaoTool/ProcessExecutor.cpp	/^bool PE::sendCopyRobotCommandSync(QString ip, QString command, bool verbose, PE::Callback callback) {$/;"	f	class:PE
sendEverything	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendEverything(bool verbose) {$/;"	f	class:FilesWindow
sendEverything	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendEverything(bool verbose) {$/;"	f	class:FilesWindow
sendFile	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendFile(QString from, QString to, QString name){$/;"	f	class:FilesWindow
sendFile	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendFile(QString from, QString to, QString name){$/;"	f	class:FilesWindow
sendGameControllerUDP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::sendGameControllerUDP() {$/;"	f	class:CommunicationModule
sendInterface	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendInterface(bool verbose) {$/;"	f	class:FilesWindow
sendInterface	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendInterface(bool verbose) {$/;"	f	class:FilesWindow
sendJointCommands	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::sendJointCommands(bool send, AL::ALValue &commands, float time, float angles[NUM_JOINTS], int jointIndStart, int numJoints) {$/;"	f	class:DCMWrapper
sendLogSettings	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::sendLogSettings() {$/;"	f	class:LogSelectWindow
sendLogSettings	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::sendLogSettings(QString ip){$/;"	f	class:LogSelectWindow
sendLogSettings	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::sendLogSettings() {$/;"	f	class:LogSelectWindow
sendLogSettings	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::sendLogSettings(QString ip){$/;"	f	class:LogSelectWindow
sendLua	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendLua(bool verbose) {$/;"	f	class:FilesWindow
sendLua	build/include/tool/ProcessExecutor.cpp	/^void PE::sendLua(QString ip, bool verbose) {$/;"	f	class:PE
sendLua	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendLua(bool verbose) {$/;"	f	class:FilesWindow
sendLua	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::sendLua(QString ip, bool verbose) {$/;"	f	class:PE
sendMessage	core/communications/StreamingMessage.h	/^  bool sendMessage(tcp::socket &sock, unsigned char *data, unsigned long n) {$/;"	f	class:StreamingMessage
sendMotion	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendMotion(bool verbose) {$/;"	f	class:FilesWindow
sendMotion	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendMotion(bool verbose) {$/;"	f	class:FilesWindow
sendMotionFiles	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendMotionFiles(bool verbose) {$/;"	f	class:FilesWindow
sendMotionFiles	build/include/tool/ProcessExecutor.cpp	/^void PE::sendMotionFiles(QString ip, bool verbose) {$/;"	f	class:PE
sendMotionFiles	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendMotionFiles(bool verbose) {$/;"	f	class:FilesWindow
sendMotionFiles	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::sendMotionFiles(QString ip, bool verbose) {$/;"	f	class:PE
sendMp3Files	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendMp3Files() {$/;"	f	class:FilesWindow
sendMp3Files	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendMp3Files() {$/;"	f	class:FilesWindow
sendNaoqiCommand	build/include/tool/ProcessExecutor.cpp	/^void PE::sendNaoqiCommand(QString ip, QString command) {$/;"	f	class:PE
sendNaoqiCommand	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::sendNaoqiCommand(QString ip, QString command) {$/;"	f	class:PE
sendParams	build/include/tool/CameraWindow.cpp	/^void CameraWindow::sendParams() {$/;"	f	class:CameraWindow
sendParams	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::sendParams() {$/;"	f	class:CameraWindow
sendPython	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendPython(bool verbose) {$/;"	f	class:FilesWindow
sendPython	build/include/tool/ProcessExecutor.cpp	/^void PE::sendPython(QString ip, bool verbose) {$/;"	f	class:PE
sendPython	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendPython(bool verbose) {$/;"	f	class:FilesWindow
sendPython	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::sendPython(QString ip, bool verbose) {$/;"	f	class:PE
sendRobotConfig	build/include/tool/ProcessExecutor.cpp	/^void PE::sendRobotConfig(QString ip, RobotConfig config, bool verbose) {$/;"	f	class:PE
sendRobotConfig	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::sendRobotConfig(QString ip, RobotConfig config, bool verbose) {$/;"	f	class:PE
sendSimpleConfig	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendSimpleConfig(bool verbose) {$/;"	f	class:FilesWindow
sendSimpleConfig	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendSimpleConfig(bool verbose) {$/;"	f	class:FilesWindow
sendTCP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::sendTCP() {$/;"	f	class:CommunicationModule
sendTeamUDP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::sendTeamUDP() {$/;"	f	class:CommunicationModule
sendToActuators	interfaces/nao/src/almotionwrapper.cpp	/^void ALMotionWrapper::sendToActuators(JointCommandBlock *raw_joint_commands) {$/;"	f	class:ALMotionWrapper
sendToActuators	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::sendToActuators(JointCommandBlock *raw_joint_commands, JointBlock *raw_joint_angles_) {$/;"	f	class:DCMWrapper
sendToLEDs	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::sendToLEDs(LEDBlock *led_block) {$/;"	f	class:DCMWrapper
sendToSender	core/communications/UDPWrapper.cpp	/^bool UDPWrapper::sendToSender(const boost::asio::const_buffers_1 &buffers,std::size_t size) {$/;"	f	class:UDPWrapper
sendToSender	core/communications/UDPWrapper.h	/^  bool sendToSender(const T& msg) {$/;"	f	class:UDPWrapper
sendToSender	core/communications/UDPWrapper.h	/^  bool sendToSender(const char *buffer, std::size_t size) {$/;"	f	class:UDPWrapper
sendToolRequest	core/communications/CommunicationModule.cpp	/^void CommunicationModule::sendToolRequest(ToolPacket message) {$/;"	f	class:CommunicationModule
sendToolResponse	core/communications/CommunicationModule.cpp	/^void CommunicationModule::sendToolResponse(ToolPacket message) {$/;"	f	class:CommunicationModule
sendUDPCommand	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::sendUDPCommand(QString address, ToolPacket packet) {$/;"	f	class:UTMainWnd
sendUDPCommand	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::sendUDPCommand(QString address, ToolPacket packet) {$/;"	f	class:UTMainWnd
sendUDPCommandToCurrent	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::sendUDPCommandToCurrent(ToolPacket packet) {$/;"	f	class:UTMainWnd
sendUDPCommandToCurrent	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::sendUDPCommandToCurrent(ToolPacket packet) {$/;"	f	class:UTMainWnd
sendVision	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendVision(bool verbose) {$/;"	f	class:FilesWindow
sendVision	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendVision(bool verbose) {$/;"	f	class:FilesWindow
sendWalk	interfaces/nao/src/almotionwrapper.cpp	/^void ALMotionWrapper::sendWalk(WalkRequestBlock *walk_request, WalkInfoBlock *walk_info) {$/;"	f	class:ALMotionWrapper
sendWalkParameters	interfaces/nao/src/almotionwrapper.cpp	/^void ALMotionWrapper::sendWalkParameters(ALWalkParamBlock *params) {$/;"	f	class:ALMotionWrapper
sendWireless	build/include/tool/FilesWindow.cpp	/^void FilesWindow::sendWireless(bool verbose) {$/;"	f	class:FilesWindow
sendWireless	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::sendWireless(bool verbose) {$/;"	f	class:FilesWindow
send_all_trees	lib/zlib/trees.c	/^local void send_all_trees(s, lcodes, dcodes, blcodes)$/;"	f
send_arm_angles_	core/memory/JointCommandBlock.h	/^  bool send_arm_angles_;$/;"	m	struct:JointCommandBlock
send_back_standup_	core/memory/JointCommandBlock.h	/^  bool send_back_standup_;$/;"	m	struct:JointCommandBlock
send_bits	lib/zlib/trees.c	/^#define send_bits(/;"	d	file:
send_bits	lib/zlib/trees.c	/^local void send_bits(s, value, length)$/;"	f
send_body_angles_	core/memory/JointCommandBlock.h	/^  bool send_body_angles_;$/;"	m	struct:JointCommandBlock
send_code	lib/zlib/trees.c	/^#  define send_code(/;"	d	file:
send_head_pitch_angle_	core/memory/JointCommandBlock.h	/^  bool send_head_pitch_angle_;$/;"	m	struct:JointCommandBlock
send_head_yaw_angle_	core/memory/JointCommandBlock.h	/^  bool send_head_yaw_angle_;$/;"	m	struct:JointCommandBlock
send_interval_	core/sonar/SonarModule.h	/^  float send_interval_;$/;"	m	class:SonarModule
send_leds_	core/memory/LEDBlock.h	/^  bool send_leds_;$/;"	m	struct:LEDBlock
send_len_	core/communications/StreamingMessage.h	/^  unsigned long send_len_;$/;"	m	class:StreamingMessage
send_params_	core/memory/ALWalkParamBlock.h	/^  bool send_params_;$/;"	m	struct:ALWalkParamBlock
send_params_	core/memory/KickParamBlock.h	/^  bool send_params_;$/;"	m	struct:KickParamBlock
send_params_	core/memory/WalkParamBlock.h	/^  bool send_params_;$/;"	m	struct:WalkParamBlock
send_sonar_command_	core/memory/JointCommandBlock.h	/^  bool send_sonar_command_;$/;"	m	struct:JointCommandBlock
send_stiffness_	core/memory/JointCommandBlock.h	/^  bool send_stiffness_;$/;"	m	struct:JointCommandBlock
send_tree	lib/zlib/trees.c	/^local void send_tree (s, tree, max_code)$/;"	f
senderAddress	core/communications/UDPWrapper.cpp	/^boost::asio::ip::address UDPWrapper::senderAddress() {$/;"	f	class:UDPWrapper
sender_	core/communications/UDPWrapper.h	/^  udp::endpoint sender_;$/;"	m	class:UDPWrapper
sensor	core/memory/MemoryCache.h	/^    SensorBlock* sensor;$/;"	m	class:MemoryCache
sensor	core/vision/VisionBlocks.h	/^    SensorBlock*& sensor;$/;"	m	class:VisionBlocks
sensorBuffer	core/motion/rswalk2014/RSWalkModule2014.h	/^	std::vector<SensorValues> sensorBuffer;$/;"	m	class:RSWalkModule2014
sensorCodes	core/motion/rswalk2014/utils/body.hpp	/^   const SensorCode sensorCodes[] = {$/;"	m	namespace:RSSensors
sensorLabels	build/include/tool/SensorWindow.h	/^  QLabel* sensorLabels;$/;"	m	class:SensorWindow
sensorLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* sensorLabels;$/;"	m	class:SensorWindow
sensorLeftSonarLabels	build/include/tool/SensorWindow.h	/^  QLabel* sensorLeftSonarLabels;$/;"	m	class:SensorWindow
sensorLeftSonarLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* sensorLeftSonarLabels;$/;"	m	class:SensorWindow
sensorNames	core/motion/rswalk2014/utils/body.hpp	/^   const std::string sensorNames[] = {$/;"	m	namespace:RSSensors
sensorRightSonarLabels	build/include/tool/SensorWindow.h	/^  QLabel* sensorRightSonarLabels;$/;"	m	class:SensorWindow
sensorRightSonarLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* sensorRightSonarLabels;$/;"	m	class:SensorWindow
sensorValues	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      SensorValues sensorValues;$/;"	m	class:Kinematics
sensorValues_	core/common/RobotCalibration.h	/^    float sensorValues_[NUM_SENSORS];$/;"	m	class:RobotCalibration
sensorWnd_	build/include/tool/UTMainWnd.h	/^  SensorWindow* sensorWnd_;$/;"	m	class:UTMainWnd
sensorWnd_	tools/UTNaoTool/UTMainWnd.h	/^  SensorWindow* sensorWnd_;$/;"	m	class:UTMainWnd
sensor_	core/MotionCore.h	/^  SensorModule *sensor_;$/;"	m	class:MotionCore
sensor_block_	build/include/tool/VisionWindow.h	/^  SensorBlock* sensor_block_;$/;"	m	class:VisionWindow
sensor_block_	tools/UTNaoTool/VisionWindow.h	/^  SensorBlock* sensor_block_;$/;"	m	class:VisionWindow
sensor_calibration_	build/include/tool/MotionGLWidget.h	/^  SensorCalibrationBlock* sensor_calibration_;$/;"	m	class:MotionGLWidget
sensor_calibration_	core/sensor/SensorModule.h	/^  SensorCalibrationBlock *sensor_calibration_;$/;"	m	class:SensorModule
sensor_calibration_	tools/UTNaoTool/MotionGLWidget.h	/^  SensorCalibrationBlock* sensor_calibration_;$/;"	m	class:MotionGLWidget
sensor_com_acc_buffer_	build/include/tool/PlotWindow.h	/^  RingBufferWithSum<float,3> sensor_com_acc_buffer_;$/;"	m	class:PlotWindow
sensor_com_acc_buffer_	tools/UTNaoTool/PlotWindow.h	/^  RingBufferWithSum<float,3> sensor_com_acc_buffer_;$/;"	m	class:PlotWindow
sensor_keys_	interfaces/nao/src/naointerface.h	/^    std::vector<std::string> sensor_keys_;$/;"	m	class:naointerface
sensor_pen_	core/memory/WalkEngineBlock.h	/^  Vector3<float> sensor_pen_;$/;"	m	struct:WalkEngineBlock
sensor_values_	core/InterpreterModule.h	/^    std::vector<float> joint_values_, sensor_values_, joint_stiffness_;$/;"	m	class:InterpreterModule
sensor_values_	interfaces/nao/src/naointerface.h	/^    std::vector<float> sensor_values_;$/;"	m	class:naointerface
sensor_zmp_	core/memory/WalkEngineBlock.h	/^  Vector2<float> sensor_zmp_;$/;"	m	struct:WalkEngineBlock
sensors	core/motion/rswalk2014/types/SensorValues.hpp	/^   float sensors[RSSensors::NUMBER_OF_SENSORS];$/;"	m	struct:SensorValues
sensors	core/python/behaviors/custom_kick.py	/^from memory import sensors, walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles, vision_frame_info$/;"	i
sensors	core/python/memory.py	/^  def sensors(): return core.pythonC.sensors_$/;"	f	function:init
sensors	core/python/util.py	/^  game_state, behavior_mem$/;"	i
sensors_	build/include/tool/MotionGLWidget.h	/^  SensorBlock* sensors_;$/;"	m	class:MotionGLWidget
sensors_	build/include/tool/MotionSimulation.h	/^  SensorBlock *sensors_;$/;"	m	class:MotionSimulation
sensors_	core/InterpreterModule.h	/^    SensorBlock *sensors_;$/;"	m	class:InterpreterModule
sensors_	core/kinematics/KinematicsModule.h	/^  SensorBlock* sensors_;$/;"	m	class:KinematicsModule
sensors_	core/motion/MotionModule.h	/^  SensorBlock *sensors_;$/;"	m	class:MotionModule
sensors_	core/motion/SpecialMotionModule.h	/^  SensorBlock *sensors_;$/;"	m	class:SpecialMotionModule
sensors_	core/motion/rswalk2014/RSWalkModule2014.h	/^        SensorBlock *sensors_;$/;"	m	class:RSWalkModule2014
sensors_	core/sensor/ButtonModule.h	/^  SensorBlock *sensors_;$/;"	m	class:ButtonModule
sensors_	core/sensor/SensorModule.h	/^  SensorBlock *sensors_;$/;"	m	class:SensorModule
sensors_	core/sonar/SonarModule.h	/^  SensorBlock *sensors_;$/;"	m	class:SonarModule
sensors_	core/vision/VisionModule.h	/^  SensorBlock *sensors_;$/;"	m	class:VisionModule
sensors_	tools/UTNaoTool/MotionGLWidget.h	/^  SensorBlock* sensors_;$/;"	m	class:MotionGLWidget
sensors_	tools/UTNaoTool/MotionSimulation.h	/^  SensorBlock *sensors_;$/;"	m	class:MotionSimulation
sensors_tilt_roll_	core/memory/BodyModelBlock.h	/^  TiltRoll sensors_tilt_roll_;$/;"	m	struct:BodyModelBlock
sent_command_	core/memory/KickModuleBlock.h	/^  bool sent_command_;$/;"	m	struct:KickModuleBlock
sent_steady_state_command_	core/memory/KickModuleBlock.h	/^  bool sent_steady_state_command_;$/;"	m	struct:KickModuleBlock
sentinel	lib/lua/src/loadlib.c	/^#define sentinel	/;"	d	file:
sentinel_	lib/lua/src/loadlib.c	/^static const int sentinel_ = 0;$/;"	v	file:
sepNames	build/luaswig/generateSwig.py	/^sepNames = [$/;"	v
sepPatterns	build/luaswig/generateSwig.py	/^sepPatterns = [$/;"	v
separate	core/memory/StreamBuffer.cpp	/^std::vector<StreamBuffer> StreamBuffer::separate() const {$/;"	f	class:StreamBuffer
separate	core/memory/StreamBuffer.cpp	/^void StreamBuffer::separate(const StreamBuffer& buffer, std::list<StreamBuffer>& separated) {$/;"	f	class:StreamBuffer
separate	core/memory/StreamBuffer.cpp	/^void StreamBuffer::separate(const StreamBuffer& buffer, std::vector<StreamBuffer>& separated) {$/;"	f	class:StreamBuffer
seqIter	lib/yaml-cpp/src/iterpriv.h	/^		std::vector <Node *>::const_iterator seqIter;$/;"	m	struct:YAML::IterPriv
sequence	core/communications/SPLCoachMessage.h	/^  uint8_t sequence;      \/\/ sequence number of this message$/;"	m	struct:SPLCoachMessage
sequenceMarker	lib/yaml-cpp/src/contrib/graphbuilderadapter.cpp	/^  int GraphBuilderAdapter::ContainerFrame::sequenceMarker;$/;"	m	class:YAML::GraphBuilderAdapter::ContainerFrame	file:
sequenceMarker	lib/yaml-cpp/src/contrib/graphbuilderadapter.h	/^      static int sequenceMarker;$/;"	m	struct:YAML::GraphBuilderAdapter::ContainerFrame
sequence_	core/motion/KickModule.h	/^    KeyframeSequence* sequence_;$/;"	m	class:KickModule
sequence_file	build/include/tool/KeyframeConfig.h	/^    std::string sequence_file;$/;"	m	class:KeyframeConfig
sequence_file	tools/UTNaoTool/KeyframeConfig.h	/^    std::string sequence_file;$/;"	m	class:KeyframeConfig
serialization	core/motion/rswalk2014/types/Point.hpp	/^   namespace serialization {$/;"	n	namespace:boost
serialization	core/motion/rswalk2014/types/boostSerializationEigenTypes.hpp	/^   namespace serialization {$/;"	n	namespace:boost
serialize	build/include/tool/KeyframeConfig.cpp	/^void KeyframeConfig::serialize(YAML::Emitter& emitter) const {$/;"	f	class:KeyframeConfig
serialize	build/include/tool/RobotControllerConfig.h	/^    void serialize(YAML::Emitter& emitter) const {$/;"	f	class:RobotControllerConfig
serialize	build/include/tool/SimulatorConfig.cpp	/^void SimulatorConfig::serialize(YAML::Emitter& emitter) const {$/;"	f	class:SimulatorConfig
serialize	build/include/tool/ToolConfig.cpp	/^void ToolConfig::serialize(YAML::Emitter& emitter) const {$/;"	f	class:ToolConfig
serialize	build/include/tool/WorldConfig.h	/^    void serialize(YAML::Emitter& emitter) const {$/;"	f	class:WorldConfig
serialize	build/include/tool/annotations/Annotation.cpp	/^void Annotation::serialize(YAML::Emitter& emitter) const {$/;"	f	class:Annotation
serialize	build/include/tool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::serialize(YAML::Emitter& emitter) const {$/;"	f	class:AnnotationGroup
serialize	build/include/tool/annotations/LocalizationAnnotation.cpp	/^void LocalizationAnnotation::serialize(YAML::Emitter& emitter) const {$/;"	f	class:LocalizationAnnotation
serialize	build/include/tool/calibration/JointDataset.cpp	/^void JointDataset::serialize(YAML::Emitter& emitter) const {$/;"	f	class:JointDataset
serialize	build/include/tool/calibration/JointDataset.cpp	/^void JointMeasurement::serialize(YAML::Emitter& emitter) const {$/;"	f	class:JointMeasurement
serialize	build/include/tool/simulation/SimulationPath.cpp	/^void SimulationPath::serialize(YAML::Emitter& emitter) const {$/;"	f	class:SimulationPath
serialize	core/common/FieldConfiguration.cpp	/^void BeliefConfiguration::serialize(YAML::Emitter& emitter) const {$/;"	f	class:BeliefConfiguration
serialize	core/common/FieldConfiguration.cpp	/^void FieldConfiguration::serialize(YAML::Emitter& emitter) const {$/;"	f	class:FieldConfiguration
serialize	core/common/FieldConfiguration.cpp	/^void ObjectConfiguration::serialize(YAML::Emitter& emitter) const {$/;"	f	class:ObjectConfiguration
serialize	core/common/Keyframe.cpp	/^void Keyframe::serialize(YAML::Emitter& emitter) const {$/;"	f	class:Keyframe
serialize	core/common/Keyframe.cpp	/^void KeyframeSequence::serialize(YAML::Emitter& emitter) const {$/;"	f	class:KeyframeSequence
serialize	core/common/RobotCalibration.cpp	/^void RobotCalibration::serialize(YAML::Emitter& emitter) const {$/;"	f	class:RobotCalibration
serialize	core/common/RobotConfig.cpp	/^void RobotConfig::serialize(YAML::Emitter& emitter) const {$/;"	f	class:RobotConfig
serialize	core/common/Serializable.h	/^    void serialize(std::ostream& os) const {$/;"	f	class:Serializable
serialize	core/common/TeamConfig.cpp	/^void TeamConfig::serialize(YAML::Emitter& emitter) const {$/;"	f	class:TeamConfig
serialize	core/memory/ImageBlock.cpp	/^void ImageBlock::serialize(StreamBuffer& buffer, std::string data_dir) {$/;"	f	class:ImageBlock
serialize	core/memory/LocalizationBlock.cpp	/^void LocalizationBlock::serialize(StreamBuffer& buffer, std::string) {$/;"	f	class:LocalizationBlock
serialize	core/memory/LogMetadata.cpp	/^void LogMetadata::serialize(YAML::Emitter& emitter) const {$/;"	f	class:LogMetadata
serialize	core/memory/MemoryBlock.cpp	/^void MemoryBlock::serialize(StreamBuffer& buffer) {$/;"	f	class:MemoryBlock
serialize	core/memory/RobotVisionBlock.cpp	/^void RobotVisionBlock::serialize(StreamBuffer& buffer, std::string) {$/;"	f	class:RobotVisionBlock
serialize	core/motion/rswalk2014/GyroConfig.cpp	/^void GyroConfig::serialize(YAML::Emitter& emitter) const {$/;"	f	class:GyroConfig
serialize	core/motion/rswalk2014/PendulumModel.hpp	/^   void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:PendulumModel
serialize	core/motion/rswalk2014/perception/kinematics/Parameters.hpp	/^      void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	class:Parameters
serialize	core/motion/rswalk2014/types/AbsCoord.hpp	/^   void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:AbsCoord
serialize	core/motion/rswalk2014/types/ActionCommand.hpp	/^      void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:ActionCommand::All
serialize	core/motion/rswalk2014/types/ActionCommand.hpp	/^      void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:ActionCommand::Body
serialize	core/motion/rswalk2014/types/ActionCommand.hpp	/^      void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:ActionCommand::Head
serialize	core/motion/rswalk2014/types/ActionCommand.hpp	/^      void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:ActionCommand::LED
serialize	core/motion/rswalk2014/types/ActionCommand.hpp	/^      void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:ActionCommand::rgb
serialize	core/motion/rswalk2014/types/BBox.hpp	/^   void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:BBox
serialize	core/motion/rswalk2014/types/JointValues.hpp	/^   void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:JointValues
serialize	core/motion/rswalk2014/types/Odometry.hpp	/^   void serialize(Archive &ar, const unsigned int file_version)$/;"	f	struct:Odometry
serialize	core/motion/rswalk2014/types/Point.hpp	/^      void serialize(Archive & ar, Point& p, const unsigned int version)$/;"	f	namespace:boost::serialization
serialize	core/motion/rswalk2014/types/Point.hpp	/^      void serialize(Archive & ar, PointF& p, const unsigned int version)$/;"	f	namespace:boost::serialization
serialize	core/motion/rswalk2014/types/PostInfo.hpp	/^   void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:PostInfo
serialize	core/motion/rswalk2014/types/SensorValues.hpp	/^   void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	struct:SensorValues
serialize	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      void serialize(Archive &ar, const unsigned int file_version) {$/;"	f	class:XYZ_Coord
serialize	core/motion/rswalk2014/types/boostSerializationEigenTypes.hpp	/^      void serialize(Archive &ar, Eigen::Matrix<float, 3, 3> &var, const unsigned int version) {$/;"	f	namespace:boost::serialization
serialize	core/motion/rswalk2014/types/boostSerializationEigenTypes.hpp	/^      void serialize(Archive &ar, Eigen::Matrix<float, 7, 1> &vec, const unsigned int version) {$/;"	f	namespace:boost::serialization
serialize	core/motion/rswalk2014/types/boostSerializationEigenTypes.hpp	/^      void serialize(Archive &ar, Eigen::Matrix<float, 7, 7> &var, const unsigned int version) {$/;"	f	namespace:boost::serialization
serialize	core/motion/rswalk2014/types/boostSerializationEigenTypes.hpp	/^      void serialize(Archive &ar, Eigen::Vector3f &vec, const unsigned int version) {$/;"	f	namespace:boost::serialization
serialize	tools/UTNaoTool/KeyframeConfig.cpp	/^void KeyframeConfig::serialize(YAML::Emitter& emitter) const {$/;"	f	class:KeyframeConfig
serialize	tools/UTNaoTool/RobotControllerConfig.h	/^    void serialize(YAML::Emitter& emitter) const {$/;"	f	class:RobotControllerConfig
serialize	tools/UTNaoTool/SimulatorConfig.cpp	/^void SimulatorConfig::serialize(YAML::Emitter& emitter) const {$/;"	f	class:SimulatorConfig
serialize	tools/UTNaoTool/ToolConfig.cpp	/^void ToolConfig::serialize(YAML::Emitter& emitter) const {$/;"	f	class:ToolConfig
serialize	tools/UTNaoTool/WorldConfig.h	/^    void serialize(YAML::Emitter& emitter) const {$/;"	f	class:WorldConfig
serialize	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::serialize(YAML::Emitter& emitter) const {$/;"	f	class:Annotation
serialize	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^void AnnotationGroup::serialize(YAML::Emitter& emitter) const {$/;"	f	class:AnnotationGroup
serialize	tools/UTNaoTool/annotations/LocalizationAnnotation.cpp	/^void LocalizationAnnotation::serialize(YAML::Emitter& emitter) const {$/;"	f	class:LocalizationAnnotation
serialize	tools/UTNaoTool/calibration/JointDataset.cpp	/^void JointDataset::serialize(YAML::Emitter& emitter) const {$/;"	f	class:JointDataset
serialize	tools/UTNaoTool/calibration/JointDataset.cpp	/^void JointMeasurement::serialize(YAML::Emitter& emitter) const {$/;"	f	class:JointMeasurement
serialize	tools/UTNaoTool/simulation/SimulationPath.cpp	/^void SimulationPath::serialize(YAML::Emitter& emitter) const {$/;"	f	class:SimulationPath
serializeMember	core/common/Serializable.h	/^      void serializeMember(const std::list<T>& member) const {$/;"	f	class:Serializable
serializeMember	core/common/Serializable.h	/^      void serializeMember(const std::vector<T>& member) const {$/;"	f	class:Serializable
serializeMember	core/common/Serializable.h	/^    void serializeMember(const Serializable& member) const {$/;"	f	class:Serializable
serializeMember	core/common/Serializable.h	/^    void serializeMember(const Serializable* const& member) const {$/;"	f	class:Serializable
serializeMember	core/common/Serializable.h	/^    void serializeMember(const Serializable*& member) const {$/;"	f	class:Serializable
serializeMember	core/common/Serializable.h	/^    void serializeMember(const std::string& member) const {$/;"	f	class:Serializable
serializePrimitiveVector	core/common/Serializable.h	/^      void serializePrimitiveVector(const std::vector<T>& member) const {$/;"	f	class:Serializable
serializedlen	lib/alglib/dataanalysis.h	/^    ae_int_t serializedlen;$/;"	m	struct:alglib_impl::__anon50
serializedmlp	lib/alglib/dataanalysis.h	/^    ae_vector serializedmlp;$/;"	m	struct:alglib_impl::__anon50
server	build/include/tool/UTMainWnd.cpp	/^void server(UTMainWnd *main) {$/;"	f
server	core/communications/ThreadedUDPSocket.h	/^  struct sockaddr_in server;$/;"	m	class:ThreadedUDPSocket	typeref:struct:ThreadedUDPSocket::sockaddr_in
server	tools/UTNaoTool/UTMainWnd.cpp	/^void server(UTMainWnd *main) {$/;"	f
server_	core/memory/SharedMemory.h	/^  bool server_;$/;"	m	class:SharedMemory
set	core/common/MassCalibration.h	/^		void set(float m, float x, float y, float z)$/;"	f	class:MassCalibration::MassInfo
set	core/math/Spline3D.h	/^  void set(int num_pts, double times[], double xs[], double ys[], double zs[], bool use_akima_spline) {$/;"	f	class:Spline3D
set	core/memory/DelayedLocalizationBlock.h	/^  void set(const Pose2D &nestimatedPose, float nconf) {$/;"	f	struct:DelayedLocalizationBlock
set	core/memory/KickRequestBlock.h	/^  void set(Kick::Type kick, Kick::Leg leg, float desired_angle, float desired_distance) {$/;"	f	struct:KickRequestBlock
set	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::set(Motion m, Pose2D speed, bool percentage_speed, bool pedantic) {$/;"	f	class:WalkRequestBlock
set	core/motion/BHWalkParameters.h	/^  bool set;$/;"	m	struct:BHWalkParameters
set	lib/yaml-cpp/src/setting.h	/^	inline std::auto_ptr <SettingChangeBase> Setting<T>::set(const T& value) {$/;"	f	class:YAML::Setting
set	tools/behaviorSim/cma.py	/^    def set(self, dic, val=None, warn=True):$/;"	m	class:Options
set	tools/behaviorSim/cma.py	/^    def set(self, opts, popsize=None, ccovfac=1, verbose=True):$/;"	m	class:CMAParameters
set2	lib/lua/src/ltablib.c	/^static void set2 (lua_State *L, int i, int j) {$/;"	f	file:
set2bits	lib/lua/src/lgc.h	/^#define set2bits(/;"	d
setAllDisplayOptions	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::setAllDisplayOptions(bool value) {$/;"	f	class:MotionGLWidget
setAllDisplayOptions	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::setAllDisplayOptions(bool value) {$/;"	f	class:MotionGLWidget
setAllStiffness	core/memory/JointCommandBlock.h	/^  void setAllStiffness(float target, float time) {$/;"	f	struct:JointCommandBlock
setAllUnevaluated	core/memory/BehaviorBlock.h	/^  void setAllUnevaluated(){$/;"	f	struct:BehaviorBlock
setAngleKick	core/memory/KickRequestBlock.h	/^  void setAngleKick(Kick::Leg leg, float desired_angle, float desired_distance) {$/;"	f	struct:KickRequestBlock
setAnnotations	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::setAnnotations(std::vector<Annotation*> annotations){$/;"	f	class:AnalysisWidget
setAnnotations	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setAnnotations(std::vector<Annotation*> annotations){$/;"	f	class:ClassificationWidget
setAnnotations	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::setAnnotations(AnnotationGroup* annotations) {$/;"	f	class:GLDrawer
setAnnotations	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::setAnnotations(std::vector<Annotation*> annotations){$/;"	f	class:AnnotationAnalyzer
setAnnotations	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::setAnnotations(std::vector<Annotation*> annotations){$/;"	f	class:AnalysisWidget
setAnnotations	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setAnnotations(std::vector<Annotation*> annotations){$/;"	f	class:ClassificationWidget
setAnnotations	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::setAnnotations(AnnotationGroup* annotations) {$/;"	f	class:GLDrawer
setAnnotations	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::setAnnotations(std::vector<Annotation*> annotations){$/;"	f	class:AnnotationAnalyzer
setArms	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::setArms(Joints angles, float timeInSeconds) {$/;"	f	class:RSWalkModule2014
setBackGetup	core/motion/GetupModule.cpp	/^void GetupModule::setBackGetup() {$/;"	f	class:GetupModule
setBeliefCache	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::setBeliefCache(MemoryCache cache) {$/;"	f	class:GLDrawer
setBeliefCache	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::setBeliefCache(MemoryCache cache) {$/;"	f	class:GLDrawer
setBlockLogging	core/memory/Memory.cpp	/^void Memory::setBlockLogging(const std::string &name, bool log_block) {$/;"	f	class:Memory
setBool	core/InterpreterModule.cpp	/^void InterpreterModule::setBool(bool *arr, int ind, bool val) {$/;"	f	class:InterpreterModule
setBottomCamera	build/include/tool/CameraWindow.cpp	/^void CameraWindow::setBottomCamera() {$/;"	f	class:CameraWindow
setBottomCamera	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::setBottomCamera() {$/;"	f	class:CameraWindow
setBottomCameraBehavior	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setBottomCameraBehavior() {$/;"	f	class:FilesWindow
setBottomCameraBehavior	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setBottomCameraBehavior() {$/;"	f	class:FilesWindow
setBottomRight	core/math/Geometry.cpp	/^void Rectangle::setBottomRight( Point2D p )$/;"	f	class:Rectangle
setBounds	core/math/Polygon.cpp	/^void Polygon::setBounds() {$/;"	f	class:Polygon
setCaches	build/include/tool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::setCaches(MemoryCache gtcache, MemoryCache bcache) {$/;"	f	class:CommunicationGenerator
setCaches	build/include/tool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::setCaches(MemoryCache gtcache, vector<MemoryCache> bcaches) {$/;"	f	class:CommunicationGenerator
setCaches	build/include/tool/simulation/RobotMovementSimulator.cpp	/^void RobotMovementSimulator::setCaches(WorldObjectBlock* gtObjects, MemoryCache bcache) {$/;"	f	class:RobotMovementSimulator
setCaches	tools/UTNaoTool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::setCaches(MemoryCache gtcache, MemoryCache bcache) {$/;"	f	class:CommunicationGenerator
setCaches	tools/UTNaoTool/simulation/CommunicationGenerator.cpp	/^void CommunicationGenerator::setCaches(MemoryCache gtcache, vector<MemoryCache> bcaches) {$/;"	f	class:CommunicationGenerator
setCaches	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^void RobotMovementSimulator::setCaches(WorldObjectBlock* gtObjects, MemoryCache bcache) {$/;"	f	class:RobotMovementSimulator
setCalibration	build/include/tool/calibration/JointCalibrator.cpp	/^void JointCalibrator::setCalibration(RobotCalibration* cal) {$/;"	f	class:JointCalibrator
setCalibration	core/sensor/SensorModule.cpp	/^void SensorModule::setCalibration() {$/;"	f	class:SensorModule
setCalibration	core/vision/CameraMatrix.cpp	/^void CameraMatrix::setCalibration(const RobotCalibration& cal) {$/;"	f	class:CameraMatrix
setCalibration	core/vision/ImageProcessor.cpp	/^void ImageProcessor::setCalibration(RobotCalibration calibration)$/;"	f	class:ImageProcessor
setCalibration	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^void JointCalibrator::setCalibration(RobotCalibration* cal) {$/;"	f	class:JointCalibrator
setCamera	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::setCamera(int position) {$/;"	f	class:WorldGLWidget
setCamera	build/include/tool/annotations/Annotation.cpp	/^void Annotation::setCamera(Camera::Type camera) {$/;"	f	class:Annotation
setCamera	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::setCamera(int position) {$/;"	f	class:WorldGLWidget
setCamera	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::setCamera(Camera::Type camera) {$/;"	f	class:Annotation
setCameraParams	core/imageCapture/DummyCamera.h	/^  void setCameraParams() {}$/;"	f	class:DummyCamera
setCameraParams	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::setCameraParams(){$/;"	f	class:NaoCamera
setCenter	core/math/Geometry.cpp	/^void Circle::setCenter( const Point2D& pCenter )$/;"	f	class:Circle
setCenterPoint	build/include/tool/annotations/Annotation.cpp	/^void Annotation::setCenterPoint(int frame, int x, int y) {$/;"	f	class:Annotation
setCenterPoint	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::setCenterPoint(int frame, int x, int y) {$/;"	f	class:Annotation
setChain	core/python/task.py	/^  def setChain(self, chain):$/;"	m	class:Task
setChains	core/python/task.py	/^  def setChains(self, chains):$/;"	m	class:MultiTask
setCircle	core/math/Geometry.cpp	/^bool Circle::setCircle( const Point2D& pCenter, float radius )$/;"	f	class:Circle
setCol	core/common/NMatrix.cpp	/^void  NMatrix::setCol(int index, NMatrix in)$/;"	f	class:NMatrix
setColor	build/include/tool/annotations/Annotation.cpp	/^void Annotation::setColor(Color c){$/;"	f	class:Annotation
setColor	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::setColor(Color c){$/;"	f	class:Annotation
setColor	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::setColor(int color) {$/;"	f	class:color_classifier::ClassificationWindow
setColorTable	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::setColorTable(ColorTable table) {$/;"	f	class:AnnotationAnalyzer
setColorTable	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::setColorTable(ColorTable table) {$/;"	f	class:AnnotationAnalyzer
setControlParams	build/include/tool/CameraWindow.cpp	/^void CameraWindow::setControlParams(CameraParams* params){$/;"	f	class:CameraWindow
setControlParams	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::setControlParams(CameraParams* params){$/;"	f	class:CameraWindow
setControlSetting	core/imageCapture/DummyCamera.h	/^  bool setControlSetting(unsigned int id, int value) {return true;}$/;"	f	class:DummyCamera
setControlSetting	core/imageCapture/NaoCamera.cpp	/^bool NaoCamera::setControlSetting(unsigned int id, int value) {$/;"	f	class:NaoCamera
setCore	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::setCore(VisionCore* core){$/;"	f	class:AnalysisWidget
setCore	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::setCore(bool value) {$/;"	f	class:UTMainWnd
setCore	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::setCore(VisionCore* core){$/;"	f	class:AnalysisWidget
setCore	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::setCore(bool value) {$/;"	f	class:UTMainWnd
setCurrentCamera	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:AnalysisWidget
setCurrentCamera	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:AnnotationWidget
setCurrentCamera	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:ClassificationWidget
setCurrentCamera	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:ExtrinsicCalibrationWidget
setCurrentCamera	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:IntrinsicCalibrationWidget
setCurrentCamera	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:AnalysisWidget
setCurrentCamera	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:AnnotationWidget
setCurrentCamera	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:ClassificationWidget
setCurrentCamera	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:ExtrinsicCalibrationWidget
setCurrentCamera	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::setCurrentCamera(Camera::Type camera){$/;"	f	class:IntrinsicCalibrationWidget
setCurrentFrame	build/include/tool/annotations/Annotation.cpp	/^void Annotation::setCurrentFrame(int frame) {$/;"	f	class:Annotation
setCurrentFrame	build/include/tool/annotations/Selection.h	/^        void setCurrentFrame(int frame) {$/;"	f	class:Selection
setCurrentFrame	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::setCurrentFrame(int frame) {$/;"	f	class:Annotation
setCurrentFrame	tools/UTNaoTool/annotations/Selection.h	/^        void setCurrentFrame(int frame) {$/;"	f	class:Selection
setCurrentLocation	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setCurrentLocation(QString ip) {$/;"	f	class:FilesWindow
setCurrentLocation	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setCurrentLocation(QString ip) {$/;"	f	class:FilesWindow
setCurrentSelections	build/include/tool/ImageWidget.cpp	/^void ImageWidget::setCurrentSelections(std::vector<Selection*> selections) {$/;"	f	class:ImageWidget
setCurrentSelections	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::setCurrentSelections(std::vector<Selection*> selections) {$/;"	f	class:ImageWidget
setDatetime	install/setup_robot	/^def setDatetime(ip):$/;"	f
setDefaultSettings	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::setDefaultSettings() {$/;"	f	class:NaoCamera
setDeg30Kick	core/memory/KickRequestBlock.h	/^  void setDeg30Kick(Kick::Leg leg, float desired_angle, float desired_distance) {$/;"	f	struct:KickRequestBlock
setDepend	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	void setDepend(const FTypeName<T,N>&) { m_depend=true; }$/;"	f	class:fadbad::FTypeName
setDepend	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	void setDepend(const FTypeName<T,N>&, const FTypeName<T,N>&) { m_depend=true; }$/;"	f	class:fadbad::FTypeName
setDepend	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	void setDepend(const FTypeName<T>& val)$/;"	f	class:fadbad::FTypeName
setDepend	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	void setDepend(const FTypeName<T>& val1, const FTypeName<T>& val2)$/;"	f	class:fadbad::FTypeName
setDisplay	build/include/tool/WorldWindow.cpp	/^void WorldWindow::setDisplay(bool value) {$/;"	f	class:WorldWindow
setDisplay	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::setDisplay(bool value) {$/;"	f	class:WorldWindow
setDouble	core/InterpreterModule.cpp	/^void InterpreterModule::setDouble(double *arr, int ind, double val) {$/;"	f	class:InterpreterModule
setEvaluated	core/memory/BehaviorBlock.h	/^  void setEvaluated(int index, bool eval){kickEvaluations[index].evaluated=eval;};$/;"	f	struct:BehaviorBlock
setFallCounter	core/python/util.py	/^def setFallCounter():$/;"	f
setFallen	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::setFallen(int index){$/;"	f	class:BehaviorSimulation
setFallen	build/include/tool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setFallen(){$/;"	f	class:SimulatedPlayer
setFallen	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::setFallen(int index){$/;"	f	class:BehaviorSimulation
setFallen	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setFallen(){$/;"	f	class:SimulatedPlayer
setFallenCounter	core/python/util.py	/^def setFallenCounter():$/;"	f
setFalling	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::setFalling() {$/;"	f	class:WalkRequestBlock
setFinish	core/python/state_machine.py	/^  def setFinish(self, node):$/;"	m	class:StateMachine
setFinished	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setFinished() {$/;"	f	class:FilesWindow
setFinished	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setFinished() {$/;"	f	class:FilesWindow
setFloat	core/InterpreterModule.cpp	/^void InterpreterModule::setFloat(float *arr, int ind, float val) {$/;"	f	class:InterpreterModule
setForwardL	core/motion/rswalk2014/BodyModel.hpp	/^      inline void setForwardL(float forwardL) {$/;"	f	class:BodyModel
setForwardR	core/motion/rswalk2014/BodyModel.hpp	/^      inline void setForwardR(float forwardR) {$/;"	f	class:BodyModel
setFrameInfo	core/memory/TextLogger.cpp	/^void TextLogger::setFrameInfo(FrameInfoBlock* fi){$/;"	f	class:TextLogger
setFrameRange	build/include/tool/UTMainWnd.h	/^  void setFrameRange(int start = 0, int end = -1) {$/;"	f	class:UTMainWnd
setFrameRange	tools/UTNaoTool/UTMainWnd.h	/^  void setFrameRange(int start = 0, int end = -1) {$/;"	f	class:UTMainWnd
setFrameStep	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::setFrameStep(int v) {$/;"	f	class:UTMainWnd
setFrameStep	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::setFrameStep(int v) {$/;"	f	class:UTMainWnd
setFrontGetup	core/motion/GetupModule.cpp	/^void GetupModule::setFrontGetup() {$/;"	f	class:GetupModule
setFwdKick	core/memory/KickRequestBlock.h	/^  void setFwdKick(Kick::Leg leg=Kick::RIGHT, float desired_distance=1000.0f) {$/;"	f	struct:KickRequestBlock
setGoalBlue	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setGoalBlue() {$/;"	f	class:ClassificationWidget
setGoalBlue	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setGoalBlue() {$/;"	f	class:ClassificationWidget
setGoalYellow	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setGoalYellow() {$/;"	f	class:ClassificationWidget
setGoalYellow	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setGoalYellow() {$/;"	f	class:ClassificationWidget
setGreen	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setGreen() {$/;"	f	class:ClassificationWidget
setGreen	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setGreen() {$/;"	f	class:ClassificationWidget
setGtCache	build/include/tool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::setGtCache(MemoryCache cache) {$/;"	f	class:GLDrawer
setGtCache	tools/UTNaoTool/UTOpenGL/GLDrawer.cpp	/^void GLDrawer::setGtCache(MemoryCache cache) {$/;"	f	class:GLDrawer
setHeadPan	core/memory/JointCommandBlock.h	/^  void setHeadPan(float target, float time, bool is_change) {$/;"	f	struct:JointCommandBlock
setHeadPan	core/python/commands.py	/^def setHeadPan(target_pos, target_time = 2.0, isChange = None):$/;"	f
setHeadPanTilt	core/python/commands.py	/^def setHeadPanTilt(pan = 0, tilt = -21, time = 2.0, isChange = False):$/;"	f
setHeadTilt	core/memory/JointCommandBlock.h	/^  void setHeadTilt(float target, float time, bool is_change){$/;"	f	struct:JointCommandBlock
setHeadTilt	core/python/commands.py	/^def setHeadTilt(tilt = -22):$/;"	f
setHostname	install/copy_wpa.py	/^def setHostname(hostname):$/;"	f
setHostname	install/setup_robot	/^def setHostname(ip,hostname):$/;"	f
setImagePointers	core/vision/Classifier.cpp	/^bool Classifier::setImagePointers() {$/;"	f	class:Classifier
setImageProcessors	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:AnalysisWidget
setImageProcessors	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:AnnotationWidget
setImageProcessors	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:ClassificationWidget
setImageProcessors	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:ExtrinsicCalibrationWidget
setImageProcessors	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:IntrinsicCalibrationWidget
setImageProcessors	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:AnalysisWidget
setImageProcessors	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:AnnotationWidget
setImageProcessors	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:ClassificationWidget
setImageProcessors	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:ExtrinsicCalibrationWidget
setImageProcessors	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::setImageProcessors(ImageProcessor* top, ImageProcessor* bottom){$/;"	f	class:IntrinsicCalibrationWidget
setImageSize	build/include/tool/ImageWidget.cpp	/^void ImageWidget::setImageSize(int width, int height){$/;"	f	class:ImageWidget
setImageSize	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::setImageSize(int width, int height){$/;"	f	class:ImageWidget
setImageSizes	build/include/tool/VisionWindow.cpp	/^void VisionWindow::setImageSizes() {$/;"	f	class:VisionWindow
setImageSizes	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::setImageSizes() {$/;"	f	class:VisionWindow
setImageSource	build/include/tool/ImageWidget.cpp	/^void ImageWidget::setImageSource(QImage* image, int width, int height) {$/;"	f	class:ImageWidget
setImageSource	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::setImageSource(QImage* image, int width, int height) {$/;"	f	class:ImageWidget
setImages	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::setImages(ImageList images, std::vector<ImageParams> iparams){$/;"	f	class:AnnotationAnalyzer
setImages	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::setImages(ImageList images, std::vector<ImageParams> iparams){$/;"	f	class:AnnotationAnalyzer
setImgBottom	core/memory/ImageBlock.h	/^  inline void setImgBottom(unsigned char* img) { img_bottom_ = img; }$/;"	f	struct:ImageBlock
setImgTop	core/memory/ImageBlock.h	/^  inline void setImgTop(unsigned char* img) { img_top_ = img; }$/;"	f	struct:ImageBlock
setImmediateTargetAngle	core/memory/SimEffectorBlock.h	/^  void setImmediateTargetAngle(const double &tangle){$/;"	f	struct:SimEffector
setInertialData	core/sensor/InertialFilter.cpp	/^void InertialFilter:: setInertialData(float aX, float aY, float aZ, float gX, float gy) {$/;"	f	class:InertialFilter
setInfoBlocks	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setInfoBlocks(FrameInfoBlock* frameInfo, JointBlock* joint) {$/;"	f	class:ObservationGenerator
setInfoBlocks	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setInfoBlocks(FrameInfoBlock* frameInfo, JointBlock* joint) {$/;"	f	class:ObservationGenerator
setInitial	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setInitial() {$/;"	f	class:FilesWindow
setInitial	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setInitial() {$/;"	f	class:FilesWindow
setInt	core/InterpreterModule.cpp	/^void InterpreterModule::setInt(int *arr, int ind, int val) {$/;"	f	class:InterpreterModule
setInterval	core/common/Profiling.cpp	/^void Timer::setInterval(int interval) {$/;"	f	class:Timer
setIsBetweenSteps	core/motion/rswalk2014/BodyModel.hpp	/^      inline void setIsBetweenSteps(bool isBetweenSteps) {$/;"	f	class:BodyModel
setIsLeftPhase	core/motion/rswalk2014/BodyModel.hpp	/^      void setIsLeftPhase(bool b) {$/;"	f	class:BodyModel
setIsPaused	core/motion/rswalk2014/BodyModel.hpp	/^      inline void setIsPaused(bool isPaused) {$/;"	f	class:BodyModel
setIsStopped	core/motion/rswalk2014/BodyModel.hpp	/^      void setIsStopped(bool b) {$/;"	f	class:BodyModel
setJointCommand	core/memory/JointCommandBlock.h	/^  void setJointCommand(int i, float val){$/;"	f	struct:JointCommandBlock
setJointCommandDeg	core/memory/JointCommandBlock.h	/^  void setJointCommandDeg(int i, float val){$/;"	f	struct:JointCommandBlock
setJointFromOffset	core/motion/GetupModule.cpp	/^void GetupModule::setJointFromOffset(float angles[], Joint joint, float offset) {$/;"	f	class:GetupModule
setJointStiffness	core/memory/JointCommandBlock.h	/^  void setJointStiffness(int i, float val){$/;"	f	struct:JointCommandBlock
setKick	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::setKick(float distance, float heading, bool with_left, bool step_into_kick){$/;"	f	class:WalkRequestBlock
setKickEval	core/memory/BehaviorBlock.h	/^  void setKickEval(int index, KickEvaluation eval){kickEvaluations[index]=eval;};$/;"	f	struct:BehaviorBlock
setKickLeftEval	core/memory/BehaviorBlock.h	/^  void setKickLeftEval(int index, Point2D pt, float bearing, int valid){$/;"	f	struct:BehaviorBlock
setKickOpponent	core/memory/BehaviorBlock.h	/^  void setKickOpponent(int index, bool opp){$/;"	f	struct:BehaviorBlock
setKickRequest	build/include/tool/MotionSimulation.cpp	/^void MotionSimulation::setKickRequest(Kick::Type kickType, Kick::Leg leg, float kickHeading, float kickDistance){$/;"	f	class:MotionSimulation
setKickRequest	tools/UTNaoTool/MotionSimulation.cpp	/^void MotionSimulation::setKickRequest(Kick::Type kickType, Kick::Leg leg, float kickHeading, float kickDistance){$/;"	f	class:MotionSimulation
setKickRightEval	core/memory/BehaviorBlock.h	/^  void setKickRightEval(int index, Point2D pt, float bearing, int valid){$/;"	f	struct:BehaviorBlock
setKickStepParams	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::setKickStepParams(int type, const Pose2D &preStep, const Pose2D &step, float refX) {$/;"	f	class:WalkRequestBlock
setKickStrongEval	core/memory/BehaviorBlock.h	/^  void setKickStrongEval(int index, Point2D pt, float bearing, int valid){$/;"	f	struct:BehaviorBlock
setKickWeakEval	core/memory/BehaviorBlock.h	/^  void setKickWeakEval(int index, Point2D pt, float bearing, int valid){$/;"	f	struct:BehaviorBlock
setLineWidth	build/include/tool/UTOpenGL/BasicGL.h	/^  void setLineWidth(float width) { glLineWidth(width\/FACT); lineWidth_ = width;};$/;"	f	class:BasicGL
setLineWidth	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^  void setLineWidth(float width) { glLineWidth(width\/FACT); lineWidth_ = width;};$/;"	f	class:BasicGL
setMagnitude	core/math/Geometry.cpp	/^Point2D Point2D::setMagnitude( float d )$/;"	f	class:Point2D
setMaxFrame	build/include/tool/annotations/Annotation.cpp	/^void Annotation::setMaxFrame(int frame){$/;"	f	class:Annotation
setMaxFrame	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::setMaxFrame(int frame){$/;"	f	class:Annotation
setMaxFrames	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::setMaxFrames(int frames){$/;"	f	class:AnnotationWidget
setMaxFrames	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::setMaxFrames(int frames){$/;"	f	class:AnnotationWidget
setMemory	build/include/tool/calibration/JointCalibrator.cpp	/^void JointCalibrator::setMemory(Memory* memory) {$/;"	f	class:JointCalibrator
setMemory	build/include/tool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setMemory(Memory* memory){$/;"	f	class:SimulatedPlayer
setMemory	core/opponents/UKF4.cpp	/^void UKF4::setMemory(WorldObjectBlock* wo, RobotStateBlock* rs, FrameInfoBlock* fi) {$/;"	f	class:UKF4
setMemory	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^void JointCalibrator::setMemory(Memory* memory) {$/;"	f	class:JointCalibrator
setMemory	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setMemory(Memory* memory){$/;"	f	class:SimulatedPlayer
setMemoryLog	build/include/tool/PlotWindow.cpp	/^void PlotWindow::setMemoryLog(Log* memory_log) {$/;"	f	class:PlotWindow
setMemoryLog	tools/UTNaoTool/PlotWindow.cpp	/^void PlotWindow::setMemoryLog(Log* memory_log) {$/;"	f	class:PlotWindow
setMemoryVariables	core/MotionCore.cpp	/^void MotionCore::setMemoryVariables() {$/;"	f	class:MotionCore
setMemoryVariables	core/VisionCore.cpp	/^void VisionCore::setMemoryVariables() {$/;"	f	class:VisionCore
setMessage	core/common/Profiling.cpp	/^void Timer::setMessage(std::string message) {$/;"	f	class:Timer
setMinFrame	build/include/tool/annotations/Annotation.cpp	/^void Annotation::setMinFrame(int frame){$/;"	f	class:Annotation
setMinFrame	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::setMinFrame(int frame){$/;"	f	class:Annotation
setMode	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::setMode(int mode){$/;"	f	class:MotionGLWidget
setMode	build/include/tool/WorldWindow.cpp	/^void WorldWindow::setMode(WorldMode mode, bool restart) {$/;"	f	class:WorldWindow
setMode	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::setMode(int mode){$/;"	f	class:MotionGLWidget
setMode	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::setMode(WorldMode mode, bool restart) {$/;"	f	class:WorldWindow
setModelBlocks	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setModelBlocks(OpponentBlock* opponentMem) {$/;"	f	class:ObservationGenerator
setModelBlocks	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setModelBlocks(OpponentBlock* opponentMem) {$/;"	f	class:ObservationGenerator
setName	build/include/tool/annotations/Annotation.cpp	/^void Annotation::setName(std::string name) {$/;"	f	class:Annotation
setName	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::setName(std::string name) {$/;"	f	class:Annotation
setNao32	core/common/MassCalibration.h	/^	void setNao32() {$/;"	f	class:MassCalibration
setNao33	core/common/MassCalibration.h	/^  void setNao33() {$/;"	f	class:MassCalibration
setNaoH21	core/common/MassCalibration.h	/^  void setNaoH21() {$/;"	f	class:MassCalibration
setNaoH21	core/common/RobotDimensions.h	/^  void setNaoH21() {$/;"	f	class:RobotDimensions
setNaoH24	core/common/MassCalibration.h	/^  void setNaoH24() {$/;"	f	class:MassCalibration
setNoKick	core/memory/KickRequestBlock.h	/^  void setNoKick() {$/;"	f	struct:KickRequestBlock
setObjectBlocks	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setObjectBlocks(WorldObjectBlock* gtObjects, WorldObjectBlock* obsObjects) {$/;"	f	class:ObservationGenerator
setObjectBlocks	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setObjectBlocks(WorldObjectBlock* gtObjects, vector<WorldObjectBlock*> obsObjects) {$/;"	f	class:ObservationGenerator
setObjectBlocks	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setObjectBlocks(WorldObjectBlock* gtObjects, WorldObjectBlock* obsObjects) {$/;"	f	class:ObservationGenerator
setObjectBlocks	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setObjectBlocks(WorldObjectBlock* gtObjects, vector<WorldObjectBlock*> obsObjects) {$/;"	f	class:ObservationGenerator
setObjectFromPose	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::setObjectFromPose(int i, int teamsign, const Pose2D *pose) {$/;"	f	class:BehaviorSimulation
setObjectFromPose	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::setObjectFromPose(int i, int teamsign, const Pose2D *pose) {$/;"	f	class:BehaviorSimulation
setObjects	build/include/tool/simulation/PhysicsSimulator.cpp	/^void PhysicsSimulator::setObjects(WorldObjectBlock* objects) {$/;"	f	class:PhysicsSimulator
setObjects	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^void PhysicsSimulator::setObjects(WorldObjectBlock* objects) {$/;"	f	class:PhysicsSimulator
setOdometryOffsets	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::setOdometryOffsets(float fwd, float side, float turn) {$/;"	f	class:WalkRequestBlock
setOffset	build/include/tool/annotations/Selection.h	/^        void setOffset(int frame, Point offset) {$/;"	f	class:Selection
setOffset	core/math/Spline3D.h	/^  void setOffset(int startPt, int endPt, float amount, int dim, bool doCreateSplines = true) {$/;"	f	class:Spline3D
setOffset	tools/UTNaoTool/annotations/Selection.h	/^        void setOffset(int frame, Point offset) {$/;"	f	class:Selection
setOrange	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setOrange() {$/;"	f	class:ClassificationWidget
setOrange	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setOrange() {$/;"	f	class:ClassificationWidget
setParamLabels	build/include/tool/CameraWindow.cpp	/^void CameraWindow::setParamLabels(CameraParams* params, QLabel* values) {$/;"	f	class:CameraWindow
setParamLabels	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::setParamLabels(CameraParams* params, QLabel* values) {$/;"	f	class:CameraWindow
setParams	core/common/ExponentialFilter.h	/^  void setParams(float decayRate, float factor, float initialValue = 0) {$/;"	f	class:ExponentialFilter
setParams	core/common/PIDController.cpp	/^void PIDController::setParams(const Vector3<float> &params) {$/;"	f	class:PIDController
setParams	core/common/PIDController.cpp	/^void PIDController::setParams(float cp, float ci, float cd) {$/;"	f	class:PIDController
setParams	core/opponents/UKF4.cpp	/^void UKF4::setParams(SmallUKF4Params u){$/;"	f	class:UKF4
setParent	core/python/task.py	/^  def setParent(self, parent):$/;"	m	class:BaseTask
setPath	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::setPath(const SimulationPath& path) {$/;"	f	class:LocalizationSimulation
setPath	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::setPath(const SimulationPath& path) {$/;"	f	class:LocalizationSimulation
setPedanticWalk	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::setPedanticWalk(float x, float y, float rotation) {$/;"	f	class:WalkRequestBlock
setPenalised	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setPenalised() {$/;"	f	class:FilesWindow
setPenalised	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setPenalised() {$/;"	f	class:FilesWindow
setPenalty	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::setPenalty(int index){$/;"	f	class:BehaviorSimulation
setPenalty	build/include/tool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setPenalty(WorldObjectBlock* simulationMem){$/;"	f	class:SimulatedPlayer
setPenalty	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::setPenalty(int index){$/;"	f	class:BehaviorSimulation
setPenalty	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setPenalty(WorldObjectBlock* simulationMem){$/;"	f	class:SimulatedPlayer
setPenaltyPosition	build/include/tool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setPenaltyPosition(WorldObjectBlock* simulationMem){$/;"	f	class:SimulatedPlayer
setPenaltyPosition	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setPenaltyPosition(WorldObjectBlock* simulationMem){$/;"	f	class:SimulatedPlayer
setPixel	build/include/tool/ImageWidget.h	/^   inline void setPixel(int x, int y, QRgb value) {$/;"	f	class:ImageWidget
setPixel	tools/UTNaoTool/ImageWidget.h	/^   inline void setPixel(int x, int y, QRgb value) {$/;"	f	class:ImageWidget
setPlayInfo	core/memory/BehaviorBlock.h	/^  SetPlayInfo setPlayInfo;$/;"	m	struct:BehaviorBlock
setPlayStrategy	core/memory/BehaviorParamBlock.h	/^  SetPlayStrategy setPlayStrategy;$/;"	m	struct:BehaviorParamBlock
setPlayer	build/include/tool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setPlayer(int player, int team) {$/;"	f	class:ObservationGenerator
setPlayer	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^void ObservationGenerator::setPlayer(int player, int team) {$/;"	f	class:ObservationGenerator
setPlaying	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setPlaying() {$/;"	f	class:FilesWindow
setPlaying	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setPlaying() {$/;"	f	class:FilesWindow
setPoint	core/math/Geometry.cpp	/^void Point2D::setPoint( float xx, float yy, CoordSystemT cs)$/;"	f	class:Point2D
setPoint	core/math/Geometry.cpp	/^void Point3D::setPoint( float xx, float yy, float zz, CoordSystemT cs)$/;"	f	class:Point3D
setPoint	core/math/Spline3D.h	/^  void setPoint(int ind, float x, float y) {$/;"	f	class:Spline3D
setPose2D	core/InterpreterModule.cpp	/^void InterpreterModule::setPose2D(Pose2D *arr,int ind, Pose2D val) {$/;"	f	class:InterpreterModule
setPose3D	core/InterpreterModule.cpp	/^void InterpreterModule::setPose3D(Pose3D *arr,int ind, Pose3D val) {$/;"	f	class:InterpreterModule
setPoseDeg	core/memory/JointCommandBlock.h	/^  void setPoseDeg(const float src[NUM_JOINTS]) {$/;"	f	struct:JointCommandBlock
setPoseRad	core/memory/JointCommandBlock.h	/^  void setPoseRad(const float src[NUM_JOINTS]) {$/;"	f	struct:JointCommandBlock
setProxy	interfaces/nao/src/almotionwrapper.cpp	/^void ALMotionWrapper::setProxy(boost::shared_ptr<AL::ALMotionProxy> pr) {$/;"	f	class:ALMotionWrapper
setProxy	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::setProxy(boost::shared_ptr<AL::DCMProxy> pr) {$/;"	f	class:DCMWrapper
setRadius	core/math/Geometry.cpp	/^bool Circle::setRadius( float radius )$/;"	f	class:Circle
setReady	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setReady() {$/;"	f	class:FilesWindow
setReady	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setReady() {$/;"	f	class:FilesWindow
setRectanglePoints	core/math/Geometry.cpp	/^void Rectangle::setRectanglePoints( Point2D p1, Point2D p2 )$/;"	f	class:Rectangle
setRobotPink	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setRobotPink() {$/;"	f	class:ClassificationWidget
setRobotPink	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setRobotPink() {$/;"	f	class:ClassificationWidget
setRobotSpecificSittingPose	core/python/cfgpose.py	/^def setRobotSpecificSittingPose():$/;"	f
setRobotTime	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setRobotTime() {$/;"	f	class:FilesWindow
setRobotTime	build/include/tool/ProcessExecutor.cpp	/^void PE::setRobotTime(QString ip) {$/;"	f	class:PE
setRobotTime	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setRobotTime() {$/;"	f	class:FilesWindow
setRobotTime	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::setRobotTime(QString ip) {$/;"	f	class:PE
setRobotWhite	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setRobotWhite() {$/;"	f	class:ClassificationWidget
setRobotWhite	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setRobotWhite() {$/;"	f	class:ClassificationWidget
setRole	core/memory/BehaviorParamBlock.h	/^  void setRole(int i, int role) {$/;"	f	struct:FieldAreaRoleConfig
setRow	core/common/NMatrix.cpp	/^void  NMatrix::setRow(int index, NMatrix in)$/;"	f	class:NMatrix
setRowVector	core/math/YaMatrix.h	/^  YaMatrix<V>& setRowVector(int m, const YaMatrix<V>& vector)$/;"	f	class:YaMatrix
setSample	build/include/tool/annotations/Annotation.cpp	/^void Annotation::setSample(bool value) {$/;"	f	class:Annotation
setSample	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::setSample(bool value) {$/;"	f	class:Annotation
setScore	build/include/tool/annotations/AnnotationAnalyzer.h	/^    void setScore() {$/;"	f	struct:YUV
setScore	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    void setScore() {$/;"	f	struct:YUV
setSegImgBottom	core/memory/RobotVisionBlock.h	/^  inline void setSegImgBottom(unsigned char* img) { segImgBottom = img; }$/;"	f	struct:RobotVisionBlock
setSegImgTop	core/memory/RobotVisionBlock.h	/^  inline void setSegImgTop(unsigned char* img) { segImgTop = img; }$/;"	f	struct:RobotVisionBlock
setSelectedRobot	build/include/tool/TeamPacketWidget.cpp	/^void TeamPacketWidget::setSelectedRobot(int i) {$/;"	f	class:TeamPacketWidget
setSelectedRobot	tools/UTNaoTool/TeamPacketWidget.cpp	/^void TeamPacketWidget::setSelectedRobot(int i) {$/;"	f	class:TeamPacketWidget
setSelectionEnabled	build/include/tool/ImageWidget.cpp	/^void ImageWidget::setSelectionEnabled(bool value){$/;"	f	class:ImageWidget
setSelectionEnabled	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::setSelectionEnabled(bool value){$/;"	f	class:ImageWidget
setSendAllAngles	core/memory/JointCommandBlock.h	/^  void setSendAllAngles(bool send, float angle_time = 1000.0f) {$/;"	f	struct:JointCommandBlock
setSensorValues	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^void Kinematics::setSensorValues(SensorValues sensorValues) {$/;"	f	class:Kinematics
setSet	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setSet() {$/;"	f	class:FilesWindow
setSet	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setSet() {$/;"	f	class:FilesWindow
setSideKick	core/memory/KickRequestBlock.h	/^  void setSideKick(Kick::Leg leg, float desired_distance) {$/;"	f	struct:KickRequestBlock
setSimScore	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::setSimScore(bool blue){$/;"	f	class:BehaviorSimulation
setSimScore	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::setSimScore(bool blue){$/;"	f	class:BehaviorSimulation
setSimulation	build/include/tool/LogWidget.cpp	/^void LogWidget::setSimulation(Simulation* simulation) {$/;"	f	class:LogWidget
setSimulation	build/include/tool/SimControlWidget.cpp	/^void SimControlWidget::setSimulation(Simulation* simulation) {$/;"	f	class:SimControlWidget
setSimulation	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::setSimulation(Simulation* simulation) {$/;"	f	class:WorldGLWidget
setSimulation	tools/UTNaoTool/LogWidget.cpp	/^void LogWidget::setSimulation(Simulation* simulation) {$/;"	f	class:LogWidget
setSimulation	tools/UTNaoTool/SimControlWidget.cpp	/^void SimControlWidget::setSimulation(Simulation* simulation) {$/;"	f	class:SimControlWidget
setSimulation	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::setSimulation(Simulation* simulation) {$/;"	f	class:WorldGLWidget
setStart	core/python/state_machine.py	/^  def setStart(self, node):$/;"	m	class:StateMachine
setState	core/memory/GameStateBlock.cpp	/^void GameStateBlock::setState(int state) {$/;"	f	class:GameStateBlock
setStep	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::setStep(bool isLeft, float x, float y, float rotation) {$/;"	f	class:WalkRequestBlock
setStiffness	core/python/commands.py	/^def setStiffness(cfg = cfgstiff.One, time = 0.3):$/;"	f
setStrategy	build/include/tool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setStrategy(){$/;"	f	class:SimulatedPlayer
setStrategy	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::setStrategy(){$/;"	f	class:SimulatedPlayer
setStreaming	build/include/tool/VisionWindow.cpp	/^void VisionWindow::setStreaming(bool value) {$/;"	f	class:VisionWindow
setStreaming	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::setStreaming(bool value) {$/;"	f	class:VisionWindow
setSubtask	core/python/task.py	/^  def setSubtask(self, subtask):$/;"	m	class:Task
setSupportBase	build/include/tool/MotionGLWidget.h	/^  void setSupportBase(SupportBase base) { base_ = base; update(); }$/;"	f	class:MotionGLWidget
setSupportBase	tools/UTNaoTool/MotionGLWidget.h	/^  void setSupportBase(SupportBase base) { base_ = base; update(); }$/;"	f	class:MotionGLWidget
setTestOdometry	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setTestOdometry() {$/;"	f	class:FilesWindow
setTestOdometry	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setTestOdometry() {$/;"	f	class:FilesWindow
setTesting	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setTesting() {$/;"	f	class:FilesWindow
setTesting	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setTesting() {$/;"	f	class:FilesWindow
setText	build/include/tool/LogWindow.cpp	/^void LogWindow::setText(std::vector<std::string> text){$/;"	f	class:LogWindow
setText	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::setText(std::vector<std::string> text){$/;"	f	class:LogWindow
setTextLogger	core/opponents/UKF4.cpp	/^void UKF4::setTextLogger(TextLogger* tf){$/;"	f	class:UKF4
setTopCamera	build/include/tool/CameraWindow.cpp	/^void CameraWindow::setTopCamera() {$/;"	f	class:CameraWindow
setTopCamera	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::setTopCamera() {$/;"	f	class:CameraWindow
setTopCameraBehavior	build/include/tool/FilesWindow.cpp	/^void FilesWindow::setTopCameraBehavior() {$/;"	f	class:FilesWindow
setTopCameraBehavior	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::setTopCameraBehavior() {$/;"	f	class:FilesWindow
setTopLeft	core/math/Geometry.cpp	/^void Rectangle::setTopLeft( Point2D p )$/;"	f	class:Rectangle
setTurn	core/motion/rswalk2014/BodyModel.hpp	/^      inline void setTurn(float turnL, float turnR) {$/;"	f	class:BodyModel
setType	core/memory/Logger.cpp	/^void Logger::setType(int t){$/;"	f	class:Logger
setType	core/memory/TextLogger.cpp	/^void TextLogger::setType(int t){$/;"	f	class:TextLogger
setUchar	core/InterpreterModule.cpp	/^void InterpreterModule::setUchar(unsigned char *arr, int ind, unsigned char val) {$/;"	f	class:InterpreterModule
setUndef	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setUndef() {$/;"	f	class:ClassificationWidget
setUndef	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setUndef() {$/;"	f	class:ClassificationWidget
setUsableKick	core/memory/BehaviorParamBlock.h	/^	void setUsableKick(int i, bool usable) { usableKicks[i] = usable;};$/;"	f	struct:CornerKickStrategy
setUsableKick	core/memory/BehaviorParamBlock.h	/^	void setUsableKick(int i, bool usable) { usableKicks[i] = usable;};$/;"	f	struct:KickStrategy
setValidKickRegion	core/memory/BehaviorBlock.h	/^  void setValidKickRegion(unsigned int x, unsigned int y, bool valid) {$/;"	f	struct:BehaviorBlock
setValues	core/math/Pose2D.h	/^  void setValues(std::vector<float> vals){$/;"	f	class:Pose2D
setWalk	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::setWalk(float x, float y, float rotation) {$/;"	f	class:WalkRequestBlock
setWalkCycle	core/motion/rswalk2014/BodyModel.hpp	/^      void setWalkCycle(WalkCycle w) {$/;"	f	class:BodyModel
setWalkMode	core/python/commands.py	/^def setWalkMode(mode):$/;"	f
setWalkRequest	build/include/tool/MotionSimulation.cpp	/^void MotionSimulation::setWalkRequest(bool walk, float x, float y, float rot){$/;"	f	class:MotionSimulation
setWalkRequest	tools/UTNaoTool/MotionSimulation.cpp	/^void MotionSimulation::setWalkRequest(bool walk, float x, float y, float rot){$/;"	f	class:MotionSimulation
setWalkTarget	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::setWalkTarget(float relx, float rely, float relang, bool pedantic) {$/;"	f	class:WalkRequestBlock
setWalkType	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::setWalkType(WalkType type) {$/;"	f	class:WalkRequestBlock
setWalkVelocity	core/python/commands.py	/^def setWalkVelocity(velX, velY, velTheta):$/;"	f
setWhite	build/include/tool/ClassificationWidget.cpp	/^void ClassificationWidget::setWhite() {$/;"	f	class:ClassificationWidget
setWhite	tools/UTNaoTool/ClassificationWidget.cpp	/^void ClassificationWidget::setWhite() {$/;"	f	class:ClassificationWidget
setWorld	build/include/tool/LogWidget.h	/^    void setWorld(WorldGLWidget* world) { world_ = world; }$/;"	f	class:LogWidget
setWorld	build/include/tool/SimControlWidget.h	/^    void setWorld(WorldGLWidget* world) { world_ = world; }$/;"	f	class:SimControlWidget
setWorld	tools/UTNaoTool/LogWidget.h	/^    void setWorld(WorldGLWidget* world) { world_ = world; }$/;"	f	class:LogWidget
setWorld	tools/UTNaoTool/SimControlWidget.h	/^    void setWorld(WorldGLWidget* world) { world_ = world; }$/;"	f	class:SimControlWidget
setWorldObjectBlock	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::setWorldObjectBlock(WorldObjectBlock* block) {$/;"	f	class:ExtrinsicCalibrationWidget
setWorldObjectBlock	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::setWorldObjectBlock(WorldObjectBlock* block) {$/;"	f	class:ExtrinsicCalibrationWidget
setX	core/math/Geometry.cpp	/^void Point2D::setX( float xx )$/;"	f	class:Point2D
setX	core/math/Geometry.cpp	/^void Point3D::setX( float xx )$/;"	f	class:Point3D
setX	core/math/Spline3D.h	/^  void setX(int ind, float x) {$/;"	f	class:Spline3D
setY	core/math/Geometry.cpp	/^void Point2D::setY( float yy )$/;"	f	class:Point2D
setY	core/math/Geometry.cpp	/^void Point3D::setY( float yy )$/;"	f	class:Point3D
setZ	core/math/Geometry.cpp	/^void Point3D::setZ( float zz )$/;"	f	class:Point3D
set_bottom_params_	core/memory/CameraBlock.h	/^  bool set_bottom_params_;$/;"	m	struct:CameraBlock
set_kick_odometry_	core/memory/KickModuleBlock.h	/^  bool set_kick_odometry_;$/;"	m	struct:KickModuleBlock
set_kick_step_params_	core/memory/WalkRequestBlock.h	/^  bool set_kick_step_params_;$/;"	m	struct:WalkRequestBlock
set_top_params_	core/memory/CameraBlock.h	/^  bool set_top_params_;$/;"	m	struct:CameraBlock
setarrayvector	lib/lua/src/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, int size) {$/;"	f	file:
setbits	lib/lua/src/lgc.h	/^#define setbits(/;"	d
setboolfield	lib/lua/src/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setbvalue	lib/lua/src/lobject.h	/^#define setbvalue(/;"	d
setclvalue	lib/lua/src/lobject.h	/^#define setclvalue(/;"	d
setcontent	lib/alglib/ap.cpp	/^void alglib::boolean_1d_array::setcontent(ae_int_t iLen, const bool *pContent )$/;"	f	class:alglib::boolean_1d_array
setcontent	lib/alglib/ap.cpp	/^void alglib::boolean_2d_array::setcontent(ae_int_t irows, ae_int_t icols, const bool *pContent )$/;"	f	class:alglib::boolean_2d_array
setcontent	lib/alglib/ap.cpp	/^void alglib::complex_1d_array::setcontent(ae_int_t iLen, const alglib::complex *pContent )$/;"	f	class:alglib::complex_1d_array
setcontent	lib/alglib/ap.cpp	/^void alglib::complex_2d_array::setcontent(ae_int_t irows, ae_int_t icols, const alglib::complex *pContent )$/;"	f	class:alglib::complex_2d_array
setcontent	lib/alglib/ap.cpp	/^void alglib::integer_1d_array::setcontent(ae_int_t iLen, const ae_int_t *pContent )$/;"	f	class:alglib::integer_1d_array
setcontent	lib/alglib/ap.cpp	/^void alglib::integer_2d_array::setcontent(ae_int_t irows, ae_int_t icols, const ae_int_t *pContent )$/;"	f	class:alglib::integer_2d_array
setcontent	lib/alglib/ap.cpp	/^void alglib::real_1d_array::setcontent(ae_int_t iLen, const double *pContent )$/;"	f	class:alglib::real_1d_array
setcontent	lib/alglib/ap.cpp	/^void alglib::real_2d_array::setcontent(ae_int_t irows, ae_int_t icols, const double *pContent )$/;"	f	class:alglib::real_2d_array
setfenv	lib/lua/src/loadlib.c	/^static void setfenv (lua_State *L) {$/;"	f	file:
setfield	lib/lua/src/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
sethvalue	lib/lua/src/lobject.h	/^#define sethvalue(/;"	d
sethvalue2s	lib/lua/src/lobject.h	/^#define sethvalue2s	/;"	d
setlength	lib/alglib/ap.cpp	/^void alglib::ae_matrix_wrapper::setlength(ae_int_t rows, ae_int_t cols)$/;"	f	class:alglib::ae_matrix_wrapper
setlength	lib/alglib/ap.cpp	/^void alglib::ae_vector_wrapper::setlength(ae_int_t iLen)$/;"	f	class:alglib::ae_vector_wrapper
setn	lib/lua/src/ltablib.c	/^static int setn (lua_State *L) {$/;"	f	file:
setnilvalue	lib/lua/src/lobject.h	/^#define setnilvalue(/;"	d
setnodevector	lib/lua/src/ltable.c	/^static void setnodevector (lua_State *L, Table *t, int size) {$/;"	f	file:
setnvalue	lib/lua/src/lobject.h	/^#define setnvalue(/;"	d
setobj	lib/lua/src/lobject.h	/^#define setobj(/;"	d
setobj2n	lib/lua/src/lobject.h	/^#define setobj2n	/;"	d
setobj2s	lib/lua/src/lobject.h	/^#define setobj2s	/;"	d
setobj2t	lib/lua/src/lobject.h	/^#define setobj2t	/;"	d
setobjs2s	lib/lua/src/lobject.h	/^#define setobjs2s	/;"	d
setobjt2t	lib/lua/src/lobject.h	/^#define setobjt2t	/;"	d
setpath	lib/lua/src/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname,$/;"	f	file:
setprogdir	lib/lua/src/loadlib.c	/^#define setprogdir(/;"	d	file:
setprogdir	lib/lua/src/loadlib.c	/^#undef setprogdir$/;"	d	file:
setprogdir	lib/lua/src/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setptvalue	lib/lua/src/lobject.h	/^#define setptvalue(/;"	d
setptvalue2s	lib/lua/src/lobject.h	/^#define setptvalue2s	/;"	d
setpvalue	lib/lua/src/lobject.h	/^#define setpvalue(/;"	d
setsvalue	lib/lua/src/lobject.h	/^#define setsvalue(/;"	d
setsvalue2n	lib/lua/src/lobject.h	/^#define setsvalue2n	/;"	d
setsvalue2s	lib/lua/src/lobject.h	/^#define setsvalue2s	/;"	d
settable	tools/behaviorSim/cma.py	/^    def settable(self):$/;"	m	class:Options
settable_event	lib/lua/doc/manual.html	/^     function settable_event (table, key, value)$/;"	f
settabsi	lib/lua/src/ldblib.c	/^static void settabsi (lua_State *L, const char *i, int v) {$/;"	f	file:
settabss	lib/lua/src/ldblib.c	/^static void settabss (lua_State *L, const char *i, const char *v) {$/;"	f	file:
setthreshold	lib/lua/src/lgc.c	/^#define setthreshold(/;"	d	file:
setthvalue	lib/lua/src/lobject.h	/^#define setthvalue(/;"	d
settingBValues	build/include/tool/CameraWindow.h	/^    QLabel* settingBValues;$/;"	m	class:CameraWindow
settingBValues	tools/UTNaoTool/CameraWindow.h	/^    QLabel* settingBValues;$/;"	m	class:CameraWindow
settingLabels	build/include/tool/CameraWindow.h	/^    QLabel* settingLabels;$/;"	m	class:CameraWindow
settingLabels	tools/UTNaoTool/CameraWindow.h	/^    QLabel* settingLabels;$/;"	m	class:CameraWindow
settingNames	build/include/tool/CameraWindow.h	/^    QString settingNames[NUM_CAM_SETTINGS];$/;"	m	class:CameraWindow
settingNames	tools/UTNaoTool/CameraWindow.h	/^    QString settingNames[NUM_CAM_SETTINGS];$/;"	m	class:CameraWindow
settingNotes	build/include/tool/CameraWindow.h	/^    QString settingNotes[NUM_CAM_SETTINGS];$/;"	m	class:CameraWindow
settingNotes	tools/UTNaoTool/CameraWindow.h	/^    QString settingNotes[NUM_CAM_SETTINGS];$/;"	m	class:CameraWindow
settingTValues	build/include/tool/CameraWindow.h	/^    QLabel* settingTValues;$/;"	m	class:CameraWindow
settingTValues	tools/UTNaoTool/CameraWindow.h	/^    QLabel* settingTValues;$/;"	m	class:CameraWindow
setting_changes	lib/yaml-cpp/src/setting.h	/^		typedef std::vector <SettingChangeBase *> setting_changes;$/;"	t	class:YAML::SettingChanges
settings_	build/include/tool/calibration/IntrinsicCalibrator.h	/^    ICSettings settings_;$/;"	m	class:IntrinsicCalibrator
settings_	build/include/tool/calibration/JointCalibrator.h	/^    JCSettings settings_;$/;"	m	class:JointCalibrator
settings_	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^    ICSettings settings_;$/;"	m	class:IntrinsicCalibrator
settings_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    JCSettings settings_;$/;"	m	class:JointCalibrator
setttype	lib/lua/src/lobject.h	/^#define setttype(/;"	d
setup	core/python/behaviors/Distance.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/Movement.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/custom_kick.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/head_tracking.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/keeper.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/keeper_2.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/keeper_3.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/kick.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/pid_distance_angle.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/stamp_in_circles.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/stand.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/walk_to_center.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/walk_to_center_2.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/behaviors/win.py	/^  def setup(self):$/;"	m	class:Playing
setup	core/python/state_machine.py	/^  def setup(self): pass$/;"	m	class:MachineNode
setup	core/python/state_machine.py	/^  def setup(self): pass$/;"	m	class:StateMachine
setup	tools/behaviorSim/cma.py	/^            from distutils.core import setup$/;"	i
setupCondor	tools/behaviorSim/runCMAES.py	/^def setupCondor(thisGenDir,thisGenOutputDir,condorConfig):$/;"	f
setupGccLibs	install/setup_robot	/^def setupGccLibs(ip):$/;"	f
setupNetworking	install/copy_wpa.py	/^def setupNetworking(ip,d):$/;"	f
setupNetworking	install/setup_robot	/^def setupNetworking(ip,robotID,wireless_only):$/;"	f
setupPasswordlessSSH	install/setup_robot	/^def setupPasswordlessSSH(ip):$/;"	f
setupPython	install/setup_robot	/^def setupPython(ip):$/;"	f
setupVim	install/setup_robot	/^def setupVim(ip):$/;"	f
setupWireless	bin/copy_robot	/^      from setup_wireless import main as setupWireless$/;"	i
setupWireless	build/copy_robot	/^      from setup_wireless import main as setupWireless$/;"	i
setup_dependencies	install/install_python	/^setup_dependencies() {$/;"	f
setuvalue	lib/lua/src/lobject.h	/^#define setuvalue(/;"	d
sframe_	build/include/tool/simulation/GoalieSimulation.h	/^    int sframe_;$/;"	m	class:GoalieSimulation
sframe_	tools/UTNaoTool/simulation/GoalieSimulation.h	/^    int sframe_;$/;"	m	class:GoalieSimulation
sgn	core/math/Common.h	/^template <class V> inline int sgn(const V& a) {return a < 0 ? -1 : ((a == 0) ? 0 : 1);}$/;"	f
shadowed	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
shared_memory_	core/memory/Memory.h	/^  SharedMemory *shared_memory_;$/;"	m	class:Memory
sharedlibdir	lib/zlib/Makefile	/^sharedlibdir =${libdir}$/;"	m
shift_amount	tools/testStepSide.py	/^shift_amount = 20$/;"	v
shift_ankle_	core/memory/KickEngineBlock.h	/^  Pose3D shift_ankle_; \/\/ the ankle position when shifted$/;"	m	struct:KickEngineBlock
shift_joint_time_	core/memory/KickEngineBlock.h	/^  float shift_joint_time_;$/;"	m	struct:KickEngineBlock
shift_time_	core/memory/KickEngineBlock.h	/^  float shift_time_;$/;"	m	struct:KickEngineBlock
shootOnGoalRadius	core/memory/BehaviorParamBlock.h	/^  float shootOnGoalRadius;$/;"	m	struct:ClusterKickStrategy
shootOnGoalRadius	core/memory/BehaviorParamBlock.h	/^  float shootOnGoalRadius;$/;"	m	struct:KickStrategy
shootingTo	core/communications/SPLStandardMessage.h	/^  float shootingTo[2];$/;"	m	struct:SPLStandardMessage
short_src	lib/lua/src/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug
shouldAbortGetup	core/motion/GetupModule.cpp	/^bool GetupModule::shouldAbortGetup() {$/;"	f	class:GetupModule
shoulderPitchL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float shoulderPitchL;                                   \/\/ to swing left  arm while walking \/ kicking$/;"	m	class:Walk2014Generator
shoulderPitchR	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float shoulderPitchR;                                   \/\/ to swing right arm while walking \/ kicking$/;"	m	class:Walk2014Generator
shoulderRollL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float shoulderRollL;$/;"	m	class:Walk2014Generator
shoulderRollR	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float shoulderRollR;$/;"	m	class:Walk2014Generator
show	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::show() {$/;"	f	class:KeyframeWidget
show	lib/lua/test/sort.lua	/^function show(m,x)$/;"	f
show	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::show() {$/;"	f	class:KeyframeWidget
show	tools/behaviorSim/cma.py	/^    def show():$/;"	f
show	tools/behaviorSim/cma.py	/^    show = pylab.show$/;"	v
show	tools/color_classifier/src/main_window.cpp	/^  void MainWindow::show() {$/;"	f	class:color_classifier::MainWindow
showTop	build/include/tool/CameraWindow.h	/^    bool showTop;$/;"	m	class:CameraWindow
showTop	tools/UTNaoTool/CameraWindow.h	/^    bool showTop;$/;"	m	class:CameraWindow
shutil	bin/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
shutil	build/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
shutil	install/common.py	/^import sys, os, shutil, tempfile$/;"	i
shutil	install/copy_wpa.py	/^import os, shutil, subprocess$/;"	i
shutil	install/install	/^import os, sys, shutil$/;"	i
shutil	install/install_lab	/^import os, sys, shutil$/;"	i
shutil	tools/behaviorSim/runCMAES.py	/^import json, sys, os, shutil, subprocess, re, time$/;"	i
side	interfaces/sim_spark/Parser.h	/^  int side;$/;"	m	class:Parser
side_odometry_factor_	core/memory/ALWalkParamBlock.h	/^  float side_odometry_factor_;$/;"	m	struct:ALWalkParamBlock
sigma	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateCovarianceMatrix sigma;$/;"	m	class:ExtendedKalmanFilter
sigma	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  StateCovarianceMatrix sigma;$/;"	m	class:LinearKalmanFilter
sigma	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  StateCovarianceMatrix sigma;$/;"	m	class:SRUnscentedKalmanFilter
sigma	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  StateCovarianceMatrix sigma;$/;"	m	class:UnscentedKalmanFilter
sigma_bar	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateCovarianceMatrix sigma_bar;$/;"	m	class:ExtendedKalmanFilter
sigma_bar	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  StateCovarianceMatrix sigma_bar;$/;"	m	class:LinearKalmanFilter
sigma_bar	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  StateCovarianceMatrix sigma_bar;$/;"	m	class:UnscentedKalmanFilter
sigma_bar_xz	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  StateCovarianceMatrix sigma_bar_xz;$/;"	m	class:UnscentedKalmanFilter
sigma_bar_xz	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateCovarianceMatrix sigma_bar_xz;$/;"	m	class:UnscentedKalmanFilter
sigmoid	tools/testStep.py	/^def sigmoid(t):$/;"	f
sign	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^int sign(float num) {$/;"	f
sign	core/python/util.py	/^def sign(value):$/;"	f
sign	lib/alglib/ap.cpp	/^int alglib::sign(double x)$/;"	f	class:alglib
simActive	build/include/tool/simulation/BehaviorSimulation.h	/^    bool simActive[WO_ROBOTS_LAST + 1];$/;"	m	class:BehaviorSimulation
simActive	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    bool simActive[WO_ROBOTS_LAST + 1];$/;"	m	class:BehaviorSimulation
simBlueScore	build/include/tool/simulation/BehaviorSimulation.h	/^    int simBlueScore;$/;"	m	class:BehaviorSimulation
simBlueScore	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    int simBlueScore;$/;"	m	class:BehaviorSimulation
simControl	build/include/tool/UTOpenGL/GLDrawer.h	/^    int simControl;$/;"	m	class:GLDrawer
simControl	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    int simControl;$/;"	m	class:GLDrawer
simInfo	build/include/tool/simulation/BehaviorSimulation.h	/^    std::string simInfo;$/;"	m	class:BehaviorSimulation
simInfo	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    std::string simInfo;$/;"	m	class:BehaviorSimulation
simJointNames	core/motion/rswalk2014/utils/body.hpp	/^   const std::string simJointNames[] = {$/;"	m	namespace:RSJoints
simLog	build/include/tool/MotionGLWidget.h	/^  Log* simLog;$/;"	m	class:MotionGLWidget
simLog	tools/UTNaoTool/MotionGLWidget.h	/^  Log* simLog;$/;"	m	class:MotionGLWidget
simOn	build/include/tool/simulation/BehaviorSimulation.h	/^    bool simOn;$/;"	m	class:BehaviorSimulation
simOn	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    bool simOn;$/;"	m	class:BehaviorSimulation
simPenaltyKick	build/include/tool/simulation/BehaviorSimulation.h	/^    bool simPenaltyKick;$/;"	m	class:BehaviorSimulation
simPenaltyKick	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    bool simPenaltyKick;$/;"	m	class:BehaviorSimulation
simPlayers	build/include/tool/WorldConfig.h	/^    int simPlayers;$/;"	m	class:WorldConfig
simPlayers	tools/UTNaoTool/WorldConfig.h	/^    int simPlayers;$/;"	m	class:WorldConfig
simRedScore	build/include/tool/simulation/BehaviorSimulation.h	/^    int simRedScore;$/;"	m	class:BehaviorSimulation
simRedScore	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    int simRedScore;$/;"	m	class:BehaviorSimulation
simTimer	build/include/tool/simulation/BehaviorSimulation.h	/^    float simTimer;$/;"	m	class:BehaviorSimulation
simTimer	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    float simTimer;$/;"	m	class:BehaviorSimulation
sim_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    SimulatedPlayer sim_;$/;"	m	class:IsolatedBehaviorSimulation
sim_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    SimulatedPlayer sim_;$/;"	m	class:IsolatedBehaviorSimulation
sim_effectors_	interfaces/sim_spark/RobotBehavior.h	/^  SimEffectorBlock* sim_effectors_;$/;"	m	class:RobotBehavior
sim_image_	interfaces/sim_spark/Parser.h	/^  char sim_image_[SIM_IMAGE_SIZE];$/;"	m	class:Parser
sim_truth	core/memory/MemoryCache.h	/^    SimTruthDataBlock* sim_truth;$/;"	m	class:MemoryCache
sim_truth_data_	interfaces/sim_spark/RobotBehavior.h	/^  SimTruthDataBlock* sim_truth_data_;$/;"	m	class:RobotBehavior
simconfig_	build/include/tool/WorldWindow.h	/^    SimulatorConfig simconfig_;$/;"	m	class:WorldWindow
simconfig_	tools/UTNaoTool/WorldWindow.h	/^    SimulatorConfig simconfig_;$/;"	m	class:WorldWindow
simpleexp	lib/lua/src/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
sims	build/include/tool/simulation/BehaviorSimulation.h	/^    SimulatedPlayer* sims[WO_ROBOTS_LAST + 1];$/;"	m	class:BehaviorSimulation
sims	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    SimulatedPlayer* sims[WO_ROBOTS_LAST + 1];$/;"	m	class:BehaviorSimulation
simulationStep	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::simulationStep(){$/;"	f	class:MotionGLWidget
simulationStep	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::simulationStep(){$/;"	f	class:BehaviorSimulation
simulationStep	build/include/tool/simulation/GoalieSimulation.cpp	/^void GoalieSimulation::simulationStep() {$/;"	f	class:GoalieSimulation
simulationStep	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::simulationStep() {$/;"	f	class:IBSim
simulationStep	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::simulationStep() {$/;"	f	class:LocalizationSimulation
simulationStep	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::simulationStep(){$/;"	f	class:MotionGLWidget
simulationStep	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::simulationStep(){$/;"	f	class:BehaviorSimulation
simulationStep	tools/UTNaoTool/simulation/GoalieSimulation.cpp	/^void GoalieSimulation::simulationStep() {$/;"	f	class:GoalieSimulation
simulationStep	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::simulationStep() {$/;"	f	class:IBSim
simulationStep	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::simulationStep() {$/;"	f	class:LocalizationSimulation
simulationUpdate	core/motion/rswalk2014/BodyModel.cpp	/^void BodyModel::simulationUpdate() {}$/;"	f	class:BodyModel
simulation_	build/include/tool/LogWidget.h	/^    Simulation* simulation_;$/;"	m	class:LogWidget
simulation_	build/include/tool/SimControlWidget.h	/^    Simulation* simulation_;$/;"	m	class:SimControlWidget
simulation_	build/include/tool/WorldGLWidget.h	/^    Simulation* simulation_;$/;"	m	class:WorldGLWidget
simulation_	build/include/tool/WorldWindow.h	/^    Simulation* simulation_;$/;"	m	class:WorldWindow
simulation_	tools/UTNaoTool/LogWidget.h	/^    Simulation* simulation_;$/;"	m	class:LogWidget
simulation_	tools/UTNaoTool/SimControlWidget.h	/^    Simulation* simulation_;$/;"	m	class:SimControlWidget
simulation_	tools/UTNaoTool/WorldGLWidget.h	/^    Simulation* simulation_;$/;"	m	class:WorldGLWidget
simulation_	tools/UTNaoTool/WorldWindow.h	/^    Simulation* simulation_;$/;"	m	class:WorldWindow
sin	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> sin (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
sin	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> sin (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
sinecosineintegrals	lib/alglib/specialfunctions.cpp	/^void sinecosineintegrals(const double x, double &si, double &ci)$/;"	f	namespace:alglib
sinecosineintegrals	lib/alglib/specialfunctions.cpp	/^void sinecosineintegrals(double x,$/;"	f	namespace:alglib_impl
singleShots	core/communications/RoboCupGameControlData.h	/^  uint16_t singleShots;         \/\/ bits represent penalty shot success$/;"	m	struct:TeamInfo
singlematch	lib/lua/src/lstrlib.c	/^static int singlematch (int c, const char *p, const char *ep) {$/;"	f	file:
singlestep	lib/lua/src/lgc.c	/^static l_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	lib/lua/src/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	lib/lua/src/lparser.c	/^static int singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
sit	core/python/behaviors/win.py	/^  sit=6$/;"	v	class:DefendingStates
sittingPoseNoArms	core/python/cfgpose.py	/^sittingPoseNoArms = dict()$/;"	v
sittingPoseV3	core/python/cfgpose.py	/^sittingPoseV3 = dict()$/;"	v
size	build/include/tool/calibration/IntrinsicCalibrator.h	/^  float x, y, size, skew;$/;"	m	struct:ICMeasures
size	build/include/tool/simulation/SimulationPath.h	/^    int size() const { return points_.size(); }$/;"	f	class:SimulationPath
size	core/common/RobotInfo.h	/^  int size;$/;"	m	struct:ImageParams
size	core/imageCapture/i2c-dev.h	/^	int size;$/;"	m	struct:i2c_smbus_ioctl_data
size	core/memory/Log.h	/^    unsigned int size() { return finish_ - start_ + 1; }$/;"	f	class:Log
size	core/memory/MemoryBlock.h	/^  unsigned int size;$/;"	m	struct:MemoryBlockHeader
size	core/memory/StreamBuffer.h	/^  unsigned int size;$/;"	m	struct:StreamBuffer
size	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	unsigned int size() const { return m_depend?N:0; }$/;"	f	class:fadbad::FTypeName
size	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	unsigned int size() const { return m_size; }$/;"	f	class:fadbad::FTypeName
size	lib/lua/src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	lib/lua/src/lstate.h	/^  int size;$/;"	m	struct:stringtable
size	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        std::size_t size() const { return owned() ? m_data.size() : m_unownedSize; }$/;"	f	class:YAML::Binary
size	lib/yaml-cpp/src/emitter.cpp	/^	unsigned Emitter::size() const$/;"	f	class:YAML::Emitter
size	lib/yaml-cpp/src/node.cpp	/^	std::size_t Node::size() const$/;"	f	class:YAML::Node
size	lib/yaml-cpp/src/ptr_stack.h	/^	std::size_t size() const { return m_data.size(); }$/;"	f	class:ptr_stack
size	lib/yaml-cpp/src/ptr_vector.h	/^		std::size_t size() const { return m_data.size(); }$/;"	f	class:YAML::ptr_vector
size	lib/zlib/gzguts.h	/^    unsigned size;          \/* buffer size, zero if not allocated yet *\/$/;"	m	struct:__anon135
size	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^  float x, y, size, skew;$/;"	m	struct:ICMeasures
size	tools/UTNaoTool/simulation/SimulationPath.h	/^    int size() const { return points_.size(); }$/;"	f	class:SimulationPath
size	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
sizeCclosure	lib/lua/src/lfunc.h	/^#define sizeCclosure(/;"	d
sizeLclosure	lib/lua/src/lfunc.h	/^#define sizeLclosure(/;"	d
size_	core/memory/GraphableBlock.h	/^  unsigned int size_;$/;"	m	struct:GraphableBlock
size_ci	lib/lua/src/lstate.h	/^  int size_ci;  \/* size of array `base_ci' *\/$/;"	m	struct:lua_State
sizearray	lib/lua/src/lobject.h	/^  int sizearray;  \/* size of `array' array *\/$/;"	m	struct:Table
sizecode	lib/lua/src/lobject.h	/^  int sizecode;$/;"	m	struct:Proto
sizek	lib/lua/src/lobject.h	/^  int sizek;  \/* size of `k' *\/$/;"	m	struct:Proto
sizelineinfo	lib/lua/src/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto
sizelocvars	lib/lua/src/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto
sizenode	lib/lua/src/lobject.h	/^#define sizenode(/;"	d
sizep	lib/lua/src/lobject.h	/^  int sizep;  \/* size of `p' *\/$/;"	m	struct:Proto
sizestring	lib/lua/src/lstring.h	/^#define sizestring(/;"	d
sizeudata	lib/lua/src/lstring.h	/^#define sizeudata(/;"	d
sizeupvalues	lib/lua/src/lobject.h	/^  int sizeupvalues;$/;"	m	struct:Proto
sk	lib/alglib/optimization.h	/^    ae_matrix sk;$/;"	m	struct:alglib_impl::__anon69
skew	build/include/tool/calibration/IntrinsicCalibrator.h	/^  float x, y, size, skew;$/;"	m	struct:ICMeasures
skew	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^  float x, y, size, skew;$/;"	m	struct:ICMeasures
skip	build/include/tool/WorldConfig.h	/^    int skip;$/;"	m	class:WorldConfig
skip	build/include/tool/WorldWindow.cpp	/^void WorldWindow::skip() {$/;"	f	class:WorldWindow
skip	lib/zlib/gzguts.h	/^    z_off64_t skip;         \/* amount to skip (already rewound if backwards) *\/$/;"	m	struct:__anon135
skip	tools/UTNaoTool/WorldConfig.h	/^    int skip;$/;"	m	class:WorldConfig
skip	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::skip() {$/;"	f	class:WorldWindow
skip_sep	lib/lua/src/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
sleep	install/setup_robot	/^from time import sleep$/;"	i
slow_stand_	core/memory/WalkRequestBlock.h	/^  bool slow_stand_; \/\/ true if we need a slow stand$/;"	m	struct:WalkRequestBlock
slow_stand_end	core/motion/rswalk2014/RSWalkModule2014.h	/^        float slow_stand_end;$/;"	m	class:RSWalkModule2014
slow_stand_start	core/motion/rswalk2014/RSWalkModule2014.h	/^        float slow_stand_start;$/;"	m	class:RSWalkModule2014
smallGapHeading	core/memory/BehaviorBlock.h	/^  float smallGapHeading, largeGapHeading;$/;"	m	struct:BehaviorBlock
smaller	lib/zlib/trees.c	/^#define smaller(/;"	d	file:
smatrixevd	lib/alglib/linalg.cpp	/^ae_bool smatrixevd(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
smatrixevd	lib/alglib/linalg.cpp	/^bool smatrixevd(const real_2d_array &a, const ae_int_t n, const ae_int_t zneeded, const bool isupper, real_1d_array &d, real_2d_array &z)$/;"	f	namespace:alglib
smatrixevdi	lib/alglib/linalg.cpp	/^ae_bool smatrixevdi(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
smatrixevdi	lib/alglib/linalg.cpp	/^bool smatrixevdi(const real_2d_array &a, const ae_int_t n, const ae_int_t zneeded, const bool isupper, const ae_int_t i1, const ae_int_t i2, real_1d_array &w, real_2d_array &z)$/;"	f	namespace:alglib
smatrixevdr	lib/alglib/linalg.cpp	/^ae_bool smatrixevdr(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
smatrixevdr	lib/alglib/linalg.cpp	/^bool smatrixevdr(const real_2d_array &a, const ae_int_t n, const ae_int_t zneeded, const bool isupper, const double b1, const double b2, ae_int_t &m, real_1d_array &w, real_2d_array &z)$/;"	f	namespace:alglib
smatrixgevd	lib/alglib/linalg.cpp	/^ae_bool smatrixgevd(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
smatrixgevd	lib/alglib/linalg.cpp	/^bool smatrixgevd(const real_2d_array &a, const ae_int_t n, const bool isuppera, const real_2d_array &b, const bool isupperb, const ae_int_t zneeded, const ae_int_t problemtype, real_1d_array &d, real_2d_array &z)$/;"	f	namespace:alglib
smatrixgevdreduce	lib/alglib/linalg.cpp	/^ae_bool smatrixgevdreduce(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
smatrixgevdreduce	lib/alglib/linalg.cpp	/^bool smatrixgevdreduce(real_2d_array &a, const ae_int_t n, const bool isuppera, const real_2d_array &b, const bool isupperb, const ae_int_t problemtype, real_2d_array &r, bool &isupperr)$/;"	f	namespace:alglib
smatrixrndcond	lib/alglib/linalg.cpp	/^void smatrixrndcond(ae_int_t n,$/;"	f	namespace:alglib_impl
smatrixrndcond	lib/alglib/linalg.cpp	/^void smatrixrndcond(const ae_int_t n, const double c, real_2d_array &a)$/;"	f	namespace:alglib
smatrixrndmultiply	lib/alglib/linalg.cpp	/^void smatrixrndmultiply(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
smatrixrndmultiply	lib/alglib/linalg.cpp	/^void smatrixrndmultiply(real_2d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
smatrixtd	lib/alglib/linalg.cpp	/^void smatrixtd(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
smatrixtd	lib/alglib/linalg.cpp	/^void smatrixtd(real_2d_array &a, const ae_int_t n, const bool isupper, real_1d_array &tau, real_1d_array &d, real_1d_array &e)$/;"	f	namespace:alglib
smatrixtdevd	lib/alglib/linalg.cpp	/^ae_bool smatrixtdevd(\/* Real    *\/ ae_vector* d,$/;"	f	namespace:alglib_impl
smatrixtdevd	lib/alglib/linalg.cpp	/^bool smatrixtdevd(real_1d_array &d, const real_1d_array &e, const ae_int_t n, const ae_int_t zneeded, real_2d_array &z)$/;"	f	namespace:alglib
smatrixtdevdi	lib/alglib/linalg.cpp	/^ae_bool smatrixtdevdi(\/* Real    *\/ ae_vector* d,$/;"	f	namespace:alglib_impl
smatrixtdevdi	lib/alglib/linalg.cpp	/^bool smatrixtdevdi(real_1d_array &d, const real_1d_array &e, const ae_int_t n, const ae_int_t zneeded, const ae_int_t i1, const ae_int_t i2, real_2d_array &z)$/;"	f	namespace:alglib
smatrixtdevdr	lib/alglib/linalg.cpp	/^ae_bool smatrixtdevdr(\/* Real    *\/ ae_vector* d,$/;"	f	namespace:alglib_impl
smatrixtdevdr	lib/alglib/linalg.cpp	/^bool smatrixtdevdr(real_1d_array &d, const real_1d_array &e, const ae_int_t n, const ae_int_t zneeded, const double a, const double b, ae_int_t &m, real_2d_array &z)$/;"	f	namespace:alglib
smatrixtdunpackq	lib/alglib/linalg.cpp	/^void smatrixtdunpackq(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
smatrixtdunpackq	lib/alglib/linalg.cpp	/^void smatrixtdunpackq(const real_2d_array &a, const ae_int_t n, const bool isupper, const real_1d_array &tau, real_2d_array &q)$/;"	f	namespace:alglib
smooth	vision_testing/src/vision_testing.cpp	/^void smooth(unsigned char* img, unsigned char* smoothed, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
sobel	vision_testing/src/vision_testing.cpp	/^bool sobel(unsigned char* img, unsigned char* gx, unsigned char* gy, unsigned char* sobel, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
sock	core/communications/CommunicationModule.h	/^  tcp::socket sock;$/;"	m	class:CommunicationModule
sock	core/communications/ThreadedUDPSocket.h	/^  int sock, length;$/;"	m	class:ThreadedUDPSocket
socket_ptr	build/include/tool/UTMainWnd.h	/^typedef boost::shared_ptr<tcp::socket> socket_ptr;$/;"	t
socket_ptr	tools/UTNaoTool/UTMainWnd.h	/^typedef boost::shared_ptr<tcp::socket> socket_ptr;$/;"	t
solve	lib/lua/test/bisect.lua	/^function solve(f,a,b)$/;"	f
solvertype	lib/alglib/diffequations.h	/^    ae_int_t solvertype;$/;"	m	struct:alglib_impl::__anon51
somenan	tools/behaviorSim/cma.py	/^    def somenan(self, x, fun, p=0.1):$/;"	m	class:FitnessFunctions
sonar	core/memory/MemoryCache.h	/^    ProcessedSonarBlock* sonar;$/;"	m	class:MemoryCache
sonar	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float sonar;$/;"	m	struct:ActionCommand::All
sonar	core/motion/rswalk2014/types/SensorValues.hpp	/^   float sonar[Sonar::NUMBER_OF_READINGS];$/;"	m	struct:SensorValues
sonarModuleEnabled	core/sonar/SonarModule.h	/^  bool sonarModuleEnabled;$/;"	m	class:SonarModule
sonarObstacleTime	core/memory/BehaviorBlock.h	/^  float sonarObstacleTime;$/;"	m	struct:BehaviorBlock
sonar_	core/MotionCore.h	/^  SonarModule *sonar_;$/;"	m	class:MotionCore
sonar_command_	core/memory/JointCommandBlock.h	/^  float sonar_command_;$/;"	m	struct:JointCommandBlock
sonar_commands_	interfaces/nao/src/dcmwrapper.h	/^  AL::ALValue sonar_commands_;$/;"	m	class:DCMWrapper
sonar_left_	core/memory/SensorBlock.h	/^  float sonar_left_[NUM_SONAR_VALS];$/;"	m	struct:SensorBlock
sonar_module_enabled_	core/memory/ProcessedSonarBlock.h	/^  bool sonar_module_enabled_;$/;"	m	struct:ProcessedSonarBlock
sonar_module_update_	core/memory/ProcessedSonarBlock.h	/^  bool sonar_module_update_;$/;"	m	struct:ProcessedSonarBlock
sonar_proxy_	interfaces/nao/src/naointerface.h	/^    boost::shared_ptr<AL::ALSonarProxy> sonar_proxy_;$/;"	m	class:naointerface
sonar_right_	core/memory/SensorBlock.h	/^  float sonar_right_[NUM_SONAR_VALS];$/;"	m	struct:SensorBlock
soriginal	lib/alglib/optimization.h	/^    ae_vector soriginal;$/;"	m	struct:alglib_impl::__anon79
sort	lib/lua/src/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
sortBlobAreaPredicate	core/vision/structures/Blob.cpp	/^bool sortBlobAreaPredicate(Blob* left, Blob* right) {$/;"	f
sortGoalPredicate	core/vision/structures/GoalCandidate.cpp	/^bool sortGoalPredicate(const GoalCandidate &c1, const GoalCandidate &c2){$/;"	f
sortPostEdgeStrengthPredicate	core/vision/structures/GoalPostCandidate.cpp	/^bool sortPostEdgeStrengthPredicate(GoalPostCandidate b1, GoalPostCandidate b2){$/;"	f
sortPostXiPredicate	core/vision/structures/GoalPostCandidate.cpp	/^bool sortPostXiPredicate(GoalPostCandidate b1, GoalPostCandidate b2){$/;"	f
sortPredicate	build/include/tool/annotations/AnnotationAnalyzer.h	/^    static bool sortPredicate(const YUV* left, const YUV* right) {$/;"	f	struct:YUV
sortPredicate	core/vision/structures/RobotCandidate.cpp	/^bool RobotCandidate::sortPredicate(const RobotCandidate& left, const RobotCandidate& right) {$/;"	f	class:RobotCandidate
sortPredicate	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    static bool sortPredicate(const YUV* left, const YUV* right) {$/;"	f	struct:YUV
sort_comp	lib/lua/src/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
sortibuf	lib/alglib/dataanalysis.h	/^    ae_vector sortibuf;$/;"	m	struct:alglib_impl::__anon41
sortrbuf	lib/alglib/dataanalysis.h	/^    ae_vector sortrbuf;$/;"	m	struct:alglib_impl::__anon41
sortrbuf2	lib/alglib/dataanalysis.h	/^    ae_vector sortrbuf2;$/;"	m	struct:alglib_impl::__anon41
source	core/memory/FrameInfoBlock.h	/^  MemorySource source;$/;"	m	struct:FrameInfoBlock
source	lib/lua/src/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState
source	lib/lua/src/lobject.h	/^  TString  *source;$/;"	m	struct:Proto
source	lib/lua/src/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug
spark_joint_signs	core/common/InterfaceInfo.cpp	/^const int spark_joint_signs[NUM_JOINTS] = {$/;"	v
spdmatrixcholesky	lib/alglib/linalg.cpp	/^ae_bool spdmatrixcholesky(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixcholesky	lib/alglib/linalg.cpp	/^bool spdmatrixcholesky(real_2d_array &a, const ae_int_t n, const bool isupper)$/;"	f	namespace:alglib
spdmatrixcholeskydet	lib/alglib/linalg.cpp	/^double spdmatrixcholeskydet(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixcholeskydet	lib/alglib/linalg.cpp	/^double spdmatrixcholeskydet(const real_2d_array &a)$/;"	f	namespace:alglib
spdmatrixcholeskydet	lib/alglib/linalg.cpp	/^double spdmatrixcholeskydet(const real_2d_array &a, const ae_int_t n)$/;"	f	namespace:alglib
spdmatrixcholeskyinverse	lib/alglib/linalg.cpp	/^void spdmatrixcholeskyinverse(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixcholeskyinverse	lib/alglib/linalg.cpp	/^void spdmatrixcholeskyinverse(real_2d_array &a, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
spdmatrixcholeskyinverse	lib/alglib/linalg.cpp	/^void spdmatrixcholeskyinverse(real_2d_array &a, const ae_int_t n, const bool isupper, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
spdmatrixcholeskyrcond	lib/alglib/linalg.cpp	/^double spdmatrixcholeskyrcond(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixcholeskyrcond	lib/alglib/linalg.cpp	/^double spdmatrixcholeskyrcond(const real_2d_array &a, const ae_int_t n, const bool isupper)$/;"	f	namespace:alglib
spdmatrixcholeskyrec	lib/alglib/linalg.cpp	/^ae_bool spdmatrixcholeskyrec(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixcholeskysolve	lib/alglib/solvers.cpp	/^void spdmatrixcholeskysolve(\/* Real    *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
spdmatrixcholeskysolve	lib/alglib/solvers.cpp	/^void spdmatrixcholeskysolve(const real_2d_array &cha, const ae_int_t n, const bool isupper, const real_1d_array &b, ae_int_t &info, densesolverreport &rep, real_1d_array &x)$/;"	f	namespace:alglib
spdmatrixcholeskysolvem	lib/alglib/solvers.cpp	/^void spdmatrixcholeskysolvem(\/* Real    *\/ ae_matrix* cha,$/;"	f	namespace:alglib_impl
spdmatrixcholeskysolvem	lib/alglib/solvers.cpp	/^void spdmatrixcholeskysolvem(const real_2d_array &cha, const ae_int_t n, const bool isupper, const real_2d_array &b, const ae_int_t m, ae_int_t &info, densesolverreport &rep, real_2d_array &x)$/;"	f	namespace:alglib
spdmatrixdet	lib/alglib/linalg.cpp	/^double spdmatrixdet(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixdet	lib/alglib/linalg.cpp	/^double spdmatrixdet(const real_2d_array &a)$/;"	f	namespace:alglib
spdmatrixdet	lib/alglib/linalg.cpp	/^double spdmatrixdet(const real_2d_array &a, const ae_int_t n, const bool isupper)$/;"	f	namespace:alglib
spdmatrixinverse	lib/alglib/linalg.cpp	/^void spdmatrixinverse(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixinverse	lib/alglib/linalg.cpp	/^void spdmatrixinverse(real_2d_array &a, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
spdmatrixinverse	lib/alglib/linalg.cpp	/^void spdmatrixinverse(real_2d_array &a, const ae_int_t n, const bool isupper, ae_int_t &info, matinvreport &rep)$/;"	f	namespace:alglib
spdmatrixrcond	lib/alglib/linalg.cpp	/^double spdmatrixrcond(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixrcond	lib/alglib/linalg.cpp	/^double spdmatrixrcond(const real_2d_array &a, const ae_int_t n, const bool isupper)$/;"	f	namespace:alglib
spdmatrixrndcond	lib/alglib/linalg.cpp	/^void spdmatrixrndcond(ae_int_t n,$/;"	f	namespace:alglib_impl
spdmatrixrndcond	lib/alglib/linalg.cpp	/^void spdmatrixrndcond(const ae_int_t n, const double c, real_2d_array &a)$/;"	f	namespace:alglib
spdmatrixsolve	lib/alglib/solvers.cpp	/^void spdmatrixsolve(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixsolve	lib/alglib/solvers.cpp	/^void spdmatrixsolve(const real_2d_array &a, const ae_int_t n, const bool isupper, const real_1d_array &b, ae_int_t &info, densesolverreport &rep, real_1d_array &x)$/;"	f	namespace:alglib
spdmatrixsolvem	lib/alglib/solvers.cpp	/^void spdmatrixsolvem(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spdmatrixsolvem	lib/alglib/solvers.cpp	/^void spdmatrixsolvem(const real_2d_array &a, const ae_int_t n, const bool isupper, const real_2d_array &b, const ae_int_t m, ae_int_t &info, densesolverreport &rep, real_2d_array &x)$/;"	f	namespace:alglib
spearmancorr2	lib/alglib/statistics.cpp	/^double spearmancorr2(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spearmancorr2	lib/alglib/statistics.cpp	/^double spearmancorr2(const real_1d_array &x, const real_1d_array &y)$/;"	f	namespace:alglib
spearmancorr2	lib/alglib/statistics.cpp	/^double spearmancorr2(const real_1d_array &x, const real_1d_array &y, const ae_int_t n)$/;"	f	namespace:alglib
spearmancorrm	lib/alglib/statistics.cpp	/^void spearmancorrm(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
spearmancorrm	lib/alglib/statistics.cpp	/^void spearmancorrm(const real_2d_array &x, const ae_int_t n, const ae_int_t m, real_2d_array &c)$/;"	f	namespace:alglib
spearmancorrm	lib/alglib/statistics.cpp	/^void spearmancorrm(const real_2d_array &x, real_2d_array &c)$/;"	f	namespace:alglib
spearmancorrm2	lib/alglib/statistics.cpp	/^void spearmancorrm2(\/* Real    *\/ ae_matrix* x,$/;"	f	namespace:alglib_impl
spearmancorrm2	lib/alglib/statistics.cpp	/^void spearmancorrm2(const real_2d_array &x, const real_2d_array &y, const ae_int_t n, const ae_int_t m1, const ae_int_t m2, real_2d_array &c)$/;"	f	namespace:alglib
spearmancorrm2	lib/alglib/statistics.cpp	/^void spearmancorrm2(const real_2d_array &x, const real_2d_array &y, real_2d_array &c)$/;"	f	namespace:alglib
spearmanrankcorrelation	lib/alglib/statistics.cpp	/^double spearmanrankcorrelation(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spearmanrankcorrelation	lib/alglib/statistics.cpp	/^double spearmanrankcorrelation(const real_1d_array &x, const real_1d_array &y, const ae_int_t n)$/;"	f	namespace:alglib
spearmanrankcorrelationsignificance	lib/alglib/statistics.cpp	/^void spearmanrankcorrelationsignificance(const double r, const ae_int_t n, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
spearmanrankcorrelationsignificance	lib/alglib/statistics.cpp	/^void spearmanrankcorrelationsignificance(double r,$/;"	f	namespace:alglib_impl
specialM_	core/MotionCore.h	/^  SpecialMotionModule *specialM_;$/;"	m	class:MotionCore
specifyMemoryBlocks	core/InterpreterModule.cpp	/^void InterpreterModule::specifyMemoryBlocks() {$/;"	f	class:InterpreterModule
specifyMemoryBlocks	core/audio/AudioModule.cpp	/^void AudioModule::specifyMemoryBlocks() {$/;"	f	class:AudioModule
specifyMemoryBlocks	core/behavior/BehaviorModule.cpp	/^void BehaviorModule::specifyMemoryBlocks() {$/;"	f	class:BehaviorModule
specifyMemoryBlocks	core/communications/CommunicationModule.cpp	/^void CommunicationModule::specifyMemoryBlocks() {$/;"	f	class:CommunicationModule
specifyMemoryBlocks	core/kinematics/KinematicsModule.cpp	/^void KinematicsModule::specifyMemoryBlocks() {$/;"	f	class:KinematicsModule
specifyMemoryBlocks	core/lights/LEDModule.cpp	/^void LEDModule::specifyMemoryBlocks() {$/;"	f	class:LEDModule
specifyMemoryBlocks	core/localization/LocalizationModule.cpp	/^void LocalizationModule::specifyMemoryBlocks() {$/;"	f	class:LocalizationModule
specifyMemoryBlocks	core/motion/KickModule.cpp	/^void KickModule::specifyMemoryBlocks() {$/;"	f	class:KickModule
specifyMemoryBlocks	core/motion/MotionModule.cpp	/^void MotionModule::specifyMemoryBlocks() {$/;"	f	class:MotionModule
specifyMemoryBlocks	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::specifyMemoryBlocks() {$/;"	f	class:SpecialMotionModule
specifyMemoryBlocks	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::specifyMemoryBlocks() {$/;"	f	class:RSWalkModule2014
specifyMemoryBlocks	core/opponents/OppModule.cpp	/^void OppModule::specifyMemoryBlocks() {$/;"	f	class:OppModule
specifyMemoryBlocks	core/sensor/ButtonModule.cpp	/^void ButtonModule::specifyMemoryBlocks() {$/;"	f	class:ButtonModule
specifyMemoryBlocks	core/sensor/SensorModule.cpp	/^void SensorModule::specifyMemoryBlocks() {$/;"	f	class:SensorModule
specifyMemoryBlocks	core/sonar/SonarModule.cpp	/^void SonarModule::specifyMemoryBlocks() {$/;"	f	class:SonarModule
specifyMemoryBlocks	core/vision/VisionModule.cpp	/^void VisionModule::specifyMemoryBlocks() {$/;"	f	class:VisionModule
specifyMemoryDependency	core/InterpreterModule.cpp	/^void InterpreterModule::specifyMemoryDependency() {$/;"	f	class:InterpreterModule
specifyMemoryDependency	core/audio/AudioModule.cpp	/^void AudioModule::specifyMemoryDependency() {$/;"	f	class:AudioModule
specifyMemoryDependency	core/behavior/BehaviorModule.cpp	/^void BehaviorModule::specifyMemoryDependency() {$/;"	f	class:BehaviorModule
specifyMemoryDependency	core/communications/CommunicationModule.cpp	/^void CommunicationModule::specifyMemoryDependency() {$/;"	f	class:CommunicationModule
specifyMemoryDependency	core/kinematics/KinematicsModule.cpp	/^void KinematicsModule::specifyMemoryDependency() {$/;"	f	class:KinematicsModule
specifyMemoryDependency	core/lights/LEDModule.cpp	/^void LEDModule::specifyMemoryDependency() {$/;"	f	class:LEDModule
specifyMemoryDependency	core/localization/LocalizationModule.cpp	/^void LocalizationModule::specifyMemoryDependency() {$/;"	f	class:LocalizationModule
specifyMemoryDependency	core/motion/KickModule.cpp	/^void KickModule::specifyMemoryDependency() {$/;"	f	class:KickModule
specifyMemoryDependency	core/motion/MotionModule.cpp	/^void MotionModule::specifyMemoryDependency() {$/;"	f	class:MotionModule
specifyMemoryDependency	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::specifyMemoryDependency() {$/;"	f	class:SpecialMotionModule
specifyMemoryDependency	core/motion/rswalk2014/RSWalkModule2014.cpp	/^void RSWalkModule2014::specifyMemoryDependency() {$/;"	f	class:RSWalkModule2014
specifyMemoryDependency	core/opponents/OppModule.cpp	/^void OppModule::specifyMemoryDependency() {$/;"	f	class:OppModule
specifyMemoryDependency	core/sensor/ButtonModule.cpp	/^void ButtonModule::specifyMemoryDependency() {$/;"	f	class:ButtonModule
specifyMemoryDependency	core/sensor/SensorModule.cpp	/^void SensorModule::specifyMemoryDependency() {$/;"	f	class:SensorModule
specifyMemoryDependency	core/sonar/SonarModule.cpp	/^void SonarModule::specifyMemoryDependency() {$/;"	f	class:SonarModule
specifyMemoryDependency	core/vision/VisionModule.cpp	/^void VisionModule::specifyMemoryDependency() {$/;"	f	class:VisionModule
speech	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
speech	core/python/memory.py	/^  def speech(): return core.pythonC.speech_$/;"	f	function:init
speech_	core/InterpreterModule.h	/^    SpeechBlock *speech_;$/;"	m	class:InterpreterModule
speech_	core/motion/rswalk2014/RSWalkModule2014.h	/^	SpeechBlock *speech_;$/;"	m	class:RSWalkModule2014
speech_	core/sensor/ButtonModule.h	/^  SpeechBlock *speech_;$/;"	m	class:ButtonModule
speech_	interfaces/nao/src/naointerface.h	/^    SpeechBlock *speech_;$/;"	m	class:naointerface
speed	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float speed;$/;"	m	class:Walk2014Generator
speed	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float speed;$/;"	m	struct:ActionCommand::Body
speedMax	core/motion/BHWalkParameters.h	/^  Pose2D speedMax;$/;"	m	struct:BHWalkParameters
speedMaxBackwards	core/motion/BHWalkParameters.h	/^  float speedMaxBackwards;$/;"	m	struct:BHWalkParameters
speedMaxChange	core/motion/BHWalkParameters.h	/^  Pose2D speedMaxChange;$/;"	m	struct:BHWalkParameters
speed_	core/memory/WalkRequestBlock.h	/^  Pose2D speed_; \/\/ the speed of the walk$/;"	m	struct:WalkRequestBlock
sphere	tools/behaviorSim/cma.py	/^    def sphere(self, x):$/;"	m	class:FitnessFunctions
spherew	tools/behaviorSim/cma.py	/^    def spherew(self, x):$/;"	m	class:FitnessFunctions
spherewithnconstraints	tools/behaviorSim/cma.py	/^    def spherewithnconstraints(self, x):$/;"	m	class:FitnessFunctions
spherewithoneconstraint	tools/behaviorSim/cma.py	/^    def spherewithoneconstraint(self, x):$/;"	m	class:FitnessFunctions
spherical	interfaces/sim_spark/Random.h	/^   sphericalCoord spherical( float thMin = 0.,     \/\/ Uniform Spherical$/;"	f	class:Random
sphericalCoord	interfaces/sim_spark/Random.h	/^struct sphericalCoord {  \/\/ spherical coordinates on unit sphere$/;"	s
sphericalND	interfaces/sim_spark/Random.h	/^   void sphericalND( float x[], int n )   \/\/ Uniform over the surface of$/;"	f	class:Random
spin	motion_planning/src/plan_kick.cpp	/^  void PlanKick::spin()$/;"	f	class:motion_planning::PlanKick
spline1d_diffthreepoint	lib/alglib/interpolation.cpp	/^static double spline1d_diffthreepoint(double t,$/;"	f	namespace:alglib_impl
spline1d_heapsortpoints	lib/alglib/interpolation.cpp	/^static void spline1d_heapsortpoints(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1d_heapsortppoints	lib/alglib/interpolation.cpp	/^static void spline1d_heapsortppoints(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1d_solvecyclictridiagonal	lib/alglib/interpolation.cpp	/^static void spline1d_solvecyclictridiagonal(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
spline1d_solvetridiagonal	lib/alglib/interpolation.cpp	/^static void spline1d_solvetridiagonal(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
spline1d_spline1dgriddiffcubicinternal	lib/alglib/interpolation.cpp	/^static void spline1d_spline1dgriddiffcubicinternal(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dbuildakima	lib/alglib/interpolation.cpp	/^void spline1dbuildakima(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dbuildakima	lib/alglib/interpolation.cpp	/^void spline1dbuildakima(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dbuildakima	lib/alglib/interpolation.cpp	/^void spline1dbuildakima(const real_1d_array &x, const real_1d_array &y, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dbuildcatmullrom	lib/alglib/interpolation.cpp	/^void spline1dbuildcatmullrom(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dbuildcatmullrom	lib/alglib/interpolation.cpp	/^void spline1dbuildcatmullrom(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t boundtype, const double tension, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dbuildcatmullrom	lib/alglib/interpolation.cpp	/^void spline1dbuildcatmullrom(const real_1d_array &x, const real_1d_array &y, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dbuildcubic	lib/alglib/interpolation.cpp	/^void spline1dbuildcubic(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dbuildcubic	lib/alglib/interpolation.cpp	/^void spline1dbuildcubic(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t boundltype, const double boundl, const ae_int_t boundrtype, const double boundr, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dbuildcubic	lib/alglib/interpolation.cpp	/^void spline1dbuildcubic(const real_1d_array &x, const real_1d_array &y, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dbuildhermite	lib/alglib/interpolation.cpp	/^void spline1dbuildhermite(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dbuildhermite	lib/alglib/interpolation.cpp	/^void spline1dbuildhermite(const real_1d_array &x, const real_1d_array &y, const real_1d_array &d, const ae_int_t n, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dbuildhermite	lib/alglib/interpolation.cpp	/^void spline1dbuildhermite(const real_1d_array &x, const real_1d_array &y, const real_1d_array &d, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dbuildlinear	lib/alglib/interpolation.cpp	/^void spline1dbuildlinear(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dbuildlinear	lib/alglib/interpolation.cpp	/^void spline1dbuildlinear(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dbuildlinear	lib/alglib/interpolation.cpp	/^void spline1dbuildlinear(const real_1d_array &x, const real_1d_array &y, spline1dinterpolant &c)$/;"	f	namespace:alglib
spline1dcalc	lib/alglib/interpolation.cpp	/^double spline1dcalc(const spline1dinterpolant &c, const double x)$/;"	f	namespace:alglib
spline1dcalc	lib/alglib/interpolation.cpp	/^double spline1dcalc(spline1dinterpolant* c, double x, ae_state *_state)$/;"	f	namespace:alglib_impl
spline1dconvcubic	lib/alglib/interpolation.cpp	/^void spline1dconvcubic(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dconvcubic	lib/alglib/interpolation.cpp	/^void spline1dconvcubic(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t boundltype, const double boundl, const ae_int_t boundrtype, const double boundr, const real_1d_array &x2, const ae_int_t n2, real_1d_array &y2)$/;"	f	namespace:alglib
spline1dconvcubic	lib/alglib/interpolation.cpp	/^void spline1dconvcubic(const real_1d_array &x, const real_1d_array &y, const real_1d_array &x2, real_1d_array &y2)$/;"	f	namespace:alglib
spline1dconvdiff2cubic	lib/alglib/interpolation.cpp	/^void spline1dconvdiff2cubic(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dconvdiff2cubic	lib/alglib/interpolation.cpp	/^void spline1dconvdiff2cubic(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t boundltype, const double boundl, const ae_int_t boundrtype, const double boundr, const real_1d_array &x2, const ae_int_t n2, real_1d_array &y2, real_1d_array &d2, real_1d_array &dd2)$/;"	f	namespace:alglib
spline1dconvdiff2cubic	lib/alglib/interpolation.cpp	/^void spline1dconvdiff2cubic(const real_1d_array &x, const real_1d_array &y, const real_1d_array &x2, real_1d_array &y2, real_1d_array &d2, real_1d_array &dd2)$/;"	f	namespace:alglib
spline1dconvdiffcubic	lib/alglib/interpolation.cpp	/^void spline1dconvdiffcubic(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dconvdiffcubic	lib/alglib/interpolation.cpp	/^void spline1dconvdiffcubic(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t boundltype, const double boundl, const ae_int_t boundrtype, const double boundr, const real_1d_array &x2, const ae_int_t n2, real_1d_array &y2, real_1d_array &d2)$/;"	f	namespace:alglib
spline1dconvdiffcubic	lib/alglib/interpolation.cpp	/^void spline1dconvdiffcubic(const real_1d_array &x, const real_1d_array &y, const real_1d_array &x2, real_1d_array &y2, real_1d_array &d2)$/;"	f	namespace:alglib
spline1dconvdiffinternal	lib/alglib/interpolation.cpp	/^void spline1dconvdiffinternal(\/* Real    *\/ ae_vector* xold,$/;"	f	namespace:alglib_impl
spline1dcopy	lib/alglib/interpolation.cpp	/^void spline1dcopy(spline1dinterpolant* c,$/;"	f	namespace:alglib_impl
spline1ddiff	lib/alglib/interpolation.cpp	/^void spline1ddiff(const spline1dinterpolant &c, const double x, double &s, double &ds, double &d2s)$/;"	f	namespace:alglib
spline1ddiff	lib/alglib/interpolation.cpp	/^void spline1ddiff(spline1dinterpolant* c,$/;"	f	namespace:alglib_impl
spline1dfitcubic	lib/alglib/interpolation.cpp	/^void spline1dfitcubic(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dfitcubic	lib/alglib/interpolation.cpp	/^void spline1dfitcubic(const real_1d_array &x, const real_1d_array &y, const ae_int_t m, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfitcubic	lib/alglib/interpolation.cpp	/^void spline1dfitcubic(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t m, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfitcubicwc	lib/alglib/interpolation.cpp	/^void spline1dfitcubicwc(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dfitcubicwc	lib/alglib/interpolation.cpp	/^void spline1dfitcubicwc(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const ae_int_t n, const real_1d_array &xc, const real_1d_array &yc, const integer_1d_array &dc, const ae_int_t k, const ae_int_t m, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfitcubicwc	lib/alglib/interpolation.cpp	/^void spline1dfitcubicwc(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const real_1d_array &xc, const real_1d_array &yc, const integer_1d_array &dc, const ae_int_t m, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfithermite	lib/alglib/interpolation.cpp	/^void spline1dfithermite(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dfithermite	lib/alglib/interpolation.cpp	/^void spline1dfithermite(const real_1d_array &x, const real_1d_array &y, const ae_int_t m, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfithermite	lib/alglib/interpolation.cpp	/^void spline1dfithermite(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t m, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfithermitewc	lib/alglib/interpolation.cpp	/^void spline1dfithermitewc(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dfithermitewc	lib/alglib/interpolation.cpp	/^void spline1dfithermitewc(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const ae_int_t n, const real_1d_array &xc, const real_1d_array &yc, const integer_1d_array &dc, const ae_int_t k, const ae_int_t m, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfithermitewc	lib/alglib/interpolation.cpp	/^void spline1dfithermitewc(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const real_1d_array &xc, const real_1d_array &yc, const integer_1d_array &dc, const ae_int_t m, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfitpenalized	lib/alglib/interpolation.cpp	/^void spline1dfitpenalized(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dfitpenalized	lib/alglib/interpolation.cpp	/^void spline1dfitpenalized(const real_1d_array &x, const real_1d_array &y, const ae_int_t m, const double rho, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfitpenalized	lib/alglib/interpolation.cpp	/^void spline1dfitpenalized(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t m, const double rho, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfitpenalizedw	lib/alglib/interpolation.cpp	/^void spline1dfitpenalizedw(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dfitpenalizedw	lib/alglib/interpolation.cpp	/^void spline1dfitpenalizedw(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const ae_int_t m, const double rho, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfitpenalizedw	lib/alglib/interpolation.cpp	/^void spline1dfitpenalizedw(const real_1d_array &x, const real_1d_array &y, const real_1d_array &w, const ae_int_t n, const ae_int_t m, const double rho, ae_int_t &info, spline1dinterpolant &s, spline1dfitreport &rep)$/;"	f	namespace:alglib
spline1dfitreport	lib/alglib/interpolation.cpp	/^spline1dfitreport::spline1dfitreport() : _spline1dfitreport_owner() ,taskrcond(p_struct->taskrcond),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),maxerror(p_struct->maxerror)$/;"	f	class:alglib::spline1dfitreport
spline1dfitreport	lib/alglib/interpolation.cpp	/^spline1dfitreport::spline1dfitreport(const spline1dfitreport &rhs):_spline1dfitreport_owner(rhs) ,taskrcond(p_struct->taskrcond),rmserror(p_struct->rmserror),avgerror(p_struct->avgerror),avgrelerror(p_struct->avgrelerror),maxerror(p_struct->maxerror)$/;"	f	class:alglib::spline1dfitreport
spline1dfitreport	lib/alglib/interpolation.h	/^class spline1dfitreport : public _spline1dfitreport_owner$/;"	c	namespace:alglib
spline1dfitreport	lib/alglib/interpolation.h	/^} spline1dfitreport;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon61
spline1dgriddiff2cubic	lib/alglib/interpolation.cpp	/^void spline1dgriddiff2cubic(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dgriddiff2cubic	lib/alglib/interpolation.cpp	/^void spline1dgriddiff2cubic(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t boundltype, const double boundl, const ae_int_t boundrtype, const double boundr, real_1d_array &d1, real_1d_array &d2)$/;"	f	namespace:alglib
spline1dgriddiff2cubic	lib/alglib/interpolation.cpp	/^void spline1dgriddiff2cubic(const real_1d_array &x, const real_1d_array &y, real_1d_array &d1, real_1d_array &d2)$/;"	f	namespace:alglib
spline1dgriddiffcubic	lib/alglib/interpolation.cpp	/^void spline1dgriddiffcubic(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline1dgriddiffcubic	lib/alglib/interpolation.cpp	/^void spline1dgriddiffcubic(const real_1d_array &x, const real_1d_array &y, const ae_int_t n, const ae_int_t boundltype, const double boundl, const ae_int_t boundrtype, const double boundr, real_1d_array &d)$/;"	f	namespace:alglib
spline1dgriddiffcubic	lib/alglib/interpolation.cpp	/^void spline1dgriddiffcubic(const real_1d_array &x, const real_1d_array &y, real_1d_array &d)$/;"	f	namespace:alglib
spline1dintegrate	lib/alglib/interpolation.cpp	/^double spline1dintegrate(const spline1dinterpolant &c, const double x)$/;"	f	namespace:alglib
spline1dintegrate	lib/alglib/interpolation.cpp	/^double spline1dintegrate(spline1dinterpolant* c,$/;"	f	namespace:alglib_impl
spline1dinterpolant	lib/alglib/interpolation.cpp	/^spline1dinterpolant::spline1dinterpolant() : _spline1dinterpolant_owner() $/;"	f	class:alglib::spline1dinterpolant
spline1dinterpolant	lib/alglib/interpolation.cpp	/^spline1dinterpolant::spline1dinterpolant(const spline1dinterpolant &rhs):_spline1dinterpolant_owner(rhs) $/;"	f	class:alglib::spline1dinterpolant
spline1dinterpolant	lib/alglib/interpolation.h	/^class spline1dinterpolant : public _spline1dinterpolant_owner$/;"	c	namespace:alglib
spline1dinterpolant	lib/alglib/interpolation.h	/^} spline1dinterpolant;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon58
spline1dlintransx	lib/alglib/interpolation.cpp	/^void spline1dlintransx(const spline1dinterpolant &c, const double a, const double b)$/;"	f	namespace:alglib
spline1dlintransx	lib/alglib/interpolation.cpp	/^void spline1dlintransx(spline1dinterpolant* c,$/;"	f	namespace:alglib_impl
spline1dlintransy	lib/alglib/interpolation.cpp	/^void spline1dlintransy(const spline1dinterpolant &c, const double a, const double b)$/;"	f	namespace:alglib
spline1dlintransy	lib/alglib/interpolation.cpp	/^void spline1dlintransy(spline1dinterpolant* c,$/;"	f	namespace:alglib_impl
spline1dunpack	lib/alglib/interpolation.cpp	/^void spline1dunpack(const spline1dinterpolant &c, ae_int_t &n, real_2d_array &tbl)$/;"	f	namespace:alglib
spline1dunpack	lib/alglib/interpolation.cpp	/^void spline1dunpack(spline1dinterpolant* c,$/;"	f	namespace:alglib_impl
spline2d_bicubiccalcderivatives	lib/alglib/interpolation.cpp	/^static void spline2d_bicubiccalcderivatives(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spline2dbuildbicubic	lib/alglib/interpolation.cpp	/^void spline2dbuildbicubic(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline2dbuildbicubic	lib/alglib/interpolation.cpp	/^void spline2dbuildbicubic(const real_1d_array &x, const real_1d_array &y, const real_2d_array &f, const ae_int_t m, const ae_int_t n, spline2dinterpolant &c)$/;"	f	namespace:alglib
spline2dbuildbilinear	lib/alglib/interpolation.cpp	/^void spline2dbuildbilinear(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
spline2dbuildbilinear	lib/alglib/interpolation.cpp	/^void spline2dbuildbilinear(const real_1d_array &x, const real_1d_array &y, const real_2d_array &f, const ae_int_t m, const ae_int_t n, spline2dinterpolant &c)$/;"	f	namespace:alglib
spline2dcalc	lib/alglib/interpolation.cpp	/^double spline2dcalc(const spline2dinterpolant &c, const double x, const double y)$/;"	f	namespace:alglib
spline2dcalc	lib/alglib/interpolation.cpp	/^double spline2dcalc(spline2dinterpolant* c,$/;"	f	namespace:alglib_impl
spline2dcopy	lib/alglib/interpolation.cpp	/^void spline2dcopy(spline2dinterpolant* c,$/;"	f	namespace:alglib_impl
spline2ddiff	lib/alglib/interpolation.cpp	/^void spline2ddiff(const spline2dinterpolant &c, const double x, const double y, double &f, double &fx, double &fy, double &fxy)$/;"	f	namespace:alglib
spline2ddiff	lib/alglib/interpolation.cpp	/^void spline2ddiff(spline2dinterpolant* c,$/;"	f	namespace:alglib_impl
spline2dinterpolant	lib/alglib/interpolation.cpp	/^spline2dinterpolant::spline2dinterpolant() : _spline2dinterpolant_owner() $/;"	f	class:alglib::spline2dinterpolant
spline2dinterpolant	lib/alglib/interpolation.cpp	/^spline2dinterpolant::spline2dinterpolant(const spline2dinterpolant &rhs):_spline2dinterpolant_owner(rhs) $/;"	f	class:alglib::spline2dinterpolant
spline2dinterpolant	lib/alglib/interpolation.h	/^class spline2dinterpolant : public _spline2dinterpolant_owner$/;"	c	namespace:alglib
spline2dinterpolant	lib/alglib/interpolation.h	/^} spline2dinterpolant;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon66
spline2dlintransf	lib/alglib/interpolation.cpp	/^void spline2dlintransf(const spline2dinterpolant &c, const double a, const double b)$/;"	f	namespace:alglib
spline2dlintransf	lib/alglib/interpolation.cpp	/^void spline2dlintransf(spline2dinterpolant* c,$/;"	f	namespace:alglib_impl
spline2dlintransxy	lib/alglib/interpolation.cpp	/^void spline2dlintransxy(const spline2dinterpolant &c, const double ax, const double bx, const double ay, const double by)$/;"	f	namespace:alglib
spline2dlintransxy	lib/alglib/interpolation.cpp	/^void spline2dlintransxy(spline2dinterpolant* c,$/;"	f	namespace:alglib_impl
spline2dresamplebicubic	lib/alglib/interpolation.cpp	/^void spline2dresamplebicubic(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spline2dresamplebicubic	lib/alglib/interpolation.cpp	/^void spline2dresamplebicubic(const real_2d_array &a, const ae_int_t oldheight, const ae_int_t oldwidth, real_2d_array &b, const ae_int_t newheight, const ae_int_t newwidth)$/;"	f	namespace:alglib
spline2dresamplebilinear	lib/alglib/interpolation.cpp	/^void spline2dresamplebilinear(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
spline2dresamplebilinear	lib/alglib/interpolation.cpp	/^void spline2dresamplebilinear(const real_2d_array &a, const ae_int_t oldheight, const ae_int_t oldwidth, real_2d_array &b, const ae_int_t newheight, const ae_int_t newwidth)$/;"	f	namespace:alglib
spline2dunpack	lib/alglib/interpolation.cpp	/^void spline2dunpack(const spline2dinterpolant &c, ae_int_t &m, ae_int_t &n, real_2d_array &tbl)$/;"	f	namespace:alglib
spline2dunpack	lib/alglib/interpolation.cpp	/^void spline2dunpack(spline2dinterpolant* c,$/;"	f	namespace:alglib_impl
spline_stance_times	core/motion/KickParameters.h	/^  double spline_stance_times[MAX_SPLINE_POINTS];$/;"	m	struct:KickParameters
spline_stance_xs	core/motion/KickParameters.h	/^  double spline_stance_xs[MAX_SPLINE_POINTS];$/;"	m	struct:KickParameters
spline_stance_ys	core/motion/KickParameters.h	/^  double spline_stance_ys[MAX_SPLINE_POINTS];$/;"	m	struct:KickParameters
spline_stance_zs	core/motion/KickParameters.h	/^  double spline_stance_zs[MAX_SPLINE_POINTS];$/;"	m	struct:KickParameters
spline_swing_times	core/motion/KickParameters.h	/^  double spline_swing_times[MAX_SPLINE_POINTS];$/;"	m	struct:KickParameters
spline_swing_xs	core/motion/KickParameters.h	/^  double spline_swing_xs[MAX_SPLINE_POINTS];$/;"	m	struct:KickParameters
spline_swing_ys	core/motion/KickParameters.h	/^  double spline_swing_ys[MAX_SPLINE_POINTS];$/;"	m	struct:KickParameters
spline_swing_zs	core/motion/KickParameters.h	/^  double spline_swing_zs[MAX_SPLINE_POINTS];$/;"	m	struct:KickParameters
splitY	core/memory/BehaviorParamBlock.h	/^  bool splitY;$/;"	m	struct:RolePositionConfig
splits	lib/alglib/alglibmisc.h	/^    ae_vector splits;$/;"	m	struct:alglib_impl::__anon25
sqr	core/math/Common.h	/^template <class V> inline V sqr(const V& a) {return a * a;}$/;"	f
sqr	core/math/Vector.h	/^  V sqr() const$/;"	f	class:Vector
sqr	core/math/Vector2.h	/^  V sqr() const {return x * x + y * y;}$/;"	f	class:Vector2
sqr	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> sqr (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
sqr	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> sqr (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
sqr	lib/alglib/ap.cpp	/^double alglib::sqr(double x)$/;"	f	class:alglib
sqrt	core/math/YaMatrix.h	/^YaMatrix<V> sqrt(const YaMatrix<V>& matrix)$/;"	f
sqrt	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> sqrt (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
sqrt	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> sqrt (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
sqrt	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
sqrtOfProcessNoise	core/opponents/UKF4.h	/^  NMatrix sqrtOfProcessNoise;      \/\/ Square root of Process Noise (Q matrix). (Constant)$/;"	m	class:UKF4
sqrtOfProcessNoiseReset	core/opponents/UKF4.h	/^  NMatrix sqrtOfProcessNoiseReset; \/\/ Square root of Q for reset.  (Conastant)$/;"	m	class:UKF4
sqrtOfTestWeightings	core/opponents/UKF4.h	/^  NMatrix sqrtOfTestWeightings;    \/\/ Square root of W             (Constant)$/;"	m	class:UKF4
square	core/math/Geometry.cpp	/^float square( float d1 )$/;"	f
squareAbs	core/math/Vector2.h	/^  V squareAbs() const$/;"	f	class:Vector2
squareAbs	core/math/Vector3.h	/^  V squareAbs() const$/;"	f	class:Vector3
squareSize	build/include/tool/calibration/CalibratorSettings.h	/^    float squareSize;$/;"	m	class:CalibratorSettings
squareSize	tools/UTNaoTool/calibration/CalibratorSettings.h	/^    float squareSize;$/;"	m	class:CalibratorSettings
squaredVectorLength	core/math/YaMatrix.h	/^  V squaredVectorLength()$/;"	f	class:YaMatrix
src_end	lib/lua/src/lstrlib.c	/^  const char *src_end;  \/* end (`\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	lib/lua/src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
sreplace	core/common/Util.cpp	/^bool sreplace(std::string& str, const std::initializer_list<std::string>& from, const std::string& to) {$/;"	f
sreplace	core/common/Util.cpp	/^bool sreplace(std::string& str, const std::string& from, const std::string& to) {$/;"	f
sround	tools/behaviorSim/cma.py	/^        def sround(nb):  # TODO: to be vectorized$/;"	m	class:Misc.MathHelperFunctions
ssprintf	core/common/Util.cpp	/^string ssprintf(const char* format, ...) {$/;"	f
stabilizer_off_threshold_	core/memory/WalkInfoBlock.h	/^  float stabilizer_off_threshold_;$/;"	m	struct:WalkInfoBlock
stabilizer_on_threshold_	core/memory/WalkInfoBlock.h	/^  float stabilizer_on_threshold_;$/;"	m	struct:WalkInfoBlock
stack	lib/lua/src/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State
stack_init	lib/lua/src/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_last	lib/lua/src/lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State
stackbuf	lib/alglib/alglibinternal.h	/^    ae_vector stackbuf;$/;"	m	struct:alglib_impl::__anon23
stacked	core/vision/BeaconDetector.cpp	/^inline bool stacked(MergeBlob::Blob* b1, MergeBlob::Blob* b2, unsigned int touch_threshold = 5)$/;"	f
stacksize	core/python/UTdebug.py	/^def stacksize(since=0.0):$/;"	f
stacksize	lib/lua/src/lstate.h	/^  int stacksize;$/;"	m	struct:lua_State
stage	lib/alglib/ap.h	/^    int stage;$/;"	m	struct:alglib_impl::rcommstate
stage1	lib/alglib/alglibinternal.h	/^    ae_bool stage1;$/;"	m	struct:alglib_impl::__anon21
stage1	lib/alglib/dataanalysis.h	/^    ae_bool stage1;$/;"	m	struct:alglib_impl::__anon46
stance	build/include/tool/RobotControllerWidget.cpp	/^void RobotControllerWidget::stance() {$/;"	f	class:RobotControllerWidget
stance	core/common/ToolPacket.h	/^    Poses::Stance stance;$/;"	m	struct:ToolPacket::__anon10
stance	tools/UTNaoTool/RobotControllerWidget.cpp	/^void RobotControllerWidget::stance() {$/;"	f	class:RobotControllerWidget
stance_	build/include/tool/RobotControllerWidget.h	/^    Poses::Stance stance_;$/;"	m	class:RobotControllerWidget
stance_	tools/UTNaoTool/RobotControllerWidget.h	/^    Poses::Stance stance_;$/;"	m	class:RobotControllerWidget
stance_step_fwd	tools/testStep.py	/^def stance_step_fwd(t):$/;"	f
stand	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::stand() {$/;"	f	class:WalkRequestBlock
stand	core/python/commands.py	/^def stand():$/;"	f
standGen	core/motion/rswalk2014/RefPickupGenerator.hpp	/^      Generator *standGen;$/;"	m	class:RefPickupGenerator
standHigh	core/python/cfgpose.py	/^standHigh = dict()$/;"	v
standStraight	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::standStraight() {$/;"	f	class:WalkRequestBlock
standStraight	core/python/commands.py	/^def standStraight():$/;"	f
stand_ankle_	core/memory/KickEngineBlock.h	/^  Pose3D stand_ankle_; \/\/ ankle x,y,x in the stand position for IK kicks - this is the position relative ball distances are calculated at$/;"	m	struct:KickEngineBlock
stand_in_place_	core/memory/WalkRequestBlock.h	/^  bool stand_in_place_;$/;"	m	struct:WalkRequestBlock
stand_joint_time_	core/memory/KickEngineBlock.h	/^  float stand_joint_time_;$/;"	m	struct:KickEngineBlock
stand_start_time_	core/sensor/SensorModule.h	/^  float stand_start_time_;$/;"	m	class:SensorModule
stand_tall_time_	core/memory/KickEngineBlock.h	/^  float stand_tall_time_;$/;"	m	struct:KickEngineBlock
stand_time_	core/memory/KickEngineBlock.h	/^  float stand_time_;$/;"	m	struct:KickEngineBlock
standardMergePredicate	core/vision/structures/FocusArea.cpp	/^bool FocusArea::standardMergePredicate(const FocusArea& left, const FocusArea& right) {$/;"	f	class:FocusArea
standard_finite_cauchy	tools/behaviorSim/cma.py	/^        def standard_finite_cauchy(size=1):$/;"	m	class:Misc.MathHelperFunctions
standing	core/memory/OdometryBlock.h	/^  bool standing;$/;"	m	struct:OdometryBlock
standing	core/motion/rswalk2014/RSWalkModule2014.h	/^	volatile bool standing;$/;"	m	class:RSWalkModule2014
standingLeftArmPose	core/python/cfgpose.py	/^standingLeftArmPose = dict()$/;"	v
standingPose	core/python/cfgpose.py	/^standingPose = dict()$/;"	v
start	build/include/tool/WorldGLWidget.h	/^      Point2D start, end;$/;"	m	struct:WorldGLWidget::__anon7
start	build/include/tool/calibration/JointCalibrator.cpp	/^void JointCalibrator::start(int iterations, function<void()> callback) {$/;"	f	class:JointCalibrator
start	core/common/Profiling.cpp	/^void Timer::start() {$/;"	f	class:Timer
start	core/communications/ThreadedUDPSocket.cpp	/^void ThreadedUDPSocket::start(char* name_, int port_, int type, int buffersize_, void* (*method)( void* ), void * core) {$/;"	f	class:ThreadedUDPSocket
start	core/math/Geometry.h	/^    Point2D start, end;$/;"	m	class:LineSegment
start	core/motion/KickModule.cpp	/^void KickModule::start() {$/;"	f	class:KickModule
start	core/motion/SpecialMotionParser.h	/^  start,$/;"	e	enum:Motions::mType
start	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void WalkEnginePreProcessor::DribbleEngine::start(Body::Foot foot) {$/;"	f	class:WalkEnginePreProcessor::DribbleEngine
start	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void WalkEnginePreProcessor::LineUpEngine::start(Body::Foot foot) {$/;"	f	class:WalkEnginePreProcessor::LineUpEngine
start	core/python/PythonModule.cpp	/^void PythonModule::start() {$/;"	f	class:PythonModule
start	core/python/UTdebug.py	/^  def start(self):$/;"	m	class:Timer
start	core/python/behaviors/win.py	/^  start=0$/;"	v	class:AttackingStates
start	core/python/behaviors/win.py	/^  start=0$/;"	v	class:DefendingStates
start	core/python/pose.py	/^  def start(self):$/;"	m	class:PoseSequence
start	core/python/state_machine.py	/^  def start(self):$/;"	m	class:Event
start	core/python/task.py	/^  def start(self):$/;"	m	class:BaseTask
start	core/python/util.py	/^  def start(self):$/;"	m	class:Timer
start	core/sensor/ButtonModule.h	/^    float start;$/;"	m	struct:ButtonModule::ButtonInfo
start	interfaces/nao/src/naointerface.cpp	/^void naointerface::start() {$/;"	f	class:naointerface
start	lib/zlib/gzguts.h	/^    z_off64_t start;        \/* where the gzip data started, for rewinding *\/$/;"	m	struct:__anon135
start	tools/UTNaoTool/WorldGLWidget.h	/^      Point2D start, end;$/;"	m	struct:WorldGLWidget::__anon145
start	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^void JointCalibrator::start(int iterations, function<void()> callback) {$/;"	f	class:JointCalibrator
startAudioCapture	interfaces/nao/src/naointerface.cpp	/^void naointerface::startAudioCapture(){$/;"	f	class:naointerface
startBallSearchTime	core/memory/BehaviorBlock.h	/^  float startBallSearchTime;$/;"	m	struct:BehaviorBlock
startCore	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::startCore(LocSimAgent& agent) {$/;"	f	class:LocalizationSimulation
startCore	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::startCore(LocSimAgent& agent) {$/;"	f	class:LocalizationSimulation
startDisableLogging	core/VisionCore.cpp	/^void VisionCore::startDisableLogging(){$/;"	f	class:VisionCore
startFrame	build/include/tool/UTMainWnd.h	/^  int startFrame;$/;"	m	class:UTMainWnd
startFrame	build/include/tool/UTNaoTool.cpp	/^  int startFrame = 0;$/;"	m	namespace:__anon4	file:
startFrame	tools/UTNaoTool/UTMainWnd.h	/^  int startFrame;$/;"	m	class:UTMainWnd
startFrame	tools/UTNaoTool/UTNaoTool.cpp	/^  int startFrame = 0;$/;"	m	namespace:__anon142	file:
startJoints	core/motion/SpecialMotionParser.cpp	/^float startJoints[NUM_JOINTS] = {0,30,-1.8,-26,71,-45,1.8,0,-1.8,-26,71,-45,1.8,-90,30,0,0,-90,30,0,0,0};$/;"	v
startListenThread	core/communications/UDPWrapper.cpp	/^void UDPWrapper::startListenThread(std::function<void(void*)> method, void *core) {$/;"	f	class:UDPWrapper
startLiveMode	build/include/tool/WorldWindow.cpp	/^void WorldWindow::startLiveMode() {$/;"	f	class:WorldWindow
startLiveMode	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::startLiveMode() {$/;"	f	class:WorldWindow
startLogging	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::startLogging() {$/;"	f	class:TeamConfigWindow
startLogging	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::startLogging() {$/;"	f	class:TeamConfigWindow
startMotion	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::startMotion(Motion m) {$/;"	f	class:SpecialMotionModule
startMotionSequence	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::startMotionSequence() {$/;"	f	class:SpecialMotionModule
startMultiLogging	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::startMultiLogging(vector<QString> ips) {$/;"	f	class:LogSelectWindow
startMultiLogging	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::startMultiLogging(vector<QString> ips) {$/;"	f	class:LogSelectWindow
startNaoQi	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::startNaoQi() {$/;"	f	class:TeamConfigWindow
startNaoQi	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::startNaoQi() {$/;"	f	class:TeamConfigWindow
startNaoqi	build/include/tool/FilesWindow.cpp	/^void FilesWindow::startNaoqi() {$/;"	f	class:FilesWindow
startNaoqi	build/include/tool/ProcessExecutor.cpp	/^void PE::startNaoqi(QString ip) {$/;"	f	class:PE
startNaoqi	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::startNaoqi() {$/;"	f	class:FilesWindow
startNaoqi	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::startNaoqi(QString ip) {$/;"	f	class:PE
startRecording	core/motion/rswalk2014/perception/vision/RSCamera.cpp	/^bool RSCamera::startRecording(const char *filename, uint32_t frequency_ms) {$/;"	f	class:RSCamera
startSimulation	build/include/tool/WorldWindow.cpp	/^void WorldWindow::startSimulation() {$/;"	f	class:WorldWindow
startSimulation	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::startSimulation() {$/;"	f	class:WorldWindow
startTCP	core/communications/CommunicationModule.cpp	/^void CommunicationModule::startTCP() {$/;"	f	class:CommunicationModule
startX_	build/include/tool/ImageWidget.h	/^    int startX_, startY_, currentX_, currentY_;$/;"	m	class:ImageWidget
startX_	tools/UTNaoTool/ImageWidget.h	/^    int startX_, startY_, currentX_, currentY_;$/;"	m	class:ImageWidget
startY_	build/include/tool/ImageWidget.h	/^    int startX_, startY_, currentX_, currentY_;$/;"	m	class:ImageWidget
startY_	tools/UTNaoTool/ImageWidget.h	/^    int startX_, startY_, currentX_, currentY_;$/;"	m	class:ImageWidget
start_	core/memory/Log.h	/^    int start_, finish_;$/;"	m	class:Log
start_capture	lib/lua/src/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
start_command_	core/memory/WalkRequestBlock.h	/^  bool start_command_;$/;"	m	struct:WalkRequestBlock
start_frame	core/python/behaviors/custom_kick.py	/^start_frame = -1$/;"	v
start_time	core/memory/FrameInfoBlock.h	/^  double start_time;$/;"	m	struct:FrameInfoBlock
start_time_	core/memory/KickEngineBlock.h	/^  float start_time_;$/;"	m	struct:KickEngineBlock
started	core/python/state_machine.py	/^  def started(self):$/;"	m	class:Event
started	core/python/task.py	/^  def started(self):$/;"	m	class:BaseTask
startedBy	core/math/Range.h	/^    bool startedBy(const Range<T>& r) const {return min == r.min && max > r.max;}$/;"	f	class:Range
startingSidelinePoses	core/common/RobotPositions.cpp	/^Pose2D* RobotPositions::startingSidelinePoses = new Pose2D[NUM_TEAM_POSES];$/;"	m	class:RobotPositions	file:
startingSidelinePoses	core/common/RobotPositions.h	/^    static Pose2D* startingSidelinePoses;$/;"	m	class:RobotPositions
startpc	lib/lua/src/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar
starts	core/math/Range.h	/^    bool starts(const Range<T>& r) const {return min == r.min && max < r.max;}$/;"	f	class:Range
startx	lib/alglib/optimization.h	/^    ae_vector startx;$/;"	m	struct:alglib_impl::__anon71
stat_desc	lib/zlib/deflate.h	/^    static_tree_desc *stat_desc; \/* the corresponding static tree *\/$/;"	m	struct:tree_desc_s
state	core/communications/RoboCupGameControlData.h	/^  uint8_t state;                \/\/ state of the game (STATE_READY, STATE_PLAYING, etc)$/;"	m	struct:RoboCupGameControlData
state	core/memory/GameStateBlock.h	/^  int state() { return state_; }$/;"	f	struct:GameStateBlock
state	core/memory/LocalizationBlock.h	/^    Eigen::Matrix<float, STATE_SIZE, 1, Eigen::DontAlign> state;$/;"	m	struct:LocalizationBlock
state	core/motion/SpecialMotionModule.h	/^  State state;$/;"	m	class:SpecialMotionModule
state	core/motion/rswalk2014/perception/kinematics/CKF.hpp	/^      Eigen::Vector4f state; \/\/ roll, pitch, roll_velocity, pitch_velocity$/;"	m	class:CKF
state	lib/zlib/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
stateElapsedTime	core/memory/GameStateBlock.h	/^  int stateElapsedTime() {$/;"	f	struct:GameStateBlock
stateEstimates	core/opponents/UKF4.h	/^  NMatrix stateEstimates;          \/\/ State estimates.             (Xhat NMatrix)$/;"	m	class:UKF4
stateExists	core/common/StateMachine.cpp	/^bool StateMachine::stateExists(std::string name) {$/;"	f	class:StateMachine
stateNames	core/common/States.h	/^const std::string stateNames[] = {$/;"	v
stateStandardDeviations	core/opponents/UKF4.h	/^  NMatrix stateStandardDeviations; \/\/ Standard Deviation NMatrix.   (S NMatrix)$/;"	m	class:UKF4
stateStartTime	core/memory/GameStateBlock.h	/^  int stateStartTime() {$/;"	f	struct:GameStateBlock
stateStartTime	core/motion/SpecialMotionModule.h	/^  float stateStartTime;$/;"	m	class:SpecialMotionModule
stateStartTime_	core/memory/GameStateBlock.h	/^  int stateStartTime_;$/;"	m	struct:GameStateBlock
stateTime_	build/include/tool/simulation/IsolatedBehaviorSimulation.h	/^    int stateTime_;$/;"	m	class:IsolatedBehaviorSimulation
stateTime_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.h	/^    int stateTime_;$/;"	m	class:IsolatedBehaviorSimulation
stateWnd_	build/include/tool/UTMainWnd.h	/^  StateWindow* stateWnd_;$/;"	m	class:UTMainWnd
stateWnd_	tools/UTNaoTool/UTMainWnd.h	/^  StateWindow* stateWnd_;$/;"	m	class:UTMainWnd
state_	core/memory/AudioProcessingBlock.h	/^    AudioState state_;$/;"	m	struct:AudioProcessingBlock
state_	core/memory/GameStateBlock.h	/^  int state_, prevstate_;$/;"	m	struct:GameStateBlock
state_	core/memory/KickEngineBlock.h	/^  Kick_State state_; \/\/ what state of kick?$/;"	m	struct:KickEngineBlock
state_	core/memory/KickModuleBlock.h	/^  KickState::State state_;$/;"	m	struct:KickModuleBlock
state_	core/motion/KickModule.h	/^    KickState state_;$/;"	m	class:KickModule
state_machine	core/python/pose.py	/^import task, util, state_machine$/;"	i
state_machine_name_	core/common/StateMachine.h	/^  std::string state_machine_name_;$/;"	m	class:StateMachine
state_size	lib/lua/src/lstate.c	/^#define state_size(/;"	d	file:
state_start_frame_	core/memory/KickModuleBlock.h	/^  int state_start_frame_;$/;"	m	struct:KickModuleBlock
state_start_time_	core/memory/KickModuleBlock.h	/^  float state_start_time_;$/;"	m	struct:KickModuleBlock
state_time	core/motion/KickParameters.h	/^  float state_time;$/;"	m	struct:KickStateInfo
statement	lib/lua/src/lparser.c	/^static int statement (LexState *ls) {$/;"	f	file:
states	core/motion/KickParameters.h	/^  KickStateInfo states[KickState::NUM_KICK_STATES];$/;"	m	struct:KickParameters
states_	core/common/StateMachine.h	/^  std::vector<StatePair> states_;$/;"	m	class:StateMachine
static_bl_desc	lib/zlib/trees.c	/^local static_tree_desc  static_bl_desc =$/;"	v
static_d_desc	lib/zlib/trees.c	/^local static_tree_desc  static_d_desc =$/;"	v
static_dtree	lib/zlib/trees.c	/^local ct_data static_dtree[D_CODES];$/;"	v
static_dtree	lib/zlib/trees.h	/^local const ct_data static_dtree[D_CODES] = {$/;"	v
static_l_desc	lib/zlib/trees.c	/^local static_tree_desc  static_l_desc =$/;"	v
static_len	lib/zlib/deflate.h	/^    ulg static_len;     \/* bit length of current block with static trees *\/$/;"	m	struct:internal_state
static_ltree	lib/zlib/trees.c	/^local ct_data static_ltree[L_CODES+2];$/;"	v
static_ltree	lib/zlib/trees.h	/^local const ct_data static_ltree[L_CODES+2] = {$/;"	v
static_tree	lib/zlib/trees.c	/^    const ct_data *static_tree;  \/* static tree or NULL *\/$/;"	m	struct:static_tree_desc_s	file:
static_tree_desc	lib/zlib/deflate.h	/^typedef struct static_tree_desc_s  static_tree_desc;$/;"	t	typeref:struct:static_tree_desc_s
static_tree_desc_s	lib/zlib/deflate.c	/^struct static_tree_desc_s {int dummy;}; \/* for buggy compilers *\/$/;"	s	file:
static_tree_desc_s	lib/zlib/trees.c	/^struct static_tree_desc_s {$/;"	s	file:
statnames	lib/lua/src/lbaselib.c	/^static const char *const statnames[] =$/;"	v	file:
status	lib/lua/src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	lib/lua/src/ldump.c	/^ int status;$/;"	m	struct:__anon85	file:
status	lib/lua/src/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State
status	lib/lua/src/lua.c	/^  int status;$/;"	m	struct:Smain	file:
status	lib/yaml-cpp/src/scanner.h	/^			STATUS status;$/;"	m	struct:YAML::Scanner::IndentMarker
status	lib/yaml-cpp/src/token.h	/^		STATUS status;$/;"	m	struct:YAML::Token
status	lib/zlib/deflate.h	/^    int   status;        \/* as the name implies *\/$/;"	m	struct:internal_state
statusTimer	build/include/tool/FilesWindow.h	/^		QTimer *statusTimer;$/;"	m	class:FilesWindow
statusTimer	tools/UTNaoTool/FilesWindow.h	/^		QTimer *statusTimer;$/;"	m	class:FilesWindow
statuses_	build/include/tool/TeamConfigWindow.h	/^    std::map<int, QLabel*> statuses_;$/;"	m	class:TeamConfigWindow
statuses_	build/include/tool/TeamPacketWidget.h	/^    std::map<RobotSelection,QLabel*> statuses_;$/;"	m	class:TeamPacketWidget
statuses_	tools/UTNaoTool/TeamConfigWindow.h	/^    std::map<int, QLabel*> statuses_;$/;"	m	class:TeamConfigWindow
statuses_	tools/UTNaoTool/TeamPacketWidget.h	/^    std::map<RobotSelection,QLabel*> statuses_;$/;"	m	class:TeamPacketWidget
stddev	core/vision/structures/BallCandidate.h	/^  float stddev;$/;"	m	struct:BallCandidate
step	build/include/tool/simulation/PhysicsSimulator.cpp	/^void PhysicsSimulator::step() {$/;"	f	class:PhysicsSimulator
step	build/include/tool/simulation/RobotMovementSimulator.cpp	/^void RobotMovementSimulator::step() {$/;"	f	class:RobotMovementSimulator
step	interfaces/sim_spark/cdecode.h	/^	base64_decodestep step;$/;"	m	struct:__anon17
step	interfaces/sim_spark/cencode.h	/^	base64_encodestep step;$/;"	m	struct:__anon19
step	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^void PhysicsSimulator::step() {$/;"	f	class:PhysicsSimulator
step	tools/UTNaoTool/simulation/RobotMovementSimulator.cpp	/^void RobotMovementSimulator::step() {$/;"	f	class:RobotMovementSimulator
stepBall	build/include/tool/simulation/PhysicsSimulator.cpp	/^void PhysicsSimulator::stepBall() {$/;"	f	class:PhysicsSimulator
stepBall	tools/UTNaoTool/simulation/PhysicsSimulator.cpp	/^void PhysicsSimulator::stepBall() {$/;"	f	class:PhysicsSimulator
stepCheckBallCollisions	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepCheckBallCollisions(Point2D &ballLoc, Point2D &ballVel) {$/;"	f	class:BehaviorSimulation
stepCheckBallCollisions	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepCheckBallCollisions(Point2D &ballLoc, Point2D &ballVel) {$/;"	f	class:BehaviorSimulation
stepCheckBounds	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepCheckBounds(Point2D &ballLoc, Point2D &ballVel) {$/;"	f	class:BehaviorSimulation
stepCheckBounds	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepCheckBounds(Point2D &ballLoc, Point2D &ballVel) {$/;"	f	class:BehaviorSimulation
stepCheckGoal	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepCheckGoal(Point2D &ballLoc, Point2D &ballVel) {$/;"	f	class:BehaviorSimulation
stepCheckGoal	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepCheckGoal(Point2D &ballLoc, Point2D &ballVel) {$/;"	f	class:BehaviorSimulation
stepCounter	core/motion/rswalk2014/BodyModel.hpp	/^      int stepCounter;$/;"	m	class:BodyModel
stepError	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::stepError() {$/;"	f	class:LocalizationSimulation
stepError	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::stepError() {$/;"	f	class:LocalizationSimulation
stepHeight	core/memory/ALWalkParamBlock.h	/^  float stepHeight;$/;"	m	struct:ALWalkParamBlock
stepPlayerBounds	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerBounds(int i) {$/;"	f	class:BehaviorSimulation
stepPlayerBounds	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerBounds(int i) {$/;"	f	class:BehaviorSimulation
stepPlayerBumpBall	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerBumpBall(int \/*i*\/, Point2D &ballLoc, Point2D &ballVel, WorldObject *robot) {$/;"	f	class:BehaviorSimulation
stepPlayerBumpBall	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerBumpBall(int \/*i*\/, Point2D &ballLoc, Point2D &ballVel, WorldObject *robot) {$/;"	f	class:BehaviorSimulation
stepPlayerCollisions	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerCollisions(int i, WorldObject *robot) {$/;"	f	class:BehaviorSimulation
stepPlayerCollisions	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerCollisions(int i, WorldObject *robot) {$/;"	f	class:BehaviorSimulation
stepPlayerComm	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerComm(int i) {$/;"	f	class:BehaviorSimulation
stepPlayerComm	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerComm(int i) {$/;"	f	class:BehaviorSimulation
stepPlayerFallen	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerFallen(int i) {$/;"	f	class:BehaviorSimulation
stepPlayerFallen	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerFallen(int i) {$/;"	f	class:BehaviorSimulation
stepPlayerKick	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerKick(int i) {$/;"	f	class:BehaviorSimulation
stepPlayerKick	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerKick(int i) {$/;"	f	class:BehaviorSimulation
stepPlayerPenaltyBox	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerPenaltyBox(int i, WorldObject *robot) {$/;"	f	class:BehaviorSimulation
stepPlayerPenaltyBox	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepPlayerPenaltyBox(int i, WorldObject *robot) {$/;"	f	class:BehaviorSimulation
stepPose	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::stepPose() {$/;"	f	class:LocalizationSimulation
stepPose	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::stepPose() {$/;"	f	class:LocalizationSimulation
stepTimer	build/include/tool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepTimer(Point2D &ballLoc,Point2D &ballVel) {$/;"	f	class:BehaviorSimulation
stepTimer	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^void BehaviorSimulation::stepTimer(Point2D &ballLoc,Point2D &ballVel) {$/;"	f	class:BehaviorSimulation
step_A	interfaces/sim_spark/cencode.h	/^	step_A, step_B, step_C$/;"	e	enum:__anon18
step_B	interfaces/sim_spark/cencode.h	/^	step_A, step_B, step_C$/;"	e	enum:__anon18
step_C	interfaces/sim_spark/cencode.h	/^	step_A, step_B, step_C$/;"	e	enum:__anon18
step_a	interfaces/sim_spark/cdecode.h	/^	step_a, step_b, step_c, step_d$/;"	e	enum:__anon16
step_after_next_	core/memory/WalkEngineBlock.h	/^  Step step_after_next_;$/;"	m	struct:WalkEngineBlock
step_b	interfaces/sim_spark/cdecode.h	/^	step_a, step_b, step_c, step_d$/;"	e	enum:__anon16
step_c	interfaces/sim_spark/cdecode.h	/^	step_a, step_b, step_c, step_d$/;"	e	enum:__anon16
step_current_	core/memory/WalkEngineBlock.h	/^  Step step_current_;$/;"	m	struct:WalkEngineBlock
step_d	interfaces/sim_spark/cdecode.h	/^	step_a, step_b, step_c, step_d$/;"	e	enum:__anon16
step_height_	core/motion/WalkEngineParameters.h	/^  float step_height_;$/;"	m	struct:WalkEngineParameters
step_into_kick_	core/memory/WalkRequestBlock.h	/^  bool step_into_kick_;$/;"	m	struct:WalkRequestBlock
step_into_kick_	core/motion/KickParameters.h	/^  bool step_into_kick_;$/;"	m	struct:KickParameters
step_into_kick_state_	core/motion/rswalk2014/RSWalkModule2014.h	/^        StepIntoKickState step_into_kick_state_;$/;"	m	class:RSWalkModule2014
step_kick_type_	core/memory/WalkRequestBlock.h	/^  int step_kick_type_;$/;"	m	struct:WalkRequestBlock
step_next_	core/memory/WalkEngineBlock.h	/^  Step step_next_;$/;"	m	struct:WalkEngineBlock
step_prev_	core/memory/WalkEngineBlock.h	/^  Step step_prev_; \/\/ stored for calculating the swing leg$/;"	m	struct:WalkEngineBlock
step_side_size	tools/testStepSide.py	/^step_side_size = -20$/;"	v
step_size	tools/testStep.py	/^step_size = 40$/;"	v
step_speed_factor_	core/motion/WalkEngineParameters.h	/^  float step_speed_factor_; \/\/ factor for sigmoid$/;"	m	struct:WalkEngineParameters
step_start_time_	core/motion/WalkEngineParameters.h	/^  float step_start_time_;$/;"	m	struct:WalkEngineParameters
step_stop_time_	core/motion/WalkEngineParameters.h	/^  float step_stop_time_;$/;"	m	struct:WalkEngineParameters
step_two_after_next_	core/memory/WalkEngineBlock.h	/^  Step step_two_after_next_;$/;"	m	struct:WalkEngineBlock
stepcount	interfaces/sim_spark/cencode.h	/^	int stepcount;$/;"	m	struct:__anon19
steps	build/include/tool/simulation/LocalizationSimulation.h	/^  float steps;$/;"	m	struct:AgentError
steps	build/include/tool/simulation/LocalizationSimulation.h	/^  int steps;$/;"	m	struct:LocSimAgent
steps	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  float steps;$/;"	m	struct:AgentError
steps	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  int steps;$/;"	m	struct:LocSimAgent
stick_figure_	build/include/tool/MotionGLWidget.h	/^  Vector3<float> stick_figure_[BodyFrame::NUM_POINTS];$/;"	m	class:MotionGLWidget
stick_figure_	tools/UTNaoTool/MotionGLWidget.h	/^  Vector3<float> stick_figure_[BodyFrame::NUM_POINTS];$/;"	m	class:MotionGLWidget
stiffValues	build/include/tool/JointsWindow.h	/^  QLabel* stiffValues;$/;"	m	class:JointsWindow
stiffValues	tools/UTNaoTool/JointsWindow.h	/^  QLabel* stiffValues;$/;"	m	class:JointsWindow
stiffness	core/motion/SpecialMotionParser.h	/^     float stiffness;$/;"	m	class:SpecialMotion
stiffness	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float stiffness;                                        \/\/ global stiffness (poweer to motors)$/;"	m	class:Walk2014Generator
stiffness_	core/memory/JointBlock.h	/^  float stiffness_[NUM_JOINTS];$/;"	m	struct:JointBlock
stiffness_	core/memory/JointCommandBlock.h	/^  float stiffness_[NUM_JOINTS];$/;"	m	struct:JointCommandBlock
stiffness_commands_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue stiffness_commands_;$/;"	m	class:ALMotionWrapper
stiffness_commands_	interfaces/nao/src/dcmwrapper.h	/^  AL::ALValue stiffness_commands_;$/;"	m	class:DCMWrapper
stiffness_joint_names_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue stiffness_joint_names_;$/;"	m	class:ALMotionWrapper
stiffness_name_	interfaces/nao/src/dcmwrapper.cpp	/^const std::string DCMWrapper::stiffness_name_ = "jointStiffness";$/;"	m	class:DCMWrapper	file:
stiffness_name_	interfaces/nao/src/dcmwrapper.h	/^  static const std::string stiffness_name_;$/;"	m	class:DCMWrapper
stiffness_time_	core/memory/JointCommandBlock.h	/^  float stiffness_time_;$/;"	m	struct:JointCommandBlock
stiffness_time_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue stiffness_time_;$/;"	m	class:ALMotionWrapper
stiffnesses	core/motion/rswalk2014/types/JointValues.hpp	/^   float stiffnesses[RSJoints::NUMBER_OF_JOINTS];$/;"	m	struct:JointValues
stimer	core/python/UTdebug.py	/^def stimer(name):$/;"	f
stmax	lib/alglib/alglibinternal.h	/^    double stmax;$/;"	m	struct:alglib_impl::__anon21
stmax	lib/alglib/dataanalysis.h	/^    double stmax;$/;"	m	struct:alglib_impl::__anon46
stmin	lib/alglib/alglibinternal.h	/^    double stmin;$/;"	m	struct:alglib_impl::__anon21
stmin	lib/alglib/dataanalysis.h	/^    double stmin;$/;"	m	struct:alglib_impl::__anon46
stochasticInterpolation	interfaces/sim_spark/Random.h	/^   cartesianCoord stochasticInterpolation( void )   \/\/ Stochastic Interpolation$/;"	f	class:Random
stop	build/include/tool/calibration/JointCalibrator.cpp	/^void JointCalibrator::stop() {$/;"	f	class:JointCalibrator
stop	core/common/Profiling.cpp	/^void Timer::stop() {$/;"	f	class:Timer
stop	core/motion/rswalk2014/ActionGenerator.cpp	/^void ActionGenerator::stop(){$/;"	f	class:ActionGenerator
stop	core/motion/rswalk2014/Generator.hpp	/^      virtual void stop() { \/* defaults to reset() - can be overridden *\/$/;"	f	class:Generator
stop	core/motion/rswalk2014/RefPickupGenerator.cpp	/^void RefPickupGenerator::stop() {$/;"	f	class:RefPickupGenerator
stop	core/motion/rswalk2014/StandGenerator.cpp	/^void StandGenerator::stop() {$/;"	f	class:StandGenerator
stop	core/motion/rswalk2014/Walk2014Generator.cpp	/^void Walk2014Generator:: stop() {$/;"	f	class:Walk2014Generator
stop	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void WalkEnginePreProcessor::stop() {$/;"	f	class:WalkEnginePreProcessor
stop	core/python/UTdebug.py	/^  def stop(self):$/;"	m	class:Timer
stop	core/python/behaviors/win.py	/^    def stop(self):$/;"	m	class:Playing.Win
stop	core/python/util.py	/^  def stop(self):$/;"	m	class:Timer
stop	interfaces/nao/src/naointerface.cpp	/^void naointerface::stop() {$/;"	f	class:naointerface
stop	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^void JointCalibrator::stop() {$/;"	f	class:JointCalibrator
stop	tools/behaviorSim/cma.py	/^    def stop(self): $/;"	m	class:OOOptimizer
stop	tools/behaviorSim/cma.py	/^    def stop(self, check=True):$/;"	m	class:CMAEvolutionStrategy
stopAudioCapture	interfaces/nao/src/naointerface.cpp	/^void naointerface::stopAudioCapture(){$/;"	f	class:naointerface
stopCalibration	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::stopCalibration() {$/;"	f	class:ExtrinsicCalibrationWidget
stopCalibration	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::stopCalibration() {$/;"	f	class:ExtrinsicCalibrationWidget
stopCollection	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::stopCollection() {$/;"	f	class:IntrinsicCalibrationWidget
stopCollection	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::stopCollection() {$/;"	f	class:IntrinsicCalibrationWidget
stopLiveMode	build/include/tool/WorldWindow.cpp	/^void WorldWindow::stopLiveMode() {$/;"	f	class:WorldWindow
stopLiveMode	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::stopLiveMode() {$/;"	f	class:WorldWindow
stopLogging	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::stopLogging() {$/;"	f	class:TeamConfigWindow
stopLogging	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::stopLogging() {$/;"	f	class:TeamConfigWindow
stopMultiLogging	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::stopMultiLogging(vector<QString> ips, function<void(QString)> callback) {$/;"	f	class:LogSelectWindow
stopMultiLogging	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::stopMultiLogging(vector<QString> ips, function<void(QString)> callback) {$/;"	f	class:LogSelectWindow
stopNaoQi	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::stopNaoQi() {$/;"	f	class:TeamConfigWindow
stopNaoQi	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::stopNaoQi() {$/;"	f	class:TeamConfigWindow
stopNaoqi	build/include/tool/FilesWindow.cpp	/^void FilesWindow::stopNaoqi() {$/;"	f	class:FilesWindow
stopNaoqi	build/include/tool/ProcessExecutor.cpp	/^void PE::stopNaoqi(QString ip) {$/;"	f	class:PE
stopNaoqi	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::stopNaoqi() {$/;"	f	class:FilesWindow
stopNaoqi	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::stopNaoqi(QString ip) {$/;"	f	class:PE
stopRecording	core/motion/rswalk2014/perception/vision/RSCamera.cpp	/^void RSCamera::stopRecording() {$/;"	f	class:RSCamera
stopSimulation	build/include/tool/WorldWindow.cpp	/^void WorldWindow::stopSimulation() {$/;"	f	class:WorldWindow
stopSimulation	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::stopSimulation() {$/;"	f	class:WorldWindow
stopStream	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::stopStream() {$/;"	f	class:UTMainWnd
stopStream	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::stopStream() {$/;"	f	class:UTMainWnd
stop_counter	core/python/behaviors/pid_distance_angle.py	/^stop_counter = 0$/;"	v
stopped	core/motion/rswalk2014/RefPickupGenerator.hpp	/^      bool stopped;$/;"	m	class:RefPickupGenerator
stopped	core/motion/rswalk2014/Walk2014Generator.hpp	/^   bool stopped;$/;"	m	class:Walk2014Generator
stopping	core/motion/rswalk2014/RefPickupGenerator.hpp	/^      bool stopping;$/;"	m	class:RefPickupGenerator
stopping	core/motion/rswalk2014/Walk2014Generator.hpp	/^   bool stopping;$/;"	m	class:Walk2014Generator
storedAngles	core/motion/SpecialMotionModule.h	/^  float storedAngles[NUM_JOINTS];$/;"	m	class:SpecialMotionModule
storedCommands	core/motion/SpecialMotionModule.h	/^  float storedCommands[NUM_JOINTS];$/;"	m	class:SpecialMotionModule
storedTimeStamp	core/imageCapture/NaoCamera.h	/^           storedTimeStamp; \/**< Timestamp when the next image recording starts. *\/$/;"	m	class:NaoCamera
stp	lib/alglib/optimization.h	/^    double stp;$/;"	m	struct:alglib_impl::__anon69
stp	lib/alglib/optimization.h	/^    double stp;$/;"	m	struct:alglib_impl::__anon75
stp	lib/alglib/optimization.h	/^    double stp;$/;"	m	struct:alglib_impl::__anon77
stplen	lib/alglib/alglibinternal.h	/^    double stplen;$/;"	m	struct:alglib_impl::__anon22
stpmax	lib/alglib/alglibinternal.h	/^    double stpmax;$/;"	m	struct:alglib_impl::__anon22
stpmax	lib/alglib/interpolation.h	/^    double stpmax;$/;"	m	struct:alglib_impl::__anon63
stpmax	lib/alglib/optimization.h	/^    double stpmax;$/;"	m	struct:alglib_impl::__anon69
stpmax	lib/alglib/optimization.h	/^    double stpmax;$/;"	m	struct:alglib_impl::__anon73
stpmax	lib/alglib/optimization.h	/^    double stpmax;$/;"	m	struct:alglib_impl::__anon75
stpmax	lib/alglib/optimization.h	/^    double stpmax;$/;"	m	struct:alglib_impl::__anon77
stpmax	lib/alglib/optimization.h	/^    double stpmax;$/;"	m	struct:alglib_impl::__anon79
stpmax	lib/alglib/solvers.h	/^    double stpmax;$/;"	m	struct:alglib_impl::__anon83
str	lib/yaml-cpp/include/yaml-cpp/ostream.h	/^		const char *str() const { return m_buffer; }$/;"	f	class:YAML::ostream
strCol	build/include/tool/ClassificationWidget.h	/^        QString strCol[NUM_COLORS];$/;"	m	class:ClassificationWidget
strCol	tools/UTNaoTool/ClassificationWidget.h	/^        QString strCol[NUM_COLORS];$/;"	m	class:ClassificationWidget
str_byte	lib/lua/src/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	lib/lua/src/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	lib/lua/src/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	lib/lua/src/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	lib/lua/src/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	lib/lua/src/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	lib/lua/src/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	lib/lua/src/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	lib/lua/src/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	lib/lua/src/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	lib/lua/src/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_matrix_create	lib/alglib/ap.cpp	/^void alglib::str_matrix_create(const char *src, std::vector< std::vector<const char*> > *p_mat)$/;"	f	class:alglib
str_rep	lib/lua/src/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	lib/lua/src/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	lib/lua/src/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_upper	lib/lua/src/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
str_vector_create	lib/alglib/ap.cpp	/^void alglib::str_vector_create(const char *src, bool match_head_only, std::vector<const char*> *p_vec)$/;"	f	class:alglib
straight_value_one_left_swing_	core/motion/KickParameters.h	/^  float straight_value_one_left_swing_;$/;"	m	struct:KickParameters
straight_value_one_right_swing_	core/motion/KickParameters.h	/^  float straight_value_one_right_swing_;$/;"	m	struct:KickParameters
straight_value_two_left_swing_	core/motion/KickParameters.h	/^  float straight_value_two_left_swing_;$/;"	m	struct:KickParameters
straight_value_two_right_swing_	core/motion/KickParameters.h	/^  float straight_value_two_right_swing_;$/;"	m	struct:KickParameters
strategy	lib/zlib/deflate.h	/^    int strategy; \/* favor or force Huffman coding*\/$/;"	m	struct:internal_state
strategy	lib/zlib/gzguts.h	/^    int strategy;           \/* compression strategy *\/$/;"	m	struct:__anon135
stream	core/communications/CommunicationModule.cpp	/^void* stream(void *arg) {$/;"	f
stream	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			std::istream& stream() {return m_yaml;}$/;"	f	class:Test::__anon130::EncodingTester
stream_lock_	core/communications/CommunicationModule.h	/^  Lock *stream_lock_;$/;"	m	class:CommunicationModule
stream_memory_	build/include/tool/UTMainWnd.h	/^  Memory stream_memory_;$/;"	m	class:UTMainWnd
stream_memory_	tools/UTNaoTool/UTMainWnd.h	/^  Memory stream_memory_;$/;"	m	class:UTMainWnd
stream_msg_	build/include/tool/UTMainWnd.h	/^  StreamingMessage stream_msg_;$/;"	m	class:UTMainWnd
stream_msg_	core/communications/CommunicationModule.h	/^  StreamingMessage *stream_msg_;$/;"	m	class:CommunicationModule
stream_msg_	tools/UTNaoTool/UTMainWnd.h	/^  StreamingMessage stream_msg_;$/;"	m	class:UTMainWnd
stream_thread_	core/communications/CommunicationModule.h	/^  pthread_t stream_thread_;$/;"	m	class:CommunicationModule
streaming	build/include/tool/ToolConfig.h	/^    bool streaming;$/;"	m	class:ToolConfig
streaming	tools/UTNaoTool/ToolConfig.h	/^    bool streaming;$/;"	m	class:ToolConfig
streaming_	build/include/tool/VisionWindow.h	/^  bool streaming_;$/;"	m	class:VisionWindow
streaming_	tools/UTNaoTool/VisionWindow.h	/^  bool streaming_;$/;"	m	class:VisionWindow
streaming_logger_	core/communications/CommunicationModule.h	/^  Logger *streaming_logger_;$/;"	m	class:CommunicationModule
stride	lib/alglib/ap.h	/^    ae_int64_t     stride;$/;"	m	struct:alglib_impl::__anon34
stride	lib/alglib/ap.h	/^    ae_int_t stride;$/;"	m	struct:alglib_impl::ae_matrix
stringmark	lib/lua/src/lgc.c	/^#define stringmark(/;"	d	file:
stringtable	lib/lua/src/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	lib/lua/src/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	lib/lua/src/ldump.c	/^ int strip;$/;"	m	struct:__anon85	file:
stripping	lib/lua/src/luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	file:
strlib	lib/lua/src/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strm	lib/zlib/deflate.h	/^    z_streamp strm;      \/* pointer back to this zlib stream *\/$/;"	m	struct:internal_state
strm	lib/zlib/gzguts.h	/^    z_stream strm;          \/* stream structure in-place (not a pointer) *\/$/;"	m	struct:__anon135
strongBearing	core/memory/BehaviorBlock.h	/^  float strongBearing;$/;"	m	struct:KickEvaluation
strongPoint	core/memory/BehaviorBlock.h	/^  Point2D strongPoint;$/;"	m	struct:KickEvaluation
strongValid	core/memory/BehaviorBlock.h	/^  int strongValid;$/;"	m	struct:KickEvaluation
strstart	lib/zlib/deflate.h	/^    uInt strstart;               \/* start of string to insert *\/$/;"	m	struct:internal_state
strt	lib/lua/src/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State
structinfo	lib/alglib/dataanalysis.h	/^    ae_vector structinfo;$/;"	m	struct:alglib_impl::__anon44
structinfo	lib/alglib/dataanalysis.h	/^    ae_vector structinfo;$/;"	m	struct:alglib_impl::__anon50
strwinerror	lib/zlib/minigzip.c	/^static char *strwinerror (error)$/;"	f	file:
studentT	interfaces/sim_spark/Random.h	/^   float studentT( int df )   \/\/ Student's T$/;"	f	class:Random
studenttdistribution	lib/alglib/specialfunctions.cpp	/^double studenttdistribution(ae_int_t k, double t, ae_state *_state)$/;"	f	namespace:alglib_impl
studenttdistribution	lib/alglib/specialfunctions.cpp	/^double studenttdistribution(const ae_int_t k, const double t)$/;"	f	namespace:alglib
studentttest1	lib/alglib/statistics.cpp	/^void studentttest1(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
studentttest1	lib/alglib/statistics.cpp	/^void studentttest1(const real_1d_array &x, const ae_int_t n, const double mean, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
studentttest2	lib/alglib/statistics.cpp	/^void studentttest2(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
studentttest2	lib/alglib/statistics.cpp	/^void studentttest2(const real_1d_array &x, const ae_int_t n, const real_1d_array &y, const ae_int_t m, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
stx	lib/alglib/alglibinternal.h	/^    double stx;$/;"	m	struct:alglib_impl::__anon21
stx	lib/alglib/dataanalysis.h	/^    double stx;$/;"	m	struct:alglib_impl::__anon46
sty	lib/alglib/alglibinternal.h	/^    double sty;$/;"	m	struct:alglib_impl::__anon21
sty	lib/alglib/dataanalysis.h	/^    double sty;$/;"	m	struct:alglib_impl::__anon46
sub	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      inline void sub(const XYZ_Coord &opt) {$/;"	f	class:XYZ_Coord
sub1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> sub1(const U& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
sub1	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> sub1(const U& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
sub2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> sub2(const FTypeName<T,0>& a, const U& b)$/;"	f	namespace:fadbad
sub2	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> sub2(const FTypeName<T,N>& a, const U& b)$/;"	f	namespace:fadbad
sub3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> sub3(const FTypeName<T,0>& a, const FTypeName<T,0>& b)$/;"	f	namespace:fadbad
sub3	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> sub3(const FTypeName<T,N>& a, const FTypeName<T,N>& b)$/;"	f	namespace:fadbad
subCopy	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^static inline XYZ_Coord subCopy(const XYZ_Coord &A, const XYZ_Coord &B) {$/;"	f
subexpr	lib/lua/src/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, unsigned int limit) {$/;"	f	file:
subplot	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
subprocess	bin/common.py	/^import subprocess, os$/;"	i
subprocess	bin/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
subprocess	bin/compile_copy	/^import sys, subprocess, os$/;"	i
subprocess	bin/copy_robot	/^import sys, subprocess, os$/;"	i
subprocess	bin/nao_start	/^import subprocess$/;"	i
subprocess	bin/simulator	/^import subprocess$/;"	i
subprocess	build/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
subprocess	build/compile_copy	/^import sys, subprocess, os$/;"	i
subprocess	build/copy_robot	/^import sys, subprocess, os$/;"	i
subprocess	build/cpcompile	/^import sys, subprocess, os$/;"	i
subprocess	build/luaswig/generateSwig.py	/^import sys, os, subprocess, re$/;"	i
subprocess	build/make_docs	/^import sys, subprocess, os$/;"	i
subprocess	build/pythonswig/generateSwig.py	/^import sys, os, subprocess, re$/;"	i
subprocess	core/sensor/offline/genInertialFilterMatrices.py	/^import subprocess, sys$/;"	i
subprocess	data/scripts/wireless-monitor.py	/^import subprocess, re, time$/;"	i
subprocess	install/copy_wpa.py	/^import os, shutil, subprocess$/;"	i
subprocess	install/fix_autoload.py	/^import subprocess, sys, os$/;"	i
subprocess	tools/behaviorSim/runCMAES.py	/^import json, sys, os, shutil, subprocess, re, time$/;"	i
subprocess	tools/behaviorSim/runJob.py	/^import subprocess$/;"	i
suffix_	core/memory/Memory.h	/^  const std::string suffix_;$/;"	m	class:Memory
suggestedstep	lib/alglib/optimization.h	/^    double suggestedstep;$/;"	m	struct:alglib_impl::__anon77
suggestion	core/communications/SPLStandardMessage.h	/^  int8_t suggestion[SPL_STANDARD_MESSAGE_MAX_NUM_OF_PLAYERS];$/;"	m	struct:SPLStandardMessage
sum	core/common/RingBufferWithSum.h	/^    C sum;$/;"	m	class:RingBufferWithSum
sum	core/common/RingQueueWithSum.h	/^    V sum;$/;"	m	class:RingQueueWithSum
sum	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
sumFSRs	core/sensor/SensorModule.cpp	/^float SensorModule::sumFSRs(int inds[], int num_fsrs) {$/;"	f	class:SensorModule
sumX	core/vision/structures/FieldLine.h	/^  float sumX, sumY, sumX2, sumY2, sumXY;$/;"	m	struct:FieldLine
sumX2	core/vision/structures/FieldLine.h	/^  float sumX, sumY, sumX2, sumY2, sumXY;$/;"	m	struct:FieldLine
sumXY	core/vision/structures/FieldLine.h	/^  float sumX, sumY, sumX2, sumY2, sumXY;$/;"	m	struct:FieldLine
sumY	core/vision/structures/FieldLine.h	/^  float sumX, sumY, sumX2, sumY2, sumXY;$/;"	m	struct:FieldLine
sumY2	core/vision/structures/FieldLine.h	/^  float sumX, sumY, sumX2, sumY2, sumXY;$/;"	m	struct:FieldLine
sum_zmp_errors_	core/memory/WalkEngineBlock.h	/^  Vector2<float> sum_zmp_errors_;$/;"	m	struct:WalkEngineBlock
sumabs	lib/alglib/integration.h	/^    double sumabs;$/;"	m	struct:alglib_impl::__anon54
sumerr	lib/alglib/integration.h	/^    double sumerr;$/;"	m	struct:alglib_impl::__anon54
supportBaseUpdated	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::supportBaseUpdated(bool) {$/;"	f	class:KeyframeWidget
supportBaseUpdated	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::supportBaseUpdated(bool) {$/;"	f	class:KeyframeWidget
supportChain	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      Chain supportChain;$/;"	m	class:Kinematics
supportFoothasChanged	core/motion/rswalk2014/Walk2014Generator.hpp	/^   bool supportFoothasChanged;                             \/\/ Indicates that support foot is deemed to have changed$/;"	m	class:Walk2014Generator
svalue	lib/lua/src/lobject.h	/^#define svalue(/;"	d
swap	build/include/tool/KeyframeWidget.cpp	/^void KeyframeItem::swap(QListWidgetItem* oitem) {$/;"	f	class:KeyframeItem
swap	lib/yaml-cpp/include/yaml-cpp/binary.h	/^        void swap(std::vector<unsigned char>& rhs) {$/;"	f	class:YAML::Binary
swap	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeItem::swap(QListWidgetItem* oitem) {$/;"	f	class:KeyframeItem
sweepgc	lib/lua/src/lstate.h	/^  GCObject **sweepgc;  \/* position of sweep in `rootgc' *\/$/;"	m	struct:global_State
sweeplist	lib/lua/src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepstrgc	lib/lua/src/lstate.h	/^  int sweepstrgc;  \/* position of sweep in `strt' *\/$/;"	m	struct:global_State
sweepwholelist	lib/lua/src/lgc.c	/^#define sweepwholelist(/;"	d	file:
swing	core/motion/KickParameters.h	/^  Vector3<float> swing;$/;"	m	struct:KickStateInfo
swingAngle	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float swingAngle;                                       \/\/ recovery angle for sideStepping$/;"	m	class:Walk2014Generator
swing_foot_	core/memory/WalkEngineBlock.h	/^  Pose3D swing_foot_;$/;"	m	struct:WalkEngineBlock
swing_leg_	core/memory/KickModuleBlock.h	/^  Kick::Leg swing_leg_; \/\/leg has been chosen$/;"	m	struct:KickModuleBlock
swing_length_	core/motion/KickParameters.h	/^  float swing_length_;$/;"	m	struct:KickParameters
swing_step_fwd	tools/testStep.py	/^def swing_step_fwd(t):$/;"	f
swing_tilt_amount_	core/motion/WalkEngineParameters.h	/^  float swing_tilt_amount_;$/;"	m	struct:WalkEngineParameters
swing_tilt_start_frac_	core/motion/WalkEngineParameters.h	/^  float swing_tilt_start_frac_;$/;"	m	struct:WalkEngineParameters
swing_tilt_stop_frac_	core/motion/WalkEngineParameters.h	/^  float swing_tilt_stop_frac_;$/;"	m	struct:WalkEngineParameters
swing_time_	core/motion/KickParameters.h	/^  float swing_time_;$/;"	m	struct:KickParameters
switch_interval_	core/sonar/SonarModule.h	/^  float switch_interval_;$/;"	m	class:SonarModule
sy	lib/alglib/interpolation.h	/^    double sy;$/;"	m	struct:alglib_impl::__anon57
symbexec	lib/lua/src/ldebug.c	/^static Instruction symbexec (const Proto *pt, int lastpc, int reg) {$/;"	f	file:
symmetricmatrixvectormultiply	lib/alglib/alglibinternal.cpp	/^void symmetricmatrixvectormultiply(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
symmetricrank2update	lib/alglib/alglibinternal.cpp	/^void symmetricrank2update(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
syncModels	core/memory/OpponentBlock.h	/^  void syncModels() {$/;"	f	struct:OpponentBlock
sync_al_walk_param_	core/MotionCore.h	/^  ALWalkParamBlock *sync_al_walk_param_;$/;"	m	class:MotionCore
sync_al_walk_param_	core/VisionCore.h	/^  ALWalkParamBlock *sync_al_walk_param_;$/;"	m	class:VisionCore
sync_body_model_	core/MotionCore.h	/^  BodyModelBlock *sync_body_model_;$/;"	m	class:MotionCore
sync_body_model_	core/VisionCore.h	/^  BodyModelBlock *sync_body_model_;$/;"	m	class:VisionCore
sync_joint_angles_	core/MotionCore.h	/^  JointBlock *sync_joint_angles_;$/;"	m	class:MotionCore
sync_joint_angles_	core/VisionCore.h	/^  JointBlock *sync_joint_angles_;$/;"	m	class:VisionCore
sync_joint_commands_	core/MotionCore.h	/^  JointCommandBlock *sync_joint_commands_;$/;"	m	class:MotionCore
sync_joint_commands_	core/VisionCore.h	/^  JointCommandBlock *sync_joint_commands_;$/;"	m	class:VisionCore
sync_kick_params_	core/MotionCore.h	/^  KickParamBlock *sync_kick_params_;$/;"	m	class:MotionCore
sync_kick_params_	core/VisionCore.h	/^  KickParamBlock *sync_kick_params_;$/;"	m	class:VisionCore
sync_kick_request_	core/MotionCore.h	/^  KickRequestBlock *sync_kick_request_;$/;"	m	class:MotionCore
sync_kick_request_	core/VisionCore.h	/^  KickRequestBlock *sync_kick_request_;$/;"	m	class:VisionCore
sync_odometry_	core/MotionCore.h	/^  OdometryBlock *sync_odometry_;$/;"	m	class:MotionCore
sync_odometry_	core/VisionCore.h	/^  OdometryBlock *sync_odometry_;$/;"	m	class:VisionCore
sync_processed_sonar_	core/MotionCore.h	/^  ProcessedSonarBlock *sync_processed_sonar_;$/;"	m	class:MotionCore
sync_processed_sonar_	core/VisionCore.h	/^  ProcessedSonarBlock *sync_processed_sonar_;$/;"	m	class:VisionCore
sync_sensors_	core/MotionCore.h	/^  SensorBlock *sync_sensors_;$/;"	m	class:MotionCore
sync_sensors_	core/VisionCore.h	/^  SensorBlock *sync_sensors_;$/;"	m	class:VisionCore
sync_walk_info_	core/MotionCore.h	/^  WalkInfoBlock* sync_walk_info_;$/;"	m	class:MotionCore
sync_walk_info_	core/VisionCore.h	/^  WalkInfoBlock *sync_walk_info_;$/;"	m	class:VisionCore
sync_walk_param_	core/MotionCore.h	/^  WalkParamBlock *sync_walk_param_;$/;"	m	class:MotionCore
sync_walk_param_	core/VisionCore.h	/^  WalkParamBlock *sync_walk_param_;$/;"	m	class:VisionCore
sync_walk_request_	core/MotionCore.h	/^  WalkRequestBlock *sync_walk_request_;$/;"	m	class:MotionCore
sync_walk_request_	core/VisionCore.h	/^  WalkRequestBlock *sync_walk_request_;$/;"	m	class:VisionCore
sync_walk_response_	core/MotionCore.h	/^  WalkResponseBlock *sync_walk_response_;$/;"	m	class:MotionCore
sync_walk_response_	core/VisionCore.h	/^  WalkResponseBlock *sync_walk_response_;$/;"	m	class:VisionCore
syncsearch	lib/zlib/inflate.c	/^local unsigned syncsearch(have, buf, len)$/;"	f
sys	bin/common.py	/^  import sys$/;"	i
sys	bin/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
sys	bin/compile_copy	/^import sys, subprocess, os$/;"	i
sys	bin/copy_robot	/^import sys, subprocess, os$/;"	i
sys	bin/nao_start	/^import sys$/;"	i
sys	bin/simInterface	/^import sys$/;"	i
sys	build/compile	/^import sys, subprocess, os, shutil, glob$/;"	i
sys	build/compile_copy	/^import sys, subprocess, os$/;"	i
sys	build/copy_robot	/^import sys, subprocess, os$/;"	i
sys	build/core/generate_block_operations.py	/^import inspect, os, sys$/;"	i
sys	build/cpcompile	/^import sys, subprocess, os$/;"	i
sys	build/luaswig/generateSwig.py	/^import sys, os, subprocess, re$/;"	i
sys	build/make_docs	/^import sys, subprocess, os$/;"	i
sys	build/pythonswig/generateSwig.py	/^import sys, os, subprocess, re$/;"	i
sys	core/python/core.py	/^import sys$/;"	i
sys	core/python/init.py	/^import sys, os, traceback$/;"	i
sys	core/python/memory.py	/^import core, sys$/;"	i
sys	core/sensor/offline/genInertialFilterMatrices.py	/^import subprocess, sys$/;"	i
sys	install/common.py	/^import sys, os, shutil, tempfile$/;"	i
sys	install/copy_wpa.py	/^  import sys$/;"	i
sys	install/fix_autoload.py	/^import subprocess, sys, os$/;"	i
sys	install/install	/^import os, sys, shutil$/;"	i
sys	install/install_lab	/^import os, sys, shutil$/;"	i
sys	install/install_naoqi	/^import os, sys$/;"	i
sys	install/setup_robot	/^  import sys$/;"	i
sys	tools/behaviorSim/cma.py	/^import sys$/;"	i
sys	tools/behaviorSim/runCMAES.py	/^import json, sys, os, shutil, subprocess, re, time$/;"	i
sys	tools/behaviorSim/runJob.py	/^import sys$/;"	i
sys	tools/plotCOM.py	/^  import sys$/;"	i
sysCall	bin/compile	/^def sysCall(cmd,failureMessage='Command failed'):$/;"	f
sysCall	bin/compile_copy	/^def sysCall(cmd,failureMessage,shell=True):$/;"	f
sysCall	build/compile	/^def sysCall(cmd,failureMessage='Command failed'):$/;"	f
sysCall	build/compile_copy	/^def sysCall(cmd,failureMessage,shell=True):$/;"	f
sysCall	build/cpcompile	/^def sysCall(cmd,failureMessage,shell=True):$/;"	f
sysCall	install/install_naoqi	/^def sysCall(cmd,exitOnError=True):$/;"	f
syslib	lib/lua/src/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
t	core/localization/Particle.h	/^    t, \/\/ Theta (Orientation)$/;"	m	struct:Particle
t	core/math/Pose2D.h	/^  float &t, &x, &y;$/;"	m	class:Pose2D
t	core/motion/rswalk2014/BodyModel.hpp	/^      float t;$/;"	m	class:BodyModel
t	core/motion/rswalk2014/RefPickupGenerator.hpp	/^      int t;$/;"	m	class:RefPickupGenerator
t	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float t;$/;"	m	class:Walk2014Generator
t	core/motion/rswalk2014/WalkCycle.hpp	/^      float t;$/;"	m	class:WalkCycle
t	lib/alglib/optimization.h	/^    double t;$/;"	m	struct:alglib_impl::__anon79
t	lib/lua/src/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState
t	lib/lua/src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t	lib/lua/src/lparser.h	/^  int t;  \/* patch list of `exit when true' *\/$/;"	m	struct:expdesc
tL	core/vision/structures/FieldLine.h	/^  Point2D tL;         \/\/ top or left point in image coordinates$/;"	m	struct:FieldLine
tab_funcs	lib/lua/src/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
table	lib/zlib/zutil.c	/^local ptr_table table[MAX_PTR];$/;"	v
table_	build/include/tool/annotations/AnnotationAnalyzer.h	/^        ColorTable table_;$/;"	m	class:AnnotationAnalyzer
table_	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^        ColorTable table_;$/;"	m	class:AnnotationAnalyzer
tablet	tools/behaviorSim/cma.py	/^    def tablet(self, x, rot=0):$/;"	m	class:FitnessFunctions
tag_error	lib/lua/src/lauxlib.c	/^static void tag_error (lua_State *L, int narg, int tag) {$/;"	f	file:
tagheappopi	lib/alglib/alglibinternal.cpp	/^void tagheappopi(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tagheappushi	lib/alglib/alglibinternal.cpp	/^void tagheappushi(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tagheapreplacetopi	lib/alglib/alglibinternal.cpp	/^void tagheapreplacetopi(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tags	lib/alglib/alglibmisc.h	/^    ae_vector tags;$/;"	m	struct:alglib_impl::__anon25
tags	lib/yaml-cpp/src/directives.h	/^		std::map<std::string, std::string> tags;$/;"	m	struct:YAML::Directives
tagsort	lib/alglib/alglibinternal.cpp	/^void tagsort(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tagsortbuf	lib/alglib/alglibinternal.cpp	/^void tagsortbuf(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tagsortfast	lib/alglib/alglibinternal.cpp	/^void tagsortfast(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tagsortfasti	lib/alglib/alglibinternal.cpp	/^void tagsortfasti(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tagsortfastr	lib/alglib/alglibinternal.cpp	/^void tagsortfastr(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tailcalls	lib/lua/src/lstate.h	/^  int tailcalls;  \/* number of tail calls lost under this entry *\/$/;"	m	struct:CallInfo
takeSample	build/include/tool/calibration/JointCalibrator.cpp	/^JointCalibrator::Measurement JointCalibrator::takeSample(Memory* frame) {$/;"	f	class:JointCalibrator
takeSample	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^JointCalibrator::Measurement JointCalibrator::takeSample(Memory* frame) {$/;"	f	class:JointCalibrator
takeSamples	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::takeSamples() {$/;"	f	class:ExtrinsicCalibrationWidget
takeSamples	build/include/tool/calibration/JointCalibrator.cpp	/^void JointCalibrator::takeSamples(Log* log) {$/;"	f	class:JointCalibrator
takeSamples	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::takeSamples() {$/;"	f	class:ExtrinsicCalibrationWidget
takeSamples	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^void JointCalibrator::takeSamples(Log* log) {$/;"	f	class:JointCalibrator
takeV4LPicture	core/imageCapture/ImageCapture.cpp	/^void ImageCapture::takeV4LPicture(){$/;"	f	class:ImageCapture
tan	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,0> tan (const FTypeName<T,0>& a)$/;"	f	namespace:fadbad
tan	core/motion/rswalk2014/FADBAD++/fadiff.h	/^INLINE2 FTypeName<T,N> tan (const FTypeName<T,N>& a)$/;"	f	namespace:fadbad
tanhController	core/python/behaviors/win.py	/^def tanhController(err, kx, max_cmd):$/;"	f
target	build/include/tool/simulation/SimulatedPlayer.h	/^  Point2D target;$/;"	m	class:SimulatedPlayer
target	core/memory/BehaviorBlock.h	/^  Point2D target;$/;"	m	struct:PassInfo
target	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  Point2D target;$/;"	m	class:SimulatedPlayer
targetArcEnd	core/memory/BehaviorBlock.h	/^  float targetArcStart, targetArcEnd, targetArcRadius;$/;"	m	struct:BehaviorBlock
targetArcPt	core/memory/BehaviorBlock.h	/^  Point2D targetArcPt;$/;"	m	struct:BehaviorBlock
targetArcRadius	core/memory/BehaviorBlock.h	/^  float targetArcStart, targetArcEnd, targetArcRadius;$/;"	m	struct:BehaviorBlock
targetArcStart	core/memory/BehaviorBlock.h	/^  float targetArcStart, targetArcEnd, targetArcRadius;$/;"	m	struct:BehaviorBlock
targetBearing	core/memory/BehaviorBlock.h	/^  float targetBearing;$/;"	m	struct:BehaviorBlock
targetOffsetDist	core/memory/BehaviorParamBlock.h	/^  float targetOffsetDist;$/;"	m	struct:PassStrategy
targetPlayer	core/memory/BehaviorBlock.h	/^  int targetPlayer;$/;"	m	struct:PassInfo
targetPlayer	core/memory/BehaviorBlock.h	/^  int targetPlayer;$/;"	m	struct:SetPlayInfo
targetPt	core/memory/BehaviorBlock.h	/^  Point2D targetPt;$/;"	m	struct:BehaviorBlock
targetPt	core/memory/BehaviorParamBlock.h	/^  Point2D targetPt;$/;"	m	struct:CornerKickStrategy
target_angle_	core/memory/SimEffectorBlock.h	/^  double target_angle_;$/;"	m	struct:SimEffector
target_ankle_	core/memory/KickEngineBlock.h	/^  Pose3D target_ankle_; \/\/ the target ankle x,y,z for IK kicks - updated in the first visit to one_leg, kick, and middle$/;"	m	struct:KickEngineBlock
target_point_	core/memory/WalkRequestBlock.h	/^  Pose2D target_point_;$/;"	m	struct:WalkRequestBlock
target_time_	core/memory/SimEffectorBlock.h	/^  double target_time_;$/;"	m	struct:SimEffector
target_walk_active	core/motion/rswalk2014/RSWalkModule2014.h	/^	bool target_walk_active;$/;"	m	class:RSWalkModule2014
target_walk_is_active_	core/memory/WalkRequestBlock.h	/^  bool target_walk_is_active_;$/;"	m	struct:WalkRequestBlock
task	build/include/tool/ProcessExecutor.h	/^  std::function<void()> task;$/;"	m	struct:ToolProcess
task	core/python/pose.py	/^import task, util, state_machine$/;"	i
task	tools/UTNaoTool/ProcessExecutor.h	/^  std::function<void()> task;$/;"	m	struct:ToolProcess
taskTrace	core/python/UTdebug.py	/^def taskTrace(msg, task):$/;"	f
taskgenint1d	lib/alglib/alglibinternal.cpp	/^void taskgenint1d(double a,$/;"	f	namespace:alglib_impl
taskgenint1dcheb1	lib/alglib/alglibinternal.cpp	/^void taskgenint1dcheb1(double a,$/;"	f	namespace:alglib_impl
taskgenint1dcheb2	lib/alglib/alglibinternal.cpp	/^void taskgenint1dcheb2(double a,$/;"	f	namespace:alglib_impl
taskgenint1dequidist	lib/alglib/alglibinternal.cpp	/^void taskgenint1dequidist(double a,$/;"	f	namespace:alglib_impl
taskrcond	lib/alglib/interpolation.h	/^    double &taskrcond;$/;"	m	class:alglib::barycentricfitreport
taskrcond	lib/alglib/interpolation.h	/^    double &taskrcond;$/;"	m	class:alglib::lsfitreport
taskrcond	lib/alglib/interpolation.h	/^    double &taskrcond;$/;"	m	class:alglib::polynomialfitreport
taskrcond	lib/alglib/interpolation.h	/^    double &taskrcond;$/;"	m	class:alglib::spline1dfitreport
taskrcond	lib/alglib/interpolation.h	/^    double taskrcond;$/;"	m	struct:alglib_impl::__anon59
taskrcond	lib/alglib/interpolation.h	/^    double taskrcond;$/;"	m	struct:alglib_impl::__anon60
taskrcond	lib/alglib/interpolation.h	/^    double taskrcond;$/;"	m	struct:alglib_impl::__anon61
taskrcond	lib/alglib/interpolation.h	/^    double taskrcond;$/;"	m	struct:alglib_impl::__anon62
taskx	lib/alglib/interpolation.h	/^    ae_matrix taskx;$/;"	m	struct:alglib_impl::__anon63
tasky	lib/alglib/interpolation.h	/^    ae_vector tasky;$/;"	m	struct:alglib_impl::__anon63
tausworthe	interfaces/sim_spark/Random.h	/^   bool tausworthe( unsigned n )   \/\/ Tausworthe random bit generator$/;"	f	class:Random
tausworthe	interfaces/sim_spark/Random.h	/^   void tausworthe( bool*    bitvec,   \/\/ Tausworthe random bit generator$/;"	f	class:Random
tbuf	lib/alglib/interpolation.h	/^    ae_vector tbuf;$/;"	m	struct:alglib_impl::__anon56
tconcat	lib/lua/src/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
tcp_connected_	core/communications/CommunicationModule.h	/^  bool tcp_connected_;$/;"	m	class:CommunicationModule
team	core/common/RobotConfig.h	/^    int robot_id, team, self, role;$/;"	m	class:RobotConfig
team	core/communications/RoboCupGameControlData.h	/^  uint8_t team;    \/\/ team number$/;"	m	struct:RoboCupGameControlReturnData
team	core/communications/SPLCoachMessage.h	/^  uint8_t team;          \/\/ team number$/;"	m	struct:SPLCoachMessage
teamBroadcastFrame_	build/include/tool/simulation/CommunicationGenerator.h	/^    int teamBroadcastFrame_, teamSilenceFrame_, coachframe_;$/;"	m	class:CommunicationGenerator
teamBroadcastFrame_	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^    int teamBroadcastFrame_, teamSilenceFrame_, coachframe_;$/;"	m	class:CommunicationGenerator
teamColor	build/include/tool/WorldConfig.h	/^    int teamColor;$/;"	m	class:WorldConfig
teamColor	tools/UTNaoTool/WorldConfig.h	/^    int teamColor;$/;"	m	class:WorldConfig
teamColour	core/communications/RoboCupGameControlData.h	/^  uint8_t teamColour;           \/\/ colour of the team$/;"	m	struct:TeamInfo
teamID	core/motion/SpecialMotionModule.h	/^  std::string teamID;$/;"	m	class:SpecialMotionModule
teamMode_	build/include/tool/simulation/CommunicationGenerator.h	/^    bool teamMode_;$/;"	m	class:CommunicationGenerator
teamMode_	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^    bool teamMode_;$/;"	m	class:CommunicationGenerator
teamName	interfaces/sim_spark/Parser.h	/^  string teamName;$/;"	m	class:Parser
teamName	interfaces/sim_spark/main.cpp	/^string teamName;$/;"	v
teamNum	core/communications/SPLStandardMessage.h	/^  int8_t teamNum;        \/\/ [MANDATORY FIELD] the number of the team (as provided by the organizers)$/;"	m	struct:SPLStandardMessage
teamNumber	build/include/tool/WorldConfig.h	/^    int teamNumber;$/;"	m	class:WorldConfig
teamNumber	core/communications/RoboCupGameControlData.h	/^  uint8_t teamNumber;           \/\/ unique team number$/;"	m	struct:TeamInfo
teamNumber	tools/UTNaoTool/WorldConfig.h	/^    int teamNumber;$/;"	m	class:WorldConfig
teamSilenceFrame_	build/include/tool/simulation/CommunicationGenerator.h	/^    int teamBroadcastFrame_, teamSilenceFrame_, coachframe_;$/;"	m	class:CommunicationGenerator
teamSilenceFrame_	tools/UTNaoTool/simulation/CommunicationGenerator.h	/^    int teamBroadcastFrame_, teamSilenceFrame_, coachframe_;$/;"	m	class:CommunicationGenerator
teamUDP	core/communications/CommunicationModule.h	/^  UDPWrapper* teamUDP;$/;"	m	class:CommunicationModule
teamWnd_	build/include/tool/UTMainWnd.h	/^  TeamConfigWindow* teamWnd_;$/;"	m	class:UTMainWnd
teamWnd_	tools/UTNaoTool/UTMainWnd.h	/^  TeamConfigWindow* teamWnd_;$/;"	m	class:UTMainWnd
team_	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^#define team_ /;"	d	file:
team_	build/include/tool/simulation/LocalizationSimulation.cpp	/^#define team_ /;"	d	file:
team_	build/include/tool/simulation/ObservationGenerator.h	/^    int player_, team_;$/;"	m	class:ObservationGenerator
team_	build/include/tool/simulation/SimulatedPlayer.h	/^  int team_;$/;"	m	class:SimulatedPlayer
team_	core/memory/RobotStateBlock.h	/^  int team_;$/;"	m	struct:RobotStateBlock
team_	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^#define team_ /;"	d	file:
team_	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^#define team_ /;"	d	file:
team_	tools/UTNaoTool/simulation/ObservationGenerator.h	/^    int player_, team_;$/;"	m	class:ObservationGenerator
team_	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  int team_;$/;"	m	class:SimulatedPlayer
team_broadcast_ip	core/common/RobotConfig.h	/^    std::string team_broadcast_ip;$/;"	m	class:RobotConfig
team_changed_	core/memory/RobotStateBlock.h	/^  bool team_changed_;$/;"	m	struct:RobotStateBlock
team_packets	core/memory/MemoryCache.h	/^    TeamPacketsBlock* team_packets;$/;"	m	class:MemoryCache
team_packets	core/python/memory.py	/^  def team_packets(): return core.pythonC.team_packets_$/;"	f	function:init
team_packets	core/python/util.py	/^  game_state, behavior_mem$/;"	i
team_packets_	core/InterpreterModule.h	/^    TeamPacketsBlock *team_packets_;$/;"	m	class:InterpreterModule
team_packets_	core/communications/CommunicationModule.h	/^  TeamPacketsBlock *team_packets_;$/;"	m	class:CommunicationModule
team_packets_	interfaces/sim_spark/RobotBehavior.h	/^  TeamPacketsBlock* team_packets_;$/;"	m	class:RobotBehavior
team_udp	core/common/RobotConfig.h	/^    int team_udp;$/;"	m	class:RobotConfig
teammate	build/include/tool/UTOpenGL/GLDrawer.h	/^    int teammate;$/;"	m	class:GLDrawer
teammate	tools/UTNaoTool/UTOpenGL/GLDrawer.h	/^    int teammate;$/;"	m	class:GLDrawer
teammate_heard_frame_	core/memory/AudioProcessingBlock.h	/^    int whistle_heard_frame_, teammate_heard_frame_;$/;"	m	struct:AudioProcessingBlock
teams	core/communications/RoboCupGameControlData.h	/^  TeamInfo teams[2];$/;"	m	struct:RoboCupGameControlData
teleportBall	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::teleportBall(Point2D pos) {$/;"	f	class:IBSim
teleportBall	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::teleportBall(Point2D position) {$/;"	f	class:LocalizationSimulation
teleportBall	build/include/tool/simulation/Simulation.h	/^    virtual void teleportBall(Point2D position) { };$/;"	f	class:Simulation
teleportBall	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::teleportBall(Point2D pos) {$/;"	f	class:IBSim
teleportBall	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::teleportBall(Point2D position) {$/;"	f	class:LocalizationSimulation
teleportBall	tools/UTNaoTool/simulation/Simulation.h	/^    virtual void teleportBall(Point2D position) { };$/;"	f	class:Simulation
teleportPlayer	build/include/tool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::teleportPlayer(Point2D position, float orientation, int player) {$/;"	f	class:IBSim
teleportPlayer	build/include/tool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::teleportPlayer(Point2D position, float orientation, int) {$/;"	f	class:LocalizationSimulation
teleportPlayer	build/include/tool/simulation/Simulation.h	/^    virtual void teleportPlayer(Point2D position, float orientation, int player) { };$/;"	f	class:Simulation
teleportPlayer	tools/UTNaoTool/simulation/IsolatedBehaviorSimulation.cpp	/^void IBSim::teleportPlayer(Point2D position, float orientation, int player) {$/;"	f	class:IBSim
teleportPlayer	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^void LocalizationSimulation::teleportPlayer(Point2D position, float orientation, int) {$/;"	f	class:LocalizationSimulation
teleportPlayer	tools/UTNaoTool/simulation/Simulation.h	/^    virtual void teleportPlayer(Point2D position, float orientation, int player) { };$/;"	f	class:Simulation
tell	tools/behaviorSim/cma.py	/^    def tell(self, X, f):$/;"	m	class:AII
tell	tools/behaviorSim/cma.py	/^    def tell(self, solutions, function_values): $/;"	m	class:OOOptimizer
tell	tools/behaviorSim/cma.py	/^    def tell(self, solutions, function_values, check_points=None, copy=False):  $/;"	m	class:CMAEvolutionStrategy
tempColorTable	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      ColorTable tempColorTable; \/\/For undo$/;"	m	class:color_classifier::ClassificationWindow
tempTable	build/include/tool/VisionWindow.h	/^  unsigned char tempTable[LUT_SIZE];$/;"	m	class:VisionWindow
tempTable	tools/UTNaoTool/VisionWindow.h	/^  unsigned char tempTable[LUT_SIZE];$/;"	m	class:VisionWindow
temp_add_owner_	core/memory/Memory.h	/^  MemoryOwner::Owner temp_add_owner_;$/;"	m	class:Memory
temperatures	core/motion/rswalk2014/types/JointValues.hpp	/^   float temperatures[RSJoints::NUMBER_OF_JOINTS];$/;"	m	struct:JointValues
tempfile	install/common.py	/^import sys, os, shutil, tempfile$/;"	i
template	build/luaswig/generateSwig.py	/^    template = args[1]$/;"	v
terminationneeded	lib/alglib/optimization.h	/^    ae_bool terminationneeded;$/;"	m	struct:alglib_impl::__anon77
terminationtype	lib/alglib/diffequations.h	/^    ae_int_t &terminationtype;$/;"	m	class:alglib::odesolverreport
terminationtype	lib/alglib/diffequations.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon52
terminationtype	lib/alglib/integration.h	/^    ae_int_t &terminationtype;$/;"	m	class:alglib::autogkreport
terminationtype	lib/alglib/integration.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon53
terminationtype	lib/alglib/integration.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon55
terminationtype	lib/alglib/optimization.h	/^    ae_int_t &terminationtype;$/;"	m	class:alglib::minasareport
terminationtype	lib/alglib/optimization.h	/^    ae_int_t &terminationtype;$/;"	m	class:alglib::minbleicreport
terminationtype	lib/alglib/optimization.h	/^    ae_int_t &terminationtype;$/;"	m	class:alglib::mincgreport
terminationtype	lib/alglib/optimization.h	/^    ae_int_t &terminationtype;$/;"	m	class:alglib::minlbfgsreport
terminationtype	lib/alglib/optimization.h	/^    ae_int_t &terminationtype;$/;"	m	class:alglib::minlmreport
terminationtype	lib/alglib/optimization.h	/^    ae_int_t &terminationtype;$/;"	m	class:alglib::minqpreport
terminationtype	lib/alglib/optimization.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon70
terminationtype	lib/alglib/optimization.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon72
terminationtype	lib/alglib/optimization.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon74
terminationtype	lib/alglib/optimization.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon76
terminationtype	lib/alglib/optimization.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon78
terminationtype	lib/alglib/optimization.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon80
terminationtype	lib/alglib/solvers.h	/^    ae_int_t &terminationtype;$/;"	m	class:alglib::nleqreport
terminationtype	lib/alglib/solvers.h	/^    ae_int_t terminationtype;$/;"	m	struct:alglib_impl::__anon84
test	data/scripts/wireless-monitor.py	/^  def test(self):$/;"	m	class:WirelessTester
test	lib/lua/test/factorial.lua	/^function test(x)$/;"	f
test	lib/lua/test/fib.lua	/^function test(s,f)$/;"	f
test2bits	lib/lua/src/lgc.h	/^#define test2bits(/;"	d
testAMode	lib/lua/src/lopcodes.h	/^#define testAMode(/;"	d
testCameras	core/imageCapture/ImageCapture.cpp	/^void ImageCapture::testCameras() {$/;"	f	class:ImageCapture
testPoint	core/math/Geometry.cpp	/^Point2D testPoint;$/;"	v
testSonar	interfaces/nao/src/dcmwrapper.cpp	/^void DCMWrapper::testSonar() {$/;"	f	class:DCMWrapper
testTMode	lib/lua/src/lopcodes.h	/^#define testTMode(/;"	d
test_compress	lib/zlib/example.c	/^void test_compress(compr, comprLen, uncompr, uncomprLen)$/;"	f
test_deflate	lib/zlib/example.c	/^void test_deflate(compr, comprLen)$/;"	f
test_dict_deflate	lib/zlib/example.c	/^void test_dict_deflate(compr, comprLen)$/;"	f
test_dict_inflate	lib/zlib/example.c	/^void test_dict_inflate(compr, comprLen, uncompr, uncomprLen)$/;"	f
test_eof	lib/lua/src/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_flush	lib/zlib/example.c	/^void test_flush(compr, comprLen)$/;"	f
test_gzio	lib/zlib/example.c	/^void test_gzio(fname, uncompr, uncomprLen)$/;"	f
test_inflate	lib/zlib/example.c	/^void test_inflate(compr, comprLen, uncompr, uncomprLen)$/;"	f
test_large_deflate	lib/zlib/example.c	/^void test_large_deflate(compr, comprLen, uncompr, uncomprLen)$/;"	f
test_large_inflate	lib/zlib/example.c	/^void test_large_inflate(compr, comprLen, uncompr, uncomprLen)$/;"	f
test_odom_fwd	core/memory/BehaviorBlock.h	/^  float test_odom_fwd;$/;"	m	struct:BehaviorBlock
test_odom_new	core/memory/BehaviorBlock.h	/^  bool test_odom_new;$/;"	m	struct:BehaviorBlock
test_odom_side	core/memory/BehaviorBlock.h	/^  float test_odom_side;$/;"	m	struct:BehaviorBlock
test_odom_turn	core/memory/BehaviorBlock.h	/^  float test_odom_turn;$/;"	m	struct:BehaviorBlock
test_odom_walk_time	core/memory/BehaviorBlock.h	/^  float test_odom_walk_time;$/;"	m	struct:BehaviorBlock
test_stance	core/memory/BehaviorBlock.h	/^  Poses::Stance test_stance;$/;"	m	struct:BehaviorBlock
test_sync	lib/zlib/example.c	/^void test_sync(compr, comprLen, uncompr, uncomprLen)$/;"	f
test_then_block	lib/lua/src/lparser.c	/^static int test_then_block (LexState *ls) {$/;"	f	file:
test_type	kalman_filters/src/ekf_test.cpp	/^TestType test_type;$/;"	v
testbit	lib/lua/src/lgc.h	/^#define testbit(/;"	d
testbits	lib/lua/src/lgc.h	/^#define testbits(/;"	d
testnext	lib/lua/src/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
testsorts	lib/lua/test/sort.lua	/^function testsorts(x)$/;"	f
text	lib/zlib/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s
text	tools/behaviorSim/cma.py	/^                 axis, title, text$/;"	i
text	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
textEntries	build/include/tool/LogWindow.h	/^    std::vector<std::string> textEntries;$/;"	m	class:LogWindow
textEntries	core/memory/TextLogger.h	/^  std::vector<std::string> textEntries;$/;"	m	class:TextLogger
textEntries	tools/UTNaoTool/LogWindow.h	/^    std::vector<std::string> textEntries;$/;"	m	class:LogWindow
textFeet	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textFeet() {$/;"	f	class:MotionGLWidget
textFeet	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textFeet() {$/;"	f	class:MotionGLWidget
textFrame	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textFrame() {$/;"	f	class:MotionGLWidget
textFrame	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textFrame() {$/;"	f	class:MotionGLWidget
textKickFeetTargets	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textKickFeetTargets(){$/;"	f	class:MotionGLWidget
textKickFeetTargets	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textKickFeetTargets(){$/;"	f	class:MotionGLWidget
textKickInfo	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textKickInfo(){$/;"	f	class:MotionGLWidget
textKickInfo	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textKickInfo(){$/;"	f	class:MotionGLWidget
textKickRequest	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textKickRequest(){$/;"	f	class:MotionGLWidget
textKickRequest	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textKickRequest(){$/;"	f	class:MotionGLWidget
textOdometry	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textOdometry(){$/;"	f	class:MotionGLWidget
textOdometry	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textOdometry(){$/;"	f	class:MotionGLWidget
textSensors	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textSensors() {$/;"	f	class:MotionGLWidget
textSensors	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textSensors() {$/;"	f	class:MotionGLWidget
textSteps	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textSteps(){$/;"	f	class:MotionGLWidget
textSteps	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textSteps(){$/;"	f	class:MotionGLWidget
textUpdating_	build/include/tool/LogEditorWindow.h	/^    bool textUpdating_;$/;"	m	class:LogEditorWindow
textUpdating_	tools/UTNaoTool/LogEditorWindow.h	/^    bool textUpdating_;$/;"	m	class:LogEditorWindow
textWalk	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textWalk() {$/;"	f	class:MotionGLWidget
textWalk	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textWalk() {$/;"	f	class:MotionGLWidget
textWalkRequest	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textWalkRequest(){$/;"	f	class:MotionGLWidget
textWalkRequest	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textWalkRequest(){$/;"	f	class:MotionGLWidget
textZmpCom	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::textZmpCom(){$/;"	f	class:MotionGLWidget
textZmpCom	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::textZmpCom(){$/;"	f	class:MotionGLWidget
text_	core/memory/SpeechBlock.h	/^  char text_[SPEECH_TEXT_SIZE];$/;"	m	struct:SpeechBlock
text_file_	core/memory/TextLogger.h	/^  FILE *text_file_;$/;"	m	class:TextLogger
textlog_	core/MotionCore.h	/^  TextLogger textlog_;$/;"	m	class:MotionCore
textlog_	core/VisionCore.h	/^  TextLogger textlog_;$/;"	m	class:VisionCore
textlogger	core/Module.h	/^  TextLogger* textlogger;$/;"	m	class:Module
textlogger	core/opponents/UKF4.h	/^  TextLogger* textlogger;$/;"	m	class:UKF4
textlogger	core/vision/BeaconDetector.h	/^  TextLogger* textlogger;$/;"	m	class:BeaconDetector
textlogger	core/vision/Classifier.h	/^  TextLogger* textlogger;$/;"	m	class:Classifier
textlogger	core/vision/ImageProcessor.h	/^    TextLogger* textlogger;$/;"	m	class:ImageProcessor
th	lib/lua/src/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCObject	typeref:struct:GCObject::lua_State
the	tools/behaviorSim/cma.py	/^                if 1 < 3:  # import pygsl on the fly$/;"	i
the	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
theBase64Decoder	interfaces/sim_spark/Parser.h	/^  base64::Decoder theBase64Decoder; \/\/ Sim camera images are in base64$/;"	m	class:Parser
theirKickoffPosesDesired	core/common/RobotPositions.cpp	/^Pose2D* RobotPositions::theirKickoffPosesDesired = new Pose2D[NUM_TEAM_POSES];$/;"	m	class:RobotPositions	file:
theirKickoffPosesDesired	core/common/RobotPositions.h	/^    static Pose2D* theirKickoffPosesDesired;$/;"	m	class:RobotPositions
theirKickoffPosesManual	core/common/RobotPositions.cpp	/^Pose2D* RobotPositions::theirKickoffPosesManual = new Pose2D[NUM_TEAM_POSES];$/;"	m	class:RobotPositions	file:
theirKickoffPosesManual	core/common/RobotPositions.h	/^    static Pose2D* theirKickoffPosesManual;$/;"	m	class:RobotPositions
theirKickoffPosesManualReversible	core/common/RobotPositions.cpp	/^bool* RobotPositions::theirKickoffPosesManualReversible = new bool[NUM_TEAM_POSES];$/;"	m	class:RobotPositions	file:
theirKickoffPosesManualReversible	core/common/RobotPositions.h	/^    static bool*   theirKickoffPosesManualReversible;$/;"	m	class:RobotPositions
there	tools/behaviorSim/cma.py	/^            self.B = np.eye(N) # identity(N), do not from matlib import *, as eye is a matrix there$/;"	i
therefore	tools/behaviorSim/cma.py	/^    print('  Could not import matplotlib.pylab, therefore ``cma.plot()`` etc. is not available')$/;"	i
theta	core/common/ToolPacket.h	/^    float x, y, theta, time;$/;"	m	struct:ToolPacket::__anon10
theta	core/motion/rswalk2014/PendulumModel.hpp	/^   float theta;$/;"	m	struct:PendulumModel
theta	core/motion/rswalk2014/types/AbsCoord.hpp	/^   const float theta() const {$/;"	f	struct:AbsCoord
theta	core/motion/rswalk2014/types/AbsCoord.hpp	/^   float &theta() {$/;"	f	struct:AbsCoord
theta	core/vision/structures/SphericalPosition.h	/^  float theta;$/;"	m	struct:SphericalPosition
theta	interfaces/sim_spark/Random.h	/^   float theta, phi;$/;"	m	struct:sphericalCoord
theta	lib/alglib/optimization.h	/^    ae_vector theta;$/;"	m	struct:alglib_impl::__anon69
thigh	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float thigh;                                            \/\/ thigh length in meters$/;"	m	class:Walk2014Generator
this	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
thread	core/communications/ThreadedUDPSocket.h	/^  pthread_t thread;$/;"	m	class:ThreadedUDPSocket
thread_	build/include/tool/calibration/JointCalibrator.h	/^    std::thread* thread_;$/;"	m	class:JointCalibrator
thread_	build/pythonswig/PythonInterface.h	/^    void* thread_;$/;"	m	class:PythonInterface
thread_	core/python/PythonInterface.h	/^    void* thread_;$/;"	m	class:PythonInterface
thread_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    std::thread* thread_;$/;"	m	class:JointCalibrator
threadedTakeImage	core/imageCapture/ImageCapture.cpp	/^void* threadedTakeImage(void *arg) {$/;"	f
thvalue	lib/lua/src/lobject.h	/^#define thvalue(/;"	d
tibia	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float tibia;                                            \/\/ tibia length in meters$/;"	m	class:Walk2014Generator
tic	core/common/Profiling.cpp	/^int tic(int id) {$/;"	f
ticavg	core/common/Profiling.cpp	/^void ticavg(int id) {$/;"	f
tickcount	lib/alglib/ap.h	/^#define tickcount(/;"	d
ticks	core/motion/rswalk2014/DeadGenerator.hpp	/^      int ticks;$/;"	m	class:DeadGenerator
tiltOffsetToBottomCamera	core/common/RobotDimensions.h	/^    tiltOffsetToBottomCamera,$/;"	e	enum:RobotDimensions::__anon8
tiltOffsetToTopCamera	core/common/RobotDimensions.h	/^    tiltOffsetToTopCamera,$/;"	e	enum:RobotDimensions::__anon8
tilt_	core/common/TiltRoll.h	/^  float tilt_;$/;"	m	struct:TiltRoll
tilt_bottom_cam_	core/common/Calibration.h	/^  float tilt_bottom_cam_;$/;"	m	class:Calibration
tilt_fallen_counter_	core/memory/WalkRequestBlock.h	/^  int tilt_fallen_counter_;$/;"	m	struct:WalkRequestBlock
tilt_roll_factor_	core/motion/WalkEngineParameters.h	/^  float tilt_roll_factor_;$/;"	m	struct:WalkEngineParameters
tilt_top_cam_	core/common/Calibration.h	/^  float tilt_top_cam_;$/;"	m	class:Calibration
time	bin/nao_start	/^import time$/;"	i
time	core/common/ToolPacket.h	/^    float x, y, theta, time;$/;"	m	struct:ToolPacket::__anon10
time	core/motion/SpecialMotionParser.h	/^     float time;$/;"	m	class:SpecialMotion
time	core/python/util.py	/^import time, math, copy$/;"	i
time	data/scripts/wireless-monitor.py	/^import subprocess, re, time$/;"	i
time	lib/zlib/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s
time	tools/behaviorSim/cma.py	/^import time  # not really essential$/;"	i
time	tools/behaviorSim/runCMAES.py	/^import json, sys, os, shutil, subprocess, re, time$/;"	i
timeInc	build/include/tool/simulation/BehaviorSimulation.h	/^    float timeInc;$/;"	m	class:BehaviorSimulation
timeInc	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    float timeInc;$/;"	m	class:BehaviorSimulation
timePlayingStarted	core/memory/BehaviorBlock.h	/^  float timePlayingStarted;$/;"	m	struct:BehaviorBlock
timeSinceTransition	core/python/state_machine.py	/^  def timeSinceTransition(self):$/;"	m	class:SimpleStateMachine
timeStamp	core/imageCapture/DummyCamera.h	/^  int timeStamp;$/;"	m	class:DummyCamera
timeStamp	core/imageCapture/NaoCamera.h	/^  unsigned timeStamp, \/**< Timestamp of the last captured image. *\/$/;"	m	class:NaoCamera
timeStamp	core/motion/rswalk2014/utils/Timer.hpp	/^      timeval timeStamp;$/;"	m	class:Timer
timeToConsider	core/memory/BehaviorParamBlock.h	/^  float timeToConsider;$/;"	m	struct:PassStrategy
timeUntilPass	core/memory/BehaviorBlock.h	/^  float timeUntilPass;$/;"	m	struct:PassInfo
timeUpdate	core/opponents/UKF4.cpp	/^void UKF4::timeUpdate(float timePassed)$/;"	f	class:UKF4
time_arr_	core/math/Spline3D.h	/^  alglib::real_1d_array time_arr_;$/;"	m	class:Spline3D
time_motion_started_	core/MotionCore.h	/^  float time_motion_started_;$/;"	m	class:MotionCore
time_motion_started_	core/memory/WalkEngineBlock.h	/^  float time_motion_started_;$/;"	m	struct:WalkEngineBlock
time_remaining_in_step_	core/memory/WalkInfoBlock.h	/^  float time_remaining_in_step_;$/;"	m	struct:WalkInfoBlock
time_step_into_kick_finished_	core/motion/rswalk2014/RSWalkModule2014.h	/^        float time_step_into_kick_finished_;$/;"	m	class:RSWalkModule2014
timed_lock	core/memory/Lock.cpp	/^bool Lock::timed_lock(boost::system_time &time) {$/;"	f	class:Lock
timed_lock	core/memory/Lock.cpp	/^bool Lock::timed_lock(unsigned long wait_time) {$/;"	f	class:Lock
timed_wait	core/memory/Lock.cpp	/^bool Lock::timed_wait(boost::system_time &time) {$/;"	f	class:Lock
timed_wait	core/memory/Lock.cpp	/^bool Lock::timed_wait(unsigned long wait_time) {$/;"	f	class:Lock
timer	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float timer;$/;"	m	class:Walk2014Generator
timer	core/python/UTdebug.py	/^from timeit import default_timer as timer$/;"	i
timer_	build/include/tool/RobotControllerWidget.h	/^    QTimer* timer_;$/;"	m	class:RobotControllerWidget
timer_	build/include/tool/VisionWindow.h	/^  QTime timer_;$/;"	m	class:VisionWindow
timer_	core/InterpreterModule.h	/^    Timer timer_;$/;"	m	class:InterpreterModule
timer_	tools/UTNaoTool/RobotControllerWidget.h	/^    QTimer* timer_;$/;"	m	class:RobotControllerWidget
timer_	tools/UTNaoTool/VisionWindow.h	/^  QTime timer_;$/;"	m	class:VisionWindow
timers	core/python/UTdebug.py	/^timers = {}$/;"	v
times	core/common/Profiling.h	/^  std::list<double> times;$/;"	m	struct:TimeList
timesCroot	tools/behaviorSim/cma.py	/^    def timesCroot(self, mat):$/;"	m	class:CMAEvolutionStrategy
times_	build/include/tool/PlotWindow.h	/^  std::vector<double> times_;$/;"	m	class:PlotWindow
times_	tools/UTNaoTool/PlotWindow.h	/^  std::vector<double> times_;$/;"	m	class:PlotWindow
timestamp_	core/memory/AudioProcessingBlock.h	/^    unsigned long long timestamp_;$/;"	m	struct:AudioProcessingBlock
tinsert	lib/lua/src/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
title	tools/behaviorSim/cma.py	/^                 axis, title, text$/;"	i
title	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
tlogger_	core/localization/LocalizationModule.h	/^    TextLogger*& tlogger_;$/;"	m	class:LocalizationModule
tlogger_	core/localization/ParticleFilter.h	/^    TextLogger*& tlogger_;$/;"	m	class:ParticleFilter
tmname	lib/lua/src/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State
tmp0	lib/alglib/optimization.h	/^    ae_vector tmp0;$/;"	m	struct:alglib_impl::__anon71
tmp0	lib/alglib/optimization.h	/^    ae_vector tmp0;$/;"	m	struct:alglib_impl::__anon73
tmp0	lib/alglib/optimization.h	/^    ae_vector tmp0;$/;"	m	struct:alglib_impl::__anon79
tmp1	lib/alglib/optimization.h	/^    ae_vector tmp1;$/;"	m	struct:alglib_impl::__anon71
tmp1	lib/alglib/optimization.h	/^    ae_vector tmp1;$/;"	m	struct:alglib_impl::__anon79
tmp2	lib/alglib/linalg.h	/^    ae_vector tmp2;$/;"	m	struct:alglib_impl::__anon68
tmp2	lib/alglib/optimization.h	/^    ae_vector tmp2;$/;"	m	struct:alglib_impl::__anon79
tmpStand	core/python/cfgstiff.py	/^tmpStand = [0] * core.NUM_JOINTS$/;"	v
tmpbuf	lib/alglib/alglibinternal.h	/^    ae_vector tmpbuf;$/;"	m	struct:alglib_impl::__anon23
tmpbufi	lib/alglib/dataanalysis.h	/^    ae_vector tmpbufi;$/;"	m	struct:alglib_impl::__anon41
tmpbufr	lib/alglib/dataanalysis.h	/^    ae_vector tmpbufr;$/;"	m	struct:alglib_impl::__anon41
tmpbufr2	lib/alglib/dataanalysis.h	/^    ae_vector tmpbufr2;$/;"	m	struct:alglib_impl::__anon41
tmpmeans	lib/alglib/dataanalysis.h	/^    ae_vector tmpmeans;$/;"	m	struct:alglib_impl::__anon50
tmpsigmas	lib/alglib/dataanalysis.h	/^    ae_vector tmpsigmas;$/;"	m	struct:alglib_impl::__anon50
tmpweights	lib/alglib/dataanalysis.h	/^    ae_vector tmpweights;$/;"	m	struct:alglib_impl::__anon50
tmudata	lib/lua/src/lstate.h	/^  GCObject *tmudata;  \/* last element of list of userdata to be GC *\/$/;"	m	struct:global_State
to	lib/yaml-cpp/include/yaml-cpp/nodeimpl.h	/^	inline const T Node::to() const {$/;"	f	class:YAML::Node
to	tools/behaviorSim/cma.py	/^from numpy import inf, array, dot, exp, log, sqrt, sum   # to access the built-in sum fct:  __builtins__.sum or del sum removes the imported sum and recovers the shadowed $/;"	i
toBeActivated	core/opponents/UKF4.h	/^  bool toBeActivated;$/;"	m	class:UKF4
toCartesian	core/motion/rswalk2014/types/RRCoord.hpp	/^   Point toCartesian() const {$/;"	f	struct:RRCoord
toPose	core/python/behaviors/win.py	/^    def toPose(self, pose, time):$/;"	m	class:Playing.Win
toRgb	core/common/ColorConversion.h	/^  inline Rgb toRgb(int r, int g, int b) {$/;"	f	namespace:color
toString	core/common/YamlConfig.cpp	/^std::string YamlConfig::toString() const {$/;"	f	class:YamlConfig
toWalkRequest	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^void toWalkRequest(ActionCommand::All* request) {$/;"	f
toc	core/common/Profiling.cpp	/^double toc(int id) {$/;"	f
tocavg	core/common/Profiling.cpp	/^double tocavg(int id) {$/;"	f
tofile	lib/lua/src/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tofilep	lib/lua/src/liolib.c	/^#define tofilep(/;"	d	file:
toggleDefiningMovements	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::toggleDefiningMovements() {$/;"	f	class:AnnotationWidget
toggleDefiningMovements	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::toggleDefiningMovements() {$/;"	f	class:AnnotationWidget
toggleList	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::toggleList(int state, QWidget* w) {$/;"	f	class:ExtrinsicCalibrationWidget
toggleList	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^void ExtrinsicCalibrationWidget::toggleList(int state, QWidget* w) {$/;"	f	class:ExtrinsicCalibrationWidget
toggleLogEnabled	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::toggleLogEnabled() {$/;"	f	class:LogSelectWindow
toggleLogEnabled	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::toggleLogEnabled() {$/;"	f	class:LogSelectWindow
token	lib/lua/src/llex.h	/^  int token;$/;"	m	struct:Token
tokenise	interfaces/sim_spark/Parser.cpp	/^vector<string> Parser::tokenise(const string &s){$/;"	f	class:Parser
tokeniseCommaDelim	interfaces/sim_spark/Parser.cpp	/^vector<string> Parser::tokeniseCommaDelim(const string &s){$/;"	f	class:Parser
tolower	lib/yaml-cpp/src/conversion.cpp	/^	std::string tolower(const std::string& str)$/;"	f	namespace:__anon125
tonumber	lib/lua/src/lvm.h	/^#define tonumber(/;"	d
toolSimMode	core/memory/TextLogger.h	/^  bool toolSimMode;$/;"	m	class:TextLogger
toolUDP	core/communications/CommunicationModule.h	/^  UDPWrapper* toolUDP;$/;"	m	class:CommunicationModule
top	lib/lua/src/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo
top	lib/lua/src/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State
top	lib/yaml-cpp/src/ptr_stack.h	/^	T& top() { return *m_data.back(); }$/;"	f	class:ptr_stack
top	lib/yaml-cpp/src/ptr_stack.h	/^	const T& top() const { return *m_data.back(); }$/;"	f	class:ptr_stack
topCOrigin	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> topCOrigin, botCOrigin;$/;"	m	class:Pose
topCameraToWorldTransform	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> topCameraToWorldTransform;$/;"	m	class:Pose
topColorTable	core/vision/VisionModule.h	/^  unsigned char* topColorTable;$/;"	m	class:VisionModule
topColorTableName	core/vision/VisionModule.h	/^  string topColorTableName;$/;"	m	class:VisionModule
topExclusionArray	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      int16_t topExclusionArray[EXCLUSION_RESOLUTION];$/;"	m	class:Pose
topFOVx	core/common/RobotCalibration.h	/^      topFOVx,$/;"	m	class:RobotCalibration
topFOVy	core/common/RobotCalibration.h	/^      topFOVy,$/;"	m	class:RobotCalibration
topGreenPct	core/memory/RobotVisionBlock.h	/^  float bottomGreenPct, topGreenPct;$/;"	m	struct:RobotVisionBlock
topImageParams_	core/imageCapture/ImageCapture.h	/^  ImageParams topImageParams_, bottomImageParams_;$/;"	m	class:ImageCapture
topNewTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::topNewTable() {$/;"	f	class:VisionWindow
topNewTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::topNewTable() {$/;"	f	class:VisionWindow
topOpenTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::topOpenTable() {$/;"	f	class:VisionWindow
topOpenTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::topOpenTable() {$/;"	f	class:VisionWindow
topProcessor_	build/include/tool/AnalysisWidget.h	/^        ImageProcessor *topProcessor_, *bottomProcessor_;$/;"	m	class:AnalysisWidget
topProcessor_	build/include/tool/AnnotationWidget.h	/^        ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:AnnotationWidget
topProcessor_	build/include/tool/ClassificationWidget.h	/^        ImageProcessor *topProcessor_, *bottomProcessor_;$/;"	m	class:ClassificationWidget
topProcessor_	build/include/tool/ExtrinsicCalibrationWidget.h	/^    ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:ExtrinsicCalibrationWidget
topProcessor_	build/include/tool/IntrinsicCalibrationWidget.h	/^    ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:IntrinsicCalibrationWidget
topProcessor_	tools/UTNaoTool/AnalysisWidget.h	/^        ImageProcessor *topProcessor_, *bottomProcessor_;$/;"	m	class:AnalysisWidget
topProcessor_	tools/UTNaoTool/AnnotationWidget.h	/^        ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:AnnotationWidget
topProcessor_	tools/UTNaoTool/ClassificationWidget.h	/^        ImageProcessor *topProcessor_, *bottomProcessor_;$/;"	m	class:ClassificationWidget
topProcessor_	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^    ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:ExtrinsicCalibrationWidget
topProcessor_	tools/UTNaoTool/IntrinsicCalibrationWidget.h	/^    ImageProcessor* topProcessor_, *bottomProcessor_;$/;"	m	class:IntrinsicCalibrationWidget
topSaveTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::topSaveTable() {$/;"	f	class:VisionWindow
topSaveTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::topSaveTable() {$/;"	f	class:VisionWindow
topSaveTableAs	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::topSaveTableAs() {$/;"	f	class:VisionWindow
topSaveTableAs	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::topSaveTableAs() {$/;"	f	class:VisionWindow
topToFocus	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> topToFocus, botToFocus;$/;"	m	class:Pose
topUndefPct	core/memory/RobotVisionBlock.h	/^  float bottomUndefPct, topUndefPct;$/;"	m	struct:RobotVisionBlock
topWorldToCameraTransform	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> topWorldToCameraTransform;$/;"	m	class:Pose
topWorldToCameraTransformT	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> topWorldToCameraTransformT;$/;"	m	class:Pose
top_	build/include/tool/annotations/EllipseSelection.h	/^        int top_, left_, width_, height_;$/;"	m	class:EllipseSelection
top_	core/math/Polygon.h	/^        int left_, right_, top_, bottom_;$/;"	m	class:Polygon
top_	tools/UTNaoTool/annotations/EllipseSelection.h	/^        int top_, left_, width_, height_;$/;"	m	class:EllipseSelection
top_camera	core/common/RobotInfo.h	/^    top_camera,$/;"	e	enum:BodyPart::Part
top_camera_	core/imageCapture/ImageCapture.h	/^  NaoCamera* top_camera_;$/;"	m	class:ImageCapture
top_params_	core/memory/ImageBlock.h	/^  ImageParams top_params_, bottom_params_;$/;"	m	struct:ImageBlock
top_params_	core/memory/RobotVisionBlock.h	/^  ImageParams top_params_, bottom_params_;$/;"	m	struct:RobotVisionBlock
top_params_	core/vision/VisionModule.h	/^  ImageParams *top_params_, *bottom_params_;$/;"	m	class:VisionModule
top_params_loaded_	core/imageCapture/ImageCapture.h	/^  bool bottom_params_loaded_, top_params_loaded_;$/;"	m	class:ImageCapture
top_processor_	core/vision/VisionModule.h	/^  ImageProcessor *top_processor_, *bottom_processor_;$/;"	m	class:VisionModule
topleft	build/include/tool/annotations/RectangleSelection.h	/^        Point topleft, bottomright;$/;"	m	class:RectangleSelection
topleft	tools/UTNaoTool/annotations/RectangleSelection.h	/^        Point topleft, bottomright;$/;"	m	class:RectangleSelection
toproto	lib/lua/src/luac.c	/^#define toproto(/;"	d	file:
torso	core/common/RobotInfo.h	/^		torso,$/;"	e	enum:BodyPart::Part
torso	core/common/RobotInfo.h	/^    torso,$/;"	e	enum:BodyFrame::Part
torsoAngleX	core/vision/structures/Sample.h	/^      float torsoAngleX, torsoAngleY;$/;"	m	struct:Sample
torsoAngleY	core/vision/structures/Sample.h	/^      float torsoAngleX, torsoAngleY;$/;"	m	struct:Sample
torsoHipRoll	core/common/RobotDimensions.h	/^    torsoHipRoll,$/;"	e	enum:RobotDimensions::__anon8
torsoToHeadPan	core/common/RobotDimensions.h	/^    torsoToHeadPan,$/;"	e	enum:RobotDimensions::__anon8
torsoToHip	core/common/RobotDimensions.h	/^    torsoToHip,$/;"	e	enum:RobotDimensions::__anon8
torsoToHipZ	core/common/RobotDimensions.h	/^    torsoToHipZ,$/;"	e	enum:RobotDimensions::__anon8
torsoWx	core/memory/ALWalkParamBlock.h	/^  float torsoWx;$/;"	m	struct:ALWalkParamBlock
torsoWy	core/memory/ALWalkParamBlock.h	/^  float torsoWy;$/;"	m	struct:ALWalkParamBlock
torso_matrix_	core/memory/BodyModelBlock.h	/^  TorsoMatrix torso_matrix_;$/;"	m	struct:BodyModelBlock
tostate	lib/lua/src/lstate.c	/^#define tostate(/;"	d	file:
tostore	lib/lua/src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tostring	lib/alglib/ap.cpp	/^std::string alglib::boolean_1d_array::tostring() const $/;"	f	class:alglib::boolean_1d_array
tostring	lib/alglib/ap.cpp	/^std::string alglib::boolean_2d_array::tostring() const $/;"	f	class:alglib::boolean_2d_array
tostring	lib/alglib/ap.cpp	/^std::string alglib::complex::tostring(int dps) const$/;"	f	class:alglib::complex
tostring	lib/alglib/ap.cpp	/^std::string alglib::complex_1d_array::tostring(int dps) const $/;"	f	class:alglib::complex_1d_array
tostring	lib/alglib/ap.cpp	/^std::string alglib::complex_2d_array::tostring(int dps) const $/;"	f	class:alglib::complex_2d_array
tostring	lib/alglib/ap.cpp	/^std::string alglib::integer_1d_array::tostring() const $/;"	f	class:alglib::integer_1d_array
tostring	lib/alglib/ap.cpp	/^std::string alglib::integer_2d_array::tostring() const $/;"	f	class:alglib::integer_2d_array
tostring	lib/alglib/ap.cpp	/^std::string alglib::real_1d_array::tostring(int dps) const $/;"	f	class:alglib::real_1d_array
tostring	lib/alglib/ap.cpp	/^std::string alglib::real_2d_array::tostring(int dps) const $/;"	f	class:alglib::real_2d_array
tostring	lib/lua/src/lvm.h	/^#define tostring(/;"	d
total	lib/zlib/inflate.h	/^    unsigned long total;        \/* protected copy of output count *\/$/;"	m	struct:inflate_state
totalTime	core/math/Spline3D.h	/^  float totalTime() {$/;"	f	class:Spline3D
total_in	lib/zlib/zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_memory	core/python/UTdebug.py	/^def total_memory(since=0.0):$/;"	f
total_out	lib/zlib/zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s
totalbytes	lib/lua/src/lstate.h	/^  lu_mem totalbytes;  \/* number of bytes currently allocated *\/$/;"	m	struct:global_State
tpcount	build/include/tool/annotations/AnnotationAnalyzer.h	/^    int fpcount, tpcount;$/;"	m	struct:YUV
tpcount	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    int fpcount, tpcount;$/;"	m	struct:YUV
tql2	tools/behaviorSim/cma.py	/^        def tql2 (n, d, e, V):$/;"	f	function:Misc.eig
tr_static_init	lib/zlib/trees.c	/^local void tr_static_init()$/;"	f
trace	core/math/Matrix2x2.h	/^  V trace() const$/;"	f	class:Matrix2x2
trace	core/math/YaMatrix.h	/^  V trace() const$/;"	f	class:YaMatrix
trace	core/python/task.py	/^  def trace(self, msg):$/;"	m	class:BaseTask
traceback	core/python/init.py	/^import sys, os, traceback$/;"	i
traceback	lib/lua/src/lua.c	/^static int traceback (lua_State *L) {$/;"	f	file:
traceexec	lib/lua/src/lvm.c	/^static void traceexec (lua_State *L, const Instruction *pc) {$/;"	f	file:
track_ball	core/python/behaviors/win.py	/^    def track_ball(self):$/;"	m	class:Playing.Win
trajectory	core/python/behaviors/custom_kick.py	/^from kick_trajectory import trajectory, names$/;"	i
trajectory	core/python/behaviors/kick_trajectory.py	/^trajectory = [[0, -0.4, 0, 0, -0.436, 0.873, -0.436, 0, 0, 0, -0.436, 0.873, -0.436, 0, 1.4, 0.3, 0, -0.05, 1.4, -0.3, 0, 0.05], [-0.00130205, -0.402589, -0.000339988, -0.00709608, -0.434622, 0.875002, -0.439759, 0.00755855, -5.29002e-05, -0.00235664, -0.435702, 0.872692, -0.437047, 0.00380924, 1.39765, 0.309245, 0.000115643, -0.0466667, 1.39765, -0.3, 0.00197365, 0.0513652], [-0.00372671, -0.407303, -0.00165525, -0.0155395, -0.432882, 0.87818, -0.44515, 0.0177928, 0.00124979, -0.0110068, -0.434226, 0.871996, -0.440122, 0.0142526, 1.39324, 0.325846, 0.000302401, -0.0433333, 1.39324, -0.3, 0.00530698, 0.0542655], [-0.00617945, -0.411933, -0.00295462, -0.0240911, -0.431018, 0.880808, -0.450216, 0.027944, 0.00250116, -0.0197283, -0.432757, 0.871172, -0.443104, 0.0245716, 1.38878, 0.342262, 0.000484174, -0.04, 1.38878, -0.3, 0.00864032, 0.0575988], [-0.00867911, -0.416504, -0.00423693, -0.0328804, -0.429016, 0.882915, -0.455005, 0.0381644, 0.00369347, -0.0286664, -0.431293, 0.870211, -0.445995, 0.0349334, 1.38424, 0.358768, 0.000671955, -0.0366667, 1.38424, -0.3, 0.0119736, 0.0609322], [-0.0112192, -0.420995, -0.00548989, -0.0419138, -0.426878, 0.884476, -0.459492, 0.0484496, 0.00481192, -0.0378131, -0.429844, 0.869108, -0.44877, 0.0453242, 1.37963, 0.375364, 0.000865608, -0.0349066, 1.37963, -0.3, 0.015307, 0.0642655], [-0.013791, -0.425387, -0.0066995, -0.0511793, -0.424603, 0.885464, -0.463655, 0.0587735, 0.00584118, -0.0471103, -0.42842, 0.867864, -0.451409, 0.0556858, 1.37496, 0.391999, 0.00105994, -0.0349066, 1.37496, -0.3, 0.0186403, 0.0675988], [-0.0164244, -0.429724, -0.00788484, -0.0607336, -0.422181, 0.885865, -0.467505, 0.0692042, 0.00680891, -0.0567523, -0.426993, 0.866452, -0.453947, 0.0661903, 1.37018, 0.408894, 0.00125518, -0.0349066, 1.37018, -0.3, 0.0219736, 0.0709322], [-0.0190991, -0.433965, -0.00902097, -0.0705433, -0.419612, 0.88564, -0.471004, 0.0796837, 0.0076869, -0.0666008, -0.425585, 0.864879, -0.456346, 0.0767036, 1.36531, 0.42591, 0.00144299, -0.0349066, 1.36531, -0.3, 0.025307, 0.0742655], [-0.0218302, -0.438126, -0.0101123, -0.0806453, -0.416889, 0.884757, -0.474144, 0.0902449, 0.00848484, -0.0767565, -0.424181, 0.863126, -0.458618, 0.0873067, 1.36033, 0.443169, 0.0016209, -0.0349066, 1.36033, -0.3, 0.0286403, 0.0775988], [-0.0246136, -0.442192, -0.0111466, -0.0910384, -0.414008, 0.883177, -0.476897, 0.100872, 0.00919246, -0.087194, -0.422787, 0.861184, -0.460748, 0.0979685, 1.35523, 0.460659, 0.00178272, -0.0349066, 1.35524, -0.3, 0.0319736, 0.0809322], [-0.0274504, -0.446152, -0.0121147, -0.101731, -0.410964, 0.880858, -0.479241, 0.111562, 0.0098048, -0.09792, -0.421403, 0.859045, -0.46273, 0.108686, 1.35001, 0.478404, 0.00192229, -0.0349066, 1.35001, -0.3, 0.035307, 0.0842655], [-0.030342, -0.449998, -0.0130069, -0.112735, -0.407751, 0.877752, -0.48115, 0.122313, 0.0103171, -0.108951, -0.420027, 0.856693, -0.464556, 0.119463, 1.34465, 0.496443, 0.00203342, -0.0349066, 1.34466, -0.3, 0.0386403, 0.0875988], [-0.0333013, -0.453724, -0.013818, -0.124107, -0.404357, 0.873787, -0.482589, 0.133162, 0.0107302, -0.120412, -0.41865, 0.854095, -0.46622, 0.130387, 1.33912, 0.514931, 0.00211525, -0.0349066, 1.33913, -0.3, 0.0419736, 0.0909322], [-0.0363121, -0.457298, -0.0145234, -0.135809, -0.400783, 0.868919, -0.483525, 0.144059, 0.0110264, -0.132188, -0.417284, 0.851257, -0.467703, 0.141356, 1.33345, 0.533774, 0.00215458, -0.0349066, 1.33346, -0.3, 0.045307, 0.0942655], [-0.0393829, -0.460704, -0.0151113, -0.147889, -0.397016, 0.86306, -0.483916, 0.155028, 0.0112031, -0.144374, -0.415924, 0.848143, -0.468997, 0.15243, 1.32759, 0.553105, 0.00214684, -0.0349066, 1.32761, -0.3, 0.0486403, 0.0975988], [-0.0425131, -0.463912, -0.0155605, -0.160374, -0.393047, 0.856116, -0.483711, 0.166071, 0.0112502, -0.157011, -0.414568, 0.844728, -0.470085, 0.163622, 1.32155, 0.573005, 0.00208494, -0.0349066, 1.32157, -0.3, 0.0519736, 0.100932], [-0.0456996, -0.466882, -0.0158453, -0.173285, -0.388866, 0.847983, -0.482853, 0.177186, 0.0111557, -0.170125, -0.413218, 0.840982, -0.470947, 0.174938, 1.3153, 0.593554, 0.00195977, -0.0349066, 1.31533, -0.3, 0.055307, 0.104265], [-0.0489373, -0.469569, -0.0159346, -0.186648, -0.38446, 0.838539, -0.481275, 0.188367, 0.0109065, -0.183746, -0.411877, 0.836873, -0.471562, 0.186378, 1.30884, 0.614843, 0.00176079, -0.0349066, 1.30888, -0.3, 0.0586403, 0.107599], [-0.052219, -0.471912, -0.0157909, -0.200488, -0.379818, 0.827637, -0.4789, 0.199609, 0.0104878, -0.197908, -0.410545, 0.832364, -0.471907, 0.197946, 1.30216, 0.636981, 0.0014761, -0.0349066, 1.3022, -0.3, 0.0619736, 0.110932], [-0.0555383, -0.473832, -0.0153672, -0.214858, -0.37492, 0.815082, -0.475626, 0.210919, 0.0098811, -0.212687, -0.409226, 0.827398, -0.471949, 0.209672, 1.29522, 0.660151, 0.00109475, -0.0349066, 1.29527, -0.3, 0.065307, 0.114265], [-0.0588802, -0.475225, -0.0146045, -0.229793, -0.369748, 0.800654, -0.471338, 0.22229, 0.00906483, -0.228133, -0.407922, 0.821918, -0.471651, 0.221562, 1.28803, 0.684529, 0.000601873, -0.0349066, 1.28809, -0.3, 0.0686403, 0.117599], [-0.0622235, -0.47596, -0.0134287, -0.245333, -0.364282, 0.784083, -0.465895, 0.233712, 0.00801407, -0.244292, -0.406642, 0.815856, -0.470973, 0.233617, 1.28057, 0.710332, -1.99845e-05, -0.0349066, 1.28064, -0.3, 0.0719736, 0.120932], [-0.0655403, -0.475851, -0.011743, -0.261538, -0.358493, 0.765009, -0.459112, 0.245182, 0.00669675, -0.261252, -0.405394, 0.809117, -0.469858, 0.245861, 1.27283, 0.737883, -0.0007886, -0.0349066, 1.27292, -0.3, 0.075307, 0.124265], [-0.0687914, -0.474634, -0.00941545, -0.278497, -0.352341, 0.74294, -0.450738, 0.256705, 0.00506985, -0.279143, -0.404188, 0.80157, -0.468227, 0.258333, 1.26479, 0.767642, -0.00172269, -0.0349066, 1.2649, -0.3, 0.0786403, 0.127599], [-0.0719128, -0.47194, -0.00627178, -0.296279, -0.345787, 0.717264, -0.440461, 0.268266, 0.00308156, -0.298061, -0.403045, 0.793059, -0.465988, 0.271047, 1.25647, 0.800174, -0.00284533, -0.0350024, 1.2566, -0.3, 0.0819736, 0.130932], [-0.074808, -0.467223, -0.00207002, -0.314964, -0.338779, 0.687141, -0.427859, 0.279847, 0.000663556, -0.318121, -0.401997, 0.783371, -0.463017, 0.284019, 1.24789, 0.836289, -0.00417921, -0.0363101, 1.24804, -0.3, 0.085307, 0.134265], [-0.0773262, -0.45963, 0.00354035, -0.334647, -0.331256, 0.651376, -0.412336, 0.291429, -0.00228019, -0.339468, -0.401092, 0.772199, -0.459136, 0.297274, 1.23911, 0.877218, -0.0057409, -0.0392242, 1.2393, -0.3, 0.0886403, 0.137599], [-0.0792109, -0.447546, 0.0111726, -0.355625, -0.323097, 0.607763, -0.392754, 0.3031, -0.00592759, -0.362498, -0.40042, 0.758957, -0.453982, 0.31098, 1.23029, 0.918884, -0.00750272, -0.0425576, 1.23053, -0.3, 0.0919736, 0.140932], [-0.0799775, -0.428201, 0.0217566, -0.377952, -0.314238, 0.553292, -0.367594, 0.314819, -0.0105245, -0.387322, -0.400161, 0.742857, -0.447065, 0.325145, 1.22189, 0.960551, -0.00929599, -0.0458909, 1.2222, -0.3, 0.095307, 0.144265], [-0.0980051, -0.386535, 0.0384648, -0.379435, -0.290387, 0.494958, -0.341853, 0.321057, -0.0176198, -0.388837, -0.357259, 0.688698, -0.427441, 0.330856, 1.18022, 1.00222, -0.0126293, -0.0492242, 1.18053, -0.3, 0.0986403, 0.147599], [-0.072558, -0.38577, 0.0464602, -0.321102, -0.303751, 0.553292, -0.371365, 0.306866, -0.0241012, -0.330504, -0.395203, 0.732331, -0.40645, 0.315037, 1.22189, 0.960551, -0.00929599, -0.0458909, 1.2222, -0.341667, 0.095307, 0.144265], [-0.0546703, -0.376161, 0.0559718, -0.262768, -0.308276, 0.611625, -0.403377, 0.291656, -0.0326758, -0.272171, -0.421, 0.771595, -0.385533, 0.299307, 1.26355, 0.918884, -0.00596266, -0.0425576, 1.26387, -0.383333, 0.0919736, 0.140932], [-0.0425331, -0.36705, 0.0659185, -0.20464, -0.305128, 0.669958, -0.438059, 0.276015, -0.0431898, -0.215034, -0.437515, 0.807832, -0.364549, 0.283984, 1.30522, 0.877218, -0.00262932, -0.0392242, 1.30553, -0.425, 0.0886403, 0.137599], [-0.0349348, -0.361992, 0.0765072, -0.151444, -0.295539, 0.728292, -0.474087, 0.262092, -0.0556075, -0.164665, -0.447929, 0.842328, -0.341511, 0.272173, 1.32956, 0.835551, -0.000909977, -0.0359921, 1.32998, -0.466667, 0.085307, 0.134265], [-0.0261666, -0.350261, 0.0908073, -0.106591, -0.285818, 0.77007, -0.501323, 0.249731, -0.0714598, -0.12437, -0.459287, 0.871202, -0.314274, 0.263243, 1.3535, 0.793884, 0.00099673, -0.0358785, 1.35401, -0.508333, 0.0819736, 0.130932], [-0.0165532, -0.333806, 0.107302, -0.0687234, -0.276925, 0.80137, -0.522964, 0.238744, -0.0897981, -0.0924236, -0.471755, 0.89576, -0.283431, 0.256611, 1.37819, 0.758469, 0.00335233, -0.03622, 1.37876, -0.55, 0.0786403, 0.127599], [-0.00596059, -0.312717, 0.125406, -0.0370981, -0.269885, 0.826048, -0.540495, 0.229063, -0.109981, -0.067882, -0.485571, 0.916464, -0.249222, 0.251953, 1.39963, 0.731034, 0.00627435, -0.0360081, 1.39964, -0.591667, 0.075307, 0.124265], [0.00626343, -0.28563, 0.144992, -0.0111568, -0.266243, 0.846966, -0.554571, 0.220505, -0.131559, -0.0500097, -0.500945, 0.933511, -0.211355, 0.248868, 1.4, 0.710617, 0.00956979, -0.0355023, 1.4, -0.633333, 0.0719736, 0.120932], [0.011703, -0.265251, 0.149821, -0.0477727, -0.285509, 0.838883, -0.546735, 0.227813, -0.128539, -0.0793274, -0.50638, 0.913729, -0.203198, 0.250747, 1.4, 0.744907, 0.0129031, -0.0349066, 1.4, -0.591667, 0.0686403, 0.124265], [0.0196455, -0.238531, 0.15842, -0.0902864, -0.308655, 0.826467, -0.534534, 0.237878, -0.126093, -0.118853, -0.514776, 0.89013, -0.189484, 0.257414, 1.4, 0.786573, 0.0162365, -0.0349066, 1.4, -0.55, 0.065307, 0.127599], [0.0286189, -0.211644, 0.168444, -0.133546, -0.33178, 0.811299, -0.521259, 0.247911, -0.123672, -0.159847, -0.523293, 0.865728, -0.175073, 0.264713, 1.4, 0.82824, 0.0195698, -0.0349066, 1.4, -0.508333, 0.0619736, 0.130932], [0.039038, -0.184245, 0.180205, -0.177663, -0.355036, 0.793071, -0.506806, 0.257902, -0.12127, -0.202465, -0.531912, 0.840385, -0.159877, 0.272674, 1.4, 0.869907, 0.0229031, -0.0349066, 1.4, -0.466667, 0.0586403, 0.134265], [0.0515324, -0.155812, 0.194208, -0.222955, -0.37871, 0.771185, -0.490888, 0.267941, -0.118856, -0.247194, -0.540672, 0.813808, -0.143682, 0.281509, 1.4, 0.911573, 0.0262365, -0.0349066, 1.4, -0.425, 0.055307, 0.137599], [0.066931, -0.125906, 0.211018, -0.269608, -0.403048, 0.745003, -0.473291, 0.278036, -0.116355, -0.294302, -0.549534, 0.785752, -0.126385, 0.291301, 1.4, 0.95324, 0.0295698, -0.0349066, 1.4, -0.383333, 0.0519736, 0.140932], [0.0865538, -0.0938598, 0.231509, -0.31801, -0.428475, 0.713527, -0.45361, 0.288272, -0.11365, -0.344369, -0.558514, 0.755792, -0.107724, 0.30229, 1.4, 0.994907, 0.0329031, -0.0349066, 1.4, -0.341667, 0.0486403, 0.144265], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599], [0.11235, -0.0590655, 0.256791, -0.368514, -0.455479, 0.675549, -0.431438, 0.298697, -0.110513, -0.397904, -0.567578, 0.723454, -0.0874536, 0.31467, 1.4, 1.03657, 0.0362365, -0.0349066, 1.4, -0.3, 0.045307, 0.147599]]$/;"	v
trajectory	motion_planning/kick_trajectory.py	/^trajectory = [[0, -0.4, 0, 0, -0.436, 0.873, -0.436, 0, 0, 0, -0.436, 0.873, -0.436, 0, 1.4, 0.3, 0, -0.05, 1.4, -0.3, 0, 0.05], [0, -0.4, 0, 0, -0.436, 0.873, -0.436, 0, 0, 0, -0.436, 0.873, -0.436, 0, 1.4, 0.3, 0, -0.05, 1.4, -0.3, 0, 0.05], [-2.37884e-05, -0.400011, -1.31522e-05, -0.00133725, -0.436059, 0.873237, -0.436155, 0.00125571, 1.31522e-05, 0.000252875, -0.435985, 0.872975, -0.435986, -1.17854e-05, 1.4, 0.301037, 7.86018e-05, -0.0495776, 1.4, -0.3, 4.12573e-05, 0.050164], [-0.00024114, -0.400141, -0.000163574, -0.00713, -0.43649, 0.874972, -0.437251, 0.00752123, 0.000163574, -0.00236211, -0.435835, 0.872812, -0.435995, 0.00374431, 1.4, 0.309204, 0.000689453, -0.04627, 1.4, -0.3, 0.000414254, 0.0515443], [-0.000404977, -0.400248, -0.000283223, -0.00992933, -0.436757, 0.876066, -0.437937, 0.0108731, 0.000283223, -0.00520079, -0.435717, 0.872695, -0.436031, 0.00714188, 1.4, 0.31467, 0.00109347, -0.0440707, 1.4, -0.3, 0.00069369, 0.0525317], [-0.000581231, -0.400366, -0.00040681, -0.0127549, -0.437007, 0.87712, -0.438607, 0.0142423, 0.00040681, -0.00809065, -0.435594, 0.872564, -0.436068, 0.0105756, 1.4, 0.320176, 0.00149817, -0.0418663, 1.4, -0.3, 0.000993808, 0.0535755], [-0.000768538, -0.400491, -0.000532493, -0.0156049, -0.437238, 0.878131, -0.439257, 0.0176236, 0.000532493, -0.0110164, -0.435467, 0.87242, -0.436102, 0.0140295, 1.4, 0.325704, 0.00190274, -0.039664, 1.4, -0.3, 0.00131252, 0.0546741], [-0.000965992, -0.400621, -0.000659098, -0.0184782, -0.437451, 0.879094, -0.439883, 0.0210137, 0.000659098, -0.0139692, -0.435338, 0.872263, -0.436132, 0.0174939, 1.4, 0.331246, 0.00230672, -0.0374683, 1.4, -0.3, 0.00164843, 0.0558265], [-0.0011693, -0.400753, -0.000783058, -0.0213511, -0.437642, 0.879993, -0.440475, 0.024374, 0.000783058, -0.0168661, -0.435209, 0.872096, -0.436155, 0.0208843, 1.39998, 0.336702, 0.00270313, -0.0353189, 1.39998, -0.3, 0.0019944, 0.0570115], [-0.00138322, -0.400888, -0.00090771, -0.0242609, -0.437816, 0.880851, -0.441046, 0.0277608, 0.00090771, -0.0198148, -0.435078, 0.871915, -0.436171, 0.024312, 1.39996, 0.342209, 0.00310205, -0.0349066, 1.39996, -0.3, 0.0023586, 0.058259], [-0.00160701, -0.401027, -0.0010322, -0.027199, -0.437974, 0.881662, -0.441592, 0.0311627, 0.0010322, -0.0228039, -0.434944, 0.87172, -0.43618, 0.0277635, 1.39992, 0.347746, 0.00350209, -0.0349066, 1.39992, -0.3, 0.00273986, 0.059566], [-0.0018403, -0.401168, -0.00115588, -0.0301623, -0.438113, 0.882423, -0.442112, 0.0345744, 0.00115588, -0.0258241, -0.434809, 0.871511, -0.436182, 0.0312284, 1.39987, 0.353302, 0.00390236, -0.0349066, 1.39987, -0.3, 0.00313759, 0.060931], [-0.00208289, -0.401311, -0.00127831, -0.0331498, -0.438235, 0.883133, -0.442605, 0.0379936, 0.00127831, -0.0288694, -0.434673, 0.871289, -0.436174, 0.0347007, 1.39981, 0.358871, 0.00430235, -0.0349066, 1.39981, -0.3, 0.00355149, 0.0623531], [-0.00233082, -0.401454, -0.00139663, -0.036139, -0.438336, 0.88378, -0.443062, 0.041387, 0.00139663, -0.0318642, -0.434537, 0.871057, -0.436159, 0.0381065, 1.39973, 0.364365, 0.00469576, -0.0349066, 1.39973, -0.3, 0.00397485, 0.0638096], [-0.00258975, -0.401599, -0.00151421, -0.0391635, -0.43842, 0.884379, -0.443495, 0.0448027, 0.00151421, -0.0349113, -0.4344, 0.87081, -0.436134, 0.041547, 1.39964, 0.369907, 0.00509129, -0.0349066, 1.39964, -0.3, 0.00441735, 0.0653333], [-0.00285908, -0.401748, -0.00163036, -0.0422164, -0.438485, 0.884925, -0.443899, 0.0482311, 0.00163036, -0.0379979, -0.43426, 0.870547, -0.436101, 0.0450081, 1.39954, 0.37548, 0.0054875, -0.0349066, 1.39954, -0.3, 0.004878, 0.0669206], [-0.00313855, -0.401898, -0.00174458, -0.0452959, -0.438533, 0.885418, -0.444275, 0.0516689, 0.00174458, -0.0411156, -0.434118, 0.87027, -0.436059, 0.0484813, 1.39942, 0.381073, 0.00588362, -0.0349066, 1.39942, -0.3, 0.0053564, 0.06857], [-0.00313855, -0.401898, -0.00174458, -0.0452959, -0.438533, 0.885418, -0.444275, 0.0516689, 0.00174458, -0.0411156, -0.434118, 0.87027, -0.436059, 0.0484813, 1.39942, 0.381073, 0.00588362, -0.0349066, 1.39942, -0.3, 0.0053564, 0.06857], [-0.00373131, -0.402207, -0.00196658, -0.0515595, -0.438563, 0.88622, -0.444929, 0.0585888, 0.00196658, -0.0474257, -0.433829, 0.869667, -0.435945, 0.0554481, 1.39913, 0.392321, 0.00667458, -0.0349066, 1.39913, -0.3, 0.00637256, 0.0719034], [-0.00373131, -0.402207, -0.00196658, -0.0515595, -0.438563, 0.88622, -0.444929, 0.0585888, 0.00196658, -0.0474257, -0.433829, 0.869667, -0.435945, 0.0554481, 1.39913, 0.392321, 0.00667458, -0.0349066, 1.39913, -0.3, 0.00637256, 0.0719034], [-0.0043605, -0.402522, -0.00217641, -0.0578796, -0.438515, 0.886785, -0.445453, 0.0654822, 0.00217641, -0.053773, -0.433533, 0.86901, -0.435796, 0.0623718, 1.39879, 0.403534, 0.00745515, -0.0349066, 1.39879, -0.3, 0.00745329, 0.0752367], [-0.0043605, -0.402522, -0.00217641, -0.0578796, -0.438515, 0.886785, -0.445453, 0.0654822, 0.00217641, -0.053773, -0.433533, 0.86901, -0.435796, 0.0623718, 1.39879, 0.403534, 0.00745515, -0.0349066, 1.39879, -0.3, 0.00745329, 0.0752367], [-0.00503437, -0.402847, -0.0023745, -0.0643156, -0.43839, 0.887112, -0.445851, 0.0724152, 0.0023745, -0.0602542, -0.433227, 0.868286, -0.435608, 0.0693468, 1.39838, 0.41485, 0.00823425, -0.0349066, 1.39838, -0.3, 0.0086134, 0.07857], [-0.00503437, -0.402847, -0.0023745, -0.0643156, -0.43839, 0.887112, -0.445851, 0.0724152, 0.0023745, -0.0602542, -0.433227, 0.868286, -0.435608, 0.0693468, 1.39838, 0.41485, 0.00823425, -0.0349066, 1.39838, -0.3, 0.0086134, 0.07857], [-0.00575272, -0.403179, -0.00255739, -0.0708624, -0.438187, 0.887189, -0.446113, 0.0793767, 0.00255739, -0.0668455, -0.432909, 0.867497, -0.43538, 0.0763486, 1.39791, 0.426245, 0.00900927, -0.0349066, 1.39791, -0.3, 0.00985337, 0.0819034], [-0.00575272, -0.403179, -0.00255739, -0.0708624, -0.438187, 0.887189, -0.446113, 0.0793767, 0.00255739, -0.0668455, -0.432909, 0.867497, -0.43538, 0.0763486, 1.39791, 0.426245, 0.00900927, -0.0349066, 1.39791, -0.3, 0.00985337, 0.0819034], [-0.0065165, -0.403519, -0.00272211, -0.0775203, -0.437903, 0.887006, -0.446235, 0.0863632, 0.00272211, -0.073541, -0.432578, 0.866639, -0.435111, 0.0833692, 1.39738, 0.437718, 0.00977887, -0.0349066, 1.39738, -0.3, 0.0111757, 0.0852367], [-0.0065165, -0.403519, -0.00272211, -0.0775203, -0.437903, 0.887006, -0.446235, 0.0863632, 0.00272211, -0.073541, -0.432578, 0.866639, -0.435111, 0.0833692, 1.39738, 0.437718, 0.00977887, -0.0349066, 1.39738, -0.3, 0.0111757, 0.0852367], [-0.00732264, -0.403863, -0.00286453, -0.0842708, -0.437539, 0.886554, -0.44621, 0.0933506, 0.00286453, -0.0802812, -0.432236, 0.865719, -0.434803, 0.0903556, 1.39677, 0.449208, 0.0105378, -0.0349066, 1.39677, -0.3, 0.0125761, 0.08857], [-0.00732264, -0.403863, -0.00286453, -0.0842708, -0.437539, 0.886554, -0.44621, 0.0933506, 0.00286453, -0.0802812, -0.432236, 0.865719, -0.434803, 0.0903556, 1.39677, 0.449208, 0.0105378, -0.0349066, 1.39677, -0.3, 0.0125761, 0.08857], [-0.00818485, -0.404216, -0.00298537, -0.0911717, -0.437092, 0.885818, -0.446032, 0.100399, 0.00298537, -0.0872309, -0.431873, 0.864714, -0.434446, 0.0974453, 1.39609, 0.460896, 0.0112968, -0.0349066, 1.39609, -0.3, 0.0140796, 0.0919034], [-0.00818485, -0.404216, -0.00298537, -0.0911717, -0.437092, 0.885818, -0.446032, 0.100399, 0.00298537, -0.0872309, -0.431873, 0.864714, -0.434446, 0.0974453, 1.39609, 0.460896, 0.0112968, -0.0349066, 1.39609, -0.3, 0.0140796, 0.0919034], [-0.00909553, -0.404574, -0.00307822, -0.0981842, -0.436561, 0.884789, -0.445695, 0.107461, 0.00307822, -0.0942695, -0.431493, 0.863636, -0.434046, 0.104533, 1.39534, 0.472658, 0.0120462, -0.0349066, 1.39534, -0.3, 0.0156746, 0.0952367], [-0.00909553, -0.404574, -0.00307822, -0.0981842, -0.436561, 0.884789, -0.445695, 0.107461, 0.00307822, -0.0942695, -0.431493, 0.863636, -0.434046, 0.104533, 1.39534, 0.472658, 0.0120462, -0.0349066, 1.39534, -0.3, 0.0156746, 0.0952367], [-0.0100578, -0.404935, -0.00314059, -0.105318, -0.435947, 0.883453, -0.445191, 0.114543, 0.00314059, -0.101419, -0.431094, 0.86248, -0.433599, 0.111634, 1.39451, 0.484523, 0.0127863, -0.0349066, 1.39451, -0.3, 0.0173681, 0.09857], [-0.0100578, -0.404935, -0.00314059, -0.105318, -0.435947, 0.883453, -0.445191, 0.114543, 0.00314059, -0.101419, -0.431094, 0.86248, -0.433599, 0.111634, 1.39451, 0.484523, 0.0127863, -0.0349066, 1.39451, -0.3, 0.0173681, 0.09857], [-0.0110791, -0.4053, -0.0031699, -0.112599, -0.435244, 0.881789, -0.444509, 0.121667, 0.0031699, -0.108747, -0.43067, 0.861233, -0.433101, 0.1188, 1.3936, 0.496567, 0.0135202, -0.0349066, 1.3936, -0.3, 0.0191753, 0.101903], [-0.0110791, -0.4053, -0.0031699, -0.112599, -0.435244, 0.881789, -0.444509, 0.121667, 0.0031699, -0.108747, -0.43067, 0.861233, -0.433101, 0.1188, 1.3936, 0.496567, 0.0135202, -0.0349066, 1.3936, -0.3, 0.0191753, 0.101903], [-0.0121537, -0.405666, -0.00316197, -0.12, -0.434453, 0.879792, -0.443646, 0.128801, 0.00316197, -0.116168, -0.430225, 0.859903, -0.432553, 0.12596, 1.3926, 0.508706, 0.0142408, -0.0349066, 1.3926, -0.3, 0.0210883, 0.105237], [-0.0121537, -0.405666, -0.00316197, -0.12, -0.434453, 0.879792, -0.443646, 0.128801, 0.00316197, -0.116168, -0.430225, 0.859903, -0.432553, 0.12596, 1.3926, 0.508706, 0.0142408, -0.0349066, 1.3926, -0.3, 0.0210883, 0.105237], [-0.0132911, -0.406032, -0.00311494, -0.127554, -0.433568, 0.877433, -0.442587, 0.135972, 0.00311494, -0.123769, -0.429754, 0.858475, -0.431949, 0.133178, 1.39151, 0.521038, 0.014952, -0.0349066, 1.39151, -0.3, 0.0231267, 0.10857], [-0.0132911, -0.406032, -0.00311494, -0.127554, -0.433568, 0.877433, -0.442587, 0.135972, 0.00311494, -0.123769, -0.429754, 0.858475, -0.431949, 0.133178, 1.39151, 0.521038, 0.014952, -0.0349066, 1.39151, -0.3, 0.0231267, 0.10857], [-0.0144913, -0.406395, -0.0030259, -0.135256, -0.432586, 0.874698, -0.441323, 0.143171, 0.0030259, -0.131526, -0.429256, 0.856947, -0.431287, 0.140432, 1.39033, 0.533548, 0.0156505, -0.0349066, 1.39033, -0.3, 0.0252937, 0.111903], [-0.0144913, -0.406395, -0.0030259, -0.135256, -0.432586, 0.874698, -0.441323, 0.143171, 0.0030259, -0.131526, -0.429256, 0.856947, -0.431287, 0.140432, 1.39033, 0.533548, 0.0156505, -0.0349066, 1.39033, -0.3, 0.0252937, 0.111903], [-0.015756, -0.406753, -0.00289345, -0.143108, -0.431501, 0.871566, -0.439846, 0.150393, 0.00289345, -0.139438, -0.428733, 0.855316, -0.430565, 0.147717, 1.38905, 0.546241, 0.0163341, -0.0349066, 1.38905, -0.3, 0.0275962, 0.115237], [-0.015756, -0.406753, -0.00289345, -0.143108, -0.431501, 0.871566, -0.439846, 0.150393, 0.00289345, -0.139438, -0.428733, 0.855316, -0.430565, 0.147717, 1.38905, 0.546241, 0.0163341, -0.0349066, 1.38905, -0.3, 0.0275962, 0.115237], [-0.0170931, -0.407104, -0.00271637, -0.151135, -0.430303, 0.868005, -0.438138, 0.157654, 0.00271637, -0.147559, -0.428181, 0.853565, -0.429773, 0.15507, 1.38766, 0.559183, 0.0170038, -0.0349066, 1.38766, -0.3, 0.0300524, 0.11857], [-0.0170931, -0.407104, -0.00271637, -0.151135, -0.430303, 0.868005, -0.438138, 0.157654, 0.00271637, -0.147559, -0.428181, 0.853565, -0.429773, 0.15507, 1.38766, 0.559183, 0.0170038, -0.0349066, 1.38766, -0.3, 0.0300524, 0.11857], [-0.0185023, -0.407444, -0.00249499, -0.159326, -0.428986, 0.863997, -0.436191, 0.164942, 0.00249499, -0.15586, -0.427604, 0.851695, -0.428911, 0.162463, 1.38616, 0.572356, 0.0176551, -0.0349066, 1.38616, -0.3, 0.0326667, 0.121903], [-0.0185023, -0.407444, -0.00249499, -0.159326, -0.428986, 0.863997, -0.436191, 0.164942, 0.00249499, -0.15586, -0.427604, 0.851695, -0.428911, 0.162463, 1.38616, 0.572356, 0.0176551, -0.0349066, 1.38616, -0.3, 0.0326667, 0.121903], [-0.0199858, -0.407768, -0.00223198, -0.167684, -0.427538, 0.859519, -0.433994, 0.172251, 0.00223198, -0.164336, -0.427007, 0.849698, -0.427972, 0.169892, 1.38455, 0.585769, 0.0182852, -0.0349066, 1.38455, -0.3, 0.0354486, 0.125237], [-0.0199858, -0.407768, -0.00223198, -0.167684, -0.427538, 0.859519, -0.433994, 0.172251, 0.00223198, -0.164336, -0.427007, 0.849698, -0.427972, 0.169892, 1.38455, 0.585769, 0.0182852, -0.0349066, 1.38455, -0.3, 0.0354486, 0.125237], [-0.0215469, -0.408071, -0.00193191, -0.176211, -0.425946, 0.854545, -0.431534, 0.17958, 0.00193191, -0.172994, -0.426393, 0.847567, -0.426952, 0.177355, 1.38281, 0.59944, 0.0188911, -0.0349066, 1.38281, -0.3, 0.0384106, 0.12857], [-0.0215469, -0.408071, -0.00193191, -0.176211, -0.425946, 0.854545, -0.431534, 0.17958, 0.00193191, -0.172994, -0.426393, 0.847567, -0.426952, 0.177355, 1.38281, 0.59944, 0.0188911, -0.0349066, 1.38281, -0.3, 0.0384106, 0.12857], [-0.0231953, -0.408349, -0.00159965, -0.184934, -0.424189, 0.849026, -0.428788, 0.186942, 0.00159965, -0.181885, -0.425767, 0.845282, -0.425837, 0.184885, 1.38094, 0.613442, 0.0194721, -0.0349066, 1.38094, -0.3, 0.041578, 0.131903], [-0.0231953, -0.408349, -0.00159965, -0.184934, -0.424189, 0.849026, -0.428788, 0.186942, 0.00159965, -0.181885, -0.425767, 0.845282, -0.425837, 0.184885, 1.38094, 0.613442, 0.0194721, -0.0349066, 1.38094, -0.3, 0.041578, 0.131903], [-0.0249317, -0.408594, -0.00124322, -0.193844, -0.42225, 0.842939, -0.425747, 0.194327, 0.00124322, -0.190985, -0.425136, 0.842838, -0.424622, 0.192462, 1.37892, 0.627769, 0.0200232, -0.0349066, 1.37893, -0.3, 0.0449114, 0.135237], [-0.0249317, -0.408594, -0.00124322, -0.193844, -0.42225, 0.842939, -0.425747, 0.194327, 0.00124322, -0.190985, -0.425136, 0.842838, -0.424622, 0.192462, 1.37892, 0.627769, 0.0200232, -0.0349066, 1.37893, -0.3, 0.0449114, 0.135237], [-0.0267656, -0.408796, -0.00087117, -0.202963, -0.420101, 0.836229, -0.422385, 0.201743, 0.00087117, -0.200335, -0.424508, 0.840215, -0.423292, 0.200107, 1.37675, 0.642489, 0.0205422, -0.0349066, 1.37676, -0.3, 0.0482447, 0.13857], [-0.0267656, -0.408796, -0.00087117, -0.202963, -0.420101, 0.836229, -0.422385, 0.201743, 0.00087117, -0.200335, -0.424508, 0.840215, -0.423292, 0.200107, 1.37675, 0.642489, 0.0205422, -0.0349066, 1.37676, -0.3, 0.0482447, 0.13857], [-0.0286988, -0.408947, -0.000494847, -0.212283, -0.417721, 0.828866, -0.418689, 0.209178, 0.000494847, -0.209912, -0.423895, 0.837404, -0.421841, 0.207801, 1.37443, 0.657602, 0.0210235, -0.0349066, 1.37443, -0.3, 0.051578, 0.141903], [-0.0286988, -0.408947, -0.000494847, -0.212283, -0.417721, 0.828866, -0.418689, 0.209178, 0.000494847, -0.209912, -0.423895, 0.837404, -0.421841, 0.207801, 1.37443, 0.657602, 0.0210235, -0.0349066, 1.37443, -0.3, 0.051578, 0.141903], [-0.0307418, -0.409032, -0.000125101, -0.221824, -0.415077, 0.820785, -0.414629, 0.216639, 0.000125101, -0.219756, -0.423306, 0.834383, -0.42025, 0.215564, 1.37192, 0.673185, 0.0214639, -0.0349066, 1.37193, -0.3, 0.0549114, 0.145237], [-0.0307418, -0.409032, -0.000125101, -0.221824, -0.415077, 0.820785, -0.414629, 0.216639, 0.000125101, -0.219756, -0.423306, 0.834383, -0.42025, 0.215564, 1.37192, 0.673185, 0.0214639, -0.0349066, 1.37193, -0.3, 0.0549114, 0.145237], [-0.0328976, -0.409034, 0.000226397, -0.23158, -0.41214, 0.811943, -0.410185, 0.224116, -0.000226397, -0.229845, -0.422755, 0.831139, -0.41851, 0.223377, 1.36924, 0.689251, 0.0218576, -0.0349066, 1.36924, -0.3, 0.0582447, 0.14857], [-0.0328976, -0.409034, 0.000226397, -0.23158, -0.41214, 0.811943, -0.410185, 0.224116, -0.000226397, -0.229845, -0.422755, 0.831139, -0.41851, 0.223377, 1.36924, 0.689251, 0.0218576, -0.0349066, 1.36924, -0.3, 0.0582447, 0.14857], [-0.0351787, -0.408933, 0.00055022, -0.241576, -0.408873, 0.802256, -0.405318, 0.231614, -0.00055022, -0.240221, -0.422251, 0.827645, -0.416601, 0.23126, 1.36635, 0.705893, 0.0222007, -0.0349066, 1.36636, -0.3, 0.061578, 0.151903], [-0.0351787, -0.408933, 0.00055022, -0.241576, -0.408873, 0.802256, -0.405318, 0.231614, -0.00055022, -0.240221, -0.422251, 0.827645, -0.416601, 0.23126, 1.36635, 0.705893, 0.0222007, -0.0349066, 1.36636, -0.3, 0.061578, 0.151903], [-0.0376014, -0.408697, 0.000838297, -0.251846, -0.405229, 0.791612, -0.399973, 0.239144, -0.000838297, -0.250942, -0.421805, 0.823862, -0.414498, 0.23924, 1.36324, 0.723231, 0.0224891, -0.0349066, 1.36325, -0.3, 0.0649114, 0.155237], [-0.0376014, -0.408697, 0.000838297, -0.251846, -0.405229, 0.791612, -0.399973, 0.239144, -0.000838297, -0.250942, -0.421805, 0.823862, -0.414498, 0.23924, 1.36324, 0.723231, 0.0224891, -0.0349066, 1.36325, -0.3, 0.0649114, 0.155237], [-0.040167, -0.408294, 0.00108518, -0.26237, -0.401182, 0.779953, -0.394123, 0.246685, -0.00108518, -0.261963, -0.42143, 0.819781, -0.412191, 0.247279, 1.35991, 0.741278, 0.0227154, -0.0349066, 1.35992, -0.3, 0.0682447, 0.15857], [-0.040167, -0.408294, 0.00108518, -0.26237, -0.401182, 0.779953, -0.394123, 0.246685, -0.00108518, -0.261963, -0.42143, 0.819781, -0.412191, 0.247279, 1.35991, 0.741278, 0.0227154, -0.0349066, 1.35992, -0.3, 0.0682447, 0.15857], [-0.0428968, -0.407676, 0.00128947, -0.273194, -0.396677, 0.767124, -0.387692, 0.254247, -0.00128947, -0.273353, -0.421133, 0.815353, -0.40965, 0.25541, 1.35633, 0.760199, 0.0228747, -0.0349066, 1.35634, -0.3, 0.071578, 0.161903], [-0.0428968, -0.407676, 0.00128947, -0.273194, -0.396677, 0.767124, -0.387692, 0.254247, -0.00128947, -0.273353, -0.421133, 0.815353, -0.40965, 0.25541, 1.35633, 0.760199, 0.0228747, -0.0349066, 1.35634, -0.3, 0.071578, 0.161903], [-0.0458078, -0.406781, 0.00145252, -0.284343, -0.391661, 0.752966, -0.3806, 0.261829, -0.00145252, -0.285146, -0.420926, 0.810532, -0.406845, 0.26364, 1.35247, 0.780138, 0.0229605, -0.0349066, 1.35248, -0.3, 0.0749114, 0.165237], [-0.0458078, -0.406781, 0.00145252, -0.284343, -0.391661, 0.752966, -0.3806, 0.261829, -0.00145252, -0.285146, -0.420926, 0.810532, -0.406845, 0.26364, 1.35247, 0.780138, 0.0229605, -0.0349066, 1.35248, -0.3, 0.0749114, 0.165237], [-0.0489184, -0.405528, 0.00157973, -0.29584, -0.386077, 0.737296, -0.372759, 0.269428, -0.00157973, -0.297369, -0.420818, 0.805271, -0.403745, 0.271967, 1.34832, 0.80126, 0.0229652, -0.0350587, 1.34834, -0.3, 0.0782447, 0.16857], [-0.0489184, -0.405528, 0.00157973, -0.29584, -0.386077, 0.737296, -0.372759, 0.269428, -0.00157973, -0.297369, -0.420818, 0.805271, -0.403745, 0.271967, 1.34832, 0.80126, 0.0229652, -0.0350587, 1.34834, -0.3, 0.0782447, 0.16857], [-0.0522617, -0.403803, 0.00167713, -0.307745, -0.379835, 0.719831, -0.364026, 0.27705, -0.00167713, -0.310107, -0.420826, 0.799487, -0.400297, 0.280425, 1.34384, 0.823851, 0.0228807, -0.0357449, 1.34386, -0.3, 0.081578, 0.171903], [-0.0522617, -0.403803, 0.00167713, -0.307745, -0.379835, 0.719831, -0.364026, 0.27705, -0.00167713, -0.310107, -0.420826, 0.799487, -0.400297, 0.280425, 1.34384, 0.823851, 0.0228807, -0.0357449, 1.34386, -0.3, 0.081578, 0.171903], [-0.0558618, -0.401456, 0.00175532, -0.320075, -0.37285, 0.700292, -0.354266, 0.284684, -0.00175532, -0.323372, -0.420966, 0.79311, -0.396458, 0.288998, 1.33901, 0.84816, 0.0226969, -0.0370972, 1.33903, -0.3, 0.0849114, 0.175237], [-0.0558618, -0.401456, 0.00175532, -0.320075, -0.37285, 0.700292, -0.354266, 0.284684, -0.00175532, -0.323372, -0.420966, 0.79311, -0.396458, 0.288998, 1.33901, 0.84816, 0.0226969, -0.0370972, 1.33903, -0.3, 0.0849114, 0.175237], [-0.0597741, -0.398257, 0.00182116, -0.33292, -0.364965, 0.678189, -0.343239, 0.29234, -0.00182116, -0.337296, -0.421269, 0.785996, -0.392136, 0.297734, 1.33377, 0.874696, 0.0224026, -0.039282, 1.3338, -0.3, 0.0882447, 0.17857], [-0.0597741, -0.398257, 0.00182116, -0.33292, -0.364965, 0.678189, -0.343239, 0.29234, -0.00182116, -0.337296, -0.421269, 0.785996, -0.392136, 0.297734, 1.33377, 0.874696, 0.0224026, -0.039282, 1.3338, -0.3, 0.0882447, 0.17857], [-0.0640427, -0.393892, 0.00188749, -0.346307, -0.356024, 0.653018, -0.3307, 0.299999, -0.00188749, -0.351897, -0.421773, 0.778014, -0.387248, 0.306614, 1.32809, 0.903955, 0.0219854, -0.0425194, 1.32814, -0.3, 0.091578, 0.181903], [-0.0640427, -0.393892, 0.00188749, -0.346307, -0.356024, 0.653018, -0.3307, 0.299999, -0.00188749, -0.351897, -0.421773, 0.778014, -0.387248, 0.306614, 1.32809, 0.903955, 0.0219854, -0.0425194, 1.32814, -0.3, 0.091578, 0.181903], [-0.0687646, -0.387833, 0.00196005, -0.360356, -0.345732, 0.623871, -0.316208, 0.307671, -0.00196005, -0.367348, -0.422549, 0.768902, -0.381627, 0.315691, 1.32191, 0.936916, 0.0214315, -0.0458528, 1.32198, -0.3, 0.0949114, 0.185237], [-0.0687646, -0.387833, 0.00196005, -0.360356, -0.345732, 0.623871, -0.316208, 0.307671, -0.00196005, -0.367348, -0.422549, 0.768902, -0.381627, 0.315691, 1.32191, 0.936916, 0.0214315, -0.0458528, 1.32198, -0.3, 0.0949114, 0.185237], [-0.0740526, -0.379246, 0.00205044, -0.375139, -0.333718, 0.589576, -0.2992, 0.315334, -0.00205044, -0.383737, -0.423698, 0.75833, -0.375069, 0.324967, 1.31518, 0.97487, 0.0207311, -0.0491861, 1.31527, -0.3, 0.0982447, 0.18857], [-0.0740526, -0.379246, 0.00205044, -0.375139, -0.333718, 0.589576, -0.2992, 0.315334, -0.00205044, -0.383737, -0.423698, 0.75833, -0.375069, 0.324967, 1.31518, 0.97487, 0.0207311, -0.0491861, 1.31527, -0.3, 0.0982447, 0.18857], [-0.106486, -0.357253, 0.000413981, -0.379435, -0.295836, 0.531243, -0.271763, 0.319677, -0.000413981, -0.388931, -0.396336, 0.714309, -0.354885, 0.32955, 1.27352, 1.01654, 0.0173978, -0.0525194, 1.27361, -0.3, 0.101578, 0.191903], [-0.0910436, -0.366042, 0.000956613, -0.347039, -0.296416, 0.589576, -0.309564, 0.311849, -0.000956613, -0.356581, -0.414306, 0.738955, -0.339646, 0.320399, 1.30041, 0.97487, 0.0207311, -0.0491861, 1.30048, -0.341667, 0.0982447, 0.18857], [-0.0766673, -0.369583, 0.000908757, -0.313099, -0.293506, 0.647909, -0.348164, 0.302795, -0.000908757, -0.321024, -0.431426, 0.762846, -0.323772, 0.309717, 1.32433, 0.933203, 0.0240644, -0.0458528, 1.32441, -0.383333, 0.0949114, 0.185237], [-0.0651345, -0.368258, 0.00220542, -0.283251, -0.285915, 0.695217, -0.381285, 0.294591, -0.00220542, -0.290486, -0.447553, 0.782942, -0.305062, 0.300797, 1.34314, 0.891536, 0.0273575, -0.0425194, 1.34325, -0.425, 0.091578, 0.181903], [-0.0540954, -0.364676, 0.00259825, -0.253934, -0.275503, 0.736986, -0.412855, 0.285638, -0.00259825, -0.25954, -0.464125, 0.801288, -0.285555, 0.290774, 1.36021, 0.84987, 0.0302808, -0.0391861, 1.36035, -0.466667, 0.0882447, 0.17857], [-0.0445423, -0.358338, 0.0025568, -0.229151, -0.261659, 0.768485, -0.439402, 0.277656, -0.0025568, -0.234306, -0.482255, 0.81561, -0.262908, 0.282664, 1.37539, 0.815801, 0.0329442, -0.0375289, 1.37555, -0.508333, 0.0849114, 0.175237], [-0.0359513, -0.349832, 0.00225909, -0.208481, -0.245964, 0.792697, -0.462213, 0.270667, -0.00225909, -0.21427, -0.501848, 0.826548, -0.237506, 0.27639, 1.38987, 0.789135, 0.0355965, -0.037216, 1.39004, -0.55, 0.081578, 0.171903], [-0.0276108, -0.339149, 0.00165855, -0.190865, -0.229643, 0.812618, -0.482625, 0.264304, -0.00165855, -0.197766, -0.522862, 0.834896, -0.20979, 0.271175, 1.4, 0.767027, 0.038421, -0.0375907, 1.4, -0.591667, 0.0782447, 0.16857], [-0.0190307, -0.325644, 0.000698801, -0.176117, -0.213547, 0.829565, -0.500976, 0.258512, -0.000698801, -0.184435, -0.545514, 0.840789, -0.179624, 0.266835, 1.4, 0.748593, 0.0415273, -0.0382789, 1.4, -0.633333, 0.0749114, 0.165237], [-0.0100625, -0.309522, -0.000648864, -0.163733, -0.197987, 0.844471, -0.518093, 0.253103, 0.000648864, -0.17371, -0.569749, 0.844412, -0.147497, 0.263116, 1.4, 0.732824, 0.0448606, -0.0391024, 1.4, -0.668328, 0.071578, 0.161903], [-0.000520822, -0.290349, -0.00237799, -0.153779, -0.183415, 0.85778, -0.534111, 0.248144, 0.00237799, -0.165618, -0.595686, 0.845726, -0.113381, 0.260051, 1.4, 0.719554, 0.048194, -0.0398593, 1.4, -0.697622, 0.0682447, 0.15857], [0.00974907, -0.267684, -0.00443933, -0.146399, -0.170254, 0.869833, -0.549108, 0.243712, 0.00443933, -0.160299, -0.623392, 0.844679, -0.0772453, 0.257715, 1.4, 0.708764, 0.0515273, -0.040361, 1.4, -0.721902, 0.0649114, 0.155237], [0.020863, -0.241129, -0.00673279, -0.14178, -0.15888, 0.880905, -0.563137, 0.239885, 0.00673279, -0.15796, -0.652843, 0.841226, -0.0390839, 0.2562, 1.4, 0.700545, 0.0548606, -0.0404248, 1.4, -0.741594, 0.061578, 0.151903], [0.0328963, -0.210349, -0.00910702, -0.140136, -0.149617, 0.891229, -0.576248, 0.236739, 0.00910702, -0.158848, -0.683911, 0.835338, 0.00108242, 0.255615, 1.4, 0.695084, 0.058194, -0.0398656, 1.4, -0.756902, 0.0582447, 0.14857], [0.0458985, -0.175049, -0.0113945, -0.141674, -0.142719, 0.901024, -0.588503, 0.23434, 0.0113945, -0.163223, -0.716394, 0.826984, 0.0432228, 0.256079, 1.4, 0.692656, 0.0615273, -0.0384883, 1.4, -0.767865, 0.0549114, 0.145237], [0.0599137, -0.134932, -0.0134379, -0.146573, -0.13838, 0.910514, -0.599995, 0.232742, 0.0134379, -0.171341, -0.750059, 0.816115, 0.0873183, 0.257723, 1.4, 0.693598, 0.0648606, -0.0360815, 1.4, -0.774416, 0.051578, 0.142499], [0.075088, -0.0932649, -0.0151266, -0.155104, -0.136885, 0.919992, -0.61075, 0.232006, 0.0151266, -0.183589, -0.784769, 0.802567, 0.133541, 0.260727, 1.4, 0.698412, 0.068194, -0.0350014, 1.4, -0.776315, 0.0482447, 0.141502], [0.0915913, -0.0515983, -0.0164028, -0.167573, -0.138491, 0.929734, -0.620829, 0.2322, 0.0164028, -0.200443, -0.820465, 0.786086, 0.182129, 0.265334, 1.4, 0.707735, 0.0715273, -0.0349091, 1.4, -0.773162, 0.0449114, 0.142418], [0.109576, -0.0099316, -0.0172558, -0.184258, -0.14337, 0.939975, -0.630356, 0.233374, 0.0172558, -0.222406, -0.857114, 0.766389, 0.233294, 0.271817, 1.4, 0.72227, 0.0748606, -0.0349066, 1.4, -0.764505, 0.041578, 0.145394], [0.112546, -0.00550455, -0.0181912, -0.182066, -0.145897, 0.944944, -0.63708, 0.223293, 0.0181912, -0.223579, -0.856252, 0.762889, 0.230135, 0.264282, 1.4, 0.712799, 0.0752144, -0.0373073, 1.4, -0.778955, 0.0382447, 0.14206], [0.116023, -0.000524347, -0.0186839, -0.179599, -0.148313, 0.95051, -0.64408, 0.212691, 0.0186839, -0.222659, -0.855535, 0.759917, 0.227732, 0.254886, 1.4, 0.700877, 0.0753265, -0.0405183, 1.4, -0.796434, 0.0349114, 0.138727], [0.119576, 0.00413528, -0.0190327, -0.176622, -0.150435, 0.955999, -0.651097, 0.201559, 0.0190327, -0.220241, -0.854764, 0.75735, 0.225322, 0.244319, 1.4, 0.68724, 0.0748963, -0.0438516, 1.4, -0.815509, 0.031578, 0.135394], [0.122826, 0.0080567, -0.0193631, -0.173301, -0.152278, 0.960765, -0.657876, 0.190236, 0.0193631, -0.217617, -0.853851, 0.754893, 0.222521, 0.23368, 1.4, 0.673444, 0.0740299, -0.0471849, 1.4, -0.833956, 0.0282447, 0.13206], [0.125874, 0.0116283, -0.0196481, -0.169879, -0.154018, 0.9649, -0.664367, 0.178792, 0.0196481, -0.215016, -0.852882, 0.752421, 0.219532, 0.223042, 1.4, 0.659726, 0.0729732, -0.0505183, 1.4, -0.851583, 0.0253076, 0.128727], [0.128784, 0.0150723, -0.0198716, -0.16647, -0.155742, 0.968487, -0.670562, 0.167264, 0.0198716, -0.212555, -0.851915, 0.749875, 0.216489, 0.212453, 1.4, 0.646201, 0.0718618, -0.0538516, 1.4, -0.868347, 0.0226017, 0.125394], [0.13159, 0.0185032, -0.020032, -0.163131, -0.157493, 0.971589, -0.676467, 0.155679, 0.020032, -0.210314, -0.850982, 0.747227, 0.213458, 0.201958, 1.4, 0.632945, 0.0707699, -0.0571849, 1.4, -0.884237, 0.0200255, 0.12206], [0.134297, 0.0219635, -0.0201362, -0.159889, -0.159292, 0.974251, -0.682097, 0.14407, 0.0201362, -0.208391, -0.850097, 0.744457, 0.210467, 0.191643, 1.4, 0.62006, 0.0697421, -0.0605183, 1.4, -0.8992, 0.0175321, 0.118727], [0.136958, 0.0255364, -0.020177, -0.156758, -0.161157, 0.976553, -0.687477, 0.132407, 0.020177, -0.206661, -0.849279, 0.741582, 0.207565, 0.181381, 1.4, 0.607398, 0.0687889, -0.0638516, 1.4, -0.913469, 0.0150478, 0.115394], [0.139546, 0.0291747, -0.0201682, -0.153716, -0.163072, 0.978503, -0.692621, 0.120723, 0.0201682, -0.205232, -0.848521, 0.7386, 0.204732, 0.171296, 1.4, 0.595075, 0.0679142, -0.0671849, 1.4, -0.926951, 0.0125978, 0.11206], [0.142072, 0.0328883, -0.0201127, -0.150763, -0.165038, 0.980137, -0.69755, 0.109019, 0.0201127, -0.20408, -0.847823, 0.735522, 0.201972, 0.161372, 1.4, 0.583064, 0.0671187, -0.0705183, 1.4, -0.939722, 0.0101657, 0.108727], [0.144557, 0.0367063, -0.0200076, -0.147899, -0.16706, 0.981498, -0.702276, 0.0972759, 0.0200076, -0.203137, -0.847189, 0.732358, 0.199301, 0.15154, 1.4, 0.571283, 0.0663998, -0.0738516, 1.4, -0.951906, 0.00772405, 0.105394], [0.146994, 0.0405988, -0.0198568, -0.145102, -0.169124, 0.982597, -0.706814, 0.0855019, 0.0198568, -0.202418, -0.846613, 0.72912, 0.196706, 0.141834, 1.4, 0.559749, 0.0657483, -0.0771849, 1.4, -0.963509, 0.0052895, 0.10206], [0.149379, 0.0445486, -0.0196632, -0.142359, -0.171221, 0.983448, -0.711176, 0.073698, 0.0196632, -0.201918, -0.846089, 0.725819, 0.194179, 0.13226, 1.4, 0.548452, 0.0651563, -0.0805183, 1.4, -0.974564, 0.00287008, 0.0987271], [0.15171, 0.0485404, -0.0194277, -0.139656, -0.173343, 0.984066, -0.715371, 0.0618627, 0.0194277, -0.201623, -0.84561, 0.722465, 0.191714, 0.122817, 1.4, 0.537379, 0.0646151, -0.0838516, 1.4, -0.985104, 0.000473333, 0.0953937], [0.154012, 0.0526152, -0.0191456, -0.137013, -0.175505, 0.984482, -0.719405, 0.04998, 0.0191456, -0.201475, -0.845178, 0.719062, 0.189322, 0.11343, 1.4, 0.526463, 0.0641286, -0.0871849, 1.4, -0.995222, -0.00193378, 0.0920604], [0.156243, 0.056675, -0.018822, -0.134364, -0.17766, 0.984672, -0.72329, 0.0380703, 0.018822, -0.201535, -0.844777, 0.715633, 0.186973, 0.104213, 1.4, 0.515769, 0.0636708, -0.0905183, 1.4, -1.00485, -0.00428169, 0.0887271], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158438, 0.0607858, -0.0184533, -0.131756, -0.179841, 0.984674, -0.727026, 0.026111, 0.0184533, -0.201726, -0.844408, 0.712171, 0.18468, 0.09505, 1.4, 0.505213, 0.0632519, -0.0938516, 1.4, -1.0141, -0.00662084, 0.0853937], [0.158374, 0.0607457, -0.0185685, -0.133111, -0.17992, 0.984909, -0.726992, 0.0273456, 0.0185685, -0.201434, -0.844386, 0.712143, 0.184658, 0.0951602, 1.4, 0.506276, 0.0634385, -0.0933895, 1.4, -1.01333, -0.00669242, 0.0856456], [0.158271, 0.0606776, -0.0187224, -0.134932, -0.180027, 0.98525, -0.727002, 0.0290622, 0.0187224, -0.20126, -0.844356, 0.712079, 0.184631, 0.0955085, 1.4, 0.507928, 0.0637265, -0.0926725, 1.4, -1.01213, -0.00679836, 0.0860423], [0.158155, 0.0606066, -0.0188796, -0.136716, -0.180148, 0.985629, -0.727074, 0.0308161, 0.0188796, -0.201388, -0.844323, 0.711981, 0.184606, 0.0961299, 1.4, 0.509852, 0.064065, -0.091838, 1.4, -1.01073, -0.00692735, 0.0865064], [0.157869, 0.060795, -0.0193585, -0.140542, -0.180883, 0.987222, -0.727791, 0.0352748, 0.0193585, -0.205379, -0.844188, 0.711309, 0.184663, 0.101084, 1.4, 0.517724, 0.0656398, -0.0885046, 1.4, -1.00513, -0.00783609, 0.0882971], [0.157869, 0.060795, -0.0193585, -0.140542, -0.180883, 0.987222, -0.727791, 0.0352748, 0.0193585, -0.205379, -0.844188, 0.711309, 0.184663, 0.101084, 1.4, 0.517724, 0.0656398, -0.0885046, 1.4, -1.00513, -0.00783609, 0.0882971], [0.157816, 0.0613357, -0.0196622, -0.143479, -0.18164, 0.988569, -0.72829, 0.0386146, 0.0196622, -0.208477, -0.844114, 0.710732, 0.184868, 0.104586, 1.4, 0.523585, 0.0669718, -0.0858994, 1.4, -1.00108, -0.00883124, 0.089538], [0.157816, 0.0613357, -0.0196622, -0.143479, -0.18164, 0.988569, -0.72829, 0.0386146, 0.0196622, -0.208477, -0.844114, 0.710732, 0.184868, 0.104586, 1.4, 0.523585, 0.0669718, -0.0858994, 1.4, -1.00108, -0.00883124, 0.089538], [0.157839, 0.0620612, -0.0199092, -0.146507, -0.182471, 0.989961, -0.728761, 0.0419582, 0.0199092, -0.211528, -0.844067, 0.710135, 0.185185, 0.107962, 1.4, 0.529393, 0.0683705, -0.0833029, 1.4, -0.997092, -0.00996623, 0.0907377], [0.157839, 0.0620612, -0.0199092, -0.146507, -0.182471, 0.989961, -0.728761, 0.0419582, 0.0199092, -0.211528, -0.844067, 0.710135, 0.185185, 0.107962, 1.4, 0.529393, 0.0683705, -0.0833029, 1.4, -0.997092, -0.00996623, 0.0907377], [0.157933, 0.0630297, -0.0201178, -0.149733, -0.183453, 0.991517, -0.729264, 0.0454777, 0.0201178, -0.21498, -0.844034, 0.709455, 0.185635, 0.111676, 1.4, 0.535698, 0.069966, -0.0804709, 1.4, -0.992791, -0.0113396, 0.0920165], [0.157933, 0.0630297, -0.0201178, -0.149733, -0.183453, 0.991517, -0.729264, 0.0454777, 0.0201178, -0.21498, -0.844034, 0.709455, 0.185635, 0.111676, 1.4, 0.535698, 0.069966, -0.0804709, 1.4, -0.992791, -0.0113396, 0.0920165], [0.15818, 0.0645472, -0.0202652, -0.153379, -0.184798, 0.99351, -0.729887, 0.0494197, 0.0202652, -0.21958, -0.844021, 0.708564, 0.186368, 0.116403, 1.4, 0.543361, 0.0720504, -0.0771375, 1.4, -0.987636, -0.0132776, 0.0935086], [0.15818, 0.0645472, -0.0202652, -0.153379, -0.184798, 0.99351, -0.729887, 0.0494197, 0.0202652, -0.21958, -0.844021, 0.708564, 0.186368, 0.116403, 1.4, 0.543361, 0.0720504, -0.0771375, 1.4, -0.987636, -0.0132776, 0.0935086], [0.158785, 0.0672038, -0.0202121, -0.157709, -0.186817, 0.9963, -0.73068, 0.0539076, 0.0202121, -0.225937, -0.844056, 0.707333, 0.187722, 0.122563, 1.4, 0.553005, 0.0749948, -0.0738042, 1.4, -0.981353, -0.0163123, 0.0952194], [0.158785, 0.0672038, -0.0202121, -0.157709, -0.186817, 0.9963, -0.73068, 0.0539076, 0.0202121, -0.225937, -0.844056, 0.707333, 0.187722, 0.122563, 1.4, 0.553005, 0.0749948, -0.0738042, 1.4, -0.981353, -0.0163123, 0.0952194], [0.158785, 0.0672038, -0.0202121, -0.157709, -0.186817, 0.9963, -0.73068, 0.0539076, 0.0202121, -0.225937, -0.844056, 0.707333, 0.187722, 0.122563, 1.4, 0.553005, 0.0749948, -0.0738042, 1.4, -0.981353, -0.0163123, 0.0952194], [0.159628, 0.0708097, -0.0199307, -0.163847, -0.189519, 0.999881, -0.731556, 0.0599694, 0.0199307, -0.233676, -0.844015, 0.705794, 0.189615, 0.130006, 1.4, 0.565356, 0.0783281, -0.0704709, 1.4, -0.973232, -0.0196457, 0.0974535], [0.159628, 0.0708097, -0.0199307, -0.163847, -0.189519, 0.999881, -0.731556, 0.0599694, 0.0199307, -0.233676, -0.844015, 0.705794, 0.189615, 0.130006, 1.4, 0.565356, 0.0783281, -0.0704709, 1.4, -0.973232, -0.0196457, 0.0974535], [0.159628, 0.0708097, -0.0199307, -0.163847, -0.189519, 0.999881, -0.731556, 0.0599694, 0.0199307, -0.233676, -0.844015, 0.705794, 0.189615, 0.130006, 1.4, 0.565356, 0.0783281, -0.0704709, 1.4, -0.973232, -0.0196457, 0.0974535], [0.16024, 0.0736981, -0.0195627, -0.16962, -0.191857, 1.00282, -0.732193, 0.0656149, 0.0195627, -0.240195, -0.843775, 0.704523, 0.191114, 0.136343, 1.4, 0.576328, 0.0816615, -0.0671375, 1.4, -0.965755, -0.0229622, 0.0996312], [0.16024, 0.0736981, -0.0195627, -0.16962, -0.191857, 1.00282, -0.732193, 0.0656149, 0.0195627, -0.240195, -0.843775, 0.704523, 0.191114, 0.136343, 1.4, 0.576328, 0.0816615, -0.0671375, 1.4, -0.965755, -0.0229622, 0.0996312], [0.16024, 0.0736981, -0.0195627, -0.16962, -0.191857, 1.00282, -0.732193, 0.0656149, 0.0195627, -0.240195, -0.843775, 0.704523, 0.191114, 0.136343, 1.4, 0.576328, 0.0816615, -0.0671375, 1.4, -0.965755, -0.0229622, 0.0996312], [0.160658, 0.0760536, -0.0191693, -0.175173, -0.193981, 1.00532, -0.73269, 0.0710895, 0.0191693, -0.2462, -0.843374, 0.703386, 0.192285, 0.142254, 1.4, 0.586731, 0.0846894, -0.0638042, 1.4, -0.958394, -0.0257831, 0.101897], [0.160658, 0.0760536, -0.0191693, -0.175173, -0.193981, 1.00532, -0.73269, 0.0710895, 0.0191693, -0.2462, -0.843374, 0.703386, 0.192285, 0.142254, 1.4, 0.586731, 0.0846894, -0.0638042, 1.4, -0.958394, -0.0257831, 0.101897], [0.160658, 0.0760536, -0.0191693, -0.175173, -0.193981, 1.00532, -0.73269, 0.0710895, 0.0191693, -0.2462, -0.843374, 0.703386, 0.192285, 0.142254, 1.4, 0.586731, 0.0846894, -0.0638042, 1.4, -0.958394, -0.0257831, 0.101897], [0.160658, 0.0760536, -0.0191693, -0.175173, -0.193981, 1.00532, -0.73269, 0.0710895, 0.0191693, -0.2462, -0.843374, 0.703386, 0.192285, 0.142254, 1.4, 0.586731, 0.0846894, -0.0638042, 1.4, -0.958394, -0.0257831, 0.101897], [0.161105, 0.0789364, -0.0186455, -0.182505, -0.196743, 1.00833, -0.733224, 0.078338, 0.0186455, -0.254054, -0.842781, 0.701877, 0.193662, 0.150003, 1.4, 0.600425, 0.0880228, -0.0604709, 1.4, -0.948425, -0.0291165, 0.105079], [0.161105, 0.0789364, -0.0186455, -0.182505, -0.196743, 1.00833, -0.733224, 0.078338, 0.0186455, -0.254054, -0.842781, 0.701877, 0.193662, 0.150003, 1.4, 0.600425, 0.0880228, -0.0604709, 1.4, -0.948425, -0.0291165, 0.105079], [0.161105, 0.0789364, -0.0186455, -0.182505, -0.196743, 1.00833, -0.733224, 0.078338, 0.0186455, -0.254054, -0.842781, 0.701877, 0.193662, 0.150003, 1.4, 0.600425, 0.0880228, -0.0604709, 1.4, -0.948425, -0.0291165, 0.105079], [0.161105, 0.0789364, -0.0186455, -0.182505, -0.196743, 1.00833, -0.733224, 0.078338, 0.0186455, -0.254054, -0.842781, 0.701877, 0.193662, 0.150003, 1.4, 0.600425, 0.0880228, -0.0604709, 1.4, -0.948425, -0.0291165, 0.105079], [0.161465, 0.0815844, -0.0181075, -0.189743, -0.199411, 1.01099, -0.733608, 0.0854713, 0.0181075, -0.261576, -0.842156, 0.7004, 0.194892, 0.15744, 1.4, 0.613739, 0.0913561, -0.0571375, 1.4, -0.93847, -0.0323809, 0.108357], [0.161465, 0.0815844, -0.0181075, -0.189743, -0.199411, 1.01099, -0.733608, 0.0854713, 0.0181075, -0.261576, -0.842156, 0.7004, 0.194892, 0.15744, 1.4, 0.613739, 0.0913561, -0.0571375, 1.4, -0.93847, -0.0323809, 0.108357], [0.161465, 0.0815844, -0.0181075, -0.189743, -0.199411, 1.01099, -0.733608, 0.0854713, 0.0181075, -0.261576, -0.842156, 0.7004, 0.194892, 0.15744, 1.4, 0.613739, 0.0913561, -0.0571375, 1.4, -0.93847, -0.0323809, 0.108357], [0.161465, 0.0815844, -0.0181075, -0.189743, -0.199411, 1.01099, -0.733608, 0.0854713, 0.0181075, -0.261576, -0.842156, 0.7004, 0.194892, 0.15744, 1.4, 0.613739, 0.0913561, -0.0571375, 1.4, -0.93847, -0.0323809, 0.108357], [0.161801, 0.0842018, -0.0175667, -0.196995, -0.202085, 1.01343, -0.733878, 0.0925829, 0.0175667, -0.26905, -0.841556, 0.698875, 0.19609, 0.164802, 1.4, 0.62699, 0.0946894, -0.0538042, 1.4, -0.928354, -0.0355888, 0.11169], [0.161801, 0.0842018, -0.0175667, -0.196995, -0.202085, 1.01343, -0.733878, 0.0925829, 0.0175667, -0.26905, -0.841556, 0.698875, 0.19609, 0.164802, 1.4, 0.62699, 0.0946894, -0.0538042, 1.4, -0.928354, -0.0355888, 0.11169], [0.161801, 0.0842018, -0.0175667, -0.196995, -0.202085, 1.01343, -0.733878, 0.0925829, 0.0175667, -0.26905, -0.841556, 0.698875, 0.19609, 0.164802, 1.4, 0.62699, 0.0946894, -0.0538042, 1.4, -0.928354, -0.0355888, 0.11169], [0.161801, 0.0842018, -0.0175667, -0.196995, -0.202085, 1.01343, -0.733878, 0.0925829, 0.0175667, -0.26905, -0.841556, 0.698875, 0.19609, 0.164802, 1.4, 0.62699, 0.0946894, -0.0538042, 1.4, -0.928354, -0.0355888, 0.11169], [0.16214, 0.0868589, -0.01703, -0.204292, -0.204787, 1.01568, -0.734042, 0.0996884, 0.01703, -0.276528, -0.841009, 0.697281, 0.197301, 0.172125, 1.4, 0.640234, 0.0980228, -0.0504709, 1.4, -0.918057, -0.038801, 0.115024], [0.16214, 0.0868589, -0.01703, -0.204292, -0.204787, 1.01568, -0.734042, 0.0996884, 0.01703, -0.276528, -0.841009, 0.697281, 0.197301, 0.172125, 1.4, 0.640234, 0.0980228, -0.0504709, 1.4, -0.918057, -0.038801, 0.115024], [0.16214, 0.0868589, -0.01703, -0.204292, -0.204787, 1.01568, -0.734042, 0.0996884, 0.01703, -0.276528, -0.841009, 0.697281, 0.197301, 0.172125, 1.4, 0.640234, 0.0980228, -0.0504709, 1.4, -0.918057, -0.038801, 0.115024], [0.162367, 0.0887565, -0.0166208, -0.209704, -0.206753, 1.01718, -0.734081, 0.104927, 0.0166208, -0.281881, -0.840613, 0.696108, 0.19817, 0.177376, 1.4, 0.649878, 0.100786, -0.0471375, 1.4, -0.910425, -0.0410945, 0.11768], [0.162367, 0.0887565, -0.0166208, -0.209704, -0.206753, 1.01718, -0.734081, 0.104927, 0.0166208, -0.281881, -0.840613, 0.696108, 0.19817, 0.177376, 1.4, 0.649878, 0.100786, -0.0471375, 1.4, -0.910425, -0.0410945, 0.11768], [0.162367, 0.0887565, -0.0166208, -0.209704, -0.206753, 1.01718, -0.734081, 0.104927, 0.0166208, -0.281881, -0.840613, 0.696108, 0.19817, 0.177376, 1.4, 0.649878, 0.100786, -0.0471375, 1.4, -0.910425, -0.0410945, 0.11768], [0.162617, 0.0907693, -0.0162209, -0.215212, -0.208794, 1.01863, -0.734078, 0.110236, 0.0162209, -0.287462, -0.840259, 0.694841, 0.199084, 0.182798, 1.4, 0.659775, 0.103663, -0.0438042, 1.4, -0.902505, -0.043485, 0.120462], [0.162617, 0.0907693, -0.0162209, -0.215212, -0.208794, 1.01863, -0.734078, 0.110236, 0.0162209, -0.287462, -0.840259, 0.694841, 0.199084, 0.182798, 1.4, 0.659775, 0.103663, -0.0438042, 1.4, -0.902505, -0.043485, 0.120462], [0.162617, 0.0907693, -0.0162209, -0.215212, -0.208794, 1.01863, -0.734078, 0.110236, 0.0162209, -0.287462, -0.840259, 0.694841, 0.199084, 0.182798, 1.4, 0.659775, 0.103663, -0.0438042, 1.4, -0.902505, -0.043485, 0.120462], [0.162888, 0.09286, -0.0158254, -0.220771, -0.210868, 1.02001, -0.734021, 0.115555, 0.0158254, -0.293093, -0.839954, 0.693518, 0.200044, 0.188231, 1.4, 0.669724, 0.106599, -0.0404709, 1.4, -0.894455, -0.0459259, 0.123313], [0.162888, 0.09286, -0.0158254, -0.220771, -0.210868, 1.02001, -0.734021, 0.115555, 0.0158254, -0.293093, -0.839954, 0.693518, 0.200044, 0.188231, 1.4, 0.669724, 0.106599, -0.0404709, 1.4, -0.894455, -0.0459259, 0.123313], [0.162888, 0.09286, -0.0158254, -0.220771, -0.210868, 1.02001, -0.734021, 0.115555, 0.0158254, -0.293093, -0.839954, 0.693518, 0.200044, 0.188231, 1.4, 0.669724, 0.106599, -0.0404709, 1.4, -0.894455, -0.0459259, 0.123313], [0.163171, 0.0950058, -0.0154364, -0.22637, -0.212961, 1.02129, -0.733909, 0.120876, 0.0154364, -0.298751, -0.839692, 0.692144, 0.201036, 0.193658, 1.4, 0.679701, 0.109577, -0.0371375, 1.4, -0.886287, -0.0483967, 0.126233], [0.163171, 0.0950058, -0.0154364, -0.22637, -0.212961, 1.02129, -0.733909, 0.120876, 0.0154364, -0.298751, -0.839692, 0.692144, 0.201036, 0.193658, 1.4, 0.679701, 0.109577, -0.0371375, 1.4, -0.886287, -0.0483967, 0.126233], [0.163171, 0.0950058, -0.0154364, -0.22637, -0.212961, 1.02129, -0.733909, 0.120876, 0.0154364, -0.298751, -0.839692, 0.692144, 0.201036, 0.193658, 1.4, 0.679701, 0.109577, -0.0371375, 1.4, -0.886287, -0.0483967, 0.126233], [0.16347, 0.0972195, -0.0150489, -0.232022, -0.215083, 1.0225, -0.733743, 0.126211, 0.0150489, -0.304466, -0.839471, 0.690714, 0.202066, 0.199103, 1.4, 0.689744, 0.112613, -0.0349066, 1.4, -0.877969, -0.05091, 0.129232], [0.16347, 0.0972195, -0.0150489, -0.232022, -0.215083, 1.0225, -0.733743, 0.126211, 0.0150489, -0.304466, -0.839471, 0.690714, 0.202066, 0.199103, 1.4, 0.689744, 0.112613, -0.0349066, 1.4, -0.877969, -0.05091, 0.129232], [0.16347, 0.0972195, -0.0150489, -0.232022, -0.215083, 1.0225, -0.733743, 0.126211, 0.0150489, -0.304466, -0.839471, 0.690714, 0.202066, 0.199103, 1.4, 0.689744, 0.112613, -0.0349066, 1.4, -0.877969, -0.05091, 0.129232], [0.163787, 0.0995134, -0.0146583, -0.237739, -0.217241, 1.02363, -0.733521, 0.131566, 0.0146583, -0.310264, -0.839288, 0.689223, 0.203141, 0.204584, 1.4, 0.699883, 0.115718, -0.0349066, 1.4, -0.869477, -0.0534772, 0.132318], [0.163787, 0.0995134, -0.0146583, -0.237739, -0.217241, 1.02363, -0.733521, 0.131566, 0.0146583, -0.310264, -0.839288, 0.689223, 0.203141, 0.204584, 1.4, 0.699883, 0.115718, -0.0349066, 1.4, -0.869477, -0.0534772, 0.132318], [0.163787, 0.0995134, -0.0146583, -0.237739, -0.217241, 1.02363, -0.733521, 0.131566, 0.0146583, -0.310264, -0.839288, 0.689223, 0.203141, 0.204584, 1.4, 0.699883, 0.115718, -0.0349066, 1.4, -0.869477, -0.0534772, 0.132318], [0.164101, 0.101808, -0.0142788, -0.24346, -0.219384, 1.02464, -0.73324, 0.136898, 0.0142788, -0.316009, -0.839141, 0.687704, 0.204224, 0.209999, 1.4, 0.709967, 0.118823, -0.0349066, 1.4, -0.86092, -0.0560232, 0.135458], [0.164101, 0.101808, -0.0142788, -0.24346, -0.219384, 1.02464, -0.73324, 0.136898, 0.0142788, -0.316009, -0.839141, 0.687704, 0.204224, 0.209999, 1.4, 0.709967, 0.118823, -0.0349066, 1.4, -0.86092, -0.0560232, 0.135458], [0.164101, 0.101808, -0.0142788, -0.24346, -0.219384, 1.02464, -0.73324, 0.136898, 0.0142788, -0.316009, -0.839141, 0.687704, 0.204224, 0.209999, 1.4, 0.709967, 0.118823, -0.0349066, 1.4, -0.86092, -0.0560232, 0.135458], [0.164428, 0.104168, -0.0138989, -0.24924, -0.221555, 1.02556, -0.732904, 0.142246, 0.0138989, -0.321834, -0.839028, 0.686124, 0.205342, 0.215449, 1.4, 0.720147, 0.121991, -0.0349066, 1.4, -0.852181, -0.0586108, 0.13869], [0.164428, 0.104168, -0.0138989, -0.24924, -0.221555, 1.02556, -0.732904, 0.142246, 0.0138989, -0.321834, -0.839028, 0.686124, 0.205342, 0.215449, 1.4, 0.720147, 0.121991, -0.0349066, 1.4, -0.852181, -0.0586108, 0.13869], [0.164428, 0.104168, -0.0138989, -0.24924, -0.221555, 1.02556, -0.732904, 0.142246, 0.0138989, -0.321834, -0.839028, 0.686124, 0.205342, 0.215449, 1.4, 0.720147, 0.121991, -0.0349066, 1.4, -0.852181, -0.0586108, 0.13869], [0.164756, 0.106545, -0.0135249, -0.255037, -0.22372, 1.02637, -0.732509, 0.147579, 0.0135249, -0.327642, -0.838949, 0.68451, 0.206477, 0.220859, 1.4, 0.730313, 0.125175, -0.0349066, 1.4, -0.843343, -0.0611926, 0.141986], [0.164756, 0.106545, -0.0135249, -0.255037, -0.22372, 1.02637, -0.732509, 0.147579, 0.0135249, -0.327642, -0.838949, 0.68451, 0.206477, 0.220859, 1.4, 0.730313, 0.125175, -0.0349066, 1.4, -0.843343, -0.0611926, 0.141986], [0.164756, 0.106545, -0.0135249, -0.255037, -0.22372, 1.02637, -0.732509, 0.147579, 0.0135249, -0.327642, -0.838949, 0.68451, 0.206477, 0.220859, 1.4, 0.730313, 0.125175, -0.0349066, 1.4, -0.843343, -0.0611926, 0.141986], [0.165082, 0.10893, -0.0131586, -0.260848, -0.225874, 1.02706, -0.732057, 0.152898, 0.0131586, -0.333432, -0.8389, 0.682861, 0.20762, 0.226232, 1.4, 0.740468, 0.128372, -0.0349066, 1.4, -0.834402, -0.063761, 0.145319], [0.165082, 0.10893, -0.0131586, -0.260848, -0.225874, 1.02706, -0.732057, 0.152898, 0.0131586, -0.333432, -0.8389, 0.682861, 0.20762, 0.226232, 1.4, 0.740468, 0.128372, -0.0349066, 1.4, -0.834402, -0.063761, 0.145319], [0.165082, 0.10893, -0.0131586, -0.260848, -0.225874, 1.02706, -0.732057, 0.152898, 0.0131586, -0.333432, -0.8389, 0.682861, 0.20762, 0.226232, 1.4, 0.740468, 0.128372, -0.0349066, 1.4, -0.834402, -0.063761, 0.145319], [0.165415, 0.111356, -0.0127936, -0.266702, -0.228039, 1.02765, -0.731547, 0.158222, 0.0127936, -0.339269, -0.838881, 0.681161, 0.208788, 0.231615, 1.4, 0.750687, 0.131612, -0.0349066, 1.4, -0.825296, -0.0663476, 0.148652], [0.165415, 0.111356, -0.0127936, -0.266702, -0.228039, 1.02765, -0.731547, 0.158222, 0.0127936, -0.339269, -0.838881, 0.681161, 0.208788, 0.231615, 1.4, 0.750687, 0.131612, -0.0349066, 1.4, -0.825296, -0.0663476, 0.148652], [0.165415, 0.111356, -0.0127936, -0.266702, -0.228039, 1.02765, -0.731547, 0.158222, 0.0127936, -0.339269, -0.838881, 0.681161, 0.208788, 0.231615, 1.4, 0.750687, 0.131612, -0.0349066, 1.4, -0.825296, -0.0663476, 0.148652], [0.16575, 0.113811, -0.0124302, -0.272586, -0.230204, 1.02813, -0.730979, 0.16354, 0.0124302, -0.345122, -0.83889, 0.67942, 0.209977, 0.236984, 1.4, 0.760937, 0.134883, -0.0349066, 1.4, -0.816053, -0.0689392, 0.151986], [0.16575, 0.113811, -0.0124302, -0.272586, -0.230204, 1.02813, -0.730979, 0.16354, 0.0124302, -0.345122, -0.83889, 0.67942, 0.209977, 0.236984, 1.4, 0.760937, 0.134883, -0.0349066, 1.4, -0.816053, -0.0689392, 0.151986], [0.16575, 0.113811, -0.0124302, -0.272586, -0.230204, 1.02813, -0.730979, 0.16354, 0.0124302, -0.345122, -0.83889, 0.67942, 0.209977, 0.236984, 1.4, 0.760937, 0.134883, -0.0349066, 1.4, -0.816053, -0.0689392, 0.151986], [0.166074, 0.116232, -0.0120766, -0.278452, -0.23233, 1.02848, -0.730355, 0.168819, 0.0120766, -0.350887, -0.838924, 0.677668, 0.211158, 0.242262, 1.4, 0.7711, 0.138128, -0.0349066, 1.4, -0.806766, -0.0714787, 0.155319], [0.166074, 0.116232, -0.0120766, -0.278452, -0.23233, 1.02848, -0.730355, 0.168819, 0.0120766, -0.350887, -0.838924, 0.677668, 0.211158, 0.242262, 1.4, 0.7711, 0.138128, -0.0349066, 1.4, -0.806766, -0.0714787, 0.155319], [0.16634, 0.117991, -0.0118079, -0.282405, -0.233777, 1.02874, -0.729907, 0.172299, 0.0118079, -0.354711, -0.838984, 0.676486, 0.212064, 0.245709, 1.4, 0.77783, 0.140364, -0.0349066, 1.4, -0.800612, -0.0732724, 0.157679], [0.16634, 0.117991, -0.0118079, -0.282405, -0.233777, 1.02874, -0.729907, 0.172299, 0.0118079, -0.354711, -0.838984, 0.676486, 0.212064, 0.245709, 1.4, 0.77783, 0.140364, -0.0349066, 1.4, -0.800612, -0.0732724, 0.157679], [0.166656, 0.12002, -0.0115121, -0.286662, -0.235427, 1.02899, -0.72942, 0.17602, 0.0115121, -0.359204, -0.839054, 0.675093, 0.213057, 0.24967, 1.4, 0.785368, 0.142907, -0.0349066, 1.4, -0.79368, -0.0753171, 0.160342], [0.166656, 0.12002, -0.0115121, -0.286662, -0.235427, 1.02899, -0.72942, 0.17602, 0.0115121, -0.359204, -0.839054, 0.675093, 0.213057, 0.24967, 1.4, 0.785368, 0.142907, -0.0349066, 1.4, -0.79368, -0.0753171, 0.160342], [0.167002, 0.122165, -0.0112018, -0.29099, -0.23712, 1.02923, -0.728901, 0.179757, 0.0112018, -0.363807, -0.839149, 0.673649, 0.214118, 0.253679, 1.4, 0.793026, 0.145541, -0.0349066, 1.4, -0.786605, -0.0774471, 0.163064], [0.167002, 0.122165, -0.0112018, -0.29099, -0.23712, 1.02923, -0.728901, 0.179757, 0.0112018, -0.363807, -0.839149, 0.673649, 0.214118, 0.253679, 1.4, 0.793026, 0.145541, -0.0349066, 1.4, -0.786605, -0.0774471, 0.163064], [0.167369, 0.124399, -0.010881, -0.295385, -0.238845, 1.02944, -0.728349, 0.183513, 0.010881, -0.368498, -0.839267, 0.672156, 0.215235, 0.257728, 1.4, 0.800791, 0.14825, -0.0349066, 1.4, -0.779388, -0.0796413, 0.165846], [0.167369, 0.124399, -0.010881, -0.295385, -0.238845, 1.02944, -0.728349, 0.183513, 0.010881, -0.368498, -0.839267, 0.672156, 0.215235, 0.257728, 1.4, 0.800791, 0.14825, -0.0349066, 1.4, -0.779388, -0.0796413, 0.165846], [0.167754, 0.126708, -0.0105538, -0.299839, -0.240594, 1.02962, -0.727765, 0.187284, 0.0105538, -0.373265, -0.839408, 0.670619, 0.216399, 0.261809, 1.4, 0.808653, 0.151026, -0.0349066, 1.4, -0.772033, -0.0818869, 0.168688], [0.167754, 0.126708, -0.0105538, -0.299839, -0.240594, 1.02962, -0.727765, 0.187284, 0.0105538, -0.373265, -0.839408, 0.670619, 0.216399, 0.261809, 1.4, 0.808653, 0.151026, -0.0349066, 1.4, -0.772033, -0.0818869, 0.168688], [0.168153, 0.129081, -0.0102233, -0.304345, -0.242359, 1.02975, -0.727149, 0.191068, 0.0102233, -0.378099, -0.83957, 0.669038, 0.217603, 0.265917, 1.4, 0.816602, 0.153861, -0.0349066, 1.4, -0.764544, -0.0841749, 0.171591], [0.168153, 0.129081, -0.0102233, -0.304345, -0.242359, 1.02975, -0.727149, 0.191068, 0.0102233, -0.378099, -0.83957, 0.669038, 0.217603, 0.265917, 1.4, 0.816602, 0.153861, -0.0349066, 1.4, -0.764544, -0.0841749, 0.171591], [0.168564, 0.131512, -0.00989198, -0.308899, -0.244137, 1.02983, -0.7265, 0.194861, 0.00989198, -0.382995, -0.839755, 0.667416, 0.218844, 0.270046, 1.4, 0.824632, 0.15675, -0.0349066, 1.4, -0.756924, -0.0864989, 0.174553], [0.168564, 0.131512, -0.00989198, -0.308899, -0.244137, 1.02983, -0.7265, 0.194861, 0.00989198, -0.382995, -0.839755, 0.667416, 0.218844, 0.270046, 1.4, 0.824632, 0.15675, -0.0349066, 1.4, -0.756924, -0.0864989, 0.174553], [0.168986, 0.133996, -0.00956185, -0.313499, -0.245924, 1.02986, -0.725817, 0.198662, 0.00956185, -0.387947, -0.839962, 0.665752, 0.22012, 0.274195, 1.4, 0.832741, 0.159692, -0.0349066, 1.4, -0.749172, -0.0888546, 0.177575], [0.168986, 0.133996, -0.00956185, -0.313499, -0.245924, 1.02986, -0.725817, 0.198662, 0.00956185, -0.387947, -0.839962, 0.665752, 0.22012, 0.274195, 1.4, 0.832741, 0.159692, -0.0349066, 1.4, -0.749172, -0.0888546, 0.177575], [0.169404, 0.136477, -0.00924009, -0.318099, -0.247687, 1.02983, -0.725107, 0.202444, 0.00924009, -0.392865, -0.840186, 0.664075, 0.221404, 0.2783, 1.4, 0.840825, 0.162634, -0.0349066, 1.4, -0.741379, -0.0911929, 0.180625], [0.169404, 0.136477, -0.00924009, -0.318099, -0.247687, 1.02983, -0.725107, 0.202444, 0.00924009, -0.392865, -0.840186, 0.664075, 0.221404, 0.2783, 1.4, 0.840825, 0.162634, -0.0349066, 1.4, -0.741379, -0.0911929, 0.180625], [0.169844, 0.139065, -0.00891653, -0.322795, -0.249492, 1.02974, -0.724357, 0.206268, 0.00891653, -0.397952, -0.840438, 0.66232, 0.222742, 0.282505, 1.4, 0.849119, 0.165684, -0.0349066, 1.4, -0.73333, -0.0936101, 0.183781], [0.169844, 0.139065, -0.00891653, -0.322795, -0.249492, 1.02974, -0.724357, 0.206268, 0.00891653, -0.397952, -0.840438, 0.66232, 0.222742, 0.282505, 1.4, 0.849119, 0.165684, -0.0349066, 1.4, -0.73333, -0.0936101, 0.183781], [0.170281, 0.141651, -0.00860161, -0.327487, -0.251267, 1.0296, -0.723579, 0.210067, 0.00860161, -0.402993, -0.840708, 0.660555, 0.224092, 0.286655, 1.4, 0.857375, 0.168733, -0.0349066, 1.4, -0.725251, -0.0960086, 0.18696], [0.170281, 0.141651, -0.00860161, -0.327487, -0.251267, 1.0296, -0.723579, 0.210067, 0.00860161, -0.402993, -0.840708, 0.660555, 0.224092, 0.286655, 1.4, 0.857375, 0.168733, -0.0349066, 1.4, -0.725251, -0.0960086, 0.18696], [0.170726, 0.144288, -0.00829166, -0.33223, -0.253048, 1.02939, -0.722766, 0.213879, 0.00829166, -0.408107, -0.841001, 0.658741, 0.225473, 0.290838, 1.4, 0.865736, 0.171838, -0.0349066, 1.4, -0.717008, -0.0984362, 0.190212], [0.170726, 0.144288, -0.00829166, -0.33223, -0.253048, 1.02939, -0.722766, 0.213879, 0.00829166, -0.408107, -0.841001, 0.658741, 0.225473, 0.290838, 1.4, 0.865736, 0.171838, -0.0349066, 1.4, -0.717008, -0.0984362, 0.190212], [0.171192, 0.147033, -0.00798143, -0.337064, -0.254862, 1.02914, -0.721913, 0.217726, 0.00798143, -0.413373, -0.841324, 0.656851, 0.226913, 0.295102, 1.4, 0.874289, 0.17505, -0.0349066, 1.4, -0.70852, -0.100939, 0.193546], [0.171192, 0.147033, -0.00798143, -0.337064, -0.254862, 1.02914, -0.721913, 0.217726, 0.00798143, -0.413373, -0.841324, 0.656851, 0.226913, 0.295102, 1.4, 0.874289, 0.17505, -0.0349066, 1.4, -0.70852, -0.100939, 0.193546], [0.171654, 0.149771, -0.00768078, -0.341894, -0.256642, 1.02881, -0.721032, 0.221545, 0.00768078, -0.418587, -0.841665, 0.654954, 0.228364, 0.299308, 1.4, 0.882803, 0.178258, -0.0349066, 1.4, -0.700002, -0.103418, 0.196879], [0.171654, 0.149771, -0.00768078, -0.341894, -0.256642, 1.02881, -0.721032, 0.221545, 0.00768078, -0.418587, -0.841665, 0.654954, 0.228364, 0.299308, 1.4, 0.882803, 0.178258, -0.0349066, 1.4, -0.700002, -0.103418, 0.196879], [0.172121, 0.152556, -0.0073863, -0.346771, -0.258422, 1.02842, -0.720115, 0.225374, 0.0073863, -0.423871, -0.842028, 0.653009, 0.229844, 0.303542, 1.4, 0.891421, 0.181521, -0.0349066, 1.4, -0.691313, -0.10592, 0.200212], [0.172121, 0.152556, -0.0073863, -0.346771, -0.258422, 1.02842, -0.720115, 0.225374, 0.0073863, -0.423871, -0.842028, 0.653009, 0.229844, 0.303542, 1.4, 0.891421, 0.181521, -0.0349066, 1.4, -0.691313, -0.10592, 0.200212], [0.172596, 0.155393, -0.00709697, -0.351697, -0.260201, 1.02797, -0.719161, 0.22921, 0.00709697, -0.429219, -0.842413, 0.651016, 0.231356, 0.307798, 1.4, 0.900138, 0.18484, -0.0349066, 1.4, -0.682459, -0.108448, 0.203546], [0.172596, 0.155393, -0.00709697, -0.351697, -0.260201, 1.02797, -0.719161, 0.22921, 0.00709697, -0.429219, -0.842413, 0.651016, 0.231356, 0.307798, 1.4, 0.900138, 0.18484, -0.0349066, 1.4, -0.682459, -0.108448, 0.203546], [0.17309, 0.158336, -0.00680871, -0.356715, -0.262004, 1.02745, -0.718163, 0.233076, 0.00680871, -0.434713, -0.842829, 0.648946, 0.232929, 0.312128, 1.4, 0.909047, 0.188174, -0.0349066, 1.4, -0.67335, -0.111044, 0.206879], [0.17309, 0.158336, -0.00680871, -0.356715, -0.262004, 1.02745, -0.718163, 0.233076, 0.00680871, -0.434713, -0.842829, 0.648946, 0.232929, 0.312128, 1.4, 0.909047, 0.188174, -0.0349066, 1.4, -0.67335, -0.111044, 0.206879], [0.173578, 0.161267, -0.00652942, -0.361728, -0.263768, 1.02686, -0.717137, 0.236914, 0.00652942, -0.440158, -0.843259, 0.646869, 0.234509, 0.316402, 1.4, 0.917928, 0.191507, -0.0349066, 1.4, -0.664195, -0.113612, 0.210212], [0.173578, 0.161267, -0.00652942, -0.361728, -0.263768, 1.02686, -0.717137, 0.236914, 0.00652942, -0.440158, -0.843259, 0.646869, 0.234509, 0.316402, 1.4, 0.917928, 0.191507, -0.0349066, 1.4, -0.664195, -0.113612, 0.210212], [0.174081, 0.1643, -0.00625236, -0.366835, -0.265554, 1.0262, -0.716064, 0.240785, 0.00625236, -0.445757, -0.843718, 0.644712, 0.236144, 0.320756, 1.4, 0.927016, 0.19484, -0.0349066, 1.4, -0.654761, -0.116243, 0.213546], [0.174081, 0.1643, -0.00625236, -0.366835, -0.265554, 1.0262, -0.716064, 0.240785, 0.00625236, -0.445757, -0.843718, 0.644712, 0.236144, 0.320756, 1.4, 0.927016, 0.19484, -0.0349066, 1.4, -0.654761, -0.116243, 0.213546], [0.174578, 0.167322, -0.00598329, -0.371938, -0.267302, 1.02546, -0.714962, 0.244629, 0.00598329, -0.451316, -0.844189, 0.642544, 0.237785, 0.325059, 1.4, 0.936089, 0.198174, -0.0349066, 1.4, -0.645267, -0.118844, 0.216879], [0.174578, 0.167322, -0.00598329, -0.371938, -0.267302, 1.02546, -0.714962, 0.244629, 0.00598329, -0.451316, -0.844189, 0.642544, 0.237785, 0.325059, 1.4, 0.936089, 0.198174, -0.0349066, 1.4, -0.645267, -0.118844, 0.216879], [0.175089, 0.170448, -0.00571579, -0.377139, -0.269069, 1.02465, -0.71381, 0.248505, 0.00571579, -0.457032, -0.844687, 0.640294, 0.239481, 0.329443, 1.4, 0.94538, 0.201507, -0.0349066, 1.4, -0.635479, -0.121509, 0.220212], [0.175089, 0.170448, -0.00571579, -0.377139, -0.269069, 1.02465, -0.71381, 0.248505, 0.00571579, -0.457032, -0.844687, 0.640294, 0.239481, 0.329443, 1.4, 0.94538, 0.201507, -0.0349066, 1.4, -0.635479, -0.121509, 0.220212], [0.175137, 0.171155, -0.00559347, -0.379435, -0.269589, 1.02388, -0.713077, 0.250889, 0.00559347, -0.458442, -0.844853, 0.639651, 0.240088, 0.330927, 1.4, 0.949366, 0.202679, -0.0349066, 1.4, -0.631039, -0.12219, 0.222052], [0.175137, 0.171155, -0.00559347, -0.379435, -0.269589, 1.02388, -0.713077, 0.250889, 0.00559347, -0.458442, -0.844853, 0.639651, 0.240088, 0.330927, 1.4, 0.949366, 0.202679, -0.0349066, 1.4, -0.631039, -0.12219, 0.222052], [0.175108, 0.171212, -0.00556409, -0.379435, -0.269707, 1.02354, -0.71279, 0.251809, 0.00556409, -0.458532, -0.844881, 0.639524, 0.240219, 0.331253, 1.4, 0.950607, 0.202943, -0.0349066, 1.4, -0.629596, -0.122285, 0.222663], [0.190006, 0.212879, -0.00337049, -0.379435, -0.298551, 1.03927, -0.716371, 0.25715, 0.00337049, -0.462882, -0.850121, 0.607288, 0.263068, 0.339614, 1.4, 0.992273, 0.206276, -0.0349066, 1.4, -0.587929, -0.125618, 0.225997], [0.190006, 0.212879, -0.00337049, -0.379435, -0.298551, 1.03927, -0.716371, 0.25715, 0.00337049, -0.462882, -0.850121, 0.607288, 0.263068, 0.339614, 1.4, 0.992273, 0.206276, -0.0349066, 1.4, -0.587929, -0.125618, 0.225997], [0.190006, 0.212879, -0.00337049, -0.379435, -0.298551, 1.03927, -0.716371, 0.25715, 0.00337049, -0.462882, -0.850121, 0.607288, 0.263068, 0.339614, 1.4, 0.992273, 0.206276, -0.0349066, 1.4, -0.587929, -0.125618, 0.225997], [0.196969, 0.238701, -0.00215585, -0.379435, -0.311409, 1.04463, -0.717582, 0.260783, 0.00215585, -0.462116, -0.852015, 0.593185, 0.271939, 0.342471, 1.4, 1.02581, 0.20961, -0.0349066, 1.4, -0.556414, -0.128951, 0.22933], [0.196969, 0.238701, -0.00215585, -0.379435, -0.311409, 1.04463, -0.717582, 0.260783, 0.00215585, -0.462116, -0.852015, 0.593185, 0.271939, 0.342471, 1.4, 1.02581, 0.20961, -0.0349066, 1.4, -0.556414, -0.128951, 0.22933], [0.196969, 0.238701, -0.00215585, -0.379435, -0.311409, 1.04463, -0.717582, 0.260783, 0.00215585, -0.462116, -0.852015, 0.593185, 0.271939, 0.342471, 1.4, 1.02581, 0.20961, -0.0349066, 1.4, -0.556414, -0.128951, 0.22933], [0.204869, 0.26604, -0.000895397, -0.379435, -0.324928, 1.05007, -0.718764, 0.26438, 0.000895397, -0.461336, -0.854198, 0.578427, 0.281263, 0.345284, 1.4, 1.06124, 0.212943, -0.0349066, 1.4, -0.522887, -0.132285, 0.232663], [0.204869, 0.26604, -0.000895397, -0.379435, -0.324928, 1.05007, -0.718764, 0.26438, 0.000895397, -0.461336, -0.854198, 0.578427, 0.281263, 0.345284, 1.4, 1.06124, 0.212943, -0.0349066, 1.4, -0.522887, -0.132285, 0.232663], [0.204869, 0.26604, -0.000895397, -0.379435, -0.324928, 1.05007, -0.718764, 0.26438, 0.000895397, -0.461336, -0.854198, 0.578427, 0.281263, 0.345284, 1.4, 1.06124, 0.212943, -0.0349066, 1.4, -0.522887, -0.132285, 0.232663], [0.21399, 0.295493, 0.000442505, -0.379435, -0.339396, 1.05571, -0.719937, 0.267955, -0.000442505, -0.460554, -0.856743, 0.562741, 0.291243, 0.348074, 1.4, 1.09929, 0.216276, -0.0349066, 1.4, -0.486674, -0.135618, 0.235997], [0.21399, 0.295493, 0.000442505, -0.379435, -0.339396, 1.05571, -0.719937, 0.267955, -0.000442505, -0.460554, -0.856743, 0.562741, 0.291243, 0.348074, 1.4, 1.09929, 0.216276, -0.0349066, 1.4, -0.486674, -0.135618, 0.235997], [0.21399, 0.295493, 0.000442505, -0.379435, -0.339396, 1.05571, -0.719937, 0.267955, -0.000442505, -0.460554, -0.856743, 0.562741, 0.291243, 0.348074, 1.4, 1.09929, 0.216276, -0.0349066, 1.4, -0.486674, -0.135618, 0.235997], [0.224636, 0.327534, 0.0018762, -0.379435, -0.355045, 1.06164, -0.721113, 0.271505, -0.0018762, -0.459768, -0.85973, 0.54592, 0.302033, 0.350845, 1.4, 1.14061, 0.21961, -0.0349066, 1.4, -0.447168, -0.138951, 0.23933], [0.224636, 0.327534, 0.0018762, -0.379435, -0.355045, 1.06164, -0.721113, 0.271505, -0.0018762, -0.459768, -0.85973, 0.54592, 0.302033, 0.350845, 1.4, 1.14061, 0.21961, -0.0349066, 1.4, -0.447168, -0.138951, 0.23933], [0.224636, 0.327534, 0.0018762, -0.379435, -0.355045, 1.06164, -0.721113, 0.271505, -0.0018762, -0.459768, -0.85973, 0.54592, 0.302033, 0.350845, 1.4, 1.14061, 0.21961, -0.0349066, 1.4, -0.447168, -0.138951, 0.23933], [0.2375, 0.363505, 0.0034553, -0.379435, -0.372522, 1.06811, -0.722332, 0.275106, -0.0034553, -0.45895, -0.863355, 0.527325, 0.314091, 0.35364, 1.4, 1.18228, 0.222943, -0.0349066, 1.4, -0.405502, -0.142285, 0.242663], [0.2375, 0.363505, 0.0034553, -0.379435, -0.372522, 1.06811, -0.722332, 0.275106, -0.0034553, -0.45895, -0.863355, 0.527325, 0.314091, 0.35364, 1.4, 1.18228, 0.222943, -0.0349066, 1.4, -0.405502, -0.142285, 0.242663], [0.2375, 0.363505, 0.0034553, -0.379435, -0.372522, 1.06811, -0.722332, 0.275106, -0.0034553, -0.45895, -0.863355, 0.527325, 0.314091, 0.35364, 1.4, 1.18228, 0.222943, -0.0349066, 1.4, -0.405502, -0.142285, 0.242663], [0.254445, 0.405171, 0.0053252, -0.379435, -0.393686, 1.07577, -0.723694, 0.278952, -0.0053252, -0.45809, -0.868113, 0.505123, 0.32863, 0.356652, 1.4, 1.22394, 0.226276, -0.0349066, 1.4, -0.363835, -0.145618, 0.245997], [0.254445, 0.405171, 0.0053252, -0.379435, -0.393686, 1.07577, -0.723694, 0.278952, -0.0053252, -0.45809, -0.868113, 0.505123, 0.32863, 0.356652, 1.4, 1.22394, 0.226276, -0.0349066, 1.4, -0.363835, -0.145618, 0.245997], [0.254445, 0.405171, 0.0053252, -0.379435, -0.393686, 1.07577, -0.723694, 0.278952, -0.0053252, -0.45809, -0.868113, 0.505123, 0.32863, 0.356652, 1.4, 1.22394, 0.226276, -0.0349066, 1.4, -0.363835, -0.145618, 0.245997], [0.280617, 0.446838, 0.00785336, -0.379435, -0.423347, 1.08676, -0.725327, 0.283182, -0.00785336, -0.457166, -0.875387, 0.474933, 0.349091, 0.360011, 1.4, 1.26561, 0.22961, -0.0349066, 1.4, -0.322168, -0.148951, 0.24933], [0.280617, 0.446838, 0.00785336, -0.379435, -0.423347, 1.08676, -0.725327, 0.283182, -0.00785336, -0.457166, -0.875387, 0.474933, 0.349091, 0.360011, 1.4, 1.26561, 0.22961, -0.0349066, 1.4, -0.322168, -0.148951, 0.24933], [0.280659, 0.44702, 0.00604248, -0.378637, -0.425361, 1.08697, -0.721198, 0.284353, -0.00604248, -0.45596, -0.874689, 0.475354, 0.347508, 0.361247, 1.3998, 1.26554, 0.229715, -0.0350057, 1.3998, -0.322333, -0.149052, 0.249257], [0.26981, 0.422797, 0.00510413, -0.356535, -0.42234, 1.08494, -0.716684, 0.279164, -0.00510413, -0.429666, -0.863497, 0.48692, 0.328877, 0.352147, 1.36358, 1.23323, 0.226381, -0.038339, 1.36354, -0.355243, -0.145719, 0.245924], [0.263242, 0.408075, 0.00448053, -0.342917, -0.421321, 1.08403, -0.712754, 0.276367, -0.00448053, -0.412889, -0.855595, 0.494494, 0.316693, 0.346203, 1.34165, 1.21331, 0.223048, -0.0416724, 1.34159, -0.376403, -0.142385, 0.242591], [0.256935, 0.393705, 0.00386282, -0.329545, -0.420268, 1.08326, -0.70898, 0.273655, -0.00386282, -0.396524, -0.847639, 0.501941, 0.304597, 0.340508, 1.32046, 1.19419, 0.219715, -0.0450057, 1.32038, -0.397333, -0.139052, 0.239257], [0.250865, 0.379647, 0.00325505, -0.316389, -0.419179, 1.08263, -0.705359, 0.271013, -0.00325505, -0.380524, -0.839624, 0.509278, 0.29257, 0.335033, 1.29994, 1.17579, 0.216381, -0.048339, 1.29984, -0.41806, -0.135719, 0.235924], [0.245034, 0.365915, 0.00264613, -0.30346, -0.418061, 1.08213, -0.701882, 0.268443, -0.00264613, -0.364903, -0.831577, 0.516489, 0.280633, 0.329781, 1.28008, 1.15812, 0.213048, -0.0516724, 1.27997, -0.43853, -0.132385, 0.232591], [0.239412, 0.352453, 0.00204459, -0.290717, -0.416909, 1.08174, -0.698548, 0.265926, -0.00204459, -0.3496, -0.82348, 0.5236, 0.268757, 0.324714, 1.2608, 1.14109, 0.209715, -0.0550057, 1.26068, -0.458798, -0.129052, 0.229257], [0.233995, 0.339263, 0.00144467, -0.278164, -0.415726, 1.08146, -0.695349, 0.26346, -0.00144467, -0.334618, -0.815347, 0.530603, 0.256951, 0.31983, 1.24207, 1.1247, 0.206381, -0.058339, 1.24195, -0.478832, -0.125719, 0.225924], [0.228775, 0.326339, 0.000837594, -0.265798, -0.414513, 1.08129, -0.692282, 0.261045, -0.000837594, -0.31995, -0.807193, 0.537494, 0.245222, 0.315122, 1.22389, 1.10892, 0.203048, -0.0616724, 1.22376, -0.498614, -0.122385, 0.222591], [0.223735, 0.313647, 0.000229047, -0.253596, -0.413266, 1.08122, -0.689342, 0.258668, -0.000229047, -0.305563, -0.799007, 0.544287, 0.233552, 0.310568, 1.20618, 1.09371, 0.199715, -0.0650057, 1.20606, -0.518171, -0.119052, 0.219257], [0.218865, 0.301181, -0.000385279, -0.241556, -0.411986, 1.08124, -0.686525, 0.256327, 0.000385279, -0.291449, -0.790797, 0.55098, 0.221946, 0.306163, 1.18894, 1.07906, 0.196381, -0.068339, 1.18882, -0.537485, -0.115719, 0.215924], [0.214161, 0.288936, -0.00101445, -0.229676, -0.410671, 1.08134, -0.683829, 0.254021, 0.00101445, -0.277606, -0.782575, 0.55757, 0.21041, 0.301902, 1.17214, 1.06494, 0.193048, -0.0716724, 1.17203, -0.556545, -0.112385, 0.212591], [0.209608, 0.276891, -0.00165821, -0.217944, -0.409316, 1.08154, -0.681249, 0.251745, 0.00165821, -0.264012, -0.774337, 0.564062, 0.198934, 0.297771, 1.15575, 1.05133, 0.189715, -0.0750057, 1.15565, -0.575357, -0.109052, 0.209257], [0.2052, 0.265035, -0.00232069, -0.206355, -0.40792, 1.08181, -0.678782, 0.249494, 0.00232069, -0.25066, -0.766088, 0.570456, 0.187521, 0.293764, 1.13975, 1.03821, 0.186381, -0.078339, 1.13965, -0.593914, -0.105719, 0.205924], [0.200928, 0.253362, -0.00301225, -0.194906, -0.406476, 1.08216, -0.676428, 0.247268, 0.00301225, -0.237543, -0.757838, 0.57675, 0.176174, 0.289877, 1.12413, 1.02557, 0.183048, -0.0816724, 1.12404, -0.612209, -0.102385, 0.202591], [0.196785, 0.241858, -0.00373581, -0.183588, -0.404981, 1.08258, -0.674183, 0.245064, 0.00373581, -0.224649, -0.749586, 0.582946, 0.164891, 0.2861, 1.10884, 1.01339, 0.179715, -0.0850057, 1.10877, -0.630241, -0.0990522, 0.199257], [0.192764, 0.230517, -0.00450582, -0.172399, -0.403426, 1.08308, -0.672047, 0.242879, 0.00450582, -0.21197, -0.741349, 0.589039, 0.153677, 0.282429, 1.0939, 1.00166, 0.176381, -0.088339, 1.09384, -0.648003, -0.0957188, 0.195924], [0.188856, 0.219325, -0.00532632, -0.16133, -0.401805, 1.08365, -0.67002, 0.24071, 0.00532632, -0.199494, -0.733123, 0.595031, 0.142529, 0.278857, 1.07926, 0.990356, 0.173048, -0.0916724, 1.07922, -0.665497, -0.0923855, 0.192591], [0.185054, 0.208275, -0.00621114, -0.150375, -0.400108, 1.08428, -0.668101, 0.238556, 0.00621114, -0.187213, -0.724922, 0.600917, 0.131452, 0.275378, 1.06491, 0.979473, 0.169715, -0.094882, 1.06489, -0.682717, -0.0890522, 0.189257], [0.181357, 0.197366, -0.00718237, -0.139528, -0.398324, 1.08499, -0.666294, 0.236416, 0.00718237, -0.175118, -0.716766, 0.606691, 0.120455, 0.271988, 1.05086, 0.968996, 0.166381, -0.0978343, 1.05086, -0.699659, -0.0857188, 0.185924], [0.177755, 0.186587, -0.00825347, -0.128779, -0.396443, 1.08577, -0.6646, 0.234284, 0.00825347, -0.163196, -0.708664, 0.612348, 0.109541, 0.268679, 1.03707, 0.958914, 0.163048, -0.100542, 1.03709, -0.716325, -0.0823855, 0.182591], [0.17425, 0.175945, -0.00945699, -0.118123, -0.39445, 1.08662, -0.663024, 0.232162, 0.00945699, -0.151437, -0.70065, 0.617874, 0.0987255, 0.265449, 1.02356, 0.949216, 0.159715, -0.103016, 1.0236, -0.732709, -0.0790522, 0.179257], [0.170841, 0.165447, -0.0108235, -0.107547, -0.392334, 1.08755, -0.661571, 0.230045, 0.0108235, -0.13983, -0.692755, 0.623256, 0.0880215, 0.262291, 1.01032, 0.93989, 0.156381, -0.105269, 1.01039, -0.748813, -0.0757188, 0.175927], [0.167533, 0.155115, -0.0124018, -0.0970421, -0.390084, 1.08858, -0.660247, 0.227934, 0.0124018, -0.128362, -0.685039, 0.62847, 0.0774559, 0.259202, 0.997368, 0.930921, 0.153048, -0.107313, 0.997461, -0.764639, -0.0723855, 0.172607], [0.164342, 0.144993, -0.0142544, -0.0865967, -0.387694, 1.0897, -0.659061, 0.225825, 0.0142544, -0.117023, -0.677585, 0.633481, 0.0670658, 0.256179, 0.984746, 0.922289, 0.149715, -0.109162, 0.984866, -0.780194, -0.0690522, 0.169297], [0.161296, 0.135163, -0.0164685, -0.076201, -0.385175, 1.09093, -0.658018, 0.223722, 0.0164685, -0.105805, -0.670524, 0.638239, 0.056909, 0.253222, 0.972529, 0.913964, 0.146381, -0.110836, 0.972676, -0.795501, -0.0657188, 0.165992], [0.158451, 0.125775, -0.0191625, -0.065855, -0.382568, 1.09229, -0.657119, 0.22163, 0.0191625, -0.0947134, -0.664065, 0.642668, 0.0470748, 0.250339, 0.96086, 0.905891, 0.143048, -0.112361, 0.961035, -0.810606, -0.0623855, 0.162675], [0.155914, 0.11711, -0.0224807, -0.0556178, -0.38, 1.09378, -0.656325, 0.219584, 0.0224807, -0.0838349, -0.65854, 0.646651, 0.0377175, 0.247576, 0.950018, 0.898012, 0.139715, -0.113774, 0.950221, -0.825539, -0.0590522, 0.159342], [0.153863, 0.109837, -0.0262625, -0.0462221, -0.377913, 1.09516, -0.655253, 0.217928, 0.0262625, -0.0742171, -0.654279, 0.649911, 0.0293025, 0.245481, 0.940856, 0.891028, 0.136381, -0.114963, 0.941082, -0.838932, -0.0561013, 0.156008], [0.152326, 0.104362, -0.0298469, -0.038619, -0.376698, 1.0961, -0.653383, 0.217074, 0.0298469, -0.0671325, -0.650976, 0.65234, 0.0222615, 0.244685, 0.934027, 0.886045, 0.133048, -0.115737, 0.934272, -0.848705, -0.0538368, 0.152675], [0.151244, 0.100409, -0.0330699, -0.0323901, -0.37622, 1.09686, -0.650886, 0.216764, 0.0330699, -0.0616889, -0.648308, 0.654258, 0.0164337, 0.24463, 0.929091, 0.882391, 0.129715, -0.116266, 0.929349, -0.855987, -0.0522738, 0.149342], [0.14915, 0.0923077, -0.0377026, -0.0214196, -0.373689, 1.09878, -0.650799, 0.214485, 0.0377026, -0.0504419, -0.644164, 0.65767, 0.00698181, 0.241847, 0.918837, 0.874188, 0.126381, -0.117405, 0.919125, -0.87243, -0.0494776, 0.146008], [0.147439, 0.0853514, -0.0420232, -0.011308, -0.371703, 1.10066, -0.650318, 0.212465, 0.0420232, -0.0400518, -0.640461, 0.660769, -0.00157641, 0.239359, 0.909966, 0.866756, 0.123048, -0.118385, 0.910281, -0.887447, -0.0473221, 0.142675], [0.145835, 0.0786381, -0.0463204, -0.0013433, -0.369883, 1.10251, -0.649795, 0.210486, 0.0463204, -0.0299087, -0.636881, 0.663755, -0.0100348, 0.236983, 0.901413, 0.859557, 0.119715, -0.119263, 0.901754, -0.902185, -0.0453262, 0.139342], [0.144328, 0.072119, -0.0505875, 0.00852914, -0.368232, 1.10433, -0.649251, 0.208522, 0.0505875, -0.019932, -0.633395, 0.666666, -0.018454, 0.234675, 0.893106, 0.852494, 0.116381, -0.120059, 0.893473, -0.916818, -0.0434872, 0.136008], [0.150913, 0.0808816, -0.0504742, 0.0139581, -0.386896, 1.1031, -0.64306, 0.207014, 0.0504742, -0.0111628, -0.642923, 0.673078, -0.0282474, 0.230841, 0.896453, 0.82454, 0.116005, -0.123393, 0.896803, -0.958484, -0.0468205, 0.132675], [0.154742, 0.0866515, -0.050852, 0.0167087, -0.39953, 1.10146, -0.636882, 0.207376, 0.050852, -0.00790332, -0.648558, 0.677084, -0.0352574, 0.230669, 0.899046, 0.808541, 0.114308, -0.126496, 0.899384, -0.986604, -0.0501538, 0.129342], [0.158428, 0.0923432, -0.0506166, 0.0193323, -0.412557, 1.09973, -0.630569, 0.207749, 0.0506166, -0.00473468, -0.65368, 0.681427, -0.042589, 0.230505, 0.901495, 0.792552, 0.112473, -0.129446, 0.901821, -1.01507, -0.0534872, 0.126008], [0.161966, 0.0979889, -0.0497819, 0.0219273, -0.425955, 1.09797, -0.624151, 0.208098, 0.0497819, -0.00156122, -0.658227, 0.686016, -0.0502025, 0.230315, 0.903874, 0.776732, 0.110589, -0.132227, 0.904187, -1.04355, -0.0568205, 0.122675], [0.165348, 0.103598, -0.0483572, 0.0245927, -0.439687, 1.09619, -0.617652, 0.208386, 0.0483572, 0.00171127, -0.662115, 0.690754, -0.058061, 0.230066, 0.906241, 0.761263, 0.10874, -0.134821, 0.906541, -1.0717, -0.0601538, 0.119342], [0.168553, 0.109144, -0.0463594, 0.0274349, -0.453681, 1.09441, -0.611104, 0.208576, 0.0463594, 0.00518189, -0.665234, 0.695538, -0.0661293, 0.229724, 0.908621, 0.746345, 0.107006, -0.137215, 0.908909, -1.0991, -0.0634872, 0.116008], [0.171547, 0.114549, -0.0438287, 0.030569, -0.467811, 1.09267, -0.604553, 0.208627, 0.0438287, 0.00895549, -0.667458, 0.700264, -0.0743756, 0.229253, 0.910992, 0.73219, 0.105446, -0.139394, 0.911268, -1.12533, -0.0668205, 0.112675], [0.174278, 0.119672, -0.0408509, 0.0341171, -0.481868, 1.09102, -0.598073, 0.208499, 0.0408509, 0.0131399, -0.668658, 0.704838, -0.0827727, 0.228621, 0.913261, 0.718995, 0.104084, -0.141343, 0.913525, -1.14999, -0.0701538, 0.109342], [0.176685, 0.124324, -0.0375655, 0.0381881, -0.495578, 1.08952, -0.591766, 0.20816, 0.0375655, 0.0178273, -0.668742, 0.709187, -0.0912995, 0.2278, 0.915272, 0.706898, 0.102896, -0.143055, 0.915527, -1.17281, -0.0734872, 0.106008], [0.178709, 0.128304, -0.0341599, 0.0428554, -0.508637, 1.08825, -0.585747, 0.207591, 0.0341599, 0.023074, -0.667691, 0.713276, -0.0999404, 0.226779, 0.916835, 0.69594, 0.101806, -0.144533, 0.917081, -1.1937, -0.0768205, 0.102675], [0.180319, 0.131461, -0.0308297, 0.0481321, -0.520792, 1.08727, -0.580116, 0.206795, 0.0308297, 0.0288799, -0.66558, 0.717111, -0.108682, 0.225568, 0.917781, 0.686051, 0.100712, -0.14579, 0.918023, -1.21281, -0.0801538, 0.0993417], [0.181516, 0.133738, -0.027734, 0.0539703, -0.531903, 1.08664, -0.574931, 0.205795, 0.027734, 0.0351902, -0.662556, 0.720725, -0.11751, 0.224193, 0.918021, 0.677078, 0.0995159, -0.146851, 0.918262, -1.23042, -0.0834679, 0.0960083], [0.182338, 0.135175, -0.0249625, 0.0602782, -0.541963, 1.08634, -0.570194, 0.204626, 0.0249625, 0.0419126, -0.658803, 0.724161, -0.126408, 0.222688, 0.917559, 0.668843, 0.0981517, -0.147748, 0.917801, -1.24685, -0.085902, 0.0927244], [0.18284, 0.135873, -0.022543, 0.0669506, -0.551057, 1.08635, -0.565871, 0.203327, 0.022543, 0.0489456, -0.654493, 0.72746, -0.13536, 0.221089, 0.916462, 0.661179, 0.0965887, -0.148508, 0.916709, -1.26239, -0.0875945, 0.0896922], [0.18308, 0.135952, -0.0204629, 0.0738891, -0.559309, 1.08663, -0.561908, 0.201929, 0.0204629, 0.0561962, -0.649765, 0.730651, -0.14435, 0.219429, 0.914828, 0.653962, 0.0948228, -0.149155, 0.915083, -1.27729, -0.0886822, 0.0868649], [0.183114, 0.135533, -0.0186842, 0.0810091, -0.566861, 1.08713, -0.558245, 0.200463, 0.0186842, 0.0635852, -0.644727, 0.733753, -0.153366, 0.217731, 0.912765, 0.647097, 0.0928667, -0.149709, 0.91303, -1.29167, -0.0892875, 0.0841527], [0.182987, 0.134719, -0.0171653, 0.0882441, -0.573837, 1.08781, -0.554827, 0.198948, 0.0171653, 0.0710515, -0.639456, 0.73678, -0.162397, 0.216016, 0.910366, 0.640524, 0.090739, -0.150185, 0.910643, -1.30564, -0.0895097, 0.0814919], [0.182737, 0.133597, -0.0158658, 0.0955429, -0.580342, 1.08863, -0.551608, 0.197402, 0.0158658, 0.0785479, -0.634008, 0.739738, -0.171432, 0.214296, 0.907711, 0.634198, 0.0884597, -0.150593, 0.908001, -1.31927, -0.0894274, 0.0788409], [0.182448, 0.132392, -0.0147559, 0.102752, -0.586516, 1.08953, -0.548402, 0.195896, 0.0147559, 0.085931, -0.628484, 0.7426, -0.180323, 0.212635, 0.905053, 0.628194, 0.0860537, -0.150949, 0.905357, -1.32554, -0.0892185, 0.0761765], [0.182136, 0.131138, -0.0138036, 0.109854, -0.592426, 1.09049, -0.545196, 0.194438, 0.0138036, 0.0931874, -0.622908, 0.745374, -0.189083, 0.211039, 0.902418, 0.622477, 0.0835255, -0.151258, 0.902736, -1.3256, -0.0889578, 0.0734739], [0.181771, 0.12974, -0.0129732, 0.116926, -0.598086, 1.09149, -0.54209, 0.192986, 0.0129732, 0.100391, -0.617247, 0.748091, -0.197836, 0.209468, 0.899682, 0.616942, 0.080899, -0.151521, 0.900015, -1.32566, -0.088596, 0.0707319], [0.181366, 0.128228, -0.0122466, 0.123952, -0.603538, 1.09255, -0.539064, 0.191544, 0.0122466, 0.107528, -0.611517, 0.750751, -0.206577, 0.207926, 0.896875, 0.61158, 0.0781864, -0.151741, 0.897224, -1.32572, -0.0881568, 0.0679456], [0.180931, 0.12663, -0.011606, 0.130918, -0.608819, 1.09363, -0.536101, 0.190117, 0.011606, 0.114587, -0.605728, 0.753354, -0.215303, 0.206416, 0.894024, 0.606383, 0.0753988, -0.151922, 0.894389, -1.32578, -0.0876595, 0.0651135], [0.180475, 0.124962, -0.0110415, 0.137815, -0.613953, 1.09474, -0.533191, 0.188708, 0.0110415, 0.12156, -0.599891, 0.755901, -0.224013, 0.20494, 0.891144, 0.601342, 0.0725447, -0.152067, 0.891526, -1.32585, -0.0871179, 0.0622348], [0.180004, 0.123243, -0.0105414, 0.144633, -0.618965, 1.09585, -0.530321, 0.18732, 0.0105414, 0.128439, -0.594013, 0.758391, -0.232703, 0.203498, 0.888253, 0.596454, 0.0696321, -0.152178, 0.888652, -1.32591, -0.0865438, 0.0593105], [0.180004, 0.123243, -0.0105414, 0.144633, -0.618965, 1.09585, -0.530321, 0.18732, 0.0105414, 0.128439, -0.594013, 0.758391, -0.232703, 0.203498, 0.888253, 0.596454, 0.0696321, -0.152178, 0.888652, -1.32591, -0.0865438, 0.0593105], [0.180004, 0.123243, -0.0105414, 0.144633, -0.618965, 1.09585, -0.530321, 0.18732, 0.0105414, 0.128439, -0.594013, 0.758391, -0.232703, 0.203498, 0.888253, 0.596454, 0.0696321, -0.152178, 0.888652, -1.32591, -0.0865438, 0.0593105], [0.180004, 0.123243, -0.0105543, 0.144424, -0.619017, 1.09598, -0.530418, 0.187159, 0.0105543, 0.128287, -0.593965, 0.758278, -0.2327, 0.203279, 0.888253, 0.596454, 0.0696322, -0.152178, 0.888652, -1.32591, -0.0865439, 0.0593106], [0.17981, 0.123271, -0.00980631, 0.128306, -0.620361, 1.09326, -0.528653, 0.191257, 0.00980631, 0.117157, -0.592613, 0.753965, -0.231097, 0.203438, 0.890261, 0.605177, 0.0729655, -0.151562, 0.890645, -1.30737, -0.0854228, 0.0626439], [0.17981, 0.123271, -0.00980631, 0.128306, -0.620361, 1.09326, -0.528653, 0.191257, 0.00980631, 0.117157, -0.592613, 0.753965, -0.231097, 0.203438, 0.890261, 0.605177, 0.0729655, -0.151562, 0.890645, -1.30737, -0.0854228, 0.0626439], [0.17981, 0.123271, -0.00980631, 0.128306, -0.620361, 1.09326, -0.528653, 0.191257, 0.00980631, 0.117157, -0.592613, 0.753965, -0.231097, 0.203438, 0.890261, 0.605177, 0.0729655, -0.151562, 0.890645, -1.30737, -0.0854228, 0.0626439], [0.17981, 0.123271, -0.00980631, 0.128306, -0.620361, 1.09326, -0.528653, 0.191257, 0.00980631, 0.117157, -0.592613, 0.753965, -0.231097, 0.203438, 0.890261, 0.605177, 0.0729655, -0.151562, 0.890645, -1.30737, -0.0854228, 0.0626439], [0.179805, 0.124149, -0.00825173, 0.107519, -0.621833, 1.08761, -0.524728, 0.197674, 0.00825173, 0.0990913, -0.591607, 0.748376, -0.22748, 0.207123, 0.894241, 0.618736, 0.0762988, -0.150741, 0.894599, -1.27805, -0.0839876, 0.0659772], [0.179805, 0.124149, -0.00825173, 0.107519, -0.621833, 1.08761, -0.524728, 0.197674, 0.00825173, 0.0990913, -0.591607, 0.748376, -0.22748, 0.207123, 0.894241, 0.618736, 0.0762988, -0.150741, 0.894599, -1.27805, -0.0839876, 0.0659772], [0.179805, 0.124149, -0.00825173, 0.107519, -0.621833, 1.08761, -0.524728, 0.197674, 0.00825173, 0.0990913, -0.591607, 0.748376, -0.22748, 0.207123, 0.894241, 0.618736, 0.0762988, -0.150741, 0.894599, -1.27805, -0.0839876, 0.0659772], [0.179805, 0.124149, -0.00825173, 0.107519, -0.621833, 1.08761, -0.524728, 0.197674, 0.00825173, 0.0990913, -0.591607, 0.748376, -0.22748, 0.207123, 0.894241, 0.618736, 0.0762988, -0.150741, 0.894599, -1.27805, -0.0839876, 0.0659772], [0.179774, 0.124987, -0.0067899, 0.0867281, -0.622958, 1.0816, -0.520694, 0.203996, 0.0067899, 0.080918, -0.59068, 0.742692, -0.223737, 0.210824, 0.898198, 0.63244, 0.0796322, -0.149987, 0.898531, -1.24818, -0.0821361, 0.0693106], [0.179774, 0.124987, -0.0067899, 0.0867281, -0.622958, 1.0816, -0.520694, 0.203996, 0.0067899, 0.080918, -0.59068, 0.742692, -0.223737, 0.210824, 0.898198, 0.63244, 0.0796322, -0.149987, 0.898531, -1.24818, -0.0821361, 0.0693106], [0.179774, 0.124987, -0.0067899, 0.0867281, -0.622958, 1.0816, -0.520694, 0.203996, 0.0067899, 0.080918, -0.59068, 0.742692, -0.223737, 0.210824, 0.898198, 0.63244, 0.0796322, -0.149987, 0.898531, -1.24818, -0.0821361, 0.0693106], [0.179774, 0.124987, -0.0067899, 0.0867281, -0.622958, 1.0816, -0.520694, 0.203996, 0.0067899, 0.080918, -0.59068, 0.742692, -0.223737, 0.210824, 0.898198, 0.63244, 0.0796322, -0.149987, 0.898531, -1.24818, -0.0821361, 0.0693106], [0.179701, 0.125744, -0.00537011, 0.0658903, -0.623787, 1.07519, -0.516529, 0.210245, 0.00537011, 0.0625564, -0.589748, 0.736911, -0.219943, 0.214585, 0.902105, 0.646352, 0.0829655, -0.149291, 0.902413, -1.21764, -0.079815, 0.0726439], [0.179701, 0.125744, -0.00537011, 0.0658903, -0.623787, 1.07519, -0.516529, 0.210245, 0.00537011, 0.0625564, -0.589748, 0.736911, -0.219943, 0.214585, 0.902105, 0.646352, 0.0829655, -0.149291, 0.902413, -1.21764, -0.079815, 0.0726439], [0.179701, 0.125744, -0.00537011, 0.0658903, -0.623787, 1.07519, -0.516529, 0.210245, 0.00537011, 0.0625564, -0.589748, 0.736911, -0.219943, 0.214585, 0.902105, 0.646352, 0.0829655, -0.149291, 0.902413, -1.21764, -0.079815, 0.0726439], [0.179701, 0.125744, -0.00537011, 0.0658903, -0.623787, 1.07519, -0.516529, 0.210245, 0.00537011, 0.0625564, -0.589748, 0.736911, -0.219943, 0.214585, 0.902105, 0.646352, 0.0829655, -0.149291, 0.902413, -1.21764, -0.079815, 0.0726439], [0.179597, 0.126432, -0.00394881, 0.0450636, -0.624372, 1.06841, -0.512241, 0.216377, 0.00394881, 0.0441022, -0.588773, 0.73106, -0.216132, 0.218344, 0.905959, 0.660414, 0.0862988, -0.148657, 0.906245, -1.18656, -0.0770321, 0.0759772], [0.179597, 0.126432, -0.00394881, 0.0450636, -0.624372, 1.06841, -0.512241, 0.216377, 0.00394881, 0.0441022, -0.588773, 0.73106, -0.216132, 0.218344, 0.905959, 0.660414, 0.0862988, -0.148657, 0.906245, -1.18656, -0.0770321, 0.0759772], [0.179597, 0.126432, -0.00394881, 0.0450636, -0.624372, 1.06841, -0.512241, 0.216377, 0.00394881, 0.0441022, -0.588773, 0.73106, -0.216132, 0.218344, 0.905959, 0.660414, 0.0862988, -0.148657, 0.906245, -1.18656, -0.0770321, 0.0759772], [0.179597, 0.126432, -0.00394881, 0.0450636, -0.624372, 1.06841, -0.512241, 0.216377, 0.00394881, 0.0441022, -0.588773, 0.73106, -0.216132, 0.218344, 0.905959, 0.660414, 0.0862988, -0.148657, 0.906245, -1.18656, -0.0770321, 0.0759772], [0.179468, 0.127069, -0.00248416, 0.0242027, -0.624743, 1.06119, -0.507795, 0.222411, 0.00248416, 0.0254853, -0.587732, 0.725129, -0.212298, 0.222134, 0.909792, 0.674692, 0.0896322, -0.148082, 0.910056, -1.15479, -0.0737736, 0.0793106], [0.179468, 0.127069, -0.00248416, 0.0242027, -0.624743, 1.06119, -0.507795, 0.222411, 0.00248416, 0.0254853, -0.587732, 0.725129, -0.212298, 0.222134, 0.909792, 0.674692, 0.0896322, -0.148082, 0.910056, -1.15479, -0.0737736, 0.0793106], [0.179468, 0.127069, -0.00248416, 0.0242027, -0.624743, 1.06119, -0.507795, 0.222411, 0.00248416, 0.0254853, -0.587732, 0.725129, -0.212298, 0.222134, 0.909792, 0.674692, 0.0896322, -0.148082, 0.910056, -1.15479, -0.0737736, 0.0793106], [0.179468, 0.127069, -0.00248416, 0.0242027, -0.624743, 1.06119, -0.507795, 0.222411, 0.00248416, 0.0254853, -0.587732, 0.725129, -0.212298, 0.222134, 0.909792, 0.674692, 0.0896322, -0.148082, 0.910056, -1.15479, -0.0737736, 0.0793106], [0.179319, 0.127658, -0.000961089, 0.00329406, -0.624906, 1.05353, -0.503178, 0.228346, 0.000961089, 0.00668259, -0.586617, 0.719117, -0.208436, 0.225963, 0.913615, 0.689219, 0.0929655, -0.147561, 0.913859, -1.12225, -0.0704402, 0.0826439], [0.179319, 0.127658, -0.000961089, 0.00329406, -0.624906, 1.05353, -0.503178, 0.228346, 0.000961089, 0.00668259, -0.586617, 0.719117, -0.208436, 0.225963, 0.913615, 0.689219, 0.0929655, -0.147561, 0.913859, -1.12225, -0.0704402, 0.0826439], [0.179319, 0.127658, -0.000961089, 0.00329406, -0.624906, 1.05353, -0.503178, 0.228346, 0.000961089, 0.00668259, -0.586617, 0.719117, -0.208436, 0.225963, 0.913615, 0.689219, 0.0929655, -0.147561, 0.913859, -1.12225, -0.0704402, 0.0826439], [0.179319, 0.127658, -0.000961089, 0.00329406, -0.624906, 1.05353, -0.503178, 0.228346, 0.000961089, 0.00668259, -0.586617, 0.719117, -0.208436, 0.225963, 0.913615, 0.689219, 0.0929655, -0.147561, 0.913859, -1.12225, -0.0704402, 0.0826439], [0.179153, 0.128188, 0.000601173, -0.0176135, -0.624844, 1.04546, -0.498419, 0.234151, -0.000601173, -0.0122342, -0.585426, 0.713035, -0.204562, 0.229788, 0.917407, 0.703966, 0.0962988, -0.147093, 0.917632, -1.08904, -0.0671069, 0.0859772], [0.179153, 0.128188, 0.000601173, -0.0176135, -0.624844, 1.04546, -0.498419, 0.234151, -0.000601173, -0.0122342, -0.585426, 0.713035, -0.204562, 0.229788, 0.917407, 0.703966, 0.0962988, -0.147093, 0.917632, -1.08904, -0.0671069, 0.0859772], [0.179153, 0.128188, 0.000601173, -0.0176135, -0.624844, 1.04546, -0.498419, 0.234151, -0.000601173, -0.0122342, -0.585426, 0.713035, -0.204562, 0.229788, 0.917407, 0.703966, 0.0962988, -0.147093, 0.917632, -1.08904, -0.0671069, 0.0859772], [0.179153, 0.128188, 0.000601173, -0.0176135, -0.624844, 1.04546, -0.498419, 0.234151, -0.000601173, -0.0122342, -0.585426, 0.713035, -0.204562, 0.229788, 0.917407, 0.703966, 0.0962988, -0.147093, 0.917632, -1.08904, -0.0671069, 0.0859772], [0.178969, 0.128648, 0.00217394, -0.0385557, -0.62451, 1.03695, -0.493512, 0.239841, -0.00217394, -0.0313284, -0.584175, 0.706865, -0.200657, 0.233641, 0.921172, 0.719004, 0.0996322, -0.146668, 0.921379, -1.055, -0.0637736, 0.0893106], [0.178969, 0.128648, 0.00217394, -0.0385557, -0.62451, 1.03695, -0.493512, 0.239841, -0.00217394, -0.0313284, -0.584175, 0.706865, -0.200657, 0.233641, 0.921172, 0.719004, 0.0996322, -0.146668, 0.921379, -1.055, -0.0637736, 0.0893106], [0.178969, 0.128648, 0.00217394, -0.0385557, -0.62451, 1.03695, -0.493512, 0.239841, -0.00217394, -0.0313284, -0.584175, 0.706865, -0.200657, 0.233641, 0.921172, 0.719004, 0.0996322, -0.146668, 0.921379, -1.055, -0.0637736, 0.0893106], [0.178969, 0.128648, 0.00217394, -0.0385557, -0.62451, 1.03695, -0.493512, 0.239841, -0.00217394, -0.0313284, -0.584175, 0.706865, -0.200657, 0.233641, 0.921172, 0.719004, 0.0996322, -0.146668, 0.921379, -1.055, -0.0637736, 0.0893106], [0.178764, 0.129025, 0.00371771, -0.0596666, -0.623813, 1.02789, -0.488398, 0.245479, -0.00371771, -0.0508195, -0.582892, 0.700551, -0.196656, 0.23764, 0.924938, 0.734532, 0.102965, -0.146277, 0.92513, -1.0197, -0.0604402, 0.0926439], [0.178764, 0.129025, 0.00371771, -0.0596666, -0.623813, 1.02789, -0.488398, 0.245479, -0.00371771, -0.0508195, -0.582892, 0.700551, -0.196656, 0.23764, 0.924938, 0.734532, 0.102965, -0.146277, 0.92513, -1.0197, -0.0604402, 0.0926439], [0.178764, 0.129025, 0.00371771, -0.0596666, -0.623813, 1.02789, -0.488398, 0.245479, -0.00371771, -0.0508195, -0.582892, 0.700551, -0.196656, 0.23764, 0.924938, 0.734532, 0.102965, -0.146277, 0.92513, -1.0197, -0.0604402, 0.0926439], [0.178764, 0.129025, 0.00371771, -0.0596666, -0.623813, 1.02789, -0.488398, 0.245479, -0.00371771, -0.0508195, -0.582892, 0.700551, -0.196656, 0.23764, 0.924938, 0.734532, 0.102965, -0.146277, 0.92513, -1.0197, -0.0604402, 0.0926439], [0.178138, 0.128503, 0.00332929, -0.085054, -0.619182, 1.0149, -0.481637, 0.25319, -0.00332929, -0.0772284, -0.5829, 0.692315, -0.190647, 0.245335, 0.929036, 0.756072, 0.106142, -0.145731, 0.929211, -0.978047, -0.0571069, 0.0959571], [0.178138, 0.128503, 0.00332929, -0.085054, -0.619182, 1.0149, -0.481637, 0.25319, -0.00332929, -0.0772284, -0.5829, 0.692315, -0.190647, 0.245335, 0.929036, 0.756072, 0.106142, -0.145731, 0.929211, -0.978047, -0.0571069, 0.0959571], [0.178138, 0.128503, 0.00332929, -0.085054, -0.619182, 1.0149, -0.481637, 0.25319, -0.00332929, -0.0772284, -0.5829, 0.692315, -0.190647, 0.245335, 0.929036, 0.756072, 0.106142, -0.145731, 0.929211, -0.978047, -0.0571069, 0.0959571], [0.177619, 0.127816, 0.00207073, -0.100876, -0.615548, 1.00784, -0.478354, 0.25721, -0.00207073, -0.0920488, -0.583109, 0.687141, -0.187158, 0.248353, 0.930962, 0.768441, 0.109386, -0.145457, 0.931131, -0.949786, -0.0537736, 0.0992858], [0.177619, 0.127816, 0.00207073, -0.100876, -0.615548, 1.00784, -0.478354, 0.25721, -0.00207073, -0.0920488, -0.583109, 0.687141, -0.187158, 0.248353, 0.930962, 0.768441, 0.109386, -0.145457, 0.931131, -0.949786, -0.0537736, 0.0992858], [0.177619, 0.127816, 0.00207073, -0.100876, -0.615548, 1.00784, -0.478354, 0.25721, -0.00207073, -0.0920488, -0.583109, 0.687141, -0.187158, 0.248353, 0.930962, 0.768441, 0.109386, -0.145457, 0.931131, -0.949786, -0.0537736, 0.0992858], [0.177135, 0.127267, 0.00117178, -0.116733, -0.612145, 1.00044, -0.474847, 0.261143, -0.00117178, -0.106977, -0.583094, 0.681973, -0.183729, 0.251367, 0.933042, 0.780931, 0.112702, -0.145229, 0.933205, -0.921072, -0.0504402, 0.102619], [0.177135, 0.127267, 0.00117178, -0.116733, -0.612145, 1.00044, -0.474847, 0.261143, -0.00117178, -0.106977, -0.583094, 0.681973, -0.183729, 0.251367, 0.933042, 0.780931, 0.112702, -0.145229, 0.933205, -0.921072, -0.0504402, 0.102619], [0.177135, 0.127267, 0.00117178, -0.116733, -0.612145, 1.00044, -0.474847, 0.261143, -0.00117178, -0.106977, -0.583094, 0.681973, -0.183729, 0.251367, 0.933042, 0.780931, 0.112702, -0.145229, 0.933205, -0.921072, -0.0504402, 0.102619], [0.176674, 0.126803, 0.000506429, -0.132598, -0.608839, 0.992742, -0.471167, 0.264979, -0.000506429, -0.121981, -0.582917, 0.67679, -0.18034, 0.254362, 0.935228, 0.793566, 0.116036, -0.145035, 0.935386, -0.891877, -0.0471069, 0.105952], [0.176674, 0.126803, 0.000506429, -0.132598, -0.608839, 0.992742, -0.471167, 0.264979, -0.000506429, -0.121981, -0.582917, 0.67679, -0.18034, 0.254362, 0.935228, 0.793566, 0.116036, -0.145035, 0.935386, -0.891877, -0.0471069, 0.105952], [0.176674, 0.126803, 0.000506429, -0.132598, -0.608839, 0.992742, -0.471167, 0.264979, -0.000506429, -0.121981, -0.582917, 0.67679, -0.18034, 0.254362, 0.935228, 0.793566, 0.116036, -0.145035, 0.935386, -0.891877, -0.0471069, 0.105952], [0.17623, 0.126396, -5.56101e-08, -0.148474, -0.605544, 0.98475, -0.467337, 0.268715, 5.56101e-08, -0.137068, -0.582619, 0.671577, -0.17697, 0.257342, 0.937495, 0.806388, 0.119369, -0.144865, 0.937651, -0.862135, -0.0437736, 0.109286], [0.17623, 0.126396, -5.56101e-08, -0.148474, -0.605544, 0.98475, -0.467337, 0.268715, 5.56101e-08, -0.137068, -0.582619, 0.671577, -0.17697, 0.257342, 0.937495, 0.806388, 0.119369, -0.144865, 0.937651, -0.862135, -0.0437736, 0.109286], [0.17623, 0.126396, -5.56101e-08, -0.148474, -0.605544, 0.98475, -0.467337, 0.268715, 5.56101e-08, -0.137068, -0.582619, 0.671577, -0.17697, 0.257342, 0.937495, 0.806388, 0.119369, -0.144865, 0.937651, -0.862135, -0.0437736, 0.109286], [0.175801, 0.126031, -0.0003867, -0.16437, -0.602213, 0.976454, -0.463362, 0.272357, 0.0003867, -0.152259, -0.582221, 0.666319, -0.173607, 0.260319, 0.939839, 0.819438, 0.122702, -0.144713, 0.939993, -0.831763, -0.0404402, 0.112619], [0.175801, 0.126031, -0.0003867, -0.16437, -0.602213, 0.976454, -0.463362, 0.272357, 0.0003867, -0.152259, -0.582221, 0.666319, -0.173607, 0.260319, 0.939839, 0.819438, 0.122702, -0.144713, 0.939993, -0.831763, -0.0404402, 0.112619]]$/;"	v
transformHB	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> transformHB[HEAD_DH_CHAIN_LEN];$/;"	m	class:Kinematics
transformLAB	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> transformLAB[ARM_DH_CHAIN_LEN];$/;"	m	class:Kinematics
transformLBot	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> transformLBot[CAMERA_DH_CHAIN_LEN];$/;"	m	class:Kinematics
transformLFB	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> transformLFB[LEG_DH_CHAIN_LEN];$/;"	m	class:Kinematics
transformLTop	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> transformLTop[CAMERA_DH_CHAIN_LEN];$/;"	m	class:Kinematics
transformRAB	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> transformRAB[ARM_DH_CHAIN_LEN];$/;"	m	class:Kinematics
transformRBot	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> transformRBot[CAMERA_DH_CHAIN_LEN];$/;"	m	class:Kinematics
transformRFB	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> transformRFB[LEG_DH_CHAIN_LEN];$/;"	m	class:Kinematics
transformRTop	core/motion/rswalk2014/perception/kinematics/Kinematics.hpp	/^      boost::numeric::ublas::matrix<float> transformRTop[CAMERA_DH_CHAIN_LEN];$/;"	m	class:Kinematics
transforms	lib/alglib/optimization.h	/^    ae_vector transforms;$/;"	m	struct:alglib_impl::__anon79
transition	core/common/StateMachine.cpp	/^bool StateMachine::transition(std::string name) {$/;"	f	class:StateMachine
transition	core/python/state_machine.py	/^  def transition(self, state):$/;"	m	class:SimpleStateMachine
transitionExists	core/common/StateMachine.cpp	/^bool StateMachine::transitionExists(std::string state1, std::string state2) {$/;"	f	class:StateMachine
transitionToState	core/motion/SpecialMotionModule.cpp	/^void SpecialMotionModule::transitionToState(State nstate) {$/;"	f	class:SpecialMotionModule
transitions	core/vision/BeaconDetector.h	/^  unsigned char* transitions;$/;"	m	class:BeaconDetector
transitions_	core/common/StateMachine.h	/^  std::vector< std::pair<std::string,std::string> > transitions_;$/;"	m	class:StateMachine
translate	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translate(Point2D p) {$/;"	f	class:BasicGL
translate	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translate(Point2D p, float z) {$/;"	f	class:BasicGL
translate	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translate(Vector3<float> vp) {$/;"	f	class:BasicGL
translate	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translate(float x, float y, float z) {$/;"	f	class:BasicGL
translate	core/math/Pose2D.h	/^  Pose2D& translate(const Vector2<float>& trans)$/;"	f	class:Pose2D
translate	core/math/Pose2D.h	/^  Pose2D& translate(const float x, const float y)$/;"	f	class:Pose2D
translate	core/math/Pose3D.h	/^  Pose3D& translate(const Vector3<float>& trans)$/;"	f	class:Pose3D
translate	core/math/Pose3D.h	/^  Pose3D& translate(const float x, const float y, const float z)$/;"	f	class:Pose3D
translate	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translate(Point2D p) {$/;"	f	class:BasicGL
translate	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translate(Point2D p, float z) {$/;"	f	class:BasicGL
translate	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translate(Vector3<float> vp) {$/;"	f	class:BasicGL
translate	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translate(float x, float y, float z) {$/;"	f	class:BasicGL
translateRotateZ	build/include/tool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translateRotateZ(Point2D p, float angleRad) {$/;"	f	class:BasicGL
translateRotateZ	tools/UTNaoTool/UTOpenGL/BasicGL.cpp	/^void BasicGL::translateRotateZ(Point2D p, float angleRad) {$/;"	f	class:BasicGL
translation	core/math/Pose2D.h	/^  Vector2<float> translation;$/;"	m	class:Pose2D
translation	core/math/Pose3D.h	/^  Vector3<float> translation;$/;"	m	class:Pose3D
transp	core/common/NMatrix.cpp	/^NMatrix	NMatrix::transp()$/;"	f	class:NMatrix
transpose	core/math/Matrix2x2.h	/^  Matrix2x2<V> transpose() const$/;"	f	class:Matrix2x2
transpose	core/math/Matrix3x3.h	/^  Matrix2x3<V> transpose()$/;"	f	class:Matrix3x2
transpose	core/math/Matrix3x3.h	/^  Matrix3x2<V> transpose()$/;"	f	class:Matrix2x3
transpose	core/math/Matrix3x3.h	/^  Matrix3x3<V> transpose() const$/;"	f	class:Matrix3x3
transpose	core/math/Vector2.h	/^  Vector2<V> transpose()$/;"	f	class:Vector2
transpose	core/math/YaMatrix.h	/^  YaMatrix<V> transpose() const$/;"	f	class:YaMatrix
traverseclosure	lib/lua/src/lgc.c	/^static void traverseclosure (global_State *g, Closure *cl) {$/;"	f	file:
traverseproto	lib/lua/src/lgc.c	/^static void traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestack	lib/lua/src/lgc.c	/^static void traversestack (global_State *g, lua_State *l) {$/;"	f	file:
traversetable	lib/lua/src/lgc.c	/^static int traversetable (global_State *g, Table *h) {$/;"	f	file:
treat	tools/behaviorSim/cma.py	/^    def treat(self):$/;"	m	class:NoiseHandler
treatstackoption	lib/lua/src/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tred2	tools/behaviorSim/cma.py	/^        def tred2 (n, V, d, e):$/;"	f	function:Misc.eig
tree	lib/alglib/interpolation.h	/^    kdtree tree;$/;"	m	struct:alglib_impl::__anon56
tree_desc	lib/zlib/deflate.h	/^} FAR tree_desc;$/;"	t	typeref:struct:tree_desc_s
tree_desc_s	lib/zlib/deflate.h	/^typedef struct tree_desc_s {$/;"	s
treebuf	lib/alglib/dataanalysis.h	/^    ae_vector treebuf;$/;"	m	struct:alglib_impl::__anon41
trees	lib/alglib/dataanalysis.h	/^    ae_vector trees;$/;"	m	struct:alglib_impl::__anon39
tremove	lib/lua/src/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trfac_cmatrixlup2	lib/alglib/linalg.cpp	/^static void trfac_cmatrixlup2(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
trfac_cmatrixluprec	lib/alglib/linalg.cpp	/^static void trfac_cmatrixluprec(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
trfac_cmatrixplu2	lib/alglib/linalg.cpp	/^static void trfac_cmatrixplu2(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
trfac_cmatrixplurec	lib/alglib/linalg.cpp	/^static void trfac_cmatrixplurec(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
trfac_hpdmatrixcholesky2	lib/alglib/linalg.cpp	/^static ae_bool trfac_hpdmatrixcholesky2(\/* Complex *\/ ae_matrix* aaa,$/;"	f	namespace:alglib_impl
trfac_hpdmatrixcholeskyrec	lib/alglib/linalg.cpp	/^static ae_bool trfac_hpdmatrixcholeskyrec(\/* Complex *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
trfac_rmatrixlup2	lib/alglib/linalg.cpp	/^static void trfac_rmatrixlup2(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
trfac_rmatrixluprec	lib/alglib/linalg.cpp	/^static void trfac_rmatrixluprec(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
trfac_rmatrixplu2	lib/alglib/linalg.cpp	/^static void trfac_rmatrixplu2(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
trfac_rmatrixplurec	lib/alglib/linalg.cpp	/^static void trfac_rmatrixplurec(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
trfac_spdmatrixcholesky2	lib/alglib/linalg.cpp	/^static ae_bool trfac_spdmatrixcholesky2(\/* Real    *\/ ae_matrix* aaa,$/;"	f	namespace:alglib_impl
triangular	interfaces/sim_spark/Random.h	/^   float triangular( float xMin = 0.,     \/\/ Triangular$/;"	f	class:Random
trigintegrals_chebiterationshichi	lib/alglib/specialfunctions.cpp	/^static void trigintegrals_chebiterationshichi(double x,$/;"	f	namespace:alglib_impl
trim	core/common/Enum.cpp	/^std::string EnumName::trim(const std::string& s)$/;"	f	class:EnumName
trimTrailingSpaces	lib/yaml-cpp/src/scanscalar.h	/^		bool trimTrailingSpaces;        \/\/ do we remove all trailing spaces (at the very end)$/;"	m	struct:YAML::ScanScalarParams
truePositives	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^std::vector<Point> AnnotationAnalyzer::truePositives(Color query) {$/;"	f	class:AnnotationAnalyzer
truePositives	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^std::vector<Point> AnnotationAnalyzer::truePositives(Color query, int frame) {$/;"	f	class:AnnotationAnalyzer
truePositives	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^std::vector<Point> AnnotationAnalyzer::truePositives(Color query) {$/;"	f	class:AnnotationAnalyzer
truePositives	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^std::vector<Point> AnnotationAnalyzer::truePositives(Color query, int frame) {$/;"	f	class:AnnotationAnalyzer
truePosts	build/include/tool/AnalysisWidget.h	/^  int falsePosts, truePosts, missingPosts;$/;"	m	struct:goalstats
truePosts	tools/UTNaoTool/AnalysisWidget.h	/^  int falsePosts, truePosts, missingPosts;$/;"	m	struct:goalstats
trunc	lib/alglib/ap.cpp	/^int alglib::trunc(double x)$/;"	f	class:alglib
truncate	tools/behaviorSim/cma.py	/^    def truncate(self, max_len, min_iter):$/;"	m	class:SolutionDict
trunk_length	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^static const float trunk_length = Limbs::HipOffsetZ + Limbs::NeckOffsetZ;$/;"	v	file:
trustDistance	core/motion/rswalk2014/types/PostInfo.hpp	/^   bool trustDistance;$/;"	m	struct:PostInfo
try_lock	core/memory/Lock.cpp	/^bool Lock::try_lock() {$/;"	f	class:Lock
trydecpoint	lib/lua/src/llex.c	/^static void trydecpoint (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
tryfuncTM	lib/lua/src/ldo.c	/^static StkId tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
ts	lib/lua/src/llex.h	/^  TString *ts;$/;"	m	union:__anon86
ts	lib/lua/src/lstate.h	/^  union TString ts;$/;"	m	union:GCObject	typeref:union:GCObject::TString
ts	tools/testStep.py	/^ts = [x \/ float(numVals) - 0.5 for x in range(numVals)]$/;"	v
ts	tools/testStepSide.py	/^ts = [x \/ float(numVals) - 0.5 for x in range(numVals)]$/;"	v
tsort_tagsortfastirec	lib/alglib/alglibinternal.cpp	/^static void tsort_tagsortfastirec(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tsort_tagsortfastrec	lib/alglib/alglibinternal.cpp	/^static void tsort_tagsortfastrec(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tsort_tagsortfastrrec	lib/alglib/alglibinternal.cpp	/^static void tsort_tagsortfastrrec(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
tsv	lib/lua/src/lobject.h	/^  } tsv;$/;"	m	union:TString	typeref:struct:TString::__anon88
tsvalue	lib/lua/src/lobject.h	/^#define tsvalue(/;"	d
ttimer	core/python/UTdebug.py	/^def ttimer(name):$/;"	f
ttisboolean	lib/lua/src/lobject.h	/^#define ttisboolean(/;"	d
ttisfunction	lib/lua/src/lobject.h	/^#define ttisfunction(/;"	d
ttislightuserdata	lib/lua/src/lobject.h	/^#define ttislightuserdata(/;"	d
ttisnil	lib/lua/src/lobject.h	/^#define ttisnil(/;"	d
ttisnumber	lib/lua/src/lobject.h	/^#define ttisnumber(/;"	d
ttisstring	lib/lua/src/lobject.h	/^#define ttisstring(/;"	d
ttistable	lib/lua/src/lobject.h	/^#define ttistable(/;"	d
ttisthread	lib/lua/src/lobject.h	/^#define ttisthread(/;"	d
ttisuserdata	lib/lua/src/lobject.h	/^#define ttisuserdata(/;"	d
tts_proxy_	interfaces/nao/src/naointerface.h	/^    boost::shared_ptr<AL::ALTextToSpeechProxy> tts_proxy_;$/;"	m	class:naointerface
ttype	lib/lua/src/lobject.h	/^#define ttype(/;"	d
turn	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float turn, lastTurn;                                             \/\/ Omnidirectional walk CW \/ CCW$/;"	m	class:Walk2014Generator
turn	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float turn; \/\/ How much anti-clockwise turn (negative for clockwise) (rad)$/;"	m	struct:ActionCommand::Body
turn	core/motion/rswalk2014/types/Odometry.hpp	/^   float turn;$/;"	m	struct:Odometry
turn	core/python/behaviors/walk_to_center.py	/^    def turn(self):$/;"	m	class:Playing.WalkToCenter
turn	core/python/behaviors/walk_to_center_2.py	/^    def turn(self):$/;"	m	class:Playing.WalkToCenter
turnL	core/motion/rswalk2014/BodyModel.hpp	/^      float forwardL, forwardR, turnL, turnR;$/;"	m	class:BodyModel
turnR	core/motion/rswalk2014/BodyModel.hpp	/^      float forwardL, forwardR, turnL, turnR;$/;"	m	class:BodyModel
turnRL	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float turnRL;                                           \/\/ turn variable$/;"	m	class:Walk2014Generator
turnRL0	core/motion/rswalk2014/Walk2014Generator.hpp	/^   float turnRL0;                                          \/\/ turnRL at support foot switch$/;"	m	class:Walk2014Generator
turn_ccw_odometry_factor_	core/memory/ALWalkParamBlock.h	/^  float turn_ccw_odometry_factor_;$/;"	m	struct:ALWalkParamBlock
turn_cw_odometry_factor_	core/memory/ALWalkParamBlock.h	/^  float turn_cw_odometry_factor_;$/;"	m	struct:ALWalkParamBlock
turn_limit	core/memory/WalkParamBlock.h	/^  float turn_limit;$/;"	m	struct:WalkParamBlock
turn_limit	core/motion/rswalk2014/RSWalkModule2014.h	/^        float turn_limit = 0.65f;$/;"	m	class:RSWalkModule2014
tvk	lib/lua/src/lobject.h	/^  TValue tvk;$/;"	m	union:TKey
twoParamLine	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^struct twoParamLine {$/;"	s
twoaxes	tools/behaviorSim/cma.py	/^    def twoaxes(self, y):$/;"	m	class:FitnessFunctions
twoto	lib/lua/src/lobject.h	/^#define twoto(/;"	d
txtToken	lib/lua/src/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
type	build/include/tool/simulation/LocalizationSimulation.h	/^  Type type;$/;"	m	struct:LocSimAgent
type	core/common/WorldObject.h	/^  WorldObjectType type, utype;$/;"	m	class:WorldObject
type	core/math/MVTools.h	/^  ExceptionType type;$/;"	m	class:MVException
type	core/memory/BehaviorBlock.h	/^  int type;$/;"	m	struct:SetPlayInfo
type	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   low_feature_t type;$/;"	m	struct:low_feature
type	core/motion/rswalk2014/types/PostInfo.hpp	/^   Type type;$/;"	m	struct:PostInfo
type	core/vision/structures/GoalPoint.h	/^  int type;$/;"	m	struct:GoalPoint
type	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		Type::value type;$/;"	m	struct:YAML::_Tag
type	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	  typedef T type;$/;"	t	struct:YAML::disable_if_c
type	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	  typedef T type;$/;"	t	struct:YAML::enable_if_c
type	lib/yaml-cpp/src/emitterstate.h	/^			GROUP_TYPE type;$/;"	m	struct:YAML::EmitterState::Group
type	lib/yaml-cpp/src/iterpriv.h	/^		ITER_TYPE type;$/;"	m	struct:YAML::IterPriv
type	lib/yaml-cpp/src/scanner.h	/^			INDENT_TYPE type;$/;"	m	struct:YAML::Scanner::IndentMarker
type	lib/yaml-cpp/src/tag.h	/^		TYPE type;$/;"	m	struct:YAML::Tag
type	lib/yaml-cpp/src/token.h	/^		TYPE type;$/;"	m	struct:YAML::Token
type	tools/UTNaoTool/simulation/LocalizationSimulation.h	/^  Type type;$/;"	m	struct:LocSimAgent
type_	core/MotionCore.h	/^  CoreType type_;$/;"	m	class:MotionCore
type_	core/VisionCore.h	/^  CoreType type_;$/;"	m	class:VisionCore
type_	core/memory/KickEngineBlock.h	/^  Kick::Type type_;$/;"	m	struct:KickEngineBlock
type_	core/memory/Logger.h	/^  int type_;$/;"	m	class:Logger
type_	core/memory/TextLogger.h	/^  int type_;$/;"	m	class:TextLogger
u	build/include/tool/annotations/AnnotationAnalyzer.h	/^    unsigned char u;$/;"	m	struct:YUV
u	core/common/ColorConversion.h	/^    int u;$/;"	m	struct:color::Yuv422
u	core/common/ColorConversion.h	/^    int u;$/;"	m	struct:color::Yuv444
u	core/common/ColorSpaces.h	/^  int u;$/;"	m	struct:YUV422
u	core/common/ColorSpaces.h	/^  int u;$/;"	m	struct:YUV444
u	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   uint8_t u;$/;"	m	struct:pixelValues
u	core/vision/structures/YUV.h	/^  uint8_t u;$/;"	m	struct:YUV
u	lib/lua/src/lobject.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon90
u	lib/lua/src/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon96
u	lib/lua/src/lstate.h	/^  union Udata u;$/;"	m	union:GCObject	typeref:union:GCObject::Udata
u	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    unsigned char u;$/;"	m	struct:YUV
u	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    uint8_t u;$/;"	m	struct:color_classifier::Yuv
u4	lib/zlib/crc32.c	/^           typedef unsigned short u4;$/;"	t	file:
u4	lib/zlib/crc32.c	/^         typedef unsigned long u4;$/;"	t	file:
u4	lib/zlib/crc32.c	/^       typedef unsigned int u4;$/;"	t	file:
uInt	lib/zlib/zconf.h	/^#  define uInt /;"	d
uInt	lib/zlib/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uIntf	lib/zlib/zconf.h	/^#  define uIntf /;"	d
uIntf	lib/zlib/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uLong	lib/zlib/zconf.h	/^#  define uLong /;"	d
uLong	lib/zlib/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLongf	lib/zlib/zconf.h	/^#  define uLongf /;"	d
uLongf	lib/zlib/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uNum	interfaces/sim_spark/Parser.h	/^  int uNum;$/;"	m	class:Parser
uNum	interfaces/sim_spark/main.cpp	/^int uNum;$/;"	v
uch	lib/zlib/zutil.h	/^typedef unsigned char  uch;$/;"	t
uchar	lib/lua/src/lstrlib.c	/^#define uchar(/;"	d	file:
uchf	lib/zlib/zutil.h	/^typedef uch FAR uchf;$/;"	t
ucomponent	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   ucomponent,$/;"	e	enum:__anon13
ud	lib/lua/src/lapi.c	/^  void *ud;$/;"	m	struct:CCallS	file:
ud	lib/lua/src/lstate.h	/^  void *ud;         \/* auxiliary data to `frealloc' *\/$/;"	m	struct:global_State
ui	tools/color_classifier/include/color_classifier/classification_window.hpp	/^      Ui::ClassificationWindow ui;$/;"	m	class:color_classifier::ClassificationWindow
ui	tools/color_classifier/include/color_classifier/main_window.hpp	/^      Ui::ClassificationTool ui;$/;"	m	class:color_classifier::MainWindow
uict00	lib/yaml-cpp/src/stream.cpp	/^		uict00,$/;"	e	enum:YAML::UtfIntroCharType	file:
uictAscii	lib/yaml-cpp/src/stream.cpp	/^		uictAscii,$/;"	e	enum:YAML::UtfIntroCharType	file:
uictBB	lib/yaml-cpp/src/stream.cpp	/^		uictBB,$/;"	e	enum:YAML::UtfIntroCharType	file:
uictBF	lib/yaml-cpp/src/stream.cpp	/^		uictBF,$/;"	e	enum:YAML::UtfIntroCharType	file:
uictEF	lib/yaml-cpp/src/stream.cpp	/^		uictEF,$/;"	e	enum:YAML::UtfIntroCharType	file:
uictFE	lib/yaml-cpp/src/stream.cpp	/^		uictFE,$/;"	e	enum:YAML::UtfIntroCharType	file:
uictFF	lib/yaml-cpp/src/stream.cpp	/^		uictFF,$/;"	e	enum:YAML::UtfIntroCharType	file:
uictMax	lib/yaml-cpp/src/stream.cpp	/^		uictMax$/;"	e	enum:YAML::UtfIntroCharType	file:
uictOther	lib/yaml-cpp/src/stream.cpp	/^		uictOther,$/;"	e	enum:YAML::UtfIntroCharType	file:
uis_error	lib/yaml-cpp/src/stream.cpp	/^		uis_error$/;"	e	enum:YAML::UtfIntroState	file:
uis_start	lib/yaml-cpp/src/stream.cpp	/^		uis_start,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf16be	lib/yaml-cpp/src/stream.cpp	/^		uis_utf16be,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf16be_bom1	lib/yaml-cpp/src/stream.cpp	/^		uis_utf16be_bom1,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf16le	lib/yaml-cpp/src/stream.cpp	/^		uis_utf16le,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf16le_bom2	lib/yaml-cpp/src/stream.cpp	/^		uis_utf16le_bom2,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf16le_imp	lib/yaml-cpp/src/stream.cpp	/^		uis_utf16le_imp,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf32be	lib/yaml-cpp/src/stream.cpp	/^		uis_utf32be,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf32be_b2	lib/yaml-cpp/src/stream.cpp	/^		uis_utf32be_b2,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf32be_bom3	lib/yaml-cpp/src/stream.cpp	/^		uis_utf32be_bom3,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf32le	lib/yaml-cpp/src/stream.cpp	/^		uis_utf32le,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf32le_bom3	lib/yaml-cpp/src/stream.cpp	/^		uis_utf32le_bom3,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf32le_imp3	lib/yaml-cpp/src/stream.cpp	/^		uis_utf32le_imp3,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf8	lib/yaml-cpp/src/stream.cpp	/^		uis_utf8,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf8_bom1	lib/yaml-cpp/src/stream.cpp	/^		uis_utf8_bom1,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf8_bom2	lib/yaml-cpp/src/stream.cpp	/^		uis_utf8_bom2,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utf8_imp	lib/yaml-cpp/src/stream.cpp	/^		uis_utf8_imp,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utfbe_b1	lib/yaml-cpp/src/stream.cpp	/^		uis_utfbe_b1,$/;"	e	enum:YAML::UtfIntroState	file:
uis_utfle_bom1	lib/yaml-cpp/src/stream.cpp	/^		uis_utfle_bom1,$/;"	e	enum:YAML::UtfIntroState	file:
ukf4UpdateResult	core/opponents/UKF4.h	/^enum ukf4UpdateResult {$/;"	g
ukfParams	core/opponents/UKF4.h	/^  SmallUKF4Params ukfParams;$/;"	m	class:UKF4
ulg	lib/zlib/zutil.h	/^typedef unsigned long  ulg;$/;"	t
unMapPoint	build/include/tool/ImageWidget.cpp	/^QPoint ImageWidget::unMapPoint(QPoint point) {$/;"	f	class:ImageWidget
unMapPoint	tools/UTNaoTool/ImageWidget.cpp	/^QPoint ImageWidget::unMapPoint(QPoint point) {$/;"	f	class:ImageWidget
unbound_search	lib/lua/src/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:
uncompress	lib/zlib/uncompr.c	/^int ZEXPORT uncompress (dest, destLen, source, sourceLen)$/;"	f
uncompress	lib/zlib/zconf.h	/^#  define uncompress /;"	d
undistort	core/vision/CameraMatrix.cpp	/^Coordinates CameraMatrix::undistort(float x, float y) const {$/;"	f	class:CameraMatrix
undo	build/include/tool/AnalysisWidget.cpp	/^void AnalysisWidget::undo() {$/;"	f	class:AnalysisWidget
undo	build/include/tool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::undo() {$/;"	f	class:AnnotationAnalyzer
undo	tools/UTNaoTool/AnalysisWidget.cpp	/^void AnalysisWidget::undo() {$/;"	f	class:AnalysisWidget
undo	tools/UTNaoTool/annotations/AnnotationAnalyzer.cpp	/^void AnnotationAnalyzer::undo() {$/;"	f	class:AnnotationAnalyzer
undoImage_	build/include/tool/VisionWindow.h	/^  int undoImage_;$/;"	m	class:VisionWindow
undoImage_	tools/UTNaoTool/VisionWindow.h	/^  int undoImage_;$/;"	m	class:VisionWindow
undoTable	build/include/tool/VisionWindow.h	/^  unsigned char undoTable[LUT_SIZE];$/;"	m	class:VisionWindow
undoTable	tools/UTNaoTool/VisionWindow.h	/^  unsigned char undoTable[LUT_SIZE];$/;"	m	class:VisionWindow
unequalvariancettest	lib/alglib/statistics.cpp	/^void unequalvariancettest(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
unequalvariancettest	lib/alglib/statistics.cpp	/^void unequalvariancettest(const real_1d_array &x, const ae_int_t n, const real_1d_array &y, const ae_int_t m, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
uniform	interfaces/sim_spark/Random.h	/^   float uniform( float xMin = 0., float xMax = 1. )   \/\/ Uniform$/;"	f	class:Random
uniformDiscrete	interfaces/sim_spark/Random.h	/^   int uniformDiscrete( int i, int j )   \/\/ Uniform Discrete$/;"	f	class:Random
unitdoctest	tools/behaviorSim/cma.py	/^def unitdoctest():$/;"	f
unknown	core/python/behaviors/win.py	/^  unknown=0$/;"	v	class:EnemyGoalStates
unlink	lib/zlib/minigzip.c	/^#  define unlink /;"	d	file:
unlinkupval	lib/lua/src/lfunc.c	/^static void unlinkupval (UpVal *uv) {$/;"	f	file:
unlock	core/memory/Lock.cpp	/^void Lock::unlock() {$/;"	f	class:Lock
unm_event	lib/lua/doc/manual.html	/^     function unm_event (op)$/;"	f
unmakemask	lib/lua/src/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unmapAndFreeBuffers	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::unmapAndFreeBuffers() {$/;"	f	class:NaoCamera
unpause	core/common/Profiling.cpp	/^void Timer::unpause() {$/;"	f	class:Timer
unseen_count	core/localization/LocalizationModule.h	/^    unsigned int unseen_count;$/;"	m	class:LocalizationModule
update	build/include/tool/AnnotationWidget.cpp	/^void AnnotationWidget::update(){$/;"	f	class:AnnotationWidget
update	build/include/tool/CameraWindow.cpp	/^void CameraWindow::update(Memory* memory) {$/;"	f	class:CameraWindow
update	build/include/tool/JointsWindow.cpp	/^void JointsWindow::update(Memory* memory) {$/;"	f	class:JointsWindow
update	build/include/tool/PlotWindow.cpp	/^void PlotWindow::update(Memory* mem) {$/;"	f	class:PlotWindow
update	build/include/tool/SensorWindow.cpp	/^void SensorWindow::update(Memory* memory) {$/;"	f	class:SensorWindow
update	build/include/tool/StateWindow.cpp	/^void StateWindow::update(Memory* memory) {$/;"	f	class:StateWindow
update	build/include/tool/VisionWindow.cpp	/^void VisionWindow::update(){$/;"	f	class:VisionWindow
update	build/include/tool/VisionWindow.cpp	/^void VisionWindow::update(Memory* memory) {$/;"	f	class:VisionWindow
update	build/include/tool/WalkWindow.cpp	/^void WalkWindow::update(Memory* memory) {$/;"	f	class:WalkWindow
update	core/common/ExponentialFilter.h	/^  float update(float val) {$/;"	f	class:ExponentialFilter
update	core/common/PIDController.cpp	/^float PIDController::update(float current, float target) {$/;"	f	class:PIDController
update	core/motion/rswalk2014/BodyModel.cpp	/^void BodyModel::update(Odometry *odometry,$/;"	f	class:BodyModel
update	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^void CKF::update(const SensorValues &sensorValues){$/;"	f	class:CKF
update	core/python/mem_objects.py	/^def update():$/;"	f
update	tools/UTNaoTool/AnnotationWidget.cpp	/^void AnnotationWidget::update(){$/;"	f	class:AnnotationWidget
update	tools/UTNaoTool/CameraWindow.cpp	/^void CameraWindow::update(Memory* memory) {$/;"	f	class:CameraWindow
update	tools/UTNaoTool/JointsWindow.cpp	/^void JointsWindow::update(Memory* memory) {$/;"	f	class:JointsWindow
update	tools/UTNaoTool/PlotWindow.cpp	/^void PlotWindow::update(Memory* mem) {$/;"	f	class:PlotWindow
update	tools/UTNaoTool/SensorWindow.cpp	/^void SensorWindow::update(Memory* memory) {$/;"	f	class:SensorWindow
update	tools/UTNaoTool/StateWindow.cpp	/^void StateWindow::update(Memory* memory) {$/;"	f	class:StateWindow
update	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::update(){$/;"	f	class:VisionWindow
update	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::update(Memory* memory) {$/;"	f	class:VisionWindow
update	tools/UTNaoTool/WalkWindow.cpp	/^void WalkWindow::update(Memory* memory) {$/;"	f	class:WalkWindow
update	tools/behaviorSim/cma.py	/^    def update(self, arx, xarchive=None, arf=None, evals=None):$/;"	m	class:BestSolution
update	tools/behaviorSim/cma.py	/^    def update(self, function_values, es, bounds=None):$/;"	m	class:BoundPenalty
updateAnnotations	build/include/tool/LogWidget.cpp	/^void LogWidget::updateAnnotations(AnnotationGroup* annotations) {$/;"	f	class:LogWidget
updateAnnotations	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::updateAnnotations(AnnotationGroup* annotations) {$/;"	f	class:WorldGLWidget
updateAnnotations	build/include/tool/WorldWindow.cpp	/^void WorldWindow::updateAnnotations(AnnotationGroup* annotations) {$/;"	f	class:WorldWindow
updateAnnotations	tools/UTNaoTool/LogWidget.cpp	/^void LogWidget::updateAnnotations(AnnotationGroup* annotations) {$/;"	f	class:LogWidget
updateAnnotations	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::updateAnnotations(AnnotationGroup* annotations) {$/;"	f	class:WorldGLWidget
updateAnnotations	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::updateAnnotations(AnnotationGroup* annotations) {$/;"	f	class:WorldWindow
updateBD	tools/behaviorSim/cma.py	/^    def updateBD(self): $/;"	m	class:CMAEvolutionStrategy
updateBasicInputs	build/include/tool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::updateBasicInputs(WorldObjectBlock* simulationMem, GameStateBlock* simulationState){$/;"	f	class:SimulatedPlayer
updateBasicInputs	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::updateBasicInputs(WorldObjectBlock* simulationMem, GameStateBlock* simulationState){$/;"	f	class:SimulatedPlayer
updateBigImage	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::updateBigImage() {$/;"	f	class:VisionWindow
updateBigImage	build/include/tool/VisionWindow_Draw.cpp	/^void VisionWindow::updateBigImage(ImageWidget* source) {$/;"	f	class:VisionWindow
updateBigImage	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::updateBigImage() {$/;"	f	class:VisionWindow
updateBigImage	tools/UTNaoTool/VisionWindow_Draw.cpp	/^void VisionWindow::updateBigImage(ImageWidget* source) {$/;"	f	class:VisionWindow
updateBuffer	core/imageCapture/DummyCamera.h	/^  void updateBuffer() {timeStamp++;}$/;"	f	class:DummyCamera
updateBuffer	core/imageCapture/NaoCamera.cpp	/^void NaoCamera::updateBuffer() {$/;"	f	class:NaoCamera
updateCalibrationCheck	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::updateCalibrationCheck(bool value) {$/;"	f	class:VisionWindow
updateCalibrationCheck	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::updateCalibrationCheck(bool value) {$/;"	f	class:VisionWindow
updateCalibrationFile	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::updateCalibrationFile() {$/;"	f	class:UTMainWnd
updateCalibrationFile	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::updateCalibrationFile() {$/;"	f	class:UTMainWnd
updateCameraPose	core/vision/CameraMatrix.cpp	/^void CameraMatrix::updateCameraPose(Pose3D& pose) {$/;"	f	class:CameraMatrix
updateCheckerboardCheck	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::updateCheckerboardCheck(bool value) {$/;"	f	class:VisionWindow
updateCheckerboardCheck	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::updateCheckerboardCheck(bool value) {$/;"	f	class:VisionWindow
updateClassificationCheck	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::updateClassificationCheck(bool value) {$/;"	f	class:VisionWindow
updateClassificationCheck	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::updateClassificationCheck(bool value) {$/;"	f	class:VisionWindow
updateClicked	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::updateClicked(int xIdx, int yIdx, int buttonIdx){$/;"	f	class:VisionWindow
updateClicked	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::updateClicked(int xIdx, int yIdx, int buttonIdx){$/;"	f	class:VisionWindow
updateCommand	core/memory/SimEffectorBlock.h	/^  void updateCommand(const double &tangle, const double &time, bool change){$/;"	f	struct:SimEffector
updateConfigFile	build/include/tool/UTMainWnd.cpp	/^void UTMainWnd::updateConfigFile() {$/;"	f	class:UTMainWnd
updateConfigFile	tools/UTNaoTool/UTMainWnd.cpp	/^void UTMainWnd::updateConfigFile() {$/;"	f	class:UTMainWnd
updateCursorInfo	build/include/tool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfo(int x, int y) {$/;"	f	class:VisionWindow
updateCursorInfo	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfo(int x, int y) {$/;"	f	class:VisionWindow
updateCursorInfoHorizontal	build/include/tool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfoHorizontal(int x, int y, int image) {$/;"	f	class:VisionWindow
updateCursorInfoHorizontal	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfoHorizontal(int x, int y, int image) {$/;"	f	class:VisionWindow
updateCursorInfoObj	build/include/tool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfoObj(int x, int y, int image) {$/;"	f	class:VisionWindow
updateCursorInfoObj	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfoObj(int x, int y, int image) {$/;"	f	class:VisionWindow
updateCursorInfoRaw	build/include/tool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfoRaw(int x, int y, int image){$/;"	f	class:VisionWindow
updateCursorInfoRaw	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfoRaw(int x, int y, int image){$/;"	f	class:VisionWindow
updateCursorInfoVertical	build/include/tool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfoVertical(int x, int y, int image) {$/;"	f	class:VisionWindow
updateCursorInfoVertical	tools/UTNaoTool/VisionWindow.cpp	/^void VisionWindow::updateCursorInfoVertical(int x, int y, int image) {$/;"	f	class:VisionWindow
updateDHChain	core/motion/rswalk2014/perception/kinematics/Kinematics.cpp	/^void Kinematics::updateDHChain() {$/;"	f	class:Kinematics
updateDisplay	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::updateDisplay(const map<GLDrawer::DisplayOption, bool>& display) {$/;"	f	class:WorldGLWidget
updateDisplay	build/include/tool/WorldWindow.cpp	/^void WorldWindow::updateDisplay(bool) {$/;"	f	class:WorldWindow
updateDisplay	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::updateDisplay(const map<GLDrawer::DisplayOption, bool>& display) {$/;"	f	class:WorldGLWidget
updateDisplay	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::updateDisplay(bool) {$/;"	f	class:WorldWindow
updateEntry	core/common/RingBuffer.h	/^    void updateEntry(const V& v, int i)$/;"	f	class:RingBuffer
updateErrors	core/memory/SimEffectorBlock.h	/^  void updateErrors() {$/;"	f	struct:SimEffector
updateFrame	build/include/tool/LogWindow.cpp	/^void LogWindow::updateFrame(Memory* mem) {$/;"	f	class:LogWindow
updateFrame	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::updateFrame(Memory* mem) {$/;"	f	class:LogWindow
updateFrames	build/include/tool/KeyframeWidget.cpp	/^void KeyframeItem::updateFrames(int frames) {$/;"	f	class:KeyframeItem
updateFrames	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeItem::updateFrames(int frames) {$/;"	f	class:KeyframeItem
updateIUHeight	core/sensor/initInertialFilter.cpp	/^void InertialFilter::updateIUHeight(float torsoZ) {$/;"	f	class:InertialFilter
updateInputs	build/include/tool/MotionSimulation.cpp	/^void MotionSimulation::updateInputs(){$/;"	f	class:MotionSimulation
updateInputs	tools/UTNaoTool/MotionSimulation.cpp	/^void MotionSimulation::updateInputs(){$/;"	f	class:MotionSimulation
updateItem	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::updateItem(QListWidgetItem* item) {$/;"	f	class:KeyframeWidget
updateItem	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::updateItem(QListWidgetItem* item) {$/;"	f	class:KeyframeWidget
updateKeyframe	build/include/tool/KeyframeWidget.cpp	/^void KeyframeItem::updateKeyframe(const Keyframe& kf) {$/;"	f	class:KeyframeItem
updateKeyframe	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeItem::updateKeyframe(const Keyframe& kf) {$/;"	f	class:KeyframeItem
updateLevel	build/include/tool/LogWindow.cpp	/^void LogWindow::updateLevel(int \/*n*\/){$/;"	f	class:LogWindow
updateLevel	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::updateLevel(int \/*n*\/){$/;"	f	class:LogWindow
updateLiveMode	build/include/tool/WorldWindow.cpp	/^void WorldWindow::updateLiveMode() {$/;"	f	class:WorldWindow
updateLiveMode	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::updateLiveMode() {$/;"	f	class:WorldWindow
updateLogStatus	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::updateLogStatus(int robot, QString status) {$/;"	f	class:TeamConfigWindow
updateLogStatus	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::updateLogStatus(int robot, QString status) {$/;"	f	class:TeamConfigWindow
updateMemory	build/include/tool/KeyframeWidget.cpp	/^void KeyframeWidget::updateMemory(MemoryCache cache) {$/;"	f	class:KeyframeWidget
updateMemory	build/include/tool/MotionGLWidget.cpp	/^void MotionGLWidget::updateMemory(Memory* mem) {$/;"	f	class:MotionGLWidget
updateMemory	build/include/tool/MotionWindow.cpp	/^void MotionWindow::updateMemory(Memory* mem) {$/;"	f	class:MotionWindow
updateMemory	build/include/tool/TeamPacketWidget.cpp	/^void TeamPacketWidget::updateMemory(MemoryCache cache) {$/;"	f	class:TeamPacketWidget
updateMemory	build/include/tool/WorldGLWidget.cpp	/^void WorldGLWidget::updateMemory(MemoryCache cache){$/;"	f	class:WorldGLWidget
updateMemory	build/include/tool/WorldWindow.cpp	/^void WorldWindow::updateMemory(Memory* mem) {$/;"	f	class:WorldWindow
updateMemory	build/include/tool/WorldWindow.cpp	/^void WorldWindow::updateMemory(MemoryCache cache) {$/;"	f	class:WorldWindow
updateMemory	core/VisionCore.cpp	/^void VisionCore::updateMemory(Memory* memory, bool locOnly) {$/;"	f	class:VisionCore
updateMemory	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeWidget::updateMemory(MemoryCache cache) {$/;"	f	class:KeyframeWidget
updateMemory	tools/UTNaoTool/MotionGLWidget.cpp	/^void MotionGLWidget::updateMemory(Memory* mem) {$/;"	f	class:MotionGLWidget
updateMemory	tools/UTNaoTool/MotionWindow.cpp	/^void MotionWindow::updateMemory(Memory* mem) {$/;"	f	class:MotionWindow
updateMemory	tools/UTNaoTool/TeamPacketWidget.cpp	/^void TeamPacketWidget::updateMemory(MemoryCache cache) {$/;"	f	class:TeamPacketWidget
updateMemory	tools/UTNaoTool/WorldGLWidget.cpp	/^void WorldGLWidget::updateMemory(MemoryCache cache){$/;"	f	class:WorldGLWidget
updateMemory	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::updateMemory(Memory* mem) {$/;"	f	class:WorldWindow
updateMemory	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::updateMemory(MemoryCache cache) {$/;"	f	class:WorldWindow
updateMemoryBlocks	build/include/tool/LogWindow.cpp	/^void LogWindow::updateMemoryBlocks(Memory *mem) {$/;"	f	class:LogWindow
updateMemoryBlocks	build/include/tool/MotionSimulation.cpp	/^void MotionSimulation::updateMemoryBlocks(){$/;"	f	class:MotionSimulation
updateMemoryBlocks	build/include/tool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::updateMemoryBlocks(){$/;"	f	class:SimulatedPlayer
updateMemoryBlocks	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::updateMemoryBlocks(Memory *mem) {$/;"	f	class:LogWindow
updateMemoryBlocks	tools/UTNaoTool/MotionSimulation.cpp	/^void MotionSimulation::updateMemoryBlocks(){$/;"	f	class:MotionSimulation
updateMemoryBlocks	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^void SimulatedPlayer::updateMemoryBlocks(){$/;"	f	class:SimulatedPlayer
updateModuleMemory	core/Module.cpp	/^void Module::updateModuleMemory(Memory *memory) {$/;"	f	class:Module
updateModuleMemory	core/python/PythonModule.cpp	/^void PythonModule::updateModuleMemory(Memory *memory) {$/;"	f	class:PythonModule
updateName	build/include/tool/KeyframeWidget.cpp	/^void KeyframeItem::updateName() {$/;"	f	class:KeyframeItem
updateName	tools/UTNaoTool/KeyframeWidget.cpp	/^void KeyframeItem::updateName() {$/;"	f	class:KeyframeItem
updateOdometry	core/MotionCore.cpp	/^void MotionCore::updateOdometry(){$/;"	f	class:MotionCore
updateOdometry	core/motion/rswalk2014/Walk2014Generator.cpp	/^void Walk2014Generator::updateOdometry(Odometry *odometry, bool isLeftSwingFoot){$/;"	f	class:Walk2014Generator
updateOutputs	build/include/tool/MotionSimulation.cpp	/^bool MotionSimulation::updateOutputs(){$/;"	f	class:MotionSimulation
updateOutputs	build/include/tool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::updateOutputs(WorldObjectBlock* simulationMem){$/;"	f	class:SimulatedPlayer
updateOutputs	tools/UTNaoTool/MotionSimulation.cpp	/^bool MotionSimulation::updateOutputs(){$/;"	f	class:MotionSimulation
updateOutputs	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^bool SimulatedPlayer::updateOutputs(WorldObjectBlock* simulationMem){$/;"	f	class:SimulatedPlayer
updatePercepts	core/InterpreterModule.cpp	/^void InterpreterModule::updatePercepts() {$/;"	f	class:InterpreterModule
updatePoseCheckpoints	build/include/tool/LogWidget.cpp	/^void LogWidget::updatePoseCheckpoints() {$/;"	f	class:LogWidget
updatePoseCheckpoints	tools/UTNaoTool/LogWidget.cpp	/^void LogWidget::updatePoseCheckpoints() {$/;"	f	class:LogWidget
updateProgress	build/include/tool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::updateProgress(ICProgress p, int count) {$/;"	f	class:IntrinsicCalibrationWidget
updateProgress	tools/UTNaoTool/IntrinsicCalibrationWidget.cpp	/^void IntrinsicCalibrationWidget::updateProgress(ICProgress p, int count) {$/;"	f	class:IntrinsicCalibrationWidget
updateRobotStatus	build/include/tool/FilesWindow.cpp	/^void FilesWindow::updateRobotStatus(bool alive) {$/;"	f	class:FilesWindow
updateRobotStatus	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::updateRobotStatus(int robot, ProcessExecutor::RobotStatus status) {$/;"	f	class:TeamConfigWindow
updateRobotStatus	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::updateRobotStatus(bool alive) {$/;"	f	class:FilesWindow
updateRobotStatus	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::updateRobotStatus(int robot, ProcessExecutor::RobotStatus status) {$/;"	f	class:TeamConfigWindow
updateSSH	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::updateSSH() {$/;"	f	class:TeamConfigWindow
updateSSH	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::updateSSH() {$/;"	f	class:TeamConfigWindow
updateSagittalAcceleration	core/motion/rswalk2014/BodyModel.hpp	/^      inline void updateSagittalAcceleration(float stepSize) {$/;"	f	class:BodyModel
updateSearchString	build/include/tool/LogWindow.cpp	/^void LogWindow::updateSearchString(){$/;"	f	class:LogWindow
updateSearchString	tools/UTNaoTool/LogWindow.cpp	/^void LogWindow::updateSearchString(){$/;"	f	class:LogWindow
updateSelectedIP	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::updateSelectedIP(QString address){$/;"	f	class:LogSelectWindow
updateSelectedIP	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::updateSelectedIP(QString address){$/;"	f	class:LogSelectWindow
updateSelection	build/include/tool/ImageWidget.cpp	/^void ImageWidget::updateSelection(int x, int y){$/;"	f	class:ImageWidget
updateSelection	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::updateSelection(int x, int y){$/;"	f	class:ImageWidget
updateSelectionOffsets	build/include/tool/annotations/Annotation.cpp	/^void Annotation::updateSelectionOffsets() {$/;"	f	class:Annotation
updateSelectionOffsets	tools/UTNaoTool/annotations/Annotation.cpp	/^void Annotation::updateSelectionOffsets() {$/;"	f	class:Annotation
updateSensorAngle	core/memory/SimEffectorBlock.h	/^  void updateSensorAngle(const double &cangle) {$/;"	f	struct:SimEffector
updateSimulation	build/include/tool/WorldWindow.cpp	/^void WorldWindow::updateSimulation() {$/;"	f	class:WorldWindow
updateSimulation	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::updateSimulation() {$/;"	f	class:WorldWindow
updateSimulationView	build/include/tool/WorldWindow.cpp	/^void WorldWindow::updateSimulationView() {$/;"	f	class:WorldWindow
updateSimulationView	tools/UTNaoTool/WorldWindow.cpp	/^void WorldWindow::updateSimulationView() {$/;"	f	class:WorldWindow
updateStatus	tools/color_classifier/src/classification_window.cpp	/^  void ClassificationWindow::updateStatus() {$/;"	f	class:color_classifier::ClassificationWindow
updateStatuses	build/include/tool/TeamPacketWidget.cpp	/^void TeamPacketWidget::updateStatuses() {$/;"	f	class:TeamPacketWidget
updateStatuses	tools/UTNaoTool/TeamPacketWidget.cpp	/^void TeamPacketWidget::updateStatuses() {$/;"	f	class:TeamPacketWidget
updateStepFrequency	core/motion/rswalk2014/BodyModel.hpp	/^      inline void updateStepFrequency() {$/;"	f	class:BodyModel
updateTable	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::updateTable(unsigned char *colorTable, int yIdx, int uIdx, int vIdx) {$/;"	f	class:VisionWindow
updateTable	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::updateTable(unsigned char *colorTable, int yIdx, int uIdx, int vIdx) {$/;"	f	class:VisionWindow
updateToolTip	build/include/tool/VisionWindow_Updates.cpp	/^void VisionWindow::updateToolTip(int image) {$/;"	f	class:VisionWindow
updateToolTip	tools/UTNaoTool/VisionWindow_Updates.cpp	/^void VisionWindow::updateToolTip(int image) {$/;"	f	class:VisionWindow
updateTransform	core/vision/ImageProcessor.cpp	/^void ImageProcessor::updateTransform()$/;"	f	class:ImageProcessor
updateTransforms	core/vision/VisionModule.cpp	/^void VisionModule::updateTransforms() {$/;"	f	class:VisionModule
updateUncertainties	core/opponents/UKF4.h	/^  NMatrix updateUncertainties;     \/\/ Update Uncertainty.          (A matrix)$/;"	m	class:UKF4
updateVirtualTime	core/communications/CommunicationModule.cpp	/^void CommunicationModule::updateVirtualTime(uint32_t received) {$/;"	f	class:CommunicationModule
updateXboxJoystick	build/include/tool/joystickxbox.cpp	/^bool updateXboxJoystick() {$/;"	f
updateXboxJoystick	tools/UTNaoTool/joystickxbox.cpp	/^bool updateXboxJoystick() {$/;"	f
update_exponential	tools/behaviorSim/cma.py	/^    def update_exponential(self, Z, eta, BDpair=None):$/;"	m	class:CMAEvolutionStrategy
update_measure	tools/behaviorSim/cma.py	/^    def update_measure(self):$/;"	m	class:NoiseHandler
update_mu	kalman_filters/include/kalman_filters/extended_kalman_filter.hpp	/^  StateVector update_mu(int index , double value)$/;"	f	class:ExtendedKalmanFilter
update_mu	kalman_filters/include/kalman_filters/linear_kalman_filter.hpp	/^  StateVector update_mu(int index , double value)$/;"	f	class:LinearKalmanFilter
updatewindow	lib/zlib/inflate.c	/^local int updatewindow(strm, out)$/;"	f
updating_	build/include/tool/WorldWindow.h	/^    bool updating_;$/;"	m	class:WorldWindow
updating_	tools/UTNaoTool/WorldWindow.h	/^    bool updating_;$/;"	m	class:WorldWindow
upfieldPenaltyFactor	core/memory/BehaviorParamBlock.h	/^  float upfieldPenaltyFactor;$/;"	m	struct:PassStrategy
uploadBinary	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadBinary() {$/;"	f	class:TeamConfigWindow
uploadBinary	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadBinary() {$/;"	f	class:TeamConfigWindow
uploadColor	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadColor() {$/;"	f	class:TeamConfigWindow
uploadColor	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadColor() {$/;"	f	class:TeamConfigWindow
uploadEverything	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadEverything() {$/;"	f	class:TeamConfigWindow
uploadEverything	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadEverything() {$/;"	f	class:TeamConfigWindow
uploadInterpreter	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadInterpreter() {$/;"	f	class:TeamConfigWindow
uploadInterpreter	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadInterpreter() {$/;"	f	class:TeamConfigWindow
uploadMotionVisionConfig	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadMotionVisionConfig() {$/;"	f	class:TeamConfigWindow
uploadMotionVisionConfig	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadMotionVisionConfig() {$/;"	f	class:TeamConfigWindow
uploadRobotConfig	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadRobotConfig() {$/;"	f	class:TeamConfigWindow
uploadRobotConfig	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadRobotConfig() {$/;"	f	class:TeamConfigWindow
uploadTime	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadTime() {$/;"	f	class:TeamConfigWindow
uploadTime	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadTime() {$/;"	f	class:TeamConfigWindow
uploadWireless	build/include/tool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadWireless() {$/;"	f	class:TeamConfigWindow
uploadWireless	tools/UTNaoTool/TeamConfigWindow.cpp	/^void TeamConfigWindow::uploadWireless() {$/;"	f	class:TeamConfigWindow
upperArmLength	core/common/RobotDimensions.h	/^    upperArmLength,$/;"	e	enum:RobotDimensions::__anon8
upperHeight	core/common/WorldObject.h	/^  float upperHeight; \/\/\/< The height of the upper part of this object.$/;"	m	class:WorldObject
upperLegLength	core/common/RobotDimensions.h	/^    upperLegLength,$/;"	e	enum:RobotDimensions::__anon8
upperhessenberg1norm	lib/alglib/alglibinternal.cpp	/^double upperhessenberg1norm(\/* Real    *\/ ae_matrix* a,$/;"	f	namespace:alglib_impl
upperhessenbergschurdecomposition	lib/alglib/alglibinternal.cpp	/^ae_bool upperhessenbergschurdecomposition(\/* Real    *\/ ae_matrix* h,$/;"	f	namespace:alglib_impl
upval	lib/lua/src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvaldesc	lib/lua/src/lparser.h	/^typedef struct upvaldesc {$/;"	s
upvaldesc	lib/lua/src/lparser.h	/^} upvaldesc;$/;"	t	typeref:struct:upvaldesc
upvals	lib/lua/src/lobject.h	/^  UpVal *upvals[1];$/;"	m	struct:LClosure
upvalue	lib/lua/src/lobject.h	/^  TValue upvalue[1];$/;"	m	struct:CClosure
upvalues	lib/lua/src/lobject.h	/^  TString **upvalues;  \/* upvalue names *\/$/;"	m	struct:Proto
upvalues	lib/lua/src/lparser.h	/^  upvaldesc upvalues[LUAI_MAXUPVALUES];  \/* upvalues *\/$/;"	m	struct:FuncState
usableKicks	core/memory/BehaviorParamBlock.h	/^  bool usableKicks[NUM_KICKS];$/;"	m	struct:CornerKickStrategy
usableKicks	core/memory/BehaviorParamBlock.h	/^  bool usableKicks[NUM_KICKS];$/;"	m	struct:KickStrategy
usage	bin/copy_robot	/^  usage  = 'copy_robot [ip] interface [interface]'$/;"	v
usage	build/copy_robot	/^  usage  = 'copy_robot [ip] interface [interface]'$/;"	v
usage	install/copy_wpa.py	/^  usage = 'setup_robotv4 currentIP'$/;"	v
usage	install/fix_autoload.py	/^usage = 'fix_autoload ip'$/;"	v
usage	lib/lua/src/luac.c	/^static void usage(const char* message)$/;"	f	file:
use	tools/behaviorSim/cma.py	/^    import matplotlib.pylab as pylab  # also: use ipython -pylab$/;"	i
use	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
useAbsTarget	core/memory/BehaviorBlock.h	/^  bool useAbsTarget;$/;"	m	struct:BehaviorBlock
useDottedPath	core/memory/BehaviorBlock.h	/^  bool useDottedPath;$/;"	m	struct:BehaviorBlock
useFieldLineWidth	build/include/tool/UTOpenGL/BasicGL.h	/^  void useFieldLineWidth() { glLineWidth(LINE_WIDTH\/FACT); };$/;"	f	class:BasicGL
useFieldLineWidth	tools/UTNaoTool/UTOpenGL/BasicGL.h	/^  void useFieldLineWidth() { glLineWidth(LINE_WIDTH\/FACT); };$/;"	f	class:BasicGL
useForwardL	core/motion/rswalk2014/WalkCycle.hpp	/^      float useForwardL, useForwardR, useLeft, useTurn;$/;"	m	class:WalkCycle
useForwardR	core/motion/rswalk2014/WalkCycle.hpp	/^      float useForwardL, useForwardR, useLeft, useTurn;$/;"	m	class:WalkCycle
useHorzAngle	core/vision/structures/VisionParams.h	/^    bool useHorzAngle[NUM_COLORS];$/;"	m	struct:VisionParams
useHorzPos	core/vision/structures/VisionParams.h	/^    bool useHorzPos[NUM_COLORS];$/;"	m	struct:VisionParams
useHorzWidth	core/vision/structures/VisionParams.h	/^    bool useHorzWidth[NUM_COLORS];$/;"	m	struct:VisionParams
useKeyframes_	build/include/tool/MotionGLWidget.h	/^  bool useKeyframes_;$/;"	m	class:MotionGLWidget
useKeyframes_	tools/UTNaoTool/MotionGLWidget.h	/^  bool useKeyframes_;$/;"	m	class:MotionGLWidget
useLeft	core/common/RobotCalibration.h	/^    bool useLeft;$/;"	m	class:RobotCalibration
useLeft	core/motion/rswalk2014/WalkCycle.hpp	/^      float useForwardL, useForwardR, useLeft, useTurn;$/;"	m	class:WalkCycle
useOffFieldLocalization	core/VisionCore.cpp	/^const bool VisionCore::useOffFieldLocalization = false;$/;"	m	class:VisionCore	file:
useOffFieldLocalization	core/VisionCore.h	/^  static const bool useOffFieldLocalization;$/;"	m	class:VisionCore
useSimColorTable	core/vision/VisionModule.cpp	/^bool VisionModule::useSimColorTable() {$/;"	f	class:VisionModule
useTarget	core/memory/BehaviorBlock.h	/^  bool useTarget;$/;"	m	struct:BehaviorBlock
useTargetArc	core/memory/BehaviorBlock.h	/^  bool useTargetArc;$/;"	m	struct:BehaviorBlock
useTargetBearing	core/memory/BehaviorBlock.h	/^  bool useTargetBearing;$/;"	m	struct:BehaviorBlock
useTurn	core/motion/rswalk2014/WalkCycle.hpp	/^      float useForwardL, useForwardR, useLeft, useTurn;$/;"	m	class:WalkCycle
useVertAngle	core/vision/structures/VisionParams.h	/^    bool useVertAngle[NUM_COLORS];$/;"	m	struct:VisionParams
useVertPos	core/vision/structures/VisionParams.h	/^    bool useVertPos[NUM_COLORS];$/;"	m	struct:VisionParams
useVertWidth	core/vision/structures/VisionParams.h	/^    bool useVertWidth[NUM_COLORS];$/;"	m	struct:VisionParams
use_akima_spline	core/motion/KickParameters.h	/^  bool use_akima_spline;$/;"	m	struct:KickParameters
use_akima_spline_	core/math/Spline3D.h	/^  bool use_akima_spline_;$/;"	m	class:Spline3D
use_all_blocks_	core/memory/Logger.h	/^  bool using_buffers_, use_all_blocks_;$/;"	m	class:Logger
use_com_kick_	build/include/tool/MotionSimulation.h	/^  bool use_com_kick_;$/;"	m	class:MotionSimulation
use_com_kick_	core/MotionCore.h	/^  bool use_com_kick_;$/;"	m	class:MotionCore
use_com_kick_	tools/UTNaoTool/MotionSimulation.h	/^  bool use_com_kick_;$/;"	m	class:MotionSimulation
use_sent_solutions	tools/behaviorSim/cma.py	/^use_sent_solutions = True  # 5-30% CPU slower, particularly for large lambda, will be mandatory soon$/;"	v
use_shared_memory_	core/memory/Memory.h	/^  bool use_shared_memory_;$/;"	m	class:Memory
use_stance_spline	core/motion/KickParameters.h	/^  bool use_stance_spline;$/;"	m	struct:KickParameters
usec	core/motion/rswalk2014/utils/Timer.hpp	/^      float usec(const timeval& t) {$/;"	f	class:Timer
used	core/vision/structures/RobotCandidate.h	/^  bool used;  $/;"	m	struct:RobotCandidate
used	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
usedGround	data/ballfit.py	/^      usedGround = True$/;"	v
usedGround	data/ballfit.py	/^    usedGround = False$/;"	v
usedGround	data/goalfit.py	/^      usedGround = True$/;"	v
usedGround	data/goalfit.py	/^    usedGround = False$/;"	v
userSpecified	interfaces/sim_spark/Random.h	/^   float userSpecified(                \/\/ User-Specified Distribution$/;"	f	class:Random
ush	lib/zlib/zutil.h	/^typedef unsigned short ush;$/;"	t
ushf	lib/zlib/zutil.h	/^typedef ush FAR ushf;$/;"	t
usingLongKey	lib/yaml-cpp/src/emitterstate.h	/^			bool usingLongKey;$/;"	m	struct:YAML::EmitterState::Group
using_buffers_	core/memory/LogReader.h	/^    bool using_buffers_;$/;"	m	class:LogReader
using_buffers_	core/memory/Logger.h	/^  bool using_buffers_, use_all_blocks_;$/;"	m	class:Logger
ut	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  inline void ut(MapFunction f, InArrayType X, ControlType u, InCovType R, OutType& y, OutArrayType& Y, OutArrayType& Y1, OutCovType& P)$/;"	f	class:UnscentedKalmanFilter
utJointToRSJoint	core/motion/rswalk2014/RSWalkModule2014.h	/^        int utJointToRSJoint[NUM_JOINTS];$/;"	m	class:RSWalkModule2014
utSensorToRSSensor	core/motion/rswalk2014/RSWalkModule2014.h	/^	int utSensorToRSSensor[NUM_SENSORS];	$/;"	m	class:RSWalkModule2014
utf16be	lib/yaml-cpp/src/stream.h	/^		enum CharacterSet {utf8, utf16le, utf16be, utf32le, utf32be};$/;"	e	enum:YAML::Stream::CharacterSet
utf16le	lib/yaml-cpp/src/stream.h	/^		enum CharacterSet {utf8, utf16le, utf16be, utf32le, utf32be};$/;"	e	enum:YAML::Stream::CharacterSet
utf32be	lib/yaml-cpp/src/stream.h	/^		enum CharacterSet {utf8, utf16le, utf16be, utf32le, utf32be};$/;"	e	enum:YAML::Stream::CharacterSet
utf32le	lib/yaml-cpp/src/stream.h	/^		enum CharacterSet {utf8, utf16le, utf16be, utf32le, utf32be};$/;"	e	enum:YAML::Stream::CharacterSet
utf8	lib/yaml-cpp/src/stream.h	/^		enum CharacterSet {utf8, utf16le, utf16be, utf32le, utf32be};$/;"	e	enum:YAML::Stream::CharacterSet
util	core/python/behaviors/win.py	/^import memory, pose, commands, head, util, cfgpose, cfgstiff, mem_objects, core, random, numpy, math$/;"	i
util	core/python/pose.py	/^import task, util, state_machine$/;"	i
util	core/python/pose.py	/^import util$/;"	i
util	core/python/state_machine.py	/^import util, UTdebug$/;"	i
util	core/python/task.py	/^import util, UTdebug, core$/;"	i
utype	core/common/WorldObject.h	/^  WorldObjectType type, utype;$/;"	m	class:WorldObject
uv	lib/lua/src/lobject.h	/^  } uv;$/;"	m	union:Udata	typeref:struct:Udata::__anon89
uv	lib/lua/src/lstate.h	/^  struct UpVal uv;$/;"	m	union:GCObject	typeref:struct:GCObject::UpVal
uvalue	lib/lua/src/lobject.h	/^#define uvalue(/;"	d
uvhead	lib/lua/src/lstate.h	/^  UpVal uvhead;  \/* head of double-linked list of all open upvalues *\/$/;"	m	struct:global_State
v	build/include/tool/annotations/AnnotationAnalyzer.h	/^    unsigned char v;$/;"	m	struct:YUV
v	core/common/ColorConversion.h	/^    int v;$/;"	m	struct:color::Yuv422
v	core/common/ColorConversion.h	/^    int v;$/;"	m	struct:color::Yuv444
v	core/common/ColorSpaces.h	/^  int v;$/;"	m	struct:YUV422
v	core/common/ColorSpaces.h	/^  int v;$/;"	m	struct:YUV444
v	core/math/Vector.h	/^  V v[n];$/;"	m	struct:VectorData
v	core/math/YaMatrix.h	/^  std::vector<YaVector<V> > v;$/;"	m	class:YaMatrix
v	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   uint8_t v;$/;"	m	struct:pixelValues
v	core/vision/structures/YUV.h	/^  uint8_t v;$/;"	m	struct:YUV
v	lib/alglib/alglibmisc.h	/^    double v;$/;"	m	struct:alglib_impl::__anon24
v	lib/alglib/integration.h	/^    double v;$/;"	m	struct:alglib_impl::__anon55
v	lib/lua/src/lobject.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal
v	lib/lua/src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	lib/lua/src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
v	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    unsigned char v;$/;"	m	struct:YUV
v	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    uint8_t v;$/;"	m	struct:color_classifier::Yuv
v	vision_testing/src/vision_testing.cpp	/^  unsigned char v;$/;"	m	class:HSV	file:
v0	lib/alglib/optimization.h	/^    double v0;$/;"	m	struct:alglib_impl::__anon79
v1	lib/alglib/optimization.h	/^    double v1;$/;"	m	struct:alglib_impl::__anon79
v2	lib/alglib/optimization.h	/^    double v2;$/;"	m	struct:alglib_impl::__anon79
v4l2_exposure_auto_type	core/imageCapture/V4L2Constants.h	/^enum  v4l2_exposure_auto_type {$/;"	g
v4l2_power_line_frequency	core/imageCapture/V4L2Constants.h	/^enum v4l2_power_line_frequency {$/;"	g
v_nan	lib/alglib/ap.h	/^    double v_nan;$/;"	m	struct:alglib_impl::__anon35
v_neginf	lib/alglib/ap.h	/^    double v_neginf;$/;"	m	struct:alglib_impl::__anon35
v_posinf	lib/alglib/ap.h	/^    double v_posinf;$/;"	m	struct:alglib_impl::__anon35
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n)$/;"	f	class:alglib
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, alglib::complex alpha)$/;"	f	class:alglib
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, double alpha)$/;"	f	class:alglib
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(alglib::complex *vdst, const alglib::complex *vsrc, ae_int_t N)$/;"	f	class:alglib
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(alglib::complex *vdst, const alglib::complex *vsrc, ae_int_t N, alglib::complex alpha)$/;"	f	class:alglib
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(alglib::complex *vdst, const alglib::complex *vsrc, ae_int_t N, double alpha)$/;"	f	class:alglib
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(double *vdst,  ae_int_t stride_dst, const double *vsrc,  ae_int_t stride_src, ae_int_t n)$/;"	f	class:alglib
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(double *vdst,  ae_int_t stride_dst, const double *vsrc,  ae_int_t stride_src, ae_int_t n, double alpha)$/;"	f	class:alglib
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(double *vdst, const double *vsrc, ae_int_t N)$/;"	f	class:alglib
vadd	lib/alglib/ap.cpp	/^void alglib::vadd(double *vdst, const double *vsrc, ae_int_t N, double alpha)$/;"	f	class:alglib
val	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	const T& val() const { return m_val; }$/;"	f	class:fadbad::FTypeName
val	lib/zlib/inftrees.h	/^    unsigned short val;         \/* offset in table or code value *\/$/;"	m	struct:__anon137
valid	core/common/Enum.h	/^  bool valid(size_t e) { return e < names.size(); } $/;"	f	class:EnumName
valid	core/vision/structures/BallCandidate.h	/^  bool valid;$/;"	m	struct:BallCandidate
validIndex	core/motion/rswalk2014/types/BBox.hpp	/^   bool validIndex(const Point p) const$/;"	f	struct:BBox
validInterfaces	bin/compile	/^validInterfaces = ['nao','motion','vision','memory_test','tool','sim','core','pythonswig','behaviorsim','headless']$/;"	v
validInterfaces	bin/copy_robot	/^validInterfaces = ['nao','motion','vision','python', 'memory_test','scripts','color_table','motion_file','config_file','kicks','autoload','simple_config','wireless','time']$/;"	v
validInterfaces	build/compile	/^validInterfaces = ['nao','motion','vision','memory_test','tool','sim','core','pythonswig','behaviorsim','headless']$/;"	v
validInterfaces	build/copy_robot	/^validInterfaces = ['nao','motion','vision','python', 'memory_test','scripts','color_table','motion_file','config_file','kicks','autoload','simple_config','wireless','time']$/;"	v
validKickRegion	core/memory/BehaviorBlock.h	/^  bool validKickRegion[NUM_KICK_REGIONS_X][NUM_KICK_REGIONS_Y];$/;"	m	struct:BehaviorBlock
valid_length_total	core/vision/Union_find.h	/^		int valid_length_total;$/;"	m	class:MergeBlob
validateHeader	core/memory/MemoryBlock.cpp	/^bool MemoryBlock::validateHeader(const MemoryBlockHeader& theader) {$/;"	f	class:MemoryBlock
validateHeader	core/memory/MemoryBlock.cpp	/^bool MemoryBlock::validateHeader(const StreamBuffer& thbuffer) {$/;"	f	class:MemoryBlock
valiswhite	lib/lua/src/lgc.h	/^#define valiswhite(/;"	d
value	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^    QDoubleSpinBox* value;$/;"	m	class:CalibrationItem	file:
value	core/common/ExponentialFilter.h	/^  float value;$/;"	m	class:ExponentialFilter
value	lib/lua/src/lobject.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon90
value	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	struct is_scalar_convertible { enum { value = is_numeric<T>::value }; };$/;"	e	enum:YAML::is_scalar_convertible::__anon101
value	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	template<> struct is_scalar_convertible<_Null> { enum { value = true }; };$/;"	e	enum:YAML::is_scalar_convertible::__anon104
value	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	template<> struct is_scalar_convertible<bool> { enum { value = true }; };$/;"	e	enum:YAML::is_scalar_convertible::__anon103
value	lib/yaml-cpp/include/yaml-cpp/conversion.h	/^	template<> struct is_scalar_convertible<std::string> { enum { value = true }; };$/;"	e	enum:YAML::is_scalar_convertible::__anon102
value	lib/yaml-cpp/include/yaml-cpp/emitfromevents.h	/^		struct State { enum value { WaitingForSequenceEntry, WaitingForKey, WaitingForValue }; };$/;"	g	struct:YAML::EmitFromEvents::State
value	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		int value;$/;"	m	struct:YAML::_Indent
value	lib/yaml-cpp/include/yaml-cpp/emittermanip.h	/^		struct Type { enum value { Verbatim, PrimaryHandle, NamedHandle }; };$/;"	g	struct:YAML::_Tag::Type
value	lib/yaml-cpp/include/yaml-cpp/node.h	/^	struct NodeType { enum value { Null, Scalar, Sequence, Map }; };$/;"	g	struct:YAML::NodeType
value	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^		enum { value = false };$/;"	e	enum:YAML::is_index_type_with_check::__anon107
value	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^		enum { value = false };$/;"	e	enum:YAML::is_same_type::__anon105
value	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^		enum { value = true };$/;"	e	enum:YAML::is_same_type::__anon106
value	lib/yaml-cpp/include/yaml-cpp/nodeutil.h	/^	template <> struct is_index_type_with_check<std::size_t, false> { enum { value = true }; };$/;"	e	enum:YAML::is_index_type_with_check::__anon108
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	struct is_numeric { enum { value = false }; };$/;"	e	enum:YAML::is_numeric::__anon109
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <__int64> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon118
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <char> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon110
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <double> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon123
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <float> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon122
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <int> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon112
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <long double> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon124
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <long int> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon114
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <long long> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon120
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <short int> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon116
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned __int64> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon119
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned char> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon111
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned int> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon113
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned long int> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon115
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned long long> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon121
value	lib/yaml-cpp/include/yaml-cpp/traits.h	/^	template <> struct is_numeric <unsigned short int> { enum { value = true }; };$/;"	e	enum:YAML::is_numeric::__anon117
value	lib/yaml-cpp/src/collectionstack.h	/^		enum value { None, BlockMap, BlockSeq, FlowMap, FlowSeq, CompactMap };$/;"	g	struct:YAML::CollectionType
value	lib/yaml-cpp/src/tag.h	/^		std::string handle, value;$/;"	m	struct:YAML::Tag
value	lib/yaml-cpp/src/token.h	/^		std::string value;$/;"	m	struct:YAML::Token
value	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^    QDoubleSpinBox* value;$/;"	m	class:CalibrationItem	file:
values	build/include/tool/StateWindow.h	/^    QLabel* values;$/;"	m	class:StateWindow
values	tools/UTNaoTool/StateWindow.h	/^    QLabel* values;$/;"	m	class:StateWindow
values_	core/common/RobotDimensions.h	/^  float values_[NUM_DIMENSIONS];$/;"	m	class:RobotDimensions
values_	core/memory/JointBlock.h	/^  float values_[NUM_JOINTS];$/;"	m	struct:JointBlock
values_	core/memory/LEDBlock.h	/^  float values_[NUM_LEDS];$/;"	m	struct:LEDBlock
values_	core/memory/SensorBlock.h	/^  float values_[NUM_SENSORS];$/;"	m	struct:SensorBlock
valuetofreeze	lib/alglib/optimization.h	/^    double valuetofreeze;$/;"	m	struct:alglib_impl::__anon79
vannotations_	build/include/tool/annotations/AnnotationGroup.h	/^        std::vector<Annotation*> vannotations_;$/;"	m	class:AnnotationGroup
vannotations_	tools/UTNaoTool/annotations/AnnotationGroup.h	/^        std::vector<Annotation*> vannotations_;$/;"	m	class:AnnotationGroup
var	core/motion/rswalk2014/perception/kinematics/CKF.hpp	/^      Eigen::Matrix<float, 4, 4> var;$/;"	m	class:CKF
var	core/motion/rswalk2014/types/AbsCoord.hpp	/^   Eigen::Matrix<float, 3, 3> var;$/;"	m	struct:AbsCoord
var	core/motion/rswalk2014/types/RRCoord.hpp	/^   Eigen::Matrix<float, 3, 3> var;$/;"	m	struct:RRCoord
variabletofreeze	lib/alglib/optimization.h	/^    ae_int_t variabletofreeze;$/;"	m	struct:alglib_impl::__anon79
variance	core/opponents/UKF4.cpp	/^float UKF4::variance(int Xi){$/;"	f	class:UKF4
varname	lib/lua/src/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar
varpool	lib/alglib/dataanalysis.h	/^    ae_vector varpool;$/;"	m	struct:alglib_impl::__anon41
vblocks_	build/include/tool/calibration/JointCalibrator.h	/^    VisionBlocks* vblocks_;$/;"	m	class:JointCalibrator
vblocks_	core/vision/Classifier.h	/^  const VisionBlocks& vblocks_;$/;"	m	class:Classifier
vblocks_	core/vision/ImageProcessor.h	/^    VisionBlocks& vblocks_;$/;"	m	class:ImageProcessor
vblocks_	core/vision/ObjectDetector.h	/^    VisionBlocks& vblocks_;$/;"	m	class:ObjectDetector
vblocks_	core/vision/VisionModule.h	/^  VisionBlocks* vblocks_;$/;"	m	class:VisionModule
vblocks_	tools/UTNaoTool/calibration/JointCalibrator.h	/^    VisionBlocks* vblocks_;$/;"	m	class:JointCalibrator
vcnt	lib/alglib/optimization.h	/^    ae_int_t vcnt;$/;"	m	struct:alglib_impl::__anon77
vcomponent	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   vcomponent,$/;"	e	enum:__anon13
vcore_	build/include/tool/MotionSimulation.h	/^  VisionCore* vcore_;$/;"	m	class:MotionSimulation
vcore_	tools/UTNaoTool/MotionSimulation.h	/^  VisionCore* vcore_;$/;"	m	class:MotionSimulation
vcorr	lib/alglib/optimization.h	/^    ae_matrix vcorr;$/;"	m	struct:alglib_impl::__anon77
vdotproduct	lib/alglib/ap.cpp	/^alglib::complex alglib::vdotproduct(const alglib::complex *v0, ae_int_t stride0, const char *conj0, const alglib::complex *v1, ae_int_t stride1, const char *conj1, ae_int_t n)$/;"	f	class:alglib
vdotproduct	lib/alglib/ap.cpp	/^alglib::complex alglib::vdotproduct(const alglib::complex *v1, const alglib::complex *v2, ae_int_t N)$/;"	f	class:alglib
vdotproduct	lib/alglib/ap.cpp	/^double alglib::vdotproduct(const double *v0, ae_int_t stride0, const double *v1, ae_int_t stride1, ae_int_t n)$/;"	f	class:alglib
vdotproduct	lib/alglib/ap.cpp	/^double alglib::vdotproduct(const double *v1, const double *v2, ae_int_t N)$/;"	f	class:alglib
vec	core/motion/rswalk2014/types/AbsCoord.hpp	/^   Eigen::Vector3f vec;$/;"	m	struct:AbsCoord
vec	core/motion/rswalk2014/types/RRCoord.hpp	/^   Eigen::Vector3f vec;$/;"	m	struct:RRCoord
vec	lib/alglib/ap.h	/^    alglib_impl::ae_vector vec;$/;"	m	class:alglib::ae_vector_wrapper
vec4	core/motion/rswalk2014/utils/matrix_helpers.hpp	/^vec4(T a, T b, T c, T d) {$/;"	f
vec4	core/motion/rswalk2014/utils/matrix_helpers.hpp	/^vec4(const T a[]) {$/;"	f
vec_is_default	tools/behaviorSim/cma.py	/^        def vec_is_default(vec, default_val=0):$/;"	f	function:GenoPheno.__init__
vectoridxabsmax	lib/alglib/alglibinternal.cpp	/^ae_int_t vectoridxabsmax(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
vectornorm2	lib/alglib/alglibinternal.cpp	/^double vectornorm2(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
vel	core/memory/OpponentBlock.h	/^  Point2D loc, sd, vel;$/;"	m	struct:OpponentModel
vel_	build/include/tool/simulation/RobotMovementSimulator.h	/^    Pose2D vel_, maxVel_;$/;"	m	class:RobotMovementSimulator
vel_	tools/UTNaoTool/simulation/RobotMovementSimulator.h	/^    Pose2D vel_, maxVel_;$/;"	m	class:RobotMovementSimulator
vel_decay_rate	core/opponents/UKF4.h	/^  float vel_decay_rate;$/;"	m	struct:SmallUKF4Params
velocity_	build/include/tool/RobotControllerWidget.h	/^    Eigen::Vector3f velocity_, command_;$/;"	m	class:RobotControllerWidget
velocity_	tools/UTNaoTool/RobotControllerWidget.h	/^    Eigen::Vector3f velocity_, command_;$/;"	m	class:RobotControllerWidget
velocity_var	core/motion/rswalk2014/perception/kinematics/CKF.cpp	/^static const float velocity_var = SQUARE(DEG2RAD(5.f)); \/\/1 $/;"	v	file:
verbose	lib/zlib/zutil.c	/^#    define verbose /;"	d	file:
verifyAll	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyAll(bool verbose) {$/;"	f	class:FilesWindow
verifyAll	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyAll(bool verbose) {$/;"	f	class:FilesWindow
verifyAutoloadFile	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyAutoloadFile(bool verbose) {$/;"	f	class:FilesWindow
verifyAutoloadFile	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyAutoloadFile(bool verbose) {$/;"	f	class:FilesWindow
verifyBinary	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyBinary(bool verbose) {$/;"	f	class:FilesWindow
verifyBinary	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyBinary(QString ip, bool verbose) {$/;"	f	class:PE
verifyBinary	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyBinary(bool verbose) {$/;"	f	class:FilesWindow
verifyBinary	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyBinary(QString ip, bool verbose) {$/;"	f	class:PE
verifyBinaryOld	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyBinaryOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyBinaryOld	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyBinaryOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyChecksums	bin/copy_robot	/^def verifyChecksums(ip, sourcePath, destPath, oldVerify=False):$/;"	f
verifyChecksums	build/copy_robot	/^def verifyChecksums(ip, sourcePath, destPath, oldVerify=False):$/;"	f
verifyChecksumsOld	bin/copy_robot	/^def verifyChecksumsOld(ip, sourcePath, destPath):$/;"	f
verifyChecksumsOld	build/copy_robot	/^def verifyChecksumsOld(ip, sourcePath, destPath):$/;"	f
verifyColorTable	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyColorTable(bool verbose) {$/;"	f	class:FilesWindow
verifyColorTable	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyColorTable(QString ip, bool verbose) {$/;"	f	class:PE
verifyColorTable	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyColorTable(bool verbose) {$/;"	f	class:FilesWindow
verifyColorTable	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyColorTable(QString ip, bool verbose) {$/;"	f	class:PE
verifyColorTableOld	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyColorTableOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyColorTableOld	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyColorTableOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyConfigFiles	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyConfigFiles(bool verbose) {$/;"	f	class:FilesWindow
verifyConfigFiles	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyConfigFiles(QString ip, bool verbose) {$/;"	f	class:PE
verifyConfigFiles	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyConfigFiles(bool verbose) {$/;"	f	class:FilesWindow
verifyConfigFiles	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyConfigFiles(QString ip, bool verbose) {$/;"	f	class:PE
verifyConfigFilesOld	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyConfigFilesOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyConfigFilesOld	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyConfigFilesOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyEverything	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyEverything(bool verbose) {$/;"	f	class:FilesWindow
verifyEverything	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyEverything(bool verbose) {$/;"	f	class:FilesWindow
verifyInterface	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyInterface(bool verbose) {$/;"	f	class:FilesWindow
verifyInterface	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyInterface(bool verbose) {$/;"	f	class:FilesWindow
verifyLua	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyLua(bool verbose) {$/;"	f	class:FilesWindow
verifyLua	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyLua(QString ip, bool verbose) {$/;"	f	class:PE
verifyLua	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyLua(bool verbose) {$/;"	f	class:FilesWindow
verifyLua	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyLua(QString ip, bool verbose) {$/;"	f	class:PE
verifyLuaOld	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyLuaOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyLuaOld	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyLuaOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyMotion	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyMotion(bool verbose) {$/;"	f	class:FilesWindow
verifyMotion	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyMotion(bool verbose) {$/;"	f	class:FilesWindow
verifyMotionFiles	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyMotionFiles(bool verbose) {$/;"	f	class:FilesWindow
verifyMotionFiles	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyMotionFiles(QString ip, bool verbose) {$/;"	f	class:PE
verifyMotionFiles	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyMotionFiles(bool verbose) {$/;"	f	class:FilesWindow
verifyMotionFiles	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyMotionFiles(QString ip, bool verbose) {$/;"	f	class:PE
verifyMotionFilesOld	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyMotionFilesOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyMotionFilesOld	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyMotionFilesOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyPassword	install/common.py	/^def verifyPassword(password):$/;"	f
verifyPassword	install/install	/^from common import runLocalCommand, verifyPassword$/;"	i
verifyPassword	install/install_lab	/^from common import runLocalCommand, verifyPassword$/;"	i
verifyPython	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyPython(bool verbose) {$/;"	f	class:FilesWindow
verifyPython	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyPython(QString ip, bool verbose) {$/;"	f	class:PE
verifyPython	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyPython(bool verbose) {$/;"	f	class:FilesWindow
verifyPython	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyPython(QString ip, bool verbose) {$/;"	f	class:PE
verifyPythonOld	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyPythonOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyPythonOld	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyPythonOld(QString ip, bool verbose) {$/;"	f	class:PE
verifyRobotConfig	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyRobotConfig(QString ip, RobotConfig config, bool verbose) {$/;"	f	class:PE
verifyRobotConfig	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyRobotConfig(QString ip, RobotConfig config, bool verbose) {$/;"	f	class:PE
verifyRobotConfigOld	build/include/tool/ProcessExecutor.cpp	/^void PE::verifyRobotConfigOld(QString ip, RobotConfig config, bool verbose) {$/;"	f	class:PE
verifyRobotConfigOld	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::verifyRobotConfigOld(QString ip, RobotConfig config, bool verbose) {$/;"	f	class:PE
verifySimpleConfig	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifySimpleConfig(bool verbose) {$/;"	f	class:FilesWindow
verifySimpleConfig	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifySimpleConfig(bool verbose) {$/;"	f	class:FilesWindow
verifyVision	build/include/tool/FilesWindow.cpp	/^void FilesWindow::verifyVision(bool verbose) {$/;"	f	class:FilesWindow
verifyVision	tools/UTNaoTool/FilesWindow.cpp	/^void FilesWindow::verifyVision(bool verbose) {$/;"	f	class:FilesWindow
versatileOptions	tools/behaviorSim/cma.py	/^    def versatileOptions():$/;"	m	class:Options
version	core/communications/RoboCupGameControlData.h	/^  uint16_t version;             \/\/ version of the data structure$/;"	m	struct:RoboCupGameControlData
version	core/communications/RoboCupGameControlData.h	/^  uint8_t version;$/;"	m	struct:RoboCupGameControlReturnData
version	core/communications/SPLCoachMessage.h	/^  uint8_t version;       \/\/ SPL_COACH_MESSAGE_STRUCT_VERSION$/;"	m	struct:SPLCoachMessage
version	core/communications/SPLStandardMessage.h	/^  uint8_t version;       \/\/ has to be set to SPL_STANDARD_MESSAGE_STRUCT_VERSION$/;"	m	struct:SPLStandardMessage
version	core/memory/MemoryBlock.h	/^  unsigned int version;$/;"	m	struct:MemoryBlockHeader
version	lib/yaml-cpp/src/directives.h	/^		Version version;$/;"	m	struct:YAML::Directives
vertAngleLimit	core/vision/structures/VisionParams.h	/^    float vertAngleLimit[NUM_COLORS];$/;"	m	struct:VisionParams
vertLines	tools/testStepSide.py	/^vertLines = []$/;"	v
vertPosLimit	core/vision/structures/VisionParams.h	/^    int vertPosLimit[NUM_COLORS];$/;"	m	struct:VisionParams
vertSeparation	core/vision/structures/VisionParams.h	/^    int vertSeparation[NUM_COLORS];$/;"	m	struct:VisionParams
vertValA	core/vision/structures/VisionParams.h	/^    int vertValA[NUM_COLORS];$/;"	m	struct:VisionParams
vertValB	core/vision/structures/VisionParams.h	/^    int vertValB[NUM_COLORS];$/;"	m	struct:VisionParams
vertValThreshold	core/vision/structures/VisionParams.h	/^    int vertValThreshold[NUM_COLORS];$/;"	m	struct:VisionParams
vertWidthLimit	core/vision/structures/VisionParams.h	/^    float vertWidthLimit[NUM_COLORS];$/;"	m	struct:VisionParams
vertcat	core/common/NMatrix.cpp	/^NMatrix vertcat(NMatrix a, NMatrix b)$/;"	f
vertical	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   vertical,$/;"	e	enum:orientation_t
verticalMergePredicate	core/vision/structures/FocusArea.cpp	/^bool FocusArea::verticalMergePredicate(const FocusArea& left, const FocusArea& right) {$/;"	f	class:FocusArea
vertices	build/include/tool/annotations/EllipseSelection.h	/^        std::vector<Point> vertices;$/;"	m	class:EllipseSelection
vertices	build/include/tool/annotations/PolygonSelection.h	/^        std::vector<Point> vertices;$/;"	m	class:PolygonSelection
vertices	tools/UTNaoTool/annotations/EllipseSelection.h	/^        std::vector<Point> vertices;$/;"	m	class:EllipseSelection
vertices	tools/UTNaoTool/annotations/PolygonSelection.h	/^        std::vector<Point> vertices;$/;"	m	class:PolygonSelection
vertices_	core/math/Polygon.h	/^        std::vector<Point> vertices_;$/;"	m	class:Polygon
vflip_	core/imageCapture/NaoCamera.h	/^    bool vflip_, hflip_;$/;"	m	class:NaoCamera
videoDeviceFd	core/imageCapture/NaoCamera.h	/^  int videoDeviceFd;$/;"	m	class:NaoCamera
virtual_base	core/common/RobotInfo.h	/^    virtual_base,$/;"	e	enum:BodyPart::Part
visOnly	build/include/tool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
visOnly	build/include/tool/UTNaoTool.cpp	/^  bool visOnly = false;$/;"	m	namespace:__anon4	file:
visOnly	tools/UTNaoTool/ToolConfig.h	/^    bool onDemand, locOnly, visOnly, locAndVis, coreBehaviors;$/;"	m	class:ToolConfig
visOnly	tools/UTNaoTool/UTNaoTool.cpp	/^  bool visOnly = false;$/;"	m	namespace:__anon142	file:
visionBearing	core/common/WorldObject.h	/^  AngRad visionBearing; \/\/\/< The relative angle between this object and the robot estimated directly by vision.$/;"	m	class:WorldObject
visionConfidence	core/common/WorldObject.h	/^  float visionConfidence; \/\/\/< The confidence of the visionDistance and visionBearing estimates.$/;"	m	class:WorldObject
visionCore_	build/include/tool/UTMainWnd.h	/^  VisionCore* visionCore_;$/;"	m	class:UTMainWnd
visionCore_	tools/UTNaoTool/UTMainWnd.h	/^  VisionCore* visionCore_;$/;"	m	class:UTMainWnd
visionDeltaLabels	build/include/tool/SensorWindow.h	/^  QLabel* visionDeltaLabels;$/;"	m	class:SensorWindow
visionDeltaLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* visionDeltaLabels;$/;"	m	class:SensorWindow
visionDistance	core/common/WorldObject.h	/^  float visionDistance; \/\/\/< Distance from the object to the robot, as estimated directly by vision.$/;"	m	class:WorldObject
visionElevation	core/common/WorldObject.h	/^  float visionElevation; \/\/\/< not used$/;"	m	class:WorldObject
visionErrorFactor	build/include/tool/simulation/SimulatedPlayer.h	/^  float visionErrorFactor;\/\/0.0;$/;"	m	class:SimulatedPlayer
visionErrorFactor	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  float visionErrorFactor;\/\/0.0;$/;"	m	class:SimulatedPlayer
visionGroupToggled	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::visionGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
visionGroupToggled	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::visionGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
visionLabels	build/include/tool/SensorWindow.h	/^  QLabel* visionLabels;$/;"	m	class:SensorWindow
visionLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* visionLabels;$/;"	m	class:SensorWindow
visionLeftSonarLabels	build/include/tool/SensorWindow.h	/^  QLabel* visionLeftSonarLabels;$/;"	m	class:SensorWindow
visionLeftSonarLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* visionLeftSonarLabels;$/;"	m	class:SensorWindow
visionLine	core/common/WorldObject.h	/^  LineSegment visionLine; \/\/\/< For lines, the line segment.$/;"	m	class:WorldObject
visionLog	core/memory/TextLogger.h	/^#define visionLog(/;"	d
visionPt1	core/common/WorldObject.h	/^  Point2D visionPt1; \/\/\/< For lines, the first seen point.$/;"	m	class:WorldObject
visionPt2	core/common/WorldObject.h	/^  Point2D visionPt2; \/\/\/< For lines, the second seen point.$/;"	m	class:WorldObject
visionRawGroupToggled	build/include/tool/LogSelectWindow.cpp	/^void LogSelectWindow::visionRawGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
visionRawGroupToggled	tools/UTNaoTool/LogSelectWindow.cpp	/^void LogSelectWindow::visionRawGroupToggled(bool toggle){$/;"	f	class:LogSelectWindow
visionRightSonarLabels	build/include/tool/SensorWindow.h	/^  QLabel* visionRightSonarLabels;$/;"	m	class:SensorWindow
visionRightSonarLabels	tools/UTNaoTool/SensorWindow.h	/^  QLabel* visionRightSonarLabels;$/;"	m	class:SensorWindow
visionWnd_	build/include/tool/UTMainWnd.h	/^  VisionWindow* visionWnd_;$/;"	m	class:UTMainWnd
visionWnd_	tools/UTNaoTool/UTMainWnd.h	/^  VisionWindow* visionWnd_;$/;"	m	class:UTMainWnd
vision_	core/VisionCore.h	/^  VisionModule *vision_;$/;"	m	class:VisionCore
vision_al_walk_param_	core/VisionCore.h	/^  ALWalkParamBlock *vision_al_walk_param_;$/;"	m	class:VisionCore
vision_body_model_	core/VisionCore.h	/^  BodyModelBlock *vision_body_model_;$/;"	m	class:VisionCore
vision_dead_time	interfaces/shared_motion/main.cpp	/^double vision_dead_time = 5.0;$/;"	v
vision_frame_info	core/python/behaviors/custom_kick.py	/^from memory import sensors, walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles, vision_frame_info$/;"	i
vision_frame_info	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
vision_frame_info	core/python/memory.py	/^  def vision_frame_info(): return core.pythonC.vision_frame_info_$/;"	f	function:init
vision_frame_info	core/python/util.py	/^  game_state, behavior_mem$/;"	i
vision_frame_info_	core/InterpreterModule.h	/^    FrameInfoBlock *vision_frame_info_;$/;"	m	class:InterpreterModule
vision_frame_info_	core/VisionCore.h	/^  FrameInfoBlock *vision_frame_info_;$/;"	m	class:VisionCore
vision_frame_info_	core/imageCapture/ImageCapture.h	/^  FrameInfoBlock *vision_frame_info_;$/;"	m	class:ImageCapture
vision_frame_info_	core/vision/VisionModule.h	/^  FrameInfoBlock *vision_frame_info_;$/;"	m	class:VisionModule
vision_frame_info_	interfaces/sim_spark/RobotBehavior.h	/^  FrameInfoBlock* vision_frame_info_;$/;"	m	class:RobotBehavior
vision_joint_angles_	core/VisionCore.h	/^  JointBlock *vision_joint_angles_;$/;"	m	class:VisionCore
vision_joint_commands_	core/VisionCore.h	/^  JointCommandBlock *vision_joint_commands_;$/;"	m	class:VisionCore
vision_kick_params_	core/VisionCore.h	/^  KickParamBlock *vision_kick_params_;$/;"	m	class:VisionCore
vision_kick_request_	core/VisionCore.h	/^  KickRequestBlock *vision_kick_request_;$/;"	m	class:VisionCore
vision_kick_running_	core/memory/KickRequestBlock.h	/^  bool vision_kick_running_;$/;"	m	struct:KickRequestBlock
vision_lock_	core/imageCapture/ImageCapture.h	/^  Lock *vision_lock_;$/;"	m	class:ImageCapture
vision_lock_	core/memory/Memory.h	/^  Lock *vision_lock_;$/;"	m	class:Memory
vision_lock_	interfaces/sim_spark/Parser.h	/^  Lock *vision_lock_;$/;"	m	class:Parser
vision_lock_	interfaces/sim_spark/RobotBehavior.h	/^  Lock *vision_lock_;$/;"	m	class:RobotBehavior
vision_memory_	build/include/tool/VisionWindow.h	/^  Memory* vision_memory_;$/;"	m	class:VisionWindow
vision_memory_	tools/UTNaoTool/VisionWindow.h	/^  Memory* vision_memory_;$/;"	m	class:VisionWindow
vision_objects_block_	build/include/tool/VisionWindow.h	/^  VisionObjectsBlock* vision_objects_block_;$/;"	m	class:VisionWindow
vision_objects_block_	tools/UTNaoTool/VisionWindow.h	/^  VisionObjectsBlock* vision_objects_block_;$/;"	m	class:VisionWindow
vision_odometry_	core/VisionCore.h	/^  OdometryBlock *vision_odometry_;$/;"	m	class:VisionCore
vision_processed_sonar_	core/InterpreterModule.h	/^    ProcessedSonarBlock *vision_processed_sonar_;$/;"	m	class:InterpreterModule
vision_processed_sonar_	core/VisionCore.h	/^  ProcessedSonarBlock *vision_processed_sonar_;$/;"	m	class:VisionCore
vision_sensors_	core/VisionCore.h	/^  SensorBlock *vision_sensors_;$/;"	m	class:VisionCore
vision_start_time_delay	interfaces/shared_motion/main.cpp	/^double vision_start_time_delay = 25.0;$/;"	v
vision_walk_info_	core/VisionCore.h	/^  WalkInfoBlock *vision_walk_info_;$/;"	m	class:VisionCore
vision_walk_param_	core/VisionCore.h	/^  WalkParamBlock *vision_walk_param_;$/;"	m	class:VisionCore
vision_walk_request_	core/VisionCore.h	/^  WalkRequestBlock *vision_walk_request_;$/;"	m	class:VisionCore
vision_walk_response_	core/VisionCore.h	/^  WalkResponseBlock *vision_walk_response_;$/;"	m	class:VisionCore
vlen	lib/alglib/ap.cpp	/^alglib::ae_int_t alglib::vlen(ae_int_t n1, ae_int_t n2)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex* vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex* vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, alglib::complex alpha)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex* vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, double alpha)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(alglib::complex *vdst, const alglib::complex *vsrc, ae_int_t N, alglib::complex alpha)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(alglib::complex *vdst, const alglib::complex *vsrc, ae_int_t N, double alpha)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(alglib::complex *vdst, const alglib::complex* vsrc, ae_int_t N)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(double *vdst,  ae_int_t stride_dst, const double* vsrc,  ae_int_t stride_src, ae_int_t n, double alpha)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(double *vdst, ae_int_t stride_dst, const double* vsrc,  ae_int_t stride_src, ae_int_t n)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(double *vdst, const double *vsrc, ae_int_t N, double alpha)$/;"	f	class:alglib
vmove	lib/alglib/ap.cpp	/^void alglib::vmove(double *vdst, const double* vsrc, ae_int_t N)$/;"	f	class:alglib
vmoveneg	lib/alglib/ap.cpp	/^void alglib::vmoveneg(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex* vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n)$/;"	f	class:alglib
vmoveneg	lib/alglib/ap.cpp	/^void alglib::vmoveneg(alglib::complex *vdst, const alglib::complex *vsrc, ae_int_t N)$/;"	f	class:alglib
vmoveneg	lib/alglib/ap.cpp	/^void alglib::vmoveneg(double *vdst,  ae_int_t stride_dst, const double* vsrc,  ae_int_t stride_src, ae_int_t n)$/;"	f	class:alglib
vmoveneg	lib/alglib/ap.cpp	/^void alglib::vmoveneg(double *vdst, const double *vsrc, ae_int_t N)$/;"	f	class:alglib
vmul	lib/alglib/ap.cpp	/^void alglib::vmul(alglib::complex *vdst, ae_int_t N, alglib::complex alpha)$/;"	f	class:alglib
vmul	lib/alglib/ap.cpp	/^void alglib::vmul(alglib::complex *vdst, ae_int_t N, double alpha)$/;"	f	class:alglib
vmul	lib/alglib/ap.cpp	/^void alglib::vmul(alglib::complex *vdst, ae_int_t stride_dst, ae_int_t n, alglib::complex alpha)$/;"	f	class:alglib
vmul	lib/alglib/ap.cpp	/^void alglib::vmul(alglib::complex *vdst, ae_int_t stride_dst, ae_int_t n, double alpha)$/;"	f	class:alglib
vmul	lib/alglib/ap.cpp	/^void alglib::vmul(double *vdst,  ae_int_t stride_dst, ae_int_t n, double alpha)$/;"	f	class:alglib
vmul	lib/alglib/ap.cpp	/^void alglib::vmul(double *vdst, ae_int_t N, double alpha)$/;"	f	class:alglib
voidp	lib/zlib/zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	lib/zlib/zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	lib/zlib/zconf.h	/^#  define voidp /;"	d
voidpc	lib/zlib/zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	lib/zlib/zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpc	lib/zlib/zconf.h	/^#  define voidpc /;"	d
voidpf	lib/zlib/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	lib/zlib/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	lib/zlib/zconf.h	/^#  define voidpf /;"	d
vparams_	core/vision/Classifier.h	/^  const VisionParams& vparams_;$/;"	m	class:Classifier
vparams_	core/vision/ImageProcessor.h	/^    VisionParams vparams_;$/;"	m	class:ImageProcessor
vparams_	core/vision/ObjectDetector.h	/^    const VisionParams& vparams_;$/;"	m	class:ObjectDetector
vsnprintf	lib/zlib/gzguts.h	/^#  define vsnprintf /;"	d
vsnprintf	lib/zlib/zutil.h	/^#         define vsnprintf /;"	d
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n)$/;"	f	class:alglib
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, alglib::complex alpha)$/;"	f	class:alglib
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(alglib::complex *vdst, ae_int_t stride_dst, const alglib::complex *vsrc, ae_int_t stride_src, const char *conj_src, ae_int_t n, double alpha)$/;"	f	class:alglib
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(alglib::complex *vdst, const alglib::complex *vsrc, ae_int_t N)$/;"	f	class:alglib
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(alglib::complex *vdst, const alglib::complex *vsrc, ae_int_t n, alglib::complex alpha)$/;"	f	class:alglib
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(alglib::complex *vdst, const alglib::complex *vsrc, ae_int_t n, double alpha)$/;"	f	class:alglib
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(double *vdst,  ae_int_t stride_dst, const double *vsrc,  ae_int_t stride_src, ae_int_t n)$/;"	f	class:alglib
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(double *vdst,  ae_int_t stride_dst, const double *vsrc,  ae_int_t stride_src, ae_int_t n, double alpha)$/;"	f	class:alglib
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(double *vdst, const double *vsrc, ae_int_t N)$/;"	f	class:alglib
vsub	lib/alglib/ap.cpp	/^void alglib::vsub(double *vdst, const double *vsrc, ae_int_t N, double alpha)$/;"	f	class:alglib
vtime_	core/communications/CommunicationModule.h	/^  uint32_t vtime_;$/;"	m	class:CommunicationModule
vtimer_	core/VisionCore.h	/^   Timer vtimer_, camtimer_, logtimer_;$/;"	m	class:VisionCore
w	core/localization/Particle.h	/^    w; \/\/ Weight$/;"	m	struct:Particle
w	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  WeightMatrix w;$/;"	m	class:SRUnscentedKalmanFilter
w	lib/alglib/dataanalysis.h	/^    ae_vector w;$/;"	m	struct:alglib_impl::__anon42
w	lib/alglib/dataanalysis.h	/^    ae_vector w;$/;"	m	struct:alglib_impl::__anon45
w	lib/alglib/interpolation.h	/^    ae_vector w;$/;"	m	struct:alglib_impl::__anon57
w	lib/alglib/interpolation.h	/^    ae_vector w;$/;"	m	struct:alglib_impl::__anon63
w	lib/alglib/optimization.h	/^    ae_vector w;$/;"	m	struct:alglib_impl::__anon79
wDistance	core/motion/rswalk2014/types/PostInfo.hpp	/^   float wDistance;$/;"	m	struct:PostInfo
w_bits	lib/zlib/deflate.h	/^    uInt  w_bits;        \/* log2(w_size)  (8..16) *\/$/;"	m	struct:internal_state
w_mask	lib/zlib/deflate.h	/^    uInt  w_mask;        \/* w_size - 1 *\/$/;"	m	struct:internal_state
w_size	lib/zlib/deflate.h	/^    uInt  w_size;        \/* LZ77 window size (32K by default) *\/$/;"	m	struct:internal_state
wait	core/memory/Lock.cpp	/^void Lock::wait() {$/;"	f	class:Lock
wait	core/memory/WalkRequestBlock.cpp	/^void WalkRequestBlock::wait() {$/;"	f	class:WalkRequestBlock
walk	core/python/behaviors/walk_to_center.py	/^    def walk(self):$/;"	m	class:Playing.WalkToCenter
walk	core/python/behaviors/walk_to_center_2.py	/^    def walk(self):$/;"	m	class:Playing.WalkToCenter
walk	core/python/behaviors/win.py	/^    def walk(self, vx, vy, vt):$/;"	m	class:Playing.Win
walk	core/python/behaviors/win.py	/^  walk=4$/;"	v	class:DefendingStates
walk2014Option	core/motion/rswalk2014/Walk2014Generator.hpp	/^   Walk2014Option walk2014Option;$/;"	m	class:Walk2014Generator
walkCommands	build/include/tool/WalkWindow.h	/^  QLabel* walkCommands;$/;"	m	class:WalkWindow
walkCommands	tools/UTNaoTool/WalkWindow.h	/^  QLabel* walkCommands;$/;"	m	class:WalkWindow
walkCycle	core/motion/rswalk2014/BodyModel.hpp	/^      WalkCycle walkCycle;$/;"	m	class:BodyModel
walkCycle	core/motion/rswalk2014/PendulumModel.hpp	/^   WalkCycle walkCycle; $/;"	m	struct:PendulumModel
walkDisabled	core/memory/OdometryBlock.h	/^  bool walkDisabled;$/;"	m	struct:OdometryBlock
walkEngine	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^         Walk2014Generator* walkEngine;$/;"	m	class:WalkEnginePreProcessor::DribbleEngine
walkEngine	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^         Walk2014Generator* walkEngine;$/;"	m	class:WalkEnginePreProcessor::LineUpEngine
walkEngine	core/motion/rswalk2014/WalkEnginePreProcessor.hpp	/^      Walk2014Generator* walkEngine;$/;"	m	class:WalkEnginePreProcessor
walkHeight	core/memory/WalkParamBlock.h	/^  float walkHeight() { return 400; } \/\/TODO: Put in an actual computation for this$/;"	f	struct:WalkParamBlock
walkIsActive	core/motion/rswalk2014/DistributedGenerator.cpp	/^bool DistributedGenerator::walkIsActive(){$/;"	f	class:DistributedGenerator
walkKick	core/motion/rswalk2014/BodyModel.hpp	/^      bool walkKick;$/;"	m	class:BodyModel
walkKickHeading	core/motion/rswalk2014/BodyModel.hpp	/^      float walkKickHeading;$/;"	m	class:BodyModel
walkKickLeftLeg	core/motion/rswalk2014/BodyModel.hpp	/^      bool walkKickLeftLeg;$/;"	m	class:BodyModel
walkKickStart	core/motion/rswalk2014/BodyModel.hpp	/^      bool walkKickStart;$/;"	m	class:BodyModel
walkLabels	build/include/tool/WalkWindow.h	/^  QLabel* walkLabels;$/;"	m	class:WalkWindow
walkLabels	tools/UTNaoTool/WalkWindow.h	/^  QLabel* walkLabels;$/;"	m	class:WalkWindow
walkNextPosition	build/include/tool/WalkWindow.h	/^  QLabel* walkNextPosition;$/;"	m	class:WalkWindow
walkNextPosition	tools/UTNaoTool/WalkWindow.h	/^  QLabel* walkNextPosition;$/;"	m	class:WalkWindow
walkOdometry	build/include/tool/WalkWindow.h	/^  QLabel* walkOdometry;$/;"	m	class:WalkWindow
walkOdometry	tools/UTNaoTool/WalkWindow.h	/^  QLabel* walkOdometry;$/;"	m	class:WalkWindow
walkParamNames	core/memory/ALWalkParamBlock.h	/^const std::string walkParamNames[NUM_AL_WALK_PARAMS] = {$/;"	v
walkPosition	build/include/tool/WalkWindow.h	/^  QLabel* walkPosition;$/;"	m	class:WalkWindow
walkPosition	tools/UTNaoTool/WalkWindow.h	/^  QLabel* walkPosition;$/;"	m	class:WalkWindow
walkState	core/motion/rswalk2014/Walk2014Generator.hpp	/^   WalkState walkState;$/;"	m	class:Walk2014Generator
walkToTarget	build/include/tool/simulation/SimulatedPlayer.h	/^  bool walkToTarget;$/;"	m	class:SimulatedPlayer
walkToTarget	tools/UTNaoTool/simulation/SimulatedPlayer.h	/^  bool walkToTarget;$/;"	m	class:SimulatedPlayer
walkVelocity	build/include/tool/WalkWindow.h	/^  QLabel* walkVelocity;$/;"	m	class:WalkWindow
walkVelocity	tools/UTNaoTool/WalkWindow.h	/^  QLabel* walkVelocity;$/;"	m	class:WalkWindow
walkWnd_	build/include/tool/UTMainWnd.h	/^  WalkWindow* walkWnd_;$/;"	m	class:UTMainWnd
walkWnd_	tools/UTNaoTool/UTMainWnd.h	/^  WalkWindow* walkWnd_;$/;"	m	class:UTMainWnd
walk_	core/MotionCore.h	/^  WalkModule *walk_;$/;"	m	class:MotionCore
walk_center	core/python/behaviors/win.py	/^  walk_center=1$/;"	v	class:DefendingStates
walk_decides_finished_with_target_	core/memory/WalkRequestBlock.h	/^  bool walk_decides_finished_with_target_;$/;"	m	struct:WalkRequestBlock
walk_engine_	build/include/tool/MotionGLWidget.h	/^  WalkEngineBlock* walk_engine_;$/;"	m	class:MotionGLWidget
walk_engine_	tools/UTNaoTool/MotionGLWidget.h	/^  WalkEngineBlock* walk_engine_;$/;"	m	class:MotionGLWidget
walk_engine_mem_	build/include/tool/MotionSimulation.h	/^  WalkEngineBlock *walk_engine_mem_;$/;"	m	class:MotionSimulation
walk_engine_mem_	tools/UTNaoTool/MotionSimulation.h	/^  WalkEngineBlock *walk_engine_mem_;$/;"	m	class:MotionSimulation
walk_height_	core/motion/WalkEngineParameters.h	/^  float walk_height_; \/\/ desired dist floor to pendulum.z - tied to offline calculations$/;"	m	struct:WalkEngineParameters
walk_info	core/memory/MemoryCache.h	/^    WalkInfoBlock* walk_info;$/;"	m	class:MemoryCache
walk_info	core/python/memory.py	/^  def walk_info(): return core.pythonC.walk_info_$/;"	f	function:init
walk_info_	build/include/tool/MotionSimulation.h	/^  WalkInfoBlock *walk_info_;$/;"	m	class:MotionSimulation
walk_info_	core/InterpreterModule.h	/^    WalkInfoBlock *walk_info_;$/;"	m	class:InterpreterModule
walk_info_	core/MotionCore.h	/^  WalkInfoBlock* walk_info_;$/;"	m	class:MotionCore
walk_info_	core/motion/rswalk2014/RSWalkModule2014.h	/^        WalkInfoBlock *walk_info_;$/;"	m	class:RSWalkModule2014
walk_info_	interfaces/nao/src/naointerface.h	/^    WalkInfoBlock* walk_info_;$/;"	m	class:naointerface
walk_info_	tools/UTNaoTool/MotionSimulation.h	/^  WalkInfoBlock *walk_info_;$/;"	m	class:MotionSimulation
walk_is_active_	core/memory/WalkInfoBlock.h	/^  bool walk_is_active_;$/;"	m	struct:WalkInfoBlock
walk_left	core/python/behaviors/win.py	/^  walk_left=2$/;"	v	class:DefendingStates
walk_max_vel_x	core/python/commands.py	/^walk_max_vel_x = 360$/;"	v
walk_max_vel_y	core/python/commands.py	/^walk_max_vel_y = 90$/;"	v
walk_mode_	core/memory/BehaviorBlock.h	/^  WalkMode::Mode walk_mode_;$/;"	m	struct:BehaviorBlock
walk_param	core/python/cfgwalk.py	/^from memory import walk_param, robot_state$/;"	i
walk_param	core/python/memory.py	/^  def walk_param(): return core.pythonC.walk_param_$/;"	f	function:init
walk_param_	build/include/tool/MotionGLWidget.h	/^  WalkParamBlock* walk_param_;$/;"	m	class:MotionGLWidget
walk_param_	core/InterpreterModule.h	/^    WalkParamBlock *walk_param_;$/;"	m	class:InterpreterModule
walk_param_	core/MotionCore.h	/^  WalkParamBlock* walk_param_;$/;"	m	class:MotionCore
walk_param_	tools/UTNaoTool/MotionGLWidget.h	/^  WalkParamBlock* walk_param_;$/;"	m	class:MotionGLWidget
walk_params	core/memory/MemoryCache.h	/^    WalkParamBlock* walk_params;$/;"	m	class:MemoryCache
walk_params_	build/include/tool/MotionSimulation.h	/^  WalkParamBlock* walk_params_;$/;"	m	class:MotionSimulation
walk_params_	core/motion/rswalk2014/RSWalkModule2014.h	/^        WalkParamBlock *walk_params_;$/;"	m	class:RSWalkModule2014
walk_params_	interfaces/nao/src/almotionwrapper.h	/^  AL::ALValue walk_params_;$/;"	m	class:ALMotionWrapper
walk_params_	tools/UTNaoTool/MotionSimulation.h	/^  WalkParamBlock* walk_params_;$/;"	m	class:MotionSimulation
walk_request	core/memory/MemoryCache.h	/^    WalkRequestBlock* walk_request;$/;"	m	class:MemoryCache
walk_request	core/python/behaviors/custom_kick.py	/^from memory import sensors, walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles, vision_frame_info$/;"	i
walk_request	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
walk_request	core/python/memory.py	/^  def walk_request(): return core.pythonC.walk_request_$/;"	f	function:init
walk_request	core/python/pose.py	/^from memory import walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles$/;"	i
walk_request	core/python/util.py	/^  game_state, behavior_mem$/;"	i
walk_request_	build/include/tool/MotionGLWidget.h	/^  WalkRequestBlock* walk_request_;$/;"	m	class:MotionGLWidget
walk_request_	build/include/tool/MotionSimulation.h	/^  WalkRequestBlock *walk_request_;$/;"	m	class:MotionSimulation
walk_request_	core/InterpreterModule.h	/^    WalkRequestBlock *walk_request_;$/;"	m	class:InterpreterModule
walk_request_	core/MotionCore.h	/^  WalkRequestBlock* walk_request_;$/;"	m	class:MotionCore
walk_request_	core/motion/MotionModule.h	/^  WalkRequestBlock *walk_request_;$/;"	m	class:MotionModule
walk_request_	core/motion/SpecialMotionModule.h	/^  WalkRequestBlock* walk_request_;$/;"	m	class:SpecialMotionModule
walk_request_	core/motion/rswalk2014/RSWalkModule2014.h	/^        WalkRequestBlock *walk_request_;$/;"	m	class:RSWalkModule2014
walk_request_	core/sensor/SensorModule.h	/^  WalkRequestBlock *walk_request_;$/;"	m	class:SensorModule
walk_request_	interfaces/nao/src/naointerface.h	/^    WalkRequestBlock* walk_request_;$/;"	m	class:naointerface
walk_request_	tools/UTNaoTool/MotionGLWidget.h	/^  WalkRequestBlock* walk_request_;$/;"	m	class:MotionGLWidget
walk_request_	tools/UTNaoTool/MotionSimulation.h	/^  WalkRequestBlock *walk_request_;$/;"	m	class:MotionSimulation
walk_requested_start_time	core/motion/rswalk2014/RSWalkModule2014.h	/^        float walk_requested_start_time;$/;"	m	class:RSWalkModule2014
walk_response	core/memory/MemoryCache.h	/^    WalkResponseBlock* walk_response;$/;"	m	class:MemoryCache
walk_response	core/python/behaviors/custom_kick.py	/^from memory import sensors, walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles, vision_frame_info$/;"	i
walk_response	core/python/memory.py	/^  def walk_response(): return core.pythonC.walk_response_$/;"	f	function:init
walk_response	core/python/pose.py	/^from memory import walk_request, walk_response, kick_request, joint_commands, behavior_mem, joint_angles$/;"	i
walk_response_	core/InterpreterModule.h	/^    WalkResponseBlock *walk_response_;$/;"	m	class:InterpreterModule
walk_response_	core/MotionCore.h	/^  WalkResponseBlock* walk_response_;$/;"	m	class:MotionCore
walk_right	core/python/behaviors/win.py	/^  walk_right=3$/;"	v	class:DefendingStates
walk_start_time	core/python/behaviors/win.py	/^walk_start_time = 0$/;"	v
walk_to	core/python/behaviors/win.py	/^    def walk_to(self, obj, r_threshold):$/;"	m	class:Playing.Win
walk_to_target_	core/memory/WalkRequestBlock.h	/^  bool walk_to_target_;$/;"	m	struct:WalkRequestBlock
walk_type	core/common/RobotConfig.h	/^    std::string walk_type;$/;"	m	class:RobotConfig
walk_type_	core/memory/WalkRequestBlock.h	/^  WalkType walk_type_;$/;"	m	struct:WalkRequestBlock
walkingTo	core/communications/SPLStandardMessage.h	/^  float walkingTo[2];$/;"	m	struct:SPLStandardMessage
walking_turn_limit	core/memory/WalkParamBlock.h	/^  float walking_turn_limit;$/;"	m	struct:WalkParamBlock
walking_turn_limit	core/motion/rswalk2014/RSWalkModule2014.h	/^        float walking_turn_limit = 0.35f;$/;"	m	class:RSWalkModule2014
walking_turn_threshold	core/motion/rswalk2014/RSWalkModule2014.h	/^        const float walking_turn_threshold = 0.90f;$/;"	m	class:RSWalkModule2014
want	lib/zlib/gzguts.h	/^    unsigned want;          \/* requested buffer size, default is GZBUFSIZE *\/$/;"	m	struct:__anon135
was	lib/zlib/inflate.h	/^    unsigned was;               \/* initial length of match *\/$/;"	m	struct:inflate_state
wasKicking	core/motion/rswalk2014/RSWalkModule2014.h	/^	bool wasKicking;$/;"	m	class:RSWalkModule2014
wbits	lib/zlib/inflate.h	/^    unsigned wbits;             \/* log base 2 of requested window size *\/$/;"	m	struct:inflate_state
wc	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  WeightMatrix wc;$/;"	m	class:UnscentedKalmanFilter
wc	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  WeightVector wc;$/;"	m	class:UnscentedKalmanFilter
wconfig_	build/include/tool/WorldWindow.h	/^    WorldConfig wconfig_;$/;"	m	class:WorldWindow
wconfig_	tools/UTNaoTool/WorldWindow.h	/^    WorldConfig wconfig_;$/;"	m	class:WorldWindow
wcount	lib/alglib/dataanalysis.h	/^    ae_int_t wcount;$/;"	m	struct:alglib_impl::__anon50
weak	lib/lua/src/lstate.h	/^  GCObject *weak;  \/* list of weak tables (to be cleared) *\/$/;"	m	struct:global_State
weakBearing	core/memory/BehaviorBlock.h	/^  float weakBearing;$/;"	m	struct:KickEvaluation
weakPoint	core/memory/BehaviorBlock.h	/^  Point2D weakPoint;$/;"	m	struct:KickEvaluation
weakValid	core/memory/BehaviorBlock.h	/^  int weakValid;$/;"	m	struct:KickEvaluation
weibull	interfaces/sim_spark/Random.h	/^   float weibull( float a, float b, float c )   \/\/ Weibull$/;"	f	class:Random
weight	core/motion/rswalk2014/types/AbsCoord.hpp	/^   float weight;$/;"	m	struct:AbsCoord
weights	build/include/tool/calibration/JointCalibrator.cpp	/^std::vector<float> weights = {$/;"	v
weights	lib/alglib/dataanalysis.h	/^    ae_vector weights;$/;"	m	struct:alglib_impl::__anon44
weights	lib/alglib/dataanalysis.h	/^    ae_vector weights;$/;"	m	struct:alglib_impl::__anon50
weights	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^std::vector<float> weights = {$/;"	v
wg	lib/alglib/integration.h	/^    ae_vector wg;$/;"	m	struct:alglib_impl::__anon54
what	lib/lua/src/lua.h	/^  const char *what;	\/* (S) `Lua', `C', `main', `tail' *\/$/;"	m	struct:lua_Debug
what	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			virtual const char *what() const throw() { return what_.c_str(); }$/;"	f	struct:Test::Parser::TagMismatch
what 	lib/lua/etc/strict.lua	/^local function what ()$/;"	f
what_	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			std::string what_;$/;"	m	struct:Test::Parser::TagMismatch	file:
whave	lib/zlib/inflate.h	/^    unsigned whave;             \/* valid bytes in the window *\/$/;"	m	struct:inflate_state
whilestat	lib/lua/src/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
whistleElapsedTime	core/memory/GameStateBlock.h	/^  int whistleElapsedTime() { return time(NULL) - whistleTime; }$/;"	f	struct:GameStateBlock
whistleOverride	core/memory/GameStateBlock.cpp	/^void GameStateBlock::whistleOverride() {$/;"	f	class:GameStateBlock
whistleTime	core/memory/GameStateBlock.h	/^  int whistleTime;$/;"	m	struct:GameStateBlock
whistle_heard_frame_	core/memory/AudioProcessingBlock.h	/^    int whistle_heard_frame_, teammate_heard_frame_;$/;"	m	struct:AudioProcessingBlock
white2gray	lib/lua/src/lgc.c	/^#define white2gray(/;"	d	file:
whitePct	core/vision/structures/GoalPostCandidate.h	/^  float whitePct;$/;"	m	struct:GoalPostCandidate
whitePercent	core/vision/structures/RobotCandidate.h	/^  float jerseyColorPercent, greenWhitePercent, whitePercent, correctPercent;$/;"	m	struct:RobotCandidate
widget	build/include/tool/ExtrinsicCalibrationWidget.cpp	/^    QWidget* widget;$/;"	m	class:CalibrationItem	file:
widget	tools/UTNaoTool/ExtrinsicCalibrationWidget.cpp	/^    QWidget* widget;$/;"	m	class:CalibrationItem	file:
width	build/include/tool/annotations/EllipseSelection.h	/^        int width() {$/;"	f	class:EllipseSelection
width	core/common/RobotInfo.h	/^  int width;$/;"	m	struct:ImageParams
width	core/motion/rswalk2014/types/BBox.hpp	/^   int width() const$/;"	f	struct:BBox
width	core/vision/structures/BallCandidate.h	/^  float width;$/;"	m	struct:BallCandidate
width	core/vision/structures/FieldLine.h	/^  int width;$/;"	m	struct:FieldLine
width	core/vision/structures/FocusArea.h	/^  int width, height, cx, cy, area;$/;"	m	struct:FocusArea
width	core/vision/structures/GoalCandidate.h	/^  float width;        \/\/ Distance between the posts$/;"	m	struct:GoalCandidate
width	core/vision/structures/GoalPostCandidate.h	/^  float width;              \/\/ Estimated world width of the post$/;"	m	struct:GoalPostCandidate
width	core/vision/structures/LineStackInfo.h	/^  uint16_t width;$/;"	m	struct:LineStackInfo
width	core/vision/structures/RobotCandidate.h	/^  float width, height;$/;"	m	struct:RobotCandidate
width	lib/alglib/alglibinternal.h	/^    double width;$/;"	m	struct:alglib_impl::__anon21
width	lib/alglib/dataanalysis.h	/^    double width;$/;"	m	struct:alglib_impl::__anon46
width	tools/UTNaoTool/annotations/EllipseSelection.h	/^        int width() {$/;"	f	class:EllipseSelection
width1	lib/alglib/alglibinternal.h	/^    double width1;$/;"	m	struct:alglib_impl::__anon21
width1	lib/alglib/dataanalysis.h	/^    double width1;$/;"	m	struct:alglib_impl::__anon46
widthDistance	core/vision/structures/RobotCandidate.h	/^  float widthDistance, heightDistance, kinematicsDistance;$/;"	m	struct:RobotCandidate
widthEnd	core/vision/structures/Blob.h	/^  uint16_t widthEnd;$/;"	m	struct:Blob
widthFunc	data/ballfit.py	/^widthFunc = lambda x: aw * (x ** bw)$/;"	v
widthFunc	data/goalfit.py	/^widthFunc = lambda x: aw * (x ** bw)$/;"	v
widthStart	core/vision/structures/Blob.h	/^  uint16_t widthStart;$/;"	m	struct:Blob
width_	build/include/tool/ImageWidget.h	/^    int width_, height_;$/;"	m	class:ImageWidget
width_	build/include/tool/annotations/EllipseSelection.h	/^        int top_, left_, width_, height_;$/;"	m	class:EllipseSelection
width_	tools/UTNaoTool/ImageWidget.h	/^    int width_, height_;$/;"	m	class:ImageWidget
width_	tools/UTNaoTool/annotations/EllipseSelection.h	/^        int top_, left_, width_, height_;$/;"	m	class:EllipseSelection
widths	data/goalfit.py	/^widths = []$/;"	v
widths	data/goalfit.py	/^widths = numpy.array(widths)$/;"	v
wilcoxonsignedranktest	lib/alglib/statistics.cpp	/^void wilcoxonsignedranktest(\/* Real    *\/ ae_vector* x,$/;"	f	namespace:alglib_impl
wilcoxonsignedranktest	lib/alglib/statistics.cpp	/^void wilcoxonsignedranktest(const real_1d_array &x, const ae_int_t n, const double e, double &bothtails, double &lefttail, double &righttail)$/;"	f	namespace:alglib
window	lib/zlib/deflate.h	/^    Bytef *window;$/;"	m	struct:internal_state
window	lib/zlib/inflate.h	/^    unsigned char FAR *window;  \/* allocated sliding window, if needed *\/$/;"	m	struct:inflate_state
window_size	core/motion/rswalk2014/RSWalkModule2014.h	/^        double window_size = 0.002; \/\/ 1\/# of frames, this needs tuning$/;"	m	class:RSWalkModule2014
window_size	lib/zlib/deflate.h	/^    ulg window_size;$/;"	m	struct:internal_state
with	tools/behaviorSim/cma.py	/^from __future__ import division  # future is >= 3.0, this code has mainly been used with 2.6 & 2.7$/;"	i
with_statement	tools/behaviorSim/cma.py	/^from __future__ import with_statement  # only necessary for python 2.5 and not in heavy use$/;"	i
within	core/motion/rswalk2014/types/BBox.hpp	/^   bool within(const Point p) const$/;"	f	struct:BBox
wits	lib/alglib/interpolation.h	/^    ae_int_t wits;$/;"	m	struct:alglib_impl::__anon63
wk	lib/alglib/integration.h	/^    ae_vector wk;$/;"	m	struct:alglib_impl::__anon54
wkind	lib/alglib/interpolation.h	/^    ae_int_t wkind;$/;"	m	struct:alglib_impl::__anon63
wm	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  WeightMatrix wm;$/;"	m	class:UnscentedKalmanFilter
wm	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  WeightVector wm;$/;"	m	class:UnscentedKalmanFilter
wnext	lib/zlib/inflate.h	/^    unsigned wnext;             \/* window write index *\/$/;"	m	struct:inflate_state
wonullstream	core/motion/rswalk2014/utils/basic_onullstream.hpp	/^typedef basic_onullstream<wchar_t> wonullstream;$/;"	t
word	core/imageCapture/i2c-dev.h	/^	__u16 word;$/;"	m	union:i2c_smbus_data
work	lib/alglib/optimization.h	/^    ae_vector work;$/;"	m	struct:alglib_impl::__anon69
work	lib/alglib/optimization.h	/^    ae_vector work;$/;"	m	struct:alglib_impl::__anon75
work	lib/zlib/inflate.h	/^    unsigned short work[288];   \/* work area for code table building *\/$/;"	m	struct:inflate_state
work0	lib/alglib/optimization.h	/^    ae_vector work0;$/;"	m	struct:alglib_impl::__anon77
work1	lib/alglib/optimization.h	/^    ae_vector work1;$/;"	m	struct:alglib_impl::__anon77
workbndl	lib/alglib/optimization.h	/^    ae_vector workbndl;$/;"	m	struct:alglib_impl::__anon71
workbndu	lib/alglib/optimization.h	/^    ae_vector workbndu;$/;"	m	struct:alglib_impl::__anon71
workerInitialized_	build/include/tool/ProcessExecutor.cpp	/^bool PE::workerInitialized_ = false;$/;"	m	class:PE	file:
workerInitialized_	build/include/tool/ProcessExecutor.h	/^    static bool workerInitialized_;$/;"	m	class:ProcessExecutor
workerInitialized_	tools/UTNaoTool/ProcessExecutor.cpp	/^bool PE::workerInitialized_ = false;$/;"	m	class:PE	file:
workerInitialized_	tools/UTNaoTool/ProcessExecutor.h	/^    static bool workerInitialized_;$/;"	m	class:ProcessExecutor
workerThread	build/include/tool/ProcessExecutor.cpp	/^void PE::workerThread() {$/;"	f	class:PE
workerThread	tools/UTNaoTool/ProcessExecutor.cpp	/^void PE::workerThread() {$/;"	f	class:PE
worldConfig	build/include/tool/ToolConfig.h	/^    WorldConfig worldConfig;$/;"	m	class:ToolConfig
worldConfig	tools/UTNaoTool/ToolConfig.h	/^    WorldConfig worldConfig;$/;"	m	class:ToolConfig
worldHeight	core/vision/structures/RobotCandidate.h	/^  float worldHeight;$/;"	m	struct:RobotCandidate
worldObjects	build/include/tool/simulation/BehaviorSimulation.h	/^    WorldObjectBlock* worldObjects;$/;"	m	class:BehaviorSimulation
worldObjects	core/opponents/UKF4.h	/^  WorldObjectBlock* worldObjects;$/;"	m	class:UKF4
worldObjects	tools/UTNaoTool/simulation/BehaviorSimulation.h	/^    WorldObjectBlock* worldObjects;$/;"	m	class:BehaviorSimulation
worldToCam_	core/vision/CameraMatrix.h	/^    Eigen::Matrix4f worldToCam_, camToWorld_;$/;"	m	class:CameraMatrix
worldToNeckTransform	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> worldToNeckTransform;$/;"	m	class:Pose
worldWnd_	build/include/tool/UTMainWnd.h	/^  WorldWindow* worldWnd_;$/;"	m	class:UTMainWnd
worldWnd_	tools/UTNaoTool/UTMainWnd.h	/^  WorldWindow* worldWnd_;$/;"	m	class:UTMainWnd
world_	build/include/tool/LogWidget.h	/^    WorldGLWidget* world_;$/;"	m	class:LogWidget
world_	build/include/tool/SimControlWidget.h	/^    WorldGLWidget* world_;$/;"	m	class:SimControlWidget
world_	tools/UTNaoTool/LogWidget.h	/^    WorldGLWidget* world_;$/;"	m	class:LogWidget
world_	tools/UTNaoTool/SimControlWidget.h	/^    WorldGLWidget* world_;$/;"	m	class:SimControlWidget
world_object	core/memory/MemoryCache.h	/^    WorldObjectBlock* world_object;$/;"	m	class:MemoryCache
world_object	core/vision/VisionBlocks.h	/^    WorldObjectBlock*& world_object;$/;"	m	class:VisionBlocks
world_object_	build/include/tool/simulation/PhysicsSimulator.h	/^    WorldObjectBlock* world_object_;$/;"	m	class:PhysicsSimulator
world_object_	tools/UTNaoTool/simulation/PhysicsSimulator.h	/^    WorldObjectBlock* world_object_;$/;"	m	class:PhysicsSimulator
world_object_block_	build/include/tool/ExtrinsicCalibrationWidget.h	/^    WorldObjectBlock* world_object_block_;$/;"	m	class:ExtrinsicCalibrationWidget
world_object_block_	build/include/tool/VisionWindow.h	/^  WorldObjectBlock* world_object_block_;$/;"	m	class:VisionWindow
world_object_block_	build/include/tool/calibration/ExtrinsicCalibrator.h	/^    WorldObjectBlock* world_object_block_;$/;"	m	class:ExtrinsicCalibrator
world_object_block_	tools/UTNaoTool/ExtrinsicCalibrationWidget.h	/^    WorldObjectBlock* world_object_block_;$/;"	m	class:ExtrinsicCalibrationWidget
world_object_block_	tools/UTNaoTool/VisionWindow.h	/^  WorldObjectBlock* world_object_block_;$/;"	m	class:VisionWindow
world_object_block_	tools/UTNaoTool/calibration/ExtrinsicCalibrator.h	/^    WorldObjectBlock* world_object_block_;$/;"	m	class:ExtrinsicCalibrator
world_objects	core/python/commands.py	/^    processed_sonar, world_objects, robot_state, behavior_mem, vision_frame_info, speech$/;"	i
world_objects	core/python/memory.py	/^  def world_objects(): return core.pythonC.world_objects_$/;"	f	function:init
world_objects	core/python/util.py	/^  game_state, behavior_mem$/;"	i
world_objects_	core/InterpreterModule.h	/^    WorldObjectBlock *world_objects_;$/;"	m	class:InterpreterModule
world_objects_	core/VisionCore.h	/^  WorldObjectBlock *world_objects_;$/;"	m	class:VisionCore
world_objects_	core/communications/CommunicationModule.h	/^  WorldObjectBlock *world_objects_;$/;"	m	class:CommunicationModule
world_objects_	core/motion/rswalk2014/RSWalkModule2014.h	/^	WorldObjectBlock* world_objects_;\/\/for rswalk2014$/;"	m	class:RSWalkModule2014
world_objects_	core/vision/VisionModule.h	/^  WorldObjectBlock *world_objects_;$/;"	m	class:VisionModule
world_objects_	interfaces/sim_spark/RobotBehavior.h	/^  WorldObjectBlock* world_objects_;$/;"	m	class:RobotBehavior
wr	lib/alglib/integration.h	/^    ae_vector wr;$/;"	m	struct:alglib_impl::__anon54
wrap	lib/zlib/deflate.h	/^    int   wrap;          \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:internal_state
wrap	lib/zlib/inflate.h	/^    int wrap;                   \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:inflate_state
wrappermode	lib/alglib/integration.h	/^    ae_int_t wrappermode;$/;"	m	struct:alglib_impl::__anon55
write	core/memory/Logger.cpp	/^void Logger::write() {$/;"	f	class:Logger
write	core/memory/StreamBuffer.cpp	/^void StreamBuffer::write(std::ostream& os) {$/;"	f	class:StreamBuffer
write	core/memory/StreamBuffer.cpp	/^void StreamBuffer::write(std::ostream& os, unsigned int n) {$/;"	f	class:StreamBuffer
write	core/memory/StreamBuffer.h	/^  void write(T& dest) {$/;"	f	struct:StreamBuffer
write	core/memory/StreamBuffer.h	/^  void write(T* dest) {$/;"	f	struct:StreamBuffer
write	core/memory/StreamBuffer.h	/^  void write(std::vector<T>& dest) {$/;"	f	struct:StreamBuffer
writeDebug	core/memory/TextLogger.cpp	/^void TextLogger::writeDebug(int loglevel, int frame, int moduleType, char *msg ) {$/;"	f	class:TextLogger
writeFrame	core/motion/rswalk2014/perception/vision/RSCamera.cpp	/^void RSCamera::writeFrame(const uint8_t*& image) {$/;"	f	class:RSCamera
writeImage	core/memory/ImageBlock.h	/^  void writeImage(const unsigned char* imgraw, std::string path, const ImageParams& iparams) {$/;"	f	struct:ImageBlock
writeImageBinary	core/memory/ImageBlock.cpp	/^void ImageBlock::writeImageBinary(const unsigned char *imgraw, std::string path, const ImageParams &iparams){$/;"	f	class:ImageBlock
writeMatrix	core/sensor/offline/genInertialFilterMatrices.py	/^def writeMatrix(name,res,indentation=2):$/;"	f
writeMemory	core/memory/Logger.cpp	/^void Logger::writeMemory(Memory &memory) {$/;"	f	class:Logger
writeMemoryHeader	core/memory/Logger.cpp	/^void Logger::writeMemoryHeader(const MemoryHeader &header, StreamBuffer& buffer) {$/;"	f	class:Logger
writeTable	build/include/tool/VisionWindow_ColorTables.cpp	/^void VisionWindow::writeTable(Camera::Type camera, std::string fileName) {$/;"	f	class:VisionWindow
writeTable	tools/UTNaoTool/VisionWindow_ColorTables.cpp	/^void VisionWindow::writeTable(Camera::Type camera, std::string fileName) {$/;"	f	class:VisionWindow
writeToFile	core/common/Calibration.h	/^  void writeToFile(std::string fileName) {$/;"	f	class:Calibration
write_table	lib/zlib/crc32.c	/^local void write_table(out, table)$/;"	f
writer	lib/lua/src/ldump.c	/^ lua_Writer writer;$/;"	m	struct:__anon85	file:
writer	lib/lua/src/lstrlib.c	/^static int writer (lua_State *L, const void* b, size_t size, void* B) {$/;"	f	file:
writer	lib/lua/src/luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:
wrmserror	lib/alglib/interpolation.h	/^    double &wrmserror;$/;"	m	class:alglib::lsfitreport
wrmserror	lib/alglib/interpolation.h	/^    double wrmserror;$/;"	m	struct:alglib_impl::__anon62
ws	data/goalfit.py	/^ws = range(int(widths[0])+1,int(widths[-1])-1,-1)$/;"	v
wsize	lib/zlib/inflate.h	/^    unsigned wsize;             \/* window size or zero if not using window *\/$/;"	m	struct:inflate_state
wsr_w10	lib/alglib/statistics.cpp	/^static double wsr_w10(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w11	lib/alglib/statistics.cpp	/^static double wsr_w11(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w12	lib/alglib/statistics.cpp	/^static double wsr_w12(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w120	lib/alglib/statistics.cpp	/^static double wsr_w120(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w13	lib/alglib/statistics.cpp	/^static double wsr_w13(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w14	lib/alglib/statistics.cpp	/^static double wsr_w14(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w15	lib/alglib/statistics.cpp	/^static double wsr_w15(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w16	lib/alglib/statistics.cpp	/^static double wsr_w16(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w17	lib/alglib/statistics.cpp	/^static double wsr_w17(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w18	lib/alglib/statistics.cpp	/^static double wsr_w18(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w19	lib/alglib/statistics.cpp	/^static double wsr_w19(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w20	lib/alglib/statistics.cpp	/^static double wsr_w20(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w200	lib/alglib/statistics.cpp	/^static double wsr_w200(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w21	lib/alglib/statistics.cpp	/^static double wsr_w21(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w22	lib/alglib/statistics.cpp	/^static double wsr_w22(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w23	lib/alglib/statistics.cpp	/^static double wsr_w23(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w24	lib/alglib/statistics.cpp	/^static double wsr_w24(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w25	lib/alglib/statistics.cpp	/^static double wsr_w25(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w26	lib/alglib/statistics.cpp	/^static double wsr_w26(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w27	lib/alglib/statistics.cpp	/^static double wsr_w27(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w28	lib/alglib/statistics.cpp	/^static double wsr_w28(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w29	lib/alglib/statistics.cpp	/^static double wsr_w29(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w30	lib/alglib/statistics.cpp	/^static double wsr_w30(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w40	lib/alglib/statistics.cpp	/^static double wsr_w40(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w5	lib/alglib/statistics.cpp	/^static double wsr_w5(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w6	lib/alglib/statistics.cpp	/^static double wsr_w6(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w60	lib/alglib/statistics.cpp	/^static double wsr_w60(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w7	lib/alglib/statistics.cpp	/^static double wsr_w7(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w8	lib/alglib/statistics.cpp	/^static double wsr_w8(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_w9	lib/alglib/statistics.cpp	/^static double wsr_w9(double s, ae_state *_state)$/;"	f	namespace:alglib_impl
wsr_wcheb	lib/alglib/statistics.cpp	/^static void wsr_wcheb(double x,$/;"	f	namespace:alglib_impl
wsr_wsigma	lib/alglib/statistics.cpp	/^static double wsr_wsigma(double s, ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
x	build/include/tool/annotations/EllipseSelection.h	/^        int x() {$/;"	f	class:EllipseSelection
x	build/include/tool/calibration/IntrinsicCalibrator.h	/^  float x, y, size, skew;$/;"	m	struct:ICMeasures
x	build/include/tool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
x	core/common/ToolPacket.h	/^    float x, y, theta, time;$/;"	m	struct:ToolPacket::__anon10
x	core/localization/Particle.h	/^    x, \/\/ X coordinate$/;"	m	struct:Particle
x	core/math/Geometry.h	/^  float x; \/*!< x-coordinate of this position *\/$/;"	m	class:Point2D
x	core/math/Geometry.h	/^  float x; \/*!< x-coordinate of this position *\/$/;"	m	class:Point3D
x	core/math/Pose2D.h	/^  float &t, &x, &y;$/;"	m	class:Pose2D
x	core/math/Vector.h	/^  V x;$/;"	m	struct:VectorData
x	core/math/Vector2.h	/^  V x,y;$/;"	m	class:Vector2
x	core/math/Vector3.h	/^  V x,y,z;$/;"	m	class:Vector3
x	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	T& x() { return m_val; }$/;"	f	class:fadbad::FTypeName
x	core/motion/rswalk2014/PendulumModel.hpp	/^   float x;$/;"	m	struct:PendulumModel
x	core/motion/rswalk2014/types/AbsCoord.hpp	/^   const float x() const {$/;"	f	struct:AbsCoord
x	core/motion/rswalk2014/types/AbsCoord.hpp	/^   float &x() {$/;"	f	struct:AbsCoord
x	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      float x, y, z;$/;"	m	class:XYZ_Coord
x	core/vision/ImageProcessor.h	/^	int x;$/;"	m	class:Point2d
x	core/vision/structures/Coordinates.h	/^  int x;$/;"	m	struct:Coordinates
x	interfaces/sim_spark/Random.h	/^   float x( void ) { return sin( theta ) * cos( phi ); }   \/\/ x-coordinate$/;"	f	struct:sphericalCoord
x	interfaces/sim_spark/Random.h	/^   float x, y;$/;"	m	struct:cartesianCoord
x	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateVector x;$/;"	m	class:UnscentedKalmanFilter
x	lib/alglib/alglibinternal.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon22
x	lib/alglib/alglibmisc.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon25
x	lib/alglib/ap.h	/^    double x, y;$/;"	m	class:alglib::complex
x	lib/alglib/ap.h	/^typedef struct { double x, y; } ae_complex;$/;"	m	struct:alglib_impl::__anon26
x	lib/alglib/dataanalysis.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon44
x	lib/alglib/diffequations.h	/^    double &x;$/;"	m	class:alglib::odesolverstate
x	lib/alglib/diffequations.h	/^    double x;$/;"	m	struct:alglib_impl::__anon51
x	lib/alglib/integration.h	/^    double &x;$/;"	m	class:alglib::autogkstate
x	lib/alglib/integration.h	/^    double x;$/;"	m	struct:alglib_impl::__anon54
x	lib/alglib/integration.h	/^    double x;$/;"	m	struct:alglib_impl::__anon55
x	lib/alglib/interpolation.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon57
x	lib/alglib/interpolation.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon58
x	lib/alglib/interpolation.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon63
x	lib/alglib/interpolation.h	/^    real_1d_array x;$/;"	m	class:alglib::lsfitstate
x	lib/alglib/interpolation.h	/^    spline1dinterpolant x;$/;"	m	struct:alglib_impl::__anon64
x	lib/alglib/interpolation.h	/^    spline1dinterpolant x;$/;"	m	struct:alglib_impl::__anon65
x	lib/alglib/linalg.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon68
x	lib/alglib/optimization.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon69
x	lib/alglib/optimization.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon73
x	lib/alglib/optimization.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon75
x	lib/alglib/optimization.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon77
x	lib/alglib/optimization.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon79
x	lib/alglib/optimization.h	/^    real_1d_array x;$/;"	m	class:alglib::minasastate
x	lib/alglib/optimization.h	/^    real_1d_array x;$/;"	m	class:alglib::minbleicstate
x	lib/alglib/optimization.h	/^    real_1d_array x;$/;"	m	class:alglib::mincgstate
x	lib/alglib/optimization.h	/^    real_1d_array x;$/;"	m	class:alglib::minlbfgsstate
x	lib/alglib/optimization.h	/^    real_1d_array x;$/;"	m	class:alglib::minlmstate
x	lib/alglib/solvers.h	/^    ae_vector x;$/;"	m	struct:alglib_impl::__anon83
x	lib/alglib/solvers.h	/^    real_1d_array x;$/;"	m	class:alglib::nleqstate
x	lib/yaml-cpp/test/emittertests.cpp	/^			int x;$/;"	m	struct:Test::Emitter::Foo	file:
x	tools/UTNaoTool/annotations/EllipseSelection.h	/^        int x() {$/;"	f	class:EllipseSelection
x	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^  float x, y, size, skew;$/;"	m	struct:ICMeasures
x	tools/UTNaoTool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
x1	core/vision/structures/FocusArea.h	/^  int x1, y1, x2, y2;$/;"	m	struct:FocusArea
x1	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateVector x1;$/;"	m	class:UnscentedKalmanFilter
x2	build/include/tool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
x2	core/vision/structures/FocusArea.h	/^  int x1, y1, x2, y2;$/;"	m	struct:FocusArea
x2	tools/UTNaoTool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
xHeadTiltToBottomCamera	core/common/RobotDimensions.h	/^    xHeadTiltToBottomCamera,$/;"	e	enum:RobotDimensions::__anon8
xHeadTiltToTopCamera	core/common/RobotDimensions.h	/^    xHeadTiltToTopCamera,$/;"	e	enum:RobotDimensions::__anon8
x_acc	core/sensor/InertialFilter.h	/^  float x_acc;$/;"	m	class:InertialFilter
x_arr_	core/math/Spline3D.h	/^  alglib::real_1d_array x_arr_;$/;"	m	class:Spline3D
x_force_hermitian	lib/alglib/ap.cpp	/^ae_bool x_force_hermitian(x_matrix *a)$/;"	f	namespace:alglib_impl
x_force_symmetric	lib/alglib/ap.cpp	/^ae_bool x_force_symmetric(x_matrix *a)$/;"	f	namespace:alglib_impl
x_gyro	core/sensor/InertialFilter.h	/^  float x_gyro;$/;"	m	class:InertialFilter
x_hat	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  StateVector x_hat;$/;"	m	class:SRUnscentedKalmanFilter
x_hat_bar	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  StateVector x_hat_bar;$/;"	m	class:SRUnscentedKalmanFilter
x_is_hermitian	lib/alglib/ap.cpp	/^ae_bool x_is_hermitian(x_matrix *a)$/;"	f	namespace:alglib_impl
x_is_symmetric	lib/alglib/ap.cpp	/^ae_bool x_is_symmetric(x_matrix *a)$/;"	f	namespace:alglib_impl
x_matrix	lib/alglib/ap.h	/^} x_matrix;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon34
x_nb	lib/alglib/ap.cpp	/^#define x_nb /;"	d	file:
x_safepythag2	lib/alglib/ap.cpp	/^static double x_safepythag2(double x, double y)$/;"	f	namespace:alglib_impl
x_spline_	core/math/Spline3D.h	/^  alglib::spline1dinterpolant x_spline_;$/;"	m	class:Spline3D
x_split_length	lib/alglib/ap.cpp	/^static void x_split_length(ae_int_t n, ae_int_t nb, ae_int_t* n1, ae_int_t* n2)$/;"	f	namespace:alglib_impl
x_string	lib/alglib/ap.h	/^} x_string;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon32
x_target	core/motion/rswalk2014/RSWalkModule2014.h	/^	float x_target;$/;"	m	class:RSWalkModule2014
x_vector	lib/alglib/ap.h	/^} x_vector;$/;"	t	namespace:alglib_impl	typeref:struct:alglib_impl::__anon33
x_vector_clear	lib/alglib/ap.cpp	/^void x_vector_clear(x_vector *dst)$/;"	f	namespace:alglib_impl
xax	lib/alglib/linalg.h	/^    double xax;$/;"	m	struct:alglib_impl::__anon68
xbase	lib/alglib/alglibinternal.h	/^    ae_vector xbase;$/;"	m	struct:alglib_impl::__anon22
xbase	lib/alglib/optimization.h	/^    ae_vector xbase;$/;"	m	struct:alglib_impl::__anon73
xbase	lib/alglib/solvers.h	/^    ae_vector xbase;$/;"	m	struct:alglib_impl::__anon83
xblas_xfastpow	lib/alglib/alglibinternal.cpp	/^static double xblas_xfastpow(double r, ae_int_t n, ae_state *_state)$/;"	f	namespace:alglib_impl
xblas_xsum	lib/alglib/alglibinternal.cpp	/^static void xblas_xsum(\/* Real    *\/ ae_vector* w,$/;"	f	namespace:alglib_impl
xbuf	lib/alglib/interpolation.h	/^    ae_vector xbuf;$/;"	m	struct:alglib_impl::__anon56
xc	lib/alglib/optimization.h	/^    ae_vector xc;$/;"	m	struct:alglib_impl::__anon71
xcdot	lib/alglib/alglibinternal.cpp	/^void xcdot(\/* Complex *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
xcoords_	core/math/Polygon.h	/^        int *xcoords_, *ycoords_, count_;$/;"	m	class:Polygon
xcur	lib/alglib/optimization.h	/^    ae_vector xcur;$/;"	m	struct:alglib_impl::__anon79
xdir	lib/alglib/optimization.h	/^    ae_vector xdir;$/;"	m	struct:alglib_impl::__anon73
xdot	lib/alglib/alglibinternal.cpp	/^void xdot(\/* Real    *\/ ae_vector* a,$/;"	f	namespace:alglib_impl
xe	lib/alglib/optimization.h	/^    ae_vector xe;$/;"	m	struct:alglib_impl::__anon79
xend	lib/alglib/optimization.h	/^    ae_vector xend;$/;"	m	struct:alglib_impl::__anon79
xf	core/vision/structures/Blob.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:Blob
xf	core/vision/structures/GoalPostCandidate.h	/^  uint16_t xi, xf, yi, yf; $/;"	m	struct:GoalPostCandidate
xf	core/vision/structures/RobotCandidate.h	/^  uint16_t xi, xf, yi, yf;$/;"	m	struct:RobotCandidate
xf	core/vision/structures/VisionPoint.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:VisionPoint
xflags	lib/zlib/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s
xg	lib/alglib/diffequations.h	/^    ae_vector xg;$/;"	m	struct:alglib_impl::__anon51
xhRoll	core/sensor/InertialFilter.h	/^  NMatrix xhRoll;$/;"	m	class:InertialFilter
xhRollFuture	core/sensor/InertialFilter.h	/^  NMatrix xhRollFuture;$/;"	m	class:InertialFilter
xhTilt	core/sensor/InertialFilter.h	/^  NMatrix xhTilt;$/;"	m	class:InertialFilter
xhTiltFuture	core/sensor/InertialFilter.h	/^  NMatrix xhTiltFuture;$/;"	m	class:InertialFilter
xi	core/vision/structures/Blob.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:Blob
xi	core/vision/structures/GoalPostCandidate.h	/^  uint16_t xi, xf, yi, yf; $/;"	m	struct:GoalPostCandidate
xi	core/vision/structures/RobotCandidate.h	/^  uint16_t xi, xf, yi, yf;$/;"	m	struct:RobotCandidate
xi	core/vision/structures/VisionPoint.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:VisionPoint
xk	lib/alglib/linalg.h	/^    ae_vector xk;$/;"	m	struct:alglib_impl::__anon68
xk	lib/alglib/optimization.h	/^    ae_vector xk;$/;"	m	struct:alglib_impl::__anon75
xk	lib/alglib/optimization.h	/^    ae_vector xk;$/;"	m	struct:alglib_impl::__anon77
xk1	lib/alglib/linalg.h	/^    ae_vector xk1;$/;"	m	struct:alglib_impl::__anon68
xlabel	tools/behaviorSim/cma.py	/^                 axis, title, text, xlabel, isinteractive, draw, gcf$/;"	i
xm1	lib/alglib/optimization.h	/^    double xm1;$/;"	m	struct:alglib_impl::__anon73
xminusa	lib/alglib/integration.h	/^    double &xminusa;$/;"	m	class:alglib::autogkstate
xminusa	lib/alglib/integration.h	/^    double xminusa;$/;"	m	struct:alglib_impl::__anon55
xn	lib/alglib/optimization.h	/^    ae_vector xn;$/;"	m	struct:alglib_impl::__anon75
xn	lib/alglib/optimization.h	/^    ae_vector xn;$/;"	m	struct:alglib_impl::__anon77
xorigin	lib/alglib/optimization.h	/^    ae_vector xorigin;$/;"	m	struct:alglib_impl::__anon71
xp1	lib/alglib/optimization.h	/^    double xp1;$/;"	m	struct:alglib_impl::__anon73
xprev	lib/alglib/optimization.h	/^    ae_vector xprev;$/;"	m	struct:alglib_impl::__anon79
xrange	tools/behaviorSim/cma.py	/^    xrange = range$/;"	v
xrep	lib/alglib/interpolation.h	/^    ae_bool xrep;$/;"	m	struct:alglib_impl::__anon63
xrep	lib/alglib/optimization.h	/^    ae_bool xrep;$/;"	m	struct:alglib_impl::__anon69
xrep	lib/alglib/optimization.h	/^    ae_bool xrep;$/;"	m	struct:alglib_impl::__anon73
xrep	lib/alglib/optimization.h	/^    ae_bool xrep;$/;"	m	struct:alglib_impl::__anon75
xrep	lib/alglib/optimization.h	/^    ae_bool xrep;$/;"	m	struct:alglib_impl::__anon77
xrep	lib/alglib/optimization.h	/^    ae_bool xrep;$/;"	m	struct:alglib_impl::__anon79
xrep	lib/alglib/solvers.h	/^    ae_bool xrep;$/;"	m	struct:alglib_impl::__anon83
xs	tools/testStep.py	/^xs = []$/;"	v
xs	tools/testStepSide.py	/^xs = []$/;"	v
xscale	lib/alglib/diffequations.h	/^    double xscale;$/;"	m	struct:alglib_impl::__anon51
xstart	lib/alglib/optimization.h	/^    ae_vector xstart;$/;"	m	struct:alglib_impl::__anon79
xtrapf	lib/alglib/alglibinternal.h	/^    double xtrapf;$/;"	m	struct:alglib_impl::__anon21
xtrapf	lib/alglib/dataanalysis.h	/^    double xtrapf;$/;"	m	struct:alglib_impl::__anon46
xupdated	lib/alglib/interpolation.h	/^    ae_bool &xupdated;$/;"	m	class:alglib::lsfitstate
xupdated	lib/alglib/interpolation.h	/^    ae_bool xupdated;$/;"	m	struct:alglib_impl::__anon63
xupdated	lib/alglib/optimization.h	/^    ae_bool &xupdated;$/;"	m	class:alglib::minasastate
xupdated	lib/alglib/optimization.h	/^    ae_bool &xupdated;$/;"	m	class:alglib::minbleicstate
xupdated	lib/alglib/optimization.h	/^    ae_bool &xupdated;$/;"	m	class:alglib::mincgstate
xupdated	lib/alglib/optimization.h	/^    ae_bool &xupdated;$/;"	m	class:alglib::minlbfgsstate
xupdated	lib/alglib/optimization.h	/^    ae_bool &xupdated;$/;"	m	class:alglib::minlmstate
xupdated	lib/alglib/optimization.h	/^    ae_bool xupdated;$/;"	m	struct:alglib_impl::__anon69
xupdated	lib/alglib/optimization.h	/^    ae_bool xupdated;$/;"	m	struct:alglib_impl::__anon73
xupdated	lib/alglib/optimization.h	/^    ae_bool xupdated;$/;"	m	struct:alglib_impl::__anon75
xupdated	lib/alglib/optimization.h	/^    ae_bool xupdated;$/;"	m	struct:alglib_impl::__anon77
xupdated	lib/alglib/optimization.h	/^    ae_bool xupdated;$/;"	m	struct:alglib_impl::__anon79
xupdated	lib/alglib/solvers.h	/^    ae_bool &xupdated;$/;"	m	class:alglib::nleqstate
xupdated	lib/alglib/solvers.h	/^    ae_bool xupdated;$/;"	m	struct:alglib_impl::__anon83
xwidth	lib/alglib/integration.h	/^    double xwidth;$/;"	m	struct:alglib_impl::__anon54
xwidth	lib/alglib/integration.h	/^    double xwidth;$/;"	m	struct:alglib_impl::__anon55
xy	lib/alglib/alglibmisc.h	/^    ae_matrix xy;$/;"	m	struct:alglib_impl::__anon25
xy2color	core/vision/Classifier.h	/^  inline Color xy2color(int x, int y) {$/;"	f	class:Classifier
xy2color	core/vision/ColorTableMethods.h	/^        static inline Color xy2color(const unsigned char* image, const unsigned char* colorTable, int x, int y, int width){$/;"	f	class:ColorTableMethods
xy2color	core/vision/ColorTableMethods.h	/^        static inline Color xy2color(const unsigned char* image, const unsigned char* colorTable, int x, int y, int width, int &gray){$/;"	f	class:ColorTableMethods
xy2gray	core/vision/ColorTableMethods.h	/^        static inline void xy2gray(const unsigned char* image, int xIdx, int yIdx, int width, int &gray){$/;"	f	class:ColorTableMethods
xy2yuv	core/vision/ColorTableMethods.h	/^        static inline void xy2yuv(const unsigned char* image, int xIdx, int yIdx, int width, int &y, int &u, int &v) {$/;"	f	class:ColorTableMethods
xybuf	lib/alglib/interpolation.h	/^    ae_matrix xybuf;$/;"	m	struct:alglib_impl::__anon56
y	build/include/tool/annotations/AnnotationAnalyzer.h	/^    unsigned char y;$/;"	m	struct:YUV
y	build/include/tool/annotations/EllipseSelection.h	/^        int y() {$/;"	f	class:EllipseSelection
y	build/include/tool/calibration/IntrinsicCalibrator.h	/^  float x, y, size, skew;$/;"	m	struct:ICMeasures
y	build/include/tool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
y	core/common/ColorConversion.h	/^    int y;$/;"	m	struct:color::Yuv444
y	core/common/ColorSpaces.h	/^  int y;$/;"	m	struct:YUV444
y	core/common/ToolPacket.h	/^    float x, y, theta, time;$/;"	m	struct:ToolPacket::__anon10
y	core/localization/Particle.h	/^    y, \/\/ Y coordinate$/;"	m	struct:Particle
y	core/math/Geometry.h	/^  float y; \/*!< y-coordinate of this position *\/$/;"	m	class:Point2D
y	core/math/Geometry.h	/^  float y; \/*!< y-coordinate of this position *\/$/;"	m	class:Point3D
y	core/math/Pose2D.h	/^  float &t, &x, &y;$/;"	m	class:Pose2D
y	core/math/Vector.h	/^  V y;$/;"	m	struct:VectorData
y	core/math/Vector2.h	/^  V x,y;$/;"	m	class:Vector2
y	core/math/Vector3.h	/^  V x,y,z;$/;"	m	class:Vector3
y	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   uint8_t y;$/;"	m	struct:pixelValues
y	core/motion/rswalk2014/types/AbsCoord.hpp	/^   const float y() const {$/;"	f	struct:AbsCoord
y	core/motion/rswalk2014/types/AbsCoord.hpp	/^   float &y() {$/;"	f	struct:AbsCoord
y	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      float x, y, z;$/;"	m	class:XYZ_Coord
y	core/vision/ImageProcessor.h	/^	int y;$/;"	m	class:Point2d
y	core/vision/structures/Coordinates.h	/^  int y;$/;"	m	struct:Coordinates
y	core/vision/structures/YUV.h	/^  uint8_t y;$/;"	m	struct:YUV
y	interfaces/sim_spark/Random.h	/^   float x, y;$/;"	m	struct:cartesianCoord
y	interfaces/sim_spark/Random.h	/^   float y( void ) { return sin( theta ) * sin( phi ); }   \/\/ y-coordinate$/;"	f	struct:sphericalCoord
y	lib/alglib/ap.h	/^    double x, y;$/;"	m	class:alglib::complex
y	lib/alglib/ap.h	/^typedef struct { double x, y; } ae_complex;$/;"	m	struct:alglib_impl::__anon26
y	lib/alglib/dataanalysis.h	/^    ae_vector y;$/;"	m	struct:alglib_impl::__anon44
y	lib/alglib/dataanalysis.h	/^    ae_vector y;$/;"	m	struct:alglib_impl::__anon50
y	lib/alglib/diffequations.h	/^    ae_vector y;$/;"	m	struct:alglib_impl::__anon51
y	lib/alglib/diffequations.h	/^    real_1d_array y;$/;"	m	class:alglib::odesolverstate
y	lib/alglib/interpolation.h	/^    ae_vector y;$/;"	m	struct:alglib_impl::__anon57
y	lib/alglib/interpolation.h	/^    spline1dinterpolant y;$/;"	m	struct:alglib_impl::__anon64
y	lib/alglib/interpolation.h	/^    spline1dinterpolant y;$/;"	m	struct:alglib_impl::__anon65
y	tools/UTNaoTool/annotations/AnnotationAnalyzer.h	/^    unsigned char y;$/;"	m	struct:YUV
y	tools/UTNaoTool/annotations/EllipseSelection.h	/^        int y() {$/;"	f	class:EllipseSelection
y	tools/UTNaoTool/calibration/IntrinsicCalibrator.h	/^  float x, y, size, skew;$/;"	m	struct:ICMeasures
y	tools/UTNaoTool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
y	tools/color_classifier/include/color_classifier/classification_window.hpp	/^    uint8_t y;$/;"	m	struct:color_classifier::Yuv
y	vision_testing/src/vision_testing.cpp	/^  unsigned char y;$/;"	m	class:YCrCb	file:
y0	core/common/ColorConversion.h	/^    int y0;$/;"	m	struct:color::Yuv422
y0	core/common/ColorSpaces.h	/^  int y0;$/;"	m	struct:YUV422
y1	core/common/ColorConversion.h	/^    int y1;$/;"	m	struct:color::Yuv422
y1	core/common/ColorSpaces.h	/^  int y1;$/;"	m	struct:YUV422
y1	core/vision/structures/FocusArea.h	/^  int x1, y1, x2, y2;$/;"	m	struct:FocusArea
y2	build/include/tool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
y2	core/vision/structures/FocusArea.h	/^  int x1, y1, x2, y2;$/;"	m	struct:FocusArea
y2	core/vision/structures/YUV.h	/^  uint8_t y2;$/;"	m	struct:YUV
y2	tools/UTNaoTool/joystickxbox.h	/^	float x, y, x2, y2, lt, rt;$/;"	m	struct:ControllerInfo
y_acc	core/sensor/InertialFilter.h	/^  float y_acc;$/;"	m	class:InertialFilter
y_arr_	core/math/Spline3D.h	/^  alglib::real_1d_array y_arr_;$/;"	m	class:Spline3D
y_gyro	core/sensor/InertialFilter.h	/^  float y_gyro;$/;"	m	class:InertialFilter
y_hat_bar	kalman_filters/include/kalman_filters/sr_unscented_kalman_filter.hpp	/^  MeasurementVector y_hat_bar;$/;"	m	class:SRUnscentedKalmanFilter
y_spline_	core/math/Spline3D.h	/^  alglib::spline1dinterpolant y_spline_;$/;"	m	class:Spline3D
y_target	core/motion/rswalk2014/RSWalkModule2014.h	/^	float y_target;$/;"	m	class:RSWalkModule2014
yaMatrix	core/math/YaMatrix.h	/^YaMatrix<T> yaMatrix(int M, int N, T first, ...)$/;"	f
yaVector	core/math/YaMatrix.h	/^YaVector<T> yaVector(int N, double first, ...)$/;"	f
yaw	core/motion/rswalk2014/HeadGenerator.hpp	/^      float yaw;$/;"	m	class:HeadGenerator
yaw	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float yaw;      \/\/ LEFT-RIGHT motion. Positive is LEFT$/;"	m	struct:ActionCommand::Head
yawOffsetToBottomCamera	core/common/RobotDimensions.h	/^    yawOffsetToBottomCamera,$/;"	e	enum:RobotDimensions::__anon8
yawOffsetToTopCamera	core/common/RobotDimensions.h	/^    yawOffsetToTopCamera,$/;"	e	enum:RobotDimensions::__anon8
yawSpeed	core/motion/rswalk2014/types/ActionCommand.hpp	/^      float yawSpeed; \/\/ Speed of the yaw [0.0, 1.0]$/;"	m	struct:ActionCommand::Head
yc	lib/alglib/diffequations.h	/^    ae_vector yc;$/;"	m	struct:alglib_impl::__anon51
ycomponent	core/motion/rswalk2014/perception/vision/VisionDefs.hpp	/^   ycomponent,$/;"	e	enum:__anon13
ycoords_	core/math/Polygon.h	/^        int *xcoords_, *ycoords_, count_;$/;"	m	class:Polygon
yf	core/vision/structures/Blob.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:Blob
yf	core/vision/structures/GoalPostCandidate.h	/^  uint16_t xi, xf, yi, yf; $/;"	m	struct:GoalPostCandidate
yf	core/vision/structures/RobotCandidate.h	/^  uint16_t xi, xf, yi, yf;$/;"	m	struct:RobotCandidate
yf	core/vision/structures/VisionPoint.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:VisionPoint
yi	core/vision/structures/Blob.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:Blob
yi	core/vision/structures/GoalPostCandidate.h	/^  uint16_t xi, xf, yi, yf; $/;"	m	struct:GoalPostCandidate
yi	core/vision/structures/RobotCandidate.h	/^  uint16_t xi, xf, yi, yf;$/;"	m	struct:RobotCandidate
yi	core/vision/structures/VisionPoint.h	/^  uint16_t xi, xf, dx, yi, yf, dy;$/;"	m	struct:VisionPoint
yindex	lib/lua/src/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
yk	lib/alglib/optimization.h	/^    ae_matrix yk;$/;"	m	struct:alglib_impl::__anon69
yk	lib/alglib/optimization.h	/^    ae_vector yk;$/;"	m	struct:alglib_impl::__anon75
yk	lib/alglib/optimization.h	/^    ae_vector yk;$/;"	m	struct:alglib_impl::__anon77
yn	lib/alglib/diffequations.h	/^    ae_vector yn;$/;"	m	struct:alglib_impl::__anon51
yns	lib/alglib/diffequations.h	/^    ae_vector yns;$/;"	m	struct:alglib_impl::__anon51
ytbl	lib/alglib/diffequations.h	/^    ae_matrix ytbl;$/;"	m	struct:alglib_impl::__anon51
yuv2color	core/vision/ColorTableMethods.h	/^        static inline Color yuv2color(const unsigned char* colorTable, int y, int u, int v) {$/;"	f	class:ColorTableMethods
yuv2rgb	vision_testing/src/vision_testing.cpp	/^RGB yuv2rgb(YCrCb in)$/;"	f
yuv422ToRgb	core/common/ColorConversion.h	/^  inline void yuv422ToRgb(const Yuv422& yuyv, Rgb& rgb1, Rgb& rgb2) {$/;"	f	namespace:color
yuv444ToRgb	core/common/ColorConversion.h	/^  inline Rgb yuv444ToRgb (const Yuv444& yuv) {$/;"	f	namespace:color
yuv444ToRgb	core/common/ColorConversion.h	/^  inline Rgb yuv444ToRgb (int y, int u, int v) {$/;"	f	namespace:color
yuvImage2hsv	vision_testing/src/vision_testing.cpp	/^void yuvImage2hsv(unsigned char* img_yuv, unsigned char* img_hsv, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
yuvImage2rgb	vision_testing/src/vision_testing.cpp	/^void yuvImage2rgb(unsigned char* img_ycrcb, unsigned char* img_rgb, unsigned int min_x, unsigned int min_y, unsigned int max_x, unsigned int max_y)$/;"	f
z	core/math/Geometry.h	/^  float z; \/*!< z-coordinate of this position *\/$/;"	m	class:Point3D
z	core/math/Vector.h	/^  V z;$/;"	m	struct:VectorData
z	core/math/Vector3.h	/^  V x,y,z;$/;"	m	class:Vector3
z	core/motion/rswalk2014/Walk2014Generator.hpp	/^   const float z;                                          \/\/ zero$/;"	m	class:Walk2014Generator
z	core/motion/rswalk2014/types/XYZ_Coord.hpp	/^      float x, y, z;$/;"	m	class:XYZ_Coord
z	interfaces/sim_spark/Random.h	/^   float z( void ) { return cos( theta ); }                \/\/ z-coordinate$/;"	f	struct:sphericalCoord
z	lib/alglib/interpolation.h	/^    spline1dinterpolant z;$/;"	m	struct:alglib_impl::__anon65
z	lib/lua/src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	lib/lua/src/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState
z1	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  StateVector z1;$/;"	m	class:UnscentedKalmanFilter
zError	lib/zlib/zconf.h	/^#  define zError /;"	d
zError	lib/zlib/zutil.c	/^const char * ZEXPORT zError(err)$/;"	f
zHeadTiltToBottomCamera	core/common/RobotDimensions.h	/^    zHeadTiltToBottomCamera,$/;"	e	enum:RobotDimensions::__anon8
zHeadTiltToTopCamera	core/common/RobotDimensions.h	/^    zHeadTiltToTopCamera,$/;"	e	enum:RobotDimensions::__anon8
zLegJoint1ToHeadPan	core/common/RobotDimensions.h	/^    zLegJoint1ToHeadPan,$/;"	e	enum:RobotDimensions::__anon8
z_acc	core/sensor/InertialFilter.h	/^  float z_acc;$/;"	m	class:InertialFilter
z_arr_	core/math/Spline3D.h	/^  alglib::real_1d_array z_arr_;$/;"	m	class:Spline3D
z_errmsg	lib/zlib/zutil.c	/^const char * const z_errmsg[10] = {$/;"	v
z_error	lib/zlib/zutil.c	/^void ZLIB_INTERNAL z_error (m)$/;"	f
z_hat	kalman_filters/include/kalman_filters/unscented_kalman_filter.hpp	/^  MeasurementVector z_hat;$/;"	m	class:UnscentedKalmanFilter
z_hat	kalman_filters/include/kalman_filters/unscented_kalman_filter2.hpp	/^  MeasurementVector z_hat;$/;"	m	class:UnscentedKalmanFilter
z_off64_t	lib/zlib/zconf.h	/^#  define z_off64_t /;"	d
z_off_t	lib/zlib/zconf.h	/^#    define z_off_t /;"	d
z_off_t	lib/zlib/zconf.h	/^#  define z_off_t /;"	d
z_spline_	core/math/Spline3D.h	/^  alglib::spline1dinterpolant z_spline_;$/;"	m	class:Spline3D
z_stream	lib/zlib/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	lib/zlib/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	lib/zlib/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
z_verbose	lib/zlib/zutil.c	/^int ZLIB_INTERNAL z_verbose = verbose;$/;"	v
zalloc	lib/zlib/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zcalloc	lib/zlib/zconf.h	/^#  define zcalloc /;"	d
zcalloc	lib/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc (opaque, items, size)$/;"	f
zcalloc	lib/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, uInt items, uInt size)$/;"	f
zcalloc	lib/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, unsigned items, unsigned size)$/;"	f
zcfree	lib/zlib/zconf.h	/^#  define zcfree /;"	d
zcfree	lib/zlib/zutil.c	/^void ZLIB_INTERNAL zcfree (opaque, ptr)$/;"	f
zcfree	lib/zlib/zutil.c	/^void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)$/;"	f
zeros	tools/behaviorSim/cma.py	/^import collections, numpy as np # arange, cos, size, eye, inf, dot, floor, outer, zeros, linalg.eigh, sort, argsort, random, ones,... $/;"	i
zfree	lib/zlib/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zgetc	lib/lua/src/lzio.h	/^#define zgetc(/;"	d
zlibCompileFlags	lib/zlib/zconf.h	/^#  define zlibCompileFlags /;"	d
zlibCompileFlags	lib/zlib/zutil.c	/^uLong ZEXPORT zlibCompileFlags()$/;"	f
zlibVersion	lib/zlib/zconf.h	/^#  define zlibVersion /;"	d
zlibVersion	lib/zlib/zutil.c	/^const char * ZEXPORT zlibVersion()$/;"	f
zlib_version	lib/zlib/zlib.h	/^#define zlib_version /;"	d
zmemcmp	lib/zlib/zutil.c	/^int ZLIB_INTERNAL zmemcmp(s1, s2, len)$/;"	f
zmemcmp	lib/zlib/zutil.h	/^#    define zmemcmp /;"	d
zmemcpy	lib/zlib/zutil.c	/^void ZLIB_INTERNAL zmemcpy(dest, source, len)$/;"	f
zmemcpy	lib/zlib/zutil.h	/^#    define zmemcpy /;"	d
zmemzero	lib/zlib/zutil.c	/^void ZLIB_INTERNAL zmemzero(dest, len)$/;"	f
zmemzero	lib/zlib/zutil.h	/^#    define zmemzero(/;"	d
zmpFromFSRs	core/memory/BodyModelBlock.h	/^  Vector2<float> zmpFromFSRs;$/;"	m	struct:BodyModelBlock
zmp_	core/memory/WalkEngineBlock.h	/^    Vector2<float> zmp_;$/;"	m	struct:WalkEngineBlock::WalkState
zmp_ref_	core/memory/WalkEngineBlock.h	/^  RingQueue<Vector2<float>, MAX_PREVIEW_FRAMES> zmp_ref_;$/;"	m	struct:WalkEngineBlock
zmp_sensor_control_ratio_	core/motion/WalkEngineParameters.h	/^  float zmp_sensor_control_ratio_;$/;"	m	struct:WalkEngineParameters
zoomIn	build/include/tool/ImageWidget.cpp	/^void ImageWidget::zoomIn(int startx, int starty, int endx, int endy){$/;"	f	class:ImageWidget
zoomIn	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::zoomIn(int startx, int starty, int endx, int endy){$/;"	f	class:ImageWidget
zoomOut	build/include/tool/ImageWidget.cpp	/^void ImageWidget::zoomOut(){$/;"	f	class:ImageWidget
zoomOut	tools/UTNaoTool/ImageWidget.cpp	/^void ImageWidget::zoomOut(){$/;"	f	class:ImageWidget
zoomstack_	build/include/tool/ImageWidget.h	/^    std::vector<QRect> zoomstack_;$/;"	m	class:ImageWidget
zoomstack_	tools/UTNaoTool/ImageWidget.h	/^    std::vector<QRect> zoomstack_;$/;"	m	class:ImageWidget
zstrerror	lib/zlib/gzguts.h	/^#    define zstrerror(/;"	d
zstrerror	lib/zlib/gzguts.h	/^#  define zstrerror(/;"	d
zunit	core/motion/rswalk2014/perception/kinematics/Pose.hpp	/^      boost::numeric::ublas::matrix<float> origin, zunit;$/;"	m	class:Pose
~ALMotionWrapper	interfaces/nao/src/almotionwrapper.cpp	/^ALMotionWrapper::~ALMotionWrapper() {$/;"	f	class:ALMotionWrapper
~AbstractMemory	core/memory/AbstractMemory.h	/^  ~AbstractMemory() {};$/;"	f	class:AbstractMemory
~ActionGenerator	core/motion/rswalk2014/ActionGenerator.cpp	/^ActionGenerator::~ActionGenerator() {$/;"	f	class:ActionGenerator
~AnnotationGroup	build/include/tool/annotations/AnnotationGroup.cpp	/^AnnotationGroup::~AnnotationGroup() {$/;"	f	class:AnnotationGroup
~AnnotationGroup	tools/UTNaoTool/annotations/AnnotationGroup.cpp	/^AnnotationGroup::~AnnotationGroup() {$/;"	f	class:AnnotationGroup
~AudioWrapper	interfaces/nao/src/AudioWrapper.cpp	/^AudioWrapper::~AudioWrapper() {$/;"	f	class:AudioWrapper
~BBox	core/motion/rswalk2014/types/BBox.hpp	/^   virtual ~BBox () {}$/;"	f	struct:BBox
~Behavior	interfaces/sim_spark/Behavior.cpp	/^Behavior::~Behavior(){$/;"	f	class:Behavior
~BehaviorSimulation	build/include/tool/simulation/BehaviorSimulation.cpp	/^BehaviorSimulation::~BehaviorSimulation(){$/;"	f	class:BehaviorSimulation
~BehaviorSimulation	tools/UTNaoTool/simulation/BehaviorSimulation.cpp	/^BehaviorSimulation::~BehaviorSimulation(){$/;"	f	class:BehaviorSimulation
~Blob	core/vision/Union_find.h	/^			~Blob()$/;"	f	struct:MergeBlob::Blob
~ClassificationWindow	tools/color_classifier/src/classification_window.cpp	/^  ClassificationWindow::~ClassificationWindow() {}$/;"	f	class:color_classifier::ClassificationWindow
~Classifier	core/vision/Classifier.cpp	/^Classifier::~Classifier() {$/;"	f	class:Classifier
~ClippedGenerator	core/motion/rswalk2014/ClippedGenerator.cpp	/^ClippedGenerator::~ClippedGenerator() {$/;"	f	class:ClippedGenerator
~CommunicationGenerator	build/include/tool/simulation/CommunicationGenerator.cpp	/^CommunicationGenerator::~CommunicationGenerator() {$/;"	f	class:CommunicationGenerator
~CommunicationGenerator	tools/UTNaoTool/simulation/CommunicationGenerator.cpp	/^CommunicationGenerator::~CommunicationGenerator() {$/;"	f	class:CommunicationGenerator
~CommunicationModule	core/communications/CommunicationModule.cpp	/^CommunicationModule::~CommunicationModule() {$/;"	f	class:CommunicationModule
~DCMWrapper	interfaces/nao/src/dcmwrapper.cpp	/^DCMWrapper::~DCMWrapper() {$/;"	f	class:DCMWrapper
~DeadGenerator	core/motion/rswalk2014/DeadGenerator.cpp	/^DeadGenerator::~DeadGenerator() {$/;"	f	class:DeadGenerator
~DistributedGenerator	core/motion/rswalk2014/DistributedGenerator.cpp	/^DistributedGenerator::~DistributedGenerator() {$/;"	f	class:DistributedGenerator
~Emitter	lib/yaml-cpp/src/emitter.cpp	/^	Emitter::~Emitter()$/;"	f	class:YAML::Emitter
~EmitterState	lib/yaml-cpp/src/emitterstate.cpp	/^	EmitterState::~EmitterState()$/;"	f	class:YAML::EmitterState
~Encoder	interfaces/sim_spark/encode.h	/^  ~Encoder()$/;"	f	class:base64::Encoder
~EventHandler	lib/yaml-cpp/include/yaml-cpp/eventhandler.h	/^		virtual ~EventHandler() {}$/;"	f	class:YAML::EventHandler
~Exception	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		virtual ~Exception() throw() {}$/;"	f	class:YAML::Exception
~FTypeName	core/motion/rswalk2014/FADBAD++/fadiff.h	/^	~FTypeName(){ delete[] m_diff; }$/;"	f	class:fadbad::FTypeName
~Generator	core/motion/rswalk2014/Generator.hpp	/^      virtual ~Generator() {}$/;"	f	class:Generator
~HeadGenerator	core/motion/rswalk2014/HeadGenerator.cpp	/^HeadGenerator::~HeadGenerator() {$/;"	f	class:HeadGenerator
~ImageBlock	core/memory/ImageBlock.cpp	/^ImageBlock::~ImageBlock() {$/;"	f	class:ImageBlock
~InterpreterModule	core/InterpreterModule.cpp	/^InterpreterModule::~InterpreterModule() {$/;"	f	class:InterpreterModule
~Iterator	lib/yaml-cpp/src/iterator.cpp	/^	Iterator::~Iterator()$/;"	f	class:YAML::Iterator
~JointCalibrator	build/include/tool/calibration/JointCalibrator.cpp	/^JointCalibrator::~JointCalibrator() {$/;"	f	class:JointCalibrator
~JointCalibrator	tools/UTNaoTool/calibration/JointCalibrator.cpp	/^JointCalibrator::~JointCalibrator() {$/;"	f	class:JointCalibrator
~LocalizationModule	core/localization/LocalizationModule.cpp	/^LocalizationModule::~LocalizationModule() {$/;"	f	class:LocalizationModule
~LocalizationSimulation	build/include/tool/simulation/LocalizationSimulation.cpp	/^LocalizationSimulation::~LocalizationSimulation() {$/;"	f	class:LocalizationSimulation
~LocalizationSimulation	tools/UTNaoTool/simulation/LocalizationSimulation.cpp	/^LocalizationSimulation::~LocalizationSimulation() {$/;"	f	class:LocalizationSimulation
~Lock	core/memory/Lock.cpp	/^Lock::~Lock() {$/;"	f	class:Lock
~Log	core/memory/Log.cpp	/^Log::~Log() {$/;"	f	class:Log
~LogReader	core/memory/LogReader.cpp	/^LogReader::~LogReader() {$/;"	f	class:LogReader
~Logger	core/memory/Logger.cpp	/^Logger::~Logger() {$/;"	f	class:Logger
~Logger	core/motion/rswalk2014/utils/Logger.cpp	/^Logger::~Logger() {$/;"	f	class:Logger
~MainWindow	tools/color_classifier/src/main_window.cpp	/^  MainWindow::~MainWindow() {}$/;"	f	class:color_classifier::MainWindow
~Memory	core/memory/Memory.cpp	/^Memory::~Memory() {$/;"	f	class:Memory
~MemoryBlock	core/memory/MemoryBlock.h	/^  virtual ~MemoryBlock() {}$/;"	f	class:MemoryBlock
~MergeBlob	core/vision/Union_find.h	/^		~MergeBlob()$/;"	f	class:MergeBlob
~MotionCore	core/MotionCore.cpp	/^MotionCore::~MotionCore() {$/;"	f	class:MotionCore
~MotionSimulation	build/include/tool/MotionSimulation.cpp	/^MotionSimulation::~MotionSimulation(){$/;"	f	class:MotionSimulation
~MotionSimulation	tools/UTNaoTool/MotionSimulation.cpp	/^MotionSimulation::~MotionSimulation(){$/;"	f	class:MotionSimulation
~NMatrix	core/common/NMatrix.cpp	/^NMatrix::~NMatrix()$/;"	f	class:NMatrix
~NaoCamera	core/imageCapture/NaoCamera.cpp	/^NaoCamera::~NaoCamera() {$/;"	f	class:NaoCamera
~Node	lib/yaml-cpp/src/node.cpp	/^	Node::~Node()$/;"	f	class:YAML::Node
~NodeBuilder	lib/yaml-cpp/src/nodebuilder.cpp	/^	NodeBuilder::~NodeBuilder()$/;"	f	class:YAML::NodeBuilder
~NodeOwnership	lib/yaml-cpp/src/nodeownership.cpp	/^	NodeOwnership::~NodeOwnership()$/;"	f	class:YAML::NodeOwnership
~NullGenerator	core/motion/rswalk2014/NullGenerator.cpp	/^NullGenerator::~NullGenerator() {$/;"	f	class:NullGenerator
~ObservationGenerator	build/include/tool/simulation/ObservationGenerator.cpp	/^ObservationGenerator::~ObservationGenerator() {$/;"	f	class:ObservationGenerator
~ObservationGenerator	tools/UTNaoTool/simulation/ObservationGenerator.cpp	/^ObservationGenerator::~ObservationGenerator() {$/;"	f	class:ObservationGenerator
~Parser	interfaces/sim_spark/Parser.cpp	/^Parser::~Parser() {$/;"	f	class:Parser
~Parser	lib/yaml-cpp/src/parser.cpp	/^	Parser::~Parser()$/;"	f	class:YAML::Parser
~PlanKick	motion_planning/src/plan_kick.cpp	/^  PlanKick::~PlanKick()$/;"	f	class:motion_planning::PlanKick
~PlotWindow	build/include/tool/PlotWindow.cpp	/^PlotWindow::~PlotWindow() {$/;"	f	class:PlotWindow
~PlotWindow	tools/UTNaoTool/PlotWindow.cpp	/^PlotWindow::~PlotWindow() {$/;"	f	class:PlotWindow
~PolygonSelection	build/include/tool/annotations/PolygonSelection.h	/^        ~PolygonSelection() {$/;"	f	class:PolygonSelection
~PolygonSelection	tools/UTNaoTool/annotations/PolygonSelection.h	/^        ~PolygonSelection() {$/;"	f	class:PolygonSelection
~PostInfo	core/motion/rswalk2014/types/PostInfo.hpp	/^   virtual ~PostInfo () {}$/;"	f	struct:PostInfo
~PrivateMemory	core/memory/PrivateMemory.cpp	/^PrivateMemory::~PrivateMemory() {$/;"	f	class:PrivateMemory
~PythonModule	core/python/PythonModule.cpp	/^PythonModule::~PythonModule(){$/;"	f	class:PythonModule
~RSCamera	core/motion/rswalk2014/perception/vision/RSCamera.hpp	/^      virtual ~RSCamera() {}$/;"	f	class:RSCamera
~RSWalkModule2014	core/motion/rswalk2014/RSWalkModule2014.cpp	/^RSWalkModule2014::~RSWalkModule2014() {$/;"	f	class:RSWalkModule2014
~Random	interfaces/sim_spark/Random.h	/^  ~Random( void )   \/\/ default destructor$/;"	f	class:Random
~RefPickupGenerator	core/motion/rswalk2014/RefPickupGenerator.cpp	/^RefPickupGenerator::~RefPickupGenerator() {$/;"	f	class:RefPickupGenerator
~RegEx	lib/yaml-cpp/src/regex.h	/^		~RegEx() {}$/;"	f	class:YAML::RegEx
~RobotBehavior	interfaces/sim_spark/RobotBehavior.cpp	/^RobotBehavior::~RobotBehavior(){$/;"	f	class:RobotBehavior
~RobotVisionBlock	core/memory/RobotVisionBlock.cpp	/^RobotVisionBlock::~RobotVisionBlock() {$/;"	f	class:RobotVisionBlock
~Scanner	lib/yaml-cpp/src/scanner.cpp	/^	Scanner::~Scanner()$/;"	f	class:YAML::Scanner
~SettingChangeBase	lib/yaml-cpp/src/setting.h	/^		virtual ~SettingChangeBase() {}$/;"	f	class:YAML::SettingChangeBase
~SettingChanges	lib/yaml-cpp/src/setting.h	/^		~SettingChanges() { clear(); }$/;"	f	class:YAML::SettingChanges
~SharedMemory	core/memory/SharedMemory.cpp	/^SharedMemory::~SharedMemory() {$/;"	f	class:SharedMemory
~SimulatedPlayer	build/include/tool/simulation/SimulatedPlayer.cpp	/^SimulatedPlayer::~SimulatedPlayer(){$/;"	f	class:SimulatedPlayer
~SimulatedPlayer	tools/UTNaoTool/simulation/SimulatedPlayer.cpp	/^SimulatedPlayer::~SimulatedPlayer(){$/;"	f	class:SimulatedPlayer
~SingleDocParser	lib/yaml-cpp/src/singledocparser.cpp	/^	SingleDocParser::~SingleDocParser()$/;"	f	class:YAML::SingleDocParser
~StandGenerator	core/motion/rswalk2014/StandGenerator.cpp	/^StandGenerator::~StandGenerator() {$/;"	f	class:StandGenerator
~Stream	lib/yaml-cpp/src/stream.cpp	/^	Stream::~Stream()$/;"	f	class:YAML::Stream
~StreamCharSource	lib/yaml-cpp/src/streamcharsource.h	/^		~StreamCharSource() {}$/;"	f	class:YAML::StreamCharSource
~SynchronizedBlock	core/memory/SynchronizedBlock.h	/^  ~SynchronizedBlock() {$/;"	f	class:SynchronizedBlock
~TagMismatch	lib/yaml-cpp/test/old-api/parsertests.cpp	/^			virtual ~TagMismatch() throw() {}$/;"	f	struct:Test::Parser::TagMismatch
~TextLogger	core/memory/TextLogger.cpp	/^TextLogger::~TextLogger() {$/;"	f	class:TextLogger
~ThreadedUDPSocket	core/communications/ThreadedUDPSocket.cpp	/^ThreadedUDPSocket::~ThreadedUDPSocket() {$/;"	f	class:ThreadedUDPSocket
~ToolProcess	build/include/tool/ProcessExecutor.cpp	/^ToolProcess::~ToolProcess() { if(process) delete process; }$/;"	f	class:ToolProcess
~ToolProcess	tools/UTNaoTool/ProcessExecutor.cpp	/^ToolProcess::~ToolProcess() { if(process) delete process; }$/;"	f	class:ToolProcess
~TypedKeyNotFound	lib/yaml-cpp/include/yaml-cpp/exceptions.h	/^		virtual ~TypedKeyNotFound() throw() {}$/;"	f	class:YAML::TypedKeyNotFound
~UDPWrapper	core/communications/UDPWrapper.cpp	/^UDPWrapper::~UDPWrapper() {$/;"	f	class:UDPWrapper
~UTMainWnd	build/include/tool/UTMainWnd.cpp	/^UTMainWnd::~UTMainWnd() {$/;"	f	class:UTMainWnd
~UTMainWnd	tools/UTNaoTool/UTMainWnd.cpp	/^UTMainWnd::~UTMainWnd() {$/;"	f	class:UTMainWnd
~VisionCore	core/VisionCore.cpp	/^VisionCore::~VisionCore() {$/;"	f	class:VisionCore
~VisionModule	core/vision/VisionModule.cpp	/^VisionModule::~VisionModule() {$/;"	f	class:VisionModule
~VisionWindow	build/include/tool/VisionWindow.cpp	/^VisionWindow::~VisionWindow() {$/;"	f	class:VisionWindow
~VisionWindow	tools/UTNaoTool/VisionWindow.cpp	/^VisionWindow::~VisionWindow() {$/;"	f	class:VisionWindow
~Walk2014Generator	core/motion/rswalk2014/Walk2014Generator.cpp	/^Walk2014Generator::~Walk2014Generator() {$/;"	f	class:Walk2014Generator
~WalkEnginePreProcessor	core/motion/rswalk2014/WalkEnginePreProcessor.cpp	/^WalkEnginePreProcessor::~WalkEnginePreProcessor() {$/;"	f	class:WalkEnginePreProcessor
~WorldObject	core/common/WorldObject.cpp	/^WorldObject::~WorldObject() {$/;"	f	class:WorldObject
~_autogkreport_owner	lib/alglib/integration.cpp	/^_autogkreport_owner::~_autogkreport_owner()$/;"	f	class:alglib::_autogkreport_owner
~_autogkstate_owner	lib/alglib/integration.cpp	/^_autogkstate_owner::~_autogkstate_owner()$/;"	f	class:alglib::_autogkstate_owner
~_barycentricfitreport_owner	lib/alglib/interpolation.cpp	/^_barycentricfitreport_owner::~_barycentricfitreport_owner()$/;"	f	class:alglib::_barycentricfitreport_owner
~_barycentricinterpolant_owner	lib/alglib/interpolation.cpp	/^_barycentricinterpolant_owner::~_barycentricinterpolant_owner()$/;"	f	class:alglib::_barycentricinterpolant_owner
~_decisionforest_owner	lib/alglib/dataanalysis.cpp	/^_decisionforest_owner::~_decisionforest_owner()$/;"	f	class:alglib::_decisionforest_owner
~_densesolverlsreport_owner	lib/alglib/solvers.cpp	/^_densesolverlsreport_owner::~_densesolverlsreport_owner()$/;"	f	class:alglib::_densesolverlsreport_owner
~_densesolverreport_owner	lib/alglib/solvers.cpp	/^_densesolverreport_owner::~_densesolverreport_owner()$/;"	f	class:alglib::_densesolverreport_owner
~_dfreport_owner	lib/alglib/dataanalysis.cpp	/^_dfreport_owner::~_dfreport_owner()$/;"	f	class:alglib::_dfreport_owner
~_hqrndstate_owner	lib/alglib/alglibmisc.cpp	/^_hqrndstate_owner::~_hqrndstate_owner()$/;"	f	class:alglib::_hqrndstate_owner
~_idwinterpolant_owner	lib/alglib/interpolation.cpp	/^_idwinterpolant_owner::~_idwinterpolant_owner()$/;"	f	class:alglib::_idwinterpolant_owner
~_kdtree_owner	lib/alglib/alglibmisc.cpp	/^_kdtree_owner::~_kdtree_owner()$/;"	f	class:alglib::_kdtree_owner
~_linearmodel_owner	lib/alglib/dataanalysis.cpp	/^_linearmodel_owner::~_linearmodel_owner()$/;"	f	class:alglib::_linearmodel_owner
~_logitmodel_owner	lib/alglib/dataanalysis.cpp	/^_logitmodel_owner::~_logitmodel_owner()$/;"	f	class:alglib::_logitmodel_owner
~_lrreport_owner	lib/alglib/dataanalysis.cpp	/^_lrreport_owner::~_lrreport_owner()$/;"	f	class:alglib::_lrreport_owner
~_lsfitreport_owner	lib/alglib/interpolation.cpp	/^_lsfitreport_owner::~_lsfitreport_owner()$/;"	f	class:alglib::_lsfitreport_owner
~_lsfitstate_owner	lib/alglib/interpolation.cpp	/^_lsfitstate_owner::~_lsfitstate_owner()$/;"	f	class:alglib::_lsfitstate_owner
~_matinvreport_owner	lib/alglib/linalg.cpp	/^_matinvreport_owner::~_matinvreport_owner()$/;"	f	class:alglib::_matinvreport_owner
~_minasareport_owner	lib/alglib/optimization.cpp	/^_minasareport_owner::~_minasareport_owner()$/;"	f	class:alglib::_minasareport_owner
~_minasastate_owner	lib/alglib/optimization.cpp	/^_minasastate_owner::~_minasastate_owner()$/;"	f	class:alglib::_minasastate_owner
~_minbleicreport_owner	lib/alglib/optimization.cpp	/^_minbleicreport_owner::~_minbleicreport_owner()$/;"	f	class:alglib::_minbleicreport_owner
~_minbleicstate_owner	lib/alglib/optimization.cpp	/^_minbleicstate_owner::~_minbleicstate_owner()$/;"	f	class:alglib::_minbleicstate_owner
~_mincgreport_owner	lib/alglib/optimization.cpp	/^_mincgreport_owner::~_mincgreport_owner()$/;"	f	class:alglib::_mincgreport_owner
~_mincgstate_owner	lib/alglib/optimization.cpp	/^_mincgstate_owner::~_mincgstate_owner()$/;"	f	class:alglib::_mincgstate_owner
~_minlbfgsreport_owner	lib/alglib/optimization.cpp	/^_minlbfgsreport_owner::~_minlbfgsreport_owner()$/;"	f	class:alglib::_minlbfgsreport_owner
~_minlbfgsstate_owner	lib/alglib/optimization.cpp	/^_minlbfgsstate_owner::~_minlbfgsstate_owner()$/;"	f	class:alglib::_minlbfgsstate_owner
~_minlmreport_owner	lib/alglib/optimization.cpp	/^_minlmreport_owner::~_minlmreport_owner()$/;"	f	class:alglib::_minlmreport_owner
~_minlmstate_owner	lib/alglib/optimization.cpp	/^_minlmstate_owner::~_minlmstate_owner()$/;"	f	class:alglib::_minlmstate_owner
~_minqpreport_owner	lib/alglib/optimization.cpp	/^_minqpreport_owner::~_minqpreport_owner()$/;"	f	class:alglib::_minqpreport_owner
~_minqpstate_owner	lib/alglib/optimization.cpp	/^_minqpstate_owner::~_minqpstate_owner()$/;"	f	class:alglib::_minqpstate_owner
~_mlpcvreport_owner	lib/alglib/dataanalysis.cpp	/^_mlpcvreport_owner::~_mlpcvreport_owner()$/;"	f	class:alglib::_mlpcvreport_owner
~_mlpensemble_owner	lib/alglib/dataanalysis.cpp	/^_mlpensemble_owner::~_mlpensemble_owner()$/;"	f	class:alglib::_mlpensemble_owner
~_mlpreport_owner	lib/alglib/dataanalysis.cpp	/^_mlpreport_owner::~_mlpreport_owner()$/;"	f	class:alglib::_mlpreport_owner
~_mnlreport_owner	lib/alglib/dataanalysis.cpp	/^_mnlreport_owner::~_mnlreport_owner()$/;"	f	class:alglib::_mnlreport_owner
~_multilayerperceptron_owner	lib/alglib/dataanalysis.cpp	/^_multilayerperceptron_owner::~_multilayerperceptron_owner()$/;"	f	class:alglib::_multilayerperceptron_owner
~_nleqreport_owner	lib/alglib/solvers.cpp	/^_nleqreport_owner::~_nleqreport_owner()$/;"	f	class:alglib::_nleqreport_owner
~_nleqstate_owner	lib/alglib/solvers.cpp	/^_nleqstate_owner::~_nleqstate_owner()$/;"	f	class:alglib::_nleqstate_owner
~_odesolverreport_owner	lib/alglib/diffequations.cpp	/^_odesolverreport_owner::~_odesolverreport_owner()$/;"	f	class:alglib::_odesolverreport_owner
~_odesolverstate_owner	lib/alglib/diffequations.cpp	/^_odesolverstate_owner::~_odesolverstate_owner()$/;"	f	class:alglib::_odesolverstate_owner
~_polynomialfitreport_owner	lib/alglib/interpolation.cpp	/^_polynomialfitreport_owner::~_polynomialfitreport_owner()$/;"	f	class:alglib::_polynomialfitreport_owner
~_pspline2interpolant_owner	lib/alglib/interpolation.cpp	/^_pspline2interpolant_owner::~_pspline2interpolant_owner()$/;"	f	class:alglib::_pspline2interpolant_owner
~_pspline3interpolant_owner	lib/alglib/interpolation.cpp	/^_pspline3interpolant_owner::~_pspline3interpolant_owner()$/;"	f	class:alglib::_pspline3interpolant_owner
~_spline1dfitreport_owner	lib/alglib/interpolation.cpp	/^_spline1dfitreport_owner::~_spline1dfitreport_owner()$/;"	f	class:alglib::_spline1dfitreport_owner
~_spline1dinterpolant_owner	lib/alglib/interpolation.cpp	/^_spline1dinterpolant_owner::~_spline1dinterpolant_owner()$/;"	f	class:alglib::_spline1dinterpolant_owner
~_spline2dinterpolant_owner	lib/alglib/interpolation.cpp	/^_spline2dinterpolant_owner::~_spline2dinterpolant_owner()$/;"	f	class:alglib::_spline2dinterpolant_owner
~ae_matrix_wrapper	lib/alglib/ap.cpp	/^alglib::ae_matrix_wrapper::~ae_matrix_wrapper()$/;"	f	class:alglib::ae_matrix_wrapper
~ae_vector_wrapper	lib/alglib/ap.cpp	/^alglib::ae_vector_wrapper::~ae_vector_wrapper()$/;"	f	class:alglib::ae_vector_wrapper
~autogkreport	lib/alglib/integration.cpp	/^autogkreport::~autogkreport()$/;"	f	class:alglib::autogkreport
~autogkstate	lib/alglib/integration.cpp	/^autogkstate::~autogkstate()$/;"	f	class:alglib::autogkstate
~barycentricfitreport	lib/alglib/interpolation.cpp	/^barycentricfitreport::~barycentricfitreport()$/;"	f	class:alglib::barycentricfitreport
~barycentricinterpolant	lib/alglib/interpolation.cpp	/^barycentricinterpolant::~barycentricinterpolant()$/;"	f	class:alglib::barycentricinterpolant
~boolean_1d_array	lib/alglib/ap.cpp	/^alglib::boolean_1d_array::~boolean_1d_array() $/;"	f	class:alglib::boolean_1d_array
~boolean_2d_array	lib/alglib/ap.cpp	/^alglib::boolean_2d_array::~boolean_2d_array() $/;"	f	class:alglib::boolean_2d_array
~complex_1d_array	lib/alglib/ap.cpp	/^alglib::complex_1d_array::~complex_1d_array() $/;"	f	class:alglib::complex_1d_array
~complex_2d_array	lib/alglib/ap.cpp	/^alglib::complex_2d_array::~complex_2d_array() $/;"	f	class:alglib::complex_2d_array
~decisionforest	lib/alglib/dataanalysis.cpp	/^decisionforest::~decisionforest()$/;"	f	class:alglib::decisionforest
~densesolverlsreport	lib/alglib/solvers.cpp	/^densesolverlsreport::~densesolverlsreport()$/;"	f	class:alglib::densesolverlsreport
~densesolverreport	lib/alglib/solvers.cpp	/^densesolverreport::~densesolverreport()$/;"	f	class:alglib::densesolverreport
~dfreport	lib/alglib/dataanalysis.cpp	/^dfreport::~dfreport()$/;"	f	class:alglib::dfreport
~hqrndstate	lib/alglib/alglibmisc.cpp	/^hqrndstate::~hqrndstate()$/;"	f	class:alglib::hqrndstate
~idwinterpolant	lib/alglib/interpolation.cpp	/^idwinterpolant::~idwinterpolant()$/;"	f	class:alglib::idwinterpolant
~integer_1d_array	lib/alglib/ap.cpp	/^alglib::integer_1d_array::~integer_1d_array() $/;"	f	class:alglib::integer_1d_array
~integer_2d_array	lib/alglib/ap.cpp	/^alglib::integer_2d_array::~integer_2d_array() $/;"	f	class:alglib::integer_2d_array
~kdtree	lib/alglib/alglibmisc.cpp	/^kdtree::~kdtree()$/;"	f	class:alglib::kdtree
~linearmodel	lib/alglib/dataanalysis.cpp	/^linearmodel::~linearmodel()$/;"	f	class:alglib::linearmodel
~logitmodel	lib/alglib/dataanalysis.cpp	/^logitmodel::~logitmodel()$/;"	f	class:alglib::logitmodel
~lrreport	lib/alglib/dataanalysis.cpp	/^lrreport::~lrreport()$/;"	f	class:alglib::lrreport
~lsfitreport	lib/alglib/interpolation.cpp	/^lsfitreport::~lsfitreport()$/;"	f	class:alglib::lsfitreport
~lsfitstate	lib/alglib/interpolation.cpp	/^lsfitstate::~lsfitstate()$/;"	f	class:alglib::lsfitstate
~matinvreport	lib/alglib/linalg.cpp	/^matinvreport::~matinvreport()$/;"	f	class:alglib::matinvreport
~minasareport	lib/alglib/optimization.cpp	/^minasareport::~minasareport()$/;"	f	class:alglib::minasareport
~minasastate	lib/alglib/optimization.cpp	/^minasastate::~minasastate()$/;"	f	class:alglib::minasastate
~minbleicreport	lib/alglib/optimization.cpp	/^minbleicreport::~minbleicreport()$/;"	f	class:alglib::minbleicreport
~minbleicstate	lib/alglib/optimization.cpp	/^minbleicstate::~minbleicstate()$/;"	f	class:alglib::minbleicstate
~mincgreport	lib/alglib/optimization.cpp	/^mincgreport::~mincgreport()$/;"	f	class:alglib::mincgreport
~mincgstate	lib/alglib/optimization.cpp	/^mincgstate::~mincgstate()$/;"	f	class:alglib::mincgstate
~minlbfgsreport	lib/alglib/optimization.cpp	/^minlbfgsreport::~minlbfgsreport()$/;"	f	class:alglib::minlbfgsreport
~minlbfgsstate	lib/alglib/optimization.cpp	/^minlbfgsstate::~minlbfgsstate()$/;"	f	class:alglib::minlbfgsstate
~minlmreport	lib/alglib/optimization.cpp	/^minlmreport::~minlmreport()$/;"	f	class:alglib::minlmreport
~minlmstate	lib/alglib/optimization.cpp	/^minlmstate::~minlmstate()$/;"	f	class:alglib::minlmstate
~minqpreport	lib/alglib/optimization.cpp	/^minqpreport::~minqpreport()$/;"	f	class:alglib::minqpreport
~minqpstate	lib/alglib/optimization.cpp	/^minqpstate::~minqpstate()$/;"	f	class:alglib::minqpstate
~mlpcvreport	lib/alglib/dataanalysis.cpp	/^mlpcvreport::~mlpcvreport()$/;"	f	class:alglib::mlpcvreport
~mlpensemble	lib/alglib/dataanalysis.cpp	/^mlpensemble::~mlpensemble()$/;"	f	class:alglib::mlpensemble
~mlpreport	lib/alglib/dataanalysis.cpp	/^mlpreport::~mlpreport()$/;"	f	class:alglib::mlpreport
~mnlreport	lib/alglib/dataanalysis.cpp	/^mnlreport::~mnlreport()$/;"	f	class:alglib::mnlreport
~multilayerperceptron	lib/alglib/dataanalysis.cpp	/^multilayerperceptron::~multilayerperceptron()$/;"	f	class:alglib::multilayerperceptron
~naointerface	interfaces/nao/src/naointerface.cpp	/^naointerface::~naointerface() {}$/;"	f	class:naointerface
~nleqreport	lib/alglib/solvers.cpp	/^nleqreport::~nleqreport()$/;"	f	class:alglib::nleqreport
~nleqstate	lib/alglib/solvers.cpp	/^nleqstate::~nleqstate()$/;"	f	class:alglib::nleqstate
~noncopyable	lib/yaml-cpp/include/yaml-cpp/noncopyable.h	/^		~noncopyable() {}$/;"	f	class:YAML::noncopyable
~odesolverreport	lib/alglib/diffequations.cpp	/^odesolverreport::~odesolverreport()$/;"	f	class:alglib::odesolverreport
~odesolverstate	lib/alglib/diffequations.cpp	/^odesolverstate::~odesolverstate()$/;"	f	class:alglib::odesolverstate
~ostream	lib/yaml-cpp/src/ostream.cpp	/^	ostream::~ostream()$/;"	f	class:YAML::ostream
~polynomialfitreport	lib/alglib/interpolation.cpp	/^polynomialfitreport::~polynomialfitreport()$/;"	f	class:alglib::polynomialfitreport
~pspline2interpolant	lib/alglib/interpolation.cpp	/^pspline2interpolant::~pspline2interpolant()$/;"	f	class:alglib::pspline2interpolant
~pspline3interpolant	lib/alglib/interpolation.cpp	/^pspline3interpolant::~pspline3interpolant()$/;"	f	class:alglib::pspline3interpolant
~ptr_stack	lib/yaml-cpp/src/ptr_stack.h	/^	~ptr_stack() { clear(); }$/;"	f	class:ptr_stack
~ptr_vector	lib/yaml-cpp/src/ptr_vector.h	/^		~ptr_vector() { clear(); }$/;"	f	class:YAML::ptr_vector
~real_1d_array	lib/alglib/ap.cpp	/^alglib::real_1d_array::~real_1d_array() $/;"	f	class:alglib::real_1d_array
~real_2d_array	lib/alglib/ap.cpp	/^alglib::real_2d_array::~real_2d_array() $/;"	f	class:alglib::real_2d_array
~spline1dfitreport	lib/alglib/interpolation.cpp	/^spline1dfitreport::~spline1dfitreport()$/;"	f	class:alglib::spline1dfitreport
~spline1dinterpolant	lib/alglib/interpolation.cpp	/^spline1dinterpolant::~spline1dinterpolant()$/;"	f	class:alglib::spline1dinterpolant
~spline2dinterpolant	lib/alglib/interpolation.cpp	/^spline2dinterpolant::~spline2dinterpolant()$/;"	f	class:alglib::spline2dinterpolant
